{
  "Runtime": {
    "sourcePackage": {
      "sourceCode": "LyoqDQoqIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRA0KKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0wNCiogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlYNCiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBDQoqIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUcNCiogQ29weXJpZ2h0IDIwMTYgQXBpemVlDQoqIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElODQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKiovDQoNCi8vIERpc3RyaWJ1dGlvbiBmaWxlIGZvciBSdW50aW1lLmpzIA0KLy8gdmVyc2lvbjogMC41LjANCi8vIExhc3QgYnVpbGQ6IFR1ZSBKdW4gMDcgMjAxNiAxNjozMDo0MyBHTVQrMDIwMCAoQ0VTVCkNCg0KKGZ1bmN0aW9uKGYpe2lmKHR5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIil7bW9kdWxlLmV4cG9ydHM9ZigpfWVsc2UgaWYodHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQpe2RlZmluZShbXSxmKX1lbHNle3ZhciBnO2lmKHR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIil7Zz13aW5kb3d9ZWxzZSBpZih0eXBlb2YgZ2xvYmFsIT09InVuZGVmaW5lZCIpe2c9Z2xvYmFsfWVsc2UgaWYodHlwZW9mIHNlbGYhPT0idW5kZWZpbmVkIil7Zz1zZWxmfWVsc2V7Zz10aGlzfWcuUnVudGltZSA9IGYoKX19KShmdW5jdGlvbigpe3ZhciBkZWZpbmUsbW9kdWxlLGV4cG9ydHM7cmV0dXJuIChmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09ImZ1bmN0aW9uIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcigiQ2Fubm90IGZpbmQgbW9kdWxlICciK28rIiciKTt0aHJvdyBmLmNvZGU9Ik1PRFVMRV9OT1RfRk9VTkQiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09ImZ1bmN0aW9uIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkoezE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGFzbjEgPSBleHBvcnRzOw0KDQphc24xLmJpZ251bSA9IHJlcXVpcmUoJ2JuLmpzJyk7DQoNCmFzbjEuZGVmaW5lID0gcmVxdWlyZSgnLi9hc24xL2FwaScpLmRlZmluZTsNCmFzbjEuYmFzZSA9IHJlcXVpcmUoJy4vYXNuMS9iYXNlJyk7DQphc24xLmNvbnN0YW50cyA9IHJlcXVpcmUoJy4vYXNuMS9jb25zdGFudHMnKTsNCmFzbjEuZGVjb2RlcnMgPSByZXF1aXJlKCcuL2FzbjEvZGVjb2RlcnMnKTsNCmFzbjEuZW5jb2RlcnMgPSByZXF1aXJlKCcuL2FzbjEvZW5jb2RlcnMnKTsNCg0KfSx7Ii4vYXNuMS9hcGkiOjIsIi4vYXNuMS9iYXNlIjo0LCIuL2FzbjEvY29uc3RhbnRzIjo4LCIuL2FzbjEvZGVjb2RlcnMiOjEwLCIuL2FzbjEvZW5jb2RlcnMiOjEzLCJibi5qcyI6NTl9XSwyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBhc24xID0gcmVxdWlyZSgnLi4vYXNuMScpOw0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTsNCg0KdmFyIGFwaSA9IGV4cG9ydHM7DQoNCmFwaS5kZWZpbmUgPSBmdW5jdGlvbiBkZWZpbmUobmFtZSwgYm9keSkgew0KICByZXR1cm4gbmV3IEVudGl0eShuYW1lLCBib2R5KTsNCn07DQoNCmZ1bmN0aW9uIEVudGl0eShuYW1lLCBib2R5KSB7DQogIHRoaXMubmFtZSA9IG5hbWU7DQogIHRoaXMuYm9keSA9IGJvZHk7DQoNCiAgdGhpcy5kZWNvZGVycyA9IHt9Ow0KICB0aGlzLmVuY29kZXJzID0ge307DQp9Ow0KDQpFbnRpdHkucHJvdG90eXBlLl9jcmVhdGVOYW1lZCA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkKGJhc2UpIHsNCiAgdmFyIG5hbWVkOw0KICB0cnkgew0KICAgIG5hbWVkID0gcmVxdWlyZSgndm0nKS5ydW5JblRoaXNDb250ZXh0KA0KICAgICAgJyhmdW5jdGlvbiAnICsgdGhpcy5uYW1lICsgJyhlbnRpdHkpIHtcbicgKw0KICAgICAgJyAgdGhpcy5faW5pdE5hbWVkKGVudGl0eSk7XG4nICsNCiAgICAgICd9KScNCiAgICApOw0KICB9IGNhdGNoIChlKSB7DQogICAgbmFtZWQgPSBmdW5jdGlvbiAoZW50aXR5KSB7DQogICAgICB0aGlzLl9pbml0TmFtZWQoZW50aXR5KTsNCiAgICB9Ow0KICB9DQogIGluaGVyaXRzKG5hbWVkLCBiYXNlKTsNCiAgbmFtZWQucHJvdG90eXBlLl9pbml0TmFtZWQgPSBmdW5jdGlvbiBpbml0bmFtZWQoZW50aXR5KSB7DQogICAgYmFzZS5jYWxsKHRoaXMsIGVudGl0eSk7DQogIH07DQoNCiAgcmV0dXJuIG5ldyBuYW1lZCh0aGlzKTsNCn07DQoNCkVudGl0eS5wcm90b3R5cGUuX2dldERlY29kZXIgPSBmdW5jdGlvbiBfZ2V0RGVjb2RlcihlbmMpIHsNCiAgZW5jID0gZW5jIHx8ICdkZXInOw0KICAvLyBMYXppbHkgY3JlYXRlIGRlY29kZXINCiAgaWYgKCF0aGlzLmRlY29kZXJzLmhhc093blByb3BlcnR5KGVuYykpDQogICAgdGhpcy5kZWNvZGVyc1tlbmNdID0gdGhpcy5fY3JlYXRlTmFtZWQoYXNuMS5kZWNvZGVyc1tlbmNdKTsNCiAgcmV0dXJuIHRoaXMuZGVjb2RlcnNbZW5jXTsNCn07DQoNCkVudGl0eS5wcm90b3R5cGUuZGVjb2RlID0gZnVuY3Rpb24gZGVjb2RlKGRhdGEsIGVuYywgb3B0aW9ucykgew0KICByZXR1cm4gdGhpcy5fZ2V0RGVjb2RlcihlbmMpLmRlY29kZShkYXRhLCBvcHRpb25zKTsNCn07DQoNCkVudGl0eS5wcm90b3R5cGUuX2dldEVuY29kZXIgPSBmdW5jdGlvbiBfZ2V0RW5jb2RlcihlbmMpIHsNCiAgZW5jID0gZW5jIHx8ICdkZXInOw0KICAvLyBMYXppbHkgY3JlYXRlIGVuY29kZXINCiAgaWYgKCF0aGlzLmVuY29kZXJzLmhhc093blByb3BlcnR5KGVuYykpDQogICAgdGhpcy5lbmNvZGVyc1tlbmNdID0gdGhpcy5fY3JlYXRlTmFtZWQoYXNuMS5lbmNvZGVyc1tlbmNdKTsNCiAgcmV0dXJuIHRoaXMuZW5jb2RlcnNbZW5jXTsNCn07DQoNCkVudGl0eS5wcm90b3R5cGUuZW5jb2RlID0gZnVuY3Rpb24gZW5jb2RlKGRhdGEsIGVuYywgLyogaW50ZXJuYWwgKi8gcmVwb3J0ZXIpIHsNCiAgcmV0dXJuIHRoaXMuX2dldEVuY29kZXIoZW5jKS5lbmNvZGUoZGF0YSwgcmVwb3J0ZXIpOw0KfTsNCg0KfSx7Ii4uL2FzbjEiOjEsImluaGVyaXRzIjo1MzcsInZtIjo1ODl9XSwzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7DQp2YXIgUmVwb3J0ZXIgPSByZXF1aXJlKCcuLi9iYXNlJykuUmVwb3J0ZXI7DQp2YXIgQnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJykuQnVmZmVyOw0KDQpmdW5jdGlvbiBEZWNvZGVyQnVmZmVyKGJhc2UsIG9wdGlvbnMpIHsNCiAgUmVwb3J0ZXIuY2FsbCh0aGlzLCBvcHRpb25zKTsNCiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoYmFzZSkpIHsNCiAgICB0aGlzLmVycm9yKCdJbnB1dCBub3QgQnVmZmVyJyk7DQogICAgcmV0dXJuOw0KICB9DQoNCiAgdGhpcy5iYXNlID0gYmFzZTsNCiAgdGhpcy5vZmZzZXQgPSAwOw0KICB0aGlzLmxlbmd0aCA9IGJhc2UubGVuZ3RoOw0KfQ0KaW5oZXJpdHMoRGVjb2RlckJ1ZmZlciwgUmVwb3J0ZXIpOw0KZXhwb3J0cy5EZWNvZGVyQnVmZmVyID0gRGVjb2RlckJ1ZmZlcjsNCg0KRGVjb2RlckJ1ZmZlci5wcm90b3R5cGUuc2F2ZSA9IGZ1bmN0aW9uIHNhdmUoKSB7DQogIHJldHVybiB7IG9mZnNldDogdGhpcy5vZmZzZXQsIHJlcG9ydGVyOiBSZXBvcnRlci5wcm90b3R5cGUuc2F2ZS5jYWxsKHRoaXMpIH07DQp9Ow0KDQpEZWNvZGVyQnVmZmVyLnByb3RvdHlwZS5yZXN0b3JlID0gZnVuY3Rpb24gcmVzdG9yZShzYXZlKSB7DQogIC8vIFJldHVybiBza2lwcGVkIGRhdGENCiAgdmFyIHJlcyA9IG5ldyBEZWNvZGVyQnVmZmVyKHRoaXMuYmFzZSk7DQogIHJlcy5vZmZzZXQgPSBzYXZlLm9mZnNldDsNCiAgcmVzLmxlbmd0aCA9IHRoaXMub2Zmc2V0Ow0KDQogIHRoaXMub2Zmc2V0ID0gc2F2ZS5vZmZzZXQ7DQogIFJlcG9ydGVyLnByb3RvdHlwZS5yZXN0b3JlLmNhbGwodGhpcywgc2F2ZS5yZXBvcnRlcik7DQoNCiAgcmV0dXJuIHJlczsNCn07DQoNCkRlY29kZXJCdWZmZXIucHJvdG90eXBlLmlzRW1wdHkgPSBmdW5jdGlvbiBpc0VtcHR5KCkgew0KICByZXR1cm4gdGhpcy5vZmZzZXQgPT09IHRoaXMubGVuZ3RoOw0KfTsNCg0KRGVjb2RlckJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQ4ID0gZnVuY3Rpb24gcmVhZFVJbnQ4KGZhaWwpIHsNCiAgaWYgKHRoaXMub2Zmc2V0ICsgMSA8PSB0aGlzLmxlbmd0aCkNCiAgICByZXR1cm4gdGhpcy5iYXNlLnJlYWRVSW50OCh0aGlzLm9mZnNldCsrLCB0cnVlKTsNCiAgZWxzZQ0KICAgIHJldHVybiB0aGlzLmVycm9yKGZhaWwgfHwgJ0RlY29kZXJCdWZmZXIgb3ZlcnJ1bicpOw0KfQ0KDQpEZWNvZGVyQnVmZmVyLnByb3RvdHlwZS5za2lwID0gZnVuY3Rpb24gc2tpcChieXRlcywgZmFpbCkgew0KICBpZiAoISh0aGlzLm9mZnNldCArIGJ5dGVzIDw9IHRoaXMubGVuZ3RoKSkNCiAgICByZXR1cm4gdGhpcy5lcnJvcihmYWlsIHx8ICdEZWNvZGVyQnVmZmVyIG92ZXJydW4nKTsNCg0KICB2YXIgcmVzID0gbmV3IERlY29kZXJCdWZmZXIodGhpcy5iYXNlKTsNCg0KICAvLyBTaGFyZSByZXBvcnRlciBzdGF0ZQ0KICByZXMuX3JlcG9ydGVyU3RhdGUgPSB0aGlzLl9yZXBvcnRlclN0YXRlOw0KDQogIHJlcy5vZmZzZXQgPSB0aGlzLm9mZnNldDsNCiAgcmVzLmxlbmd0aCA9IHRoaXMub2Zmc2V0ICsgYnl0ZXM7DQogIHRoaXMub2Zmc2V0ICs9IGJ5dGVzOw0KICByZXR1cm4gcmVzOw0KfQ0KDQpEZWNvZGVyQnVmZmVyLnByb3RvdHlwZS5yYXcgPSBmdW5jdGlvbiByYXcoc2F2ZSkgew0KICByZXR1cm4gdGhpcy5iYXNlLnNsaWNlKHNhdmUgPyBzYXZlLm9mZnNldCA6IHRoaXMub2Zmc2V0LCB0aGlzLmxlbmd0aCk7DQp9DQoNCmZ1bmN0aW9uIEVuY29kZXJCdWZmZXIodmFsdWUsIHJlcG9ydGVyKSB7DQogIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkgew0KICAgIHRoaXMubGVuZ3RoID0gMDsNCiAgICB0aGlzLnZhbHVlID0gdmFsdWUubWFwKGZ1bmN0aW9uKGl0ZW0pIHsNCiAgICAgIGlmICghKGl0ZW0gaW5zdGFuY2VvZiBFbmNvZGVyQnVmZmVyKSkNCiAgICAgICAgaXRlbSA9IG5ldyBFbmNvZGVyQnVmZmVyKGl0ZW0sIHJlcG9ydGVyKTsNCiAgICAgIHRoaXMubGVuZ3RoICs9IGl0ZW0ubGVuZ3RoOw0KICAgICAgcmV0dXJuIGl0ZW07DQogICAgfSwgdGhpcyk7DQogIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykgew0KICAgIGlmICghKDAgPD0gdmFsdWUgJiYgdmFsdWUgPD0gMHhmZikpDQogICAgICByZXR1cm4gcmVwb3J0ZXIuZXJyb3IoJ25vbi1ieXRlIEVuY29kZXJCdWZmZXIgdmFsdWUnKTsNCiAgICB0aGlzLnZhbHVlID0gdmFsdWU7DQogICAgdGhpcy5sZW5ndGggPSAxOw0KICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHsNCiAgICB0aGlzLnZhbHVlID0gdmFsdWU7DQogICAgdGhpcy5sZW5ndGggPSBCdWZmZXIuYnl0ZUxlbmd0aCh2YWx1ZSk7DQogIH0gZWxzZSBpZiAoQnVmZmVyLmlzQnVmZmVyKHZhbHVlKSkgew0KICAgIHRoaXMudmFsdWUgPSB2YWx1ZTsNCiAgICB0aGlzLmxlbmd0aCA9IHZhbHVlLmxlbmd0aDsNCiAgfSBlbHNlIHsNCiAgICByZXR1cm4gcmVwb3J0ZXIuZXJyb3IoJ1Vuc3VwcG9ydGVkIHR5cGU6ICcgKyB0eXBlb2YgdmFsdWUpOw0KICB9DQp9DQpleHBvcnRzLkVuY29kZXJCdWZmZXIgPSBFbmNvZGVyQnVmZmVyOw0KDQpFbmNvZGVyQnVmZmVyLnByb3RvdHlwZS5qb2luID0gZnVuY3Rpb24gam9pbihvdXQsIG9mZnNldCkgew0KICBpZiAoIW91dCkNCiAgICBvdXQgPSBuZXcgQnVmZmVyKHRoaXMubGVuZ3RoKTsNCiAgaWYgKCFvZmZzZXQpDQogICAgb2Zmc2V0ID0gMDsNCg0KICBpZiAodGhpcy5sZW5ndGggPT09IDApDQogICAgcmV0dXJuIG91dDsNCg0KICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlKSkgew0KICAgIHRoaXMudmFsdWUuZm9yRWFjaChmdW5jdGlvbihpdGVtKSB7DQogICAgICBpdGVtLmpvaW4ob3V0LCBvZmZzZXQpOw0KICAgICAgb2Zmc2V0ICs9IGl0ZW0ubGVuZ3RoOw0KICAgIH0pOw0KICB9IGVsc2Ugew0KICAgIGlmICh0eXBlb2YgdGhpcy52YWx1ZSA9PT0gJ251bWJlcicpDQogICAgICBvdXRbb2Zmc2V0XSA9IHRoaXMudmFsdWU7DQogICAgZWxzZSBpZiAodHlwZW9mIHRoaXMudmFsdWUgPT09ICdzdHJpbmcnKQ0KICAgICAgb3V0LndyaXRlKHRoaXMudmFsdWUsIG9mZnNldCk7DQogICAgZWxzZSBpZiAoQnVmZmVyLmlzQnVmZmVyKHRoaXMudmFsdWUpKQ0KICAgICAgdGhpcy52YWx1ZS5jb3B5KG91dCwgb2Zmc2V0KTsNCiAgICBvZmZzZXQgKz0gdGhpcy5sZW5ndGg7DQogIH0NCg0KICByZXR1cm4gb3V0Ow0KfTsNCg0KfSx7Ii4uL2Jhc2UiOjQsImJ1ZmZlciI6OTMsImluaGVyaXRzIjo1Mzd9XSw0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBiYXNlID0gZXhwb3J0czsNCg0KYmFzZS5SZXBvcnRlciA9IHJlcXVpcmUoJy4vcmVwb3J0ZXInKS5SZXBvcnRlcjsNCmJhc2UuRGVjb2RlckJ1ZmZlciA9IHJlcXVpcmUoJy4vYnVmZmVyJykuRGVjb2RlckJ1ZmZlcjsNCmJhc2UuRW5jb2RlckJ1ZmZlciA9IHJlcXVpcmUoJy4vYnVmZmVyJykuRW5jb2RlckJ1ZmZlcjsNCmJhc2UuTm9kZSA9IHJlcXVpcmUoJy4vbm9kZScpOw0KDQp9LHsiLi9idWZmZXIiOjMsIi4vbm9kZSI6NSwiLi9yZXBvcnRlciI6Nn1dLDU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIFJlcG9ydGVyID0gcmVxdWlyZSgnLi4vYmFzZScpLlJlcG9ydGVyOw0KdmFyIEVuY29kZXJCdWZmZXIgPSByZXF1aXJlKCcuLi9iYXNlJykuRW5jb2RlckJ1ZmZlcjsNCnZhciBEZWNvZGVyQnVmZmVyID0gcmVxdWlyZSgnLi4vYmFzZScpLkRlY29kZXJCdWZmZXI7DQp2YXIgYXNzZXJ0ID0gcmVxdWlyZSgnbWluaW1hbGlzdGljLWFzc2VydCcpOw0KDQovLyBTdXBwb3J0ZWQgdGFncw0KdmFyIHRhZ3MgPSBbDQogICdzZXEnLCAnc2Vxb2YnLCAnc2V0JywgJ3NldG9mJywgJ29iamlkJywgJ2Jvb2wnLA0KICAnZ2VudGltZScsICd1dGN0aW1lJywgJ251bGxfJywgJ2VudW0nLCAnaW50JywNCiAgJ2JpdHN0cicsICdibXBzdHInLCAnY2hhcnN0cicsICdnZW5zdHInLCAnZ3JhcGhzdHInLCAnaWE1c3RyJywgJ2lzbzY0NnN0cicsDQogICdudW1zdHInLCAnb2N0c3RyJywgJ3ByaW50c3RyJywgJ3Q2MXN0cicsICd1bmlzdHInLCAndXRmOHN0cicsICd2aWRlb3N0cicNCl07DQoNCi8vIFB1YmxpYyBtZXRob2RzIGxpc3QNCnZhciBtZXRob2RzID0gWw0KICAna2V5JywgJ29iaicsICd1c2UnLCAnb3B0aW9uYWwnLCAnZXhwbGljaXQnLCAnaW1wbGljaXQnLCAnZGVmJywgJ2Nob2ljZScsDQogICdhbnknLCAnY29udGFpbnMnDQpdLmNvbmNhdCh0YWdzKTsNCg0KLy8gT3ZlcnJpZGVkIG1ldGhvZHMgbGlzdA0KdmFyIG92ZXJyaWRlZCA9IFsNCiAgJ19wZWVrVGFnJywgJ19kZWNvZGVUYWcnLCAnX3VzZScsDQogICdfZGVjb2RlU3RyJywgJ19kZWNvZGVPYmppZCcsICdfZGVjb2RlVGltZScsDQogICdfZGVjb2RlTnVsbCcsICdfZGVjb2RlSW50JywgJ19kZWNvZGVCb29sJywgJ19kZWNvZGVMaXN0JywNCg0KICAnX2VuY29kZUNvbXBvc2l0ZScsICdfZW5jb2RlU3RyJywgJ19lbmNvZGVPYmppZCcsICdfZW5jb2RlVGltZScsDQogICdfZW5jb2RlTnVsbCcsICdfZW5jb2RlSW50JywgJ19lbmNvZGVCb29sJw0KXTsNCg0KZnVuY3Rpb24gTm9kZShlbmMsIHBhcmVudCkgew0KICB2YXIgc3RhdGUgPSB7fTsNCiAgdGhpcy5fYmFzZVN0YXRlID0gc3RhdGU7DQoNCiAgc3RhdGUuZW5jID0gZW5jOw0KDQogIHN0YXRlLnBhcmVudCA9IHBhcmVudCB8fCBudWxsOw0KICBzdGF0ZS5jaGlsZHJlbiA9IG51bGw7DQoNCiAgLy8gU3RhdGUNCiAgc3RhdGUudGFnID0gbnVsbDsNCiAgc3RhdGUuYXJncyA9IG51bGw7DQogIHN0YXRlLnJldmVyc2VBcmdzID0gbnVsbDsNCiAgc3RhdGUuY2hvaWNlID0gbnVsbDsNCiAgc3RhdGUub3B0aW9uYWwgPSBmYWxzZTsNCiAgc3RhdGUuYW55ID0gZmFsc2U7DQogIHN0YXRlLm9iaiA9IGZhbHNlOw0KICBzdGF0ZS51c2UgPSBudWxsOw0KICBzdGF0ZS51c2VEZWNvZGVyID0gbnVsbDsNCiAgc3RhdGUua2V5ID0gbnVsbDsNCiAgc3RhdGVbJ2RlZmF1bHQnXSA9IG51bGw7DQogIHN0YXRlLmV4cGxpY2l0ID0gbnVsbDsNCiAgc3RhdGUuaW1wbGljaXQgPSBudWxsOw0KICBzdGF0ZS5jb250YWlucyA9IG51bGw7DQoNCiAgLy8gU2hvdWxkIGNyZWF0ZSBuZXcgaW5zdGFuY2Ugb24gZWFjaCBtZXRob2QNCiAgaWYgKCFzdGF0ZS5wYXJlbnQpIHsNCiAgICBzdGF0ZS5jaGlsZHJlbiA9IFtdOw0KICAgIHRoaXMuX3dyYXAoKTsNCiAgfQ0KfQ0KbW9kdWxlLmV4cG9ydHMgPSBOb2RlOw0KDQp2YXIgc3RhdGVQcm9wcyA9IFsNCiAgJ2VuYycsICdwYXJlbnQnLCAnY2hpbGRyZW4nLCAndGFnJywgJ2FyZ3MnLCAncmV2ZXJzZUFyZ3MnLCAnY2hvaWNlJywNCiAgJ29wdGlvbmFsJywgJ2FueScsICdvYmonLCAndXNlJywgJ2FsdGVyZWRVc2UnLCAna2V5JywgJ2RlZmF1bHQnLCAnZXhwbGljaXQnLA0KICAnaW1wbGljaXQnDQpdOw0KDQpOb2RlLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uIGNsb25lKCkgew0KICB2YXIgc3RhdGUgPSB0aGlzLl9iYXNlU3RhdGU7DQogIHZhciBjc3RhdGUgPSB7fTsNCiAgc3RhdGVQcm9wcy5mb3JFYWNoKGZ1bmN0aW9uKHByb3ApIHsNCiAgICBjc3RhdGVbcHJvcF0gPSBzdGF0ZVtwcm9wXTsNCiAgfSk7DQogIHZhciByZXMgPSBuZXcgdGhpcy5jb25zdHJ1Y3Rvcihjc3RhdGUucGFyZW50KTsNCiAgcmVzLl9iYXNlU3RhdGUgPSBjc3RhdGU7DQogIHJldHVybiByZXM7DQp9Ow0KDQpOb2RlLnByb3RvdHlwZS5fd3JhcCA9IGZ1bmN0aW9uIHdyYXAoKSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX2Jhc2VTdGF0ZTsNCiAgbWV0aG9kcy5mb3JFYWNoKGZ1bmN0aW9uKG1ldGhvZCkgew0KICAgIHRoaXNbbWV0aG9kXSA9IGZ1bmN0aW9uIF93cmFwcGVkTWV0aG9kKCkgew0KICAgICAgdmFyIGNsb25lID0gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcyk7DQogICAgICBzdGF0ZS5jaGlsZHJlbi5wdXNoKGNsb25lKTsNCiAgICAgIHJldHVybiBjbG9uZVttZXRob2RdLmFwcGx5KGNsb25lLCBhcmd1bWVudHMpOw0KICAgIH07DQogIH0sIHRoaXMpOw0KfTsNCg0KTm9kZS5wcm90b3R5cGUuX2luaXQgPSBmdW5jdGlvbiBpbml0KGJvZHkpIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fYmFzZVN0YXRlOw0KDQogIGFzc2VydChzdGF0ZS5wYXJlbnQgPT09IG51bGwpOw0KICBib2R5LmNhbGwodGhpcyk7DQoNCiAgLy8gRmlsdGVyIGNoaWxkcmVuDQogIHN0YXRlLmNoaWxkcmVuID0gc3RhdGUuY2hpbGRyZW4uZmlsdGVyKGZ1bmN0aW9uKGNoaWxkKSB7DQogICAgcmV0dXJuIGNoaWxkLl9iYXNlU3RhdGUucGFyZW50ID09PSB0aGlzOw0KICB9LCB0aGlzKTsNCiAgYXNzZXJ0LmVxdWFsKHN0YXRlLmNoaWxkcmVuLmxlbmd0aCwgMSwgJ1Jvb3Qgbm9kZSBjYW4gaGF2ZSBvbmx5IG9uZSBjaGlsZCcpOw0KfTsNCg0KTm9kZS5wcm90b3R5cGUuX3VzZUFyZ3MgPSBmdW5jdGlvbiB1c2VBcmdzKGFyZ3MpIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fYmFzZVN0YXRlOw0KDQogIC8vIEZpbHRlciBjaGlsZHJlbiBhbmQgYXJncw0KICB2YXIgY2hpbGRyZW4gPSBhcmdzLmZpbHRlcihmdW5jdGlvbihhcmcpIHsNCiAgICByZXR1cm4gYXJnIGluc3RhbmNlb2YgdGhpcy5jb25zdHJ1Y3RvcjsNCiAgfSwgdGhpcyk7DQogIGFyZ3MgPSBhcmdzLmZpbHRlcihmdW5jdGlvbihhcmcpIHsNCiAgICByZXR1cm4gIShhcmcgaW5zdGFuY2VvZiB0aGlzLmNvbnN0cnVjdG9yKTsNCiAgfSwgdGhpcyk7DQoNCiAgaWYgKGNoaWxkcmVuLmxlbmd0aCAhPT0gMCkgew0KICAgIGFzc2VydChzdGF0ZS5jaGlsZHJlbiA9PT0gbnVsbCk7DQogICAgc3RhdGUuY2hpbGRyZW4gPSBjaGlsZHJlbjsNCg0KICAgIC8vIFJlcGxhY2UgcGFyZW50IHRvIG1haW50YWluIGJhY2t3YXJkIGxpbmsNCiAgICBjaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkKSB7DQogICAgICBjaGlsZC5fYmFzZVN0YXRlLnBhcmVudCA9IHRoaXM7DQogICAgfSwgdGhpcyk7DQogIH0NCiAgaWYgKGFyZ3MubGVuZ3RoICE9PSAwKSB7DQogICAgYXNzZXJ0KHN0YXRlLmFyZ3MgPT09IG51bGwpOw0KICAgIHN0YXRlLmFyZ3MgPSBhcmdzOw0KICAgIHN0YXRlLnJldmVyc2VBcmdzID0gYXJncy5tYXAoZnVuY3Rpb24oYXJnKSB7DQogICAgICBpZiAodHlwZW9mIGFyZyAhPT0gJ29iamVjdCcgfHwgYXJnLmNvbnN0cnVjdG9yICE9PSBPYmplY3QpDQogICAgICAgIHJldHVybiBhcmc7DQoNCiAgICAgIHZhciByZXMgPSB7fTsNCiAgICAgIE9iamVjdC5rZXlzKGFyZykuZm9yRWFjaChmdW5jdGlvbihrZXkpIHsNCiAgICAgICAgaWYgKGtleSA9PSAoa2V5IHwgMCkpDQogICAgICAgICAga2V5IHw9IDA7DQogICAgICAgIHZhciB2YWx1ZSA9IGFyZ1trZXldOw0KICAgICAgICByZXNbdmFsdWVdID0ga2V5Ow0KICAgICAgfSk7DQogICAgICByZXR1cm4gcmVzOw0KICAgIH0pOw0KICB9DQp9Ow0KDQovLw0KLy8gT3ZlcnJpZGVkIG1ldGhvZHMNCi8vDQoNCm92ZXJyaWRlZC5mb3JFYWNoKGZ1bmN0aW9uKG1ldGhvZCkgew0KICBOb2RlLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24gX292ZXJyaWRlZCgpIHsNCiAgICB2YXIgc3RhdGUgPSB0aGlzLl9iYXNlU3RhdGU7DQogICAgdGhyb3cgbmV3IEVycm9yKG1ldGhvZCArICcgbm90IGltcGxlbWVudGVkIGZvciBlbmNvZGluZzogJyArIHN0YXRlLmVuYyk7DQogIH07DQp9KTsNCg0KLy8NCi8vIFB1YmxpYyBtZXRob2RzDQovLw0KDQp0YWdzLmZvckVhY2goZnVuY3Rpb24odGFnKSB7DQogIE5vZGUucHJvdG90eXBlW3RhZ10gPSBmdW5jdGlvbiBfdGFnTWV0aG9kKCkgew0KICAgIHZhciBzdGF0ZSA9IHRoaXMuX2Jhc2VTdGF0ZTsNCiAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7DQoNCiAgICBhc3NlcnQoc3RhdGUudGFnID09PSBudWxsKTsNCiAgICBzdGF0ZS50YWcgPSB0YWc7DQoNCiAgICB0aGlzLl91c2VBcmdzKGFyZ3MpOw0KDQogICAgcmV0dXJuIHRoaXM7DQogIH07DQp9KTsNCg0KTm9kZS5wcm90b3R5cGUudXNlID0gZnVuY3Rpb24gdXNlKGl0ZW0pIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fYmFzZVN0YXRlOw0KDQogIGFzc2VydChzdGF0ZS51c2UgPT09IG51bGwpOw0KICBzdGF0ZS51c2UgPSBpdGVtOw0KDQogIHJldHVybiB0aGlzOw0KfTsNCg0KTm9kZS5wcm90b3R5cGUub3B0aW9uYWwgPSBmdW5jdGlvbiBvcHRpb25hbCgpIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fYmFzZVN0YXRlOw0KDQogIHN0YXRlLm9wdGlvbmFsID0gdHJ1ZTsNCg0KICByZXR1cm4gdGhpczsNCn07DQoNCk5vZGUucHJvdG90eXBlLmRlZiA9IGZ1bmN0aW9uIGRlZih2YWwpIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fYmFzZVN0YXRlOw0KDQogIGFzc2VydChzdGF0ZVsnZGVmYXVsdCddID09PSBudWxsKTsNCiAgc3RhdGVbJ2RlZmF1bHQnXSA9IHZhbDsNCiAgc3RhdGUub3B0aW9uYWwgPSB0cnVlOw0KDQogIHJldHVybiB0aGlzOw0KfTsNCg0KTm9kZS5wcm90b3R5cGUuZXhwbGljaXQgPSBmdW5jdGlvbiBleHBsaWNpdChudW0pIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fYmFzZVN0YXRlOw0KDQogIGFzc2VydChzdGF0ZS5leHBsaWNpdCA9PT0gbnVsbCAmJiBzdGF0ZS5pbXBsaWNpdCA9PT0gbnVsbCk7DQogIHN0YXRlLmV4cGxpY2l0ID0gbnVtOw0KDQogIHJldHVybiB0aGlzOw0KfTsNCg0KTm9kZS5wcm90b3R5cGUuaW1wbGljaXQgPSBmdW5jdGlvbiBpbXBsaWNpdChudW0pIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fYmFzZVN0YXRlOw0KDQogIGFzc2VydChzdGF0ZS5leHBsaWNpdCA9PT0gbnVsbCAmJiBzdGF0ZS5pbXBsaWNpdCA9PT0gbnVsbCk7DQogIHN0YXRlLmltcGxpY2l0ID0gbnVtOw0KDQogIHJldHVybiB0aGlzOw0KfTsNCg0KTm9kZS5wcm90b3R5cGUub2JqID0gZnVuY3Rpb24gb2JqKCkgew0KICB2YXIgc3RhdGUgPSB0aGlzLl9iYXNlU3RhdGU7DQogIHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTsNCg0KICBzdGF0ZS5vYmogPSB0cnVlOw0KDQogIGlmIChhcmdzLmxlbmd0aCAhPT0gMCkNCiAgICB0aGlzLl91c2VBcmdzKGFyZ3MpOw0KDQogIHJldHVybiB0aGlzOw0KfTsNCg0KTm9kZS5wcm90b3R5cGUua2V5ID0gZnVuY3Rpb24ga2V5KG5ld0tleSkgew0KICB2YXIgc3RhdGUgPSB0aGlzLl9iYXNlU3RhdGU7DQoNCiAgYXNzZXJ0KHN0YXRlLmtleSA9PT0gbnVsbCk7DQogIHN0YXRlLmtleSA9IG5ld0tleTsNCg0KICByZXR1cm4gdGhpczsNCn07DQoNCk5vZGUucHJvdG90eXBlLmFueSA9IGZ1bmN0aW9uIGFueSgpIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fYmFzZVN0YXRlOw0KDQogIHN0YXRlLmFueSA9IHRydWU7DQoNCiAgcmV0dXJuIHRoaXM7DQp9Ow0KDQpOb2RlLnByb3RvdHlwZS5jaG9pY2UgPSBmdW5jdGlvbiBjaG9pY2Uob2JqKSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX2Jhc2VTdGF0ZTsNCg0KICBhc3NlcnQoc3RhdGUuY2hvaWNlID09PSBudWxsKTsNCiAgc3RhdGUuY2hvaWNlID0gb2JqOw0KICB0aGlzLl91c2VBcmdzKE9iamVjdC5rZXlzKG9iaikubWFwKGZ1bmN0aW9uKGtleSkgew0KICAgIHJldHVybiBvYmpba2V5XTsNCiAgfSkpOw0KDQogIHJldHVybiB0aGlzOw0KfTsNCg0KTm9kZS5wcm90b3R5cGUuY29udGFpbnMgPSBmdW5jdGlvbiBjb250YWlucyhpdGVtKSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX2Jhc2VTdGF0ZTsNCg0KICBhc3NlcnQoc3RhdGUudXNlID09PSBudWxsKTsNCiAgc3RhdGUuY29udGFpbnMgPSBpdGVtOw0KDQogIHJldHVybiB0aGlzOw0KfTsNCg0KLy8NCi8vIERlY29kaW5nDQovLw0KDQpOb2RlLnByb3RvdHlwZS5fZGVjb2RlID0gZnVuY3Rpb24gZGVjb2RlKGlucHV0KSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX2Jhc2VTdGF0ZTsNCg0KICAvLyBEZWNvZGUgcm9vdCBub2RlDQogIGlmIChzdGF0ZS5wYXJlbnQgPT09IG51bGwpDQogICAgcmV0dXJuIGlucHV0LndyYXBSZXN1bHQoc3RhdGUuY2hpbGRyZW5bMF0uX2RlY29kZShpbnB1dCkpOw0KDQogIHZhciByZXN1bHQgPSBzdGF0ZVsnZGVmYXVsdCddOw0KICB2YXIgcHJlc2VudCA9IHRydWU7DQoNCiAgdmFyIHByZXZLZXk7DQogIGlmIChzdGF0ZS5rZXkgIT09IG51bGwpDQogICAgcHJldktleSA9IGlucHV0LmVudGVyS2V5KHN0YXRlLmtleSk7DQoNCiAgLy8gQ2hlY2sgaWYgdGFnIGlzIHRoZXJlDQogIGlmIChzdGF0ZS5vcHRpb25hbCkgew0KICAgIHZhciB0YWcgPSBudWxsOw0KICAgIGlmIChzdGF0ZS5leHBsaWNpdCAhPT0gbnVsbCkNCiAgICAgIHRhZyA9IHN0YXRlLmV4cGxpY2l0Ow0KICAgIGVsc2UgaWYgKHN0YXRlLmltcGxpY2l0ICE9PSBudWxsKQ0KICAgICAgdGFnID0gc3RhdGUuaW1wbGljaXQ7DQogICAgZWxzZSBpZiAoc3RhdGUudGFnICE9PSBudWxsKQ0KICAgICAgdGFnID0gc3RhdGUudGFnOw0KDQogICAgaWYgKHRhZyA9PT0gbnVsbCAmJiAhc3RhdGUuYW55KSB7DQogICAgICAvLyBUcmlhbCBhbmQgRXJyb3INCiAgICAgIHZhciBzYXZlID0gaW5wdXQuc2F2ZSgpOw0KICAgICAgdHJ5IHsNCiAgICAgICAgaWYgKHN0YXRlLmNob2ljZSA9PT0gbnVsbCkNCiAgICAgICAgICB0aGlzLl9kZWNvZGVHZW5lcmljKHN0YXRlLnRhZywgaW5wdXQpOw0KICAgICAgICBlbHNlDQogICAgICAgICAgdGhpcy5fZGVjb2RlQ2hvaWNlKGlucHV0KTsNCiAgICAgICAgcHJlc2VudCA9IHRydWU7DQogICAgICB9IGNhdGNoIChlKSB7DQogICAgICAgIHByZXNlbnQgPSBmYWxzZTsNCiAgICAgIH0NCiAgICAgIGlucHV0LnJlc3RvcmUoc2F2ZSk7DQogICAgfSBlbHNlIHsNCiAgICAgIHByZXNlbnQgPSB0aGlzLl9wZWVrVGFnKGlucHV0LCB0YWcsIHN0YXRlLmFueSk7DQoNCiAgICAgIGlmIChpbnB1dC5pc0Vycm9yKHByZXNlbnQpKQ0KICAgICAgICByZXR1cm4gcHJlc2VudDsNCiAgICB9DQogIH0NCg0KICAvLyBQdXNoIG9iamVjdCBvbiBzdGFjaw0KICB2YXIgcHJldk9iajsNCiAgaWYgKHN0YXRlLm9iaiAmJiBwcmVzZW50KQ0KICAgIHByZXZPYmogPSBpbnB1dC5lbnRlck9iamVjdCgpOw0KDQogIGlmIChwcmVzZW50KSB7DQogICAgLy8gVW53cmFwIGV4cGxpY2l0IHZhbHVlcw0KICAgIGlmIChzdGF0ZS5leHBsaWNpdCAhPT0gbnVsbCkgew0KICAgICAgdmFyIGV4cGxpY2l0ID0gdGhpcy5fZGVjb2RlVGFnKGlucHV0LCBzdGF0ZS5leHBsaWNpdCk7DQogICAgICBpZiAoaW5wdXQuaXNFcnJvcihleHBsaWNpdCkpDQogICAgICAgIHJldHVybiBleHBsaWNpdDsNCiAgICAgIGlucHV0ID0gZXhwbGljaXQ7DQogICAgfQ0KDQogICAgLy8gVW53cmFwIGltcGxpY2l0IGFuZCBub3JtYWwgdmFsdWVzDQogICAgaWYgKHN0YXRlLnVzZSA9PT0gbnVsbCAmJiBzdGF0ZS5jaG9pY2UgPT09IG51bGwpIHsNCiAgICAgIGlmIChzdGF0ZS5hbnkpDQogICAgICAgIHZhciBzYXZlID0gaW5wdXQuc2F2ZSgpOw0KICAgICAgdmFyIGJvZHkgPSB0aGlzLl9kZWNvZGVUYWcoDQogICAgICAgIGlucHV0LA0KICAgICAgICBzdGF0ZS5pbXBsaWNpdCAhPT0gbnVsbCA/IHN0YXRlLmltcGxpY2l0IDogc3RhdGUudGFnLA0KICAgICAgICBzdGF0ZS5hbnkNCiAgICAgICk7DQogICAgICBpZiAoaW5wdXQuaXNFcnJvcihib2R5KSkNCiAgICAgICAgcmV0dXJuIGJvZHk7DQoNCiAgICAgIGlmIChzdGF0ZS5hbnkpDQogICAgICAgIHJlc3VsdCA9IGlucHV0LnJhdyhzYXZlKTsNCiAgICAgIGVsc2UNCiAgICAgICAgaW5wdXQgPSBib2R5Ow0KICAgIH0NCg0KICAgIC8vIFNlbGVjdCBwcm9wZXIgbWV0aG9kIGZvciB0YWcNCiAgICBpZiAoc3RhdGUuYW55KQ0KICAgICAgcmVzdWx0ID0gcmVzdWx0Ow0KICAgIGVsc2UgaWYgKHN0YXRlLmNob2ljZSA9PT0gbnVsbCkNCiAgICAgIHJlc3VsdCA9IHRoaXMuX2RlY29kZUdlbmVyaWMoc3RhdGUudGFnLCBpbnB1dCk7DQogICAgZWxzZQ0KICAgICAgcmVzdWx0ID0gdGhpcy5fZGVjb2RlQ2hvaWNlKGlucHV0KTsNCg0KICAgIGlmIChpbnB1dC5pc0Vycm9yKHJlc3VsdCkpDQogICAgICByZXR1cm4gcmVzdWx0Ow0KDQogICAgLy8gRGVjb2RlIGNoaWxkcmVuDQogICAgaWYgKCFzdGF0ZS5hbnkgJiYgc3RhdGUuY2hvaWNlID09PSBudWxsICYmIHN0YXRlLmNoaWxkcmVuICE9PSBudWxsKSB7DQogICAgICBzdGF0ZS5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIGRlY29kZUNoaWxkcmVuKGNoaWxkKSB7DQogICAgICAgIC8vIE5PVEU6IFdlIGFyZSBpZ25vcmluZyBlcnJvcnMgaGVyZSwgdG8gbGV0IHBhcnNlciBjb250aW51ZSB3aXRoIG90aGVyDQogICAgICAgIC8vIHBhcnRzIG9mIGVuY29kZWQgZGF0YQ0KICAgICAgICBjaGlsZC5fZGVjb2RlKGlucHV0KTsNCiAgICAgIH0pOw0KICAgIH0NCg0KICAgIC8vIERlY29kZSBjb250YWluZWQvZW5jb2RlZCBieSBzY2hlbWEsIG9ubHkgaW4gYml0IG9yIG9jdGV0IHN0cmluZ3MNCiAgICBpZiAoc3RhdGUuY29udGFpbnMgJiYgKHN0YXRlLnRhZyA9PT0gJ29jdHN0cicgfHwgc3RhdGUudGFnID09PSAnYml0c3RyJykpIHsNCiAgICAgIHZhciBkYXRhID0gbmV3IERlY29kZXJCdWZmZXIocmVzdWx0KTsNCiAgICAgIHJlc3VsdCA9IHRoaXMuX2dldFVzZShzdGF0ZS5jb250YWlucywgaW5wdXQuX3JlcG9ydGVyU3RhdGUub2JqKS5fZGVjb2RlKGRhdGEpOw0KICAgIH0NCiAgfQ0KDQogIC8vIFBvcCBvYmplY3QNCiAgaWYgKHN0YXRlLm9iaiAmJiBwcmVzZW50KQ0KICAgIHJlc3VsdCA9IGlucHV0LmxlYXZlT2JqZWN0KHByZXZPYmopOw0KDQogIC8vIFNldCBrZXkNCiAgaWYgKHN0YXRlLmtleSAhPT0gbnVsbCAmJiAocmVzdWx0ICE9PSBudWxsIHx8IHByZXNlbnQgPT09IHRydWUpKQ0KICAgIGlucHV0LmxlYXZlS2V5KHByZXZLZXksIHN0YXRlLmtleSwgcmVzdWx0KTsNCg0KICByZXR1cm4gcmVzdWx0Ow0KfTsNCg0KTm9kZS5wcm90b3R5cGUuX2RlY29kZUdlbmVyaWMgPSBmdW5jdGlvbiBkZWNvZGVHZW5lcmljKHRhZywgaW5wdXQpIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fYmFzZVN0YXRlOw0KDQogIGlmICh0YWcgPT09ICdzZXEnIHx8IHRhZyA9PT0gJ3NldCcpDQogICAgcmV0dXJuIG51bGw7DQogIGlmICh0YWcgPT09ICdzZXFvZicgfHwgdGFnID09PSAnc2V0b2YnKQ0KICAgIHJldHVybiB0aGlzLl9kZWNvZGVMaXN0KGlucHV0LCB0YWcsIHN0YXRlLmFyZ3NbMF0pOw0KICBlbHNlIGlmICgvc3RyJC8udGVzdCh0YWcpKQ0KICAgIHJldHVybiB0aGlzLl9kZWNvZGVTdHIoaW5wdXQsIHRhZyk7DQogIGVsc2UgaWYgKHRhZyA9PT0gJ29iamlkJyAmJiBzdGF0ZS5hcmdzKQ0KICAgIHJldHVybiB0aGlzLl9kZWNvZGVPYmppZChpbnB1dCwgc3RhdGUuYXJnc1swXSwgc3RhdGUuYXJnc1sxXSk7DQogIGVsc2UgaWYgKHRhZyA9PT0gJ29iamlkJykNCiAgICByZXR1cm4gdGhpcy5fZGVjb2RlT2JqaWQoaW5wdXQsIG51bGwsIG51bGwpOw0KICBlbHNlIGlmICh0YWcgPT09ICdnZW50aW1lJyB8fCB0YWcgPT09ICd1dGN0aW1lJykNCiAgICByZXR1cm4gdGhpcy5fZGVjb2RlVGltZShpbnB1dCwgdGFnKTsNCiAgZWxzZSBpZiAodGFnID09PSAnbnVsbF8nKQ0KICAgIHJldHVybiB0aGlzLl9kZWNvZGVOdWxsKGlucHV0KTsNCiAgZWxzZSBpZiAodGFnID09PSAnYm9vbCcpDQogICAgcmV0dXJuIHRoaXMuX2RlY29kZUJvb2woaW5wdXQpOw0KICBlbHNlIGlmICh0YWcgPT09ICdpbnQnIHx8IHRhZyA9PT0gJ2VudW0nKQ0KICAgIHJldHVybiB0aGlzLl9kZWNvZGVJbnQoaW5wdXQsIHN0YXRlLmFyZ3MgJiYgc3RhdGUuYXJnc1swXSk7DQogIGVsc2UgaWYgKHN0YXRlLnVzZSAhPT0gbnVsbCkNCiAgICByZXR1cm4gdGhpcy5fZ2V0VXNlKHN0YXRlLnVzZSwgaW5wdXQuX3JlcG9ydGVyU3RhdGUub2JqKS5fZGVjb2RlKGlucHV0KTsNCiAgZWxzZQ0KICAgIHJldHVybiBpbnB1dC5lcnJvcigndW5rbm93biB0YWc6ICcgKyB0YWcpOw0KfTsNCg0KTm9kZS5wcm90b3R5cGUuX2dldFVzZSA9IGZ1bmN0aW9uIF9nZXRVc2UoZW50aXR5LCBvYmopIHsNCg0KICB2YXIgc3RhdGUgPSB0aGlzLl9iYXNlU3RhdGU7DQogIC8vIENyZWF0ZSBhbHRlcmVkIHVzZSBkZWNvZGVyIGlmIGltcGxpY2l0IGlzIHNldA0KICBzdGF0ZS51c2VEZWNvZGVyID0gdGhpcy5fdXNlKGVudGl0eSwgb2JqKTsNCiAgYXNzZXJ0KHN0YXRlLnVzZURlY29kZXIuX2Jhc2VTdGF0ZS5wYXJlbnQgPT09IG51bGwpOw0KICBzdGF0ZS51c2VEZWNvZGVyID0gc3RhdGUudXNlRGVjb2Rlci5fYmFzZVN0YXRlLmNoaWxkcmVuWzBdOw0KICBpZiAoc3RhdGUuaW1wbGljaXQgIT09IHN0YXRlLnVzZURlY29kZXIuX2Jhc2VTdGF0ZS5pbXBsaWNpdCkgew0KICAgIHN0YXRlLnVzZURlY29kZXIgPSBzdGF0ZS51c2VEZWNvZGVyLmNsb25lKCk7DQogICAgc3RhdGUudXNlRGVjb2Rlci5fYmFzZVN0YXRlLmltcGxpY2l0ID0gc3RhdGUuaW1wbGljaXQ7DQogIH0NCiAgcmV0dXJuIHN0YXRlLnVzZURlY29kZXI7DQp9Ow0KDQpOb2RlLnByb3RvdHlwZS5fZGVjb2RlQ2hvaWNlID0gZnVuY3Rpb24gZGVjb2RlQ2hvaWNlKGlucHV0KSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX2Jhc2VTdGF0ZTsNCiAgdmFyIHJlc3VsdCA9IG51bGw7DQogIHZhciBtYXRjaCA9IGZhbHNlOw0KDQogIE9iamVjdC5rZXlzKHN0YXRlLmNob2ljZSkuc29tZShmdW5jdGlvbihrZXkpIHsNCiAgICB2YXIgc2F2ZSA9IGlucHV0LnNhdmUoKTsNCiAgICB2YXIgbm9kZSA9IHN0YXRlLmNob2ljZVtrZXldOw0KICAgIHRyeSB7DQogICAgICB2YXIgdmFsdWUgPSBub2RlLl9kZWNvZGUoaW5wdXQpOw0KICAgICAgaWYgKGlucHV0LmlzRXJyb3IodmFsdWUpKQ0KICAgICAgICByZXR1cm4gZmFsc2U7DQoNCiAgICAgIHJlc3VsdCA9IHsgdHlwZToga2V5LCB2YWx1ZTogdmFsdWUgfTsNCiAgICAgIG1hdGNoID0gdHJ1ZTsNCiAgICB9IGNhdGNoIChlKSB7DQogICAgICBpbnB1dC5yZXN0b3JlKHNhdmUpOw0KICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCiAgICByZXR1cm4gdHJ1ZTsNCiAgfSwgdGhpcyk7DQoNCiAgaWYgKCFtYXRjaCkNCiAgICByZXR1cm4gaW5wdXQuZXJyb3IoJ0Nob2ljZSBub3QgbWF0Y2hlZCcpOw0KDQogIHJldHVybiByZXN1bHQ7DQp9Ow0KDQovLw0KLy8gRW5jb2RpbmcNCi8vDQoNCk5vZGUucHJvdG90eXBlLl9jcmVhdGVFbmNvZGVyQnVmZmVyID0gZnVuY3Rpb24gY3JlYXRlRW5jb2RlckJ1ZmZlcihkYXRhKSB7DQogIHJldHVybiBuZXcgRW5jb2RlckJ1ZmZlcihkYXRhLCB0aGlzLnJlcG9ydGVyKTsNCn07DQoNCk5vZGUucHJvdG90eXBlLl9lbmNvZGUgPSBmdW5jdGlvbiBlbmNvZGUoZGF0YSwgcmVwb3J0ZXIsIHBhcmVudCkgew0KICB2YXIgc3RhdGUgPSB0aGlzLl9iYXNlU3RhdGU7DQogIGlmIChzdGF0ZVsnZGVmYXVsdCddICE9PSBudWxsICYmIHN0YXRlWydkZWZhdWx0J10gPT09IGRhdGEpDQogICAgcmV0dXJuOw0KDQogIHZhciByZXN1bHQgPSB0aGlzLl9lbmNvZGVWYWx1ZShkYXRhLCByZXBvcnRlciwgcGFyZW50KTsNCiAgaWYgKHJlc3VsdCA9PT0gdW5kZWZpbmVkKQ0KICAgIHJldHVybjsNCg0KICBpZiAodGhpcy5fc2tpcERlZmF1bHQocmVzdWx0LCByZXBvcnRlciwgcGFyZW50KSkNCiAgICByZXR1cm47DQoNCiAgcmV0dXJuIHJlc3VsdDsNCn07DQoNCk5vZGUucHJvdG90eXBlLl9lbmNvZGVWYWx1ZSA9IGZ1bmN0aW9uIGVuY29kZShkYXRhLCByZXBvcnRlciwgcGFyZW50KSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX2Jhc2VTdGF0ZTsNCg0KICAvLyBEZWNvZGUgcm9vdCBub2RlDQogIGlmIChzdGF0ZS5wYXJlbnQgPT09IG51bGwpDQogICAgcmV0dXJuIHN0YXRlLmNoaWxkcmVuWzBdLl9lbmNvZGUoZGF0YSwgcmVwb3J0ZXIgfHwgbmV3IFJlcG9ydGVyKCkpOw0KDQogIHZhciByZXN1bHQgPSBudWxsOw0KDQogIC8vIFNldCByZXBvcnRlciB0byBzaGFyZSBpdCB3aXRoIGEgY2hpbGQgY2xhc3MNCiAgdGhpcy5yZXBvcnRlciA9IHJlcG9ydGVyOw0KDQogIC8vIENoZWNrIGlmIGRhdGEgaXMgdGhlcmUNCiAgaWYgKHN0YXRlLm9wdGlvbmFsICYmIGRhdGEgPT09IHVuZGVmaW5lZCkgew0KICAgIGlmIChzdGF0ZVsnZGVmYXVsdCddICE9PSBudWxsKQ0KICAgICAgZGF0YSA9IHN0YXRlWydkZWZhdWx0J10NCiAgICBlbHNlDQogICAgICByZXR1cm47DQogIH0NCg0KICAvLyBFbmNvZGUgY2hpbGRyZW4gZmlyc3QNCiAgdmFyIGNvbnRlbnQgPSBudWxsOw0KICB2YXIgcHJpbWl0aXZlID0gZmFsc2U7DQogIGlmIChzdGF0ZS5hbnkpIHsNCiAgICAvLyBBbnl0aGluZyB0aGF0IHdhcyBnaXZlbiBpcyB0cmFuc2xhdGVkIHRvIGJ1ZmZlcg0KICAgIHJlc3VsdCA9IHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIoZGF0YSk7DQogIH0gZWxzZSBpZiAoc3RhdGUuY2hvaWNlKSB7DQogICAgcmVzdWx0ID0gdGhpcy5fZW5jb2RlQ2hvaWNlKGRhdGEsIHJlcG9ydGVyKTsNCiAgfSBlbHNlIGlmIChzdGF0ZS5jb250YWlucykgew0KICAgIGNvbnRlbnQgPSB0aGlzLl9nZXRVc2Uoc3RhdGUuY29udGFpbnMsIHBhcmVudCkuX2VuY29kZShkYXRhLCByZXBvcnRlcik7DQogICAgcHJpbWl0aXZlID0gdHJ1ZTsNCiAgfSBlbHNlIGlmIChzdGF0ZS5jaGlsZHJlbikgew0KICAgIGNvbnRlbnQgPSBzdGF0ZS5jaGlsZHJlbi5tYXAoZnVuY3Rpb24oY2hpbGQpIHsNCiAgICAgIGlmIChjaGlsZC5fYmFzZVN0YXRlLnRhZyA9PT0gJ251bGxfJykNCiAgICAgICAgcmV0dXJuIGNoaWxkLl9lbmNvZGUobnVsbCwgcmVwb3J0ZXIsIGRhdGEpOw0KDQogICAgICBpZiAoY2hpbGQuX2Jhc2VTdGF0ZS5rZXkgPT09IG51bGwpDQogICAgICAgIHJldHVybiByZXBvcnRlci5lcnJvcignQ2hpbGQgc2hvdWxkIGhhdmUgYSBrZXknKTsNCiAgICAgIHZhciBwcmV2S2V5ID0gcmVwb3J0ZXIuZW50ZXJLZXkoY2hpbGQuX2Jhc2VTdGF0ZS5rZXkpOw0KDQogICAgICBpZiAodHlwZW9mIGRhdGEgIT09ICdvYmplY3QnKQ0KICAgICAgICByZXR1cm4gcmVwb3J0ZXIuZXJyb3IoJ0NoaWxkIGV4cGVjdGVkLCBidXQgaW5wdXQgaXMgbm90IG9iamVjdCcpOw0KDQogICAgICB2YXIgcmVzID0gY2hpbGQuX2VuY29kZShkYXRhW2NoaWxkLl9iYXNlU3RhdGUua2V5XSwgcmVwb3J0ZXIsIGRhdGEpOw0KICAgICAgcmVwb3J0ZXIubGVhdmVLZXkocHJldktleSk7DQoNCiAgICAgIHJldHVybiByZXM7DQogICAgfSwgdGhpcykuZmlsdGVyKGZ1bmN0aW9uKGNoaWxkKSB7DQogICAgICByZXR1cm4gY2hpbGQ7DQogICAgfSk7DQogICAgY29udGVudCA9IHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIoY29udGVudCk7DQogIH0gZWxzZSB7DQogICAgaWYgKHN0YXRlLnRhZyA9PT0gJ3NlcW9mJyB8fCBzdGF0ZS50YWcgPT09ICdzZXRvZicpIHsNCiAgICAgIC8vIFRPRE8oaW5kdXRueSk6IHRoaXMgc2hvdWxkIGJlIHRocm93biBvbiBEU0wgbGV2ZWwNCiAgICAgIGlmICghKHN0YXRlLmFyZ3MgJiYgc3RhdGUuYXJncy5sZW5ndGggPT09IDEpKQ0KICAgICAgICByZXR1cm4gcmVwb3J0ZXIuZXJyb3IoJ1RvbyBtYW55IGFyZ3MgZm9yIDogJyArIHN0YXRlLnRhZyk7DQoNCiAgICAgIGlmICghQXJyYXkuaXNBcnJheShkYXRhKSkNCiAgICAgICAgcmV0dXJuIHJlcG9ydGVyLmVycm9yKCdzZXFvZi9zZXRvZiwgYnV0IGRhdGEgaXMgbm90IEFycmF5Jyk7DQoNCiAgICAgIHZhciBjaGlsZCA9IHRoaXMuY2xvbmUoKTsNCiAgICAgIGNoaWxkLl9iYXNlU3RhdGUuaW1wbGljaXQgPSBudWxsOw0KICAgICAgY29udGVudCA9IHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIoZGF0YS5tYXAoZnVuY3Rpb24oaXRlbSkgew0KICAgICAgICB2YXIgc3RhdGUgPSB0aGlzLl9iYXNlU3RhdGU7DQoNCiAgICAgICAgcmV0dXJuIHRoaXMuX2dldFVzZShzdGF0ZS5hcmdzWzBdLCBkYXRhKS5fZW5jb2RlKGl0ZW0sIHJlcG9ydGVyKTsNCiAgICAgIH0sIGNoaWxkKSk7DQogICAgfSBlbHNlIGlmIChzdGF0ZS51c2UgIT09IG51bGwpIHsNCiAgICAgIHJlc3VsdCA9IHRoaXMuX2dldFVzZShzdGF0ZS51c2UsIHBhcmVudCkuX2VuY29kZShkYXRhLCByZXBvcnRlcik7DQogICAgfSBlbHNlIHsNCiAgICAgIGNvbnRlbnQgPSB0aGlzLl9lbmNvZGVQcmltaXRpdmUoc3RhdGUudGFnLCBkYXRhKTsNCiAgICAgIHByaW1pdGl2ZSA9IHRydWU7DQogICAgfQ0KICB9DQoNCiAgLy8gRW5jb2RlIGRhdGEgaXRzZWxmDQogIHZhciByZXN1bHQ7DQogIGlmICghc3RhdGUuYW55ICYmIHN0YXRlLmNob2ljZSA9PT0gbnVsbCkgew0KICAgIHZhciB0YWcgPSBzdGF0ZS5pbXBsaWNpdCAhPT0gbnVsbCA/IHN0YXRlLmltcGxpY2l0IDogc3RhdGUudGFnOw0KICAgIHZhciBjbHMgPSBzdGF0ZS5pbXBsaWNpdCA9PT0gbnVsbCA/ICd1bml2ZXJzYWwnIDogJ2NvbnRleHQnOw0KDQogICAgaWYgKHRhZyA9PT0gbnVsbCkgew0KICAgICAgaWYgKHN0YXRlLnVzZSA9PT0gbnVsbCkNCiAgICAgICAgcmVwb3J0ZXIuZXJyb3IoJ1RhZyBjb3VsZCBiZSBvbW1pdGVkIG9ubHkgZm9yIC51c2UoKScpOw0KICAgIH0gZWxzZSB7DQogICAgICBpZiAoc3RhdGUudXNlID09PSBudWxsKQ0KICAgICAgICByZXN1bHQgPSB0aGlzLl9lbmNvZGVDb21wb3NpdGUodGFnLCBwcmltaXRpdmUsIGNscywgY29udGVudCk7DQogICAgfQ0KICB9DQoNCiAgLy8gV3JhcCBpbiBleHBsaWNpdA0KICBpZiAoc3RhdGUuZXhwbGljaXQgIT09IG51bGwpDQogICAgcmVzdWx0ID0gdGhpcy5fZW5jb2RlQ29tcG9zaXRlKHN0YXRlLmV4cGxpY2l0LCBmYWxzZSwgJ2NvbnRleHQnLCByZXN1bHQpOw0KDQogIHJldHVybiByZXN1bHQ7DQp9Ow0KDQpOb2RlLnByb3RvdHlwZS5fZW5jb2RlQ2hvaWNlID0gZnVuY3Rpb24gZW5jb2RlQ2hvaWNlKGRhdGEsIHJlcG9ydGVyKSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX2Jhc2VTdGF0ZTsNCg0KICB2YXIgbm9kZSA9IHN0YXRlLmNob2ljZVtkYXRhLnR5cGVdOw0KICBpZiAoIW5vZGUpIHsNCiAgICBhc3NlcnQoDQogICAgICAgIGZhbHNlLA0KICAgICAgICBkYXRhLnR5cGUgKyAnIG5vdCBmb3VuZCBpbiAnICsNCiAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KE9iamVjdC5rZXlzKHN0YXRlLmNob2ljZSkpKTsNCiAgfQ0KICByZXR1cm4gbm9kZS5fZW5jb2RlKGRhdGEudmFsdWUsIHJlcG9ydGVyKTsNCn07DQoNCk5vZGUucHJvdG90eXBlLl9lbmNvZGVQcmltaXRpdmUgPSBmdW5jdGlvbiBlbmNvZGVQcmltaXRpdmUodGFnLCBkYXRhKSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX2Jhc2VTdGF0ZTsNCg0KICBpZiAoL3N0ciQvLnRlc3QodGFnKSkNCiAgICByZXR1cm4gdGhpcy5fZW5jb2RlU3RyKGRhdGEsIHRhZyk7DQogIGVsc2UgaWYgKHRhZyA9PT0gJ29iamlkJyAmJiBzdGF0ZS5hcmdzKQ0KICAgIHJldHVybiB0aGlzLl9lbmNvZGVPYmppZChkYXRhLCBzdGF0ZS5yZXZlcnNlQXJnc1swXSwgc3RhdGUuYXJnc1sxXSk7DQogIGVsc2UgaWYgKHRhZyA9PT0gJ29iamlkJykNCiAgICByZXR1cm4gdGhpcy5fZW5jb2RlT2JqaWQoZGF0YSwgbnVsbCwgbnVsbCk7DQogIGVsc2UgaWYgKHRhZyA9PT0gJ2dlbnRpbWUnIHx8IHRhZyA9PT0gJ3V0Y3RpbWUnKQ0KICAgIHJldHVybiB0aGlzLl9lbmNvZGVUaW1lKGRhdGEsIHRhZyk7DQogIGVsc2UgaWYgKHRhZyA9PT0gJ251bGxfJykNCiAgICByZXR1cm4gdGhpcy5fZW5jb2RlTnVsbCgpOw0KICBlbHNlIGlmICh0YWcgPT09ICdpbnQnIHx8IHRhZyA9PT0gJ2VudW0nKQ0KICAgIHJldHVybiB0aGlzLl9lbmNvZGVJbnQoZGF0YSwgc3RhdGUuYXJncyAmJiBzdGF0ZS5yZXZlcnNlQXJnc1swXSk7DQogIGVsc2UgaWYgKHRhZyA9PT0gJ2Jvb2wnKQ0KICAgIHJldHVybiB0aGlzLl9lbmNvZGVCb29sKGRhdGEpOw0KICBlbHNlDQogICAgdGhyb3cgbmV3IEVycm9yKCdVbnN1cHBvcnRlZCB0YWc6ICcgKyB0YWcpOw0KfTsNCg0KTm9kZS5wcm90b3R5cGUuX2lzTnVtc3RyID0gZnVuY3Rpb24gaXNOdW1zdHIoc3RyKSB7DQogIHJldHVybiAvXlswLTkgXSokLy50ZXN0KHN0cik7DQp9Ow0KDQpOb2RlLnByb3RvdHlwZS5faXNQcmludHN0ciA9IGZ1bmN0aW9uIGlzUHJpbnRzdHIoc3RyKSB7DQogIHJldHVybiAvXltBLVphLXowLTkgJ1woXClcKyxcLVwuXC86PVw/XSokLy50ZXN0KHN0cik7DQp9Ow0KDQp9LHsiLi4vYmFzZSI6NCwibWluaW1hbGlzdGljLWFzc2VydCI6NTQyfV0sNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpOw0KDQpmdW5jdGlvbiBSZXBvcnRlcihvcHRpb25zKSB7DQogIHRoaXMuX3JlcG9ydGVyU3RhdGUgPSB7DQogICAgb2JqOiBudWxsLA0KICAgIHBhdGg6IFtdLA0KICAgIG9wdGlvbnM6IG9wdGlvbnMgfHwge30sDQogICAgZXJyb3JzOiBbXQ0KICB9Ow0KfQ0KZXhwb3J0cy5SZXBvcnRlciA9IFJlcG9ydGVyOw0KDQpSZXBvcnRlci5wcm90b3R5cGUuaXNFcnJvciA9IGZ1bmN0aW9uIGlzRXJyb3Iob2JqKSB7DQogIHJldHVybiBvYmogaW5zdGFuY2VvZiBSZXBvcnRlckVycm9yOw0KfTsNCg0KUmVwb3J0ZXIucHJvdG90eXBlLnNhdmUgPSBmdW5jdGlvbiBzYXZlKCkgew0KICB2YXIgc3RhdGUgPSB0aGlzLl9yZXBvcnRlclN0YXRlOw0KDQogIHJldHVybiB7IG9iajogc3RhdGUub2JqLCBwYXRoTGVuOiBzdGF0ZS5wYXRoLmxlbmd0aCB9Ow0KfTsNCg0KUmVwb3J0ZXIucHJvdG90eXBlLnJlc3RvcmUgPSBmdW5jdGlvbiByZXN0b3JlKGRhdGEpIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fcmVwb3J0ZXJTdGF0ZTsNCg0KICBzdGF0ZS5vYmogPSBkYXRhLm9iajsNCiAgc3RhdGUucGF0aCA9IHN0YXRlLnBhdGguc2xpY2UoMCwgZGF0YS5wYXRoTGVuKTsNCn07DQoNClJlcG9ydGVyLnByb3RvdHlwZS5lbnRlcktleSA9IGZ1bmN0aW9uIGVudGVyS2V5KGtleSkgew0KICByZXR1cm4gdGhpcy5fcmVwb3J0ZXJTdGF0ZS5wYXRoLnB1c2goa2V5KTsNCn07DQoNClJlcG9ydGVyLnByb3RvdHlwZS5sZWF2ZUtleSA9IGZ1bmN0aW9uIGxlYXZlS2V5KGluZGV4LCBrZXksIHZhbHVlKSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX3JlcG9ydGVyU3RhdGU7DQoNCiAgc3RhdGUucGF0aCA9IHN0YXRlLnBhdGguc2xpY2UoMCwgaW5kZXggLSAxKTsNCiAgaWYgKHN0YXRlLm9iaiAhPT0gbnVsbCkNCiAgICBzdGF0ZS5vYmpba2V5XSA9IHZhbHVlOw0KfTsNCg0KUmVwb3J0ZXIucHJvdG90eXBlLmVudGVyT2JqZWN0ID0gZnVuY3Rpb24gZW50ZXJPYmplY3QoKSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX3JlcG9ydGVyU3RhdGU7DQoNCiAgdmFyIHByZXYgPSBzdGF0ZS5vYmo7DQogIHN0YXRlLm9iaiA9IHt9Ow0KICByZXR1cm4gcHJldjsNCn07DQoNClJlcG9ydGVyLnByb3RvdHlwZS5sZWF2ZU9iamVjdCA9IGZ1bmN0aW9uIGxlYXZlT2JqZWN0KHByZXYpIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fcmVwb3J0ZXJTdGF0ZTsNCg0KICB2YXIgbm93ID0gc3RhdGUub2JqOw0KICBzdGF0ZS5vYmogPSBwcmV2Ow0KICByZXR1cm4gbm93Ow0KfTsNCg0KUmVwb3J0ZXIucHJvdG90eXBlLmVycm9yID0gZnVuY3Rpb24gZXJyb3IobXNnKSB7DQogIHZhciBlcnI7DQogIHZhciBzdGF0ZSA9IHRoaXMuX3JlcG9ydGVyU3RhdGU7DQoNCiAgdmFyIGluaGVyaXRlZCA9IG1zZyBpbnN0YW5jZW9mIFJlcG9ydGVyRXJyb3I7DQogIGlmIChpbmhlcml0ZWQpIHsNCiAgICBlcnIgPSBtc2c7DQogIH0gZWxzZSB7DQogICAgZXJyID0gbmV3IFJlcG9ydGVyRXJyb3Ioc3RhdGUucGF0aC5tYXAoZnVuY3Rpb24oZWxlbSkgew0KICAgICAgcmV0dXJuICdbJyArIEpTT04uc3RyaW5naWZ5KGVsZW0pICsgJ10nOw0KICAgIH0pLmpvaW4oJycpLCBtc2cubWVzc2FnZSB8fCBtc2csIG1zZy5zdGFjayk7DQogIH0NCg0KICBpZiAoIXN0YXRlLm9wdGlvbnMucGFydGlhbCkNCiAgICB0aHJvdyBlcnI7DQoNCiAgaWYgKCFpbmhlcml0ZWQpDQogICAgc3RhdGUuZXJyb3JzLnB1c2goZXJyKTsNCg0KICByZXR1cm4gZXJyOw0KfTsNCg0KUmVwb3J0ZXIucHJvdG90eXBlLndyYXBSZXN1bHQgPSBmdW5jdGlvbiB3cmFwUmVzdWx0KHJlc3VsdCkgew0KICB2YXIgc3RhdGUgPSB0aGlzLl9yZXBvcnRlclN0YXRlOw0KICBpZiAoIXN0YXRlLm9wdGlvbnMucGFydGlhbCkNCiAgICByZXR1cm4gcmVzdWx0Ow0KDQogIHJldHVybiB7DQogICAgcmVzdWx0OiB0aGlzLmlzRXJyb3IocmVzdWx0KSA/IG51bGwgOiByZXN1bHQsDQogICAgZXJyb3JzOiBzdGF0ZS5lcnJvcnMNCiAgfTsNCn07DQoNCmZ1bmN0aW9uIFJlcG9ydGVyRXJyb3IocGF0aCwgbXNnKSB7DQogIHRoaXMucGF0aCA9IHBhdGg7DQogIHRoaXMucmV0aHJvdyhtc2cpOw0KfTsNCmluaGVyaXRzKFJlcG9ydGVyRXJyb3IsIEVycm9yKTsNCg0KUmVwb3J0ZXJFcnJvci5wcm90b3R5cGUucmV0aHJvdyA9IGZ1bmN0aW9uIHJldGhyb3cobXNnKSB7DQogIHRoaXMubWVzc2FnZSA9IG1zZyArICcgYXQ6ICcgKyAodGhpcy5wYXRoIHx8ICcoc2hhbGxvdyknKTsNCiAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgUmVwb3J0ZXJFcnJvcik7DQoNCiAgcmV0dXJuIHRoaXM7DQp9Ow0KDQp9LHsiaW5oZXJpdHMiOjUzN31dLDc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGNvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cycpOw0KDQpleHBvcnRzLnRhZ0NsYXNzID0gew0KICAwOiAndW5pdmVyc2FsJywNCiAgMTogJ2FwcGxpY2F0aW9uJywNCiAgMjogJ2NvbnRleHQnLA0KICAzOiAncHJpdmF0ZScNCn07DQpleHBvcnRzLnRhZ0NsYXNzQnlOYW1lID0gY29uc3RhbnRzLl9yZXZlcnNlKGV4cG9ydHMudGFnQ2xhc3MpOw0KDQpleHBvcnRzLnRhZyA9IHsNCiAgMHgwMDogJ2VuZCcsDQogIDB4MDE6ICdib29sJywNCiAgMHgwMjogJ2ludCcsDQogIDB4MDM6ICdiaXRzdHInLA0KICAweDA0OiAnb2N0c3RyJywNCiAgMHgwNTogJ251bGxfJywNCiAgMHgwNjogJ29iamlkJywNCiAgMHgwNzogJ29iakRlc2MnLA0KICAweDA4OiAnZXh0ZXJuYWwnLA0KICAweDA5OiAncmVhbCcsDQogIDB4MGE6ICdlbnVtJywNCiAgMHgwYjogJ2VtYmVkJywNCiAgMHgwYzogJ3V0ZjhzdHInLA0KICAweDBkOiAncmVsYXRpdmVPaWQnLA0KICAweDEwOiAnc2VxJywNCiAgMHgxMTogJ3NldCcsDQogIDB4MTI6ICdudW1zdHInLA0KICAweDEzOiAncHJpbnRzdHInLA0KICAweDE0OiAndDYxc3RyJywNCiAgMHgxNTogJ3ZpZGVvc3RyJywNCiAgMHgxNjogJ2lhNXN0cicsDQogIDB4MTc6ICd1dGN0aW1lJywNCiAgMHgxODogJ2dlbnRpbWUnLA0KICAweDE5OiAnZ3JhcGhzdHInLA0KICAweDFhOiAnaXNvNjQ2c3RyJywNCiAgMHgxYjogJ2dlbnN0cicsDQogIDB4MWM6ICd1bmlzdHInLA0KICAweDFkOiAnY2hhcnN0cicsDQogIDB4MWU6ICdibXBzdHInDQp9Ow0KZXhwb3J0cy50YWdCeU5hbWUgPSBjb25zdGFudHMuX3JldmVyc2UoZXhwb3J0cy50YWcpOw0KDQp9LHsiLi4vY29uc3RhbnRzIjo4fV0sODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgY29uc3RhbnRzID0gZXhwb3J0czsNCg0KLy8gSGVscGVyDQpjb25zdGFudHMuX3JldmVyc2UgPSBmdW5jdGlvbiByZXZlcnNlKG1hcCkgew0KICB2YXIgcmVzID0ge307DQoNCiAgT2JqZWN0LmtleXMobWFwKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkgew0KICAgIC8vIENvbnZlcnQga2V5IHRvIGludGVnZXIgaWYgaXQgaXMgc3RyaW5naWZpZWQNCiAgICBpZiAoKGtleSB8IDApID09IGtleSkNCiAgICAgIGtleSA9IGtleSB8IDA7DQoNCiAgICB2YXIgdmFsdWUgPSBtYXBba2V5XTsNCiAgICByZXNbdmFsdWVdID0ga2V5Ow0KICB9KTsNCg0KICByZXR1cm4gcmVzOw0KfTsNCg0KY29uc3RhbnRzLmRlciA9IHJlcXVpcmUoJy4vZGVyJyk7DQoNCn0seyIuL2RlciI6N31dLDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTsNCg0KdmFyIGFzbjEgPSByZXF1aXJlKCcuLi8uLi9hc24xJyk7DQp2YXIgYmFzZSA9IGFzbjEuYmFzZTsNCnZhciBiaWdudW0gPSBhc24xLmJpZ251bTsNCg0KLy8gSW1wb3J0IERFUiBjb25zdGFudHMNCnZhciBkZXIgPSBhc24xLmNvbnN0YW50cy5kZXI7DQoNCmZ1bmN0aW9uIERFUkRlY29kZXIoZW50aXR5KSB7DQogIHRoaXMuZW5jID0gJ2Rlcic7DQogIHRoaXMubmFtZSA9IGVudGl0eS5uYW1lOw0KICB0aGlzLmVudGl0eSA9IGVudGl0eTsNCg0KICAvLyBDb25zdHJ1Y3QgYmFzZSB0cmVlDQogIHRoaXMudHJlZSA9IG5ldyBERVJOb2RlKCk7DQogIHRoaXMudHJlZS5faW5pdChlbnRpdHkuYm9keSk7DQp9Ow0KbW9kdWxlLmV4cG9ydHMgPSBERVJEZWNvZGVyOw0KDQpERVJEZWNvZGVyLnByb3RvdHlwZS5kZWNvZGUgPSBmdW5jdGlvbiBkZWNvZGUoZGF0YSwgb3B0aW9ucykgew0KICBpZiAoIShkYXRhIGluc3RhbmNlb2YgYmFzZS5EZWNvZGVyQnVmZmVyKSkNCiAgICBkYXRhID0gbmV3IGJhc2UuRGVjb2RlckJ1ZmZlcihkYXRhLCBvcHRpb25zKTsNCg0KICByZXR1cm4gdGhpcy50cmVlLl9kZWNvZGUoZGF0YSwgb3B0aW9ucyk7DQp9Ow0KDQovLyBUcmVlIG1ldGhvZHMNCg0KZnVuY3Rpb24gREVSTm9kZShwYXJlbnQpIHsNCiAgYmFzZS5Ob2RlLmNhbGwodGhpcywgJ2RlcicsIHBhcmVudCk7DQp9DQppbmhlcml0cyhERVJOb2RlLCBiYXNlLk5vZGUpOw0KDQpERVJOb2RlLnByb3RvdHlwZS5fcGVla1RhZyA9IGZ1bmN0aW9uIHBlZWtUYWcoYnVmZmVyLCB0YWcsIGFueSkgew0KICBpZiAoYnVmZmVyLmlzRW1wdHkoKSkNCiAgICByZXR1cm4gZmFsc2U7DQoNCiAgdmFyIHN0YXRlID0gYnVmZmVyLnNhdmUoKTsNCiAgdmFyIGRlY29kZWRUYWcgPSBkZXJEZWNvZGVUYWcoYnVmZmVyLCAnRmFpbGVkIHRvIHBlZWsgdGFnOiAiJyArIHRhZyArICciJyk7DQogIGlmIChidWZmZXIuaXNFcnJvcihkZWNvZGVkVGFnKSkNCiAgICByZXR1cm4gZGVjb2RlZFRhZzsNCg0KICBidWZmZXIucmVzdG9yZShzdGF0ZSk7DQoNCiAgcmV0dXJuIGRlY29kZWRUYWcudGFnID09PSB0YWcgfHwgZGVjb2RlZFRhZy50YWdTdHIgPT09IHRhZyB8fA0KICAgIChkZWNvZGVkVGFnLnRhZ1N0ciArICdvZicpID09PSB0YWcgfHwgYW55Ow0KfTsNCg0KREVSTm9kZS5wcm90b3R5cGUuX2RlY29kZVRhZyA9IGZ1bmN0aW9uIGRlY29kZVRhZyhidWZmZXIsIHRhZywgYW55KSB7DQogIHZhciBkZWNvZGVkVGFnID0gZGVyRGVjb2RlVGFnKGJ1ZmZlciwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0ZhaWxlZCB0byBkZWNvZGUgdGFnIG9mICInICsgdGFnICsgJyInKTsNCiAgaWYgKGJ1ZmZlci5pc0Vycm9yKGRlY29kZWRUYWcpKQ0KICAgIHJldHVybiBkZWNvZGVkVGFnOw0KDQogIHZhciBsZW4gPSBkZXJEZWNvZGVMZW4oYnVmZmVyLA0KICAgICAgICAgICAgICAgICAgICAgICAgIGRlY29kZWRUYWcucHJpbWl0aXZlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICdGYWlsZWQgdG8gZ2V0IGxlbmd0aCBvZiAiJyArIHRhZyArICciJyk7DQoNCiAgLy8gRmFpbHVyZQ0KICBpZiAoYnVmZmVyLmlzRXJyb3IobGVuKSkNCiAgICByZXR1cm4gbGVuOw0KDQogIGlmICghYW55ICYmDQogICAgICBkZWNvZGVkVGFnLnRhZyAhPT0gdGFnICYmDQogICAgICBkZWNvZGVkVGFnLnRhZ1N0ciAhPT0gdGFnICYmDQogICAgICBkZWNvZGVkVGFnLnRhZ1N0ciArICdvZicgIT09IHRhZykgew0KICAgIHJldHVybiBidWZmZXIuZXJyb3IoJ0ZhaWxlZCB0byBtYXRjaCB0YWc6ICInICsgdGFnICsgJyInKTsNCiAgfQ0KDQogIGlmIChkZWNvZGVkVGFnLnByaW1pdGl2ZSB8fCBsZW4gIT09IG51bGwpDQogICAgcmV0dXJuIGJ1ZmZlci5za2lwKGxlbiwgJ0ZhaWxlZCB0byBtYXRjaCBib2R5IG9mOiAiJyArIHRhZyArICciJyk7DQoNCiAgLy8gSW5kZWZpbml0ZSBsZW5ndGguLi4gZmluZCBFTkQgdGFnDQogIHZhciBzdGF0ZSA9IGJ1ZmZlci5zYXZlKCk7DQogIHZhciByZXMgPSB0aGlzLl9za2lwVW50aWxFbmQoDQogICAgICBidWZmZXIsDQogICAgICAnRmFpbGVkIHRvIHNraXAgaW5kZWZpbml0ZSBsZW5ndGggYm9keTogIicgKyB0aGlzLnRhZyArICciJyk7DQogIGlmIChidWZmZXIuaXNFcnJvcihyZXMpKQ0KICAgIHJldHVybiByZXM7DQoNCiAgbGVuID0gYnVmZmVyLm9mZnNldCAtIHN0YXRlLm9mZnNldDsNCiAgYnVmZmVyLnJlc3RvcmUoc3RhdGUpOw0KICByZXR1cm4gYnVmZmVyLnNraXAobGVuLCAnRmFpbGVkIHRvIG1hdGNoIGJvZHkgb2Y6ICInICsgdGFnICsgJyInKTsNCn07DQoNCkRFUk5vZGUucHJvdG90eXBlLl9za2lwVW50aWxFbmQgPSBmdW5jdGlvbiBza2lwVW50aWxFbmQoYnVmZmVyLCBmYWlsKSB7DQogIHdoaWxlICh0cnVlKSB7DQogICAgdmFyIHRhZyA9IGRlckRlY29kZVRhZyhidWZmZXIsIGZhaWwpOw0KICAgIGlmIChidWZmZXIuaXNFcnJvcih0YWcpKQ0KICAgICAgcmV0dXJuIHRhZzsNCiAgICB2YXIgbGVuID0gZGVyRGVjb2RlTGVuKGJ1ZmZlciwgdGFnLnByaW1pdGl2ZSwgZmFpbCk7DQogICAgaWYgKGJ1ZmZlci5pc0Vycm9yKGxlbikpDQogICAgICByZXR1cm4gbGVuOw0KDQogICAgdmFyIHJlczsNCiAgICBpZiAodGFnLnByaW1pdGl2ZSB8fCBsZW4gIT09IG51bGwpDQogICAgICByZXMgPSBidWZmZXIuc2tpcChsZW4pDQogICAgZWxzZQ0KICAgICAgcmVzID0gdGhpcy5fc2tpcFVudGlsRW5kKGJ1ZmZlciwgZmFpbCk7DQoNCiAgICAvLyBGYWlsdXJlDQogICAgaWYgKGJ1ZmZlci5pc0Vycm9yKHJlcykpDQogICAgICByZXR1cm4gcmVzOw0KDQogICAgaWYgKHRhZy50YWdTdHIgPT09ICdlbmQnKQ0KICAgICAgYnJlYWs7DQogIH0NCn07DQoNCkRFUk5vZGUucHJvdG90eXBlLl9kZWNvZGVMaXN0ID0gZnVuY3Rpb24gZGVjb2RlTGlzdChidWZmZXIsIHRhZywgZGVjb2Rlcikgew0KICB2YXIgcmVzdWx0ID0gW107DQogIHdoaWxlICghYnVmZmVyLmlzRW1wdHkoKSkgew0KICAgIHZhciBwb3NzaWJsZUVuZCA9IHRoaXMuX3BlZWtUYWcoYnVmZmVyLCAnZW5kJyk7DQogICAgaWYgKGJ1ZmZlci5pc0Vycm9yKHBvc3NpYmxlRW5kKSkNCiAgICAgIHJldHVybiBwb3NzaWJsZUVuZDsNCg0KICAgIHZhciByZXMgPSBkZWNvZGVyLmRlY29kZShidWZmZXIsICdkZXInKTsNCiAgICBpZiAoYnVmZmVyLmlzRXJyb3IocmVzKSAmJiBwb3NzaWJsZUVuZCkNCiAgICAgIGJyZWFrOw0KICAgIHJlc3VsdC5wdXNoKHJlcyk7DQogIH0NCiAgcmV0dXJuIHJlc3VsdDsNCn07DQoNCkRFUk5vZGUucHJvdG90eXBlLl9kZWNvZGVTdHIgPSBmdW5jdGlvbiBkZWNvZGVTdHIoYnVmZmVyLCB0YWcpIHsNCiAgaWYgKHRhZyA9PT0gJ2JpdHN0cicpIHsNCiAgICB2YXIgdW51c2VkID0gYnVmZmVyLnJlYWRVSW50OCgpOw0KICAgIGlmIChidWZmZXIuaXNFcnJvcih1bnVzZWQpKQ0KICAgICAgcmV0dXJuIHVudXNlZDsNCiAgICByZXR1cm4geyB1bnVzZWQ6IHVudXNlZCwgZGF0YTogYnVmZmVyLnJhdygpIH07DQogIH0gZWxzZSBpZiAodGFnID09PSAnYm1wc3RyJykgew0KICAgIHZhciByYXcgPSBidWZmZXIucmF3KCk7DQogICAgaWYgKHJhdy5sZW5ndGggJSAyID09PSAxKQ0KICAgICAgcmV0dXJuIGJ1ZmZlci5lcnJvcignRGVjb2Rpbmcgb2Ygc3RyaW5nIHR5cGU6IGJtcHN0ciBsZW5ndGggbWlzbWF0Y2gnKTsNCg0KICAgIHZhciBzdHIgPSAnJzsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJhdy5sZW5ndGggLyAyOyBpKyspIHsNCiAgICAgIHN0ciArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKHJhdy5yZWFkVUludDE2QkUoaSAqIDIpKTsNCiAgICB9DQogICAgcmV0dXJuIHN0cjsNCiAgfSBlbHNlIGlmICh0YWcgPT09ICdudW1zdHInKSB7DQogICAgdmFyIG51bXN0ciA9IGJ1ZmZlci5yYXcoKS50b1N0cmluZygnYXNjaWknKTsNCiAgICBpZiAoIXRoaXMuX2lzTnVtc3RyKG51bXN0cikpIHsNCiAgICAgIHJldHVybiBidWZmZXIuZXJyb3IoJ0RlY29kaW5nIG9mIHN0cmluZyB0eXBlOiAnICsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgJ251bXN0ciB1bnN1cHBvcnRlZCBjaGFyYWN0ZXJzJyk7DQogICAgfQ0KICAgIHJldHVybiBudW1zdHI7DQogIH0gZWxzZSBpZiAodGFnID09PSAnb2N0c3RyJykgew0KICAgIHJldHVybiBidWZmZXIucmF3KCk7DQogIH0gZWxzZSBpZiAodGFnID09PSAncHJpbnRzdHInKSB7DQogICAgdmFyIHByaW50c3RyID0gYnVmZmVyLnJhdygpLnRvU3RyaW5nKCdhc2NpaScpOw0KICAgIGlmICghdGhpcy5faXNQcmludHN0cihwcmludHN0cikpIHsNCiAgICAgIHJldHVybiBidWZmZXIuZXJyb3IoJ0RlY29kaW5nIG9mIHN0cmluZyB0eXBlOiAnICsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgJ3ByaW50c3RyIHVuc3VwcG9ydGVkIGNoYXJhY3RlcnMnKTsNCiAgICB9DQogICAgcmV0dXJuIHByaW50c3RyOw0KICB9IGVsc2UgaWYgKC9zdHIkLy50ZXN0KHRhZykpIHsNCiAgICByZXR1cm4gYnVmZmVyLnJhdygpLnRvU3RyaW5nKCk7DQogIH0gZWxzZSB7DQogICAgcmV0dXJuIGJ1ZmZlci5lcnJvcignRGVjb2Rpbmcgb2Ygc3RyaW5nIHR5cGU6ICcgKyB0YWcgKyAnIHVuc3VwcG9ydGVkJyk7DQogIH0NCn07DQoNCkRFUk5vZGUucHJvdG90eXBlLl9kZWNvZGVPYmppZCA9IGZ1bmN0aW9uIGRlY29kZU9iamlkKGJ1ZmZlciwgdmFsdWVzLCByZWxhdGl2ZSkgew0KICB2YXIgcmVzdWx0Ow0KICB2YXIgaWRlbnRpZmllcnMgPSBbXTsNCiAgdmFyIGlkZW50ID0gMDsNCiAgd2hpbGUgKCFidWZmZXIuaXNFbXB0eSgpKSB7DQogICAgdmFyIHN1YmlkZW50ID0gYnVmZmVyLnJlYWRVSW50OCgpOw0KICAgIGlkZW50IDw8PSA3Ow0KICAgIGlkZW50IHw9IHN1YmlkZW50ICYgMHg3ZjsNCiAgICBpZiAoKHN1YmlkZW50ICYgMHg4MCkgPT09IDApIHsNCiAgICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnQpOw0KICAgICAgaWRlbnQgPSAwOw0KICAgIH0NCiAgfQ0KICBpZiAoc3ViaWRlbnQgJiAweDgwKQ0KICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnQpOw0KDQogIHZhciBmaXJzdCA9IChpZGVudGlmaWVyc1swXSAvIDQwKSB8IDA7DQogIHZhciBzZWNvbmQgPSBpZGVudGlmaWVyc1swXSAlIDQwOw0KDQogIGlmIChyZWxhdGl2ZSkNCiAgICByZXN1bHQgPSBpZGVudGlmaWVyczsNCiAgZWxzZQ0KICAgIHJlc3VsdCA9IFtmaXJzdCwgc2Vjb25kXS5jb25jYXQoaWRlbnRpZmllcnMuc2xpY2UoMSkpOw0KDQogIGlmICh2YWx1ZXMpIHsNCiAgICB2YXIgdG1wID0gdmFsdWVzW3Jlc3VsdC5qb2luKCcgJyldOw0KICAgIGlmICh0bXAgPT09IHVuZGVmaW5lZCkNCiAgICAgIHRtcCA9IHZhbHVlc1tyZXN1bHQuam9pbignLicpXTsNCiAgICBpZiAodG1wICE9PSB1bmRlZmluZWQpDQogICAgICByZXN1bHQgPSB0bXA7DQogIH0NCg0KICByZXR1cm4gcmVzdWx0Ow0KfTsNCg0KREVSTm9kZS5wcm90b3R5cGUuX2RlY29kZVRpbWUgPSBmdW5jdGlvbiBkZWNvZGVUaW1lKGJ1ZmZlciwgdGFnKSB7DQogIHZhciBzdHIgPSBidWZmZXIucmF3KCkudG9TdHJpbmcoKTsNCiAgaWYgKHRhZyA9PT0gJ2dlbnRpbWUnKSB7DQogICAgdmFyIHllYXIgPSBzdHIuc2xpY2UoMCwgNCkgfCAwOw0KICAgIHZhciBtb24gPSBzdHIuc2xpY2UoNCwgNikgfCAwOw0KICAgIHZhciBkYXkgPSBzdHIuc2xpY2UoNiwgOCkgfCAwOw0KICAgIHZhciBob3VyID0gc3RyLnNsaWNlKDgsIDEwKSB8IDA7DQogICAgdmFyIG1pbiA9IHN0ci5zbGljZSgxMCwgMTIpIHwgMDsNCiAgICB2YXIgc2VjID0gc3RyLnNsaWNlKDEyLCAxNCkgfCAwOw0KICB9IGVsc2UgaWYgKHRhZyA9PT0gJ3V0Y3RpbWUnKSB7DQogICAgdmFyIHllYXIgPSBzdHIuc2xpY2UoMCwgMikgfCAwOw0KICAgIHZhciBtb24gPSBzdHIuc2xpY2UoMiwgNCkgfCAwOw0KICAgIHZhciBkYXkgPSBzdHIuc2xpY2UoNCwgNikgfCAwOw0KICAgIHZhciBob3VyID0gc3RyLnNsaWNlKDYsIDgpIHwgMDsNCiAgICB2YXIgbWluID0gc3RyLnNsaWNlKDgsIDEwKSB8IDA7DQogICAgdmFyIHNlYyA9IHN0ci5zbGljZSgxMCwgMTIpIHwgMDsNCiAgICBpZiAoeWVhciA8IDcwKQ0KICAgICAgeWVhciA9IDIwMDAgKyB5ZWFyOw0KICAgIGVsc2UNCiAgICAgIHllYXIgPSAxOTAwICsgeWVhcjsNCiAgfSBlbHNlIHsNCiAgICByZXR1cm4gYnVmZmVyLmVycm9yKCdEZWNvZGluZyAnICsgdGFnICsgJyB0aW1lIGlzIG5vdCBzdXBwb3J0ZWQgeWV0Jyk7DQogIH0NCg0KICByZXR1cm4gRGF0ZS5VVEMoeWVhciwgbW9uIC0gMSwgZGF5LCBob3VyLCBtaW4sIHNlYywgMCk7DQp9Ow0KDQpERVJOb2RlLnByb3RvdHlwZS5fZGVjb2RlTnVsbCA9IGZ1bmN0aW9uIGRlY29kZU51bGwoYnVmZmVyKSB7DQogIHJldHVybiBudWxsOw0KfTsNCg0KREVSTm9kZS5wcm90b3R5cGUuX2RlY29kZUJvb2wgPSBmdW5jdGlvbiBkZWNvZGVCb29sKGJ1ZmZlcikgew0KICB2YXIgcmVzID0gYnVmZmVyLnJlYWRVSW50OCgpOw0KICBpZiAoYnVmZmVyLmlzRXJyb3IocmVzKSkNCiAgICByZXR1cm4gcmVzOw0KICBlbHNlDQogICAgcmV0dXJuIHJlcyAhPT0gMDsNCn07DQoNCkRFUk5vZGUucHJvdG90eXBlLl9kZWNvZGVJbnQgPSBmdW5jdGlvbiBkZWNvZGVJbnQoYnVmZmVyLCB2YWx1ZXMpIHsNCiAgLy8gQmlnaW50LCByZXR1cm4gYXMgaXQgaXMgKGFzc3VtZSBiaWcgZW5kaWFuKQ0KICB2YXIgcmF3ID0gYnVmZmVyLnJhdygpOw0KICB2YXIgcmVzID0gbmV3IGJpZ251bShyYXcpOw0KDQogIGlmICh2YWx1ZXMpDQogICAgcmVzID0gdmFsdWVzW3Jlcy50b1N0cmluZygxMCldIHx8IHJlczsNCg0KICByZXR1cm4gcmVzOw0KfTsNCg0KREVSTm9kZS5wcm90b3R5cGUuX3VzZSA9IGZ1bmN0aW9uIHVzZShlbnRpdHksIG9iaikgew0KICBpZiAodHlwZW9mIGVudGl0eSA9PT0gJ2Z1bmN0aW9uJykNCiAgICBlbnRpdHkgPSBlbnRpdHkob2JqKTsNCiAgcmV0dXJuIGVudGl0eS5fZ2V0RGVjb2RlcignZGVyJykudHJlZTsNCn07DQoNCi8vIFV0aWxpdHkgbWV0aG9kcw0KDQpmdW5jdGlvbiBkZXJEZWNvZGVUYWcoYnVmLCBmYWlsKSB7DQogIHZhciB0YWcgPSBidWYucmVhZFVJbnQ4KGZhaWwpOw0KICBpZiAoYnVmLmlzRXJyb3IodGFnKSkNCiAgICByZXR1cm4gdGFnOw0KDQogIHZhciBjbHMgPSBkZXIudGFnQ2xhc3NbdGFnID4+IDZdOw0KICB2YXIgcHJpbWl0aXZlID0gKHRhZyAmIDB4MjApID09PSAwOw0KDQogIC8vIE11bHRpLW9jdGV0IHRhZyAtIGxvYWQNCiAgaWYgKCh0YWcgJiAweDFmKSA9PT0gMHgxZikgew0KICAgIHZhciBvY3QgPSB0YWc7DQogICAgdGFnID0gMDsNCiAgICB3aGlsZSAoKG9jdCAmIDB4ODApID09PSAweDgwKSB7DQogICAgICBvY3QgPSBidWYucmVhZFVJbnQ4KGZhaWwpOw0KICAgICAgaWYgKGJ1Zi5pc0Vycm9yKG9jdCkpDQogICAgICAgIHJldHVybiBvY3Q7DQoNCiAgICAgIHRhZyA8PD0gNzsNCiAgICAgIHRhZyB8PSBvY3QgJiAweDdmOw0KICAgIH0NCiAgfSBlbHNlIHsNCiAgICB0YWcgJj0gMHgxZjsNCiAgfQ0KICB2YXIgdGFnU3RyID0gZGVyLnRhZ1t0YWddOw0KDQogIHJldHVybiB7DQogICAgY2xzOiBjbHMsDQogICAgcHJpbWl0aXZlOiBwcmltaXRpdmUsDQogICAgdGFnOiB0YWcsDQogICAgdGFnU3RyOiB0YWdTdHINCiAgfTsNCn0NCg0KZnVuY3Rpb24gZGVyRGVjb2RlTGVuKGJ1ZiwgcHJpbWl0aXZlLCBmYWlsKSB7DQogIHZhciBsZW4gPSBidWYucmVhZFVJbnQ4KGZhaWwpOw0KICBpZiAoYnVmLmlzRXJyb3IobGVuKSkNCiAgICByZXR1cm4gbGVuOw0KDQogIC8vIEluZGVmaW5pdGUgZm9ybQ0KICBpZiAoIXByaW1pdGl2ZSAmJiBsZW4gPT09IDB4ODApDQogICAgcmV0dXJuIG51bGw7DQoNCiAgLy8gRGVmaW5pdGUgZm9ybQ0KICBpZiAoKGxlbiAmIDB4ODApID09PSAwKSB7DQogICAgLy8gU2hvcnQgZm9ybQ0KICAgIHJldHVybiBsZW47DQogIH0NCg0KICAvLyBMb25nIGZvcm0NCiAgdmFyIG51bSA9IGxlbiAmIDB4N2Y7DQogIGlmIChudW0gPj0gNCkNCiAgICByZXR1cm4gYnVmLmVycm9yKCdsZW5ndGggb2N0ZWN0IGlzIHRvbyBsb25nJyk7DQoNCiAgbGVuID0gMDsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW07IGkrKykgew0KICAgIGxlbiA8PD0gODsNCiAgICB2YXIgaiA9IGJ1Zi5yZWFkVUludDgoZmFpbCk7DQogICAgaWYgKGJ1Zi5pc0Vycm9yKGopKQ0KICAgICAgcmV0dXJuIGo7DQogICAgbGVuIHw9IGo7DQogIH0NCg0KICByZXR1cm4gbGVuOw0KfQ0KDQp9LHsiLi4vLi4vYXNuMSI6MSwiaW5oZXJpdHMiOjUzN31dLDEwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBkZWNvZGVycyA9IGV4cG9ydHM7DQoNCmRlY29kZXJzLmRlciA9IHJlcXVpcmUoJy4vZGVyJyk7DQpkZWNvZGVycy5wZW0gPSByZXF1aXJlKCcuL3BlbScpOw0KDQp9LHsiLi9kZXIiOjksIi4vcGVtIjoxMX1dLDExOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7DQp2YXIgQnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJykuQnVmZmVyOw0KDQp2YXIgREVSRGVjb2RlciA9IHJlcXVpcmUoJy4vZGVyJyk7DQoNCmZ1bmN0aW9uIFBFTURlY29kZXIoZW50aXR5KSB7DQogIERFUkRlY29kZXIuY2FsbCh0aGlzLCBlbnRpdHkpOw0KICB0aGlzLmVuYyA9ICdwZW0nOw0KfTsNCmluaGVyaXRzKFBFTURlY29kZXIsIERFUkRlY29kZXIpOw0KbW9kdWxlLmV4cG9ydHMgPSBQRU1EZWNvZGVyOw0KDQpQRU1EZWNvZGVyLnByb3RvdHlwZS5kZWNvZGUgPSBmdW5jdGlvbiBkZWNvZGUoZGF0YSwgb3B0aW9ucykgew0KICB2YXIgbGluZXMgPSBkYXRhLnRvU3RyaW5nKCkuc3BsaXQoL1tcclxuXSsvZyk7DQoNCiAgdmFyIGxhYmVsID0gb3B0aW9ucy5sYWJlbC50b1VwcGVyQ2FzZSgpOw0KDQogIHZhciByZSA9IC9eLS0tLS0oQkVHSU58RU5EKSAoW14tXSspLS0tLS0kLzsNCiAgdmFyIHN0YXJ0ID0gLTE7DQogIHZhciBlbmQgPSAtMTsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykgew0KICAgIHZhciBtYXRjaCA9IGxpbmVzW2ldLm1hdGNoKHJlKTsNCiAgICBpZiAobWF0Y2ggPT09IG51bGwpDQogICAgICBjb250aW51ZTsNCg0KICAgIGlmIChtYXRjaFsyXSAhPT0gbGFiZWwpDQogICAgICBjb250aW51ZTsNCg0KICAgIGlmIChzdGFydCA9PT0gLTEpIHsNCiAgICAgIGlmIChtYXRjaFsxXSAhPT0gJ0JFR0lOJykNCiAgICAgICAgYnJlYWs7DQogICAgICBzdGFydCA9IGk7DQogICAgfSBlbHNlIHsNCiAgICAgIGlmIChtYXRjaFsxXSAhPT0gJ0VORCcpDQogICAgICAgIGJyZWFrOw0KICAgICAgZW5kID0gaTsNCiAgICAgIGJyZWFrOw0KICAgIH0NCiAgfQ0KICBpZiAoc3RhcnQgPT09IC0xIHx8IGVuZCA9PT0gLTEpDQogICAgdGhyb3cgbmV3IEVycm9yKCdQRU0gc2VjdGlvbiBub3QgZm91bmQgZm9yOiAnICsgbGFiZWwpOw0KDQogIHZhciBiYXNlNjQgPSBsaW5lcy5zbGljZShzdGFydCArIDEsIGVuZCkuam9pbignJyk7DQogIC8vIFJlbW92ZSBleGNlc3NpdmUgc3ltYm9scw0KICBiYXNlNjQucmVwbGFjZSgvW15hLXowLTlcK1wvPV0rL2dpLCAnJyk7DQoNCiAgdmFyIGlucHV0ID0gbmV3IEJ1ZmZlcihiYXNlNjQsICdiYXNlNjQnKTsNCiAgcmV0dXJuIERFUkRlY29kZXIucHJvdG90eXBlLmRlY29kZS5jYWxsKHRoaXMsIGlucHV0LCBvcHRpb25zKTsNCn07DQoNCn0seyIuL2RlciI6OSwiYnVmZmVyIjo5MywiaW5oZXJpdHMiOjUzN31dLDEyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7DQp2YXIgQnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJykuQnVmZmVyOw0KDQp2YXIgYXNuMSA9IHJlcXVpcmUoJy4uLy4uL2FzbjEnKTsNCnZhciBiYXNlID0gYXNuMS5iYXNlOw0KDQovLyBJbXBvcnQgREVSIGNvbnN0YW50cw0KdmFyIGRlciA9IGFzbjEuY29uc3RhbnRzLmRlcjsNCg0KZnVuY3Rpb24gREVSRW5jb2RlcihlbnRpdHkpIHsNCiAgdGhpcy5lbmMgPSAnZGVyJzsNCiAgdGhpcy5uYW1lID0gZW50aXR5Lm5hbWU7DQogIHRoaXMuZW50aXR5ID0gZW50aXR5Ow0KDQogIC8vIENvbnN0cnVjdCBiYXNlIHRyZWUNCiAgdGhpcy50cmVlID0gbmV3IERFUk5vZGUoKTsNCiAgdGhpcy50cmVlLl9pbml0KGVudGl0eS5ib2R5KTsNCn07DQptb2R1bGUuZXhwb3J0cyA9IERFUkVuY29kZXI7DQoNCkRFUkVuY29kZXIucHJvdG90eXBlLmVuY29kZSA9IGZ1bmN0aW9uIGVuY29kZShkYXRhLCByZXBvcnRlcikgew0KICByZXR1cm4gdGhpcy50cmVlLl9lbmNvZGUoZGF0YSwgcmVwb3J0ZXIpLmpvaW4oKTsNCn07DQoNCi8vIFRyZWUgbWV0aG9kcw0KDQpmdW5jdGlvbiBERVJOb2RlKHBhcmVudCkgew0KICBiYXNlLk5vZGUuY2FsbCh0aGlzLCAnZGVyJywgcGFyZW50KTsNCn0NCmluaGVyaXRzKERFUk5vZGUsIGJhc2UuTm9kZSk7DQoNCkRFUk5vZGUucHJvdG90eXBlLl9lbmNvZGVDb21wb3NpdGUgPSBmdW5jdGlvbiBlbmNvZGVDb21wb3NpdGUodGFnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmltaXRpdmUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNscywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudCkgew0KICB2YXIgZW5jb2RlZFRhZyA9IGVuY29kZVRhZyh0YWcsIHByaW1pdGl2ZSwgY2xzLCB0aGlzLnJlcG9ydGVyKTsNCg0KICAvLyBTaG9ydCBmb3JtDQogIGlmIChjb250ZW50Lmxlbmd0aCA8IDB4ODApIHsNCiAgICB2YXIgaGVhZGVyID0gbmV3IEJ1ZmZlcigyKTsNCiAgICBoZWFkZXJbMF0gPSBlbmNvZGVkVGFnOw0KICAgIGhlYWRlclsxXSA9IGNvbnRlbnQubGVuZ3RoOw0KICAgIHJldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKFsgaGVhZGVyLCBjb250ZW50IF0pOw0KICB9DQoNCiAgLy8gTG9uZyBmb3JtDQogIC8vIENvdW50IG9jdGV0cyByZXF1aXJlZCB0byBzdG9yZSBsZW5ndGgNCiAgdmFyIGxlbk9jdGV0cyA9IDE7DQogIGZvciAodmFyIGkgPSBjb250ZW50Lmxlbmd0aDsgaSA+PSAweDEwMDsgaSA+Pj0gOCkNCiAgICBsZW5PY3RldHMrKzsNCg0KICB2YXIgaGVhZGVyID0gbmV3IEJ1ZmZlcigxICsgMSArIGxlbk9jdGV0cyk7DQogIGhlYWRlclswXSA9IGVuY29kZWRUYWc7DQogIGhlYWRlclsxXSA9IDB4ODAgfCBsZW5PY3RldHM7DQoNCiAgZm9yICh2YXIgaSA9IDEgKyBsZW5PY3RldHMsIGogPSBjb250ZW50Lmxlbmd0aDsgaiA+IDA7IGktLSwgaiA+Pj0gOCkNCiAgICBoZWFkZXJbaV0gPSBqICYgMHhmZjsNCg0KICByZXR1cm4gdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihbIGhlYWRlciwgY29udGVudCBdKTsNCn07DQoNCkRFUk5vZGUucHJvdG90eXBlLl9lbmNvZGVTdHIgPSBmdW5jdGlvbiBlbmNvZGVTdHIoc3RyLCB0YWcpIHsNCiAgaWYgKHRhZyA9PT0gJ2JpdHN0cicpIHsNCiAgICByZXR1cm4gdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihbIHN0ci51bnVzZWQgfCAwLCBzdHIuZGF0YSBdKTsNCiAgfSBlbHNlIGlmICh0YWcgPT09ICdibXBzdHInKSB7DQogICAgdmFyIGJ1ZiA9IG5ldyBCdWZmZXIoc3RyLmxlbmd0aCAqIDIpOw0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7DQogICAgICBidWYud3JpdGVVSW50MTZCRShzdHIuY2hhckNvZGVBdChpKSwgaSAqIDIpOw0KICAgIH0NCiAgICByZXR1cm4gdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihidWYpOw0KICB9IGVsc2UgaWYgKHRhZyA9PT0gJ251bXN0cicpIHsNCiAgICBpZiAoIXRoaXMuX2lzTnVtc3RyKHN0cikpIHsNCiAgICAgIHJldHVybiB0aGlzLnJlcG9ydGVyLmVycm9yKCdFbmNvZGluZyBvZiBzdHJpbmcgdHlwZTogbnVtc3RyIHN1cHBvcnRzICcgKw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ29ubHkgZGlnaXRzIGFuZCBzcGFjZScpOw0KICAgIH0NCiAgICByZXR1cm4gdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihzdHIpOw0KICB9IGVsc2UgaWYgKHRhZyA9PT0gJ3ByaW50c3RyJykgew0KICAgIGlmICghdGhpcy5faXNQcmludHN0cihzdHIpKSB7DQogICAgICByZXR1cm4gdGhpcy5yZXBvcnRlci5lcnJvcignRW5jb2Rpbmcgb2Ygc3RyaW5nIHR5cGU6IHByaW50c3RyIHN1cHBvcnRzICcgKw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ29ubHkgbGF0aW4gdXBwZXIgYW5kIGxvd2VyIGNhc2UgbGV0dGVycywgJyArDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGlnaXRzLCBzcGFjZSwgYXBvc3Ryb3BoZSwgbGVmdCBhbmQgcmlndGggJyArDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncGFyZW50aGVzaXMsIHBsdXMgc2lnbiwgY29tbWEsIGh5cGhlbiwgJyArDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZG90LCBzbGFzaCwgY29sb24sIGVxdWFsIHNpZ24sICcgKw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3F1ZXN0aW9uIG1hcmsnKTsNCiAgICB9DQogICAgcmV0dXJuIHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIoc3RyKTsNCiAgfSBlbHNlIGlmICgvc3RyJC8udGVzdCh0YWcpKSB7DQogICAgcmV0dXJuIHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIoc3RyKTsNCiAgfSBlbHNlIHsNCiAgICByZXR1cm4gdGhpcy5yZXBvcnRlci5lcnJvcignRW5jb2Rpbmcgb2Ygc3RyaW5nIHR5cGU6ICcgKyB0YWcgKw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgdW5zdXBwb3J0ZWQnKTsNCiAgfQ0KfTsNCg0KREVSTm9kZS5wcm90b3R5cGUuX2VuY29kZU9iamlkID0gZnVuY3Rpb24gZW5jb2RlT2JqaWQoaWQsIHZhbHVlcywgcmVsYXRpdmUpIHsNCiAgaWYgKHR5cGVvZiBpZCA9PT0gJ3N0cmluZycpIHsNCiAgICBpZiAoIXZhbHVlcykNCiAgICAgIHJldHVybiB0aGlzLnJlcG9ydGVyLmVycm9yKCdzdHJpbmcgb2JqaWQgZ2l2ZW4sIGJ1dCBubyB2YWx1ZXMgbWFwIGZvdW5kJyk7DQogICAgaWYgKCF2YWx1ZXMuaGFzT3duUHJvcGVydHkoaWQpKQ0KICAgICAgcmV0dXJuIHRoaXMucmVwb3J0ZXIuZXJyb3IoJ29iamlkIG5vdCBmb3VuZCBpbiB2YWx1ZXMgbWFwJyk7DQogICAgaWQgPSB2YWx1ZXNbaWRdLnNwbGl0KC9bXHNcLl0rL2cpOw0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaWQubGVuZ3RoOyBpKyspDQogICAgICBpZFtpXSB8PSAwOw0KICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoaWQpKSB7DQogICAgaWQgPSBpZC5zbGljZSgpOw0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaWQubGVuZ3RoOyBpKyspDQogICAgICBpZFtpXSB8PSAwOw0KICB9DQoNCiAgaWYgKCFBcnJheS5pc0FycmF5KGlkKSkgew0KICAgIHJldHVybiB0aGlzLnJlcG9ydGVyLmVycm9yKCdvYmppZCgpIHNob3VsZCBiZSBlaXRoZXIgYXJyYXkgb3Igc3RyaW5nLCAnICsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZ290OiAnICsgSlNPTi5zdHJpbmdpZnkoaWQpKTsNCiAgfQ0KDQogIGlmICghcmVsYXRpdmUpIHsNCiAgICBpZiAoaWRbMV0gPj0gNDApDQogICAgICByZXR1cm4gdGhpcy5yZXBvcnRlci5lcnJvcignU2Vjb25kIG9iamlkIGlkZW50aWZpZXIgT09CJyk7DQogICAgaWQuc3BsaWNlKDAsIDIsIGlkWzBdICogNDAgKyBpZFsxXSk7DQogIH0NCg0KICAvLyBDb3VudCBudW1iZXIgb2Ygb2N0ZXRzDQogIHZhciBzaXplID0gMDsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBpZC5sZW5ndGg7IGkrKykgew0KICAgIHZhciBpZGVudCA9IGlkW2ldOw0KICAgIGZvciAoc2l6ZSsrOyBpZGVudCA+PSAweDgwOyBpZGVudCA+Pj0gNykNCiAgICAgIHNpemUrKzsNCiAgfQ0KDQogIHZhciBvYmppZCA9IG5ldyBCdWZmZXIoc2l6ZSk7DQogIHZhciBvZmZzZXQgPSBvYmppZC5sZW5ndGggLSAxOw0KICBmb3IgKHZhciBpID0gaWQubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHsNCiAgICB2YXIgaWRlbnQgPSBpZFtpXTsNCiAgICBvYmppZFtvZmZzZXQtLV0gPSBpZGVudCAmIDB4N2Y7DQogICAgd2hpbGUgKChpZGVudCA+Pj0gNykgPiAwKQ0KICAgICAgb2JqaWRbb2Zmc2V0LS1dID0gMHg4MCB8IChpZGVudCAmIDB4N2YpOw0KICB9DQoNCiAgcmV0dXJuIHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIob2JqaWQpOw0KfTsNCg0KZnVuY3Rpb24gdHdvKG51bSkgew0KICBpZiAobnVtIDwgMTApDQogICAgcmV0dXJuICcwJyArIG51bTsNCiAgZWxzZQ0KICAgIHJldHVybiBudW07DQp9DQoNCkRFUk5vZGUucHJvdG90eXBlLl9lbmNvZGVUaW1lID0gZnVuY3Rpb24gZW5jb2RlVGltZSh0aW1lLCB0YWcpIHsNCiAgdmFyIHN0cjsNCiAgdmFyIGRhdGUgPSBuZXcgRGF0ZSh0aW1lKTsNCg0KICBpZiAodGFnID09PSAnZ2VudGltZScpIHsNCiAgICBzdHIgPSBbDQogICAgICB0d28oZGF0ZS5nZXRGdWxsWWVhcigpKSwNCiAgICAgIHR3byhkYXRlLmdldFVUQ01vbnRoKCkgKyAxKSwNCiAgICAgIHR3byhkYXRlLmdldFVUQ0RhdGUoKSksDQogICAgICB0d28oZGF0ZS5nZXRVVENIb3VycygpKSwNCiAgICAgIHR3byhkYXRlLmdldFVUQ01pbnV0ZXMoKSksDQogICAgICB0d28oZGF0ZS5nZXRVVENTZWNvbmRzKCkpLA0KICAgICAgJ1onDQogICAgXS5qb2luKCcnKTsNCiAgfSBlbHNlIGlmICh0YWcgPT09ICd1dGN0aW1lJykgew0KICAgIHN0ciA9IFsNCiAgICAgIHR3byhkYXRlLmdldEZ1bGxZZWFyKCkgJSAxMDApLA0KICAgICAgdHdvKGRhdGUuZ2V0VVRDTW9udGgoKSArIDEpLA0KICAgICAgdHdvKGRhdGUuZ2V0VVRDRGF0ZSgpKSwNCiAgICAgIHR3byhkYXRlLmdldFVUQ0hvdXJzKCkpLA0KICAgICAgdHdvKGRhdGUuZ2V0VVRDTWludXRlcygpKSwNCiAgICAgIHR3byhkYXRlLmdldFVUQ1NlY29uZHMoKSksDQogICAgICAnWicNCiAgICBdLmpvaW4oJycpOw0KICB9IGVsc2Ugew0KICAgIHRoaXMucmVwb3J0ZXIuZXJyb3IoJ0VuY29kaW5nICcgKyB0YWcgKyAnIHRpbWUgaXMgbm90IHN1cHBvcnRlZCB5ZXQnKTsNCiAgfQ0KDQogIHJldHVybiB0aGlzLl9lbmNvZGVTdHIoc3RyLCAnb2N0c3RyJyk7DQp9Ow0KDQpERVJOb2RlLnByb3RvdHlwZS5fZW5jb2RlTnVsbCA9IGZ1bmN0aW9uIGVuY29kZU51bGwoKSB7DQogIHJldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKCcnKTsNCn07DQoNCkRFUk5vZGUucHJvdG90eXBlLl9lbmNvZGVJbnQgPSBmdW5jdGlvbiBlbmNvZGVJbnQobnVtLCB2YWx1ZXMpIHsNCiAgaWYgKHR5cGVvZiBudW0gPT09ICdzdHJpbmcnKSB7DQogICAgaWYgKCF2YWx1ZXMpDQogICAgICByZXR1cm4gdGhpcy5yZXBvcnRlci5lcnJvcignU3RyaW5nIGludCBvciBlbnVtIGdpdmVuLCBidXQgbm8gdmFsdWVzIG1hcCcpOw0KICAgIGlmICghdmFsdWVzLmhhc093blByb3BlcnR5KG51bSkpIHsNCiAgICAgIHJldHVybiB0aGlzLnJlcG9ydGVyLmVycm9yKCdWYWx1ZXMgbWFwIGRvZXNuXCd0IGNvbnRhaW46ICcgKw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNPTi5zdHJpbmdpZnkobnVtKSk7DQogICAgfQ0KICAgIG51bSA9IHZhbHVlc1tudW1dOw0KICB9DQoNCiAgLy8gQmlnbnVtLCBhc3N1bWUgYmlnIGVuZGlhbg0KICBpZiAodHlwZW9mIG51bSAhPT0gJ251bWJlcicgJiYgIUJ1ZmZlci5pc0J1ZmZlcihudW0pKSB7DQogICAgdmFyIG51bUFycmF5ID0gbnVtLnRvQXJyYXkoKTsNCiAgICBpZiAoIW51bS5zaWduICYmIG51bUFycmF5WzBdICYgMHg4MCkgew0KICAgICAgbnVtQXJyYXkudW5zaGlmdCgwKTsNCiAgICB9DQogICAgbnVtID0gbmV3IEJ1ZmZlcihudW1BcnJheSk7DQogIH0NCg0KICBpZiAoQnVmZmVyLmlzQnVmZmVyKG51bSkpIHsNCiAgICB2YXIgc2l6ZSA9IG51bS5sZW5ndGg7DQogICAgaWYgKG51bS5sZW5ndGggPT09IDApDQogICAgICBzaXplKys7DQoNCiAgICB2YXIgb3V0ID0gbmV3IEJ1ZmZlcihzaXplKTsNCiAgICBudW0uY29weShvdXQpOw0KICAgIGlmIChudW0ubGVuZ3RoID09PSAwKQ0KICAgICAgb3V0WzBdID0gMA0KICAgIHJldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKG91dCk7DQogIH0NCg0KICBpZiAobnVtIDwgMHg4MCkNCiAgICByZXR1cm4gdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihudW0pOw0KDQogIGlmIChudW0gPCAweDEwMCkNCiAgICByZXR1cm4gdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihbMCwgbnVtXSk7DQoNCiAgdmFyIHNpemUgPSAxOw0KICBmb3IgKHZhciBpID0gbnVtOyBpID49IDB4MTAwOyBpID4+PSA4KQ0KICAgIHNpemUrKzsNCg0KICB2YXIgb3V0ID0gbmV3IEFycmF5KHNpemUpOw0KICBmb3IgKHZhciBpID0gb3V0Lmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7DQogICAgb3V0W2ldID0gbnVtICYgMHhmZjsNCiAgICBudW0gPj49IDg7DQogIH0NCiAgaWYob3V0WzBdICYgMHg4MCkgew0KICAgIG91dC51bnNoaWZ0KDApOw0KICB9DQoNCiAgcmV0dXJuIHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIobmV3IEJ1ZmZlcihvdXQpKTsNCn07DQoNCkRFUk5vZGUucHJvdG90eXBlLl9lbmNvZGVCb29sID0gZnVuY3Rpb24gZW5jb2RlQm9vbCh2YWx1ZSkgew0KICByZXR1cm4gdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcih2YWx1ZSA/IDB4ZmYgOiAwKTsNCn07DQoNCkRFUk5vZGUucHJvdG90eXBlLl91c2UgPSBmdW5jdGlvbiB1c2UoZW50aXR5LCBvYmopIHsNCiAgaWYgKHR5cGVvZiBlbnRpdHkgPT09ICdmdW5jdGlvbicpDQogICAgZW50aXR5ID0gZW50aXR5KG9iaik7DQogIHJldHVybiBlbnRpdHkuX2dldEVuY29kZXIoJ2RlcicpLnRyZWU7DQp9Ow0KDQpERVJOb2RlLnByb3RvdHlwZS5fc2tpcERlZmF1bHQgPSBmdW5jdGlvbiBza2lwRGVmYXVsdChkYXRhQnVmZmVyLCByZXBvcnRlciwgcGFyZW50KSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX2Jhc2VTdGF0ZTsNCiAgdmFyIGk7DQogIGlmIChzdGF0ZVsnZGVmYXVsdCddID09PSBudWxsKQ0KICAgIHJldHVybiBmYWxzZTsNCg0KICB2YXIgZGF0YSA9IGRhdGFCdWZmZXIuam9pbigpOw0KICBpZiAoc3RhdGUuZGVmYXVsdEJ1ZmZlciA9PT0gdW5kZWZpbmVkKQ0KICAgIHN0YXRlLmRlZmF1bHRCdWZmZXIgPSB0aGlzLl9lbmNvZGVWYWx1ZShzdGF0ZVsnZGVmYXVsdCddLCByZXBvcnRlciwgcGFyZW50KS5qb2luKCk7DQoNCiAgaWYgKGRhdGEubGVuZ3RoICE9PSBzdGF0ZS5kZWZhdWx0QnVmZmVyLmxlbmd0aCkNCiAgICByZXR1cm4gZmFsc2U7DQoNCiAgZm9yIChpPTA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKQ0KICAgIGlmIChkYXRhW2ldICE9PSBzdGF0ZS5kZWZhdWx0QnVmZmVyW2ldKQ0KICAgICAgcmV0dXJuIGZhbHNlOw0KDQogIHJldHVybiB0cnVlOw0KfTsNCg0KLy8gVXRpbGl0eSBtZXRob2RzDQoNCmZ1bmN0aW9uIGVuY29kZVRhZyh0YWcsIHByaW1pdGl2ZSwgY2xzLCByZXBvcnRlcikgew0KICB2YXIgcmVzOw0KDQogIGlmICh0YWcgPT09ICdzZXFvZicpDQogICAgdGFnID0gJ3NlcSc7DQogIGVsc2UgaWYgKHRhZyA9PT0gJ3NldG9mJykNCiAgICB0YWcgPSAnc2V0JzsNCg0KICBpZiAoZGVyLnRhZ0J5TmFtZS5oYXNPd25Qcm9wZXJ0eSh0YWcpKQ0KICAgIHJlcyA9IGRlci50YWdCeU5hbWVbdGFnXTsNCiAgZWxzZSBpZiAodHlwZW9mIHRhZyA9PT0gJ251bWJlcicgJiYgKHRhZyB8IDApID09PSB0YWcpDQogICAgcmVzID0gdGFnOw0KICBlbHNlDQogICAgcmV0dXJuIHJlcG9ydGVyLmVycm9yKCdVbmtub3duIHRhZzogJyArIHRhZyk7DQoNCiAgaWYgKHJlcyA+PSAweDFmKQ0KICAgIHJldHVybiByZXBvcnRlci5lcnJvcignTXVsdGktb2N0ZXQgdGFnIGVuY29kaW5nIHVuc3VwcG9ydGVkJyk7DQoNCiAgaWYgKCFwcmltaXRpdmUpDQogICAgcmVzIHw9IDB4MjA7DQoNCiAgcmVzIHw9IChkZXIudGFnQ2xhc3NCeU5hbWVbY2xzIHx8ICd1bml2ZXJzYWwnXSA8PCA2KTsNCg0KICByZXR1cm4gcmVzOw0KfQ0KDQp9LHsiLi4vLi4vYXNuMSI6MSwiYnVmZmVyIjo5MywiaW5oZXJpdHMiOjUzN31dLDEzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBlbmNvZGVycyA9IGV4cG9ydHM7DQoNCmVuY29kZXJzLmRlciA9IHJlcXVpcmUoJy4vZGVyJyk7DQplbmNvZGVycy5wZW0gPSByZXF1aXJlKCcuL3BlbScpOw0KDQp9LHsiLi9kZXIiOjEyLCIuL3BlbSI6MTR9XSwxNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpOw0KDQp2YXIgREVSRW5jb2RlciA9IHJlcXVpcmUoJy4vZGVyJyk7DQoNCmZ1bmN0aW9uIFBFTUVuY29kZXIoZW50aXR5KSB7DQogIERFUkVuY29kZXIuY2FsbCh0aGlzLCBlbnRpdHkpOw0KICB0aGlzLmVuYyA9ICdwZW0nOw0KfTsNCmluaGVyaXRzKFBFTUVuY29kZXIsIERFUkVuY29kZXIpOw0KbW9kdWxlLmV4cG9ydHMgPSBQRU1FbmNvZGVyOw0KDQpQRU1FbmNvZGVyLnByb3RvdHlwZS5lbmNvZGUgPSBmdW5jdGlvbiBlbmNvZGUoZGF0YSwgb3B0aW9ucykgew0KICB2YXIgYnVmID0gREVSRW5jb2Rlci5wcm90b3R5cGUuZW5jb2RlLmNhbGwodGhpcywgZGF0YSk7DQoNCiAgdmFyIHAgPSBidWYudG9TdHJpbmcoJ2Jhc2U2NCcpOw0KICB2YXIgb3V0ID0gWyAnLS0tLS1CRUdJTiAnICsgb3B0aW9ucy5sYWJlbCArICctLS0tLScgXTsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwLmxlbmd0aDsgaSArPSA2NCkNCiAgICBvdXQucHVzaChwLnNsaWNlKGksIGkgKyA2NCkpOw0KICBvdXQucHVzaCgnLS0tLS1FTkQgJyArIG9wdGlvbnMubGFiZWwgKyAnLS0tLS0nKTsNCiAgcmV0dXJuIG91dC5qb2luKCdcbicpOw0KfTsNCg0KfSx7Ii4vZGVyIjoxMiwiaW5oZXJpdHMiOjUzN31dLDE1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIGh0dHA6Ly93aWtpLmNvbW1vbmpzLm9yZy93aWtpL1VuaXRfVGVzdGluZy8xLjANCi8vDQovLyBUSElTIElTIE5PVCBURVNURUQgTk9SIExJS0VMWSBUTyBXT1JLIE9VVFNJREUgVjghDQovLw0KLy8gT3JpZ2luYWxseSBmcm9tIG5hcndoYWwuanMgKGh0dHA6Ly9uYXJ3aGFsanMub3JnKQ0KLy8gQ29weXJpZ2h0IChjKSAyMDA5IFRob21hcyBSb2JpbnNvbiA8Mjgwbm9ydGguY29tPg0KLy8NCi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkNCi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICdTb2Z0d2FyZScpLCB0bw0KLy8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUNCi8vIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vcg0KLy8gc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMNCi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6DQovLw0KLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4NCi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLg0KLy8NCi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAnQVMgSVMnLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SDQovLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwNCi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRQ0KLy8gQVVUSE9SUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4NCi8vIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04NCi8vIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLg0KDQovLyB3aGVuIHVzZWQgaW4gbm9kZSwgdGhpcyB3aWxsIGFjdHVhbGx5IGxvYWQgdGhlIHV0aWwgbW9kdWxlIHdlIGRlcGVuZCBvbg0KLy8gdmVyc3VzIGxvYWRpbmcgdGhlIGJ1aWx0aW4gdXRpbCBtb2R1bGUgYXMgaGFwcGVucyBvdGhlcndpc2UNCi8vIHRoaXMgaXMgYSBidWcgaW4gbm9kZSBtb2R1bGUgbG9hZGluZyBhcyBmYXIgYXMgSSBhbSBjb25jZXJuZWQNCnZhciB1dGlsID0gcmVxdWlyZSgndXRpbC8nKTsNCg0KdmFyIHBTbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTsNCnZhciBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5Ow0KDQovLyAxLiBUaGUgYXNzZXJ0IG1vZHVsZSBwcm92aWRlcyBmdW5jdGlvbnMgdGhhdCB0aHJvdw0KLy8gQXNzZXJ0aW9uRXJyb3IncyB3aGVuIHBhcnRpY3VsYXIgY29uZGl0aW9ucyBhcmUgbm90IG1ldC4gVGhlDQovLyBhc3NlcnQgbW9kdWxlIG11c3QgY29uZm9ybSB0byB0aGUgZm9sbG93aW5nIGludGVyZmFjZS4NCg0KdmFyIGFzc2VydCA9IG1vZHVsZS5leHBvcnRzID0gb2s7DQoNCi8vIDIuIFRoZSBBc3NlcnRpb25FcnJvciBpcyBkZWZpbmVkIGluIGFzc2VydC4NCi8vIG5ldyBhc3NlcnQuQXNzZXJ0aW9uRXJyb3IoeyBtZXNzYWdlOiBtZXNzYWdlLA0KLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdHVhbDogYWN0dWFsLA0KLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkOiBleHBlY3RlZCB9KQ0KDQphc3NlcnQuQXNzZXJ0aW9uRXJyb3IgPSBmdW5jdGlvbiBBc3NlcnRpb25FcnJvcihvcHRpb25zKSB7DQogIHRoaXMubmFtZSA9ICdBc3NlcnRpb25FcnJvcic7DQogIHRoaXMuYWN0dWFsID0gb3B0aW9ucy5hY3R1YWw7DQogIHRoaXMuZXhwZWN0ZWQgPSBvcHRpb25zLmV4cGVjdGVkOw0KICB0aGlzLm9wZXJhdG9yID0gb3B0aW9ucy5vcGVyYXRvcjsNCiAgaWYgKG9wdGlvbnMubWVzc2FnZSkgew0KICAgIHRoaXMubWVzc2FnZSA9IG9wdGlvbnMubWVzc2FnZTsNCiAgICB0aGlzLmdlbmVyYXRlZE1lc3NhZ2UgPSBmYWxzZTsNCiAgfSBlbHNlIHsNCiAgICB0aGlzLm1lc3NhZ2UgPSBnZXRNZXNzYWdlKHRoaXMpOw0KICAgIHRoaXMuZ2VuZXJhdGVkTWVzc2FnZSA9IHRydWU7DQogIH0NCiAgdmFyIHN0YWNrU3RhcnRGdW5jdGlvbiA9IG9wdGlvbnMuc3RhY2tTdGFydEZ1bmN0aW9uIHx8IGZhaWw7DQoNCiAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7DQogICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgc3RhY2tTdGFydEZ1bmN0aW9uKTsNCiAgfQ0KICBlbHNlIHsNCiAgICAvLyBub24gdjggYnJvd3NlcnMgc28gd2UgY2FuIGhhdmUgYSBzdGFja3RyYWNlDQogICAgdmFyIGVyciA9IG5ldyBFcnJvcigpOw0KICAgIGlmIChlcnIuc3RhY2spIHsNCiAgICAgIHZhciBvdXQgPSBlcnIuc3RhY2s7DQoNCiAgICAgIC8vIHRyeSB0byBzdHJpcCB1c2VsZXNzIGZyYW1lcw0KICAgICAgdmFyIGZuX25hbWUgPSBzdGFja1N0YXJ0RnVuY3Rpb24ubmFtZTsNCiAgICAgIHZhciBpZHggPSBvdXQuaW5kZXhPZignXG4nICsgZm5fbmFtZSk7DQogICAgICBpZiAoaWR4ID49IDApIHsNCiAgICAgICAgLy8gb25jZSB3ZSBoYXZlIGxvY2F0ZWQgdGhlIGZ1bmN0aW9uIGZyYW1lDQogICAgICAgIC8vIHdlIG5lZWQgdG8gc3RyaXAgb3V0IGV2ZXJ5dGhpbmcgYmVmb3JlIGl0IChhbmQgaXRzIGxpbmUpDQogICAgICAgIHZhciBuZXh0X2xpbmUgPSBvdXQuaW5kZXhPZignXG4nLCBpZHggKyAxKTsNCiAgICAgICAgb3V0ID0gb3V0LnN1YnN0cmluZyhuZXh0X2xpbmUgKyAxKTsNCiAgICAgIH0NCg0KICAgICAgdGhpcy5zdGFjayA9IG91dDsNCiAgICB9DQogIH0NCn07DQoNCi8vIGFzc2VydC5Bc3NlcnRpb25FcnJvciBpbnN0YW5jZW9mIEVycm9yDQp1dGlsLmluaGVyaXRzKGFzc2VydC5Bc3NlcnRpb25FcnJvciwgRXJyb3IpOw0KDQpmdW5jdGlvbiByZXBsYWNlcihrZXksIHZhbHVlKSB7DQogIGlmICh1dGlsLmlzVW5kZWZpbmVkKHZhbHVlKSkgew0KICAgIHJldHVybiAnJyArIHZhbHVlOw0KICB9DQogIGlmICh1dGlsLmlzTnVtYmVyKHZhbHVlKSAmJiAhaXNGaW5pdGUodmFsdWUpKSB7DQogICAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCk7DQogIH0NCiAgaWYgKHV0aWwuaXNGdW5jdGlvbih2YWx1ZSkgfHwgdXRpbC5pc1JlZ0V4cCh2YWx1ZSkpIHsNCiAgICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKTsNCiAgfQ0KICByZXR1cm4gdmFsdWU7DQp9DQoNCmZ1bmN0aW9uIHRydW5jYXRlKHMsIG4pIHsNCiAgaWYgKHV0aWwuaXNTdHJpbmcocykpIHsNCiAgICByZXR1cm4gcy5sZW5ndGggPCBuID8gcyA6IHMuc2xpY2UoMCwgbik7DQogIH0gZWxzZSB7DQogICAgcmV0dXJuIHM7DQogIH0NCn0NCg0KZnVuY3Rpb24gZ2V0TWVzc2FnZShzZWxmKSB7DQogIHJldHVybiB0cnVuY2F0ZShKU09OLnN0cmluZ2lmeShzZWxmLmFjdHVhbCwgcmVwbGFjZXIpLCAxMjgpICsgJyAnICsNCiAgICAgICAgIHNlbGYub3BlcmF0b3IgKyAnICcgKw0KICAgICAgICAgdHJ1bmNhdGUoSlNPTi5zdHJpbmdpZnkoc2VsZi5leHBlY3RlZCwgcmVwbGFjZXIpLCAxMjgpOw0KfQ0KDQovLyBBdCBwcmVzZW50IG9ubHkgdGhlIHRocmVlIGtleXMgbWVudGlvbmVkIGFib3ZlIGFyZSB1c2VkIGFuZA0KLy8gdW5kZXJzdG9vZCBieSB0aGUgc3BlYy4gSW1wbGVtZW50YXRpb25zIG9yIHN1YiBtb2R1bGVzIGNhbiBwYXNzDQovLyBvdGhlciBrZXlzIHRvIHRoZSBBc3NlcnRpb25FcnJvcidzIGNvbnN0cnVjdG9yIC0gdGhleSB3aWxsIGJlDQovLyBpZ25vcmVkLg0KDQovLyAzLiBBbGwgb2YgdGhlIGZvbGxvd2luZyBmdW5jdGlvbnMgbXVzdCB0aHJvdyBhbiBBc3NlcnRpb25FcnJvcg0KLy8gd2hlbiBhIGNvcnJlc3BvbmRpbmcgY29uZGl0aW9uIGlzIG5vdCBtZXQsIHdpdGggYSBtZXNzYWdlIHRoYXQNCi8vIG1heSBiZSB1bmRlZmluZWQgaWYgbm90IHByb3ZpZGVkLiAgQWxsIGFzc2VydGlvbiBtZXRob2RzIHByb3ZpZGUNCi8vIGJvdGggdGhlIGFjdHVhbCBhbmQgZXhwZWN0ZWQgdmFsdWVzIHRvIHRoZSBhc3NlcnRpb24gZXJyb3IgZm9yDQovLyBkaXNwbGF5IHB1cnBvc2VzLg0KDQpmdW5jdGlvbiBmYWlsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UsIG9wZXJhdG9yLCBzdGFja1N0YXJ0RnVuY3Rpb24pIHsNCiAgdGhyb3cgbmV3IGFzc2VydC5Bc3NlcnRpb25FcnJvcih7DQogICAgbWVzc2FnZTogbWVzc2FnZSwNCiAgICBhY3R1YWw6IGFjdHVhbCwNCiAgICBleHBlY3RlZDogZXhwZWN0ZWQsDQogICAgb3BlcmF0b3I6IG9wZXJhdG9yLA0KICAgIHN0YWNrU3RhcnRGdW5jdGlvbjogc3RhY2tTdGFydEZ1bmN0aW9uDQogIH0pOw0KfQ0KDQovLyBFWFRFTlNJT04hIGFsbG93cyBmb3Igd2VsbCBiZWhhdmVkIGVycm9ycyBkZWZpbmVkIGVsc2V3aGVyZS4NCmFzc2VydC5mYWlsID0gZmFpbDsNCg0KLy8gNC4gUHVyZSBhc3NlcnRpb24gdGVzdHMgd2hldGhlciBhIHZhbHVlIGlzIHRydXRoeSwgYXMgZGV0ZXJtaW5lZA0KLy8gYnkgISFndWFyZC4NCi8vIGFzc2VydC5vayhndWFyZCwgbWVzc2FnZV9vcHQpOw0KLy8gVGhpcyBzdGF0ZW1lbnQgaXMgZXF1aXZhbGVudCB0byBhc3NlcnQuZXF1YWwodHJ1ZSwgISFndWFyZCwNCi8vIG1lc3NhZ2Vfb3B0KTsuIFRvIHRlc3Qgc3RyaWN0bHkgZm9yIHRoZSB2YWx1ZSB0cnVlLCB1c2UNCi8vIGFzc2VydC5zdHJpY3RFcXVhbCh0cnVlLCBndWFyZCwgbWVzc2FnZV9vcHQpOy4NCg0KZnVuY3Rpb24gb2sodmFsdWUsIG1lc3NhZ2UpIHsNCiAgaWYgKCF2YWx1ZSkgZmFpbCh2YWx1ZSwgdHJ1ZSwgbWVzc2FnZSwgJz09JywgYXNzZXJ0Lm9rKTsNCn0NCmFzc2VydC5vayA9IG9rOw0KDQovLyA1LiBUaGUgZXF1YWxpdHkgYXNzZXJ0aW9uIHRlc3RzIHNoYWxsb3csIGNvZXJjaXZlIGVxdWFsaXR5IHdpdGgNCi8vID09Lg0KLy8gYXNzZXJ0LmVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2Vfb3B0KTsNCg0KYXNzZXJ0LmVxdWFsID0gZnVuY3Rpb24gZXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkgew0KICBpZiAoYWN0dWFsICE9IGV4cGVjdGVkKSBmYWlsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UsICc9PScsIGFzc2VydC5lcXVhbCk7DQp9Ow0KDQovLyA2LiBUaGUgbm9uLWVxdWFsaXR5IGFzc2VydGlvbiB0ZXN0cyBmb3Igd2hldGhlciB0d28gb2JqZWN0cyBhcmUgbm90IGVxdWFsDQovLyB3aXRoICE9IGFzc2VydC5ub3RFcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlX29wdCk7DQoNCmFzc2VydC5ub3RFcXVhbCA9IGZ1bmN0aW9uIG5vdEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpIHsNCiAgaWYgKGFjdHVhbCA9PSBleHBlY3RlZCkgew0KICAgIGZhaWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSwgJyE9JywgYXNzZXJ0Lm5vdEVxdWFsKTsNCiAgfQ0KfTsNCg0KLy8gNy4gVGhlIGVxdWl2YWxlbmNlIGFzc2VydGlvbiB0ZXN0cyBhIGRlZXAgZXF1YWxpdHkgcmVsYXRpb24uDQovLyBhc3NlcnQuZGVlcEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2Vfb3B0KTsNCg0KYXNzZXJ0LmRlZXBFcXVhbCA9IGZ1bmN0aW9uIGRlZXBFcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKSB7DQogIGlmICghX2RlZXBFcXVhbChhY3R1YWwsIGV4cGVjdGVkKSkgew0KICAgIGZhaWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSwgJ2RlZXBFcXVhbCcsIGFzc2VydC5kZWVwRXF1YWwpOw0KICB9DQp9Ow0KDQpmdW5jdGlvbiBfZGVlcEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQpIHsNCiAgLy8gNy4xLiBBbGwgaWRlbnRpY2FsIHZhbHVlcyBhcmUgZXF1aXZhbGVudCwgYXMgZGV0ZXJtaW5lZCBieSA9PT0uDQogIGlmIChhY3R1YWwgPT09IGV4cGVjdGVkKSB7DQogICAgcmV0dXJuIHRydWU7DQoNCiAgfSBlbHNlIGlmICh1dGlsLmlzQnVmZmVyKGFjdHVhbCkgJiYgdXRpbC5pc0J1ZmZlcihleHBlY3RlZCkpIHsNCiAgICBpZiAoYWN0dWFsLmxlbmd0aCAhPSBleHBlY3RlZC5sZW5ndGgpIHJldHVybiBmYWxzZTsNCg0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWN0dWFsLmxlbmd0aDsgaSsrKSB7DQogICAgICBpZiAoYWN0dWFsW2ldICE9PSBleHBlY3RlZFtpXSkgcmV0dXJuIGZhbHNlOw0KICAgIH0NCg0KICAgIHJldHVybiB0cnVlOw0KDQogIC8vIDcuMi4gSWYgdGhlIGV4cGVjdGVkIHZhbHVlIGlzIGEgRGF0ZSBvYmplY3QsIHRoZSBhY3R1YWwgdmFsdWUgaXMNCiAgLy8gZXF1aXZhbGVudCBpZiBpdCBpcyBhbHNvIGEgRGF0ZSBvYmplY3QgdGhhdCByZWZlcnMgdG8gdGhlIHNhbWUgdGltZS4NCiAgfSBlbHNlIGlmICh1dGlsLmlzRGF0ZShhY3R1YWwpICYmIHV0aWwuaXNEYXRlKGV4cGVjdGVkKSkgew0KICAgIHJldHVybiBhY3R1YWwuZ2V0VGltZSgpID09PSBleHBlY3RlZC5nZXRUaW1lKCk7DQoNCiAgLy8gNy4zIElmIHRoZSBleHBlY3RlZCB2YWx1ZSBpcyBhIFJlZ0V4cCBvYmplY3QsIHRoZSBhY3R1YWwgdmFsdWUgaXMNCiAgLy8gZXF1aXZhbGVudCBpZiBpdCBpcyBhbHNvIGEgUmVnRXhwIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNvdXJjZSBhbmQNCiAgLy8gcHJvcGVydGllcyAoYGdsb2JhbGAsIGBtdWx0aWxpbmVgLCBgbGFzdEluZGV4YCwgYGlnbm9yZUNhc2VgKS4NCiAgfSBlbHNlIGlmICh1dGlsLmlzUmVnRXhwKGFjdHVhbCkgJiYgdXRpbC5pc1JlZ0V4cChleHBlY3RlZCkpIHsNCiAgICByZXR1cm4gYWN0dWFsLnNvdXJjZSA9PT0gZXhwZWN0ZWQuc291cmNlICYmDQogICAgICAgICAgIGFjdHVhbC5nbG9iYWwgPT09IGV4cGVjdGVkLmdsb2JhbCAmJg0KICAgICAgICAgICBhY3R1YWwubXVsdGlsaW5lID09PSBleHBlY3RlZC5tdWx0aWxpbmUgJiYNCiAgICAgICAgICAgYWN0dWFsLmxhc3RJbmRleCA9PT0gZXhwZWN0ZWQubGFzdEluZGV4ICYmDQogICAgICAgICAgIGFjdHVhbC5pZ25vcmVDYXNlID09PSBleHBlY3RlZC5pZ25vcmVDYXNlOw0KDQogIC8vIDcuNC4gT3RoZXIgcGFpcnMgdGhhdCBkbyBub3QgYm90aCBwYXNzIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0JywNCiAgLy8gZXF1aXZhbGVuY2UgaXMgZGV0ZXJtaW5lZCBieSA9PS4NCiAgfSBlbHNlIGlmICghdXRpbC5pc09iamVjdChhY3R1YWwpICYmICF1dGlsLmlzT2JqZWN0KGV4cGVjdGVkKSkgew0KICAgIHJldHVybiBhY3R1YWwgPT0gZXhwZWN0ZWQ7DQoNCiAgLy8gNy41IEZvciBhbGwgb3RoZXIgT2JqZWN0IHBhaXJzLCBpbmNsdWRpbmcgQXJyYXkgb2JqZWN0cywgZXF1aXZhbGVuY2UgaXMNCiAgLy8gZGV0ZXJtaW5lZCBieSBoYXZpbmcgdGhlIHNhbWUgbnVtYmVyIG9mIG93bmVkIHByb3BlcnRpZXMgKGFzIHZlcmlmaWVkDQogIC8vIHdpdGggT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKSwgdGhlIHNhbWUgc2V0IG9mIGtleXMNCiAgLy8gKGFsdGhvdWdoIG5vdCBuZWNlc3NhcmlseSB0aGUgc2FtZSBvcmRlciksIGVxdWl2YWxlbnQgdmFsdWVzIGZvciBldmVyeQ0KICAvLyBjb3JyZXNwb25kaW5nIGtleSwgYW5kIGFuIGlkZW50aWNhbCAncHJvdG90eXBlJyBwcm9wZXJ0eS4gTm90ZTogdGhpcw0KICAvLyBhY2NvdW50cyBmb3IgYm90aCBuYW1lZCBhbmQgaW5kZXhlZCBwcm9wZXJ0aWVzIG9uIEFycmF5cy4NCiAgfSBlbHNlIHsNCiAgICByZXR1cm4gb2JqRXF1aXYoYWN0dWFsLCBleHBlY3RlZCk7DQogIH0NCn0NCg0KZnVuY3Rpb24gaXNBcmd1bWVudHMob2JqZWN0KSB7DQogIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqZWN0KSA9PSAnW29iamVjdCBBcmd1bWVudHNdJzsNCn0NCg0KZnVuY3Rpb24gb2JqRXF1aXYoYSwgYikgew0KICBpZiAodXRpbC5pc051bGxPclVuZGVmaW5lZChhKSB8fCB1dGlsLmlzTnVsbE9yVW5kZWZpbmVkKGIpKQ0KICAgIHJldHVybiBmYWxzZTsNCiAgLy8gYW4gaWRlbnRpY2FsICdwcm90b3R5cGUnIHByb3BlcnR5Lg0KICBpZiAoYS5wcm90b3R5cGUgIT09IGIucHJvdG90eXBlKSByZXR1cm4gZmFsc2U7DQogIC8vIGlmIG9uZSBpcyBhIHByaW1pdGl2ZSwgdGhlIG90aGVyIG11c3QgYmUgc2FtZQ0KICBpZiAodXRpbC5pc1ByaW1pdGl2ZShhKSB8fCB1dGlsLmlzUHJpbWl0aXZlKGIpKSB7DQogICAgcmV0dXJuIGEgPT09IGI7DQogIH0NCiAgdmFyIGFJc0FyZ3MgPSBpc0FyZ3VtZW50cyhhKSwNCiAgICAgIGJJc0FyZ3MgPSBpc0FyZ3VtZW50cyhiKTsNCiAgaWYgKChhSXNBcmdzICYmICFiSXNBcmdzKSB8fCAoIWFJc0FyZ3MgJiYgYklzQXJncykpDQogICAgcmV0dXJuIGZhbHNlOw0KICBpZiAoYUlzQXJncykgew0KICAgIGEgPSBwU2xpY2UuY2FsbChhKTsNCiAgICBiID0gcFNsaWNlLmNhbGwoYik7DQogICAgcmV0dXJuIF9kZWVwRXF1YWwoYSwgYik7DQogIH0NCiAgdmFyIGthID0gb2JqZWN0S2V5cyhhKSwNCiAgICAgIGtiID0gb2JqZWN0S2V5cyhiKSwNCiAgICAgIGtleSwgaTsNCiAgLy8gaGF2aW5nIHRoZSBzYW1lIG51bWJlciBvZiBvd25lZCBwcm9wZXJ0aWVzIChrZXlzIGluY29ycG9yYXRlcw0KICAvLyBoYXNPd25Qcm9wZXJ0eSkNCiAgaWYgKGthLmxlbmd0aCAhPSBrYi5sZW5ndGgpDQogICAgcmV0dXJuIGZhbHNlOw0KICAvL3RoZSBzYW1lIHNldCBvZiBrZXlzIChhbHRob3VnaCBub3QgbmVjZXNzYXJpbHkgdGhlIHNhbWUgb3JkZXIpLA0KICBrYS5zb3J0KCk7DQogIGtiLnNvcnQoKTsNCiAgLy9+fn5jaGVhcCBrZXkgdGVzdA0KICBmb3IgKGkgPSBrYS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgew0KICAgIGlmIChrYVtpXSAhPSBrYltpXSkNCiAgICAgIHJldHVybiBmYWxzZTsNCiAgfQ0KICAvL2VxdWl2YWxlbnQgdmFsdWVzIGZvciBldmVyeSBjb3JyZXNwb25kaW5nIGtleSwgYW5kDQogIC8vfn5+cG9zc2libHkgZXhwZW5zaXZlIGRlZXAgdGVzdA0KICBmb3IgKGkgPSBrYS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgew0KICAgIGtleSA9IGthW2ldOw0KICAgIGlmICghX2RlZXBFcXVhbChhW2tleV0sIGJba2V5XSkpIHJldHVybiBmYWxzZTsNCiAgfQ0KICByZXR1cm4gdHJ1ZTsNCn0NCg0KLy8gOC4gVGhlIG5vbi1lcXVpdmFsZW5jZSBhc3NlcnRpb24gdGVzdHMgZm9yIGFueSBkZWVwIGluZXF1YWxpdHkuDQovLyBhc3NlcnQubm90RGVlcEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2Vfb3B0KTsNCg0KYXNzZXJ0Lm5vdERlZXBFcXVhbCA9IGZ1bmN0aW9uIG5vdERlZXBFcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKSB7DQogIGlmIChfZGVlcEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQpKSB7DQogICAgZmFpbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlLCAnbm90RGVlcEVxdWFsJywgYXNzZXJ0Lm5vdERlZXBFcXVhbCk7DQogIH0NCn07DQoNCi8vIDkuIFRoZSBzdHJpY3QgZXF1YWxpdHkgYXNzZXJ0aW9uIHRlc3RzIHN0cmljdCBlcXVhbGl0eSwgYXMgZGV0ZXJtaW5lZCBieSA9PT0uDQovLyBhc3NlcnQuc3RyaWN0RXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZV9vcHQpOw0KDQphc3NlcnQuc3RyaWN0RXF1YWwgPSBmdW5jdGlvbiBzdHJpY3RFcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKSB7DQogIGlmIChhY3R1YWwgIT09IGV4cGVjdGVkKSB7DQogICAgZmFpbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlLCAnPT09JywgYXNzZXJ0LnN0cmljdEVxdWFsKTsNCiAgfQ0KfTsNCg0KLy8gMTAuIFRoZSBzdHJpY3Qgbm9uLWVxdWFsaXR5IGFzc2VydGlvbiB0ZXN0cyBmb3Igc3RyaWN0IGluZXF1YWxpdHksIGFzDQovLyBkZXRlcm1pbmVkIGJ5ICE9PS4gIGFzc2VydC5ub3RTdHJpY3RFcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlX29wdCk7DQoNCmFzc2VydC5ub3RTdHJpY3RFcXVhbCA9IGZ1bmN0aW9uIG5vdFN0cmljdEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpIHsNCiAgaWYgKGFjdHVhbCA9PT0gZXhwZWN0ZWQpIHsNCiAgICBmYWlsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UsICchPT0nLCBhc3NlcnQubm90U3RyaWN0RXF1YWwpOw0KICB9DQp9Ow0KDQpmdW5jdGlvbiBleHBlY3RlZEV4Y2VwdGlvbihhY3R1YWwsIGV4cGVjdGVkKSB7DQogIGlmICghYWN0dWFsIHx8ICFleHBlY3RlZCkgew0KICAgIHJldHVybiBmYWxzZTsNCiAgfQ0KDQogIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZXhwZWN0ZWQpID09ICdbb2JqZWN0IFJlZ0V4cF0nKSB7DQogICAgcmV0dXJuIGV4cGVjdGVkLnRlc3QoYWN0dWFsKTsNCiAgfSBlbHNlIGlmIChhY3R1YWwgaW5zdGFuY2VvZiBleHBlY3RlZCkgew0KICAgIHJldHVybiB0cnVlOw0KICB9IGVsc2UgaWYgKGV4cGVjdGVkLmNhbGwoe30sIGFjdHVhbCkgPT09IHRydWUpIHsNCiAgICByZXR1cm4gdHJ1ZTsNCiAgfQ0KDQogIHJldHVybiBmYWxzZTsNCn0NCg0KZnVuY3Rpb24gX3Rocm93cyhzaG91bGRUaHJvdywgYmxvY2ssIGV4cGVjdGVkLCBtZXNzYWdlKSB7DQogIHZhciBhY3R1YWw7DQoNCiAgaWYgKHV0aWwuaXNTdHJpbmcoZXhwZWN0ZWQpKSB7DQogICAgbWVzc2FnZSA9IGV4cGVjdGVkOw0KICAgIGV4cGVjdGVkID0gbnVsbDsNCiAgfQ0KDQogIHRyeSB7DQogICAgYmxvY2soKTsNCiAgfSBjYXRjaCAoZSkgew0KICAgIGFjdHVhbCA9IGU7DQogIH0NCg0KICBtZXNzYWdlID0gKGV4cGVjdGVkICYmIGV4cGVjdGVkLm5hbWUgPyAnICgnICsgZXhwZWN0ZWQubmFtZSArICcpLicgOiAnLicpICsNCiAgICAgICAgICAgIChtZXNzYWdlID8gJyAnICsgbWVzc2FnZSA6ICcuJyk7DQoNCiAgaWYgKHNob3VsZFRocm93ICYmICFhY3R1YWwpIHsNCiAgICBmYWlsKGFjdHVhbCwgZXhwZWN0ZWQsICdNaXNzaW5nIGV4cGVjdGVkIGV4Y2VwdGlvbicgKyBtZXNzYWdlKTsNCiAgfQ0KDQogIGlmICghc2hvdWxkVGhyb3cgJiYgZXhwZWN0ZWRFeGNlcHRpb24oYWN0dWFsLCBleHBlY3RlZCkpIHsNCiAgICBmYWlsKGFjdHVhbCwgZXhwZWN0ZWQsICdHb3QgdW53YW50ZWQgZXhjZXB0aW9uJyArIG1lc3NhZ2UpOw0KICB9DQoNCiAgaWYgKChzaG91bGRUaHJvdyAmJiBhY3R1YWwgJiYgZXhwZWN0ZWQgJiYNCiAgICAgICFleHBlY3RlZEV4Y2VwdGlvbihhY3R1YWwsIGV4cGVjdGVkKSkgfHwgKCFzaG91bGRUaHJvdyAmJiBhY3R1YWwpKSB7DQogICAgdGhyb3cgYWN0dWFsOw0KICB9DQp9DQoNCi8vIDExLiBFeHBlY3RlZCB0byB0aHJvdyBhbiBlcnJvcjoNCi8vIGFzc2VydC50aHJvd3MoYmxvY2ssIEVycm9yX29wdCwgbWVzc2FnZV9vcHQpOw0KDQphc3NlcnQudGhyb3dzID0gZnVuY3Rpb24oYmxvY2ssIC8qb3B0aW9uYWwqL2Vycm9yLCAvKm9wdGlvbmFsKi9tZXNzYWdlKSB7DQogIF90aHJvd3MuYXBwbHkodGhpcywgW3RydWVdLmNvbmNhdChwU2xpY2UuY2FsbChhcmd1bWVudHMpKSk7DQp9Ow0KDQovLyBFWFRFTlNJT04hIFRoaXMgaXMgYW5ub3lpbmcgdG8gd3JpdGUgb3V0c2lkZSB0aGlzIG1vZHVsZS4NCmFzc2VydC5kb2VzTm90VGhyb3cgPSBmdW5jdGlvbihibG9jaywgLypvcHRpb25hbCovbWVzc2FnZSkgew0KICBfdGhyb3dzLmFwcGx5KHRoaXMsIFtmYWxzZV0uY29uY2F0KHBTbGljZS5jYWxsKGFyZ3VtZW50cykpKTsNCn07DQoNCmFzc2VydC5pZkVycm9yID0gZnVuY3Rpb24oZXJyKSB7IGlmIChlcnIpIHt0aHJvdyBlcnI7fX07DQoNCnZhciBvYmplY3RLZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikgew0KICB2YXIga2V5cyA9IFtdOw0KICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7DQogICAgaWYgKGhhc093bi5jYWxsKG9iaiwga2V5KSkga2V5cy5wdXNoKGtleSk7DQogIH0NCiAgcmV0dXJuIGtleXM7DQp9Ow0KDQp9LHsidXRpbC8iOjU4OH1dLDE2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoZ2xvYmFsKXsNCi8qaXN0YW5idWwgaWdub3JlIG5leHQqLyJ1c2Ugc3RyaWN0IjsNCg0KLyppc3RhbmJ1bCBpZ25vcmUgbmV4dCovcmVxdWlyZSgiY29yZS1qcy9zaGltIik7DQoNCi8qaXN0YW5idWwgaWdub3JlIG5leHQqL3JlcXVpcmUoImJhYmVsLXJlZ2VuZXJhdG9yLXJ1bnRpbWUiKTsNCg0KLyppc3RhbmJ1bCBpZ25vcmUgbmV4dCovcmVxdWlyZSgiY29yZS1qcy9mbi9yZWdleHAvZXNjYXBlIik7DQoNCi8qIGVzbGludCBtYXgtbGVuOiAwICovDQoNCmlmIChnbG9iYWwuX2JhYmVsUG9seWZpbGwpIHsNCiAgdGhyb3cgbmV3IEVycm9yKCJvbmx5IG9uZSBpbnN0YW5jZSBvZiBiYWJlbC1wb2x5ZmlsbCBpcyBhbGxvd2VkIik7DQp9DQpnbG9iYWwuX2JhYmVsUG9seWZpbGwgPSB0cnVlOw0KDQovLyBTaG91bGQgYmUgcmVtb3ZlZCBpbiB0aGUgbmV4dCBtYWpvciByZWxlYXNlOg0KDQp2YXIgREVGSU5FX1BST1BFUlRZID0gImRlZmluZVByb3BlcnR5IjsNCmZ1bmN0aW9uIGRlZmluZShPLCBrZXksIHZhbHVlKSB7DQogIE9ba2V5XSB8fCBPYmplY3RbREVGSU5FX1BST1BFUlRZXShPLCBrZXksIHsNCiAgICB3cml0YWJsZTogdHJ1ZSwNCiAgICBjb25maWd1cmFibGU6IHRydWUsDQogICAgdmFsdWU6IHZhbHVlDQogIH0pOw0KfQ0KDQpkZWZpbmUoU3RyaW5nLnByb3RvdHlwZSwgInBhZExlZnQiLCAiIi5wYWRTdGFydCk7DQpkZWZpbmUoU3RyaW5nLnByb3RvdHlwZSwgInBhZFJpZ2h0IiwgIiIucGFkRW5kKTsNCg0KInBvcCxyZXZlcnNlLHNoaWZ0LGtleXMsdmFsdWVzLGVudHJpZXMsaW5kZXhPZixldmVyeSxzb21lLGZvckVhY2gsbWFwLGZpbHRlcixmaW5kLGZpbmRJbmRleCxpbmNsdWRlcyxqb2luLHNsaWNlLGNvbmNhdCxwdXNoLHNwbGljZSx1bnNoaWZ0LHNvcnQsbGFzdEluZGV4T2YscmVkdWNlLHJlZHVjZVJpZ2h0LGNvcHlXaXRoaW4sZmlsbCIuc3BsaXQoIiwiKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsNCiAgW11ba2V5XSAmJiBkZWZpbmUoQXJyYXksIGtleSwgRnVuY3Rpb24uY2FsbC5iaW5kKFtdW2tleV0pKTsNCn0pOw0KfSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09ICJ1bmRlZmluZWQiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09ICJ1bmRlZmluZWQiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09ICJ1bmRlZmluZWQiID8gd2luZG93IDoge30pDQp9LHsiYmFiZWwtcmVnZW5lcmF0b3ItcnVudGltZSI6MTcsImNvcmUtanMvZm4vcmVnZXhwL2VzY2FwZSI6OTUsImNvcmUtanMvc2hpbSI6NDg1fV0sMTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChwcm9jZXNzLGdsb2JhbCl7DQovKioNCiAqIENvcHlyaWdodCAoYykgMjAxNCwgRmFjZWJvb2ssIEluYy4NCiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQogKg0KICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlDQogKiBodHRwczovL3Jhdy5naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL21hc3Rlci9MSUNFTlNFIGZpbGUuIEFuDQogKiBhZGRpdGlvbmFsIGdyYW50IG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4NCiAqIHRoZSBzYW1lIGRpcmVjdG9yeS4NCiAqLw0KDQohKGZ1bmN0aW9uKGdsb2JhbCkgew0KICAidXNlIHN0cmljdCI7DQoNCiAgdmFyIGhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7DQogIHZhciB1bmRlZmluZWQ7IC8vIE1vcmUgY29tcHJlc3NpYmxlIHRoYW4gdm9pZCAwLg0KICB2YXIgaXRlcmF0b3JTeW1ib2wgPQ0KICAgIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgU3ltYm9sLml0ZXJhdG9yIHx8ICJAQGl0ZXJhdG9yIjsNCg0KICB2YXIgaW5Nb2R1bGUgPSB0eXBlb2YgbW9kdWxlID09PSAib2JqZWN0IjsNCiAgdmFyIHJ1bnRpbWUgPSBnbG9iYWwucmVnZW5lcmF0b3JSdW50aW1lOw0KICBpZiAocnVudGltZSkgew0KICAgIGlmIChpbk1vZHVsZSkgew0KICAgICAgLy8gSWYgcmVnZW5lcmF0b3JSdW50aW1lIGlzIGRlZmluZWQgZ2xvYmFsbHkgYW5kIHdlJ3JlIGluIGEgbW9kdWxlLA0KICAgICAgLy8gbWFrZSB0aGUgZXhwb3J0cyBvYmplY3QgaWRlbnRpY2FsIHRvIHJlZ2VuZXJhdG9yUnVudGltZS4NCiAgICAgIG1vZHVsZS5leHBvcnRzID0gcnVudGltZTsNCiAgICB9DQogICAgLy8gRG9uJ3QgYm90aGVyIGV2YWx1YXRpbmcgdGhlIHJlc3Qgb2YgdGhpcyBmaWxlIGlmIHRoZSBydW50aW1lIHdhcw0KICAgIC8vIGFscmVhZHkgZGVmaW5lZCBnbG9iYWxseS4NCiAgICByZXR1cm47DQogIH0NCg0KICAvLyBEZWZpbmUgdGhlIHJ1bnRpbWUgZ2xvYmFsbHkgKGFzIGV4cGVjdGVkIGJ5IGdlbmVyYXRlZCBjb2RlKSBhcyBlaXRoZXINCiAgLy8gbW9kdWxlLmV4cG9ydHMgKGlmIHdlJ3JlIGluIGEgbW9kdWxlKSBvciBhIG5ldywgZW1wdHkgb2JqZWN0Lg0KICBydW50aW1lID0gZ2xvYmFsLnJlZ2VuZXJhdG9yUnVudGltZSA9IGluTW9kdWxlID8gbW9kdWxlLmV4cG9ydHMgOiB7fTsNCg0KICBmdW5jdGlvbiB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7DQogICAgLy8gSWYgb3V0ZXJGbiBwcm92aWRlZCwgdGhlbiBvdXRlckZuLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvci4NCiAgICB2YXIgZ2VuZXJhdG9yID0gT2JqZWN0LmNyZWF0ZSgob3V0ZXJGbiB8fCBHZW5lcmF0b3IpLnByb3RvdHlwZSk7DQogICAgdmFyIGNvbnRleHQgPSBuZXcgQ29udGV4dCh0cnlMb2NzTGlzdCB8fCBbXSk7DQoNCiAgICAvLyBUaGUgLl9pbnZva2UgbWV0aG9kIHVuaWZpZXMgdGhlIGltcGxlbWVudGF0aW9ucyBvZiB0aGUgLm5leHQsDQogICAgLy8gLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzLg0KICAgIGdlbmVyYXRvci5faW52b2tlID0gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KTsNCg0KICAgIHJldHVybiBnZW5lcmF0b3I7DQogIH0NCiAgcnVudGltZS53cmFwID0gd3JhcDsNCg0KICAvLyBUcnkvY2F0Y2ggaGVscGVyIHRvIG1pbmltaXplIGRlb3B0aW1pemF0aW9ucy4gUmV0dXJucyBhIGNvbXBsZXRpb24NCiAgLy8gcmVjb3JkIGxpa2UgY29udGV4dC50cnlFbnRyaWVzW2ldLmNvbXBsZXRpb24uIFRoaXMgaW50ZXJmYWNlIGNvdWxkDQogIC8vIGhhdmUgYmVlbiAoYW5kIHdhcyBwcmV2aW91c2x5KSBkZXNpZ25lZCB0byB0YWtlIGEgY2xvc3VyZSB0byBiZQ0KICAvLyBpbnZva2VkIHdpdGhvdXQgYXJndW1lbnRzLCBidXQgaW4gYWxsIHRoZSBjYXNlcyB3ZSBjYXJlIGFib3V0IHdlDQogIC8vIGFscmVhZHkgaGF2ZSBhbiBleGlzdGluZyBtZXRob2Qgd2Ugd2FudCB0byBjYWxsLCBzbyB0aGVyZSdzIG5vIG5lZWQNCiAgLy8gdG8gY3JlYXRlIGEgbmV3IGZ1bmN0aW9uIG9iamVjdC4gV2UgY2FuIGV2ZW4gZ2V0IGF3YXkgd2l0aCBhc3N1bWluZw0KICAvLyB0aGUgbWV0aG9kIHRha2VzIGV4YWN0bHkgb25lIGFyZ3VtZW50LCBzaW5jZSB0aGF0IGhhcHBlbnMgdG8gYmUgdHJ1ZQ0KICAvLyBpbiBldmVyeSBjYXNlLCBzbyB3ZSBkb24ndCBoYXZlIHRvIHRvdWNoIHRoZSBhcmd1bWVudHMgb2JqZWN0LiBUaGUNCiAgLy8gb25seSBhZGRpdGlvbmFsIGFsbG9jYXRpb24gcmVxdWlyZWQgaXMgdGhlIGNvbXBsZXRpb24gcmVjb3JkLCB3aGljaA0KICAvLyBoYXMgYSBzdGFibGUgc2hhcGUgYW5kIHNvIGhvcGVmdWxseSBzaG91bGQgYmUgY2hlYXAgdG8gYWxsb2NhdGUuDQogIGZ1bmN0aW9uIHRyeUNhdGNoKGZuLCBvYmosIGFyZykgew0KICAgIHRyeSB7DQogICAgICByZXR1cm4geyB0eXBlOiAibm9ybWFsIiwgYXJnOiBmbi5jYWxsKG9iaiwgYXJnKSB9Ow0KICAgIH0gY2F0Y2ggKGVycikgew0KICAgICAgcmV0dXJuIHsgdHlwZTogInRocm93IiwgYXJnOiBlcnIgfTsNCiAgICB9DQogIH0NCg0KICB2YXIgR2VuU3RhdGVTdXNwZW5kZWRTdGFydCA9ICJzdXNwZW5kZWRTdGFydCI7DQogIHZhciBHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkID0gInN1c3BlbmRlZFlpZWxkIjsNCiAgdmFyIEdlblN0YXRlRXhlY3V0aW5nID0gImV4ZWN1dGluZyI7DQogIHZhciBHZW5TdGF0ZUNvbXBsZXRlZCA9ICJjb21wbGV0ZWQiOw0KDQogIC8vIFJldHVybmluZyB0aGlzIG9iamVjdCBmcm9tIHRoZSBpbm5lckZuIGhhcyB0aGUgc2FtZSBlZmZlY3QgYXMNCiAgLy8gYnJlYWtpbmcgb3V0IG9mIHRoZSBkaXNwYXRjaCBzd2l0Y2ggc3RhdGVtZW50Lg0KICB2YXIgQ29udGludWVTZW50aW5lbCA9IHt9Ow0KDQogIC8vIER1bW15IGNvbnN0cnVjdG9yIGZ1bmN0aW9ucyB0aGF0IHdlIHVzZSBhcyB0aGUgLmNvbnN0cnVjdG9yIGFuZA0KICAvLyAuY29uc3RydWN0b3IucHJvdG90eXBlIHByb3BlcnRpZXMgZm9yIGZ1bmN0aW9ucyB0aGF0IHJldHVybiBHZW5lcmF0b3INCiAgLy8gb2JqZWN0cy4gRm9yIGZ1bGwgc3BlYyBjb21wbGlhbmNlLCB5b3UgbWF5IHdpc2ggdG8gY29uZmlndXJlIHlvdXINCiAgLy8gbWluaWZpZXIgbm90IHRvIG1hbmdsZSB0aGUgbmFtZXMgb2YgdGhlc2UgdHdvIGZ1bmN0aW9ucy4NCiAgZnVuY3Rpb24gR2VuZXJhdG9yKCkge30NCiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb24oKSB7fQ0KICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSgpIHt9DQoNCiAgdmFyIEdwID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUucHJvdG90eXBlID0gR2VuZXJhdG9yLnByb3RvdHlwZTsNCiAgR2VuZXJhdG9yRnVuY3Rpb24ucHJvdG90eXBlID0gR3AuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTsNCiAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvbjsNCiAgR2VuZXJhdG9yRnVuY3Rpb24uZGlzcGxheU5hbWUgPSAiR2VuZXJhdG9yRnVuY3Rpb24iOw0KDQogIC8vIEhlbHBlciBmb3IgZGVmaW5pbmcgdGhlIC5uZXh0LCAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMgb2YgdGhlDQogIC8vIEl0ZXJhdG9yIGludGVyZmFjZSBpbiB0ZXJtcyBvZiBhIHNpbmdsZSAuX2ludm9rZSBtZXRob2QuDQogIGZ1bmN0aW9uIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhwcm90b3R5cGUpIHsNCiAgICBbIm5leHQiLCAidGhyb3ciLCAicmV0dXJuIl0uZm9yRWFjaChmdW5jdGlvbihtZXRob2QpIHsNCiAgICAgIHByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24oYXJnKSB7DQogICAgICAgIHJldHVybiB0aGlzLl9pbnZva2UobWV0aG9kLCBhcmcpOw0KICAgICAgfTsNCiAgICB9KTsNCiAgfQ0KDQogIHJ1bnRpbWUuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKGdlbkZ1bikgew0KICAgIHZhciBjdG9yID0gdHlwZW9mIGdlbkZ1biA9PT0gImZ1bmN0aW9uIiAmJiBnZW5GdW4uY29uc3RydWN0b3I7DQogICAgcmV0dXJuIGN0b3INCiAgICAgID8gY3RvciA9PT0gR2VuZXJhdG9yRnVuY3Rpb24gfHwNCiAgICAgICAgLy8gRm9yIHRoZSBuYXRpdmUgR2VuZXJhdG9yRnVuY3Rpb24gY29uc3RydWN0b3IsIHRoZSBiZXN0IHdlIGNhbg0KICAgICAgICAvLyBkbyBpcyB0byBjaGVjayBpdHMgLm5hbWUgcHJvcGVydHkuDQogICAgICAgIChjdG9yLmRpc3BsYXlOYW1lIHx8IGN0b3IubmFtZSkgPT09ICJHZW5lcmF0b3JGdW5jdGlvbiINCiAgICAgIDogZmFsc2U7DQogIH07DQoNCiAgcnVudGltZS5tYXJrID0gZnVuY3Rpb24oZ2VuRnVuKSB7DQogICAgaWYgKE9iamVjdC5zZXRQcm90b3R5cGVPZikgew0KICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKGdlbkZ1biwgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUpOw0KICAgIH0gZWxzZSB7DQogICAgICBnZW5GdW4uX19wcm90b19fID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGU7DQogICAgfQ0KICAgIGdlbkZ1bi5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEdwKTsNCiAgICByZXR1cm4gZ2VuRnVuOw0KICB9Ow0KDQogIC8vIFdpdGhpbiB0aGUgYm9keSBvZiBhbnkgYXN5bmMgZnVuY3Rpb24sIGBhd2FpdCB4YCBpcyB0cmFuc2Zvcm1lZCB0bw0KICAvLyBgeWllbGQgcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKHgpYCwgc28gdGhhdCB0aGUgcnVudGltZSBjYW4gdGVzdA0KICAvLyBgdmFsdWUgaW5zdGFuY2VvZiBBd2FpdEFyZ3VtZW50YCB0byBkZXRlcm1pbmUgaWYgdGhlIHlpZWxkZWQgdmFsdWUgaXMNCiAgLy8gbWVhbnQgdG8gYmUgYXdhaXRlZC4gU29tZSBtYXkgY29uc2lkZXIgdGhlIG5hbWUgb2YgdGhpcyBtZXRob2QgdG9vDQogIC8vIGN1dGVzeSwgYnV0IHRoZXkgYXJlIGN1cm11ZGdlb25zLg0KICBydW50aW1lLmF3cmFwID0gZnVuY3Rpb24oYXJnKSB7DQogICAgcmV0dXJuIG5ldyBBd2FpdEFyZ3VtZW50KGFyZyk7DQogIH07DQoNCiAgZnVuY3Rpb24gQXdhaXRBcmd1bWVudChhcmcpIHsNCiAgICB0aGlzLmFyZyA9IGFyZzsNCiAgfQ0KDQogIGZ1bmN0aW9uIEFzeW5jSXRlcmF0b3IoZ2VuZXJhdG9yKSB7DQogICAgLy8gVGhpcyBpbnZva2UgZnVuY3Rpb24gaXMgd3JpdHRlbiBpbiBhIHN0eWxlIHRoYXQgYXNzdW1lcyBzb21lDQogICAgLy8gY2FsbGluZyBmdW5jdGlvbiAob3IgUHJvbWlzZSkgd2lsbCBoYW5kbGUgZXhjZXB0aW9ucy4NCiAgICBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcpIHsNCiAgICAgIHZhciByZXN1bHQgPSBnZW5lcmF0b3JbbWV0aG9kXShhcmcpOw0KICAgICAgdmFyIHZhbHVlID0gcmVzdWx0LnZhbHVlOw0KICAgICAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgQXdhaXRBcmd1bWVudA0KICAgICAgICA/IFByb21pc2UucmVzb2x2ZSh2YWx1ZS5hcmcpLnRoZW4oaW52b2tlTmV4dCwgaW52b2tlVGhyb3cpDQogICAgICAgIDogUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKGZ1bmN0aW9uKHVud3JhcHBlZCkgew0KICAgICAgICAgICAgLy8gV2hlbiBhIHlpZWxkZWQgUHJvbWlzZSBpcyByZXNvbHZlZCwgaXRzIGZpbmFsIHZhbHVlIGJlY29tZXMNCiAgICAgICAgICAgIC8vIHRoZSAudmFsdWUgb2YgdGhlIFByb21pc2U8e3ZhbHVlLGRvbmV9PiByZXN1bHQgZm9yIHRoZQ0KICAgICAgICAgICAgLy8gY3VycmVudCBpdGVyYXRpb24uIElmIHRoZSBQcm9taXNlIGlzIHJlamVjdGVkLCBob3dldmVyLCB0aGUNCiAgICAgICAgICAgIC8vIHJlc3VsdCBmb3IgdGhpcyBpdGVyYXRpb24gd2lsbCBiZSByZWplY3RlZCB3aXRoIHRoZSBzYW1lDQogICAgICAgICAgICAvLyByZWFzb24uIE5vdGUgdGhhdCByZWplY3Rpb25zIG9mIHlpZWxkZWQgUHJvbWlzZXMgYXJlIG5vdA0KICAgICAgICAgICAgLy8gdGhyb3duIGJhY2sgaW50byB0aGUgZ2VuZXJhdG9yIGZ1bmN0aW9uLCBhcyBpcyB0aGUgY2FzZQ0KICAgICAgICAgICAgLy8gd2hlbiBhbiBhd2FpdGVkIFByb21pc2UgaXMgcmVqZWN0ZWQuIFRoaXMgZGlmZmVyZW5jZSBpbg0KICAgICAgICAgICAgLy8gYmVoYXZpb3IgYmV0d2VlbiB5aWVsZCBhbmQgYXdhaXQgaXMgaW1wb3J0YW50LCBiZWNhdXNlIGl0DQogICAgICAgICAgICAvLyBhbGxvd3MgdGhlIGNvbnN1bWVyIHRvIGRlY2lkZSB3aGF0IHRvIGRvIHdpdGggdGhlIHlpZWxkZWQNCiAgICAgICAgICAgIC8vIHJlamVjdGlvbiAoc3dhbGxvdyBpdCBhbmQgY29udGludWUsIG1hbnVhbGx5IC50aHJvdyBpdCBiYWNrDQogICAgICAgICAgICAvLyBpbnRvIHRoZSBnZW5lcmF0b3IsIGFiYW5kb24gaXRlcmF0aW9uLCB3aGF0ZXZlcikuIFdpdGgNCiAgICAgICAgICAgIC8vIGF3YWl0LCBieSBjb250cmFzdCwgdGhlcmUgaXMgbm8gb3Bwb3J0dW5pdHkgdG8gZXhhbWluZSB0aGUNCiAgICAgICAgICAgIC8vIHJlamVjdGlvbiByZWFzb24gb3V0c2lkZSB0aGUgZ2VuZXJhdG9yIGZ1bmN0aW9uLCBzbyB0aGUNCiAgICAgICAgICAgIC8vIG9ubHkgb3B0aW9uIGlzIHRvIHRocm93IGl0IGZyb20gdGhlIGF3YWl0IGV4cHJlc3Npb24sIGFuZA0KICAgICAgICAgICAgLy8gbGV0IHRoZSBnZW5lcmF0b3IgZnVuY3Rpb24gaGFuZGxlIHRoZSBleGNlcHRpb24uDQogICAgICAgICAgICByZXN1bHQudmFsdWUgPSB1bndyYXBwZWQ7DQogICAgICAgICAgICByZXR1cm4gcmVzdWx0Ow0KICAgICAgICAgIH0pOw0KICAgIH0NCg0KICAgIGlmICh0eXBlb2YgcHJvY2VzcyA9PT0gIm9iamVjdCIgJiYgcHJvY2Vzcy5kb21haW4pIHsNCiAgICAgIGludm9rZSA9IHByb2Nlc3MuZG9tYWluLmJpbmQoaW52b2tlKTsNCiAgICB9DQoNCiAgICB2YXIgaW52b2tlTmV4dCA9IGludm9rZS5iaW5kKGdlbmVyYXRvciwgIm5leHQiKTsNCiAgICB2YXIgaW52b2tlVGhyb3cgPSBpbnZva2UuYmluZChnZW5lcmF0b3IsICJ0aHJvdyIpOw0KICAgIHZhciBpbnZva2VSZXR1cm4gPSBpbnZva2UuYmluZChnZW5lcmF0b3IsICJyZXR1cm4iKTsNCiAgICB2YXIgcHJldmlvdXNQcm9taXNlOw0KDQogICAgZnVuY3Rpb24gZW5xdWV1ZShtZXRob2QsIGFyZykgew0KICAgICAgZnVuY3Rpb24gY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKSB7DQogICAgICAgIHJldHVybiBpbnZva2UobWV0aG9kLCBhcmcpOw0KICAgICAgfQ0KDQogICAgICByZXR1cm4gcHJldmlvdXNQcm9taXNlID0NCiAgICAgICAgLy8gSWYgZW5xdWV1ZSBoYXMgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIHdlIHdhbnQgdG8gd2FpdCB1bnRpbA0KICAgICAgICAvLyBhbGwgcHJldmlvdXMgUHJvbWlzZXMgaGF2ZSBiZWVuIHJlc29sdmVkIGJlZm9yZSBjYWxsaW5nIGludm9rZSwNCiAgICAgICAgLy8gc28gdGhhdCByZXN1bHRzIGFyZSBhbHdheXMgZGVsaXZlcmVkIGluIHRoZSBjb3JyZWN0IG9yZGVyLiBJZg0KICAgICAgICAvLyBlbnF1ZXVlIGhhcyBub3QgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIGl0IGlzIGltcG9ydGFudCB0bw0KICAgICAgICAvLyBjYWxsIGludm9rZSBpbW1lZGlhdGVseSwgd2l0aG91dCB3YWl0aW5nIG9uIGEgY2FsbGJhY2sgdG8gZmlyZSwNCiAgICAgICAgLy8gc28gdGhhdCB0aGUgYXN5bmMgZ2VuZXJhdG9yIGZ1bmN0aW9uIGhhcyB0aGUgb3Bwb3J0dW5pdHkgdG8gZG8NCiAgICAgICAgLy8gYW55IG5lY2Vzc2FyeSBzZXR1cCBpbiBhIHByZWRpY3RhYmxlIHdheS4gVGhpcyBwcmVkaWN0YWJpbGl0eQ0KICAgICAgICAvLyBpcyB3aHkgdGhlIFByb21pc2UgY29uc3RydWN0b3Igc3luY2hyb25vdXNseSBpbnZva2VzIGl0cw0KICAgICAgICAvLyBleGVjdXRvciBjYWxsYmFjaywgYW5kIHdoeSBhc3luYyBmdW5jdGlvbnMgc3luY2hyb25vdXNseQ0KICAgICAgICAvLyBleGVjdXRlIGNvZGUgYmVmb3JlIHRoZSBmaXJzdCBhd2FpdC4gU2luY2Ugd2UgaW1wbGVtZW50IHNpbXBsZQ0KICAgICAgICAvLyBhc3luYyBmdW5jdGlvbnMgaW4gdGVybXMgb2YgYXN5bmMgZ2VuZXJhdG9ycywgaXQgaXMgZXNwZWNpYWxseQ0KICAgICAgICAvLyBpbXBvcnRhbnQgdG8gZ2V0IHRoaXMgcmlnaHQsIGV2ZW4gdGhvdWdoIGl0IHJlcXVpcmVzIGNhcmUuDQogICAgICAgIHByZXZpb3VzUHJvbWlzZSA/IHByZXZpb3VzUHJvbWlzZS50aGVuKA0KICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnLA0KICAgICAgICAgIC8vIEF2b2lkIHByb3BhZ2F0aW5nIGZhaWx1cmVzIHRvIFByb21pc2VzIHJldHVybmVkIGJ5IGxhdGVyDQogICAgICAgICAgLy8gaW52b2NhdGlvbnMgb2YgdGhlIGl0ZXJhdG9yLg0KICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnDQogICAgICAgICkgOiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgew0KICAgICAgICAgIHJlc29sdmUoY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKSk7DQogICAgICAgIH0pOw0KICAgIH0NCg0KICAgIC8vIERlZmluZSB0aGUgdW5pZmllZCBoZWxwZXIgbWV0aG9kIHRoYXQgaXMgdXNlZCB0byBpbXBsZW1lbnQgLm5leHQsDQogICAgLy8gLnRocm93LCBhbmQgLnJldHVybiAoc2VlIGRlZmluZUl0ZXJhdG9yTWV0aG9kcykuDQogICAgdGhpcy5faW52b2tlID0gZW5xdWV1ZTsNCiAgfQ0KDQogIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSk7DQoNCiAgLy8gTm90ZSB0aGF0IHNpbXBsZSBhc3luYyBmdW5jdGlvbnMgYXJlIGltcGxlbWVudGVkIG9uIHRvcCBvZg0KICAvLyBBc3luY0l0ZXJhdG9yIG9iamVjdHM7IHRoZXkganVzdCByZXR1cm4gYSBQcm9taXNlIGZvciB0aGUgdmFsdWUgb2YNCiAgLy8gdGhlIGZpbmFsIHJlc3VsdCBwcm9kdWNlZCBieSB0aGUgaXRlcmF0b3IuDQogIHJ1bnRpbWUuYXN5bmMgPSBmdW5jdGlvbihpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkgew0KICAgIHZhciBpdGVyID0gbmV3IEFzeW5jSXRlcmF0b3IoDQogICAgICB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KQ0KICAgICk7DQoNCiAgICByZXR1cm4gcnVudGltZS5pc0dlbmVyYXRvckZ1bmN0aW9uKG91dGVyRm4pDQogICAgICA/IGl0ZXIgLy8gSWYgb3V0ZXJGbiBpcyBhIGdlbmVyYXRvciwgcmV0dXJuIHRoZSBmdWxsIGl0ZXJhdG9yLg0KICAgICAgOiBpdGVyLm5leHQoKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCkgew0KICAgICAgICAgIHJldHVybiByZXN1bHQuZG9uZSA/IHJlc3VsdC52YWx1ZSA6IGl0ZXIubmV4dCgpOw0KICAgICAgICB9KTsNCiAgfTsNCg0KICBmdW5jdGlvbiBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpIHsNCiAgICB2YXIgc3RhdGUgPSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0Ow0KDQogICAgcmV0dXJuIGZ1bmN0aW9uIGludm9rZShtZXRob2QsIGFyZykgew0KICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUV4ZWN1dGluZykgew0KICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIkdlbmVyYXRvciBpcyBhbHJlYWR5IHJ1bm5pbmciKTsNCiAgICAgIH0NCg0KICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUNvbXBsZXRlZCkgew0KICAgICAgICBpZiAobWV0aG9kID09PSAidGhyb3ciKSB7DQogICAgICAgICAgdGhyb3cgYXJnOw0KICAgICAgICB9DQoNCiAgICAgICAgLy8gQmUgZm9yZ2l2aW5nLCBwZXIgMjUuMy4zLjMuMyBvZiB0aGUgc3BlYzoNCiAgICAgICAgLy8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLWdlbmVyYXRvcnJlc3VtZQ0KICAgICAgICByZXR1cm4gZG9uZVJlc3VsdCgpOw0KICAgICAgfQ0KDQogICAgICB3aGlsZSAodHJ1ZSkgew0KICAgICAgICB2YXIgZGVsZWdhdGUgPSBjb250ZXh0LmRlbGVnYXRlOw0KICAgICAgICBpZiAoZGVsZWdhdGUpIHsNCiAgICAgICAgICBpZiAobWV0aG9kID09PSAicmV0dXJuIiB8fA0KICAgICAgICAgICAgICAobWV0aG9kID09PSAidGhyb3ciICYmIGRlbGVnYXRlLml0ZXJhdG9yW21ldGhvZF0gPT09IHVuZGVmaW5lZCkpIHsNCiAgICAgICAgICAgIC8vIEEgcmV0dXJuIG9yIHRocm93ICh3aGVuIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgbm8gdGhyb3cNCiAgICAgICAgICAgIC8vIG1ldGhvZCkgYWx3YXlzIHRlcm1pbmF0ZXMgdGhlIHlpZWxkKiBsb29wLg0KICAgICAgICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7DQoNCiAgICAgICAgICAgIC8vIElmIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgYSByZXR1cm4gbWV0aG9kLCBnaXZlIGl0IGENCiAgICAgICAgICAgIC8vIGNoYW5jZSB0byBjbGVhbiB1cC4NCiAgICAgICAgICAgIHZhciByZXR1cm5NZXRob2QgPSBkZWxlZ2F0ZS5pdGVyYXRvclsicmV0dXJuIl07DQogICAgICAgICAgICBpZiAocmV0dXJuTWV0aG9kKSB7DQogICAgICAgICAgICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChyZXR1cm5NZXRob2QsIGRlbGVnYXRlLml0ZXJhdG9yLCBhcmcpOw0KICAgICAgICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09ICJ0aHJvdyIpIHsNCiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgcmV0dXJuIG1ldGhvZCB0aHJldyBhbiBleGNlcHRpb24sIGxldCB0aGF0DQogICAgICAgICAgICAgICAgLy8gZXhjZXB0aW9uIHByZXZhaWwgb3ZlciB0aGUgb3JpZ2luYWwgcmV0dXJuIG9yIHRocm93Lg0KICAgICAgICAgICAgICAgIG1ldGhvZCA9ICJ0aHJvdyI7DQogICAgICAgICAgICAgICAgYXJnID0gcmVjb3JkLmFyZzsNCiAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAobWV0aG9kID09PSAicmV0dXJuIikgew0KICAgICAgICAgICAgICAvLyBDb250aW51ZSB3aXRoIHRoZSBvdXRlciByZXR1cm4sIG5vdyB0aGF0IHRoZSBkZWxlZ2F0ZQ0KICAgICAgICAgICAgICAvLyBpdGVyYXRvciBoYXMgYmVlbiB0ZXJtaW5hdGVkLg0KICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQoNCiAgICAgICAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2goDQogICAgICAgICAgICBkZWxlZ2F0ZS5pdGVyYXRvclttZXRob2RdLA0KICAgICAgICAgICAgZGVsZWdhdGUuaXRlcmF0b3IsDQogICAgICAgICAgICBhcmcNCiAgICAgICAgICApOw0KDQogICAgICAgICAgaWYgKHJlY29yZC50eXBlID09PSAidGhyb3ciKSB7DQogICAgICAgICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDsNCg0KICAgICAgICAgICAgLy8gTGlrZSByZXR1cm5pbmcgZ2VuZXJhdG9yLnRocm93KHVuY2F1Z2h0KSwgYnV0IHdpdGhvdXQgdGhlDQogICAgICAgICAgICAvLyBvdmVyaGVhZCBvZiBhbiBleHRyYSBmdW5jdGlvbiBjYWxsLg0KICAgICAgICAgICAgbWV0aG9kID0gInRocm93IjsNCiAgICAgICAgICAgIGFyZyA9IHJlY29yZC5hcmc7DQogICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICB9DQoNCiAgICAgICAgICAvLyBEZWxlZ2F0ZSBnZW5lcmF0b3IgcmFuIGFuZCBoYW5kbGVkIGl0cyBvd24gZXhjZXB0aW9ucyBzbw0KICAgICAgICAgIC8vIHJlZ2FyZGxlc3Mgb2Ygd2hhdCB0aGUgbWV0aG9kIHdhcywgd2UgY29udGludWUgYXMgaWYgaXQgaXMNCiAgICAgICAgICAvLyAibmV4dCIgd2l0aCBhbiB1bmRlZmluZWQgYXJnLg0KICAgICAgICAgIG1ldGhvZCA9ICJuZXh0IjsNCiAgICAgICAgICBhcmcgPSB1bmRlZmluZWQ7DQoNCiAgICAgICAgICB2YXIgaW5mbyA9IHJlY29yZC5hcmc7DQogICAgICAgICAgaWYgKGluZm8uZG9uZSkgew0KICAgICAgICAgICAgY29udGV4dFtkZWxlZ2F0ZS5yZXN1bHROYW1lXSA9IGluZm8udmFsdWU7DQogICAgICAgICAgICBjb250ZXh0Lm5leHQgPSBkZWxlZ2F0ZS5uZXh0TG9jOw0KICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlU3VzcGVuZGVkWWllbGQ7DQogICAgICAgICAgICByZXR1cm4gaW5mbzsNCiAgICAgICAgICB9DQoNCiAgICAgICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChtZXRob2QgPT09ICJuZXh0Iikgew0KICAgICAgICAgIGNvbnRleHQuX3NlbnQgPSBhcmc7DQoNCiAgICAgICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlU3VzcGVuZGVkWWllbGQpIHsNCiAgICAgICAgICAgIGNvbnRleHQuc2VudCA9IGFyZzsNCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgY29udGV4dC5zZW50ID0gdW5kZWZpbmVkOw0KICAgICAgICAgIH0NCiAgICAgICAgfSBlbHNlIGlmIChtZXRob2QgPT09ICJ0aHJvdyIpIHsNCiAgICAgICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlU3VzcGVuZGVkU3RhcnQpIHsNCiAgICAgICAgICAgIHN0YXRlID0gR2VuU3RhdGVDb21wbGV0ZWQ7DQogICAgICAgICAgICB0aHJvdyBhcmc7DQogICAgICAgICAgfQ0KDQogICAgICAgICAgaWYgKGNvbnRleHQuZGlzcGF0Y2hFeGNlcHRpb24oYXJnKSkgew0KICAgICAgICAgICAgLy8gSWYgdGhlIGRpc3BhdGNoZWQgZXhjZXB0aW9uIHdhcyBjYXVnaHQgYnkgYSBjYXRjaCBibG9jaywNCiAgICAgICAgICAgIC8vIHRoZW4gbGV0IHRoYXQgY2F0Y2ggYmxvY2sgaGFuZGxlIHRoZSBleGNlcHRpb24gbm9ybWFsbHkuDQogICAgICAgICAgICBtZXRob2QgPSAibmV4dCI7DQogICAgICAgICAgICBhcmcgPSB1bmRlZmluZWQ7DQogICAgICAgICAgfQ0KDQogICAgICAgIH0gZWxzZSBpZiAobWV0aG9kID09PSAicmV0dXJuIikgew0KICAgICAgICAgIGNvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBhcmcpOw0KICAgICAgICB9DQoNCiAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUV4ZWN1dGluZzsNCg0KICAgICAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2goaW5uZXJGbiwgc2VsZiwgY29udGV4dCk7DQogICAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gIm5vcm1hbCIpIHsNCiAgICAgICAgICAvLyBJZiBhbiBleGNlcHRpb24gaXMgdGhyb3duIGZyb20gaW5uZXJGbiwgd2UgbGVhdmUgc3RhdGUgPT09DQogICAgICAgICAgLy8gR2VuU3RhdGVFeGVjdXRpbmcgYW5kIGxvb3AgYmFjayBmb3IgYW5vdGhlciBpbnZvY2F0aW9uLg0KICAgICAgICAgIHN0YXRlID0gY29udGV4dC5kb25lDQogICAgICAgICAgICA/IEdlblN0YXRlQ29tcGxldGVkDQogICAgICAgICAgICA6IEdlblN0YXRlU3VzcGVuZGVkWWllbGQ7DQoNCiAgICAgICAgICB2YXIgaW5mbyA9IHsNCiAgICAgICAgICAgIHZhbHVlOiByZWNvcmQuYXJnLA0KICAgICAgICAgICAgZG9uZTogY29udGV4dC5kb25lDQogICAgICAgICAgfTsNCg0KICAgICAgICAgIGlmIChyZWNvcmQuYXJnID09PSBDb250aW51ZVNlbnRpbmVsKSB7DQogICAgICAgICAgICBpZiAoY29udGV4dC5kZWxlZ2F0ZSAmJiBtZXRob2QgPT09ICJuZXh0Iikgew0KICAgICAgICAgICAgICAvLyBEZWxpYmVyYXRlbHkgZm9yZ2V0IHRoZSBsYXN0IHNlbnQgdmFsdWUgc28gdGhhdCB3ZSBkb24ndA0KICAgICAgICAgICAgICAvLyBhY2NpZGVudGFsbHkgcGFzcyBpdCBvbiB0byB0aGUgZGVsZWdhdGUuDQogICAgICAgICAgICAgIGFyZyA9IHVuZGVmaW5lZDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIGluZm87DQogICAgICAgICAgfQ0KDQogICAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09ICJ0aHJvdyIpIHsNCiAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkOw0KICAgICAgICAgIC8vIERpc3BhdGNoIHRoZSBleGNlcHRpb24gYnkgbG9vcGluZyBiYWNrIGFyb3VuZCB0byB0aGUNCiAgICAgICAgICAvLyBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGFyZykgY2FsbCBhYm92ZS4NCiAgICAgICAgICBtZXRob2QgPSAidGhyb3ciOw0KICAgICAgICAgIGFyZyA9IHJlY29yZC5hcmc7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9Ow0KICB9DQoNCiAgLy8gRGVmaW5lIEdlbmVyYXRvci5wcm90b3R5cGUue25leHQsdGhyb3cscmV0dXJufSBpbiB0ZXJtcyBvZiB0aGUNCiAgLy8gdW5pZmllZCAuX2ludm9rZSBoZWxwZXIgbWV0aG9kLg0KICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoR3ApOw0KDQogIEdwW2l0ZXJhdG9yU3ltYm9sXSA9IGZ1bmN0aW9uKCkgew0KICAgIHJldHVybiB0aGlzOw0KICB9Ow0KDQogIEdwLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7DQogICAgcmV0dXJuICJbb2JqZWN0IEdlbmVyYXRvcl0iOw0KICB9Ow0KDQogIGZ1bmN0aW9uIHB1c2hUcnlFbnRyeShsb2NzKSB7DQogICAgdmFyIGVudHJ5ID0geyB0cnlMb2M6IGxvY3NbMF0gfTsNCg0KICAgIGlmICgxIGluIGxvY3MpIHsNCiAgICAgIGVudHJ5LmNhdGNoTG9jID0gbG9jc1sxXTsNCiAgICB9DQoNCiAgICBpZiAoMiBpbiBsb2NzKSB7DQogICAgICBlbnRyeS5maW5hbGx5TG9jID0gbG9jc1syXTsNCiAgICAgIGVudHJ5LmFmdGVyTG9jID0gbG9jc1szXTsNCiAgICB9DQoNCiAgICB0aGlzLnRyeUVudHJpZXMucHVzaChlbnRyeSk7DQogIH0NCg0KICBmdW5jdGlvbiByZXNldFRyeUVudHJ5KGVudHJ5KSB7DQogICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb24gfHwge307DQogICAgcmVjb3JkLnR5cGUgPSAibm9ybWFsIjsNCiAgICBkZWxldGUgcmVjb3JkLmFyZzsNCiAgICBlbnRyeS5jb21wbGV0aW9uID0gcmVjb3JkOw0KICB9DQoNCiAgZnVuY3Rpb24gQ29udGV4dCh0cnlMb2NzTGlzdCkgew0KICAgIC8vIFRoZSByb290IGVudHJ5IG9iamVjdCAoZWZmZWN0aXZlbHkgYSB0cnkgc3RhdGVtZW50IHdpdGhvdXQgYSBjYXRjaA0KICAgIC8vIG9yIGEgZmluYWxseSBibG9jaykgZ2l2ZXMgdXMgYSBwbGFjZSB0byBzdG9yZSB2YWx1ZXMgdGhyb3duIGZyb20NCiAgICAvLyBsb2NhdGlvbnMgd2hlcmUgdGhlcmUgaXMgbm8gZW5jbG9zaW5nIHRyeSBzdGF0ZW1lbnQuDQogICAgdGhpcy50cnlFbnRyaWVzID0gW3sgdHJ5TG9jOiAicm9vdCIgfV07DQogICAgdHJ5TG9jc0xpc3QuZm9yRWFjaChwdXNoVHJ5RW50cnksIHRoaXMpOw0KICAgIHRoaXMucmVzZXQodHJ1ZSk7DQogIH0NCg0KICBydW50aW1lLmtleXMgPSBmdW5jdGlvbihvYmplY3QpIHsNCiAgICB2YXIga2V5cyA9IFtdOw0KICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHsNCiAgICAgIGtleXMucHVzaChrZXkpOw0KICAgIH0NCiAgICBrZXlzLnJldmVyc2UoKTsNCg0KICAgIC8vIFJhdGhlciB0aGFuIHJldHVybmluZyBhbiBvYmplY3Qgd2l0aCBhIG5leHQgbWV0aG9kLCB3ZSBrZWVwDQogICAgLy8gdGhpbmdzIHNpbXBsZSBhbmQgcmV0dXJuIHRoZSBuZXh0IGZ1bmN0aW9uIGl0c2VsZi4NCiAgICByZXR1cm4gZnVuY3Rpb24gbmV4dCgpIHsNCiAgICAgIHdoaWxlIChrZXlzLmxlbmd0aCkgew0KICAgICAgICB2YXIga2V5ID0ga2V5cy5wb3AoKTsNCiAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHsNCiAgICAgICAgICBuZXh0LnZhbHVlID0ga2V5Ow0KICAgICAgICAgIG5leHQuZG9uZSA9IGZhbHNlOw0KICAgICAgICAgIHJldHVybiBuZXh0Ow0KICAgICAgICB9DQogICAgICB9DQoNCiAgICAgIC8vIFRvIGF2b2lkIGNyZWF0aW5nIGFuIGFkZGl0aW9uYWwgb2JqZWN0LCB3ZSBqdXN0IGhhbmcgdGhlIC52YWx1ZQ0KICAgICAgLy8gYW5kIC5kb25lIHByb3BlcnRpZXMgb2ZmIHRoZSBuZXh0IGZ1bmN0aW9uIG9iamVjdCBpdHNlbGYuIFRoaXMNCiAgICAgIC8vIGFsc28gZW5zdXJlcyB0aGF0IHRoZSBtaW5pZmllciB3aWxsIG5vdCBhbm9ueW1pemUgdGhlIGZ1bmN0aW9uLg0KICAgICAgbmV4dC5kb25lID0gdHJ1ZTsNCiAgICAgIHJldHVybiBuZXh0Ow0KICAgIH07DQogIH07DQoNCiAgZnVuY3Rpb24gdmFsdWVzKGl0ZXJhYmxlKSB7DQogICAgaWYgKGl0ZXJhYmxlKSB7DQogICAgICB2YXIgaXRlcmF0b3JNZXRob2QgPSBpdGVyYWJsZVtpdGVyYXRvclN5bWJvbF07DQogICAgICBpZiAoaXRlcmF0b3JNZXRob2QpIHsNCiAgICAgICAgcmV0dXJuIGl0ZXJhdG9yTWV0aG9kLmNhbGwoaXRlcmFibGUpOw0KICAgICAgfQ0KDQogICAgICBpZiAodHlwZW9mIGl0ZXJhYmxlLm5leHQgPT09ICJmdW5jdGlvbiIpIHsNCiAgICAgICAgcmV0dXJuIGl0ZXJhYmxlOw0KICAgICAgfQ0KDQogICAgICBpZiAoIWlzTmFOKGl0ZXJhYmxlLmxlbmd0aCkpIHsNCiAgICAgICAgdmFyIGkgPSAtMSwgbmV4dCA9IGZ1bmN0aW9uIG5leHQoKSB7DQogICAgICAgICAgd2hpbGUgKCsraSA8IGl0ZXJhYmxlLmxlbmd0aCkgew0KICAgICAgICAgICAgaWYgKGhhc093bi5jYWxsKGl0ZXJhYmxlLCBpKSkgew0KICAgICAgICAgICAgICBuZXh0LnZhbHVlID0gaXRlcmFibGVbaV07DQogICAgICAgICAgICAgIG5leHQuZG9uZSA9IGZhbHNlOw0KICAgICAgICAgICAgICByZXR1cm4gbmV4dDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQoNCiAgICAgICAgICBuZXh0LnZhbHVlID0gdW5kZWZpbmVkOw0KICAgICAgICAgIG5leHQuZG9uZSA9IHRydWU7DQoNCiAgICAgICAgICByZXR1cm4gbmV4dDsNCiAgICAgICAgfTsNCg0KICAgICAgICByZXR1cm4gbmV4dC5uZXh0ID0gbmV4dDsNCiAgICAgIH0NCiAgICB9DQoNCiAgICAvLyBSZXR1cm4gYW4gaXRlcmF0b3Igd2l0aCBubyB2YWx1ZXMuDQogICAgcmV0dXJuIHsgbmV4dDogZG9uZVJlc3VsdCB9Ow0KICB9DQogIHJ1bnRpbWUudmFsdWVzID0gdmFsdWVzOw0KDQogIGZ1bmN0aW9uIGRvbmVSZXN1bHQoKSB7DQogICAgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9Ow0KICB9DQoNCiAgQ29udGV4dC5wcm90b3R5cGUgPSB7DQogICAgY29uc3RydWN0b3I6IENvbnRleHQsDQoNCiAgICByZXNldDogZnVuY3Rpb24oc2tpcFRlbXBSZXNldCkgew0KICAgICAgdGhpcy5wcmV2ID0gMDsNCiAgICAgIHRoaXMubmV4dCA9IDA7DQogICAgICB0aGlzLnNlbnQgPSB1bmRlZmluZWQ7DQogICAgICB0aGlzLmRvbmUgPSBmYWxzZTsNCiAgICAgIHRoaXMuZGVsZWdhdGUgPSBudWxsOw0KDQogICAgICB0aGlzLnRyeUVudHJpZXMuZm9yRWFjaChyZXNldFRyeUVudHJ5KTsNCg0KICAgICAgaWYgKCFza2lwVGVtcFJlc2V0KSB7DQogICAgICAgIGZvciAodmFyIG5hbWUgaW4gdGhpcykgew0KICAgICAgICAgIC8vIE5vdCBzdXJlIGFib3V0IHRoZSBvcHRpbWFsIG9yZGVyIG9mIHRoZXNlIGNvbmRpdGlvbnM6DQogICAgICAgICAgaWYgKG5hbWUuY2hhckF0KDApID09PSAidCIgJiYNCiAgICAgICAgICAgICAgaGFzT3duLmNhbGwodGhpcywgbmFtZSkgJiYNCiAgICAgICAgICAgICAgIWlzTmFOKCtuYW1lLnNsaWNlKDEpKSkgew0KICAgICAgICAgICAgdGhpc1tuYW1lXSA9IHVuZGVmaW5lZDsNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KDQogICAgc3RvcDogZnVuY3Rpb24oKSB7DQogICAgICB0aGlzLmRvbmUgPSB0cnVlOw0KDQogICAgICB2YXIgcm9vdEVudHJ5ID0gdGhpcy50cnlFbnRyaWVzWzBdOw0KICAgICAgdmFyIHJvb3RSZWNvcmQgPSByb290RW50cnkuY29tcGxldGlvbjsNCiAgICAgIGlmIChyb290UmVjb3JkLnR5cGUgPT09ICJ0aHJvdyIpIHsNCiAgICAgICAgdGhyb3cgcm9vdFJlY29yZC5hcmc7DQogICAgICB9DQoNCiAgICAgIHJldHVybiB0aGlzLnJ2YWw7DQogICAgfSwNCg0KICAgIGRpc3BhdGNoRXhjZXB0aW9uOiBmdW5jdGlvbihleGNlcHRpb24pIHsNCiAgICAgIGlmICh0aGlzLmRvbmUpIHsNCiAgICAgICAgdGhyb3cgZXhjZXB0aW9uOw0KICAgICAgfQ0KDQogICAgICB2YXIgY29udGV4dCA9IHRoaXM7DQogICAgICBmdW5jdGlvbiBoYW5kbGUobG9jLCBjYXVnaHQpIHsNCiAgICAgICAgcmVjb3JkLnR5cGUgPSAidGhyb3ciOw0KICAgICAgICByZWNvcmQuYXJnID0gZXhjZXB0aW9uOw0KICAgICAgICBjb250ZXh0Lm5leHQgPSBsb2M7DQogICAgICAgIHJldHVybiAhIWNhdWdodDsNCiAgICAgIH0NCg0KICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgew0KICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07DQogICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uOw0KDQogICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09ICJyb290Iikgew0KICAgICAgICAgIC8vIEV4Y2VwdGlvbiB0aHJvd24gb3V0c2lkZSBvZiBhbnkgdHJ5IGJsb2NrIHRoYXQgY291bGQgaGFuZGxlDQogICAgICAgICAgLy8gaXQsIHNvIHNldCB0aGUgY29tcGxldGlvbiB2YWx1ZSBvZiB0aGUgZW50aXJlIGZ1bmN0aW9uIHRvDQogICAgICAgICAgLy8gdGhyb3cgdGhlIGV4Y2VwdGlvbi4NCiAgICAgICAgICByZXR1cm4gaGFuZGxlKCJlbmQiKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2KSB7DQogICAgICAgICAgdmFyIGhhc0NhdGNoID0gaGFzT3duLmNhbGwoZW50cnksICJjYXRjaExvYyIpOw0KICAgICAgICAgIHZhciBoYXNGaW5hbGx5ID0gaGFzT3duLmNhbGwoZW50cnksICJmaW5hbGx5TG9jIik7DQoNCiAgICAgICAgICBpZiAoaGFzQ2F0Y2ggJiYgaGFzRmluYWxseSkgew0KICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSB7DQogICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsIHRydWUpOw0KICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7DQogICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0NhdGNoKSB7DQogICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHsNCiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0ZpbmFsbHkpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7DQogICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseSIpOw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQoNCiAgICBhYnJ1cHQ6IGZ1bmN0aW9uKHR5cGUsIGFyZykgew0KICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgew0KICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07DQogICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2ICYmDQogICAgICAgICAgICBoYXNPd24uY2FsbChlbnRyeSwgImZpbmFsbHlMb2MiKSAmJg0KICAgICAgICAgICAgdGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykgew0KICAgICAgICAgIHZhciBmaW5hbGx5RW50cnkgPSBlbnRyeTsNCiAgICAgICAgICBicmVhazsNCiAgICAgICAgfQ0KICAgICAgfQ0KDQogICAgICBpZiAoZmluYWxseUVudHJ5ICYmDQogICAgICAgICAgKHR5cGUgPT09ICJicmVhayIgfHwNCiAgICAgICAgICAgdHlwZSA9PT0gImNvbnRpbnVlIikgJiYNCiAgICAgICAgICBmaW5hbGx5RW50cnkudHJ5TG9jIDw9IGFyZyAmJg0KICAgICAgICAgIGFyZyA8PSBmaW5hbGx5RW50cnkuZmluYWxseUxvYykgew0KICAgICAgICAvLyBJZ25vcmUgdGhlIGZpbmFsbHkgZW50cnkgaWYgY29udHJvbCBpcyBub3QganVtcGluZyB0byBhDQogICAgICAgIC8vIGxvY2F0aW9uIG91dHNpZGUgdGhlIHRyeS9jYXRjaCBibG9jay4NCiAgICAgICAgZmluYWxseUVudHJ5ID0gbnVsbDsNCiAgICAgIH0NCg0KICAgICAgdmFyIHJlY29yZCA9IGZpbmFsbHlFbnRyeSA/IGZpbmFsbHlFbnRyeS5jb21wbGV0aW9uIDoge307DQogICAgICByZWNvcmQudHlwZSA9IHR5cGU7DQogICAgICByZWNvcmQuYXJnID0gYXJnOw0KDQogICAgICBpZiAoZmluYWxseUVudHJ5KSB7DQogICAgICAgIHRoaXMubmV4dCA9IGZpbmFsbHlFbnRyeS5maW5hbGx5TG9jOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy5jb21wbGV0ZShyZWNvcmQpOw0KICAgICAgfQ0KDQogICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDsNCiAgICB9LA0KDQogICAgY29tcGxldGU6IGZ1bmN0aW9uKHJlY29yZCwgYWZ0ZXJMb2MpIHsNCiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gInRocm93Iikgew0KICAgICAgICB0aHJvdyByZWNvcmQuYXJnOw0KICAgICAgfQ0KDQogICAgICBpZiAocmVjb3JkLnR5cGUgPT09ICJicmVhayIgfHwNCiAgICAgICAgICByZWNvcmQudHlwZSA9PT0gImNvbnRpbnVlIikgew0KICAgICAgICB0aGlzLm5leHQgPSByZWNvcmQuYXJnOw0KICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gInJldHVybiIpIHsNCiAgICAgICAgdGhpcy5ydmFsID0gcmVjb3JkLmFyZzsNCiAgICAgICAgdGhpcy5uZXh0ID0gImVuZCI7DQogICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSAibm9ybWFsIiAmJiBhZnRlckxvYykgew0KICAgICAgICB0aGlzLm5leHQgPSBhZnRlckxvYzsNCiAgICAgIH0NCiAgICB9LA0KDQogICAgZmluaXNoOiBmdW5jdGlvbihmaW5hbGx5TG9jKSB7DQogICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7DQogICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTsNCiAgICAgICAgaWYgKGVudHJ5LmZpbmFsbHlMb2MgPT09IGZpbmFsbHlMb2MpIHsNCiAgICAgICAgICB0aGlzLmNvbXBsZXRlKGVudHJ5LmNvbXBsZXRpb24sIGVudHJ5LmFmdGVyTG9jKTsNCiAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTsNCiAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQoNCiAgICAiY2F0Y2giOiBmdW5jdGlvbih0cnlMb2MpIHsNCiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHsNCiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldOw0KICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSB0cnlMb2MpIHsNCiAgICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjsNCiAgICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09ICJ0aHJvdyIpIHsNCiAgICAgICAgICAgIHZhciB0aHJvd24gPSByZWNvcmQuYXJnOw0KICAgICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7DQogICAgICAgICAgfQ0KICAgICAgICAgIHJldHVybiB0aHJvd247DQogICAgICAgIH0NCiAgICAgIH0NCg0KICAgICAgLy8gVGhlIGNvbnRleHQuY2F0Y2ggbWV0aG9kIG11c3Qgb25seSBiZSBjYWxsZWQgd2l0aCBhIGxvY2F0aW9uDQogICAgICAvLyBhcmd1bWVudCB0aGF0IGNvcnJlc3BvbmRzIHRvIGEga25vd24gY2F0Y2ggYmxvY2suDQogICAgICB0aHJvdyBuZXcgRXJyb3IoImlsbGVnYWwgY2F0Y2ggYXR0ZW1wdCIpOw0KICAgIH0sDQoNCiAgICBkZWxlZ2F0ZVlpZWxkOiBmdW5jdGlvbihpdGVyYWJsZSwgcmVzdWx0TmFtZSwgbmV4dExvYykgew0KICAgICAgdGhpcy5kZWxlZ2F0ZSA9IHsNCiAgICAgICAgaXRlcmF0b3I6IHZhbHVlcyhpdGVyYWJsZSksDQogICAgICAgIHJlc3VsdE5hbWU6IHJlc3VsdE5hbWUsDQogICAgICAgIG5leHRMb2M6IG5leHRMb2MNCiAgICAgIH07DQoNCiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsOw0KICAgIH0NCiAgfTsNCn0pKA0KICAvLyBBbW9uZyB0aGUgdmFyaW91cyB0cmlja3MgZm9yIG9idGFpbmluZyBhIHJlZmVyZW5jZSB0byB0aGUgZ2xvYmFsDQogIC8vIG9iamVjdCwgdGhpcyBzZWVtcyB0byBiZSB0aGUgbW9zdCByZWxpYWJsZSB0ZWNobmlxdWUgdGhhdCBkb2VzIG5vdA0KICAvLyB1c2UgaW5kaXJlY3QgZXZhbCAod2hpY2ggdmlvbGF0ZXMgQ29udGVudCBTZWN1cml0eSBQb2xpY3kpLg0KICB0eXBlb2YgZ2xvYmFsID09PSAib2JqZWN0IiA/IGdsb2JhbCA6DQogIHR5cGVvZiB3aW5kb3cgPT09ICJvYmplY3QiID8gd2luZG93IDoNCiAgdHlwZW9mIHNlbGYgPT09ICJvYmplY3QiID8gc2VsZiA6IHRoaXMNCik7DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCdfcHJvY2VzcycpLHR5cGVvZiBnbG9iYWwgIT09ICJ1bmRlZmluZWQiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09ICJ1bmRlZmluZWQiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09ICJ1bmRlZmluZWQiID8gd2luZG93IDoge30pDQp9LHsiX3Byb2Nlc3MiOjU1MX1dLDE4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0geyAiZGVmYXVsdCI6IHJlcXVpcmUoImNvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeSIpLCBfX2VzTW9kdWxlOiB0cnVlIH07DQp9LHsiY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5Ijo5Nn1dLDE5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0geyAiZGVmYXVsdCI6IHJlcXVpcmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvYXNzaWduIiksIF9fZXNNb2R1bGU6IHRydWUgfTsNCn0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2Fzc2lnbiI6OTd9XSwyMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IHsgImRlZmF1bHQiOiByZXF1aXJlKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZSIpLCBfX2VzTW9kdWxlOiB0cnVlIH07DQp9LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9jcmVhdGUiOjk4fV0sMjE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHMgPSB7ICJkZWZhdWx0IjogcmVxdWlyZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkiKSwgX19lc01vZHVsZTogdHJ1ZSB9Ow0KfSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5Ijo5OX1dLDIyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0geyAiZGVmYXVsdCI6IHJlcXVpcmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiIpLCBfX2VzTW9kdWxlOiB0cnVlIH07DQp9LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIjoxMDB9XSwyMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IHsgImRlZmF1bHQiOiByZXF1aXJlKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiKSwgX19lc01vZHVsZTogdHJ1ZSB9Ow0KfSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qva2V5cyI6MTAxfV0sMjQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHMgPSB7ICJkZWZhdWx0IjogcmVxdWlyZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9zZXQtcHJvdG90eXBlLW9mIiksIF9fZXNNb2R1bGU6IHRydWUgfTsNCn0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2YiOjEwMn1dLDI1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0geyAiZGVmYXVsdCI6IHJlcXVpcmUoImNvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlIiksIF9fZXNNb2R1bGU6IHRydWUgfTsNCn0seyJjb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZSI6MTAzfV0sMjY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHMgPSB7ICJkZWZhdWx0IjogcmVxdWlyZSgiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07DQp9LHsiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbCI6MTA0fV0sMjc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHMgPSB7ICJkZWZhdWx0IjogcmVxdWlyZSgiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pdGVyYXRvciIpLCBfX2VzTW9kdWxlOiB0cnVlIH07DQp9LHsiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pdGVyYXRvciI6MTA1fV0sMjg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KInVzZSBzdHJpY3QiOw0KDQpleHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlOw0KDQpleHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7DQogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7DQogICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7DQogIH0NCn07DQp9LHt9XSwyOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQoidXNlIHN0cmljdCI7DQoNCmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7DQoNCnZhciBfZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkiKTsNCg0KdmFyIF9kZWZpbmVQcm9wZXJ0eTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kZWZpbmVQcm9wZXJ0eSk7DQoNCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9DQoNCmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uICgpIHsNCiAgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgew0KICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsNCiAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsNCiAgICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsNCiAgICAgIGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOw0KICAgICAgKDAsIF9kZWZpbmVQcm9wZXJ0eTIuZGVmYXVsdCkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7DQogICAgfQ0KICB9DQoNCiAgcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsNCiAgICBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOw0KICAgIGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOw0KICAgIHJldHVybiBDb25zdHJ1Y3RvcjsNCiAgfTsNCn0oKTsNCn0seyIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkiOjIxfV0sMzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KInVzZSBzdHJpY3QiOw0KDQpleHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlOw0KDQp2YXIgX3NldFByb3RvdHlwZU9mID0gcmVxdWlyZSgiLi4vY29yZS1qcy9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiIpOw0KDQp2YXIgX3NldFByb3RvdHlwZU9mMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NldFByb3RvdHlwZU9mKTsNCg0KdmFyIF9jcmVhdGUgPSByZXF1aXJlKCIuLi9jb3JlLWpzL29iamVjdC9jcmVhdGUiKTsNCg0KdmFyIF9jcmVhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlKTsNCg0KdmFyIF90eXBlb2YyID0gcmVxdWlyZSgiLi4vaGVscGVycy90eXBlb2YiKTsNCg0KdmFyIF90eXBlb2YzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdHlwZW9mMik7DQoNCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9DQoNCmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChzdWJDbGFzcywgc3VwZXJDbGFzcykgew0KICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09ICJmdW5jdGlvbiIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgew0KICAgIHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgIiArICh0eXBlb2Ygc3VwZXJDbGFzcyA9PT0gInVuZGVmaW5lZCIgPyAidW5kZWZpbmVkIiA6ICgwLCBfdHlwZW9mMy5kZWZhdWx0KShzdXBlckNsYXNzKSkpOw0KICB9DQoNCiAgc3ViQ2xhc3MucHJvdG90eXBlID0gKDAsIF9jcmVhdGUyLmRlZmF1bHQpKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsNCiAgICBjb25zdHJ1Y3Rvcjogew0KICAgICAgdmFsdWU6IHN1YkNsYXNzLA0KICAgICAgZW51bWVyYWJsZTogZmFsc2UsDQogICAgICB3cml0YWJsZTogdHJ1ZSwNCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZQ0KICAgIH0NCiAgfSk7DQogIGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2YyLmRlZmF1bHQgPyAoMCwgX3NldFByb3RvdHlwZU9mMi5kZWZhdWx0KShzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOw0KfTsNCn0seyIuLi9jb3JlLWpzL29iamVjdC9jcmVhdGUiOjIwLCIuLi9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mIjoyNCwiLi4vaGVscGVycy90eXBlb2YiOjMyfV0sMzE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KInVzZSBzdHJpY3QiOw0KDQpleHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlOw0KDQp2YXIgX3R5cGVvZjIgPSByZXF1aXJlKCIuLi9oZWxwZXJzL3R5cGVvZiIpOw0KDQp2YXIgX3R5cGVvZjMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF90eXBlb2YyKTsNCg0KZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0NCg0KZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKHNlbGYsIGNhbGwpIHsNCiAgaWYgKCFzZWxmKSB7DQogICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTsNCiAgfQ0KDQogIHJldHVybiBjYWxsICYmICgodHlwZW9mIGNhbGwgPT09ICJ1bmRlZmluZWQiID8gInVuZGVmaW5lZCIgOiAoMCwgX3R5cGVvZjMuZGVmYXVsdCkoY2FsbCkpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikgPyBjYWxsIDogc2VsZjsNCn07DQp9LHsiLi4vaGVscGVycy90eXBlb2YiOjMyfV0sMzI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KInVzZSBzdHJpY3QiOw0KDQpleHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlOw0KDQp2YXIgX2l0ZXJhdG9yID0gcmVxdWlyZSgiLi4vY29yZS1qcy9zeW1ib2wvaXRlcmF0b3IiKTsNCg0KdmFyIF9pdGVyYXRvcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pdGVyYXRvcik7DQoNCnZhciBfc3ltYm9sID0gcmVxdWlyZSgiLi4vY29yZS1qcy9zeW1ib2wiKTsNCg0KdmFyIF9zeW1ib2wyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc3ltYm9sKTsNCg0KdmFyIF90eXBlb2YgPSB0eXBlb2YgX3N5bWJvbDIuZGVmYXVsdCA9PT0gImZ1bmN0aW9uIiAmJiB0eXBlb2YgX2l0ZXJhdG9yMi5kZWZhdWx0ID09PSAic3ltYm9sIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBfc3ltYm9sMi5kZWZhdWx0ID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOyB9Ow0KDQpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQ0KDQpleHBvcnRzLmRlZmF1bHQgPSB0eXBlb2YgX3N5bWJvbDIuZGVmYXVsdCA9PT0gImZ1bmN0aW9uIiAmJiBfdHlwZW9mKF9pdGVyYXRvcjIuZGVmYXVsdCkgPT09ICJzeW1ib2wiID8gZnVuY3Rpb24gKG9iaikgew0KICByZXR1cm4gdHlwZW9mIG9iaiA9PT0gInVuZGVmaW5lZCIgPyAidW5kZWZpbmVkIiA6IF90eXBlb2Yob2JqKTsNCn0gOiBmdW5jdGlvbiAob2JqKSB7DQogIHJldHVybiBvYmogJiYgdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBfc3ltYm9sMi5kZWZhdWx0ID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqID09PSAidW5kZWZpbmVkIiA/ICJ1bmRlZmluZWQiIDogX3R5cGVvZihvYmopOw0KfTsNCn0seyIuLi9jb3JlLWpzL3N5bWJvbCI6MjYsIi4uL2NvcmUtanMvc3ltYm9sL2l0ZXJhdG9yIjoyN31dLDMzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0Jw0KDQpleHBvcnRzLnRvQnl0ZUFycmF5ID0gdG9CeXRlQXJyYXkNCmV4cG9ydHMuZnJvbUJ5dGVBcnJheSA9IGZyb21CeXRlQXJyYXkNCg0KdmFyIGxvb2t1cCA9IFtdDQp2YXIgcmV2TG9va3VwID0gW10NCnZhciBBcnIgPSB0eXBlb2YgVWludDhBcnJheSAhPT0gJ3VuZGVmaW5lZCcgPyBVaW50OEFycmF5IDogQXJyYXkNCg0KZnVuY3Rpb24gaW5pdCAoKSB7DQogIHZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nDQogIGZvciAodmFyIGkgPSAwLCBsZW4gPSBjb2RlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7DQogICAgbG9va3VwW2ldID0gY29kZVtpXQ0KICAgIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaQ0KICB9DQoNCiAgcmV2TG9va3VwWyctJy5jaGFyQ29kZUF0KDApXSA9IDYyDQogIHJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2Mw0KfQ0KDQppbml0KCkNCg0KZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkgew0KICB2YXIgaSwgaiwgbCwgdG1wLCBwbGFjZUhvbGRlcnMsIGFycg0KICB2YXIgbGVuID0gYjY0Lmxlbmd0aA0KDQogIGlmIChsZW4gJSA0ID4gMCkgew0KICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzdHJpbmcuIExlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNCcpDQogIH0NCg0KICAvLyB0aGUgbnVtYmVyIG9mIGVxdWFsIHNpZ25zIChwbGFjZSBob2xkZXJzKQ0KICAvLyBpZiB0aGVyZSBhcmUgdHdvIHBsYWNlaG9sZGVycywgdGhhbiB0aGUgdHdvIGNoYXJhY3RlcnMgYmVmb3JlIGl0DQogIC8vIHJlcHJlc2VudCBvbmUgYnl0ZQ0KICAvLyBpZiB0aGVyZSBpcyBvbmx5IG9uZSwgdGhlbiB0aGUgdGhyZWUgY2hhcmFjdGVycyBiZWZvcmUgaXQgcmVwcmVzZW50IDIgYnl0ZXMNCiAgLy8gdGhpcyBpcyBqdXN0IGEgY2hlYXAgaGFjayB0byBub3QgZG8gaW5kZXhPZiB0d2ljZQ0KICBwbGFjZUhvbGRlcnMgPSBiNjRbbGVuIC0gMl0gPT09ICc9JyA/IDIgOiBiNjRbbGVuIC0gMV0gPT09ICc9JyA/IDEgOiAwDQoNCiAgLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhDQogIGFyciA9IG5ldyBBcnIobGVuICogMyAvIDQgLSBwbGFjZUhvbGRlcnMpDQoNCiAgLy8gaWYgdGhlcmUgYXJlIHBsYWNlaG9sZGVycywgb25seSBnZXQgdXAgdG8gdGhlIGxhc3QgY29tcGxldGUgNCBjaGFycw0KICBsID0gcGxhY2VIb2xkZXJzID4gMCA/IGxlbiAtIDQgOiBsZW4NCg0KICB2YXIgTCA9IDANCg0KICBmb3IgKGkgPSAwLCBqID0gMDsgaSA8IGw7IGkgKz0gNCwgaiArPSAzKSB7DQogICAgdG1wID0gKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHwgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDEyKSB8IChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA8PCA2KSB8IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldDQogICAgYXJyW0wrK10gPSAodG1wID4+IDE2KSAmIDB4RkYNCiAgICBhcnJbTCsrXSA9ICh0bXAgPj4gOCkgJiAweEZGDQogICAgYXJyW0wrK10gPSB0bXAgJiAweEZGDQogIH0NCg0KICBpZiAocGxhY2VIb2xkZXJzID09PSAyKSB7DQogICAgdG1wID0gKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMikgfCAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPj4gNCkNCiAgICBhcnJbTCsrXSA9IHRtcCAmIDB4RkYNCiAgfSBlbHNlIGlmIChwbGFjZUhvbGRlcnMgPT09IDEpIHsNCiAgICB0bXAgPSAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfCAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgNCkgfCAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMikNCiAgICBhcnJbTCsrXSA9ICh0bXAgPj4gOCkgJiAweEZGDQogICAgYXJyW0wrK10gPSB0bXAgJiAweEZGDQogIH0NCg0KICByZXR1cm4gYXJyDQp9DQoNCmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NCAobnVtKSB7DQogIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgMHgzRl0gKyBsb29rdXBbbnVtID4+IDEyICYgMHgzRl0gKyBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArIGxvb2t1cFtudW0gJiAweDNGXQ0KfQ0KDQpmdW5jdGlvbiBlbmNvZGVDaHVuayAodWludDgsIHN0YXJ0LCBlbmQpIHsNCiAgdmFyIHRtcA0KICB2YXIgb3V0cHV0ID0gW10NCiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDMpIHsNCiAgICB0bXAgPSAodWludDhbaV0gPDwgMTYpICsgKHVpbnQ4W2kgKyAxXSA8PCA4KSArICh1aW50OFtpICsgMl0pDQogICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpDQogIH0NCiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKQ0KfQ0KDQpmdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkgew0KICB2YXIgdG1wDQogIHZhciBsZW4gPSB1aW50OC5sZW5ndGgNCiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzDQogIHZhciBvdXRwdXQgPSAnJw0KICB2YXIgcGFydHMgPSBbXQ0KICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MyAvLyBtdXN0IGJlIG11bHRpcGxlIG9mIDMNCg0KICAvLyBnbyB0aHJvdWdoIHRoZSBhcnJheSBldmVyeSB0aHJlZSBieXRlcywgd2UnbGwgZGVhbCB3aXRoIHRyYWlsaW5nIHN0dWZmIGxhdGVyDQogIGZvciAodmFyIGkgPSAwLCBsZW4yID0gbGVuIC0gZXh0cmFCeXRlczsgaSA8IGxlbjI7IGkgKz0gbWF4Q2h1bmtMZW5ndGgpIHsNCiAgICBwYXJ0cy5wdXNoKGVuY29kZUNodW5rKHVpbnQ4LCBpLCAoaSArIG1heENodW5rTGVuZ3RoKSA+IGxlbjIgPyBsZW4yIDogKGkgKyBtYXhDaHVua0xlbmd0aCkpKQ0KICB9DQoNCiAgLy8gcGFkIHRoZSBlbmQgd2l0aCB6ZXJvcywgYnV0IG1ha2Ugc3VyZSB0byBub3QgZm9yZ2V0IHRoZSBleHRyYSBieXRlcw0KICBpZiAoZXh0cmFCeXRlcyA9PT0gMSkgew0KICAgIHRtcCA9IHVpbnQ4W2xlbiAtIDFdDQogICAgb3V0cHV0ICs9IGxvb2t1cFt0bXAgPj4gMl0NCiAgICBvdXRwdXQgKz0gbG9va3VwWyh0bXAgPDwgNCkgJiAweDNGXQ0KICAgIG91dHB1dCArPSAnPT0nDQogIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikgew0KICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArICh1aW50OFtsZW4gLSAxXSkNCiAgICBvdXRwdXQgKz0gbG9va3VwW3RtcCA+PiAxMF0NCiAgICBvdXRwdXQgKz0gbG9va3VwWyh0bXAgPj4gNCkgJiAweDNGXQ0KICAgIG91dHB1dCArPSBsb29rdXBbKHRtcCA8PCAyKSAmIDB4M0ZdDQogICAgb3V0cHV0ICs9ICc9Jw0KICB9DQoNCiAgcGFydHMucHVzaChvdXRwdXQpDQoNCiAgcmV0dXJuIHBhcnRzLmpvaW4oJycpDQp9DQoNCn0se31dLDM0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCid1c2Ugc3RyaWN0JzsNCg0KdmFyIGJhc2U2NHVybCA9IG1vZHVsZS5leHBvcnRzOw0KDQpiYXNlNjR1cmwudW5lc2NhcGUgPSBmdW5jdGlvbiB1bmVzY2FwZSAoc3RyKSB7DQogIHJldHVybiAoc3RyICsgQXJyYXkoNSAtIHN0ci5sZW5ndGggJSA0KQ0KICAgIC5qb2luKCc9JykpDQogICAgLnJlcGxhY2UoL1wtL2csICcrJykNCiAgICAucmVwbGFjZSgvXy9nLCAnLycpOw0KfTsNCg0KYmFzZTY0dXJsLmVzY2FwZSA9IGZ1bmN0aW9uIGVzY2FwZSAoc3RyKSB7DQogIHJldHVybiBzdHIucmVwbGFjZSgvXCsvZywgJy0nKQ0KICAgIC5yZXBsYWNlKC9cLy9nLCAnXycpDQogICAgLnJlcGxhY2UoLz0vZywgJycpOw0KfTsNCg0KYmFzZTY0dXJsLmVuY29kZSA9IGZ1bmN0aW9uIGVuY29kZSAoc3RyKSB7DQogIHJldHVybiB0aGlzLmVzY2FwZShuZXcgQnVmZmVyKHN0cikudG9TdHJpbmcoJ2Jhc2U2NCcpKTsNCn07DQoNCmJhc2U2NHVybC5kZWNvZGUgPSBmdW5jdGlvbiBkZWNvZGUgKHN0cikgew0KICByZXR1cm4gbmV3IEJ1ZmZlcih0aGlzLnVuZXNjYXBlKHN0ciksICdiYXNlNjQnKS50b1N0cmluZygpOw0KfTsNCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJidWZmZXIiOjkzfV0sMzU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gKHB1YmxpYykgQ29uc3RydWN0b3INCmZ1bmN0aW9uIEJpZ0ludGVnZXIoYSwgYiwgYykgew0KICBpZiAoISh0aGlzIGluc3RhbmNlb2YgQmlnSW50ZWdlcikpDQogICAgcmV0dXJuIG5ldyBCaWdJbnRlZ2VyKGEsIGIsIGMpDQoNCiAgaWYgKGEgIT0gbnVsbCkgew0KICAgIGlmICgibnVtYmVyIiA9PSB0eXBlb2YgYSkgdGhpcy5mcm9tTnVtYmVyKGEsIGIsIGMpDQogICAgZWxzZSBpZiAoYiA9PSBudWxsICYmICJzdHJpbmciICE9IHR5cGVvZiBhKSB0aGlzLmZyb21TdHJpbmcoYSwgMjU2KQ0KICAgIGVsc2UgdGhpcy5mcm9tU3RyaW5nKGEsIGIpDQogIH0NCn0NCg0KdmFyIHByb3RvID0gQmlnSW50ZWdlci5wcm90b3R5cGUNCg0KLy8gZHVjay10eXBlZCBpc0JpZ0ludGVnZXINCnByb3RvLl9fYmlnaSA9IHJlcXVpcmUoJy4uL3BhY2thZ2UuanNvbicpLnZlcnNpb24NCkJpZ0ludGVnZXIuaXNCaWdJbnRlZ2VyID0gZnVuY3Rpb24gKG9iaiwgY2hlY2tfdmVyKSB7DQogIHJldHVybiBvYmogJiYgb2JqLl9fYmlnaSAmJiAoIWNoZWNrX3ZlciB8fCBvYmouX19iaWdpID09PSBwcm90by5fX2JpZ2kpDQp9DQoNCi8vIEJpdHMgcGVyIGRpZ2l0DQp2YXIgZGJpdHMNCg0KLy8gYW06IENvbXB1dGUgd19qICs9ICh4KnRoaXNfaSksIHByb3BhZ2F0ZSBjYXJyaWVzLA0KLy8gYyBpcyBpbml0aWFsIGNhcnJ5LCByZXR1cm5zIGZpbmFsIGNhcnJ5Lg0KLy8gYyA8IDMqZHZhbHVlLCB4IDwgMipkdmFsdWUsIHRoaXNfaSA8IGR2YWx1ZQ0KLy8gV2UgbmVlZCB0byBzZWxlY3QgdGhlIGZhc3Rlc3Qgb25lIHRoYXQgd29ya3MgaW4gdGhpcyBlbnZpcm9ubWVudC4NCg0KLy8gYW0xOiB1c2UgYSBzaW5nbGUgbXVsdCBhbmQgZGl2aWRlIHRvIGdldCB0aGUgaGlnaCBiaXRzLA0KLy8gbWF4IGRpZ2l0IGJpdHMgc2hvdWxkIGJlIDI2IGJlY2F1c2UNCi8vIG1heCBpbnRlcm5hbCB2YWx1ZSA9IDIqZHZhbHVlXjItMipkdmFsdWUgKDwgMl41MykNCmZ1bmN0aW9uIGFtMShpLCB4LCB3LCBqLCBjLCBuKSB7DQogIHdoaWxlICgtLW4gPj0gMCkgew0KICAgIHZhciB2ID0geCAqIHRoaXNbaSsrXSArIHdbal0gKyBjDQogICAgYyA9IE1hdGguZmxvb3IodiAvIDB4NDAwMDAwMCkNCiAgICB3W2orK10gPSB2ICYgMHgzZmZmZmZmDQogIH0NCiAgcmV0dXJuIGMNCn0NCi8vIGFtMiBhdm9pZHMgYSBiaWcgbXVsdC1hbmQtZXh0cmFjdCBjb21wbGV0ZWx5Lg0KLy8gTWF4IGRpZ2l0IGJpdHMgc2hvdWxkIGJlIDw9IDMwIGJlY2F1c2Ugd2UgZG8gYml0d2lzZSBvcHMNCi8vIG9uIHZhbHVlcyB1cCB0byAyKmhkdmFsdWVeMi1oZHZhbHVlLTEgKDwgMl4zMSkNCmZ1bmN0aW9uIGFtMihpLCB4LCB3LCBqLCBjLCBuKSB7DQogIHZhciB4bCA9IHggJiAweDdmZmYsDQogICAgeGggPSB4ID4+IDE1DQogIHdoaWxlICgtLW4gPj0gMCkgew0KICAgIHZhciBsID0gdGhpc1tpXSAmIDB4N2ZmZg0KICAgIHZhciBoID0gdGhpc1tpKytdID4+IDE1DQogICAgdmFyIG0gPSB4aCAqIGwgKyBoICogeGwNCiAgICBsID0geGwgKiBsICsgKChtICYgMHg3ZmZmKSA8PCAxNSkgKyB3W2pdICsgKGMgJiAweDNmZmZmZmZmKQ0KICAgIGMgPSAobCA+Pj4gMzApICsgKG0gPj4+IDE1KSArIHhoICogaCArIChjID4+PiAzMCkNCiAgICB3W2orK10gPSBsICYgMHgzZmZmZmZmZg0KICB9DQogIHJldHVybiBjDQp9DQovLyBBbHRlcm5hdGVseSwgc2V0IG1heCBkaWdpdCBiaXRzIHRvIDI4IHNpbmNlIHNvbWUNCi8vIGJyb3dzZXJzIHNsb3cgZG93biB3aGVuIGRlYWxpbmcgd2l0aCAzMi1iaXQgbnVtYmVycy4NCmZ1bmN0aW9uIGFtMyhpLCB4LCB3LCBqLCBjLCBuKSB7DQogIHZhciB4bCA9IHggJiAweDNmZmYsDQogICAgeGggPSB4ID4+IDE0DQogIHdoaWxlICgtLW4gPj0gMCkgew0KICAgIHZhciBsID0gdGhpc1tpXSAmIDB4M2ZmZg0KICAgIHZhciBoID0gdGhpc1tpKytdID4+IDE0DQogICAgdmFyIG0gPSB4aCAqIGwgKyBoICogeGwNCiAgICBsID0geGwgKiBsICsgKChtICYgMHgzZmZmKSA8PCAxNCkgKyB3W2pdICsgYw0KICAgIGMgPSAobCA+PiAyOCkgKyAobSA+PiAxNCkgKyB4aCAqIGgNCiAgICB3W2orK10gPSBsICYgMHhmZmZmZmZmDQogIH0NCiAgcmV0dXJuIGMNCn0NCg0KLy8gd3RmPw0KQmlnSW50ZWdlci5wcm90b3R5cGUuYW0gPSBhbTENCmRiaXRzID0gMjYNCg0KQmlnSW50ZWdlci5wcm90b3R5cGUuREIgPSBkYml0cw0KQmlnSW50ZWdlci5wcm90b3R5cGUuRE0gPSAoKDEgPDwgZGJpdHMpIC0gMSkNCnZhciBEViA9IEJpZ0ludGVnZXIucHJvdG90eXBlLkRWID0gKDEgPDwgZGJpdHMpDQoNCnZhciBCSV9GUCA9IDUyDQpCaWdJbnRlZ2VyLnByb3RvdHlwZS5GViA9IE1hdGgucG93KDIsIEJJX0ZQKQ0KQmlnSW50ZWdlci5wcm90b3R5cGUuRjEgPSBCSV9GUCAtIGRiaXRzDQpCaWdJbnRlZ2VyLnByb3RvdHlwZS5GMiA9IDIgKiBkYml0cyAtIEJJX0ZQDQoNCi8vIERpZ2l0IGNvbnZlcnNpb25zDQp2YXIgQklfUk0gPSAiMDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6Ig0KdmFyIEJJX1JDID0gbmV3IEFycmF5KCkNCnZhciByciwgdnYNCnJyID0gIjAiLmNoYXJDb2RlQXQoMCkNCmZvciAodnYgPSAwOyB2diA8PSA5OyArK3Z2KSBCSV9SQ1tycisrXSA9IHZ2DQpyciA9ICJhIi5jaGFyQ29kZUF0KDApDQpmb3IgKHZ2ID0gMTA7IHZ2IDwgMzY7ICsrdnYpIEJJX1JDW3JyKytdID0gdnYNCnJyID0gIkEiLmNoYXJDb2RlQXQoMCkNCmZvciAodnYgPSAxMDsgdnYgPCAzNjsgKyt2dikgQklfUkNbcnIrK10gPSB2dg0KDQpmdW5jdGlvbiBpbnQyY2hhcihuKSB7DQogIHJldHVybiBCSV9STS5jaGFyQXQobikNCn0NCg0KZnVuY3Rpb24gaW50QXQocywgaSkgew0KICB2YXIgYyA9IEJJX1JDW3MuY2hhckNvZGVBdChpKV0NCiAgcmV0dXJuIChjID09IG51bGwpID8gLTEgOiBjDQp9DQoNCi8vIChwcm90ZWN0ZWQpIGNvcHkgdGhpcyB0byByDQpmdW5jdGlvbiBibnBDb3B5VG8ocikgew0KICBmb3IgKHZhciBpID0gdGhpcy50IC0gMTsgaSA+PSAwOyAtLWkpIHJbaV0gPSB0aGlzW2ldDQogIHIudCA9IHRoaXMudA0KICByLnMgPSB0aGlzLnMNCn0NCg0KLy8gKHByb3RlY3RlZCkgc2V0IGZyb20gaW50ZWdlciB2YWx1ZSB4LCAtRFYgPD0geCA8IERWDQpmdW5jdGlvbiBibnBGcm9tSW50KHgpIHsNCiAgdGhpcy50ID0gMQ0KICB0aGlzLnMgPSAoeCA8IDApID8gLTEgOiAwDQogIGlmICh4ID4gMCkgdGhpc1swXSA9IHgNCiAgZWxzZSBpZiAoeCA8IC0xKSB0aGlzWzBdID0geCArIERWDQogIGVsc2UgdGhpcy50ID0gMA0KfQ0KDQovLyByZXR1cm4gYmlnaW50IGluaXRpYWxpemVkIHRvIHZhbHVlDQpmdW5jdGlvbiBuYnYoaSkgew0KICB2YXIgciA9IG5ldyBCaWdJbnRlZ2VyKCkNCiAgci5mcm9tSW50KGkpDQogIHJldHVybiByDQp9DQoNCi8vIChwcm90ZWN0ZWQpIHNldCBmcm9tIHN0cmluZyBhbmQgcmFkaXgNCmZ1bmN0aW9uIGJucEZyb21TdHJpbmcocywgYikgew0KICB2YXIgc2VsZiA9IHRoaXMNCg0KICB2YXIgaw0KICBpZiAoYiA9PSAxNikgayA9IDQNCiAgZWxzZSBpZiAoYiA9PSA4KSBrID0gMw0KICBlbHNlIGlmIChiID09IDI1NikgayA9IDg7IC8vIGJ5dGUgYXJyYXkNCiAgZWxzZSBpZiAoYiA9PSAyKSBrID0gMQ0KICBlbHNlIGlmIChiID09IDMyKSBrID0gNQ0KICBlbHNlIGlmIChiID09IDQpIGsgPSAyDQogIGVsc2Ugew0KICAgIHNlbGYuZnJvbVJhZGl4KHMsIGIpDQogICAgcmV0dXJuDQogIH0NCiAgc2VsZi50ID0gMA0KICBzZWxmLnMgPSAwDQogIHZhciBpID0gcy5sZW5ndGgsDQogICAgbWkgPSBmYWxzZSwNCiAgICBzaCA9IDANCiAgd2hpbGUgKC0taSA+PSAwKSB7DQogICAgdmFyIHggPSAoayA9PSA4KSA/IHNbaV0gJiAweGZmIDogaW50QXQocywgaSkNCiAgICBpZiAoeCA8IDApIHsNCiAgICAgIGlmIChzLmNoYXJBdChpKSA9PSAiLSIpIG1pID0gdHJ1ZQ0KICAgICAgY29udGludWUNCiAgICB9DQogICAgbWkgPSBmYWxzZQ0KICAgIGlmIChzaCA9PSAwKQ0KICAgICAgc2VsZltzZWxmLnQrK10gPSB4DQogICAgZWxzZSBpZiAoc2ggKyBrID4gc2VsZi5EQikgew0KICAgICAgc2VsZltzZWxmLnQgLSAxXSB8PSAoeCAmICgoMSA8PCAoc2VsZi5EQiAtIHNoKSkgLSAxKSkgPDwgc2gNCiAgICAgIHNlbGZbc2VsZi50KytdID0gKHggPj4gKHNlbGYuREIgLSBzaCkpDQogICAgfSBlbHNlDQogICAgICBzZWxmW3NlbGYudCAtIDFdIHw9IHggPDwgc2gNCiAgICBzaCArPSBrDQogICAgaWYgKHNoID49IHNlbGYuREIpIHNoIC09IHNlbGYuREINCiAgfQ0KICBpZiAoayA9PSA4ICYmIChzWzBdICYgMHg4MCkgIT0gMCkgew0KICAgIHNlbGYucyA9IC0xDQogICAgaWYgKHNoID4gMCkgc2VsZltzZWxmLnQgLSAxXSB8PSAoKDEgPDwgKHNlbGYuREIgLSBzaCkpIC0gMSkgPDwgc2gNCiAgfQ0KICBzZWxmLmNsYW1wKCkNCiAgaWYgKG1pKSBCaWdJbnRlZ2VyLlpFUk8uc3ViVG8oc2VsZiwgc2VsZikNCn0NCg0KLy8gKHByb3RlY3RlZCkgY2xhbXAgb2ZmIGV4Y2VzcyBoaWdoIHdvcmRzDQpmdW5jdGlvbiBibnBDbGFtcCgpIHsNCiAgdmFyIGMgPSB0aGlzLnMgJiB0aGlzLkRNDQogIHdoaWxlICh0aGlzLnQgPiAwICYmIHRoaXNbdGhpcy50IC0gMV0gPT0gYyktLXRoaXMudA0KfQ0KDQovLyAocHVibGljKSByZXR1cm4gc3RyaW5nIHJlcHJlc2VudGF0aW9uIGluIGdpdmVuIHJhZGl4DQpmdW5jdGlvbiBiblRvU3RyaW5nKGIpIHsNCiAgdmFyIHNlbGYgPSB0aGlzDQogIGlmIChzZWxmLnMgPCAwKSByZXR1cm4gIi0iICsgc2VsZi5uZWdhdGUoKQ0KICAgIC50b1N0cmluZyhiKQ0KICB2YXIgaw0KICBpZiAoYiA9PSAxNikgayA9IDQNCiAgZWxzZSBpZiAoYiA9PSA4KSBrID0gMw0KICBlbHNlIGlmIChiID09IDIpIGsgPSAxDQogIGVsc2UgaWYgKGIgPT0gMzIpIGsgPSA1DQogIGVsc2UgaWYgKGIgPT0gNCkgayA9IDINCiAgZWxzZSByZXR1cm4gc2VsZi50b1JhZGl4KGIpDQogIHZhciBrbSA9ICgxIDw8IGspIC0gMSwNCiAgICBkLCBtID0gZmFsc2UsDQogICAgciA9ICIiLA0KICAgIGkgPSBzZWxmLnQNCiAgdmFyIHAgPSBzZWxmLkRCIC0gKGkgKiBzZWxmLkRCKSAlIGsNCiAgaWYgKGktLSA+IDApIHsNCiAgICBpZiAocCA8IHNlbGYuREIgJiYgKGQgPSBzZWxmW2ldID4+IHApID4gMCkgew0KICAgICAgbSA9IHRydWUNCiAgICAgIHIgPSBpbnQyY2hhcihkKQ0KICAgIH0NCiAgICB3aGlsZSAoaSA+PSAwKSB7DQogICAgICBpZiAocCA8IGspIHsNCiAgICAgICAgZCA9IChzZWxmW2ldICYgKCgxIDw8IHApIC0gMSkpIDw8IChrIC0gcCkNCiAgICAgICAgZCB8PSBzZWxmWy0taV0gPj4gKHAgKz0gc2VsZi5EQiAtIGspDQogICAgICB9IGVsc2Ugew0KICAgICAgICBkID0gKHNlbGZbaV0gPj4gKHAgLT0gaykpICYga20NCiAgICAgICAgaWYgKHAgPD0gMCkgew0KICAgICAgICAgIHAgKz0gc2VsZi5EQg0KICAgICAgICAgIC0taQ0KICAgICAgICB9DQogICAgICB9DQogICAgICBpZiAoZCA+IDApIG0gPSB0cnVlDQogICAgICBpZiAobSkgciArPSBpbnQyY2hhcihkKQ0KICAgIH0NCiAgfQ0KICByZXR1cm4gbSA/IHIgOiAiMCINCn0NCg0KLy8gKHB1YmxpYykgLXRoaXMNCmZ1bmN0aW9uIGJuTmVnYXRlKCkgew0KICB2YXIgciA9IG5ldyBCaWdJbnRlZ2VyKCkNCiAgQmlnSW50ZWdlci5aRVJPLnN1YlRvKHRoaXMsIHIpDQogIHJldHVybiByDQp9DQoNCi8vIChwdWJsaWMpIHx0aGlzfA0KZnVuY3Rpb24gYm5BYnMoKSB7DQogIHJldHVybiAodGhpcy5zIDwgMCkgPyB0aGlzLm5lZ2F0ZSgpIDogdGhpcw0KfQ0KDQovLyAocHVibGljKSByZXR1cm4gKyBpZiB0aGlzID4gYSwgLSBpZiB0aGlzIDwgYSwgMCBpZiBlcXVhbA0KZnVuY3Rpb24gYm5Db21wYXJlVG8oYSkgew0KICB2YXIgciA9IHRoaXMucyAtIGEucw0KICBpZiAociAhPSAwKSByZXR1cm4gcg0KICB2YXIgaSA9IHRoaXMudA0KICByID0gaSAtIGEudA0KICBpZiAociAhPSAwKSByZXR1cm4gKHRoaXMucyA8IDApID8gLXIgOiByDQogIHdoaWxlICgtLWkgPj0gMCkNCiAgICBpZiAoKHIgPSB0aGlzW2ldIC0gYVtpXSkgIT0gMCkgcmV0dXJuIHINCiAgcmV0dXJuIDANCn0NCg0KLy8gcmV0dXJucyBiaXQgbGVuZ3RoIG9mIHRoZSBpbnRlZ2VyIHgNCmZ1bmN0aW9uIG5iaXRzKHgpIHsNCiAgdmFyIHIgPSAxLA0KICAgIHQNCiAgaWYgKCh0ID0geCA+Pj4gMTYpICE9IDApIHsNCiAgICB4ID0gdA0KICAgIHIgKz0gMTYNCiAgfQ0KICBpZiAoKHQgPSB4ID4+IDgpICE9IDApIHsNCiAgICB4ID0gdA0KICAgIHIgKz0gOA0KICB9DQogIGlmICgodCA9IHggPj4gNCkgIT0gMCkgew0KICAgIHggPSB0DQogICAgciArPSA0DQogIH0NCiAgaWYgKCh0ID0geCA+PiAyKSAhPSAwKSB7DQogICAgeCA9IHQNCiAgICByICs9IDINCiAgfQ0KICBpZiAoKHQgPSB4ID4+IDEpICE9IDApIHsNCiAgICB4ID0gdA0KICAgIHIgKz0gMQ0KICB9DQogIHJldHVybiByDQp9DQoNCi8vIChwdWJsaWMpIHJldHVybiB0aGUgbnVtYmVyIG9mIGJpdHMgaW4gInRoaXMiDQpmdW5jdGlvbiBibkJpdExlbmd0aCgpIHsNCiAgaWYgKHRoaXMudCA8PSAwKSByZXR1cm4gMA0KICByZXR1cm4gdGhpcy5EQiAqICh0aGlzLnQgLSAxKSArIG5iaXRzKHRoaXNbdGhpcy50IC0gMV0gXiAodGhpcy5zICYgdGhpcy5ETSkpDQp9DQoNCi8vIChwdWJsaWMpIHJldHVybiB0aGUgbnVtYmVyIG9mIGJ5dGVzIGluICJ0aGlzIg0KZnVuY3Rpb24gYm5CeXRlTGVuZ3RoKCkgew0KICByZXR1cm4gdGhpcy5iaXRMZW5ndGgoKSA+PiAzDQp9DQoNCi8vIChwcm90ZWN0ZWQpIHIgPSB0aGlzIDw8IG4qREINCmZ1bmN0aW9uIGJucERMU2hpZnRUbyhuLCByKSB7DQogIHZhciBpDQogIGZvciAoaSA9IHRoaXMudCAtIDE7IGkgPj0gMDsgLS1pKSByW2kgKyBuXSA9IHRoaXNbaV0NCiAgZm9yIChpID0gbiAtIDE7IGkgPj0gMDsgLS1pKSByW2ldID0gMA0KICByLnQgPSB0aGlzLnQgKyBuDQogIHIucyA9IHRoaXMucw0KfQ0KDQovLyAocHJvdGVjdGVkKSByID0gdGhpcyA+PiBuKkRCDQpmdW5jdGlvbiBibnBEUlNoaWZ0VG8obiwgcikgew0KICBmb3IgKHZhciBpID0gbjsgaSA8IHRoaXMudDsgKytpKSByW2kgLSBuXSA9IHRoaXNbaV0NCiAgci50ID0gTWF0aC5tYXgodGhpcy50IC0gbiwgMCkNCiAgci5zID0gdGhpcy5zDQp9DQoNCi8vIChwcm90ZWN0ZWQpIHIgPSB0aGlzIDw8IG4NCmZ1bmN0aW9uIGJucExTaGlmdFRvKG4sIHIpIHsNCiAgdmFyIHNlbGYgPSB0aGlzDQogIHZhciBicyA9IG4gJSBzZWxmLkRCDQogIHZhciBjYnMgPSBzZWxmLkRCIC0gYnMNCiAgdmFyIGJtID0gKDEgPDwgY2JzKSAtIDENCiAgdmFyIGRzID0gTWF0aC5mbG9vcihuIC8gc2VsZi5EQiksDQogICAgYyA9IChzZWxmLnMgPDwgYnMpICYgc2VsZi5ETSwNCiAgICBpDQogIGZvciAoaSA9IHNlbGYudCAtIDE7IGkgPj0gMDsgLS1pKSB7DQogICAgcltpICsgZHMgKyAxXSA9IChzZWxmW2ldID4+IGNicykgfCBjDQogICAgYyA9IChzZWxmW2ldICYgYm0pIDw8IGJzDQogIH0NCiAgZm9yIChpID0gZHMgLSAxOyBpID49IDA7IC0taSkgcltpXSA9IDANCiAgcltkc10gPSBjDQogIHIudCA9IHNlbGYudCArIGRzICsgMQ0KICByLnMgPSBzZWxmLnMNCiAgci5jbGFtcCgpDQp9DQoNCi8vIChwcm90ZWN0ZWQpIHIgPSB0aGlzID4+IG4NCmZ1bmN0aW9uIGJucFJTaGlmdFRvKG4sIHIpIHsNCiAgdmFyIHNlbGYgPSB0aGlzDQogIHIucyA9IHNlbGYucw0KICB2YXIgZHMgPSBNYXRoLmZsb29yKG4gLyBzZWxmLkRCKQ0KICBpZiAoZHMgPj0gc2VsZi50KSB7DQogICAgci50ID0gMA0KICAgIHJldHVybg0KICB9DQogIHZhciBicyA9IG4gJSBzZWxmLkRCDQogIHZhciBjYnMgPSBzZWxmLkRCIC0gYnMNCiAgdmFyIGJtID0gKDEgPDwgYnMpIC0gMQ0KICByWzBdID0gc2VsZltkc10gPj4gYnMNCiAgZm9yICh2YXIgaSA9IGRzICsgMTsgaSA8IHNlbGYudDsgKytpKSB7DQogICAgcltpIC0gZHMgLSAxXSB8PSAoc2VsZltpXSAmIGJtKSA8PCBjYnMNCiAgICByW2kgLSBkc10gPSBzZWxmW2ldID4+IGJzDQogIH0NCiAgaWYgKGJzID4gMCkgcltzZWxmLnQgLSBkcyAtIDFdIHw9IChzZWxmLnMgJiBibSkgPDwgY2JzDQogIHIudCA9IHNlbGYudCAtIGRzDQogIHIuY2xhbXAoKQ0KfQ0KDQovLyAocHJvdGVjdGVkKSByID0gdGhpcyAtIGENCmZ1bmN0aW9uIGJucFN1YlRvKGEsIHIpIHsNCiAgdmFyIHNlbGYgPSB0aGlzDQogIHZhciBpID0gMCwNCiAgICBjID0gMCwNCiAgICBtID0gTWF0aC5taW4oYS50LCBzZWxmLnQpDQogIHdoaWxlIChpIDwgbSkgew0KICAgIGMgKz0gc2VsZltpXSAtIGFbaV0NCiAgICByW2krK10gPSBjICYgc2VsZi5ETQ0KICAgIGMgPj49IHNlbGYuREINCiAgfQ0KICBpZiAoYS50IDwgc2VsZi50KSB7DQogICAgYyAtPSBhLnMNCiAgICB3aGlsZSAoaSA8IHNlbGYudCkgew0KICAgICAgYyArPSBzZWxmW2ldDQogICAgICByW2krK10gPSBjICYgc2VsZi5ETQ0KICAgICAgYyA+Pj0gc2VsZi5EQg0KICAgIH0NCiAgICBjICs9IHNlbGYucw0KICB9IGVsc2Ugew0KICAgIGMgKz0gc2VsZi5zDQogICAgd2hpbGUgKGkgPCBhLnQpIHsNCiAgICAgIGMgLT0gYVtpXQ0KICAgICAgcltpKytdID0gYyAmIHNlbGYuRE0NCiAgICAgIGMgPj49IHNlbGYuREINCiAgICB9DQogICAgYyAtPSBhLnMNCiAgfQ0KICByLnMgPSAoYyA8IDApID8gLTEgOiAwDQogIGlmIChjIDwgLTEpIHJbaSsrXSA9IHNlbGYuRFYgKyBjDQogIGVsc2UgaWYgKGMgPiAwKSByW2krK10gPSBjDQogIHIudCA9IGkNCiAgci5jbGFtcCgpDQp9DQoNCi8vIChwcm90ZWN0ZWQpIHIgPSB0aGlzICogYSwgciAhPSB0aGlzLGEgKEhBQyAxNC4xMikNCi8vICJ0aGlzIiBzaG91bGQgYmUgdGhlIGxhcmdlciBvbmUgaWYgYXBwcm9wcmlhdGUuDQpmdW5jdGlvbiBibnBNdWx0aXBseVRvKGEsIHIpIHsNCiAgdmFyIHggPSB0aGlzLmFicygpLA0KICAgIHkgPSBhLmFicygpDQogIHZhciBpID0geC50DQogIHIudCA9IGkgKyB5LnQNCiAgd2hpbGUgKC0taSA+PSAwKSByW2ldID0gMA0KICBmb3IgKGkgPSAwOyBpIDwgeS50OyArK2kpIHJbaSArIHgudF0gPSB4LmFtKDAsIHlbaV0sIHIsIGksIDAsIHgudCkNCiAgci5zID0gMA0KICByLmNsYW1wKCkNCiAgaWYgKHRoaXMucyAhPSBhLnMpIEJpZ0ludGVnZXIuWkVSTy5zdWJUbyhyLCByKQ0KfQ0KDQovLyAocHJvdGVjdGVkKSByID0gdGhpc14yLCByICE9IHRoaXMgKEhBQyAxNC4xNikNCmZ1bmN0aW9uIGJucFNxdWFyZVRvKHIpIHsNCiAgdmFyIHggPSB0aGlzLmFicygpDQogIHZhciBpID0gci50ID0gMiAqIHgudA0KICB3aGlsZSAoLS1pID49IDApIHJbaV0gPSAwDQogIGZvciAoaSA9IDA7IGkgPCB4LnQgLSAxOyArK2kpIHsNCiAgICB2YXIgYyA9IHguYW0oaSwgeFtpXSwgciwgMiAqIGksIDAsIDEpDQogICAgaWYgKChyW2kgKyB4LnRdICs9IHguYW0oaSArIDEsIDIgKiB4W2ldLCByLCAyICogaSArIDEsIGMsIHgudCAtIGkgLSAxKSkgPj0geC5EVikgew0KICAgICAgcltpICsgeC50XSAtPSB4LkRWDQogICAgICByW2kgKyB4LnQgKyAxXSA9IDENCiAgICB9DQogIH0NCiAgaWYgKHIudCA+IDApIHJbci50IC0gMV0gKz0geC5hbShpLCB4W2ldLCByLCAyICogaSwgMCwgMSkNCiAgci5zID0gMA0KICByLmNsYW1wKCkNCn0NCg0KLy8gKHByb3RlY3RlZCkgZGl2aWRlIHRoaXMgYnkgbSwgcXVvdGllbnQgYW5kIHJlbWFpbmRlciB0byBxLCByIChIQUMgMTQuMjApDQovLyByICE9IHEsIHRoaXMgIT0gbS4gIHEgb3IgciBtYXkgYmUgbnVsbC4NCmZ1bmN0aW9uIGJucERpdlJlbVRvKG0sIHEsIHIpIHsNCiAgdmFyIHNlbGYgPSB0aGlzDQogIHZhciBwbSA9IG0uYWJzKCkNCiAgaWYgKHBtLnQgPD0gMCkgcmV0dXJuDQogIHZhciBwdCA9IHNlbGYuYWJzKCkNCiAgaWYgKHB0LnQgPCBwbS50KSB7DQogICAgaWYgKHEgIT0gbnVsbCkgcS5mcm9tSW50KDApDQogICAgaWYgKHIgIT0gbnVsbCkgc2VsZi5jb3B5VG8ocikNCiAgICByZXR1cm4NCiAgfQ0KICBpZiAociA9PSBudWxsKSByID0gbmV3IEJpZ0ludGVnZXIoKQ0KICB2YXIgeSA9IG5ldyBCaWdJbnRlZ2VyKCksDQogICAgdHMgPSBzZWxmLnMsDQogICAgbXMgPSBtLnMNCiAgdmFyIG5zaCA9IHNlbGYuREIgLSBuYml0cyhwbVtwbS50IC0gMV0pOyAvLyBub3JtYWxpemUgbW9kdWx1cw0KICBpZiAobnNoID4gMCkgew0KICAgIHBtLmxTaGlmdFRvKG5zaCwgeSkNCiAgICBwdC5sU2hpZnRUbyhuc2gsIHIpDQogIH0gZWxzZSB7DQogICAgcG0uY29weVRvKHkpDQogICAgcHQuY29weVRvKHIpDQogIH0NCiAgdmFyIHlzID0geS50DQogIHZhciB5MCA9IHlbeXMgLSAxXQ0KICBpZiAoeTAgPT0gMCkgcmV0dXJuDQogIHZhciB5dCA9IHkwICogKDEgPDwgc2VsZi5GMSkgKyAoKHlzID4gMSkgPyB5W3lzIC0gMl0gPj4gc2VsZi5GMiA6IDApDQogIHZhciBkMSA9IHNlbGYuRlYgLyB5dCwNCiAgICBkMiA9ICgxIDw8IHNlbGYuRjEpIC8geXQsDQogICAgZSA9IDEgPDwgc2VsZi5GMg0KICB2YXIgaSA9IHIudCwNCiAgICBqID0gaSAtIHlzLA0KICAgIHQgPSAocSA9PSBudWxsKSA/IG5ldyBCaWdJbnRlZ2VyKCkgOiBxDQogIHkuZGxTaGlmdFRvKGosIHQpDQogIGlmIChyLmNvbXBhcmVUbyh0KSA+PSAwKSB7DQogICAgcltyLnQrK10gPSAxDQogICAgci5zdWJUbyh0LCByKQ0KICB9DQogIEJpZ0ludGVnZXIuT05FLmRsU2hpZnRUbyh5cywgdCkNCiAgdC5zdWJUbyh5LCB5KTsgLy8gIm5lZ2F0aXZlIiB5IHNvIHdlIGNhbiByZXBsYWNlIHN1YiB3aXRoIGFtIGxhdGVyDQogIHdoaWxlICh5LnQgPCB5cykgeVt5LnQrK10gPSAwDQogIHdoaWxlICgtLWogPj0gMCkgew0KICAgIC8vIEVzdGltYXRlIHF1b3RpZW50IGRpZ2l0DQogICAgdmFyIHFkID0gKHJbLS1pXSA9PSB5MCkgPyBzZWxmLkRNIDogTWF0aC5mbG9vcihyW2ldICogZDEgKyAocltpIC0gMV0gKyBlKSAqIGQyKQ0KICAgIGlmICgocltpXSArPSB5LmFtKDAsIHFkLCByLCBqLCAwLCB5cykpIDwgcWQpIHsgLy8gVHJ5IGl0IG91dA0KICAgICAgeS5kbFNoaWZ0VG8oaiwgdCkNCiAgICAgIHIuc3ViVG8odCwgcikNCiAgICAgIHdoaWxlIChyW2ldIDwgLS1xZCkgci5zdWJUbyh0LCByKQ0KICAgIH0NCiAgfQ0KICBpZiAocSAhPSBudWxsKSB7DQogICAgci5kclNoaWZ0VG8oeXMsIHEpDQogICAgaWYgKHRzICE9IG1zKSBCaWdJbnRlZ2VyLlpFUk8uc3ViVG8ocSwgcSkNCiAgfQ0KICByLnQgPSB5cw0KICByLmNsYW1wKCkNCiAgaWYgKG5zaCA+IDApIHIuclNoaWZ0VG8obnNoLCByKTsgLy8gRGVub3JtYWxpemUgcmVtYWluZGVyDQogIGlmICh0cyA8IDApIEJpZ0ludGVnZXIuWkVSTy5zdWJUbyhyLCByKQ0KfQ0KDQovLyAocHVibGljKSB0aGlzIG1vZCBhDQpmdW5jdGlvbiBibk1vZChhKSB7DQogIHZhciByID0gbmV3IEJpZ0ludGVnZXIoKQ0KICB0aGlzLmFicygpDQogICAgLmRpdlJlbVRvKGEsIG51bGwsIHIpDQogIGlmICh0aGlzLnMgPCAwICYmIHIuY29tcGFyZVRvKEJpZ0ludGVnZXIuWkVSTykgPiAwKSBhLnN1YlRvKHIsIHIpDQogIHJldHVybiByDQp9DQoNCi8vIE1vZHVsYXIgcmVkdWN0aW9uIHVzaW5nICJjbGFzc2ljIiBhbGdvcml0aG0NCmZ1bmN0aW9uIENsYXNzaWMobSkgew0KICB0aGlzLm0gPSBtDQp9DQoNCmZ1bmN0aW9uIGNDb252ZXJ0KHgpIHsNCiAgaWYgKHgucyA8IDAgfHwgeC5jb21wYXJlVG8odGhpcy5tKSA+PSAwKSByZXR1cm4geC5tb2QodGhpcy5tKQ0KICBlbHNlIHJldHVybiB4DQp9DQoNCmZ1bmN0aW9uIGNSZXZlcnQoeCkgew0KICByZXR1cm4geA0KfQ0KDQpmdW5jdGlvbiBjUmVkdWNlKHgpIHsNCiAgeC5kaXZSZW1Ubyh0aGlzLm0sIG51bGwsIHgpDQp9DQoNCmZ1bmN0aW9uIGNNdWxUbyh4LCB5LCByKSB7DQogIHgubXVsdGlwbHlUbyh5LCByKQ0KICB0aGlzLnJlZHVjZShyKQ0KfQ0KDQpmdW5jdGlvbiBjU3FyVG8oeCwgcikgew0KICB4LnNxdWFyZVRvKHIpDQogIHRoaXMucmVkdWNlKHIpDQp9DQoNCkNsYXNzaWMucHJvdG90eXBlLmNvbnZlcnQgPSBjQ29udmVydA0KQ2xhc3NpYy5wcm90b3R5cGUucmV2ZXJ0ID0gY1JldmVydA0KQ2xhc3NpYy5wcm90b3R5cGUucmVkdWNlID0gY1JlZHVjZQ0KQ2xhc3NpYy5wcm90b3R5cGUubXVsVG8gPSBjTXVsVG8NCkNsYXNzaWMucHJvdG90eXBlLnNxclRvID0gY1NxclRvDQoNCi8vIChwcm90ZWN0ZWQpIHJldHVybiAiLTEvdGhpcyAlIDJeREIiOyB1c2VmdWwgZm9yIE1vbnQuIHJlZHVjdGlvbg0KLy8ganVzdGlmaWNhdGlvbjoNCi8vICAgICAgICAgeHkgPT0gMSAobW9kIG0pDQovLyAgICAgICAgIHh5ID0gIDEra20NCi8vICAgeHkoMi14eSkgPSAoMStrbSkoMS1rbSkNCi8vIHhbeSgyLXh5KV0gPSAxLWteMm1eMg0KLy8geFt5KDIteHkpXSA9PSAxIChtb2QgbV4yKQ0KLy8gaWYgeSBpcyAxL3ggbW9kIG0sIHRoZW4geSgyLXh5KSBpcyAxL3ggbW9kIG1eMg0KLy8gc2hvdWxkIHJlZHVjZSB4IGFuZCB5KDIteHkpIGJ5IG1eMiBhdCBlYWNoIHN0ZXAgdG8ga2VlcCBzaXplIGJvdW5kZWQuDQovLyBKUyBtdWx0aXBseSAib3ZlcmZsb3dzIiBkaWZmZXJlbnRseSBmcm9tIEMvQysrLCBzbyBjYXJlIGlzIG5lZWRlZCBoZXJlLg0KZnVuY3Rpb24gYm5wSW52RGlnaXQoKSB7DQogIGlmICh0aGlzLnQgPCAxKSByZXR1cm4gMA0KICB2YXIgeCA9IHRoaXNbMF0NCiAgaWYgKCh4ICYgMSkgPT0gMCkgcmV0dXJuIDANCiAgdmFyIHkgPSB4ICYgMzsgLy8geSA9PSAxL3ggbW9kIDJeMg0KICB5ID0gKHkgKiAoMiAtICh4ICYgMHhmKSAqIHkpKSAmIDB4ZjsgLy8geSA9PSAxL3ggbW9kIDJeNA0KICB5ID0gKHkgKiAoMiAtICh4ICYgMHhmZikgKiB5KSkgJiAweGZmOyAvLyB5ID09IDEveCBtb2QgMl44DQogIHkgPSAoeSAqICgyIC0gKCgoeCAmIDB4ZmZmZikgKiB5KSAmIDB4ZmZmZikpKSAmIDB4ZmZmZjsgLy8geSA9PSAxL3ggbW9kIDJeMTYNCiAgLy8gbGFzdCBzdGVwIC0gY2FsY3VsYXRlIGludmVyc2UgbW9kIERWIGRpcmVjdGx5DQogIC8vIGFzc3VtZXMgMTYgPCBEQiA8PSAzMiBhbmQgYXNzdW1lcyBhYmlsaXR5IHRvIGhhbmRsZSA0OC1iaXQgaW50cw0KICB5ID0gKHkgKiAoMiAtIHggKiB5ICUgdGhpcy5EVikpICUgdGhpcy5EVjsgLy8geSA9PSAxL3ggbW9kIDJeZGJpdHMNCiAgLy8gd2UgcmVhbGx5IHdhbnQgdGhlIG5lZ2F0aXZlIGludmVyc2UsIGFuZCAtRFYgPCB5IDwgRFYNCiAgcmV0dXJuICh5ID4gMCkgPyB0aGlzLkRWIC0geSA6IC15DQp9DQoNCi8vIE1vbnRnb21lcnkgcmVkdWN0aW9uDQpmdW5jdGlvbiBNb250Z29tZXJ5KG0pIHsNCiAgdGhpcy5tID0gbQ0KICB0aGlzLm1wID0gbS5pbnZEaWdpdCgpDQogIHRoaXMubXBsID0gdGhpcy5tcCAmIDB4N2ZmZg0KICB0aGlzLm1waCA9IHRoaXMubXAgPj4gMTUNCiAgdGhpcy51bSA9ICgxIDw8IChtLkRCIC0gMTUpKSAtIDENCiAgdGhpcy5tdDIgPSAyICogbS50DQp9DQoNCi8vIHhSIG1vZCBtDQpmdW5jdGlvbiBtb250Q29udmVydCh4KSB7DQogIHZhciByID0gbmV3IEJpZ0ludGVnZXIoKQ0KICB4LmFicygpDQogICAgLmRsU2hpZnRUbyh0aGlzLm0udCwgcikNCiAgci5kaXZSZW1Ubyh0aGlzLm0sIG51bGwsIHIpDQogIGlmICh4LnMgPCAwICYmIHIuY29tcGFyZVRvKEJpZ0ludGVnZXIuWkVSTykgPiAwKSB0aGlzLm0uc3ViVG8ociwgcikNCiAgcmV0dXJuIHINCn0NCg0KLy8geC9SIG1vZCBtDQpmdW5jdGlvbiBtb250UmV2ZXJ0KHgpIHsNCiAgdmFyIHIgPSBuZXcgQmlnSW50ZWdlcigpDQogIHguY29weVRvKHIpDQogIHRoaXMucmVkdWNlKHIpDQogIHJldHVybiByDQp9DQoNCi8vIHggPSB4L1IgbW9kIG0gKEhBQyAxNC4zMikNCmZ1bmN0aW9uIG1vbnRSZWR1Y2UoeCkgew0KICB3aGlsZSAoeC50IDw9IHRoaXMubXQyKSAvLyBwYWQgeCBzbyBhbSBoYXMgZW5vdWdoIHJvb20gbGF0ZXINCiAgICB4W3gudCsrXSA9IDANCiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm0udDsgKytpKSB7DQogICAgLy8gZmFzdGVyIHdheSBvZiBjYWxjdWxhdGluZyB1MCA9IHhbaV0qbXAgbW9kIERWDQogICAgdmFyIGogPSB4W2ldICYgMHg3ZmZmDQogICAgdmFyIHUwID0gKGogKiB0aGlzLm1wbCArICgoKGogKiB0aGlzLm1waCArICh4W2ldID4+IDE1KSAqIHRoaXMubXBsKSAmIHRoaXMudW0pIDw8IDE1KSkgJiB4LkRNDQogICAgLy8gdXNlIGFtIHRvIGNvbWJpbmUgdGhlIG11bHRpcGx5LXNoaWZ0LWFkZCBpbnRvIG9uZSBjYWxsDQogICAgaiA9IGkgKyB0aGlzLm0udA0KICAgIHhbal0gKz0gdGhpcy5tLmFtKDAsIHUwLCB4LCBpLCAwLCB0aGlzLm0udCkNCiAgICAvLyBwcm9wYWdhdGUgY2FycnkNCiAgICB3aGlsZSAoeFtqXSA+PSB4LkRWKSB7DQogICAgICB4W2pdIC09IHguRFYNCiAgICAgIHhbKytqXSsrDQogICAgfQ0KICB9DQogIHguY2xhbXAoKQ0KICB4LmRyU2hpZnRUbyh0aGlzLm0udCwgeCkNCiAgaWYgKHguY29tcGFyZVRvKHRoaXMubSkgPj0gMCkgeC5zdWJUbyh0aGlzLm0sIHgpDQp9DQoNCi8vIHIgPSAieF4yL1IgbW9kIG0iOyB4ICE9IHINCmZ1bmN0aW9uIG1vbnRTcXJUbyh4LCByKSB7DQogIHguc3F1YXJlVG8ocikNCiAgdGhpcy5yZWR1Y2UocikNCn0NCg0KLy8gciA9ICJ4eS9SIG1vZCBtIjsgeCx5ICE9IHINCmZ1bmN0aW9uIG1vbnRNdWxUbyh4LCB5LCByKSB7DQogIHgubXVsdGlwbHlUbyh5LCByKQ0KICB0aGlzLnJlZHVjZShyKQ0KfQ0KDQpNb250Z29tZXJ5LnByb3RvdHlwZS5jb252ZXJ0ID0gbW9udENvbnZlcnQNCk1vbnRnb21lcnkucHJvdG90eXBlLnJldmVydCA9IG1vbnRSZXZlcnQNCk1vbnRnb21lcnkucHJvdG90eXBlLnJlZHVjZSA9IG1vbnRSZWR1Y2UNCk1vbnRnb21lcnkucHJvdG90eXBlLm11bFRvID0gbW9udE11bFRvDQpNb250Z29tZXJ5LnByb3RvdHlwZS5zcXJUbyA9IG1vbnRTcXJUbw0KDQovLyAocHJvdGVjdGVkKSB0cnVlIGlmZiB0aGlzIGlzIGV2ZW4NCmZ1bmN0aW9uIGJucElzRXZlbigpIHsNCiAgcmV0dXJuICgodGhpcy50ID4gMCkgPyAodGhpc1swXSAmIDEpIDogdGhpcy5zKSA9PSAwDQp9DQoNCi8vIChwcm90ZWN0ZWQpIHRoaXNeZSwgZSA8IDJeMzIsIGRvaW5nIHNxciBhbmQgbXVsIHdpdGggInIiIChIQUMgMTQuNzkpDQpmdW5jdGlvbiBibnBFeHAoZSwgeikgew0KICBpZiAoZSA+IDB4ZmZmZmZmZmYgfHwgZSA8IDEpIHJldHVybiBCaWdJbnRlZ2VyLk9ORQ0KICB2YXIgciA9IG5ldyBCaWdJbnRlZ2VyKCksDQogICAgcjIgPSBuZXcgQmlnSW50ZWdlcigpLA0KICAgIGcgPSB6LmNvbnZlcnQodGhpcyksDQogICAgaSA9IG5iaXRzKGUpIC0gMQ0KICBnLmNvcHlUbyhyKQ0KICB3aGlsZSAoLS1pID49IDApIHsNCiAgICB6LnNxclRvKHIsIHIyKQ0KICAgIGlmICgoZSAmICgxIDw8IGkpKSA+IDApIHoubXVsVG8ocjIsIGcsIHIpDQogICAgZWxzZSB7DQogICAgICB2YXIgdCA9IHINCiAgICAgIHIgPSByMg0KICAgICAgcjIgPSB0DQogICAgfQ0KICB9DQogIHJldHVybiB6LnJldmVydChyKQ0KfQ0KDQovLyAocHVibGljKSB0aGlzXmUgJSBtLCAwIDw9IGUgPCAyXjMyDQpmdW5jdGlvbiBibk1vZFBvd0ludChlLCBtKSB7DQogIHZhciB6DQogIGlmIChlIDwgMjU2IHx8IG0uaXNFdmVuKCkpIHogPSBuZXcgQ2xhc3NpYyhtKQ0KICBlbHNlIHogPSBuZXcgTW9udGdvbWVyeShtKQ0KICByZXR1cm4gdGhpcy5leHAoZSwgeikNCn0NCg0KLy8gcHJvdGVjdGVkDQpwcm90by5jb3B5VG8gPSBibnBDb3B5VG8NCnByb3RvLmZyb21JbnQgPSBibnBGcm9tSW50DQpwcm90by5mcm9tU3RyaW5nID0gYm5wRnJvbVN0cmluZw0KcHJvdG8uY2xhbXAgPSBibnBDbGFtcA0KcHJvdG8uZGxTaGlmdFRvID0gYm5wRExTaGlmdFRvDQpwcm90by5kclNoaWZ0VG8gPSBibnBEUlNoaWZ0VG8NCnByb3RvLmxTaGlmdFRvID0gYm5wTFNoaWZ0VG8NCnByb3RvLnJTaGlmdFRvID0gYm5wUlNoaWZ0VG8NCnByb3RvLnN1YlRvID0gYm5wU3ViVG8NCnByb3RvLm11bHRpcGx5VG8gPSBibnBNdWx0aXBseVRvDQpwcm90by5zcXVhcmVUbyA9IGJucFNxdWFyZVRvDQpwcm90by5kaXZSZW1UbyA9IGJucERpdlJlbVRvDQpwcm90by5pbnZEaWdpdCA9IGJucEludkRpZ2l0DQpwcm90by5pc0V2ZW4gPSBibnBJc0V2ZW4NCnByb3RvLmV4cCA9IGJucEV4cA0KDQovLyBwdWJsaWMNCnByb3RvLnRvU3RyaW5nID0gYm5Ub1N0cmluZw0KcHJvdG8ubmVnYXRlID0gYm5OZWdhdGUNCnByb3RvLmFicyA9IGJuQWJzDQpwcm90by5jb21wYXJlVG8gPSBibkNvbXBhcmVUbw0KcHJvdG8uYml0TGVuZ3RoID0gYm5CaXRMZW5ndGgNCnByb3RvLmJ5dGVMZW5ndGggPSBibkJ5dGVMZW5ndGgNCnByb3RvLm1vZCA9IGJuTW9kDQpwcm90by5tb2RQb3dJbnQgPSBibk1vZFBvd0ludA0KDQovLyAocHVibGljKQ0KZnVuY3Rpb24gYm5DbG9uZSgpIHsNCiAgdmFyIHIgPSBuZXcgQmlnSW50ZWdlcigpDQogIHRoaXMuY29weVRvKHIpDQogIHJldHVybiByDQp9DQoNCi8vIChwdWJsaWMpIHJldHVybiB2YWx1ZSBhcyBpbnRlZ2VyDQpmdW5jdGlvbiBibkludFZhbHVlKCkgew0KICBpZiAodGhpcy5zIDwgMCkgew0KICAgIGlmICh0aGlzLnQgPT0gMSkgcmV0dXJuIHRoaXNbMF0gLSB0aGlzLkRWDQogICAgZWxzZSBpZiAodGhpcy50ID09IDApIHJldHVybiAtMQ0KICB9IGVsc2UgaWYgKHRoaXMudCA9PSAxKSByZXR1cm4gdGhpc1swXQ0KICBlbHNlIGlmICh0aGlzLnQgPT0gMCkgcmV0dXJuIDANCiAgLy8gYXNzdW1lcyAxNiA8IERCIDwgMzINCiAgcmV0dXJuICgodGhpc1sxXSAmICgoMSA8PCAoMzIgLSB0aGlzLkRCKSkgLSAxKSkgPDwgdGhpcy5EQikgfCB0aGlzWzBdDQp9DQoNCi8vIChwdWJsaWMpIHJldHVybiB2YWx1ZSBhcyBieXRlDQpmdW5jdGlvbiBibkJ5dGVWYWx1ZSgpIHsNCiAgcmV0dXJuICh0aGlzLnQgPT0gMCkgPyB0aGlzLnMgOiAodGhpc1swXSA8PCAyNCkgPj4gMjQNCn0NCg0KLy8gKHB1YmxpYykgcmV0dXJuIHZhbHVlIGFzIHNob3J0IChhc3N1bWVzIERCPj0xNikNCmZ1bmN0aW9uIGJuU2hvcnRWYWx1ZSgpIHsNCiAgcmV0dXJuICh0aGlzLnQgPT0gMCkgPyB0aGlzLnMgOiAodGhpc1swXSA8PCAxNikgPj4gMTYNCn0NCg0KLy8gKHByb3RlY3RlZCkgcmV0dXJuIHggcy50LiByXnggPCBEVg0KZnVuY3Rpb24gYm5wQ2h1bmtTaXplKHIpIHsNCiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5MTjIgKiB0aGlzLkRCIC8gTWF0aC5sb2cocikpDQp9DQoNCi8vIChwdWJsaWMpIDAgaWYgdGhpcyA9PSAwLCAxIGlmIHRoaXMgPiAwDQpmdW5jdGlvbiBiblNpZ051bSgpIHsNCiAgaWYgKHRoaXMucyA8IDApIHJldHVybiAtMQ0KICBlbHNlIGlmICh0aGlzLnQgPD0gMCB8fCAodGhpcy50ID09IDEgJiYgdGhpc1swXSA8PSAwKSkgcmV0dXJuIDANCiAgZWxzZSByZXR1cm4gMQ0KfQ0KDQovLyAocHJvdGVjdGVkKSBjb252ZXJ0IHRvIHJhZGl4IHN0cmluZw0KZnVuY3Rpb24gYm5wVG9SYWRpeChiKSB7DQogIGlmIChiID09IG51bGwpIGIgPSAxMA0KICBpZiAodGhpcy5zaWdudW0oKSA9PSAwIHx8IGIgPCAyIHx8IGIgPiAzNikgcmV0dXJuICIwIg0KICB2YXIgY3MgPSB0aGlzLmNodW5rU2l6ZShiKQ0KICB2YXIgYSA9IE1hdGgucG93KGIsIGNzKQ0KICB2YXIgZCA9IG5idihhKSwNCiAgICB5ID0gbmV3IEJpZ0ludGVnZXIoKSwNCiAgICB6ID0gbmV3IEJpZ0ludGVnZXIoKSwNCiAgICByID0gIiINCiAgdGhpcy5kaXZSZW1UbyhkLCB5LCB6KQ0KICB3aGlsZSAoeS5zaWdudW0oKSA+IDApIHsNCiAgICByID0gKGEgKyB6LmludFZhbHVlKCkpDQogICAgICAudG9TdHJpbmcoYikNCiAgICAgIC5zdWJzdHIoMSkgKyByDQogICAgeS5kaXZSZW1UbyhkLCB5LCB6KQ0KICB9DQogIHJldHVybiB6LmludFZhbHVlKCkNCiAgICAudG9TdHJpbmcoYikgKyByDQp9DQoNCi8vIChwcm90ZWN0ZWQpIGNvbnZlcnQgZnJvbSByYWRpeCBzdHJpbmcNCmZ1bmN0aW9uIGJucEZyb21SYWRpeChzLCBiKSB7DQogIHZhciBzZWxmID0gdGhpcw0KICBzZWxmLmZyb21JbnQoMCkNCiAgaWYgKGIgPT0gbnVsbCkgYiA9IDEwDQogIHZhciBjcyA9IHNlbGYuY2h1bmtTaXplKGIpDQogIHZhciBkID0gTWF0aC5wb3coYiwgY3MpLA0KICAgIG1pID0gZmFsc2UsDQogICAgaiA9IDAsDQogICAgdyA9IDANCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzLmxlbmd0aDsgKytpKSB7DQogICAgdmFyIHggPSBpbnRBdChzLCBpKQ0KICAgIGlmICh4IDwgMCkgew0KICAgICAgaWYgKHMuY2hhckF0KGkpID09ICItIiAmJiBzZWxmLnNpZ251bSgpID09IDApIG1pID0gdHJ1ZQ0KICAgICAgY29udGludWUNCiAgICB9DQogICAgdyA9IGIgKiB3ICsgeA0KICAgIGlmICgrK2ogPj0gY3MpIHsNCiAgICAgIHNlbGYuZE11bHRpcGx5KGQpDQogICAgICBzZWxmLmRBZGRPZmZzZXQodywgMCkNCiAgICAgIGogPSAwDQogICAgICB3ID0gMA0KICAgIH0NCiAgfQ0KICBpZiAoaiA+IDApIHsNCiAgICBzZWxmLmRNdWx0aXBseShNYXRoLnBvdyhiLCBqKSkNCiAgICBzZWxmLmRBZGRPZmZzZXQodywgMCkNCiAgfQ0KICBpZiAobWkpIEJpZ0ludGVnZXIuWkVSTy5zdWJUbyhzZWxmLCBzZWxmKQ0KfQ0KDQovLyAocHJvdGVjdGVkKSBhbHRlcm5hdGUgY29uc3RydWN0b3INCmZ1bmN0aW9uIGJucEZyb21OdW1iZXIoYSwgYiwgYykgew0KICB2YXIgc2VsZiA9IHRoaXMNCiAgaWYgKCJudW1iZXIiID09IHR5cGVvZiBiKSB7DQogICAgLy8gbmV3IEJpZ0ludGVnZXIoaW50LGludCxSTkcpDQogICAgaWYgKGEgPCAyKSBzZWxmLmZyb21JbnQoMSkNCiAgICBlbHNlIHsNCiAgICAgIHNlbGYuZnJvbU51bWJlcihhLCBjKQ0KICAgICAgaWYgKCFzZWxmLnRlc3RCaXQoYSAtIDEpKSAvLyBmb3JjZSBNU0Igc2V0DQogICAgICAgIHNlbGYuYml0d2lzZVRvKEJpZ0ludGVnZXIuT05FLnNoaWZ0TGVmdChhIC0gMSksIG9wX29yLCBzZWxmKQ0KICAgICAgaWYgKHNlbGYuaXNFdmVuKCkpIHNlbGYuZEFkZE9mZnNldCgxLCAwKTsgLy8gZm9yY2Ugb2RkDQogICAgICB3aGlsZSAoIXNlbGYuaXNQcm9iYWJsZVByaW1lKGIpKSB7DQogICAgICAgIHNlbGYuZEFkZE9mZnNldCgyLCAwKQ0KICAgICAgICBpZiAoc2VsZi5iaXRMZW5ndGgoKSA+IGEpIHNlbGYuc3ViVG8oQmlnSW50ZWdlci5PTkUuc2hpZnRMZWZ0KGEgLSAxKSwgc2VsZikNCiAgICAgIH0NCiAgICB9DQogIH0gZWxzZSB7DQogICAgLy8gbmV3IEJpZ0ludGVnZXIoaW50LFJORykNCiAgICB2YXIgeCA9IG5ldyBBcnJheSgpLA0KICAgICAgdCA9IGEgJiA3DQogICAgeC5sZW5ndGggPSAoYSA+PiAzKSArIDENCiAgICBiLm5leHRCeXRlcyh4KQ0KICAgIGlmICh0ID4gMCkgeFswXSAmPSAoKDEgPDwgdCkgLSAxKQ0KICAgIGVsc2UgeFswXSA9IDANCiAgICBzZWxmLmZyb21TdHJpbmcoeCwgMjU2KQ0KICB9DQp9DQoNCi8vIChwdWJsaWMpIGNvbnZlcnQgdG8gYmlnZW5kaWFuIGJ5dGUgYXJyYXkNCmZ1bmN0aW9uIGJuVG9CeXRlQXJyYXkoKSB7DQogIHZhciBzZWxmID0gdGhpcw0KICB2YXIgaSA9IHNlbGYudCwNCiAgICByID0gbmV3IEFycmF5KCkNCiAgclswXSA9IHNlbGYucw0KICB2YXIgcCA9IHNlbGYuREIgLSAoaSAqIHNlbGYuREIpICUgOCwNCiAgICBkLCBrID0gMA0KICBpZiAoaS0tID4gMCkgew0KICAgIGlmIChwIDwgc2VsZi5EQiAmJiAoZCA9IHNlbGZbaV0gPj4gcCkgIT0gKHNlbGYucyAmIHNlbGYuRE0pID4+IHApDQogICAgICByW2srK10gPSBkIHwgKHNlbGYucyA8PCAoc2VsZi5EQiAtIHApKQ0KICAgIHdoaWxlIChpID49IDApIHsNCiAgICAgIGlmIChwIDwgOCkgew0KICAgICAgICBkID0gKHNlbGZbaV0gJiAoKDEgPDwgcCkgLSAxKSkgPDwgKDggLSBwKQ0KICAgICAgICBkIHw9IHNlbGZbLS1pXSA+PiAocCArPSBzZWxmLkRCIC0gOCkNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGQgPSAoc2VsZltpXSA+PiAocCAtPSA4KSkgJiAweGZmDQogICAgICAgIGlmIChwIDw9IDApIHsNCiAgICAgICAgICBwICs9IHNlbGYuREINCiAgICAgICAgICAtLWkNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgaWYgKChkICYgMHg4MCkgIT0gMCkgZCB8PSAtMjU2DQogICAgICBpZiAoayA9PT0gMCAmJiAoc2VsZi5zICYgMHg4MCkgIT0gKGQgJiAweDgwKSkrK2sNCiAgICAgIGlmIChrID4gMCB8fCBkICE9IHNlbGYucykgcltrKytdID0gZA0KICAgIH0NCiAgfQ0KICByZXR1cm4gcg0KfQ0KDQpmdW5jdGlvbiBibkVxdWFscyhhKSB7DQogIHJldHVybiAodGhpcy5jb21wYXJlVG8oYSkgPT0gMCkNCn0NCg0KZnVuY3Rpb24gYm5NaW4oYSkgew0KICByZXR1cm4gKHRoaXMuY29tcGFyZVRvKGEpIDwgMCkgPyB0aGlzIDogYQ0KfQ0KDQpmdW5jdGlvbiBibk1heChhKSB7DQogIHJldHVybiAodGhpcy5jb21wYXJlVG8oYSkgPiAwKSA/IHRoaXMgOiBhDQp9DQoNCi8vIChwcm90ZWN0ZWQpIHIgPSB0aGlzIG9wIGEgKGJpdHdpc2UpDQpmdW5jdGlvbiBibnBCaXR3aXNlVG8oYSwgb3AsIHIpIHsNCiAgdmFyIHNlbGYgPSB0aGlzDQogIHZhciBpLCBmLCBtID0gTWF0aC5taW4oYS50LCBzZWxmLnQpDQogIGZvciAoaSA9IDA7IGkgPCBtOyArK2kpIHJbaV0gPSBvcChzZWxmW2ldLCBhW2ldKQ0KICBpZiAoYS50IDwgc2VsZi50KSB7DQogICAgZiA9IGEucyAmIHNlbGYuRE0NCiAgICBmb3IgKGkgPSBtOyBpIDwgc2VsZi50OyArK2kpIHJbaV0gPSBvcChzZWxmW2ldLCBmKQ0KICAgIHIudCA9IHNlbGYudA0KICB9IGVsc2Ugew0KICAgIGYgPSBzZWxmLnMgJiBzZWxmLkRNDQogICAgZm9yIChpID0gbTsgaSA8IGEudDsgKytpKSByW2ldID0gb3AoZiwgYVtpXSkNCiAgICByLnQgPSBhLnQNCiAgfQ0KICByLnMgPSBvcChzZWxmLnMsIGEucykNCiAgci5jbGFtcCgpDQp9DQoNCi8vIChwdWJsaWMpIHRoaXMgJiBhDQpmdW5jdGlvbiBvcF9hbmQoeCwgeSkgew0KICByZXR1cm4geCAmIHkNCn0NCg0KZnVuY3Rpb24gYm5BbmQoYSkgew0KICB2YXIgciA9IG5ldyBCaWdJbnRlZ2VyKCkNCiAgdGhpcy5iaXR3aXNlVG8oYSwgb3BfYW5kLCByKQ0KICByZXR1cm4gcg0KfQ0KDQovLyAocHVibGljKSB0aGlzIHwgYQ0KZnVuY3Rpb24gb3Bfb3IoeCwgeSkgew0KICByZXR1cm4geCB8IHkNCn0NCg0KZnVuY3Rpb24gYm5PcihhKSB7DQogIHZhciByID0gbmV3IEJpZ0ludGVnZXIoKQ0KICB0aGlzLmJpdHdpc2VUbyhhLCBvcF9vciwgcikNCiAgcmV0dXJuIHINCn0NCg0KLy8gKHB1YmxpYykgdGhpcyBeIGENCmZ1bmN0aW9uIG9wX3hvcih4LCB5KSB7DQogIHJldHVybiB4IF4geQ0KfQ0KDQpmdW5jdGlvbiBiblhvcihhKSB7DQogIHZhciByID0gbmV3IEJpZ0ludGVnZXIoKQ0KICB0aGlzLmJpdHdpc2VUbyhhLCBvcF94b3IsIHIpDQogIHJldHVybiByDQp9DQoNCi8vIChwdWJsaWMpIHRoaXMgJiB+YQ0KZnVuY3Rpb24gb3BfYW5kbm90KHgsIHkpIHsNCiAgcmV0dXJuIHggJiB+eQ0KfQ0KDQpmdW5jdGlvbiBibkFuZE5vdChhKSB7DQogIHZhciByID0gbmV3IEJpZ0ludGVnZXIoKQ0KICB0aGlzLmJpdHdpc2VUbyhhLCBvcF9hbmRub3QsIHIpDQogIHJldHVybiByDQp9DQoNCi8vIChwdWJsaWMpIH50aGlzDQpmdW5jdGlvbiBibk5vdCgpIHsNCiAgdmFyIHIgPSBuZXcgQmlnSW50ZWdlcigpDQogIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy50OyArK2kpIHJbaV0gPSB0aGlzLkRNICYgfnRoaXNbaV0NCiAgci50ID0gdGhpcy50DQogIHIucyA9IH50aGlzLnMNCiAgcmV0dXJuIHINCn0NCg0KLy8gKHB1YmxpYykgdGhpcyA8PCBuDQpmdW5jdGlvbiBiblNoaWZ0TGVmdChuKSB7DQogIHZhciByID0gbmV3IEJpZ0ludGVnZXIoKQ0KICBpZiAobiA8IDApIHRoaXMuclNoaWZ0VG8oLW4sIHIpDQogIGVsc2UgdGhpcy5sU2hpZnRUbyhuLCByKQ0KICByZXR1cm4gcg0KfQ0KDQovLyAocHVibGljKSB0aGlzID4+IG4NCmZ1bmN0aW9uIGJuU2hpZnRSaWdodChuKSB7DQogIHZhciByID0gbmV3IEJpZ0ludGVnZXIoKQ0KICBpZiAobiA8IDApIHRoaXMubFNoaWZ0VG8oLW4sIHIpDQogIGVsc2UgdGhpcy5yU2hpZnRUbyhuLCByKQ0KICByZXR1cm4gcg0KfQ0KDQovLyByZXR1cm4gaW5kZXggb2YgbG93ZXN0IDEtYml0IGluIHgsIHggPCAyXjMxDQpmdW5jdGlvbiBsYml0KHgpIHsNCiAgaWYgKHggPT0gMCkgcmV0dXJuIC0xDQogIHZhciByID0gMA0KICBpZiAoKHggJiAweGZmZmYpID09IDApIHsNCiAgICB4ID4+PSAxNg0KICAgIHIgKz0gMTYNCiAgfQ0KICBpZiAoKHggJiAweGZmKSA9PSAwKSB7DQogICAgeCA+Pj0gOA0KICAgIHIgKz0gOA0KICB9DQogIGlmICgoeCAmIDB4ZikgPT0gMCkgew0KICAgIHggPj49IDQNCiAgICByICs9IDQNCiAgfQ0KICBpZiAoKHggJiAzKSA9PSAwKSB7DQogICAgeCA+Pj0gMg0KICAgIHIgKz0gMg0KICB9DQogIGlmICgoeCAmIDEpID09IDApKytyDQogIHJldHVybiByDQp9DQoNCi8vIChwdWJsaWMpIHJldHVybnMgaW5kZXggb2YgbG93ZXN0IDEtYml0IChvciAtMSBpZiBub25lKQ0KZnVuY3Rpb24gYm5HZXRMb3dlc3RTZXRCaXQoKSB7DQogIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy50OyArK2kpDQogICAgaWYgKHRoaXNbaV0gIT0gMCkgcmV0dXJuIGkgKiB0aGlzLkRCICsgbGJpdCh0aGlzW2ldKQ0KICBpZiAodGhpcy5zIDwgMCkgcmV0dXJuIHRoaXMudCAqIHRoaXMuREINCiAgcmV0dXJuIC0xDQp9DQoNCi8vIHJldHVybiBudW1iZXIgb2YgMSBiaXRzIGluIHgNCmZ1bmN0aW9uIGNiaXQoeCkgew0KICB2YXIgciA9IDANCiAgd2hpbGUgKHggIT0gMCkgew0KICAgIHggJj0geCAtIDENCiAgICArK3INCiAgfQ0KICByZXR1cm4gcg0KfQ0KDQovLyAocHVibGljKSByZXR1cm4gbnVtYmVyIG9mIHNldCBiaXRzDQpmdW5jdGlvbiBibkJpdENvdW50KCkgew0KICB2YXIgciA9IDAsDQogICAgeCA9IHRoaXMucyAmIHRoaXMuRE0NCiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnQ7ICsraSkgciArPSBjYml0KHRoaXNbaV0gXiB4KQ0KICByZXR1cm4gcg0KfQ0KDQovLyAocHVibGljKSB0cnVlIGlmZiBudGggYml0IGlzIHNldA0KZnVuY3Rpb24gYm5UZXN0Qml0KG4pIHsNCiAgdmFyIGogPSBNYXRoLmZsb29yKG4gLyB0aGlzLkRCKQ0KICBpZiAoaiA+PSB0aGlzLnQpIHJldHVybiAodGhpcy5zICE9IDApDQogIHJldHVybiAoKHRoaXNbal0gJiAoMSA8PCAobiAlIHRoaXMuREIpKSkgIT0gMCkNCn0NCg0KLy8gKHByb3RlY3RlZCkgdGhpcyBvcCAoMTw8bikNCmZ1bmN0aW9uIGJucENoYW5nZUJpdChuLCBvcCkgew0KICB2YXIgciA9IEJpZ0ludGVnZXIuT05FLnNoaWZ0TGVmdChuKQ0KICB0aGlzLmJpdHdpc2VUbyhyLCBvcCwgcikNCiAgcmV0dXJuIHINCn0NCg0KLy8gKHB1YmxpYykgdGhpcyB8ICgxPDxuKQ0KZnVuY3Rpb24gYm5TZXRCaXQobikgew0KICByZXR1cm4gdGhpcy5jaGFuZ2VCaXQobiwgb3Bfb3IpDQp9DQoNCi8vIChwdWJsaWMpIHRoaXMgJiB+KDE8PG4pDQpmdW5jdGlvbiBibkNsZWFyQml0KG4pIHsNCiAgcmV0dXJuIHRoaXMuY2hhbmdlQml0KG4sIG9wX2FuZG5vdCkNCn0NCg0KLy8gKHB1YmxpYykgdGhpcyBeICgxPDxuKQ0KZnVuY3Rpb24gYm5GbGlwQml0KG4pIHsNCiAgcmV0dXJuIHRoaXMuY2hhbmdlQml0KG4sIG9wX3hvcikNCn0NCg0KLy8gKHByb3RlY3RlZCkgciA9IHRoaXMgKyBhDQpmdW5jdGlvbiBibnBBZGRUbyhhLCByKSB7DQogIHZhciBzZWxmID0gdGhpcw0KDQogIHZhciBpID0gMCwNCiAgICBjID0gMCwNCiAgICBtID0gTWF0aC5taW4oYS50LCBzZWxmLnQpDQogIHdoaWxlIChpIDwgbSkgew0KICAgIGMgKz0gc2VsZltpXSArIGFbaV0NCiAgICByW2krK10gPSBjICYgc2VsZi5ETQ0KICAgIGMgPj49IHNlbGYuREINCiAgfQ0KICBpZiAoYS50IDwgc2VsZi50KSB7DQogICAgYyArPSBhLnMNCiAgICB3aGlsZSAoaSA8IHNlbGYudCkgew0KICAgICAgYyArPSBzZWxmW2ldDQogICAgICByW2krK10gPSBjICYgc2VsZi5ETQ0KICAgICAgYyA+Pj0gc2VsZi5EQg0KICAgIH0NCiAgICBjICs9IHNlbGYucw0KICB9IGVsc2Ugew0KICAgIGMgKz0gc2VsZi5zDQogICAgd2hpbGUgKGkgPCBhLnQpIHsNCiAgICAgIGMgKz0gYVtpXQ0KICAgICAgcltpKytdID0gYyAmIHNlbGYuRE0NCiAgICAgIGMgPj49IHNlbGYuREINCiAgICB9DQogICAgYyArPSBhLnMNCiAgfQ0KICByLnMgPSAoYyA8IDApID8gLTEgOiAwDQogIGlmIChjID4gMCkgcltpKytdID0gYw0KICBlbHNlIGlmIChjIDwgLTEpIHJbaSsrXSA9IHNlbGYuRFYgKyBjDQogIHIudCA9IGkNCiAgci5jbGFtcCgpDQp9DQoNCi8vIChwdWJsaWMpIHRoaXMgKyBhDQpmdW5jdGlvbiBibkFkZChhKSB7DQogIHZhciByID0gbmV3IEJpZ0ludGVnZXIoKQ0KICB0aGlzLmFkZFRvKGEsIHIpDQogIHJldHVybiByDQp9DQoNCi8vIChwdWJsaWMpIHRoaXMgLSBhDQpmdW5jdGlvbiBiblN1YnRyYWN0KGEpIHsNCiAgdmFyIHIgPSBuZXcgQmlnSW50ZWdlcigpDQogIHRoaXMuc3ViVG8oYSwgcikNCiAgcmV0dXJuIHINCn0NCg0KLy8gKHB1YmxpYykgdGhpcyAqIGENCmZ1bmN0aW9uIGJuTXVsdGlwbHkoYSkgew0KICB2YXIgciA9IG5ldyBCaWdJbnRlZ2VyKCkNCiAgdGhpcy5tdWx0aXBseVRvKGEsIHIpDQogIHJldHVybiByDQp9DQoNCi8vIChwdWJsaWMpIHRoaXNeMg0KZnVuY3Rpb24gYm5TcXVhcmUoKSB7DQogIHZhciByID0gbmV3IEJpZ0ludGVnZXIoKQ0KICB0aGlzLnNxdWFyZVRvKHIpDQogIHJldHVybiByDQp9DQoNCi8vIChwdWJsaWMpIHRoaXMgLyBhDQpmdW5jdGlvbiBibkRpdmlkZShhKSB7DQogIHZhciByID0gbmV3IEJpZ0ludGVnZXIoKQ0KICB0aGlzLmRpdlJlbVRvKGEsIHIsIG51bGwpDQogIHJldHVybiByDQp9DQoNCi8vIChwdWJsaWMpIHRoaXMgJSBhDQpmdW5jdGlvbiBiblJlbWFpbmRlcihhKSB7DQogIHZhciByID0gbmV3IEJpZ0ludGVnZXIoKQ0KICB0aGlzLmRpdlJlbVRvKGEsIG51bGwsIHIpDQogIHJldHVybiByDQp9DQoNCi8vIChwdWJsaWMpIFt0aGlzL2EsdGhpcyVhXQ0KZnVuY3Rpb24gYm5EaXZpZGVBbmRSZW1haW5kZXIoYSkgew0KICB2YXIgcSA9IG5ldyBCaWdJbnRlZ2VyKCksDQogICAgciA9IG5ldyBCaWdJbnRlZ2VyKCkNCiAgdGhpcy5kaXZSZW1UbyhhLCBxLCByKQ0KICByZXR1cm4gbmV3IEFycmF5KHEsIHIpDQp9DQoNCi8vIChwcm90ZWN0ZWQpIHRoaXMgKj0gbiwgdGhpcyA+PSAwLCAxIDwgbiA8IERWDQpmdW5jdGlvbiBibnBETXVsdGlwbHkobikgew0KICB0aGlzW3RoaXMudF0gPSB0aGlzLmFtKDAsIG4gLSAxLCB0aGlzLCAwLCAwLCB0aGlzLnQpDQogICsrdGhpcy50DQogIHRoaXMuY2xhbXAoKQ0KfQ0KDQovLyAocHJvdGVjdGVkKSB0aGlzICs9IG4gPDwgdyB3b3JkcywgdGhpcyA+PSAwDQpmdW5jdGlvbiBibnBEQWRkT2Zmc2V0KG4sIHcpIHsNCiAgaWYgKG4gPT0gMCkgcmV0dXJuDQogIHdoaWxlICh0aGlzLnQgPD0gdykgdGhpc1t0aGlzLnQrK10gPSAwDQogIHRoaXNbd10gKz0gbg0KICB3aGlsZSAodGhpc1t3XSA+PSB0aGlzLkRWKSB7DQogICAgdGhpc1t3XSAtPSB0aGlzLkRWDQogICAgaWYgKCsrdyA+PSB0aGlzLnQpIHRoaXNbdGhpcy50KytdID0gMA0KICAgICsrdGhpc1t3XQ0KICB9DQp9DQoNCi8vIEEgIm51bGwiIHJlZHVjZXINCmZ1bmN0aW9uIE51bGxFeHAoKSB7fQ0KDQpmdW5jdGlvbiBuTm9wKHgpIHsNCiAgcmV0dXJuIHgNCn0NCg0KZnVuY3Rpb24gbk11bFRvKHgsIHksIHIpIHsNCiAgeC5tdWx0aXBseVRvKHksIHIpDQp9DQoNCmZ1bmN0aW9uIG5TcXJUbyh4LCByKSB7DQogIHguc3F1YXJlVG8ocikNCn0NCg0KTnVsbEV4cC5wcm90b3R5cGUuY29udmVydCA9IG5Ob3ANCk51bGxFeHAucHJvdG90eXBlLnJldmVydCA9IG5Ob3ANCk51bGxFeHAucHJvdG90eXBlLm11bFRvID0gbk11bFRvDQpOdWxsRXhwLnByb3RvdHlwZS5zcXJUbyA9IG5TcXJUbw0KDQovLyAocHVibGljKSB0aGlzXmUNCmZ1bmN0aW9uIGJuUG93KGUpIHsNCiAgcmV0dXJuIHRoaXMuZXhwKGUsIG5ldyBOdWxsRXhwKCkpDQp9DQoNCi8vIChwcm90ZWN0ZWQpIHIgPSBsb3dlciBuIHdvcmRzIG9mICJ0aGlzICogYSIsIGEudCA8PSBuDQovLyAidGhpcyIgc2hvdWxkIGJlIHRoZSBsYXJnZXIgb25lIGlmIGFwcHJvcHJpYXRlLg0KZnVuY3Rpb24gYm5wTXVsdGlwbHlMb3dlclRvKGEsIG4sIHIpIHsNCiAgdmFyIGkgPSBNYXRoLm1pbih0aGlzLnQgKyBhLnQsIG4pDQogIHIucyA9IDA7IC8vIGFzc3VtZXMgYSx0aGlzID49IDANCiAgci50ID0gaQ0KICB3aGlsZSAoaSA+IDApIHJbLS1pXSA9IDANCiAgdmFyIGoNCiAgZm9yIChqID0gci50IC0gdGhpcy50OyBpIDwgajsgKytpKSByW2kgKyB0aGlzLnRdID0gdGhpcy5hbSgwLCBhW2ldLCByLCBpLCAwLCB0aGlzLnQpDQogIGZvciAoaiA9IE1hdGgubWluKGEudCwgbik7IGkgPCBqOyArK2kpIHRoaXMuYW0oMCwgYVtpXSwgciwgaSwgMCwgbiAtIGkpDQogIHIuY2xhbXAoKQ0KfQ0KDQovLyAocHJvdGVjdGVkKSByID0gInRoaXMgKiBhIiB3aXRob3V0IGxvd2VyIG4gd29yZHMsIG4gPiAwDQovLyAidGhpcyIgc2hvdWxkIGJlIHRoZSBsYXJnZXIgb25lIGlmIGFwcHJvcHJpYXRlLg0KZnVuY3Rpb24gYm5wTXVsdGlwbHlVcHBlclRvKGEsIG4sIHIpIHsNCiAgLS1uDQogIHZhciBpID0gci50ID0gdGhpcy50ICsgYS50IC0gbg0KICByLnMgPSAwOyAvLyBhc3N1bWVzIGEsdGhpcyA+PSAwDQogIHdoaWxlICgtLWkgPj0gMCkgcltpXSA9IDANCiAgZm9yIChpID0gTWF0aC5tYXgobiAtIHRoaXMudCwgMCk7IGkgPCBhLnQ7ICsraSkNCiAgICByW3RoaXMudCArIGkgLSBuXSA9IHRoaXMuYW0obiAtIGksIGFbaV0sIHIsIDAsIDAsIHRoaXMudCArIGkgLSBuKQ0KICByLmNsYW1wKCkNCiAgci5kclNoaWZ0VG8oMSwgcikNCn0NCg0KLy8gQmFycmV0dCBtb2R1bGFyIHJlZHVjdGlvbg0KZnVuY3Rpb24gQmFycmV0dChtKSB7DQogIC8vIHNldHVwIEJhcnJldHQNCiAgdGhpcy5yMiA9IG5ldyBCaWdJbnRlZ2VyKCkNCiAgdGhpcy5xMyA9IG5ldyBCaWdJbnRlZ2VyKCkNCiAgQmlnSW50ZWdlci5PTkUuZGxTaGlmdFRvKDIgKiBtLnQsIHRoaXMucjIpDQogIHRoaXMubXUgPSB0aGlzLnIyLmRpdmlkZShtKQ0KICB0aGlzLm0gPSBtDQp9DQoNCmZ1bmN0aW9uIGJhcnJldHRDb252ZXJ0KHgpIHsNCiAgaWYgKHgucyA8IDAgfHwgeC50ID4gMiAqIHRoaXMubS50KSByZXR1cm4geC5tb2QodGhpcy5tKQ0KICBlbHNlIGlmICh4LmNvbXBhcmVUbyh0aGlzLm0pIDwgMCkgcmV0dXJuIHgNCiAgZWxzZSB7DQogICAgdmFyIHIgPSBuZXcgQmlnSW50ZWdlcigpDQogICAgeC5jb3B5VG8ocikNCiAgICB0aGlzLnJlZHVjZShyKQ0KICAgIHJldHVybiByDQogIH0NCn0NCg0KZnVuY3Rpb24gYmFycmV0dFJldmVydCh4KSB7DQogIHJldHVybiB4DQp9DQoNCi8vIHggPSB4IG1vZCBtIChIQUMgMTQuNDIpDQpmdW5jdGlvbiBiYXJyZXR0UmVkdWNlKHgpIHsNCiAgdmFyIHNlbGYgPSB0aGlzDQogIHguZHJTaGlmdFRvKHNlbGYubS50IC0gMSwgc2VsZi5yMikNCiAgaWYgKHgudCA+IHNlbGYubS50ICsgMSkgew0KICAgIHgudCA9IHNlbGYubS50ICsgMQ0KICAgIHguY2xhbXAoKQ0KICB9DQogIHNlbGYubXUubXVsdGlwbHlVcHBlclRvKHNlbGYucjIsIHNlbGYubS50ICsgMSwgc2VsZi5xMykNCiAgc2VsZi5tLm11bHRpcGx5TG93ZXJUbyhzZWxmLnEzLCBzZWxmLm0udCArIDEsIHNlbGYucjIpDQogIHdoaWxlICh4LmNvbXBhcmVUbyhzZWxmLnIyKSA8IDApIHguZEFkZE9mZnNldCgxLCBzZWxmLm0udCArIDEpDQogIHguc3ViVG8oc2VsZi5yMiwgeCkNCiAgd2hpbGUgKHguY29tcGFyZVRvKHNlbGYubSkgPj0gMCkgeC5zdWJUbyhzZWxmLm0sIHgpDQp9DQoNCi8vIHIgPSB4XjIgbW9kIG07IHggIT0gcg0KZnVuY3Rpb24gYmFycmV0dFNxclRvKHgsIHIpIHsNCiAgeC5zcXVhcmVUbyhyKQ0KICB0aGlzLnJlZHVjZShyKQ0KfQ0KDQovLyByID0geCp5IG1vZCBtOyB4LHkgIT0gcg0KZnVuY3Rpb24gYmFycmV0dE11bFRvKHgsIHksIHIpIHsNCiAgeC5tdWx0aXBseVRvKHksIHIpDQogIHRoaXMucmVkdWNlKHIpDQp9DQoNCkJhcnJldHQucHJvdG90eXBlLmNvbnZlcnQgPSBiYXJyZXR0Q29udmVydA0KQmFycmV0dC5wcm90b3R5cGUucmV2ZXJ0ID0gYmFycmV0dFJldmVydA0KQmFycmV0dC5wcm90b3R5cGUucmVkdWNlID0gYmFycmV0dFJlZHVjZQ0KQmFycmV0dC5wcm90b3R5cGUubXVsVG8gPSBiYXJyZXR0TXVsVG8NCkJhcnJldHQucHJvdG90eXBlLnNxclRvID0gYmFycmV0dFNxclRvDQoNCi8vIChwdWJsaWMpIHRoaXNeZSAlIG0gKEhBQyAxNC44NSkNCmZ1bmN0aW9uIGJuTW9kUG93KGUsIG0pIHsNCiAgdmFyIGkgPSBlLmJpdExlbmd0aCgpLA0KICAgIGssIHIgPSBuYnYoMSksDQogICAgeg0KICBpZiAoaSA8PSAwKSByZXR1cm4gcg0KICBlbHNlIGlmIChpIDwgMTgpIGsgPSAxDQogIGVsc2UgaWYgKGkgPCA0OCkgayA9IDMNCiAgZWxzZSBpZiAoaSA8IDE0NCkgayA9IDQNCiAgZWxzZSBpZiAoaSA8IDc2OCkgayA9IDUNCiAgZWxzZSBrID0gNg0KICBpZiAoaSA8IDgpDQogICAgeiA9IG5ldyBDbGFzc2ljKG0pDQogIGVsc2UgaWYgKG0uaXNFdmVuKCkpDQogICAgeiA9IG5ldyBCYXJyZXR0KG0pDQogIGVsc2UNCiAgICB6ID0gbmV3IE1vbnRnb21lcnkobSkNCg0KICAvLyBwcmVjb21wdXRhdGlvbg0KICB2YXIgZyA9IG5ldyBBcnJheSgpLA0KICAgIG4gPSAzLA0KICAgIGsxID0gayAtIDEsDQogICAga20gPSAoMSA8PCBrKSAtIDENCiAgZ1sxXSA9IHouY29udmVydCh0aGlzKQ0KICBpZiAoayA+IDEpIHsNCiAgICB2YXIgZzIgPSBuZXcgQmlnSW50ZWdlcigpDQogICAgei5zcXJUbyhnWzFdLCBnMikNCiAgICB3aGlsZSAobiA8PSBrbSkgew0KICAgICAgZ1tuXSA9IG5ldyBCaWdJbnRlZ2VyKCkNCiAgICAgIHoubXVsVG8oZzIsIGdbbiAtIDJdLCBnW25dKQ0KICAgICAgbiArPSAyDQogICAgfQ0KICB9DQoNCiAgdmFyIGogPSBlLnQgLSAxLA0KICAgIHcsIGlzMSA9IHRydWUsDQogICAgcjIgPSBuZXcgQmlnSW50ZWdlcigpLA0KICAgIHQNCiAgaSA9IG5iaXRzKGVbal0pIC0gMQ0KICB3aGlsZSAoaiA+PSAwKSB7DQogICAgaWYgKGkgPj0gazEpIHcgPSAoZVtqXSA+PiAoaSAtIGsxKSkgJiBrbQ0KICAgIGVsc2Ugew0KICAgICAgdyA9IChlW2pdICYgKCgxIDw8IChpICsgMSkpIC0gMSkpIDw8IChrMSAtIGkpDQogICAgICBpZiAoaiA+IDApIHcgfD0gZVtqIC0gMV0gPj4gKHRoaXMuREIgKyBpIC0gazEpDQogICAgfQ0KDQogICAgbiA9IGsNCiAgICB3aGlsZSAoKHcgJiAxKSA9PSAwKSB7DQogICAgICB3ID4+PSAxDQogICAgICAtLW4NCiAgICB9DQogICAgaWYgKChpIC09IG4pIDwgMCkgew0KICAgICAgaSArPSB0aGlzLkRCDQogICAgICAtLWoNCiAgICB9DQogICAgaWYgKGlzMSkgeyAvLyByZXQgPT0gMSwgZG9uJ3QgYm90aGVyIHNxdWFyaW5nIG9yIG11bHRpcGx5aW5nIGl0DQogICAgICBnW3ddLmNvcHlUbyhyKQ0KICAgICAgaXMxID0gZmFsc2UNCiAgICB9IGVsc2Ugew0KICAgICAgd2hpbGUgKG4gPiAxKSB7DQogICAgICAgIHouc3FyVG8ociwgcjIpDQogICAgICAgIHouc3FyVG8ocjIsIHIpDQogICAgICAgIG4gLT0gMg0KICAgICAgfQ0KICAgICAgaWYgKG4gPiAwKSB6LnNxclRvKHIsIHIyKQ0KICAgICAgZWxzZSB7DQogICAgICAgIHQgPSByDQogICAgICAgIHIgPSByMg0KICAgICAgICByMiA9IHQNCiAgICAgIH0NCiAgICAgIHoubXVsVG8ocjIsIGdbd10sIHIpDQogICAgfQ0KDQogICAgd2hpbGUgKGogPj0gMCAmJiAoZVtqXSAmICgxIDw8IGkpKSA9PSAwKSB7DQogICAgICB6LnNxclRvKHIsIHIyKQ0KICAgICAgdCA9IHINCiAgICAgIHIgPSByMg0KICAgICAgcjIgPSB0DQogICAgICBpZiAoLS1pIDwgMCkgew0KICAgICAgICBpID0gdGhpcy5EQiAtIDENCiAgICAgICAgLS1qDQogICAgICB9DQogICAgfQ0KICB9DQogIHJldHVybiB6LnJldmVydChyKQ0KfQ0KDQovLyAocHVibGljKSBnY2QodGhpcyxhKSAoSEFDIDE0LjU0KQ0KZnVuY3Rpb24gYm5HQ0QoYSkgew0KICB2YXIgeCA9ICh0aGlzLnMgPCAwKSA/IHRoaXMubmVnYXRlKCkgOiB0aGlzLmNsb25lKCkNCiAgdmFyIHkgPSAoYS5zIDwgMCkgPyBhLm5lZ2F0ZSgpIDogYS5jbG9uZSgpDQogIGlmICh4LmNvbXBhcmVUbyh5KSA8IDApIHsNCiAgICB2YXIgdCA9IHgNCiAgICB4ID0geQ0KICAgIHkgPSB0DQogIH0NCiAgdmFyIGkgPSB4LmdldExvd2VzdFNldEJpdCgpLA0KICAgIGcgPSB5LmdldExvd2VzdFNldEJpdCgpDQogIGlmIChnIDwgMCkgcmV0dXJuIHgNCiAgaWYgKGkgPCBnKSBnID0gaQ0KICBpZiAoZyA+IDApIHsNCiAgICB4LnJTaGlmdFRvKGcsIHgpDQogICAgeS5yU2hpZnRUbyhnLCB5KQ0KICB9DQogIHdoaWxlICh4LnNpZ251bSgpID4gMCkgew0KICAgIGlmICgoaSA9IHguZ2V0TG93ZXN0U2V0Qml0KCkpID4gMCkgeC5yU2hpZnRUbyhpLCB4KQ0KICAgIGlmICgoaSA9IHkuZ2V0TG93ZXN0U2V0Qml0KCkpID4gMCkgeS5yU2hpZnRUbyhpLCB5KQ0KICAgIGlmICh4LmNvbXBhcmVUbyh5KSA+PSAwKSB7DQogICAgICB4LnN1YlRvKHksIHgpDQogICAgICB4LnJTaGlmdFRvKDEsIHgpDQogICAgfSBlbHNlIHsNCiAgICAgIHkuc3ViVG8oeCwgeSkNCiAgICAgIHkuclNoaWZ0VG8oMSwgeSkNCiAgICB9DQogIH0NCiAgaWYgKGcgPiAwKSB5LmxTaGlmdFRvKGcsIHkpDQogIHJldHVybiB5DQp9DQoNCi8vIChwcm90ZWN0ZWQpIHRoaXMgJSBuLCBuIDwgMl4yNg0KZnVuY3Rpb24gYm5wTW9kSW50KG4pIHsNCiAgaWYgKG4gPD0gMCkgcmV0dXJuIDANCiAgdmFyIGQgPSB0aGlzLkRWICUgbiwNCiAgICByID0gKHRoaXMucyA8IDApID8gbiAtIDEgOiAwDQogIGlmICh0aGlzLnQgPiAwKQ0KICAgIGlmIChkID09IDApIHIgPSB0aGlzWzBdICUgbg0KICAgIGVsc2UNCiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnQgLSAxOyBpID49IDA7IC0taSkgciA9IChkICogciArIHRoaXNbaV0pICUgbg0KICByZXR1cm4gcg0KfQ0KDQovLyAocHVibGljKSAxL3RoaXMgJSBtIChIQUMgMTQuNjEpDQpmdW5jdGlvbiBibk1vZEludmVyc2UobSkgew0KICB2YXIgYWMgPSBtLmlzRXZlbigpDQogIGlmICh0aGlzLnNpZ251bSgpID09PSAwKSB0aHJvdyBuZXcgRXJyb3IoJ2RpdmlzaW9uIGJ5IHplcm8nKQ0KICBpZiAoKHRoaXMuaXNFdmVuKCkgJiYgYWMpIHx8IG0uc2lnbnVtKCkgPT0gMCkgcmV0dXJuIEJpZ0ludGVnZXIuWkVSTw0KICB2YXIgdSA9IG0uY2xvbmUoKSwNCiAgICB2ID0gdGhpcy5jbG9uZSgpDQogIHZhciBhID0gbmJ2KDEpLA0KICAgIGIgPSBuYnYoMCksDQogICAgYyA9IG5idigwKSwNCiAgICBkID0gbmJ2KDEpDQogIHdoaWxlICh1LnNpZ251bSgpICE9IDApIHsNCiAgICB3aGlsZSAodS5pc0V2ZW4oKSkgew0KICAgICAgdS5yU2hpZnRUbygxLCB1KQ0KICAgICAgaWYgKGFjKSB7DQogICAgICAgIGlmICghYS5pc0V2ZW4oKSB8fCAhYi5pc0V2ZW4oKSkgew0KICAgICAgICAgIGEuYWRkVG8odGhpcywgYSkNCiAgICAgICAgICBiLnN1YlRvKG0sIGIpDQogICAgICAgIH0NCiAgICAgICAgYS5yU2hpZnRUbygxLCBhKQ0KICAgICAgfSBlbHNlIGlmICghYi5pc0V2ZW4oKSkgYi5zdWJUbyhtLCBiKQ0KICAgICAgYi5yU2hpZnRUbygxLCBiKQ0KICAgIH0NCiAgICB3aGlsZSAodi5pc0V2ZW4oKSkgew0KICAgICAgdi5yU2hpZnRUbygxLCB2KQ0KICAgICAgaWYgKGFjKSB7DQogICAgICAgIGlmICghYy5pc0V2ZW4oKSB8fCAhZC5pc0V2ZW4oKSkgew0KICAgICAgICAgIGMuYWRkVG8odGhpcywgYykNCiAgICAgICAgICBkLnN1YlRvKG0sIGQpDQogICAgICAgIH0NCiAgICAgICAgYy5yU2hpZnRUbygxLCBjKQ0KICAgICAgfSBlbHNlIGlmICghZC5pc0V2ZW4oKSkgZC5zdWJUbyhtLCBkKQ0KICAgICAgZC5yU2hpZnRUbygxLCBkKQ0KICAgIH0NCiAgICBpZiAodS5jb21wYXJlVG8odikgPj0gMCkgew0KICAgICAgdS5zdWJUbyh2LCB1KQ0KICAgICAgaWYgKGFjKSBhLnN1YlRvKGMsIGEpDQogICAgICBiLnN1YlRvKGQsIGIpDQogICAgfSBlbHNlIHsNCiAgICAgIHYuc3ViVG8odSwgdikNCiAgICAgIGlmIChhYykgYy5zdWJUbyhhLCBjKQ0KICAgICAgZC5zdWJUbyhiLCBkKQ0KICAgIH0NCiAgfQ0KICBpZiAodi5jb21wYXJlVG8oQmlnSW50ZWdlci5PTkUpICE9IDApIHJldHVybiBCaWdJbnRlZ2VyLlpFUk8NCiAgaWYgKGQuY29tcGFyZVRvKG0pID49IDApIHJldHVybiBkLnN1YnRyYWN0KG0pDQogIGlmIChkLnNpZ251bSgpIDwgMCkgZC5hZGRUbyhtLCBkKQ0KICBlbHNlIHJldHVybiBkDQogIGlmIChkLnNpZ251bSgpIDwgMCkgcmV0dXJuIGQuYWRkKG0pDQogIGVsc2UgcmV0dXJuIGQNCn0NCg0KdmFyIGxvd3ByaW1lcyA9IFsNCiAgMiwgMywgNSwgNywgMTEsIDEzLCAxNywgMTksIDIzLCAyOSwgMzEsIDM3LCA0MSwgNDMsIDQ3LCA1MywgNTksIDYxLCA2NywgNzEsDQogIDczLCA3OSwgODMsIDg5LCA5NywgMTAxLCAxMDMsIDEwNywgMTA5LCAxMTMsIDEyNywgMTMxLCAxMzcsIDEzOSwgMTQ5LCAxNTEsDQogIDE1NywgMTYzLCAxNjcsIDE3MywgMTc5LCAxODEsIDE5MSwgMTkzLCAxOTcsIDE5OSwgMjExLCAyMjMsIDIyNywgMjI5LCAyMzMsDQogIDIzOSwgMjQxLCAyNTEsIDI1NywgMjYzLCAyNjksIDI3MSwgMjc3LCAyODEsIDI4MywgMjkzLCAzMDcsIDMxMSwgMzEzLCAzMTcsDQogIDMzMSwgMzM3LCAzNDcsIDM0OSwgMzUzLCAzNTksIDM2NywgMzczLCAzNzksIDM4MywgMzg5LCAzOTcsIDQwMSwgNDA5LCA0MTksDQogIDQyMSwgNDMxLCA0MzMsIDQzOSwgNDQzLCA0NDksIDQ1NywgNDYxLCA0NjMsIDQ2NywgNDc5LCA0ODcsIDQ5MSwgNDk5LCA1MDMsDQogIDUwOSwgNTIxLCA1MjMsIDU0MSwgNTQ3LCA1NTcsIDU2MywgNTY5LCA1NzEsIDU3NywgNTg3LCA1OTMsIDU5OSwgNjAxLCA2MDcsDQogIDYxMywgNjE3LCA2MTksIDYzMSwgNjQxLCA2NDMsIDY0NywgNjUzLCA2NTksIDY2MSwgNjczLCA2NzcsIDY4MywgNjkxLCA3MDEsDQogIDcwOSwgNzE5LCA3MjcsIDczMywgNzM5LCA3NDMsIDc1MSwgNzU3LCA3NjEsIDc2OSwgNzczLCA3ODcsIDc5NywgODA5LCA4MTEsDQogIDgyMSwgODIzLCA4MjcsIDgyOSwgODM5LCA4NTMsIDg1NywgODU5LCA4NjMsIDg3NywgODgxLCA4ODMsIDg4NywgOTA3LCA5MTEsDQogIDkxOSwgOTI5LCA5MzcsIDk0MSwgOTQ3LCA5NTMsIDk2NywgOTcxLCA5NzcsIDk4MywgOTkxLCA5OTcNCl0NCg0KdmFyIGxwbGltID0gKDEgPDwgMjYpIC8gbG93cHJpbWVzW2xvd3ByaW1lcy5sZW5ndGggLSAxXQ0KDQovLyAocHVibGljKSB0ZXN0IHByaW1hbGl0eSB3aXRoIGNlcnRhaW50eSA+PSAxLS41XnQNCmZ1bmN0aW9uIGJuSXNQcm9iYWJsZVByaW1lKHQpIHsNCiAgdmFyIGksIHggPSB0aGlzLmFicygpDQogIGlmICh4LnQgPT0gMSAmJiB4WzBdIDw9IGxvd3ByaW1lc1tsb3dwcmltZXMubGVuZ3RoIC0gMV0pIHsNCiAgICBmb3IgKGkgPSAwOyBpIDwgbG93cHJpbWVzLmxlbmd0aDsgKytpKQ0KICAgICAgaWYgKHhbMF0gPT0gbG93cHJpbWVzW2ldKSByZXR1cm4gdHJ1ZQ0KICAgIHJldHVybiBmYWxzZQ0KICB9DQogIGlmICh4LmlzRXZlbigpKSByZXR1cm4gZmFsc2UNCiAgaSA9IDENCiAgd2hpbGUgKGkgPCBsb3dwcmltZXMubGVuZ3RoKSB7DQogICAgdmFyIG0gPSBsb3dwcmltZXNbaV0sDQogICAgICBqID0gaSArIDENCiAgICB3aGlsZSAoaiA8IGxvd3ByaW1lcy5sZW5ndGggJiYgbSA8IGxwbGltKSBtICo9IGxvd3ByaW1lc1tqKytdDQogICAgbSA9IHgubW9kSW50KG0pDQogICAgd2hpbGUgKGkgPCBqKSBpZiAobSAlIGxvd3ByaW1lc1tpKytdID09IDApIHJldHVybiBmYWxzZQ0KICB9DQogIHJldHVybiB4Lm1pbGxlclJhYmluKHQpDQp9DQoNCi8vIChwcm90ZWN0ZWQpIHRydWUgaWYgcHJvYmFibHkgcHJpbWUgKEhBQyA0LjI0LCBNaWxsZXItUmFiaW4pDQpmdW5jdGlvbiBibnBNaWxsZXJSYWJpbih0KSB7DQogIHZhciBuMSA9IHRoaXMuc3VidHJhY3QoQmlnSW50ZWdlci5PTkUpDQogIHZhciBrID0gbjEuZ2V0TG93ZXN0U2V0Qml0KCkNCiAgaWYgKGsgPD0gMCkgcmV0dXJuIGZhbHNlDQogIHZhciByID0gbjEuc2hpZnRSaWdodChrKQ0KICB0ID0gKHQgKyAxKSA+PiAxDQogIGlmICh0ID4gbG93cHJpbWVzLmxlbmd0aCkgdCA9IGxvd3ByaW1lcy5sZW5ndGgNCiAgdmFyIGEgPSBuZXcgQmlnSW50ZWdlcihudWxsKQ0KICB2YXIgaiwgYmFzZXMgPSBbXQ0KICBmb3IgKHZhciBpID0gMDsgaSA8IHQ7ICsraSkgew0KICAgIGZvciAoOzspIHsNCiAgICAgIGogPSBsb3dwcmltZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbG93cHJpbWVzLmxlbmd0aCldDQogICAgICBpZiAoYmFzZXMuaW5kZXhPZihqKSA9PSAtMSkgYnJlYWsNCiAgICB9DQogICAgYmFzZXMucHVzaChqKQ0KICAgIGEuZnJvbUludChqKQ0KICAgIHZhciB5ID0gYS5tb2RQb3cociwgdGhpcykNCiAgICBpZiAoeS5jb21wYXJlVG8oQmlnSW50ZWdlci5PTkUpICE9IDAgJiYgeS5jb21wYXJlVG8objEpICE9IDApIHsNCiAgICAgIHZhciBqID0gMQ0KICAgICAgd2hpbGUgKGorKyA8IGsgJiYgeS5jb21wYXJlVG8objEpICE9IDApIHsNCiAgICAgICAgeSA9IHkubW9kUG93SW50KDIsIHRoaXMpDQogICAgICAgIGlmICh5LmNvbXBhcmVUbyhCaWdJbnRlZ2VyLk9ORSkgPT0gMCkgcmV0dXJuIGZhbHNlDQogICAgICB9DQogICAgICBpZiAoeS5jb21wYXJlVG8objEpICE9IDApIHJldHVybiBmYWxzZQ0KICAgIH0NCiAgfQ0KICByZXR1cm4gdHJ1ZQ0KfQ0KDQovLyBwcm90ZWN0ZWQNCnByb3RvLmNodW5rU2l6ZSA9IGJucENodW5rU2l6ZQ0KcHJvdG8udG9SYWRpeCA9IGJucFRvUmFkaXgNCnByb3RvLmZyb21SYWRpeCA9IGJucEZyb21SYWRpeA0KcHJvdG8uZnJvbU51bWJlciA9IGJucEZyb21OdW1iZXINCnByb3RvLmJpdHdpc2VUbyA9IGJucEJpdHdpc2VUbw0KcHJvdG8uY2hhbmdlQml0ID0gYm5wQ2hhbmdlQml0DQpwcm90by5hZGRUbyA9IGJucEFkZFRvDQpwcm90by5kTXVsdGlwbHkgPSBibnBETXVsdGlwbHkNCnByb3RvLmRBZGRPZmZzZXQgPSBibnBEQWRkT2Zmc2V0DQpwcm90by5tdWx0aXBseUxvd2VyVG8gPSBibnBNdWx0aXBseUxvd2VyVG8NCnByb3RvLm11bHRpcGx5VXBwZXJUbyA9IGJucE11bHRpcGx5VXBwZXJUbw0KcHJvdG8ubW9kSW50ID0gYm5wTW9kSW50DQpwcm90by5taWxsZXJSYWJpbiA9IGJucE1pbGxlclJhYmluDQoNCi8vIHB1YmxpYw0KcHJvdG8uY2xvbmUgPSBibkNsb25lDQpwcm90by5pbnRWYWx1ZSA9IGJuSW50VmFsdWUNCnByb3RvLmJ5dGVWYWx1ZSA9IGJuQnl0ZVZhbHVlDQpwcm90by5zaG9ydFZhbHVlID0gYm5TaG9ydFZhbHVlDQpwcm90by5zaWdudW0gPSBiblNpZ051bQ0KcHJvdG8udG9CeXRlQXJyYXkgPSBiblRvQnl0ZUFycmF5DQpwcm90by5lcXVhbHMgPSBibkVxdWFscw0KcHJvdG8ubWluID0gYm5NaW4NCnByb3RvLm1heCA9IGJuTWF4DQpwcm90by5hbmQgPSBibkFuZA0KcHJvdG8ub3IgPSBibk9yDQpwcm90by54b3IgPSBiblhvcg0KcHJvdG8uYW5kTm90ID0gYm5BbmROb3QNCnByb3RvLm5vdCA9IGJuTm90DQpwcm90by5zaGlmdExlZnQgPSBiblNoaWZ0TGVmdA0KcHJvdG8uc2hpZnRSaWdodCA9IGJuU2hpZnRSaWdodA0KcHJvdG8uZ2V0TG93ZXN0U2V0Qml0ID0gYm5HZXRMb3dlc3RTZXRCaXQNCnByb3RvLmJpdENvdW50ID0gYm5CaXRDb3VudA0KcHJvdG8udGVzdEJpdCA9IGJuVGVzdEJpdA0KcHJvdG8uc2V0Qml0ID0gYm5TZXRCaXQNCnByb3RvLmNsZWFyQml0ID0gYm5DbGVhckJpdA0KcHJvdG8uZmxpcEJpdCA9IGJuRmxpcEJpdA0KcHJvdG8uYWRkID0gYm5BZGQNCnByb3RvLnN1YnRyYWN0ID0gYm5TdWJ0cmFjdA0KcHJvdG8ubXVsdGlwbHkgPSBibk11bHRpcGx5DQpwcm90by5kaXZpZGUgPSBibkRpdmlkZQ0KcHJvdG8ucmVtYWluZGVyID0gYm5SZW1haW5kZXINCnByb3RvLmRpdmlkZUFuZFJlbWFpbmRlciA9IGJuRGl2aWRlQW5kUmVtYWluZGVyDQpwcm90by5tb2RQb3cgPSBibk1vZFBvdw0KcHJvdG8ubW9kSW52ZXJzZSA9IGJuTW9kSW52ZXJzZQ0KcHJvdG8ucG93ID0gYm5Qb3cNCnByb3RvLmdjZCA9IGJuR0NEDQpwcm90by5pc1Byb2JhYmxlUHJpbWUgPSBibklzUHJvYmFibGVQcmltZQ0KDQovLyBKU0JOLXNwZWNpZmljIGV4dGVuc2lvbg0KcHJvdG8uc3F1YXJlID0gYm5TcXVhcmUNCg0KLy8gY29uc3RhbnRzDQpCaWdJbnRlZ2VyLlpFUk8gPSBuYnYoMCkNCkJpZ0ludGVnZXIuT05FID0gbmJ2KDEpDQpCaWdJbnRlZ2VyLnZhbHVlT2YgPSBuYnYNCg0KbW9kdWxlLmV4cG9ydHMgPSBCaWdJbnRlZ2VyDQoNCn0seyIuLi9wYWNrYWdlLmpzb24iOjM4fV0sMzY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KLy8gRklYTUU6IEtpbmQgb2YgYSB3ZWlyZCB3YXkgdG8gdGhyb3cgZXhjZXB0aW9ucywgY29uc2lkZXIgcmVtb3ZpbmcNCnZhciBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKQ0KdmFyIEJpZ0ludGVnZXIgPSByZXF1aXJlKCcuL2JpZ2knKQ0KDQovKioNCiAqIFR1cm5zIGEgYnl0ZSBhcnJheSBpbnRvIGEgYmlnIGludGVnZXIuDQogKg0KICogVGhpcyBmdW5jdGlvbiB3aWxsIGludGVycHJldCBhIGJ5dGUgYXJyYXkgYXMgYSBiaWcgaW50ZWdlciBpbiBiaWcNCiAqIGVuZGlhbiBub3RhdGlvbi4NCiAqLw0KQmlnSW50ZWdlci5mcm9tQnl0ZUFycmF5VW5zaWduZWQgPSBmdW5jdGlvbihieXRlQXJyYXkpIHsNCiAgLy8gQmlnSW50ZWdlciBleHBlY3RzIGEgREVSIGludGVnZXIgY29uZm9ybWFudCBieXRlIGFycmF5DQogIGlmIChieXRlQXJyYXlbMF0gJiAweDgwKSB7DQogICAgcmV0dXJuIG5ldyBCaWdJbnRlZ2VyKFswXS5jb25jYXQoYnl0ZUFycmF5KSkNCiAgfQ0KDQogIHJldHVybiBuZXcgQmlnSW50ZWdlcihieXRlQXJyYXkpDQp9DQoNCi8qKg0KICogUmV0dXJucyBhIGJ5dGUgYXJyYXkgcmVwcmVzZW50YXRpb24gb2YgdGhlIGJpZyBpbnRlZ2VyLg0KICoNCiAqIFRoaXMgcmV0dXJucyB0aGUgYWJzb2x1dGUgb2YgdGhlIGNvbnRhaW5lZCB2YWx1ZSBpbiBiaWcgZW5kaWFuDQogKiBmb3JtLiBBIHZhbHVlIG9mIHplcm8gcmVzdWx0cyBpbiBhbiBlbXB0eSBhcnJheS4NCiAqLw0KQmlnSW50ZWdlci5wcm90b3R5cGUudG9CeXRlQXJyYXlVbnNpZ25lZCA9IGZ1bmN0aW9uKCkgew0KICB2YXIgYnl0ZUFycmF5ID0gdGhpcy50b0J5dGVBcnJheSgpDQogIHJldHVybiBieXRlQXJyYXlbMF0gPT09IDAgPyBieXRlQXJyYXkuc2xpY2UoMSkgOiBieXRlQXJyYXkNCn0NCg0KQmlnSW50ZWdlci5mcm9tREVSSW50ZWdlciA9IGZ1bmN0aW9uKGJ5dGVBcnJheSkgew0KICByZXR1cm4gbmV3IEJpZ0ludGVnZXIoYnl0ZUFycmF5KQ0KfQ0KDQovKg0KICogQ29udmVydHMgQmlnSW50ZWdlciB0byBhIERFUiBpbnRlZ2VyIHJlcHJlc2VudGF0aW9uLg0KICoNCiAqIFRoZSBmb3JtYXQgZm9yIHRoaXMgdmFsdWUgdXNlcyB0aGUgbW9zdCBzaWduaWZpY2FudCBiaXQgYXMgYSBzaWduDQogKiBiaXQuICBJZiB0aGUgbW9zdCBzaWduaWZpY2FudCBiaXQgaXMgYWxyZWFkeSBzZXQgYW5kIHRoZSBpbnRlZ2VyIGlzDQogKiBwb3NpdGl2ZSwgYSAweDAwIGlzIHByZXBlbmRlZC4NCiAqDQogKiBFeGFtcGxlczoNCiAqDQogKiAgICAgIDAgPT4gICAgIDB4MDANCiAqICAgICAgMSA9PiAgICAgMHgwMQ0KICogICAgIC0xID0+ICAgICAweGZmDQogKiAgICAxMjcgPT4gICAgIDB4N2YNCiAqICAgLTEyNyA9PiAgICAgMHg4MQ0KICogICAgMTI4ID0+ICAgMHgwMDgwDQogKiAgIC0xMjggPT4gICAgIDB4ODANCiAqICAgIDI1NSA9PiAgIDB4MDBmZg0KICogICAtMjU1ID0+ICAgMHhmZjAxDQogKiAgMTYzMDAgPT4gICAweDNmYWMNCiAqIC0xNjMwMCA9PiAgIDB4YzA1NA0KICogIDYyMzAwID0+IDB4MDBmMzVjDQogKiAtNjIzMDAgPT4gMHhmZjBjYTQNCiovDQpCaWdJbnRlZ2VyLnByb3RvdHlwZS50b0RFUkludGVnZXIgPSBCaWdJbnRlZ2VyLnByb3RvdHlwZS50b0J5dGVBcnJheQ0KDQpCaWdJbnRlZ2VyLmZyb21CdWZmZXIgPSBmdW5jdGlvbihidWZmZXIpIHsNCiAgLy8gQmlnSW50ZWdlciBleHBlY3RzIGEgREVSIGludGVnZXIgY29uZm9ybWFudCBieXRlIGFycmF5DQogIGlmIChidWZmZXJbMF0gJiAweDgwKSB7DQogICAgdmFyIGJ5dGVBcnJheSA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGJ1ZmZlcikNCg0KICAgIHJldHVybiBuZXcgQmlnSW50ZWdlcihbMF0uY29uY2F0KGJ5dGVBcnJheSkpDQogIH0NCg0KICByZXR1cm4gbmV3IEJpZ0ludGVnZXIoYnVmZmVyKQ0KfQ0KDQpCaWdJbnRlZ2VyLmZyb21IZXggPSBmdW5jdGlvbihoZXgpIHsNCiAgaWYgKGhleCA9PT0gJycpIHJldHVybiBCaWdJbnRlZ2VyLlpFUk8NCg0KICBhc3NlcnQuZXF1YWwoaGV4LCBoZXgubWF0Y2goL15bQS1GYS1mMC05XSsvKSwgJ0ludmFsaWQgaGV4IHN0cmluZycpDQogIGFzc2VydC5lcXVhbChoZXgubGVuZ3RoICUgMiwgMCwgJ0luY29tcGxldGUgaGV4JykNCiAgcmV0dXJuIG5ldyBCaWdJbnRlZ2VyKGhleCwgMTYpDQp9DQoNCkJpZ0ludGVnZXIucHJvdG90eXBlLnRvQnVmZmVyID0gZnVuY3Rpb24oc2l6ZSkgew0KICB2YXIgYnl0ZUFycmF5ID0gdGhpcy50b0J5dGVBcnJheVVuc2lnbmVkKCkNCiAgdmFyIHplcm9zID0gW10NCg0KICB2YXIgcGFkZGluZyA9IHNpemUgLSBieXRlQXJyYXkubGVuZ3RoDQogIHdoaWxlICh6ZXJvcy5sZW5ndGggPCBwYWRkaW5nKSB6ZXJvcy5wdXNoKDApDQoNCiAgcmV0dXJuIG5ldyBCdWZmZXIoemVyb3MuY29uY2F0KGJ5dGVBcnJheSkpDQp9DQoNCkJpZ0ludGVnZXIucHJvdG90eXBlLnRvSGV4ID0gZnVuY3Rpb24oc2l6ZSkgew0KICByZXR1cm4gdGhpcy50b0J1ZmZlcihzaXplKS50b1N0cmluZygnaGV4JykNCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyIuL2JpZ2kiOjM1LCJhc3NlcnQiOjE1LCJidWZmZXIiOjkzfV0sMzc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIEJpZ0ludGVnZXIgPSByZXF1aXJlKCcuL2JpZ2knKQ0KDQovL2FkZG9ucw0KcmVxdWlyZSgnLi9jb252ZXJ0JykNCg0KbW9kdWxlLmV4cG9ydHMgPSBCaWdJbnRlZ2VyDQp9LHsiLi9iaWdpIjozNSwiLi9jb252ZXJ0IjozNn1dLDM4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzPXsNCiAgIl9hcmdzIjogWw0KICAgIFsNCiAgICAgICJiaWdpQF4xLjQuMCIsDQogICAgICAiL1VzZXJzL2R2aWxjaGV6L3dvcmtzcGFjZS9yZXRoaW5rL2Rldi1ydW50aW1lLWNvcmUvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIiDQogICAgXQ0KICBdLA0KICAiX2Zyb20iOiAiYmlnaUA+PTEuNC4wIDwyLjAuMCIsDQogICJfaWQiOiAiYmlnaUAxLjQuMSIsDQogICJfaW5DYWNoZSI6IHRydWUsDQogICJfaW5zdGFsbGFibGUiOiB0cnVlLA0KICAiX2xvY2F0aW9uIjogIi9iaWdpIiwNCiAgIl9ub2RlVmVyc2lvbiI6ICIyLjEuMCIsDQogICJfbnBtVXNlciI6IHsNCiAgICAiZW1haWwiOiAianByaWNoYXJkc29uQGdtYWlsLmNvbSIsDQogICAgIm5hbWUiOiAianByaWNoYXJkc29uIg0KICB9LA0KICAiX25wbVZlcnNpb24iOiAiMi4xMC4xIiwNCiAgIl9waGFudG9tQ2hpbGRyZW4iOiB7fSwNCiAgIl9yZXF1ZXN0ZWQiOiB7DQogICAgIm5hbWUiOiAiYmlnaSIsDQogICAgInJhdyI6ICJiaWdpQF4xLjQuMCIsDQogICAgInJhd1NwZWMiOiAiXjEuNC4wIiwNCiAgICAic2NvcGUiOiBudWxsLA0KICAgICJzcGVjIjogIj49MS40LjAgPDIuMC4wIiwNCiAgICAidHlwZSI6ICJyYW5nZSINCiAgfSwNCiAgIl9yZXF1aXJlZEJ5IjogWw0KICAgICIvYml0Y29pbmpzLWxpYiIsDQogICAgIi9lY3VydmUiDQogIF0sDQogICJfcmVzb2x2ZWQiOiAiaHR0cHM6Ly9yZWdpc3RyeS5ucG1qcy5vcmcvYmlnaS8tL2JpZ2ktMS40LjEudGd6IiwNCiAgIl9zaGFzdW0iOiAiNzI2ZThhYjA4ZDFmZTFkZmI4YWE2YmI2MzA5YmZmZWNmOTNhMjFiNyIsDQogICJfc2hyaW5rd3JhcCI6IG51bGwsDQogICJfc3BlYyI6ICJiaWdpQF4xLjQuMCIsDQogICJfd2hlcmUiOiAiL1VzZXJzL2R2aWxjaGV6L3dvcmtzcGFjZS9yZXRoaW5rL2Rldi1ydW50aW1lLWNvcmUvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIiLA0KICAiYnVncyI6IHsNCiAgICAidXJsIjogImh0dHBzOi8vZ2l0aHViLmNvbS9jcnlwdG9jb2luanMvYmlnaS9pc3N1ZXMiDQogIH0sDQogICJkZXBlbmRlbmNpZXMiOiB7fSwNCiAgImRlc2NyaXB0aW9uIjogIkJpZyBpbnRlZ2Vycy4iLA0KICAiZGV2RGVwZW5kZW5jaWVzIjogew0KICAgICJjb3ZlcmFsbHMiOiAiXjIuMTEuMiIsDQogICAgImlzdGFuYnVsIjogIl4wLjMuNSIsDQogICAgImpzaGludCI6ICJeMi41LjEiLA0KICAgICJtb2NoYSI6ICJeMi4xLjAiLA0KICAgICJtb2NoaWZ5IjogIl4yLjEuMCINCiAgfSwNCiAgImRpcmVjdG9yaWVzIjoge30sDQogICJkaXN0Ijogew0KICAgICJzaGFzdW0iOiAiNzI2ZThhYjA4ZDFmZTFkZmI4YWE2YmI2MzA5YmZmZWNmOTNhMjFiNyIsDQogICAgInRhcmJhbGwiOiAiaHR0cDovL3JlZ2lzdHJ5Lm5wbWpzLm9yZy9iaWdpLy0vYmlnaS0xLjQuMS50Z3oiDQogIH0sDQogICJnaXRIZWFkIjogIjdkMDM0YTFiMzhjYTkwZjY4ZGFhOWRlNDcyZGRhMmZiODEzODM2ZjEiLA0KICAiaG9tZXBhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL2NyeXB0b2NvaW5qcy9iaWdpI3JlYWRtZSIsDQogICJrZXl3b3JkcyI6IFsNCiAgICAiYXJiaXRyYXJ5IiwNCiAgICAiYXJpdGhtZXRpYyIsDQogICAgImJpZyIsDQogICAgImJpZ2ludCIsDQogICAgImJpZ2ludGVnZXIiLA0KICAgICJiaWdudW1iZXIiLA0KICAgICJiaXRjb2luIiwNCiAgICAiY3J5cHRvZ3JhcGh5IiwNCiAgICAiZGVjaW1hbCIsDQogICAgImZsb2F0IiwNCiAgICAiaW50IiwNCiAgICAiaW50ZWdlciIsDQogICAgIm1hdGgiLA0KICAgICJudW1iZXIiLA0KICAgICJwcmVjaXNpb24iDQogIF0sDQogICJtYWluIjogIi4vbGliL2luZGV4LmpzIiwNCiAgIm1haW50YWluZXJzIjogWw0KICAgIHsNCiAgICAgICJuYW1lIjogIm1pZG5pZ2h0bGlnaHRuaW5nIiwNCiAgICAgICJlbWFpbCI6ICJib3lkYkBtaWRuaWdodGRlc2lnbi53cyINCiAgICB9LA0KICAgIHsNCiAgICAgICJuYW1lIjogInNpZGF6aGFuZyIsDQogICAgICAiZW1haWwiOiAic2lkYXpoYW5nODlAZ21haWwuY29tIg0KICAgIH0sDQogICAgew0KICAgICAgIm5hbWUiOiAibmFkYXYiLA0KICAgICAgImVtYWlsIjogIm5wbUBzaGVzZWsuaW5mbyINCiAgICB9LA0KICAgIHsNCiAgICAgICJuYW1lIjogImpwcmljaGFyZHNvbiIsDQogICAgICAiZW1haWwiOiAianByaWNoYXJkc29uQGdtYWlsLmNvbSINCiAgICB9DQogIF0sDQogICJuYW1lIjogImJpZ2kiLA0KICAib3B0aW9uYWxEZXBlbmRlbmNpZXMiOiB7fSwNCiAgInJlYWRtZSI6ICJFUlJPUjogTm8gUkVBRE1FIGRhdGEgZm91bmQhIiwNCiAgInJlcG9zaXRvcnkiOiB7DQogICAgInR5cGUiOiAiZ2l0IiwNCiAgICAidXJsIjogImdpdCtodHRwczovL2dpdGh1Yi5jb20vY3J5cHRvY29pbmpzL2JpZ2kuZ2l0Ig0KICB9LA0KICAic2NyaXB0cyI6IHsNCiAgICAiYnJvd3Nlci10ZXN0IjogIm1vY2hpZnkgLS13ZCAtUiBzcGVjIiwNCiAgICAiY292ZXJhZ2UiOiAiaXN0YW5idWwgY292ZXIgLi9ub2RlX21vZHVsZXMvLmJpbi9fbW9jaGEgLS0gLS1yZXBvcnRlciBsaXN0IHRlc3QvKi5qcyIsDQogICAgImNvdmVyYWxscyI6ICJucG0gcnVuLXNjcmlwdCBjb3ZlcmFnZSAmJiBub2RlIC4vbm9kZV9tb2R1bGVzLy5iaW4vY292ZXJhbGxzIDwgY292ZXJhZ2UvbGNvdi5pbmZvIiwNCiAgICAianNoaW50IjogImpzaGludCAtLWNvbmZpZyBqc2hpbnQuanNvbiBsaWIvKi5qcyA7IHRydWUiLA0KICAgICJ0ZXN0IjogIl9tb2NoYSAtLSB0ZXN0LyouanMiLA0KICAgICJ1bml0IjogIm1vY2hhIg0KICB9LA0KICAidGVzdGxpbmciOiB7DQogICAgImJyb3dzZXJzIjogWw0KICAgICAgImFuZHJvaWQtYnJvd3Nlci80LjIuLmxhdGVzdCIsDQogICAgICAiY2hyb21lL2xhdGVzdCIsDQogICAgICAiZmlyZWZveC9sYXRlc3QiLA0KICAgICAgImllLzkuLmxhdGVzdCIsDQogICAgICAiaXBob25lLzYuMC4ubGF0ZXN0IiwNCiAgICAgICJzYWZhcmkvNi4wLi5sYXRlc3QiDQogICAgXSwNCiAgICAiZmlsZXMiOiAidGVzdC8qLmpzIiwNCiAgICAiaGFybmVzcyI6ICJtb2NoYSINCiAgfSwNCiAgInZlcnNpb24iOiAiMS40LjEiDQp9DQoNCn0se31dLDM5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCnZhciBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKQ0KdmFyIGNyZWF0ZUhhc2ggPSByZXF1aXJlKCdjcmVhdGUtaGFzaCcpDQp2YXIgcGJrZGYyID0gcmVxdWlyZSgncGJrZGYyJykucGJrZGYyU3luYw0KdmFyIHJhbmRvbUJ5dGVzID0gcmVxdWlyZSgncmFuZG9tYnl0ZXMnKQ0KdmFyIHVub3JtID0gcmVxdWlyZSgndW5vcm0nKQ0KDQp2YXIgREVGQVVMVF9XT1JETElTVCA9IHJlcXVpcmUoJy4vd29yZGxpc3RzL2VuLmpzb24nKQ0KDQpmdW5jdGlvbiBtbmVtb25pY1RvU2VlZChtbmVtb25pYywgcGFzc3dvcmQpIHsNCiAgdmFyIG1uZW1vbmljQnVmZmVyID0gbmV3IEJ1ZmZlcihtbmVtb25pYywgJ3V0ZjgnKQ0KICB2YXIgc2FsdEJ1ZmZlciA9IG5ldyBCdWZmZXIoc2FsdChwYXNzd29yZCksICd1dGY4JykNCg0KICByZXR1cm4gcGJrZGYyKG1uZW1vbmljQnVmZmVyLCBzYWx0QnVmZmVyLCAyMDQ4LCA2NCwgJ3NoYTUxMicpDQp9DQoNCmZ1bmN0aW9uIG1uZW1vbmljVG9TZWVkSGV4KG1uZW1vbmljLCBwYXNzd29yZCkgew0KICByZXR1cm4gbW5lbW9uaWNUb1NlZWQobW5lbW9uaWMsIHBhc3N3b3JkKS50b1N0cmluZygnaGV4JykNCn0NCg0KZnVuY3Rpb24gbW5lbW9uaWNUb0VudHJvcHkobW5lbW9uaWMsIHdvcmRsaXN0KSB7DQogIHdvcmRsaXN0ID0gd29yZGxpc3QgfHwgREVGQVVMVF9XT1JETElTVA0KDQogIHZhciB3b3JkcyA9IG1uZW1vbmljLnNwbGl0KCcgJykNCiAgYXNzZXJ0KHdvcmRzLmxlbmd0aCAlIDMgPT09IDAsICdJbnZhbGlkIG1uZW1vbmljJykNCg0KICB2YXIgYmVsb25nVG9MaXN0ID0gd29yZHMuZXZlcnkoZnVuY3Rpb24od29yZCkgew0KICAgIHJldHVybiB3b3JkbGlzdC5pbmRleE9mKHdvcmQpID4gLTENCiAgfSkNCg0KICBhc3NlcnQoYmVsb25nVG9MaXN0LCAnSW52YWxpZCBtbmVtb25pYycpDQoNCiAgLy8gY29udmVydCB3b3JkIGluZGljZXMgdG8gMTEgYml0IGJpbmFyeSBzdHJpbmdzDQogIHZhciBiaXRzID0gd29yZHMubWFwKGZ1bmN0aW9uKHdvcmQpIHsNCiAgICB2YXIgaW5kZXggPSB3b3JkbGlzdC5pbmRleE9mKHdvcmQpDQogICAgcmV0dXJuIGxwYWQoaW5kZXgudG9TdHJpbmcoMiksICcwJywgMTEpDQogIH0pLmpvaW4oJycpDQoNCiAgLy8gc3BsaXQgdGhlIGJpbmFyeSBzdHJpbmcgaW50byBFTlQvQ1MNCiAgdmFyIGRpdmlkZXJJbmRleCA9IE1hdGguZmxvb3IoYml0cy5sZW5ndGggLyAzMykgKiAzMg0KICB2YXIgZW50cm9weSA9IGJpdHMuc2xpY2UoMCwgZGl2aWRlckluZGV4KQ0KICB2YXIgY2hlY2tzdW0gPSBiaXRzLnNsaWNlKGRpdmlkZXJJbmRleCkNCg0KICAvLyBjYWxjdWxhdGUgdGhlIGNoZWNrc3VtIGFuZCBjb21wYXJlDQogIHZhciBlbnRyb3B5Qnl0ZXMgPSBlbnRyb3B5Lm1hdGNoKC8oLnsxLDh9KS9nKS5tYXAoZnVuY3Rpb24oYmluKSB7DQogICAgcmV0dXJuIHBhcnNlSW50KGJpbiwgMikNCiAgfSkNCiAgdmFyIGVudHJvcHlCdWZmZXIgPSBuZXcgQnVmZmVyKGVudHJvcHlCeXRlcykNCiAgdmFyIG5ld0NoZWNrc3VtID0gY2hlY2tzdW1CaXRzKGVudHJvcHlCdWZmZXIpDQoNCiAgYXNzZXJ0KG5ld0NoZWNrc3VtID09PSBjaGVja3N1bSwgJ0ludmFsaWQgbW5lbW9uaWMgY2hlY2tzdW0nKQ0KDQogIHJldHVybiBlbnRyb3B5QnVmZmVyLnRvU3RyaW5nKCdoZXgnKQ0KfQ0KDQpmdW5jdGlvbiBlbnRyb3B5VG9NbmVtb25pYyhlbnRyb3B5LCB3b3JkbGlzdCkgew0KICB3b3JkbGlzdCA9IHdvcmRsaXN0IHx8IERFRkFVTFRfV09SRExJU1QNCg0KICB2YXIgZW50cm9weUJ1ZmZlciA9IG5ldyBCdWZmZXIoZW50cm9weSwgJ2hleCcpDQogIHZhciBlbnRyb3B5Qml0cyA9IGJ5dGVzVG9CaW5hcnkoW10uc2xpY2UuY2FsbChlbnRyb3B5QnVmZmVyKSkNCiAgdmFyIGNoZWNrc3VtID0gY2hlY2tzdW1CaXRzKGVudHJvcHlCdWZmZXIpDQoNCiAgdmFyIGJpdHMgPSBlbnRyb3B5Qml0cyArIGNoZWNrc3VtDQogIHZhciBjaHVua3MgPSBiaXRzLm1hdGNoKC8oLnsxLDExfSkvZykNCg0KICB2YXIgd29yZHMgPSBjaHVua3MubWFwKGZ1bmN0aW9uKGJpbmFyeSkgew0KICAgIHZhciBpbmRleCA9IHBhcnNlSW50KGJpbmFyeSwgMikNCg0KICAgIHJldHVybiB3b3JkbGlzdFtpbmRleF0NCiAgfSkNCg0KICByZXR1cm4gd29yZHMuam9pbignICcpDQp9DQoNCmZ1bmN0aW9uIGdlbmVyYXRlTW5lbW9uaWMoc3RyZW5ndGgsIHJuZywgd29yZGxpc3QpIHsNCiAgc3RyZW5ndGggPSBzdHJlbmd0aCB8fCAxMjgNCiAgcm5nID0gcm5nIHx8IHJhbmRvbUJ5dGVzDQoNCiAgdmFyIGhleCA9IHJuZyhzdHJlbmd0aCAvIDgpLnRvU3RyaW5nKCdoZXgnKQ0KICByZXR1cm4gZW50cm9weVRvTW5lbW9uaWMoaGV4LCB3b3JkbGlzdCkNCn0NCg0KZnVuY3Rpb24gdmFsaWRhdGVNbmVtb25pYyhtbmVtb25pYywgd29yZGxpc3QpIHsNCiAgdHJ5IHsNCiAgICBtbmVtb25pY1RvRW50cm9weShtbmVtb25pYywgd29yZGxpc3QpDQogIH0gY2F0Y2ggKGUpIHsNCiAgICByZXR1cm4gZmFsc2UNCiAgfQ0KDQogIHJldHVybiB0cnVlDQp9DQoNCmZ1bmN0aW9uIGNoZWNrc3VtQml0cyhlbnRyb3B5QnVmZmVyKSB7DQogIHZhciBoYXNoID0gY3JlYXRlSGFzaCgnc2hhMjU2JykudXBkYXRlKGVudHJvcHlCdWZmZXIpLmRpZ2VzdCgpDQoNCiAgLy8gQ2FsY3VsYXRlZCBjb25zdGFudHMgZnJvbSBCSVAzOQ0KICB2YXIgRU5UID0gZW50cm9weUJ1ZmZlci5sZW5ndGggKiA4DQogIHZhciBDUyA9IEVOVCAvIDMyDQoNCiAgcmV0dXJuIGJ5dGVzVG9CaW5hcnkoW10uc2xpY2UuY2FsbChoYXNoKSkuc2xpY2UoMCwgQ1MpDQp9DQoNCmZ1bmN0aW9uIHNhbHQocGFzc3dvcmQpIHsNCiAgcmV0dXJuICdtbmVtb25pYycgKyAodW5vcm0ubmZrZChwYXNzd29yZCkgfHwgJycpIC8vIFVzZSB1bm9ybSB1bnRpbCBTdHJpbmcucHJvdG90eXBlLm5vcm1hbGl6ZSBnZXRzIGJldHRlciBicm93c2VyIHN1cHBvcnQNCn0NCg0KLy89PT09PT09PT09PSBoZWxwZXIgbWV0aG9kcyBmcm9tIGJpdGNvaW5qcy1saWIgPT09PT09PT0NCg0KZnVuY3Rpb24gYnl0ZXNUb0JpbmFyeShieXRlcykgew0KICByZXR1cm4gYnl0ZXMubWFwKGZ1bmN0aW9uKHgpIHsNCiAgICByZXR1cm4gbHBhZCh4LnRvU3RyaW5nKDIpLCAnMCcsIDgpDQogIH0pLmpvaW4oJycpOw0KfQ0KDQpmdW5jdGlvbiBscGFkKHN0ciwgcGFkU3RyaW5nLCBsZW5ndGgpIHsNCiAgd2hpbGUgKHN0ci5sZW5ndGggPCBsZW5ndGgpIHN0ciA9IHBhZFN0cmluZyArIHN0cjsNCiAgcmV0dXJuIHN0cjsNCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSB7DQogIG1uZW1vbmljVG9TZWVkOiBtbmVtb25pY1RvU2VlZCwNCiAgbW5lbW9uaWNUb1NlZWRIZXg6IG1uZW1vbmljVG9TZWVkSGV4LA0KICBtbmVtb25pY1RvRW50cm9weTogbW5lbW9uaWNUb0VudHJvcHksDQogIGVudHJvcHlUb01uZW1vbmljOiBlbnRyb3B5VG9NbmVtb25pYywNCiAgZ2VuZXJhdGVNbmVtb25pYzogZ2VuZXJhdGVNbmVtb25pYywNCiAgdmFsaWRhdGVNbmVtb25pYzogdmFsaWRhdGVNbmVtb25pYywNCiAgd29yZGxpc3RzOiB7DQogICAgRU46IERFRkFVTFRfV09SRExJU1QNCiAgfQ0KfQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vd29yZGxpc3RzL2VuLmpzb24iOjQwLCJhc3NlcnQiOjE1LCJidWZmZXIiOjkzLCJjcmVhdGUtaGFzaCI6NDg4LCJwYmtkZjIiOjU0OSwicmFuZG9tYnl0ZXMiOjU1OCwidW5vcm0iOjU4NX1dLDQwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzPVsNCiAgImFiYW5kb24iLA0KICAiYWJpbGl0eSIsDQogICJhYmxlIiwNCiAgImFib3V0IiwNCiAgImFib3ZlIiwNCiAgImFic2VudCIsDQogICJhYnNvcmIiLA0KICAiYWJzdHJhY3QiLA0KICAiYWJzdXJkIiwNCiAgImFidXNlIiwNCiAgImFjY2VzcyIsDQogICJhY2NpZGVudCIsDQogICJhY2NvdW50IiwNCiAgImFjY3VzZSIsDQogICJhY2hpZXZlIiwNCiAgImFjaWQiLA0KICAiYWNvdXN0aWMiLA0KICAiYWNxdWlyZSIsDQogICJhY3Jvc3MiLA0KICAiYWN0IiwNCiAgImFjdGlvbiIsDQogICJhY3RvciIsDQogICJhY3RyZXNzIiwNCiAgImFjdHVhbCIsDQogICJhZGFwdCIsDQogICJhZGQiLA0KICAiYWRkaWN0IiwNCiAgImFkZHJlc3MiLA0KICAiYWRqdXN0IiwNCiAgImFkbWl0IiwNCiAgImFkdWx0IiwNCiAgImFkdmFuY2UiLA0KICAiYWR2aWNlIiwNCiAgImFlcm9iaWMiLA0KICAiYWZmYWlyIiwNCiAgImFmZm9yZCIsDQogICJhZnJhaWQiLA0KICAiYWdhaW4iLA0KICAiYWdlIiwNCiAgImFnZW50IiwNCiAgImFncmVlIiwNCiAgImFoZWFkIiwNCiAgImFpbSIsDQogICJhaXIiLA0KICAiYWlycG9ydCIsDQogICJhaXNsZSIsDQogICJhbGFybSIsDQogICJhbGJ1bSIsDQogICJhbGNvaG9sIiwNCiAgImFsZXJ0IiwNCiAgImFsaWVuIiwNCiAgImFsbCIsDQogICJhbGxleSIsDQogICJhbGxvdyIsDQogICJhbG1vc3QiLA0KICAiYWxvbmUiLA0KICAiYWxwaGEiLA0KICAiYWxyZWFkeSIsDQogICJhbHNvIiwNCiAgImFsdGVyIiwNCiAgImFsd2F5cyIsDQogICJhbWF0ZXVyIiwNCiAgImFtYXppbmciLA0KICAiYW1vbmciLA0KICAiYW1vdW50IiwNCiAgImFtdXNlZCIsDQogICJhbmFseXN0IiwNCiAgImFuY2hvciIsDQogICJhbmNpZW50IiwNCiAgImFuZ2VyIiwNCiAgImFuZ2xlIiwNCiAgImFuZ3J5IiwNCiAgImFuaW1hbCIsDQogICJhbmtsZSIsDQogICJhbm5vdW5jZSIsDQogICJhbm51YWwiLA0KICAiYW5vdGhlciIsDQogICJhbnN3ZXIiLA0KICAiYW50ZW5uYSIsDQogICJhbnRpcXVlIiwNCiAgImFueGlldHkiLA0KICAiYW55IiwNCiAgImFwYXJ0IiwNCiAgImFwb2xvZ3kiLA0KICAiYXBwZWFyIiwNCiAgImFwcGxlIiwNCiAgImFwcHJvdmUiLA0KICAiYXByaWwiLA0KICAiYXJjaCIsDQogICJhcmN0aWMiLA0KICAiYXJlYSIsDQogICJhcmVuYSIsDQogICJhcmd1ZSIsDQogICJhcm0iLA0KICAiYXJtZWQiLA0KICAiYXJtb3IiLA0KICAiYXJteSIsDQogICJhcm91bmQiLA0KICAiYXJyYW5nZSIsDQogICJhcnJlc3QiLA0KICAiYXJyaXZlIiwNCiAgImFycm93IiwNCiAgImFydCIsDQogICJhcnRlZmFjdCIsDQogICJhcnRpc3QiLA0KICAiYXJ0d29yayIsDQogICJhc2siLA0KICAiYXNwZWN0IiwNCiAgImFzc2F1bHQiLA0KICAiYXNzZXQiLA0KICAiYXNzaXN0IiwNCiAgImFzc3VtZSIsDQogICJhc3RobWEiLA0KICAiYXRobGV0ZSIsDQogICJhdG9tIiwNCiAgImF0dGFjayIsDQogICJhdHRlbmQiLA0KICAiYXR0aXR1ZGUiLA0KICAiYXR0cmFjdCIsDQogICJhdWN0aW9uIiwNCiAgImF1ZGl0IiwNCiAgImF1Z3VzdCIsDQogICJhdW50IiwNCiAgImF1dGhvciIsDQogICJhdXRvIiwNCiAgImF1dHVtbiIsDQogICJhdmVyYWdlIiwNCiAgImF2b2NhZG8iLA0KICAiYXZvaWQiLA0KICAiYXdha2UiLA0KICAiYXdhcmUiLA0KICAiYXdheSIsDQogICJhd2Vzb21lIiwNCiAgImF3ZnVsIiwNCiAgImF3a3dhcmQiLA0KICAiYXhpcyIsDQogICJiYWJ5IiwNCiAgImJhY2hlbG9yIiwNCiAgImJhY29uIiwNCiAgImJhZGdlIiwNCiAgImJhZyIsDQogICJiYWxhbmNlIiwNCiAgImJhbGNvbnkiLA0KICAiYmFsbCIsDQogICJiYW1ib28iLA0KICAiYmFuYW5hIiwNCiAgImJhbm5lciIsDQogICJiYXIiLA0KICAiYmFyZWx5IiwNCiAgImJhcmdhaW4iLA0KICAiYmFycmVsIiwNCiAgImJhc2UiLA0KICAiYmFzaWMiLA0KICAiYmFza2V0IiwNCiAgImJhdHRsZSIsDQogICJiZWFjaCIsDQogICJiZWFuIiwNCiAgImJlYXV0eSIsDQogICJiZWNhdXNlIiwNCiAgImJlY29tZSIsDQogICJiZWVmIiwNCiAgImJlZm9yZSIsDQogICJiZWdpbiIsDQogICJiZWhhdmUiLA0KICAiYmVoaW5kIiwNCiAgImJlbGlldmUiLA0KICAiYmVsb3ciLA0KICAiYmVsdCIsDQogICJiZW5jaCIsDQogICJiZW5lZml0IiwNCiAgImJlc3QiLA0KICAiYmV0cmF5IiwNCiAgImJldHRlciIsDQogICJiZXR3ZWVuIiwNCiAgImJleW9uZCIsDQogICJiaWN5Y2xlIiwNCiAgImJpZCIsDQogICJiaWtlIiwNCiAgImJpbmQiLA0KICAiYmlvbG9neSIsDQogICJiaXJkIiwNCiAgImJpcnRoIiwNCiAgImJpdHRlciIsDQogICJibGFjayIsDQogICJibGFkZSIsDQogICJibGFtZSIsDQogICJibGFua2V0IiwNCiAgImJsYXN0IiwNCiAgImJsZWFrIiwNCiAgImJsZXNzIiwNCiAgImJsaW5kIiwNCiAgImJsb29kIiwNCiAgImJsb3Nzb20iLA0KICAiYmxvdXNlIiwNCiAgImJsdWUiLA0KICAiYmx1ciIsDQogICJibHVzaCIsDQogICJib2FyZCIsDQogICJib2F0IiwNCiAgImJvZHkiLA0KICAiYm9pbCIsDQogICJib21iIiwNCiAgImJvbmUiLA0KICAiYm9udXMiLA0KICAiYm9vayIsDQogICJib29zdCIsDQogICJib3JkZXIiLA0KICAiYm9yaW5nIiwNCiAgImJvcnJvdyIsDQogICJib3NzIiwNCiAgImJvdHRvbSIsDQogICJib3VuY2UiLA0KICAiYm94IiwNCiAgImJveSIsDQogICJicmFja2V0IiwNCiAgImJyYWluIiwNCiAgImJyYW5kIiwNCiAgImJyYXNzIiwNCiAgImJyYXZlIiwNCiAgImJyZWFkIiwNCiAgImJyZWV6ZSIsDQogICJicmljayIsDQogICJicmlkZ2UiLA0KICAiYnJpZWYiLA0KICAiYnJpZ2h0IiwNCiAgImJyaW5nIiwNCiAgImJyaXNrIiwNCiAgImJyb2Njb2xpIiwNCiAgImJyb2tlbiIsDQogICJicm9uemUiLA0KICAiYnJvb20iLA0KICAiYnJvdGhlciIsDQogICJicm93biIsDQogICJicnVzaCIsDQogICJidWJibGUiLA0KICAiYnVkZHkiLA0KICAiYnVkZ2V0IiwNCiAgImJ1ZmZhbG8iLA0KICAiYnVpbGQiLA0KICAiYnVsYiIsDQogICJidWxrIiwNCiAgImJ1bGxldCIsDQogICJidW5kbGUiLA0KICAiYnVua2VyIiwNCiAgImJ1cmRlbiIsDQogICJidXJnZXIiLA0KICAiYnVyc3QiLA0KICAiYnVzIiwNCiAgImJ1c2luZXNzIiwNCiAgImJ1c3kiLA0KICAiYnV0dGVyIiwNCiAgImJ1eWVyIiwNCiAgImJ1enoiLA0KICAiY2FiYmFnZSIsDQogICJjYWJpbiIsDQogICJjYWJsZSIsDQogICJjYWN0dXMiLA0KICAiY2FnZSIsDQogICJjYWtlIiwNCiAgImNhbGwiLA0KICAiY2FsbSIsDQogICJjYW1lcmEiLA0KICAiY2FtcCIsDQogICJjYW4iLA0KICAiY2FuYWwiLA0KICAiY2FuY2VsIiwNCiAgImNhbmR5IiwNCiAgImNhbm5vbiIsDQogICJjYW5vZSIsDQogICJjYW52YXMiLA0KICAiY2FueW9uIiwNCiAgImNhcGFibGUiLA0KICAiY2FwaXRhbCIsDQogICJjYXB0YWluIiwNCiAgImNhciIsDQogICJjYXJib24iLA0KICAiY2FyZCIsDQogICJjYXJnbyIsDQogICJjYXJwZXQiLA0KICAiY2FycnkiLA0KICAiY2FydCIsDQogICJjYXNlIiwNCiAgImNhc2giLA0KICAiY2FzaW5vIiwNCiAgImNhc3RsZSIsDQogICJjYXN1YWwiLA0KICAiY2F0IiwNCiAgImNhdGFsb2ciLA0KICAiY2F0Y2giLA0KICAiY2F0ZWdvcnkiLA0KICAiY2F0dGxlIiwNCiAgImNhdWdodCIsDQogICJjYXVzZSIsDQogICJjYXV0aW9uIiwNCiAgImNhdmUiLA0KICAiY2VpbGluZyIsDQogICJjZWxlcnkiLA0KICAiY2VtZW50IiwNCiAgImNlbnN1cyIsDQogICJjZW50dXJ5IiwNCiAgImNlcmVhbCIsDQogICJjZXJ0YWluIiwNCiAgImNoYWlyIiwNCiAgImNoYWxrIiwNCiAgImNoYW1waW9uIiwNCiAgImNoYW5nZSIsDQogICJjaGFvcyIsDQogICJjaGFwdGVyIiwNCiAgImNoYXJnZSIsDQogICJjaGFzZSIsDQogICJjaGF0IiwNCiAgImNoZWFwIiwNCiAgImNoZWNrIiwNCiAgImNoZWVzZSIsDQogICJjaGVmIiwNCiAgImNoZXJyeSIsDQogICJjaGVzdCIsDQogICJjaGlja2VuIiwNCiAgImNoaWVmIiwNCiAgImNoaWxkIiwNCiAgImNoaW1uZXkiLA0KICAiY2hvaWNlIiwNCiAgImNob29zZSIsDQogICJjaHJvbmljIiwNCiAgImNodWNrbGUiLA0KICAiY2h1bmsiLA0KICAiY2h1cm4iLA0KICAiY2lnYXIiLA0KICAiY2lubmFtb24iLA0KICAiY2lyY2xlIiwNCiAgImNpdGl6ZW4iLA0KICAiY2l0eSIsDQogICJjaXZpbCIsDQogICJjbGFpbSIsDQogICJjbGFwIiwNCiAgImNsYXJpZnkiLA0KICAiY2xhdyIsDQogICJjbGF5IiwNCiAgImNsZWFuIiwNCiAgImNsZXJrIiwNCiAgImNsZXZlciIsDQogICJjbGljayIsDQogICJjbGllbnQiLA0KICAiY2xpZmYiLA0KICAiY2xpbWIiLA0KICAiY2xpbmljIiwNCiAgImNsaXAiLA0KICAiY2xvY2siLA0KICAiY2xvZyIsDQogICJjbG9zZSIsDQogICJjbG90aCIsDQogICJjbG91ZCIsDQogICJjbG93biIsDQogICJjbHViIiwNCiAgImNsdW1wIiwNCiAgImNsdXN0ZXIiLA0KICAiY2x1dGNoIiwNCiAgImNvYWNoIiwNCiAgImNvYXN0IiwNCiAgImNvY29udXQiLA0KICAiY29kZSIsDQogICJjb2ZmZWUiLA0KICAiY29pbCIsDQogICJjb2luIiwNCiAgImNvbGxlY3QiLA0KICAiY29sb3IiLA0KICAiY29sdW1uIiwNCiAgImNvbWJpbmUiLA0KICAiY29tZSIsDQogICJjb21mb3J0IiwNCiAgImNvbWljIiwNCiAgImNvbW1vbiIsDQogICJjb21wYW55IiwNCiAgImNvbmNlcnQiLA0KICAiY29uZHVjdCIsDQogICJjb25maXJtIiwNCiAgImNvbmdyZXNzIiwNCiAgImNvbm5lY3QiLA0KICAiY29uc2lkZXIiLA0KICAiY29udHJvbCIsDQogICJjb252aW5jZSIsDQogICJjb29rIiwNCiAgImNvb2wiLA0KICAiY29wcGVyIiwNCiAgImNvcHkiLA0KICAiY29yYWwiLA0KICAiY29yZSIsDQogICJjb3JuIiwNCiAgImNvcnJlY3QiLA0KICAiY29zdCIsDQogICJjb3R0b24iLA0KICAiY291Y2giLA0KICAiY291bnRyeSIsDQogICJjb3VwbGUiLA0KICAiY291cnNlIiwNCiAgImNvdXNpbiIsDQogICJjb3ZlciIsDQogICJjb3lvdGUiLA0KICAiY3JhY2siLA0KICAiY3JhZGxlIiwNCiAgImNyYWZ0IiwNCiAgImNyYW0iLA0KICAiY3JhbmUiLA0KICAiY3Jhc2giLA0KICAiY3JhdGVyIiwNCiAgImNyYXdsIiwNCiAgImNyYXp5IiwNCiAgImNyZWFtIiwNCiAgImNyZWRpdCIsDQogICJjcmVlayIsDQogICJjcmV3IiwNCiAgImNyaWNrZXQiLA0KICAiY3JpbWUiLA0KICAiY3Jpc3AiLA0KICAiY3JpdGljIiwNCiAgImNyb3AiLA0KICAiY3Jvc3MiLA0KICAiY3JvdWNoIiwNCiAgImNyb3dkIiwNCiAgImNydWNpYWwiLA0KICAiY3J1ZWwiLA0KICAiY3J1aXNlIiwNCiAgImNydW1ibGUiLA0KICAiY3J1bmNoIiwNCiAgImNydXNoIiwNCiAgImNyeSIsDQogICJjcnlzdGFsIiwNCiAgImN1YmUiLA0KICAiY3VsdHVyZSIsDQogICJjdXAiLA0KICAiY3VwYm9hcmQiLA0KICAiY3VyaW91cyIsDQogICJjdXJyZW50IiwNCiAgImN1cnRhaW4iLA0KICAiY3VydmUiLA0KICAiY3VzaGlvbiIsDQogICJjdXN0b20iLA0KICAiY3V0ZSIsDQogICJjeWNsZSIsDQogICJkYWQiLA0KICAiZGFtYWdlIiwNCiAgImRhbXAiLA0KICAiZGFuY2UiLA0KICAiZGFuZ2VyIiwNCiAgImRhcmluZyIsDQogICJkYXNoIiwNCiAgImRhdWdodGVyIiwNCiAgImRhd24iLA0KICAiZGF5IiwNCiAgImRlYWwiLA0KICAiZGViYXRlIiwNCiAgImRlYnJpcyIsDQogICJkZWNhZGUiLA0KICAiZGVjZW1iZXIiLA0KICAiZGVjaWRlIiwNCiAgImRlY2xpbmUiLA0KICAiZGVjb3JhdGUiLA0KICAiZGVjcmVhc2UiLA0KICAiZGVlciIsDQogICJkZWZlbnNlIiwNCiAgImRlZmluZSIsDQogICJkZWZ5IiwNCiAgImRlZ3JlZSIsDQogICJkZWxheSIsDQogICJkZWxpdmVyIiwNCiAgImRlbWFuZCIsDQogICJkZW1pc2UiLA0KICAiZGVuaWFsIiwNCiAgImRlbnRpc3QiLA0KICAiZGVueSIsDQogICJkZXBhcnQiLA0KICAiZGVwZW5kIiwNCiAgImRlcG9zaXQiLA0KICAiZGVwdGgiLA0KICAiZGVwdXR5IiwNCiAgImRlcml2ZSIsDQogICJkZXNjcmliZSIsDQogICJkZXNlcnQiLA0KICAiZGVzaWduIiwNCiAgImRlc2siLA0KICAiZGVzcGFpciIsDQogICJkZXN0cm95IiwNCiAgImRldGFpbCIsDQogICJkZXRlY3QiLA0KICAiZGV2ZWxvcCIsDQogICJkZXZpY2UiLA0KICAiZGV2b3RlIiwNCiAgImRpYWdyYW0iLA0KICAiZGlhbCIsDQogICJkaWFtb25kIiwNCiAgImRpYXJ5IiwNCiAgImRpY2UiLA0KICAiZGllc2VsIiwNCiAgImRpZXQiLA0KICAiZGlmZmVyIiwNCiAgImRpZ2l0YWwiLA0KICAiZGlnbml0eSIsDQogICJkaWxlbW1hIiwNCiAgImRpbm5lciIsDQogICJkaW5vc2F1ciIsDQogICJkaXJlY3QiLA0KICAiZGlydCIsDQogICJkaXNhZ3JlZSIsDQogICJkaXNjb3ZlciIsDQogICJkaXNlYXNlIiwNCiAgImRpc2giLA0KICAiZGlzbWlzcyIsDQogICJkaXNvcmRlciIsDQogICJkaXNwbGF5IiwNCiAgImRpc3RhbmNlIiwNCiAgImRpdmVydCIsDQogICJkaXZpZGUiLA0KICAiZGl2b3JjZSIsDQogICJkaXp6eSIsDQogICJkb2N0b3IiLA0KICAiZG9jdW1lbnQiLA0KICAiZG9nIiwNCiAgImRvbGwiLA0KICAiZG9scGhpbiIsDQogICJkb21haW4iLA0KICAiZG9uYXRlIiwNCiAgImRvbmtleSIsDQogICJkb25vciIsDQogICJkb29yIiwNCiAgImRvc2UiLA0KICAiZG91YmxlIiwNCiAgImRvdmUiLA0KICAiZHJhZnQiLA0KICAiZHJhZ29uIiwNCiAgImRyYW1hIiwNCiAgImRyYXN0aWMiLA0KICAiZHJhdyIsDQogICJkcmVhbSIsDQogICJkcmVzcyIsDQogICJkcmlmdCIsDQogICJkcmlsbCIsDQogICJkcmluayIsDQogICJkcmlwIiwNCiAgImRyaXZlIiwNCiAgImRyb3AiLA0KICAiZHJ1bSIsDQogICJkcnkiLA0KICAiZHVjayIsDQogICJkdW1iIiwNCiAgImR1bmUiLA0KICAiZHVyaW5nIiwNCiAgImR1c3QiLA0KICAiZHV0Y2giLA0KICAiZHV0eSIsDQogICJkd2FyZiIsDQogICJkeW5hbWljIiwNCiAgImVhZ2VyIiwNCiAgImVhZ2xlIiwNCiAgImVhcmx5IiwNCiAgImVhcm4iLA0KICAiZWFydGgiLA0KICAiZWFzaWx5IiwNCiAgImVhc3QiLA0KICAiZWFzeSIsDQogICJlY2hvIiwNCiAgImVjb2xvZ3kiLA0KICAiZWNvbm9teSIsDQogICJlZGdlIiwNCiAgImVkaXQiLA0KICAiZWR1Y2F0ZSIsDQogICJlZmZvcnQiLA0KICAiZWdnIiwNCiAgImVpZ2h0IiwNCiAgImVpdGhlciIsDQogICJlbGJvdyIsDQogICJlbGRlciIsDQogICJlbGVjdHJpYyIsDQogICJlbGVnYW50IiwNCiAgImVsZW1lbnQiLA0KICAiZWxlcGhhbnQiLA0KICAiZWxldmF0b3IiLA0KICAiZWxpdGUiLA0KICAiZWxzZSIsDQogICJlbWJhcmsiLA0KICAiZW1ib2R5IiwNCiAgImVtYnJhY2UiLA0KICAiZW1lcmdlIiwNCiAgImVtb3Rpb24iLA0KICAiZW1wbG95IiwNCiAgImVtcG93ZXIiLA0KICAiZW1wdHkiLA0KICAiZW5hYmxlIiwNCiAgImVuYWN0IiwNCiAgImVuZCIsDQogICJlbmRsZXNzIiwNCiAgImVuZG9yc2UiLA0KICAiZW5lbXkiLA0KICAiZW5lcmd5IiwNCiAgImVuZm9yY2UiLA0KICAiZW5nYWdlIiwNCiAgImVuZ2luZSIsDQogICJlbmhhbmNlIiwNCiAgImVuam95IiwNCiAgImVubGlzdCIsDQogICJlbm91Z2giLA0KICAiZW5yaWNoIiwNCiAgImVucm9sbCIsDQogICJlbnN1cmUiLA0KICAiZW50ZXIiLA0KICAiZW50aXJlIiwNCiAgImVudHJ5IiwNCiAgImVudmVsb3BlIiwNCiAgImVwaXNvZGUiLA0KICAiZXF1YWwiLA0KICAiZXF1aXAiLA0KICAiZXJhIiwNCiAgImVyYXNlIiwNCiAgImVyb2RlIiwNCiAgImVyb3Npb24iLA0KICAiZXJyb3IiLA0KICAiZXJ1cHQiLA0KICAiZXNjYXBlIiwNCiAgImVzc2F5IiwNCiAgImVzc2VuY2UiLA0KICAiZXN0YXRlIiwNCiAgImV0ZXJuYWwiLA0KICAiZXRoaWNzIiwNCiAgImV2aWRlbmNlIiwNCiAgImV2aWwiLA0KICAiZXZva2UiLA0KICAiZXZvbHZlIiwNCiAgImV4YWN0IiwNCiAgImV4YW1wbGUiLA0KICAiZXhjZXNzIiwNCiAgImV4Y2hhbmdlIiwNCiAgImV4Y2l0ZSIsDQogICJleGNsdWRlIiwNCiAgImV4Y3VzZSIsDQogICJleGVjdXRlIiwNCiAgImV4ZXJjaXNlIiwNCiAgImV4aGF1c3QiLA0KICAiZXhoaWJpdCIsDQogICJleGlsZSIsDQogICJleGlzdCIsDQogICJleGl0IiwNCiAgImV4b3RpYyIsDQogICJleHBhbmQiLA0KICAiZXhwZWN0IiwNCiAgImV4cGlyZSIsDQogICJleHBsYWluIiwNCiAgImV4cG9zZSIsDQogICJleHByZXNzIiwNCiAgImV4dGVuZCIsDQogICJleHRyYSIsDQogICJleWUiLA0KICAiZXllYnJvdyIsDQogICJmYWJyaWMiLA0KICAiZmFjZSIsDQogICJmYWN1bHR5IiwNCiAgImZhZGUiLA0KICAiZmFpbnQiLA0KICAiZmFpdGgiLA0KICAiZmFsbCIsDQogICJmYWxzZSIsDQogICJmYW1lIiwNCiAgImZhbWlseSIsDQogICJmYW1vdXMiLA0KICAiZmFuIiwNCiAgImZhbmN5IiwNCiAgImZhbnRhc3kiLA0KICAiZmFybSIsDQogICJmYXNoaW9uIiwNCiAgImZhdCIsDQogICJmYXRhbCIsDQogICJmYXRoZXIiLA0KICAiZmF0aWd1ZSIsDQogICJmYXVsdCIsDQogICJmYXZvcml0ZSIsDQogICJmZWF0dXJlIiwNCiAgImZlYnJ1YXJ5IiwNCiAgImZlZGVyYWwiLA0KICAiZmVlIiwNCiAgImZlZWQiLA0KICAiZmVlbCIsDQogICJmZW1hbGUiLA0KICAiZmVuY2UiLA0KICAiZmVzdGl2YWwiLA0KICAiZmV0Y2giLA0KICAiZmV2ZXIiLA0KICAiZmV3IiwNCiAgImZpYmVyIiwNCiAgImZpY3Rpb24iLA0KICAiZmllbGQiLA0KICAiZmlndXJlIiwNCiAgImZpbGUiLA0KICAiZmlsbSIsDQogICJmaWx0ZXIiLA0KICAiZmluYWwiLA0KICAiZmluZCIsDQogICJmaW5lIiwNCiAgImZpbmdlciIsDQogICJmaW5pc2giLA0KICAiZmlyZSIsDQogICJmaXJtIiwNCiAgImZpcnN0IiwNCiAgImZpc2NhbCIsDQogICJmaXNoIiwNCiAgImZpdCIsDQogICJmaXRuZXNzIiwNCiAgImZpeCIsDQogICJmbGFnIiwNCiAgImZsYW1lIiwNCiAgImZsYXNoIiwNCiAgImZsYXQiLA0KICAiZmxhdm9yIiwNCiAgImZsZWUiLA0KICAiZmxpZ2h0IiwNCiAgImZsaXAiLA0KICAiZmxvYXQiLA0KICAiZmxvY2siLA0KICAiZmxvb3IiLA0KICAiZmxvd2VyIiwNCiAgImZsdWlkIiwNCiAgImZsdXNoIiwNCiAgImZseSIsDQogICJmb2FtIiwNCiAgImZvY3VzIiwNCiAgImZvZyIsDQogICJmb2lsIiwNCiAgImZvbGQiLA0KICAiZm9sbG93IiwNCiAgImZvb2QiLA0KICAiZm9vdCIsDQogICJmb3JjZSIsDQogICJmb3Jlc3QiLA0KICAiZm9yZ2V0IiwNCiAgImZvcmsiLA0KICAiZm9ydHVuZSIsDQogICJmb3J1bSIsDQogICJmb3J3YXJkIiwNCiAgImZvc3NpbCIsDQogICJmb3N0ZXIiLA0KICAiZm91bmQiLA0KICAiZm94IiwNCiAgImZyYWdpbGUiLA0KICAiZnJhbWUiLA0KICAiZnJlcXVlbnQiLA0KICAiZnJlc2giLA0KICAiZnJpZW5kIiwNCiAgImZyaW5nZSIsDQogICJmcm9nIiwNCiAgImZyb250IiwNCiAgImZyb3N0IiwNCiAgImZyb3duIiwNCiAgImZyb3plbiIsDQogICJmcnVpdCIsDQogICJmdWVsIiwNCiAgImZ1biIsDQogICJmdW5ueSIsDQogICJmdXJuYWNlIiwNCiAgImZ1cnkiLA0KICAiZnV0dXJlIiwNCiAgImdhZGdldCIsDQogICJnYWluIiwNCiAgImdhbGF4eSIsDQogICJnYWxsZXJ5IiwNCiAgImdhbWUiLA0KICAiZ2FwIiwNCiAgImdhcmFnZSIsDQogICJnYXJiYWdlIiwNCiAgImdhcmRlbiIsDQogICJnYXJsaWMiLA0KICAiZ2FybWVudCIsDQogICJnYXMiLA0KICAiZ2FzcCIsDQogICJnYXRlIiwNCiAgImdhdGhlciIsDQogICJnYXVnZSIsDQogICJnYXplIiwNCiAgImdlbmVyYWwiLA0KICAiZ2VuaXVzIiwNCiAgImdlbnJlIiwNCiAgImdlbnRsZSIsDQogICJnZW51aW5lIiwNCiAgImdlc3R1cmUiLA0KICAiZ2hvc3QiLA0KICAiZ2lhbnQiLA0KICAiZ2lmdCIsDQogICJnaWdnbGUiLA0KICAiZ2luZ2VyIiwNCiAgImdpcmFmZmUiLA0KICAiZ2lybCIsDQogICJnaXZlIiwNCiAgImdsYWQiLA0KICAiZ2xhbmNlIiwNCiAgImdsYXJlIiwNCiAgImdsYXNzIiwNCiAgImdsaWRlIiwNCiAgImdsaW1wc2UiLA0KICAiZ2xvYmUiLA0KICAiZ2xvb20iLA0KICAiZ2xvcnkiLA0KICAiZ2xvdmUiLA0KICAiZ2xvdyIsDQogICJnbHVlIiwNCiAgImdvYXQiLA0KICAiZ29kZGVzcyIsDQogICJnb2xkIiwNCiAgImdvb2QiLA0KICAiZ29vc2UiLA0KICAiZ29yaWxsYSIsDQogICJnb3NwZWwiLA0KICAiZ29zc2lwIiwNCiAgImdvdmVybiIsDQogICJnb3duIiwNCiAgImdyYWIiLA0KICAiZ3JhY2UiLA0KICAiZ3JhaW4iLA0KICAiZ3JhbnQiLA0KICAiZ3JhcGUiLA0KICAiZ3Jhc3MiLA0KICAiZ3Jhdml0eSIsDQogICJncmVhdCIsDQogICJncmVlbiIsDQogICJncmlkIiwNCiAgImdyaWVmIiwNCiAgImdyaXQiLA0KICAiZ3JvY2VyeSIsDQogICJncm91cCIsDQogICJncm93IiwNCiAgImdydW50IiwNCiAgImd1YXJkIiwNCiAgImd1ZXNzIiwNCiAgImd1aWRlIiwNCiAgImd1aWx0IiwNCiAgImd1aXRhciIsDQogICJndW4iLA0KICAiZ3ltIiwNCiAgImhhYml0IiwNCiAgImhhaXIiLA0KICAiaGFsZiIsDQogICJoYW1tZXIiLA0KICAiaGFtc3RlciIsDQogICJoYW5kIiwNCiAgImhhcHB5IiwNCiAgImhhcmJvciIsDQogICJoYXJkIiwNCiAgImhhcnNoIiwNCiAgImhhcnZlc3QiLA0KICAiaGF0IiwNCiAgImhhdmUiLA0KICAiaGF3ayIsDQogICJoYXphcmQiLA0KICAiaGVhZCIsDQogICJoZWFsdGgiLA0KICAiaGVhcnQiLA0KICAiaGVhdnkiLA0KICAiaGVkZ2Vob2ciLA0KICAiaGVpZ2h0IiwNCiAgImhlbGxvIiwNCiAgImhlbG1ldCIsDQogICJoZWxwIiwNCiAgImhlbiIsDQogICJoZXJvIiwNCiAgImhpZGRlbiIsDQogICJoaWdoIiwNCiAgImhpbGwiLA0KICAiaGludCIsDQogICJoaXAiLA0KICAiaGlyZSIsDQogICJoaXN0b3J5IiwNCiAgImhvYmJ5IiwNCiAgImhvY2tleSIsDQogICJob2xkIiwNCiAgImhvbGUiLA0KICAiaG9saWRheSIsDQogICJob2xsb3ciLA0KICAiaG9tZSIsDQogICJob25leSIsDQogICJob29kIiwNCiAgImhvcGUiLA0KICAiaG9ybiIsDQogICJob3Jyb3IiLA0KICAiaG9yc2UiLA0KICAiaG9zcGl0YWwiLA0KICAiaG9zdCIsDQogICJob3RlbCIsDQogICJob3VyIiwNCiAgImhvdmVyIiwNCiAgImh1YiIsDQogICJodWdlIiwNCiAgImh1bWFuIiwNCiAgImh1bWJsZSIsDQogICJodW1vciIsDQogICJodW5kcmVkIiwNCiAgImh1bmdyeSIsDQogICJodW50IiwNCiAgImh1cmRsZSIsDQogICJodXJyeSIsDQogICJodXJ0IiwNCiAgImh1c2JhbmQiLA0KICAiaHlicmlkIiwNCiAgImljZSIsDQogICJpY29uIiwNCiAgImlkZWEiLA0KICAiaWRlbnRpZnkiLA0KICAiaWRsZSIsDQogICJpZ25vcmUiLA0KICAiaWxsIiwNCiAgImlsbGVnYWwiLA0KICAiaWxsbmVzcyIsDQogICJpbWFnZSIsDQogICJpbWl0YXRlIiwNCiAgImltbWVuc2UiLA0KICAiaW1tdW5lIiwNCiAgImltcGFjdCIsDQogICJpbXBvc2UiLA0KICAiaW1wcm92ZSIsDQogICJpbXB1bHNlIiwNCiAgImluY2giLA0KICAiaW5jbHVkZSIsDQogICJpbmNvbWUiLA0KICAiaW5jcmVhc2UiLA0KICAiaW5kZXgiLA0KICAiaW5kaWNhdGUiLA0KICAiaW5kb29yIiwNCiAgImluZHVzdHJ5IiwNCiAgImluZmFudCIsDQogICJpbmZsaWN0IiwNCiAgImluZm9ybSIsDQogICJpbmhhbGUiLA0KICAiaW5oZXJpdCIsDQogICJpbml0aWFsIiwNCiAgImluamVjdCIsDQogICJpbmp1cnkiLA0KICAiaW5tYXRlIiwNCiAgImlubmVyIiwNCiAgImlubm9jZW50IiwNCiAgImlucHV0IiwNCiAgImlucXVpcnkiLA0KICAiaW5zYW5lIiwNCiAgImluc2VjdCIsDQogICJpbnNpZGUiLA0KICAiaW5zcGlyZSIsDQogICJpbnN0YWxsIiwNCiAgImludGFjdCIsDQogICJpbnRlcmVzdCIsDQogICJpbnRvIiwNCiAgImludmVzdCIsDQogICJpbnZpdGUiLA0KICAiaW52b2x2ZSIsDQogICJpcm9uIiwNCiAgImlzbGFuZCIsDQogICJpc29sYXRlIiwNCiAgImlzc3VlIiwNCiAgIml0ZW0iLA0KICAiaXZvcnkiLA0KICAiamFja2V0IiwNCiAgImphZ3VhciIsDQogICJqYXIiLA0KICAiamF6eiIsDQogICJqZWFsb3VzIiwNCiAgImplYW5zIiwNCiAgImplbGx5IiwNCiAgImpld2VsIiwNCiAgImpvYiIsDQogICJqb2luIiwNCiAgImpva2UiLA0KICAiam91cm5leSIsDQogICJqb3kiLA0KICAianVkZ2UiLA0KICAianVpY2UiLA0KICAianVtcCIsDQogICJqdW5nbGUiLA0KICAianVuaW9yIiwNCiAgImp1bmsiLA0KICAianVzdCIsDQogICJrYW5nYXJvbyIsDQogICJrZWVuIiwNCiAgImtlZXAiLA0KICAia2V0Y2h1cCIsDQogICJrZXkiLA0KICAia2ljayIsDQogICJraWQiLA0KICAia2lkbmV5IiwNCiAgImtpbmQiLA0KICAia2luZ2RvbSIsDQogICJraXNzIiwNCiAgImtpdCIsDQogICJraXRjaGVuIiwNCiAgImtpdGUiLA0KICAia2l0dGVuIiwNCiAgImtpd2kiLA0KICAia25lZSIsDQogICJrbmlmZSIsDQogICJrbm9jayIsDQogICJrbm93IiwNCiAgImxhYiIsDQogICJsYWJlbCIsDQogICJsYWJvciIsDQogICJsYWRkZXIiLA0KICAibGFkeSIsDQogICJsYWtlIiwNCiAgImxhbXAiLA0KICAibGFuZ3VhZ2UiLA0KICAibGFwdG9wIiwNCiAgImxhcmdlIiwNCiAgImxhdGVyIiwNCiAgImxhdGluIiwNCiAgImxhdWdoIiwNCiAgImxhdW5kcnkiLA0KICAibGF2YSIsDQogICJsYXciLA0KICAibGF3biIsDQogICJsYXdzdWl0IiwNCiAgImxheWVyIiwNCiAgImxhenkiLA0KICAibGVhZGVyIiwNCiAgImxlYWYiLA0KICAibGVhcm4iLA0KICAibGVhdmUiLA0KICAibGVjdHVyZSIsDQogICJsZWZ0IiwNCiAgImxlZyIsDQogICJsZWdhbCIsDQogICJsZWdlbmQiLA0KICAibGVpc3VyZSIsDQogICJsZW1vbiIsDQogICJsZW5kIiwNCiAgImxlbmd0aCIsDQogICJsZW5zIiwNCiAgImxlb3BhcmQiLA0KICAibGVzc29uIiwNCiAgImxldHRlciIsDQogICJsZXZlbCIsDQogICJsaWFyIiwNCiAgImxpYmVydHkiLA0KICAibGlicmFyeSIsDQogICJsaWNlbnNlIiwNCiAgImxpZmUiLA0KICAibGlmdCIsDQogICJsaWdodCIsDQogICJsaWtlIiwNCiAgImxpbWIiLA0KICAibGltaXQiLA0KICAibGluayIsDQogICJsaW9uIiwNCiAgImxpcXVpZCIsDQogICJsaXN0IiwNCiAgImxpdHRsZSIsDQogICJsaXZlIiwNCiAgImxpemFyZCIsDQogICJsb2FkIiwNCiAgImxvYW4iLA0KICAibG9ic3RlciIsDQogICJsb2NhbCIsDQogICJsb2NrIiwNCiAgImxvZ2ljIiwNCiAgImxvbmVseSIsDQogICJsb25nIiwNCiAgImxvb3AiLA0KICAibG90dGVyeSIsDQogICJsb3VkIiwNCiAgImxvdW5nZSIsDQogICJsb3ZlIiwNCiAgImxveWFsIiwNCiAgImx1Y2t5IiwNCiAgImx1Z2dhZ2UiLA0KICAibHVtYmVyIiwNCiAgImx1bmFyIiwNCiAgImx1bmNoIiwNCiAgImx1eHVyeSIsDQogICJseXJpY3MiLA0KICAibWFjaGluZSIsDQogICJtYWQiLA0KICAibWFnaWMiLA0KICAibWFnbmV0IiwNCiAgIm1haWQiLA0KICAibWFpbCIsDQogICJtYWluIiwNCiAgIm1ham9yIiwNCiAgIm1ha2UiLA0KICAibWFtbWFsIiwNCiAgIm1hbiIsDQogICJtYW5hZ2UiLA0KICAibWFuZGF0ZSIsDQogICJtYW5nbyIsDQogICJtYW5zaW9uIiwNCiAgIm1hbnVhbCIsDQogICJtYXBsZSIsDQogICJtYXJibGUiLA0KICAibWFyY2giLA0KICAibWFyZ2luIiwNCiAgIm1hcmluZSIsDQogICJtYXJrZXQiLA0KICAibWFycmlhZ2UiLA0KICAibWFzayIsDQogICJtYXNzIiwNCiAgIm1hc3RlciIsDQogICJtYXRjaCIsDQogICJtYXRlcmlhbCIsDQogICJtYXRoIiwNCiAgIm1hdHJpeCIsDQogICJtYXR0ZXIiLA0KICAibWF4aW11bSIsDQogICJtYXplIiwNCiAgIm1lYWRvdyIsDQogICJtZWFuIiwNCiAgIm1lYXN1cmUiLA0KICAibWVhdCIsDQogICJtZWNoYW5pYyIsDQogICJtZWRhbCIsDQogICJtZWRpYSIsDQogICJtZWxvZHkiLA0KICAibWVsdCIsDQogICJtZW1iZXIiLA0KICAibWVtb3J5IiwNCiAgIm1lbnRpb24iLA0KICAibWVudSIsDQogICJtZXJjeSIsDQogICJtZXJnZSIsDQogICJtZXJpdCIsDQogICJtZXJyeSIsDQogICJtZXNoIiwNCiAgIm1lc3NhZ2UiLA0KICAibWV0YWwiLA0KICAibWV0aG9kIiwNCiAgIm1pZGRsZSIsDQogICJtaWRuaWdodCIsDQogICJtaWxrIiwNCiAgIm1pbGxpb24iLA0KICAibWltaWMiLA0KICAibWluZCIsDQogICJtaW5pbXVtIiwNCiAgIm1pbm9yIiwNCiAgIm1pbnV0ZSIsDQogICJtaXJhY2xlIiwNCiAgIm1pcnJvciIsDQogICJtaXNlcnkiLA0KICAibWlzcyIsDQogICJtaXN0YWtlIiwNCiAgIm1peCIsDQogICJtaXhlZCIsDQogICJtaXh0dXJlIiwNCiAgIm1vYmlsZSIsDQogICJtb2RlbCIsDQogICJtb2RpZnkiLA0KICAibW9tIiwNCiAgIm1vbWVudCIsDQogICJtb25pdG9yIiwNCiAgIm1vbmtleSIsDQogICJtb25zdGVyIiwNCiAgIm1vbnRoIiwNCiAgIm1vb24iLA0KICAibW9yYWwiLA0KICAibW9yZSIsDQogICJtb3JuaW5nIiwNCiAgIm1vc3F1aXRvIiwNCiAgIm1vdGhlciIsDQogICJtb3Rpb24iLA0KICAibW90b3IiLA0KICAibW91bnRhaW4iLA0KICAibW91c2UiLA0KICAibW92ZSIsDQogICJtb3ZpZSIsDQogICJtdWNoIiwNCiAgIm11ZmZpbiIsDQogICJtdWxlIiwNCiAgIm11bHRpcGx5IiwNCiAgIm11c2NsZSIsDQogICJtdXNldW0iLA0KICAibXVzaHJvb20iLA0KICAibXVzaWMiLA0KICAibXVzdCIsDQogICJtdXR1YWwiLA0KICAibXlzZWxmIiwNCiAgIm15c3RlcnkiLA0KICAibXl0aCIsDQogICJuYWl2ZSIsDQogICJuYW1lIiwNCiAgIm5hcGtpbiIsDQogICJuYXJyb3ciLA0KICAibmFzdHkiLA0KICAibmF0aW9uIiwNCiAgIm5hdHVyZSIsDQogICJuZWFyIiwNCiAgIm5lY2siLA0KICAibmVlZCIsDQogICJuZWdhdGl2ZSIsDQogICJuZWdsZWN0IiwNCiAgIm5laXRoZXIiLA0KICAibmVwaGV3IiwNCiAgIm5lcnZlIiwNCiAgIm5lc3QiLA0KICAibmV0IiwNCiAgIm5ldHdvcmsiLA0KICAibmV1dHJhbCIsDQogICJuZXZlciIsDQogICJuZXdzIiwNCiAgIm5leHQiLA0KICAibmljZSIsDQogICJuaWdodCIsDQogICJub2JsZSIsDQogICJub2lzZSIsDQogICJub21pbmVlIiwNCiAgIm5vb2RsZSIsDQogICJub3JtYWwiLA0KICAibm9ydGgiLA0KICAibm9zZSIsDQogICJub3RhYmxlIiwNCiAgIm5vdGUiLA0KICAibm90aGluZyIsDQogICJub3RpY2UiLA0KICAibm92ZWwiLA0KICAibm93IiwNCiAgIm51Y2xlYXIiLA0KICAibnVtYmVyIiwNCiAgIm51cnNlIiwNCiAgIm51dCIsDQogICJvYWsiLA0KICAib2JleSIsDQogICJvYmplY3QiLA0KICAib2JsaWdlIiwNCiAgIm9ic2N1cmUiLA0KICAib2JzZXJ2ZSIsDQogICJvYnRhaW4iLA0KICAib2J2aW91cyIsDQogICJvY2N1ciIsDQogICJvY2VhbiIsDQogICJvY3RvYmVyIiwNCiAgIm9kb3IiLA0KICAib2ZmIiwNCiAgIm9mZmVyIiwNCiAgIm9mZmljZSIsDQogICJvZnRlbiIsDQogICJvaWwiLA0KICAib2theSIsDQogICJvbGQiLA0KICAib2xpdmUiLA0KICAib2x5bXBpYyIsDQogICJvbWl0IiwNCiAgIm9uY2UiLA0KICAib25lIiwNCiAgIm9uaW9uIiwNCiAgIm9ubGluZSIsDQogICJvbmx5IiwNCiAgIm9wZW4iLA0KICAib3BlcmEiLA0KICAib3BpbmlvbiIsDQogICJvcHBvc2UiLA0KICAib3B0aW9uIiwNCiAgIm9yYW5nZSIsDQogICJvcmJpdCIsDQogICJvcmNoYXJkIiwNCiAgIm9yZGVyIiwNCiAgIm9yZGluYXJ5IiwNCiAgIm9yZ2FuIiwNCiAgIm9yaWVudCIsDQogICJvcmlnaW5hbCIsDQogICJvcnBoYW4iLA0KICAib3N0cmljaCIsDQogICJvdGhlciIsDQogICJvdXRkb29yIiwNCiAgIm91dGVyIiwNCiAgIm91dHB1dCIsDQogICJvdXRzaWRlIiwNCiAgIm92YWwiLA0KICAib3ZlbiIsDQogICJvdmVyIiwNCiAgIm93biIsDQogICJvd25lciIsDQogICJveHlnZW4iLA0KICAib3lzdGVyIiwNCiAgIm96b25lIiwNCiAgInBhY3QiLA0KICAicGFkZGxlIiwNCiAgInBhZ2UiLA0KICAicGFpciIsDQogICJwYWxhY2UiLA0KICAicGFsbSIsDQogICJwYW5kYSIsDQogICJwYW5lbCIsDQogICJwYW5pYyIsDQogICJwYW50aGVyIiwNCiAgInBhcGVyIiwNCiAgInBhcmFkZSIsDQogICJwYXJlbnQiLA0KICAicGFyayIsDQogICJwYXJyb3QiLA0KICAicGFydHkiLA0KICAicGFzcyIsDQogICJwYXRjaCIsDQogICJwYXRoIiwNCiAgInBhdGllbnQiLA0KICAicGF0cm9sIiwNCiAgInBhdHRlcm4iLA0KICAicGF1c2UiLA0KICAicGF2ZSIsDQogICJwYXltZW50IiwNCiAgInBlYWNlIiwNCiAgInBlYW51dCIsDQogICJwZWFyIiwNCiAgInBlYXNhbnQiLA0KICAicGVsaWNhbiIsDQogICJwZW4iLA0KICAicGVuYWx0eSIsDQogICJwZW5jaWwiLA0KICAicGVvcGxlIiwNCiAgInBlcHBlciIsDQogICJwZXJmZWN0IiwNCiAgInBlcm1pdCIsDQogICJwZXJzb24iLA0KICAicGV0IiwNCiAgInBob25lIiwNCiAgInBob3RvIiwNCiAgInBocmFzZSIsDQogICJwaHlzaWNhbCIsDQogICJwaWFubyIsDQogICJwaWNuaWMiLA0KICAicGljdHVyZSIsDQogICJwaWVjZSIsDQogICJwaWciLA0KICAicGlnZW9uIiwNCiAgInBpbGwiLA0KICAicGlsb3QiLA0KICAicGluayIsDQogICJwaW9uZWVyIiwNCiAgInBpcGUiLA0KICAicGlzdG9sIiwNCiAgInBpdGNoIiwNCiAgInBpenphIiwNCiAgInBsYWNlIiwNCiAgInBsYW5ldCIsDQogICJwbGFzdGljIiwNCiAgInBsYXRlIiwNCiAgInBsYXkiLA0KICAicGxlYXNlIiwNCiAgInBsZWRnZSIsDQogICJwbHVjayIsDQogICJwbHVnIiwNCiAgInBsdW5nZSIsDQogICJwb2VtIiwNCiAgInBvZXQiLA0KICAicG9pbnQiLA0KICAicG9sYXIiLA0KICAicG9sZSIsDQogICJwb2xpY2UiLA0KICAicG9uZCIsDQogICJwb255IiwNCiAgInBvb2wiLA0KICAicG9wdWxhciIsDQogICJwb3J0aW9uIiwNCiAgInBvc2l0aW9uIiwNCiAgInBvc3NpYmxlIiwNCiAgInBvc3QiLA0KICAicG90YXRvIiwNCiAgInBvdHRlcnkiLA0KICAicG92ZXJ0eSIsDQogICJwb3dkZXIiLA0KICAicG93ZXIiLA0KICAicHJhY3RpY2UiLA0KICAicHJhaXNlIiwNCiAgInByZWRpY3QiLA0KICAicHJlZmVyIiwNCiAgInByZXBhcmUiLA0KICAicHJlc2VudCIsDQogICJwcmV0dHkiLA0KICAicHJldmVudCIsDQogICJwcmljZSIsDQogICJwcmlkZSIsDQogICJwcmltYXJ5IiwNCiAgInByaW50IiwNCiAgInByaW9yaXR5IiwNCiAgInByaXNvbiIsDQogICJwcml2YXRlIiwNCiAgInByaXplIiwNCiAgInByb2JsZW0iLA0KICAicHJvY2VzcyIsDQogICJwcm9kdWNlIiwNCiAgInByb2ZpdCIsDQogICJwcm9ncmFtIiwNCiAgInByb2plY3QiLA0KICAicHJvbW90ZSIsDQogICJwcm9vZiIsDQogICJwcm9wZXJ0eSIsDQogICJwcm9zcGVyIiwNCiAgInByb3RlY3QiLA0KICAicHJvdWQiLA0KICAicHJvdmlkZSIsDQogICJwdWJsaWMiLA0KICAicHVkZGluZyIsDQogICJwdWxsIiwNCiAgInB1bHAiLA0KICAicHVsc2UiLA0KICAicHVtcGtpbiIsDQogICJwdW5jaCIsDQogICJwdXBpbCIsDQogICJwdXBweSIsDQogICJwdXJjaGFzZSIsDQogICJwdXJpdHkiLA0KICAicHVycG9zZSIsDQogICJwdXJzZSIsDQogICJwdXNoIiwNCiAgInB1dCIsDQogICJwdXp6bGUiLA0KICAicHlyYW1pZCIsDQogICJxdWFsaXR5IiwNCiAgInF1YW50dW0iLA0KICAicXVhcnRlciIsDQogICJxdWVzdGlvbiIsDQogICJxdWljayIsDQogICJxdWl0IiwNCiAgInF1aXoiLA0KICAicXVvdGUiLA0KICAicmFiYml0IiwNCiAgInJhY2Nvb24iLA0KICAicmFjZSIsDQogICJyYWNrIiwNCiAgInJhZGFyIiwNCiAgInJhZGlvIiwNCiAgInJhaWwiLA0KICAicmFpbiIsDQogICJyYWlzZSIsDQogICJyYWxseSIsDQogICJyYW1wIiwNCiAgInJhbmNoIiwNCiAgInJhbmRvbSIsDQogICJyYW5nZSIsDQogICJyYXBpZCIsDQogICJyYXJlIiwNCiAgInJhdGUiLA0KICAicmF0aGVyIiwNCiAgInJhdmVuIiwNCiAgInJhdyIsDQogICJyYXpvciIsDQogICJyZWFkeSIsDQogICJyZWFsIiwNCiAgInJlYXNvbiIsDQogICJyZWJlbCIsDQogICJyZWJ1aWxkIiwNCiAgInJlY2FsbCIsDQogICJyZWNlaXZlIiwNCiAgInJlY2lwZSIsDQogICJyZWNvcmQiLA0KICAicmVjeWNsZSIsDQogICJyZWR1Y2UiLA0KICAicmVmbGVjdCIsDQogICJyZWZvcm0iLA0KICAicmVmdXNlIiwNCiAgInJlZ2lvbiIsDQogICJyZWdyZXQiLA0KICAicmVndWxhciIsDQogICJyZWplY3QiLA0KICAicmVsYXgiLA0KICAicmVsZWFzZSIsDQogICJyZWxpZWYiLA0KICAicmVseSIsDQogICJyZW1haW4iLA0KICAicmVtZW1iZXIiLA0KICAicmVtaW5kIiwNCiAgInJlbW92ZSIsDQogICJyZW5kZXIiLA0KICAicmVuZXciLA0KICAicmVudCIsDQogICJyZW9wZW4iLA0KICAicmVwYWlyIiwNCiAgInJlcGVhdCIsDQogICJyZXBsYWNlIiwNCiAgInJlcG9ydCIsDQogICJyZXF1aXJlIiwNCiAgInJlc2N1ZSIsDQogICJyZXNlbWJsZSIsDQogICJyZXNpc3QiLA0KICAicmVzb3VyY2UiLA0KICAicmVzcG9uc2UiLA0KICAicmVzdWx0IiwNCiAgInJldGlyZSIsDQogICJyZXRyZWF0IiwNCiAgInJldHVybiIsDQogICJyZXVuaW9uIiwNCiAgInJldmVhbCIsDQogICJyZXZpZXciLA0KICAicmV3YXJkIiwNCiAgInJoeXRobSIsDQogICJyaWIiLA0KICAicmliYm9uIiwNCiAgInJpY2UiLA0KICAicmljaCIsDQogICJyaWRlIiwNCiAgInJpZGdlIiwNCiAgInJpZmxlIiwNCiAgInJpZ2h0IiwNCiAgInJpZ2lkIiwNCiAgInJpbmciLA0KICAicmlvdCIsDQogICJyaXBwbGUiLA0KICAicmlzayIsDQogICJyaXR1YWwiLA0KICAicml2YWwiLA0KICAicml2ZXIiLA0KICAicm9hZCIsDQogICJyb2FzdCIsDQogICJyb2JvdCIsDQogICJyb2J1c3QiLA0KICAicm9ja2V0IiwNCiAgInJvbWFuY2UiLA0KICAicm9vZiIsDQogICJyb29raWUiLA0KICAicm9vbSIsDQogICJyb3NlIiwNCiAgInJvdGF0ZSIsDQogICJyb3VnaCIsDQogICJyb3VuZCIsDQogICJyb3V0ZSIsDQogICJyb3lhbCIsDQogICJydWJiZXIiLA0KICAicnVkZSIsDQogICJydWciLA0KICAicnVsZSIsDQogICJydW4iLA0KICAicnVud2F5IiwNCiAgInJ1cmFsIiwNCiAgInNhZCIsDQogICJzYWRkbGUiLA0KICAic2FkbmVzcyIsDQogICJzYWZlIiwNCiAgInNhaWwiLA0KICAic2FsYWQiLA0KICAic2FsbW9uIiwNCiAgInNhbG9uIiwNCiAgInNhbHQiLA0KICAic2FsdXRlIiwNCiAgInNhbWUiLA0KICAic2FtcGxlIiwNCiAgInNhbmQiLA0KICAic2F0aXNmeSIsDQogICJzYXRvc2hpIiwNCiAgInNhdWNlIiwNCiAgInNhdXNhZ2UiLA0KICAic2F2ZSIsDQogICJzYXkiLA0KICAic2NhbGUiLA0KICAic2NhbiIsDQogICJzY2FyZSIsDQogICJzY2F0dGVyIiwNCiAgInNjZW5lIiwNCiAgInNjaGVtZSIsDQogICJzY2hvb2wiLA0KICAic2NpZW5jZSIsDQogICJzY2lzc29ycyIsDQogICJzY29ycGlvbiIsDQogICJzY291dCIsDQogICJzY3JhcCIsDQogICJzY3JlZW4iLA0KICAic2NyaXB0IiwNCiAgInNjcnViIiwNCiAgInNlYSIsDQogICJzZWFyY2giLA0KICAic2Vhc29uIiwNCiAgInNlYXQiLA0KICAic2Vjb25kIiwNCiAgInNlY3JldCIsDQogICJzZWN0aW9uIiwNCiAgInNlY3VyaXR5IiwNCiAgInNlZWQiLA0KICAic2VlayIsDQogICJzZWdtZW50IiwNCiAgInNlbGVjdCIsDQogICJzZWxsIiwNCiAgInNlbWluYXIiLA0KICAic2VuaW9yIiwNCiAgInNlbnNlIiwNCiAgInNlbnRlbmNlIiwNCiAgInNlcmllcyIsDQogICJzZXJ2aWNlIiwNCiAgInNlc3Npb24iLA0KICAic2V0dGxlIiwNCiAgInNldHVwIiwNCiAgInNldmVuIiwNCiAgInNoYWRvdyIsDQogICJzaGFmdCIsDQogICJzaGFsbG93IiwNCiAgInNoYXJlIiwNCiAgInNoZWQiLA0KICAic2hlbGwiLA0KICAic2hlcmlmZiIsDQogICJzaGllbGQiLA0KICAic2hpZnQiLA0KICAic2hpbmUiLA0KICAic2hpcCIsDQogICJzaGl2ZXIiLA0KICAic2hvY2siLA0KICAic2hvZSIsDQogICJzaG9vdCIsDQogICJzaG9wIiwNCiAgInNob3J0IiwNCiAgInNob3VsZGVyIiwNCiAgInNob3ZlIiwNCiAgInNocmltcCIsDQogICJzaHJ1ZyIsDQogICJzaHVmZmxlIiwNCiAgInNoeSIsDQogICJzaWJsaW5nIiwNCiAgInNpY2siLA0KICAic2lkZSIsDQogICJzaWVnZSIsDQogICJzaWdodCIsDQogICJzaWduIiwNCiAgInNpbGVudCIsDQogICJzaWxrIiwNCiAgInNpbGx5IiwNCiAgInNpbHZlciIsDQogICJzaW1pbGFyIiwNCiAgInNpbXBsZSIsDQogICJzaW5jZSIsDQogICJzaW5nIiwNCiAgInNpcmVuIiwNCiAgInNpc3RlciIsDQogICJzaXR1YXRlIiwNCiAgInNpeCIsDQogICJzaXplIiwNCiAgInNrYXRlIiwNCiAgInNrZXRjaCIsDQogICJza2kiLA0KICAic2tpbGwiLA0KICAic2tpbiIsDQogICJza2lydCIsDQogICJza3VsbCIsDQogICJzbGFiIiwNCiAgInNsYW0iLA0KICAic2xlZXAiLA0KICAic2xlbmRlciIsDQogICJzbGljZSIsDQogICJzbGlkZSIsDQogICJzbGlnaHQiLA0KICAic2xpbSIsDQogICJzbG9nYW4iLA0KICAic2xvdCIsDQogICJzbG93IiwNCiAgInNsdXNoIiwNCiAgInNtYWxsIiwNCiAgInNtYXJ0IiwNCiAgInNtaWxlIiwNCiAgInNtb2tlIiwNCiAgInNtb290aCIsDQogICJzbmFjayIsDQogICJzbmFrZSIsDQogICJzbmFwIiwNCiAgInNuaWZmIiwNCiAgInNub3ciLA0KICAic29hcCIsDQogICJzb2NjZXIiLA0KICAic29jaWFsIiwNCiAgInNvY2siLA0KICAic29kYSIsDQogICJzb2Z0IiwNCiAgInNvbGFyIiwNCiAgInNvbGRpZXIiLA0KICAic29saWQiLA0KICAic29sdXRpb24iLA0KICAic29sdmUiLA0KICAic29tZW9uZSIsDQogICJzb25nIiwNCiAgInNvb24iLA0KICAic29ycnkiLA0KICAic29ydCIsDQogICJzb3VsIiwNCiAgInNvdW5kIiwNCiAgInNvdXAiLA0KICAic291cmNlIiwNCiAgInNvdXRoIiwNCiAgInNwYWNlIiwNCiAgInNwYXJlIiwNCiAgInNwYXRpYWwiLA0KICAic3Bhd24iLA0KICAic3BlYWsiLA0KICAic3BlY2lhbCIsDQogICJzcGVlZCIsDQogICJzcGVsbCIsDQogICJzcGVuZCIsDQogICJzcGhlcmUiLA0KICAic3BpY2UiLA0KICAic3BpZGVyIiwNCiAgInNwaWtlIiwNCiAgInNwaW4iLA0KICAic3Bpcml0IiwNCiAgInNwbGl0IiwNCiAgInNwb2lsIiwNCiAgInNwb25zb3IiLA0KICAic3Bvb24iLA0KICAic3BvcnQiLA0KICAic3BvdCIsDQogICJzcHJheSIsDQogICJzcHJlYWQiLA0KICAic3ByaW5nIiwNCiAgInNweSIsDQogICJzcXVhcmUiLA0KICAic3F1ZWV6ZSIsDQogICJzcXVpcnJlbCIsDQogICJzdGFibGUiLA0KICAic3RhZGl1bSIsDQogICJzdGFmZiIsDQogICJzdGFnZSIsDQogICJzdGFpcnMiLA0KICAic3RhbXAiLA0KICAic3RhbmQiLA0KICAic3RhcnQiLA0KICAic3RhdGUiLA0KICAic3RheSIsDQogICJzdGVhayIsDQogICJzdGVlbCIsDQogICJzdGVtIiwNCiAgInN0ZXAiLA0KICAic3RlcmVvIiwNCiAgInN0aWNrIiwNCiAgInN0aWxsIiwNCiAgInN0aW5nIiwNCiAgInN0b2NrIiwNCiAgInN0b21hY2giLA0KICAic3RvbmUiLA0KICAic3Rvb2wiLA0KICAic3RvcnkiLA0KICAic3RvdmUiLA0KICAic3RyYXRlZ3kiLA0KICAic3RyZWV0IiwNCiAgInN0cmlrZSIsDQogICJzdHJvbmciLA0KICAic3RydWdnbGUiLA0KICAic3R1ZGVudCIsDQogICJzdHVmZiIsDQogICJzdHVtYmxlIiwNCiAgInN0eWxlIiwNCiAgInN1YmplY3QiLA0KICAic3VibWl0IiwNCiAgInN1YndheSIsDQogICJzdWNjZXNzIiwNCiAgInN1Y2giLA0KICAic3VkZGVuIiwNCiAgInN1ZmZlciIsDQogICJzdWdhciIsDQogICJzdWdnZXN0IiwNCiAgInN1aXQiLA0KICAic3VtbWVyIiwNCiAgInN1biIsDQogICJzdW5ueSIsDQogICJzdW5zZXQiLA0KICAic3VwZXIiLA0KICAic3VwcGx5IiwNCiAgInN1cHJlbWUiLA0KICAic3VyZSIsDQogICJzdXJmYWNlIiwNCiAgInN1cmdlIiwNCiAgInN1cnByaXNlIiwNCiAgInN1cnJvdW5kIiwNCiAgInN1cnZleSIsDQogICJzdXNwZWN0IiwNCiAgInN1c3RhaW4iLA0KICAic3dhbGxvdyIsDQogICJzd2FtcCIsDQogICJzd2FwIiwNCiAgInN3YXJtIiwNCiAgInN3ZWFyIiwNCiAgInN3ZWV0IiwNCiAgInN3aWZ0IiwNCiAgInN3aW0iLA0KICAic3dpbmciLA0KICAic3dpdGNoIiwNCiAgInN3b3JkIiwNCiAgInN5bWJvbCIsDQogICJzeW1wdG9tIiwNCiAgInN5cnVwIiwNCiAgInN5c3RlbSIsDQogICJ0YWJsZSIsDQogICJ0YWNrbGUiLA0KICAidGFnIiwNCiAgInRhaWwiLA0KICAidGFsZW50IiwNCiAgInRhbGsiLA0KICAidGFuayIsDQogICJ0YXBlIiwNCiAgInRhcmdldCIsDQogICJ0YXNrIiwNCiAgInRhc3RlIiwNCiAgInRhdHRvbyIsDQogICJ0YXhpIiwNCiAgInRlYWNoIiwNCiAgInRlYW0iLA0KICAidGVsbCIsDQogICJ0ZW4iLA0KICAidGVuYW50IiwNCiAgInRlbm5pcyIsDQogICJ0ZW50IiwNCiAgInRlcm0iLA0KICAidGVzdCIsDQogICJ0ZXh0IiwNCiAgInRoYW5rIiwNCiAgInRoYXQiLA0KICAidGhlbWUiLA0KICAidGhlbiIsDQogICJ0aGVvcnkiLA0KICAidGhlcmUiLA0KICAidGhleSIsDQogICJ0aGluZyIsDQogICJ0aGlzIiwNCiAgInRob3VnaHQiLA0KICAidGhyZWUiLA0KICAidGhyaXZlIiwNCiAgInRocm93IiwNCiAgInRodW1iIiwNCiAgInRodW5kZXIiLA0KICAidGlja2V0IiwNCiAgInRpZGUiLA0KICAidGlnZXIiLA0KICAidGlsdCIsDQogICJ0aW1iZXIiLA0KICAidGltZSIsDQogICJ0aW55IiwNCiAgInRpcCIsDQogICJ0aXJlZCIsDQogICJ0aXNzdWUiLA0KICAidGl0bGUiLA0KICAidG9hc3QiLA0KICAidG9iYWNjbyIsDQogICJ0b2RheSIsDQogICJ0b2RkbGVyIiwNCiAgInRvZSIsDQogICJ0b2dldGhlciIsDQogICJ0b2lsZXQiLA0KICAidG9rZW4iLA0KICAidG9tYXRvIiwNCiAgInRvbW9ycm93IiwNCiAgInRvbmUiLA0KICAidG9uZ3VlIiwNCiAgInRvbmlnaHQiLA0KICAidG9vbCIsDQogICJ0b290aCIsDQogICJ0b3AiLA0KICAidG9waWMiLA0KICAidG9wcGxlIiwNCiAgInRvcmNoIiwNCiAgInRvcm5hZG8iLA0KICAidG9ydG9pc2UiLA0KICAidG9zcyIsDQogICJ0b3RhbCIsDQogICJ0b3VyaXN0IiwNCiAgInRvd2FyZCIsDQogICJ0b3dlciIsDQogICJ0b3duIiwNCiAgInRveSIsDQogICJ0cmFjayIsDQogICJ0cmFkZSIsDQogICJ0cmFmZmljIiwNCiAgInRyYWdpYyIsDQogICJ0cmFpbiIsDQogICJ0cmFuc2ZlciIsDQogICJ0cmFwIiwNCiAgInRyYXNoIiwNCiAgInRyYXZlbCIsDQogICJ0cmF5IiwNCiAgInRyZWF0IiwNCiAgInRyZWUiLA0KICAidHJlbmQiLA0KICAidHJpYWwiLA0KICAidHJpYmUiLA0KICAidHJpY2siLA0KICAidHJpZ2dlciIsDQogICJ0cmltIiwNCiAgInRyaXAiLA0KICAidHJvcGh5IiwNCiAgInRyb3VibGUiLA0KICAidHJ1Y2siLA0KICAidHJ1ZSIsDQogICJ0cnVseSIsDQogICJ0cnVtcGV0IiwNCiAgInRydXN0IiwNCiAgInRydXRoIiwNCiAgInRyeSIsDQogICJ0dWJlIiwNCiAgInR1aXRpb24iLA0KICAidHVtYmxlIiwNCiAgInR1bmEiLA0KICAidHVubmVsIiwNCiAgInR1cmtleSIsDQogICJ0dXJuIiwNCiAgInR1cnRsZSIsDQogICJ0d2VsdmUiLA0KICAidHdlbnR5IiwNCiAgInR3aWNlIiwNCiAgInR3aW4iLA0KICAidHdpc3QiLA0KICAidHdvIiwNCiAgInR5cGUiLA0KICAidHlwaWNhbCIsDQogICJ1Z2x5IiwNCiAgInVtYnJlbGxhIiwNCiAgInVuYWJsZSIsDQogICJ1bmF3YXJlIiwNCiAgInVuY2xlIiwNCiAgInVuY292ZXIiLA0KICAidW5kZXIiLA0KICAidW5kbyIsDQogICJ1bmZhaXIiLA0KICAidW5mb2xkIiwNCiAgInVuaGFwcHkiLA0KICAidW5pZm9ybSIsDQogICJ1bmlxdWUiLA0KICAidW5pdCIsDQogICJ1bml2ZXJzZSIsDQogICJ1bmtub3duIiwNCiAgInVubG9jayIsDQogICJ1bnRpbCIsDQogICJ1bnVzdWFsIiwNCiAgInVudmVpbCIsDQogICJ1cGRhdGUiLA0KICAidXBncmFkZSIsDQogICJ1cGhvbGQiLA0KICAidXBvbiIsDQogICJ1cHBlciIsDQogICJ1cHNldCIsDQogICJ1cmJhbiIsDQogICJ1cmdlIiwNCiAgInVzYWdlIiwNCiAgInVzZSIsDQogICJ1c2VkIiwNCiAgInVzZWZ1bCIsDQogICJ1c2VsZXNzIiwNCiAgInVzdWFsIiwNCiAgInV0aWxpdHkiLA0KICAidmFjYW50IiwNCiAgInZhY3V1bSIsDQogICJ2YWd1ZSIsDQogICJ2YWxpZCIsDQogICJ2YWxsZXkiLA0KICAidmFsdmUiLA0KICAidmFuIiwNCiAgInZhbmlzaCIsDQogICJ2YXBvciIsDQogICJ2YXJpb3VzIiwNCiAgInZhc3QiLA0KICAidmF1bHQiLA0KICAidmVoaWNsZSIsDQogICJ2ZWx2ZXQiLA0KICAidmVuZG9yIiwNCiAgInZlbnR1cmUiLA0KICAidmVudWUiLA0KICAidmVyYiIsDQogICJ2ZXJpZnkiLA0KICAidmVyc2lvbiIsDQogICJ2ZXJ5IiwNCiAgInZlc3NlbCIsDQogICJ2ZXRlcmFuIiwNCiAgInZpYWJsZSIsDQogICJ2aWJyYW50IiwNCiAgInZpY2lvdXMiLA0KICAidmljdG9yeSIsDQogICJ2aWRlbyIsDQogICJ2aWV3IiwNCiAgInZpbGxhZ2UiLA0KICAidmludGFnZSIsDQogICJ2aW9saW4iLA0KICAidmlydHVhbCIsDQogICJ2aXJ1cyIsDQogICJ2aXNhIiwNCiAgInZpc2l0IiwNCiAgInZpc3VhbCIsDQogICJ2aXRhbCIsDQogICJ2aXZpZCIsDQogICJ2b2NhbCIsDQogICJ2b2ljZSIsDQogICJ2b2lkIiwNCiAgInZvbGNhbm8iLA0KICAidm9sdW1lIiwNCiAgInZvdGUiLA0KICAidm95YWdlIiwNCiAgIndhZ2UiLA0KICAid2Fnb24iLA0KICAid2FpdCIsDQogICJ3YWxrIiwNCiAgIndhbGwiLA0KICAid2FsbnV0IiwNCiAgIndhbnQiLA0KICAid2FyZmFyZSIsDQogICJ3YXJtIiwNCiAgIndhcnJpb3IiLA0KICAid2FzaCIsDQogICJ3YXNwIiwNCiAgIndhc3RlIiwNCiAgIndhdGVyIiwNCiAgIndhdmUiLA0KICAid2F5IiwNCiAgIndlYWx0aCIsDQogICJ3ZWFwb24iLA0KICAid2VhciIsDQogICJ3ZWFzZWwiLA0KICAid2VhdGhlciIsDQogICJ3ZWIiLA0KICAid2VkZGluZyIsDQogICJ3ZWVrZW5kIiwNCiAgIndlaXJkIiwNCiAgIndlbGNvbWUiLA0KICAid2VzdCIsDQogICJ3ZXQiLA0KICAid2hhbGUiLA0KICAid2hhdCIsDQogICJ3aGVhdCIsDQogICJ3aGVlbCIsDQogICJ3aGVuIiwNCiAgIndoZXJlIiwNCiAgIndoaXAiLA0KICAid2hpc3BlciIsDQogICJ3aWRlIiwNCiAgIndpZHRoIiwNCiAgIndpZmUiLA0KICAid2lsZCIsDQogICJ3aWxsIiwNCiAgIndpbiIsDQogICJ3aW5kb3ciLA0KICAid2luZSIsDQogICJ3aW5nIiwNCiAgIndpbmsiLA0KICAid2lubmVyIiwNCiAgIndpbnRlciIsDQogICJ3aXJlIiwNCiAgIndpc2RvbSIsDQogICJ3aXNlIiwNCiAgIndpc2giLA0KICAid2l0bmVzcyIsDQogICJ3b2xmIiwNCiAgIndvbWFuIiwNCiAgIndvbmRlciIsDQogICJ3b29kIiwNCiAgIndvb2wiLA0KICAid29yZCIsDQogICJ3b3JrIiwNCiAgIndvcmxkIiwNCiAgIndvcnJ5IiwNCiAgIndvcnRoIiwNCiAgIndyYXAiLA0KICAid3JlY2siLA0KICAid3Jlc3RsZSIsDQogICJ3cmlzdCIsDQogICJ3cml0ZSIsDQogICJ3cm9uZyIsDQogICJ5YXJkIiwNCiAgInllYXIiLA0KICAieWVsbG93IiwNCiAgInlvdSIsDQogICJ5b3VuZyIsDQogICJ5b3V0aCIsDQogICJ6ZWJyYSIsDQogICJ6ZXJvIiwNCiAgInpvbmUiLA0KICAiem9vIg0KXQ0KDQp9LHt9XSw0MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQovLyBSZWZlcmVuY2UgaHR0cHM6Ly9naXRodWIuY29tL2JpdGNvaW4vYmlwcy9ibG9iL21hc3Rlci9iaXAtMDA2Ni5tZWRpYXdpa2kNCi8vIEZvcm1hdDogMHgzMCBbdG90YWwtbGVuZ3RoXSAweDAyIFtSLWxlbmd0aF0gW1JdIDB4MDIgW1MtbGVuZ3RoXSBbU10NCi8vIE5PVEU6IFNJR0hBU0ggYnl0ZSBpZ25vcmVkIEFORCByZXN0cmljdGVkLCB0cnVuY2F0ZSBiZWZvcmUgdXNlDQoNCmZ1bmN0aW9uIGNoZWNrIChidWZmZXIpIHsNCiAgaWYgKGJ1ZmZlci5sZW5ndGggPCA4KSByZXR1cm4gZmFsc2UNCiAgaWYgKGJ1ZmZlci5sZW5ndGggPiA3MikgcmV0dXJuIGZhbHNlDQogIGlmIChidWZmZXJbMF0gIT09IDB4MzApIHJldHVybiBmYWxzZQ0KICBpZiAoYnVmZmVyWzFdICE9PSBidWZmZXIubGVuZ3RoIC0gMikgcmV0dXJuIGZhbHNlDQogIGlmIChidWZmZXJbMl0gIT09IDB4MDIpIHJldHVybiBmYWxzZQ0KDQogIHZhciBsZW5SID0gYnVmZmVyWzNdDQogIGlmIChsZW5SID09PSAwKSByZXR1cm4gZmFsc2UNCiAgaWYgKDUgKyBsZW5SID49IGJ1ZmZlci5sZW5ndGgpIHJldHVybiBmYWxzZQ0KICBpZiAoYnVmZmVyWzQgKyBsZW5SXSAhPT0gMHgwMikgcmV0dXJuIGZhbHNlDQoNCiAgdmFyIGxlblMgPSBidWZmZXJbNSArIGxlblJdDQogIGlmIChsZW5TID09PSAwKSByZXR1cm4gZmFsc2UNCiAgaWYgKCg2ICsgbGVuUiArIGxlblMpICE9PSBidWZmZXIubGVuZ3RoKSByZXR1cm4gZmFsc2UNCg0KICBpZiAoYnVmZmVyWzRdICYgMHg4MCkgcmV0dXJuIGZhbHNlDQogIGlmIChsZW5SID4gMSAmJiAoYnVmZmVyWzRdID09PSAweDAwKSAmJiAhKGJ1ZmZlcls1XSAmIDB4ODApKSByZXR1cm4gZmFsc2UNCg0KICBpZiAoYnVmZmVyW2xlblIgKyA2XSAmIDB4ODApIHJldHVybiBmYWxzZQ0KICBpZiAobGVuUyA+IDEgJiYgKGJ1ZmZlcltsZW5SICsgNl0gPT09IDB4MDApICYmICEoYnVmZmVyW2xlblIgKyA3XSAmIDB4ODApKSByZXR1cm4gZmFsc2UNCiAgcmV0dXJuIHRydWUNCn0NCg0KZnVuY3Rpb24gZGVjb2RlIChidWZmZXIpIHsNCiAgaWYgKGJ1ZmZlci5sZW5ndGggPCA4KSB0aHJvdyBuZXcgRXJyb3IoJ0RFUiBzZXF1ZW5jZSBsZW5ndGggaXMgdG9vIHNob3J0JykNCiAgaWYgKGJ1ZmZlci5sZW5ndGggPiA3MikgdGhyb3cgbmV3IEVycm9yKCdERVIgc2VxdWVuY2UgbGVuZ3RoIGlzIHRvbyBsb25nJykNCiAgaWYgKGJ1ZmZlclswXSAhPT0gMHgzMCkgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBERVIgc2VxdWVuY2UnKQ0KICBpZiAoYnVmZmVyWzFdICE9PSBidWZmZXIubGVuZ3RoIC0gMikgdGhyb3cgbmV3IEVycm9yKCdERVIgc2VxdWVuY2UgbGVuZ3RoIGlzIGludmFsaWQnKQ0KICBpZiAoYnVmZmVyWzJdICE9PSAweDAyKSB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIERFUiBpbnRlZ2VyJykNCg0KICB2YXIgbGVuUiA9IGJ1ZmZlclszXQ0KICBpZiAobGVuUiA9PT0gMCkgdGhyb3cgbmV3IEVycm9yKCdSIGxlbmd0aCBpcyB6ZXJvJykNCiAgaWYgKDUgKyBsZW5SID49IGJ1ZmZlci5sZW5ndGgpIHRocm93IG5ldyBFcnJvcignUiBsZW5ndGggaXMgdG9vIGxvbmcnKQ0KICBpZiAoYnVmZmVyWzQgKyBsZW5SXSAhPT0gMHgwMikgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBERVIgaW50ZWdlciAoMiknKQ0KDQogIHZhciBsZW5TID0gYnVmZmVyWzUgKyBsZW5SXQ0KICBpZiAobGVuUyA9PT0gMCkgdGhyb3cgbmV3IEVycm9yKCdTIGxlbmd0aCBpcyB6ZXJvJykNCiAgaWYgKCg2ICsgbGVuUiArIGxlblMpICE9PSBidWZmZXIubGVuZ3RoKSB0aHJvdyBuZXcgRXJyb3IoJ1MgbGVuZ3RoIGlzIGludmFsaWQnKQ0KDQogIGlmIChidWZmZXJbNF0gJiAweDgwKSB0aHJvdyBuZXcgRXJyb3IoJ1IgdmFsdWUgaXMgbmVnYXRpdmUnKQ0KICBpZiAobGVuUiA+IDEgJiYgKGJ1ZmZlcls0XSA9PT0gMHgwMCkgJiYgIShidWZmZXJbNV0gJiAweDgwKSkgdGhyb3cgbmV3IEVycm9yKCdSIHZhbHVlIGV4Y2Vzc2l2ZWx5IHBhZGRlZCcpDQoNCiAgaWYgKGJ1ZmZlcltsZW5SICsgNl0gJiAweDgwKSB0aHJvdyBuZXcgRXJyb3IoJ1MgdmFsdWUgaXMgbmVnYXRpdmUnKQ0KICBpZiAobGVuUyA+IDEgJiYgKGJ1ZmZlcltsZW5SICsgNl0gPT09IDB4MDApICYmICEoYnVmZmVyW2xlblIgKyA3XSAmIDB4ODApKSB0aHJvdyBuZXcgRXJyb3IoJ1MgdmFsdWUgZXhjZXNzaXZlbHkgcGFkZGVkJykNCg0KICAvLyBub24tQklQNjYgLSBleHRyYWN0IFIsIFMgdmFsdWVzDQogIHJldHVybiB7DQogICAgcjogYnVmZmVyLnNsaWNlKDQsIDQgKyBsZW5SKSwNCiAgICBzOiBidWZmZXIuc2xpY2UoNiArIGxlblIpDQogIH0NCn0NCg0KLyoNCiAqIEV4cGVjdHMgciBhbmQgcyB0byBiZSBwb3NpdGl2ZSBERVIgaW50ZWdlcnMuDQogKg0KICogVGhlIERFUiBmb3JtYXQgdXNlcyB0aGUgbW9zdCBzaWduaWZpY2FudCBiaXQgYXMgYSBzaWduIGJpdCAoJiAweDgwKS4NCiAqIElmIHRoZSBzaWduaWZpY2FudCBiaXQgaXMgc2V0IEFORCB0aGUgaW50ZWdlciBpcyBwb3NpdGl2ZSwgYSAweDAwIGlzIHByZXBlbmRlZC4NCiAqDQogKiBFeGFtcGxlczoNCiAqDQogKiAgICAgIDAgPT4gICAgIDB4MDANCiAqICAgICAgMSA9PiAgICAgMHgwMQ0KICogICAgIC0xID0+ICAgICAweGZmDQogKiAgICAxMjcgPT4gICAgIDB4N2YNCiAqICAgLTEyNyA9PiAgICAgMHg4MQ0KICogICAgMTI4ID0+ICAgMHgwMDgwDQogKiAgIC0xMjggPT4gICAgIDB4ODANCiAqICAgIDI1NSA9PiAgIDB4MDBmZg0KICogICAtMjU1ID0+ICAgMHhmZjAxDQogKiAgMTYzMDAgPT4gICAweDNmYWMNCiAqIC0xNjMwMCA9PiAgIDB4YzA1NA0KICogIDYyMzAwID0+IDB4MDBmMzVjDQogKiAtNjIzMDAgPT4gMHhmZjBjYTQNCiovDQpmdW5jdGlvbiBlbmNvZGUgKHIsIHMpIHsNCiAgdmFyIGxlblIgPSByLmxlbmd0aA0KICB2YXIgbGVuUyA9IHMubGVuZ3RoDQogIGlmIChsZW5SID09PSAwKSB0aHJvdyBuZXcgRXJyb3IoJ1IgbGVuZ3RoIGlzIHplcm8nKQ0KICBpZiAobGVuUyA9PT0gMCkgdGhyb3cgbmV3IEVycm9yKCdTIGxlbmd0aCBpcyB6ZXJvJykNCiAgaWYgKGxlblIgPiAzMykgdGhyb3cgbmV3IEVycm9yKCdSIGxlbmd0aCBpcyB0b28gbG9uZycpDQogIGlmIChsZW5TID4gMzMpIHRocm93IG5ldyBFcnJvcignUyBsZW5ndGggaXMgdG9vIGxvbmcnKQ0KICBpZiAoclswXSAmIDB4ODApIHRocm93IG5ldyBFcnJvcignUiB2YWx1ZSBpcyBuZWdhdGl2ZScpDQogIGlmIChzWzBdICYgMHg4MCkgdGhyb3cgbmV3IEVycm9yKCdTIHZhbHVlIGlzIG5lZ2F0aXZlJykNCiAgaWYgKGxlblIgPiAxICYmIChyWzBdID09PSAweDAwKSAmJiAhKHJbMV0gJiAweDgwKSkgdGhyb3cgbmV3IEVycm9yKCdSIHZhbHVlIGV4Y2Vzc2l2ZWx5IHBhZGRlZCcpDQogIGlmIChsZW5TID4gMSAmJiAoc1swXSA9PT0gMHgwMCkgJiYgIShzWzFdICYgMHg4MCkpIHRocm93IG5ldyBFcnJvcignUyB2YWx1ZSBleGNlc3NpdmVseSBwYWRkZWQnKQ0KDQogIHZhciBzaWduYXR1cmUgPSBuZXcgQnVmZmVyKDYgKyBsZW5SICsgbGVuUykNCg0KICAvLyAweDMwIFt0b3RhbC1sZW5ndGhdIDB4MDIgW1ItbGVuZ3RoXSBbUl0gMHgwMiBbUy1sZW5ndGhdIFtTXQ0KICBzaWduYXR1cmVbMF0gPSAweDMwDQogIHNpZ25hdHVyZVsxXSA9IHNpZ25hdHVyZS5sZW5ndGggLSAyDQogIHNpZ25hdHVyZVsyXSA9IDB4MDINCiAgc2lnbmF0dXJlWzNdID0gci5sZW5ndGgNCiAgci5jb3B5KHNpZ25hdHVyZSwgNCkNCiAgc2lnbmF0dXJlWzQgKyBsZW5SXSA9IDB4MDINCiAgc2lnbmF0dXJlWzUgKyBsZW5SXSA9IHMubGVuZ3RoDQogIHMuY29weShzaWduYXR1cmUsIDYgKyBsZW5SKQ0KDQogIHJldHVybiBzaWduYXR1cmUNCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSB7DQogIGNoZWNrOiBjaGVjaywNCiAgZGVjb2RlOiBkZWNvZGUsDQogIGVuY29kZTogZW5jb2RlDQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiYnVmZmVyIjo5M31dLDQyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCnZhciBiczU4Y2hlY2sgPSByZXF1aXJlKCdiczU4Y2hlY2snKQ0KdmFyIGJzY3JpcHQgPSByZXF1aXJlKCcuL3NjcmlwdCcpDQp2YXIgbmV0d29ya3MgPSByZXF1aXJlKCcuL25ldHdvcmtzJykNCnZhciB0eXBlZm9yY2UgPSByZXF1aXJlKCd0eXBlZm9yY2UnKQ0KdmFyIHR5cGVzID0gcmVxdWlyZSgnLi90eXBlcycpDQoNCmZ1bmN0aW9uIGZyb21CYXNlNThDaGVjayAoYWRkcmVzcykgew0KICB2YXIgcGF5bG9hZCA9IGJzNThjaGVjay5kZWNvZGUoYWRkcmVzcykNCiAgaWYgKHBheWxvYWQubGVuZ3RoIDwgMjEpIHRocm93IG5ldyBUeXBlRXJyb3IoYWRkcmVzcyArICcgaXMgdG9vIHNob3J0JykNCiAgaWYgKHBheWxvYWQubGVuZ3RoID4gMjEpIHRocm93IG5ldyBUeXBlRXJyb3IoYWRkcmVzcyArICcgaXMgdG9vIGxvbmcnKQ0KDQogIHZhciB2ZXJzaW9uID0gcGF5bG9hZFswXQ0KICB2YXIgaGFzaCA9IHBheWxvYWQuc2xpY2UoMSkNCg0KICByZXR1cm4geyBoYXNoOiBoYXNoLCB2ZXJzaW9uOiB2ZXJzaW9uIH0NCn0NCg0KZnVuY3Rpb24gZnJvbU91dHB1dFNjcmlwdCAoc2NyaXB0UHViS2V5LCBuZXR3b3JrKSB7DQogIG5ldHdvcmsgPSBuZXR3b3JrIHx8IG5ldHdvcmtzLmJpdGNvaW4NCg0KICBpZiAoYnNjcmlwdC5pc1B1YktleUhhc2hPdXRwdXQoc2NyaXB0UHViS2V5KSkgcmV0dXJuIHRvQmFzZTU4Q2hlY2soYnNjcmlwdC5jb21waWxlKHNjcmlwdFB1YktleSkuc2xpY2UoMywgMjMpLCBuZXR3b3JrLnB1YktleUhhc2gpDQogIGlmIChic2NyaXB0LmlzU2NyaXB0SGFzaE91dHB1dChzY3JpcHRQdWJLZXkpKSByZXR1cm4gdG9CYXNlNThDaGVjayhic2NyaXB0LmNvbXBpbGUoc2NyaXB0UHViS2V5KS5zbGljZSgyLCAyMiksIG5ldHdvcmsuc2NyaXB0SGFzaCkNCg0KICB0aHJvdyBuZXcgRXJyb3IoYnNjcmlwdC50b0FTTShzY3JpcHRQdWJLZXkpICsgJyBoYXMgbm8gbWF0Y2hpbmcgQWRkcmVzcycpDQp9DQoNCmZ1bmN0aW9uIHRvQmFzZTU4Q2hlY2sgKGhhc2gsIHZlcnNpb24pIHsNCiAgdHlwZWZvcmNlKHR5cGVzLnR1cGxlKHR5cGVzLkhhc2gxNjBiaXQsIHR5cGVzLlVJbnQ4KSwgYXJndW1lbnRzKQ0KDQogIHZhciBwYXlsb2FkID0gbmV3IEJ1ZmZlcigyMSkNCiAgcGF5bG9hZC53cml0ZVVJbnQ4KHZlcnNpb24sIDApDQogIGhhc2guY29weShwYXlsb2FkLCAxKQ0KDQogIHJldHVybiBiczU4Y2hlY2suZW5jb2RlKHBheWxvYWQpDQp9DQoNCmZ1bmN0aW9uIHRvT3V0cHV0U2NyaXB0IChhZGRyZXNzLCBuZXR3b3JrKSB7DQogIG5ldHdvcmsgPSBuZXR3b3JrIHx8IG5ldHdvcmtzLmJpdGNvaW4NCg0KICB2YXIgZGVjb2RlID0gZnJvbUJhc2U1OENoZWNrKGFkZHJlc3MpDQogIGlmIChkZWNvZGUudmVyc2lvbiA9PT0gbmV0d29yay5wdWJLZXlIYXNoKSByZXR1cm4gYnNjcmlwdC5wdWJLZXlIYXNoT3V0cHV0KGRlY29kZS5oYXNoKQ0KICBpZiAoZGVjb2RlLnZlcnNpb24gPT09IG5ldHdvcmsuc2NyaXB0SGFzaCkgcmV0dXJuIGJzY3JpcHQuc2NyaXB0SGFzaE91dHB1dChkZWNvZGUuaGFzaCkNCg0KICB0aHJvdyBuZXcgRXJyb3IoYWRkcmVzcyArICcgaGFzIG5vIG1hdGNoaW5nIFNjcmlwdCcpDQp9DQoNCm1vZHVsZS5leHBvcnRzID0gew0KICBmcm9tQmFzZTU4Q2hlY2s6IGZyb21CYXNlNThDaGVjaywNCiAgZnJvbU91dHB1dFNjcmlwdDogZnJvbU91dHB1dFNjcmlwdCwNCiAgdG9CYXNlNThDaGVjazogdG9CYXNlNThDaGVjaywNCiAgdG9PdXRwdXRTY3JpcHQ6IHRvT3V0cHV0U2NyaXB0DQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiLi9uZXR3b3JrcyI6NTIsIi4vc2NyaXB0Ijo1NCwiLi90eXBlcyI6NTgsImJzNThjaGVjayI6ODgsImJ1ZmZlciI6OTMsInR5cGVmb3JjZSI6NTgyfV0sNDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIGJ1ZmZlcnV0aWxzID0gcmVxdWlyZSgnLi9idWZmZXJ1dGlscycpDQp2YXIgYmNyeXB0byA9IHJlcXVpcmUoJy4vY3J5cHRvJykNCnZhciBjb21wYXJlID0gcmVxdWlyZSgnYnVmZmVyLWNvbXBhcmUnKQ0KDQp2YXIgVHJhbnNhY3Rpb24gPSByZXF1aXJlKCcuL3RyYW5zYWN0aW9uJykNCg0KZnVuY3Rpb24gQmxvY2sgKCkgew0KICB0aGlzLnZlcnNpb24gPSAxDQogIHRoaXMucHJldkhhc2ggPSBudWxsDQogIHRoaXMubWVya2xlUm9vdCA9IG51bGwNCiAgdGhpcy50aW1lc3RhbXAgPSAwDQogIHRoaXMuYml0cyA9IDANCiAgdGhpcy5ub25jZSA9IDANCn0NCg0KQmxvY2suZnJvbUJ1ZmZlciA9IGZ1bmN0aW9uIChidWZmZXIpIHsNCiAgaWYgKGJ1ZmZlci5sZW5ndGggPCA4MCkgdGhyb3cgbmV3IEVycm9yKCdCdWZmZXIgdG9vIHNtYWxsICg8IDgwIGJ5dGVzKScpDQoNCiAgdmFyIG9mZnNldCA9IDANCiAgZnVuY3Rpb24gcmVhZFNsaWNlIChuKSB7DQogICAgb2Zmc2V0ICs9IG4NCiAgICByZXR1cm4gYnVmZmVyLnNsaWNlKG9mZnNldCAtIG4sIG9mZnNldCkNCiAgfQ0KDQogIGZ1bmN0aW9uIHJlYWRVSW50MzIgKCkgew0KICAgIHZhciBpID0gYnVmZmVyLnJlYWRVSW50MzJMRShvZmZzZXQpDQogICAgb2Zmc2V0ICs9IDQNCiAgICByZXR1cm4gaQ0KICB9DQoNCiAgdmFyIGJsb2NrID0gbmV3IEJsb2NrKCkNCiAgYmxvY2sudmVyc2lvbiA9IHJlYWRVSW50MzIoKQ0KICBibG9jay5wcmV2SGFzaCA9IHJlYWRTbGljZSgzMikNCiAgYmxvY2subWVya2xlUm9vdCA9IHJlYWRTbGljZSgzMikNCiAgYmxvY2sudGltZXN0YW1wID0gcmVhZFVJbnQzMigpDQogIGJsb2NrLmJpdHMgPSByZWFkVUludDMyKCkNCiAgYmxvY2subm9uY2UgPSByZWFkVUludDMyKCkNCg0KICBpZiAoYnVmZmVyLmxlbmd0aCA9PT0gODApIHJldHVybiBibG9jaw0KDQogIGZ1bmN0aW9uIHJlYWRWYXJJbnQgKCkgew0KICAgIHZhciB2aSA9IGJ1ZmZlcnV0aWxzLnJlYWRWYXJJbnQoYnVmZmVyLCBvZmZzZXQpDQogICAgb2Zmc2V0ICs9IHZpLnNpemUNCiAgICByZXR1cm4gdmkubnVtYmVyDQogIH0NCg0KICBmdW5jdGlvbiByZWFkVHJhbnNhY3Rpb24gKCkgew0KICAgIHZhciB0eCA9IFRyYW5zYWN0aW9uLmZyb21CdWZmZXIoYnVmZmVyLnNsaWNlKG9mZnNldCksIHRydWUpDQoNCiAgICBvZmZzZXQgKz0gdHguYnl0ZUxlbmd0aCgpDQogICAgcmV0dXJuIHR4DQogIH0NCg0KICB2YXIgblRyYW5zYWN0aW9ucyA9IHJlYWRWYXJJbnQoKQ0KICBibG9jay50cmFuc2FjdGlvbnMgPSBbXQ0KDQogIGZvciAodmFyIGkgPSAwOyBpIDwgblRyYW5zYWN0aW9uczsgKytpKSB7DQogICAgdmFyIHR4ID0gcmVhZFRyYW5zYWN0aW9uKCkNCiAgICBibG9jay50cmFuc2FjdGlvbnMucHVzaCh0eCkNCiAgfQ0KDQogIHJldHVybiBibG9jaw0KfQ0KDQpCbG9jay5mcm9tSGV4ID0gZnVuY3Rpb24gKGhleCkgew0KICByZXR1cm4gQmxvY2suZnJvbUJ1ZmZlcihuZXcgQnVmZmVyKGhleCwgJ2hleCcpKQ0KfQ0KDQpCbG9jay5wcm90b3R5cGUuZ2V0SGFzaCA9IGZ1bmN0aW9uICgpIHsNCiAgcmV0dXJuIGJjcnlwdG8uaGFzaDI1Nih0aGlzLnRvQnVmZmVyKHRydWUpKQ0KfQ0KDQpCbG9jay5wcm90b3R5cGUuZ2V0SWQgPSBmdW5jdGlvbiAoKSB7DQogIHJldHVybiBbXS5yZXZlcnNlLmNhbGwodGhpcy5nZXRIYXNoKCkpLnRvU3RyaW5nKCdoZXgnKQ0KfQ0KDQpCbG9jay5wcm90b3R5cGUuZ2V0VVRDRGF0ZSA9IGZ1bmN0aW9uICgpIHsNCiAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgwKSAvLyBlcG9jaA0KICBkYXRlLnNldFVUQ1NlY29uZHModGhpcy50aW1lc3RhbXApDQoNCiAgcmV0dXJuIGRhdGUNCn0NCg0KQmxvY2sucHJvdG90eXBlLnRvQnVmZmVyID0gZnVuY3Rpb24gKGhlYWRlcnNPbmx5KSB7DQogIHZhciBidWZmZXIgPSBuZXcgQnVmZmVyKDgwKQ0KDQogIHZhciBvZmZzZXQgPSAwDQogIGZ1bmN0aW9uIHdyaXRlU2xpY2UgKHNsaWNlKSB7DQogICAgc2xpY2UuY29weShidWZmZXIsIG9mZnNldCkNCiAgICBvZmZzZXQgKz0gc2xpY2UubGVuZ3RoDQogIH0NCg0KICBmdW5jdGlvbiB3cml0ZVVJbnQzMiAoaSkgew0KICAgIGJ1ZmZlci53cml0ZVVJbnQzMkxFKGksIG9mZnNldCkNCiAgICBvZmZzZXQgKz0gNA0KICB9DQoNCiAgd3JpdGVVSW50MzIodGhpcy52ZXJzaW9uKQ0KICB3cml0ZVNsaWNlKHRoaXMucHJldkhhc2gpDQogIHdyaXRlU2xpY2UodGhpcy5tZXJrbGVSb290KQ0KICB3cml0ZVVJbnQzMih0aGlzLnRpbWVzdGFtcCkNCiAgd3JpdGVVSW50MzIodGhpcy5iaXRzKQ0KICB3cml0ZVVJbnQzMih0aGlzLm5vbmNlKQ0KDQogIGlmIChoZWFkZXJzT25seSB8fCAhdGhpcy50cmFuc2FjdGlvbnMpIHJldHVybiBidWZmZXINCg0KICB2YXIgdHhMZW5CdWZmZXIgPSBidWZmZXJ1dGlscy52YXJJbnRCdWZmZXIodGhpcy50cmFuc2FjdGlvbnMubGVuZ3RoKQ0KICB2YXIgdHhCdWZmZXJzID0gdGhpcy50cmFuc2FjdGlvbnMubWFwKGZ1bmN0aW9uICh0eCkgew0KICAgIHJldHVybiB0eC50b0J1ZmZlcigpDQogIH0pDQoNCiAgcmV0dXJuIEJ1ZmZlci5jb25jYXQoW2J1ZmZlciwgdHhMZW5CdWZmZXJdLmNvbmNhdCh0eEJ1ZmZlcnMpKQ0KfQ0KDQpCbG9jay5wcm90b3R5cGUudG9IZXggPSBmdW5jdGlvbiAoaGVhZGVyc09ubHkpIHsNCiAgcmV0dXJuIHRoaXMudG9CdWZmZXIoaGVhZGVyc09ubHkpLnRvU3RyaW5nKCdoZXgnKQ0KfQ0KDQpCbG9jay5jYWxjdWxhdGVUYXJnZXQgPSBmdW5jdGlvbiAoYml0cykgew0KICB2YXIgZXhwb25lbnQgPSAoKGJpdHMgJiAweGZmMDAwMDAwKSA+PiAyNCkgLSAzDQogIHZhciBtYW50aXNzYSA9IGJpdHMgJiAweDAwN2ZmZmZmDQogIHZhciBpID0gMzEgLSBleHBvbmVudA0KDQogIHZhciB0YXJnZXQgPSBuZXcgQnVmZmVyKDMyKQ0KICB0YXJnZXQuZmlsbCgwKQ0KDQogIHRhcmdldFtpXSA9IG1hbnRpc3NhICYgMHhmZg0KICB0YXJnZXRbaSAtIDFdID0gbWFudGlzc2EgPj4gOA0KICB0YXJnZXRbaSAtIDJdID0gbWFudGlzc2EgPj4gMTYNCiAgdGFyZ2V0W2kgLSAzXSA9IG1hbnRpc3NhID4+IDI0DQoNCiAgcmV0dXJuIHRhcmdldA0KfQ0KDQpCbG9jay5wcm90b3R5cGUuY2hlY2tQcm9vZk9mV29yayA9IGZ1bmN0aW9uICgpIHsNCiAgdmFyIGhhc2ggPSBbXS5yZXZlcnNlLmNhbGwodGhpcy5nZXRIYXNoKCkpDQogIHZhciB0YXJnZXQgPSBCbG9jay5jYWxjdWxhdGVUYXJnZXQodGhpcy5iaXRzKQ0KDQogIHJldHVybiBjb21wYXJlKGhhc2gsIHRhcmdldCkgPD0gMA0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IEJsb2NrDQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiLi9idWZmZXJ1dGlscyI6NDQsIi4vY3J5cHRvIjo0NSwiLi90cmFuc2FjdGlvbiI6NTYsImJ1ZmZlciI6OTMsImJ1ZmZlci1jb21wYXJlIjo4OX1dLDQ0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCnZhciBvcGNvZGVzID0gcmVxdWlyZSgnLi9vcGNvZGVzJykNCg0KLy8gaHR0cHM6Ly9naXRodWIuY29tL2Zlcm9zcy9idWZmZXIvYmxvYi9tYXN0ZXIvaW5kZXguanMjTDExMjcNCmZ1bmN0aW9uIHZlcmlmdWludCAodmFsdWUsIG1heCkgew0KICBpZiAodHlwZW9mIHZhbHVlICE9PSAnbnVtYmVyJykgdGhyb3cgbmV3IEVycm9yKCdjYW5ub3Qgd3JpdGUgYSBub24tbnVtYmVyIGFzIGEgbnVtYmVyJykNCiAgaWYgKHZhbHVlIDwgMCkgdGhyb3cgbmV3IEVycm9yKCdzcGVjaWZpZWQgYSBuZWdhdGl2ZSB2YWx1ZSBmb3Igd3JpdGluZyBhbiB1bnNpZ25lZCB2YWx1ZScpDQogIGlmICh2YWx1ZSA+IG1heCkgdGhyb3cgbmV3IEVycm9yKCd2YWx1ZSBpcyBsYXJnZXIgdGhhbiBtYXhpbXVtIHZhbHVlIGZvciB0eXBlJykNCiAgaWYgKE1hdGguZmxvb3IodmFsdWUpICE9PSB2YWx1ZSkgdGhyb3cgbmV3IEVycm9yKCd2YWx1ZSBoYXMgYSBmcmFjdGlvbmFsIGNvbXBvbmVudCcpDQp9DQoNCmZ1bmN0aW9uIHB1c2hEYXRhU2l6ZSAoaSkgew0KICByZXR1cm4gaSA8IG9wY29kZXMuT1BfUFVTSERBVEExID8gMQ0KICA6IGkgPCAweGZmID8gMg0KICA6IGkgPCAweGZmZmYgPyAzDQogIDogNQ0KfQ0KDQpmdW5jdGlvbiByZWFkUHVzaERhdGFJbnQgKGJ1ZmZlciwgb2Zmc2V0KSB7DQogIHZhciBvcGNvZGUgPSBidWZmZXIucmVhZFVJbnQ4KG9mZnNldCkNCiAgdmFyIG51bWJlciwgc2l6ZQ0KDQogIC8vIH42IGJpdA0KICBpZiAob3Bjb2RlIDwgb3Bjb2Rlcy5PUF9QVVNIREFUQTEpIHsNCiAgICBudW1iZXIgPSBvcGNvZGUNCiAgICBzaXplID0gMQ0KDQogIC8vIDggYml0DQogIH0gZWxzZSBpZiAob3Bjb2RlID09PSBvcGNvZGVzLk9QX1BVU0hEQVRBMSkgew0KICAgIGlmIChvZmZzZXQgKyAyID4gYnVmZmVyLmxlbmd0aCkgcmV0dXJuIG51bGwNCiAgICBudW1iZXIgPSBidWZmZXIucmVhZFVJbnQ4KG9mZnNldCArIDEpDQogICAgc2l6ZSA9IDINCg0KICAvLyAxNiBiaXQNCiAgfSBlbHNlIGlmIChvcGNvZGUgPT09IG9wY29kZXMuT1BfUFVTSERBVEEyKSB7DQogICAgaWYgKG9mZnNldCArIDMgPiBidWZmZXIubGVuZ3RoKSByZXR1cm4gbnVsbA0KICAgIG51bWJlciA9IGJ1ZmZlci5yZWFkVUludDE2TEUob2Zmc2V0ICsgMSkNCiAgICBzaXplID0gMw0KDQogIC8vIDMyIGJpdA0KICB9IGVsc2Ugew0KICAgIGlmIChvZmZzZXQgKyA1ID4gYnVmZmVyLmxlbmd0aCkgcmV0dXJuIG51bGwNCiAgICBpZiAob3Bjb2RlICE9PSBvcGNvZGVzLk9QX1BVU0hEQVRBNCkgdGhyb3cgbmV3IEVycm9yKCdVbmV4cGVjdGVkIG9wY29kZScpDQoNCiAgICBudW1iZXIgPSBidWZmZXIucmVhZFVJbnQzMkxFKG9mZnNldCArIDEpDQogICAgc2l6ZSA9IDUNCiAgfQ0KDQogIHJldHVybiB7DQogICAgb3Bjb2RlOiBvcGNvZGUsDQogICAgbnVtYmVyOiBudW1iZXIsDQogICAgc2l6ZTogc2l6ZQ0KICB9DQp9DQoNCmZ1bmN0aW9uIHJlYWRVSW50NjRMRSAoYnVmZmVyLCBvZmZzZXQpIHsNCiAgdmFyIGEgPSBidWZmZXIucmVhZFVJbnQzMkxFKG9mZnNldCkNCiAgdmFyIGIgPSBidWZmZXIucmVhZFVJbnQzMkxFKG9mZnNldCArIDQpDQogIGIgKj0gMHgxMDAwMDAwMDANCg0KICB2ZXJpZnVpbnQoYiArIGEsIDB4MDAxZmZmZmZmZmZmZmZmZikNCg0KICByZXR1cm4gYiArIGENCn0NCg0KZnVuY3Rpb24gcmVhZFZhckludCAoYnVmZmVyLCBvZmZzZXQpIHsNCiAgdmFyIHQgPSBidWZmZXIucmVhZFVJbnQ4KG9mZnNldCkNCiAgdmFyIG51bWJlciwgc2l6ZQ0KDQogIC8vIDggYml0DQogIGlmICh0IDwgMjUzKSB7DQogICAgbnVtYmVyID0gdA0KICAgIHNpemUgPSAxDQoNCiAgLy8gMTYgYml0DQogIH0gZWxzZSBpZiAodCA8IDI1NCkgew0KICAgIG51bWJlciA9IGJ1ZmZlci5yZWFkVUludDE2TEUob2Zmc2V0ICsgMSkNCiAgICBzaXplID0gMw0KDQogIC8vIDMyIGJpdA0KICB9IGVsc2UgaWYgKHQgPCAyNTUpIHsNCiAgICBudW1iZXIgPSBidWZmZXIucmVhZFVJbnQzMkxFKG9mZnNldCArIDEpDQogICAgc2l6ZSA9IDUNCg0KICAvLyA2NCBiaXQNCiAgfSBlbHNlIHsNCiAgICBudW1iZXIgPSByZWFkVUludDY0TEUoYnVmZmVyLCBvZmZzZXQgKyAxKQ0KICAgIHNpemUgPSA5DQogIH0NCg0KICByZXR1cm4gew0KICAgIG51bWJlcjogbnVtYmVyLA0KICAgIHNpemU6IHNpemUNCiAgfQ0KfQ0KDQpmdW5jdGlvbiB3cml0ZVB1c2hEYXRhSW50IChidWZmZXIsIG51bWJlciwgb2Zmc2V0KSB7DQogIHZhciBzaXplID0gcHVzaERhdGFTaXplKG51bWJlcikNCg0KICAvLyB+NiBiaXQNCiAgaWYgKHNpemUgPT09IDEpIHsNCiAgICBidWZmZXIud3JpdGVVSW50OChudW1iZXIsIG9mZnNldCkNCg0KICAvLyA4IGJpdA0KICB9IGVsc2UgaWYgKHNpemUgPT09IDIpIHsNCiAgICBidWZmZXIud3JpdGVVSW50OChvcGNvZGVzLk9QX1BVU0hEQVRBMSwgb2Zmc2V0KQ0KICAgIGJ1ZmZlci53cml0ZVVJbnQ4KG51bWJlciwgb2Zmc2V0ICsgMSkNCg0KICAvLyAxNiBiaXQNCiAgfSBlbHNlIGlmIChzaXplID09PSAzKSB7DQogICAgYnVmZmVyLndyaXRlVUludDgob3Bjb2Rlcy5PUF9QVVNIREFUQTIsIG9mZnNldCkNCiAgICBidWZmZXIud3JpdGVVSW50MTZMRShudW1iZXIsIG9mZnNldCArIDEpDQoNCiAgLy8gMzIgYml0DQogIH0gZWxzZSB7DQogICAgYnVmZmVyLndyaXRlVUludDgob3Bjb2Rlcy5PUF9QVVNIREFUQTQsIG9mZnNldCkNCiAgICBidWZmZXIud3JpdGVVSW50MzJMRShudW1iZXIsIG9mZnNldCArIDEpDQogIH0NCg0KICByZXR1cm4gc2l6ZQ0KfQ0KDQpmdW5jdGlvbiB3cml0ZVVJbnQ2NExFIChidWZmZXIsIHZhbHVlLCBvZmZzZXQpIHsNCiAgdmVyaWZ1aW50KHZhbHVlLCAweDAwMWZmZmZmZmZmZmZmZmYpDQoNCiAgYnVmZmVyLndyaXRlSW50MzJMRSh2YWx1ZSAmIC0xLCBvZmZzZXQpDQogIGJ1ZmZlci53cml0ZVVJbnQzMkxFKE1hdGguZmxvb3IodmFsdWUgLyAweDEwMDAwMDAwMCksIG9mZnNldCArIDQpDQp9DQoNCmZ1bmN0aW9uIHZhckludFNpemUgKGkpIHsNCiAgcmV0dXJuIGkgPCAyNTMgPyAxDQogIDogaSA8IDB4MTAwMDAgPyAzDQogIDogaSA8IDB4MTAwMDAwMDAwID8gNQ0KICA6IDkNCn0NCg0KZnVuY3Rpb24gd3JpdGVWYXJJbnQgKGJ1ZmZlciwgbnVtYmVyLCBvZmZzZXQpIHsNCiAgdmFyIHNpemUgPSB2YXJJbnRTaXplKG51bWJlcikNCg0KICAvLyA4IGJpdA0KICBpZiAoc2l6ZSA9PT0gMSkgew0KICAgIGJ1ZmZlci53cml0ZVVJbnQ4KG51bWJlciwgb2Zmc2V0KQ0KDQogIC8vIDE2IGJpdA0KICB9IGVsc2UgaWYgKHNpemUgPT09IDMpIHsNCiAgICBidWZmZXIud3JpdGVVSW50OCgyNTMsIG9mZnNldCkNCiAgICBidWZmZXIud3JpdGVVSW50MTZMRShudW1iZXIsIG9mZnNldCArIDEpDQoNCiAgLy8gMzIgYml0DQogIH0gZWxzZSBpZiAoc2l6ZSA9PT0gNSkgew0KICAgIGJ1ZmZlci53cml0ZVVJbnQ4KDI1NCwgb2Zmc2V0KQ0KICAgIGJ1ZmZlci53cml0ZVVJbnQzMkxFKG51bWJlciwgb2Zmc2V0ICsgMSkNCg0KICAvLyA2NCBiaXQNCiAgfSBlbHNlIHsNCiAgICBidWZmZXIud3JpdGVVSW50OCgyNTUsIG9mZnNldCkNCiAgICB3cml0ZVVJbnQ2NExFKGJ1ZmZlciwgbnVtYmVyLCBvZmZzZXQgKyAxKQ0KICB9DQoNCiAgcmV0dXJuIHNpemUNCn0NCg0KZnVuY3Rpb24gdmFySW50QnVmZmVyIChpKSB7DQogIHZhciBzaXplID0gdmFySW50U2l6ZShpKQ0KICB2YXIgYnVmZmVyID0gbmV3IEJ1ZmZlcihzaXplKQ0KICB3cml0ZVZhckludChidWZmZXIsIGksIDApDQoNCiAgcmV0dXJuIGJ1ZmZlcg0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IHsNCiAgZXF1YWw6IHJlcXVpcmUoJ2J1ZmZlci1lcXVhbHMnKSwNCiAgcHVzaERhdGFTaXplOiBwdXNoRGF0YVNpemUsDQogIHJlYWRQdXNoRGF0YUludDogcmVhZFB1c2hEYXRhSW50LA0KICByZWFkVUludDY0TEU6IHJlYWRVSW50NjRMRSwNCiAgcmVhZFZhckludDogcmVhZFZhckludCwNCiAgcmV2ZXJzZTogcmVxdWlyZSgnYnVmZmVyLXJldmVyc2UnKSwNCiAgdmFySW50QnVmZmVyOiB2YXJJbnRCdWZmZXIsDQogIHZhckludFNpemU6IHZhckludFNpemUsDQogIHdyaXRlUHVzaERhdGFJbnQ6IHdyaXRlUHVzaERhdGFJbnQsDQogIHdyaXRlVUludDY0TEU6IHdyaXRlVUludDY0TEUsDQogIHdyaXRlVmFySW50OiB3cml0ZVZhckludA0KfQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vb3Bjb2RlcyI6NTMsImJ1ZmZlciI6OTMsImJ1ZmZlci1lcXVhbHMiOjkwLCJidWZmZXItcmV2ZXJzZSI6OTF9XSw0NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgY3JlYXRlSGFzaCA9IHJlcXVpcmUoJ2NyZWF0ZS1oYXNoJykNCg0KZnVuY3Rpb24gaGFzaDE2MCAoYnVmZmVyKSB7DQogIHJldHVybiByaXBlbWQxNjAoc2hhMjU2KGJ1ZmZlcikpDQp9DQoNCmZ1bmN0aW9uIGhhc2gyNTYgKGJ1ZmZlcikgew0KICByZXR1cm4gc2hhMjU2KHNoYTI1NihidWZmZXIpKQ0KfQ0KDQpmdW5jdGlvbiByaXBlbWQxNjAgKGJ1ZmZlcikgew0KICByZXR1cm4gY3JlYXRlSGFzaCgncm1kMTYwJykudXBkYXRlKGJ1ZmZlcikuZGlnZXN0KCkNCn0NCg0KZnVuY3Rpb24gc2hhMSAoYnVmZmVyKSB7DQogIHJldHVybiBjcmVhdGVIYXNoKCdzaGExJykudXBkYXRlKGJ1ZmZlcikuZGlnZXN0KCkNCn0NCg0KZnVuY3Rpb24gc2hhMjU2IChidWZmZXIpIHsNCiAgcmV0dXJuIGNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShidWZmZXIpLmRpZ2VzdCgpDQp9DQoNCm1vZHVsZS5leHBvcnRzID0gew0KICBoYXNoMTYwOiBoYXNoMTYwLA0KICBoYXNoMjU2OiBoYXNoMjU2LA0KICByaXBlbWQxNjA6IHJpcGVtZDE2MCwNCiAgc2hhMTogc2hhMSwNCiAgc2hhMjU2OiBzaGEyNTYNCn0NCg0KfSx7ImNyZWF0ZS1oYXNoIjo0ODh9XSw0NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQp2YXIgY3JlYXRlSG1hYyA9IHJlcXVpcmUoJ2NyZWF0ZS1obWFjJykNCnZhciB0eXBlZm9yY2UgPSByZXF1aXJlKCd0eXBlZm9yY2UnKQ0KdmFyIHR5cGVzID0gcmVxdWlyZSgnLi90eXBlcycpDQoNCnZhciBCaWdJbnRlZ2VyID0gcmVxdWlyZSgnYmlnaScpDQp2YXIgRUNTaWduYXR1cmUgPSByZXF1aXJlKCcuL2Vjc2lnbmF0dXJlJykNCg0KdmFyIFpFUk8gPSBuZXcgQnVmZmVyKFswXSkNCnZhciBPTkUgPSBuZXcgQnVmZmVyKFsxXSkNCg0KdmFyIGVjdXJ2ZSA9IHJlcXVpcmUoJ2VjdXJ2ZScpDQp2YXIgc2VjcDI1NmsxID0gZWN1cnZlLmdldEN1cnZlQnlOYW1lKCdzZWNwMjU2azEnKQ0KDQovLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjk3OSNzZWN0aW9uLTMuMg0KZnVuY3Rpb24gZGV0ZXJtaW5pc3RpY0dlbmVyYXRlSyAoaGFzaCwgeCwgY2hlY2tTaWcpIHsNCiAgdHlwZWZvcmNlKHR5cGVzLnR1cGxlKA0KICAgIHR5cGVzLkhhc2gyNTZiaXQsDQogICAgdHlwZXMuQnVmZmVyMjU2Yml0LA0KICAgIHR5cGVzLkZ1bmN0aW9uDQogICksIGFyZ3VtZW50cykNCg0KICB2YXIgayA9IG5ldyBCdWZmZXIoMzIpDQogIHZhciB2ID0gbmV3IEJ1ZmZlcigzMikNCg0KICAvLyBTdGVwIEEsIGlnbm9yZWQgYXMgaGFzaCBhbHJlYWR5IHByb3ZpZGVkDQogIC8vIFN0ZXAgQg0KICB2LmZpbGwoMSkNCg0KICAvLyBTdGVwIEMNCiAgay5maWxsKDApDQoNCiAgLy8gU3RlcCBEDQogIGsgPSBjcmVhdGVIbWFjKCdzaGEyNTYnLCBrKQ0KICAgIC51cGRhdGUodikNCiAgICAudXBkYXRlKFpFUk8pDQogICAgLnVwZGF0ZSh4KQ0KICAgIC51cGRhdGUoaGFzaCkNCiAgICAuZGlnZXN0KCkNCg0KICAvLyBTdGVwIEUNCiAgdiA9IGNyZWF0ZUhtYWMoJ3NoYTI1NicsIGspLnVwZGF0ZSh2KS5kaWdlc3QoKQ0KDQogIC8vIFN0ZXAgRg0KICBrID0gY3JlYXRlSG1hYygnc2hhMjU2JywgaykNCiAgICAudXBkYXRlKHYpDQogICAgLnVwZGF0ZShPTkUpDQogICAgLnVwZGF0ZSh4KQ0KICAgIC51cGRhdGUoaGFzaCkNCiAgICAuZGlnZXN0KCkNCg0KICAvLyBTdGVwIEcNCiAgdiA9IGNyZWF0ZUhtYWMoJ3NoYTI1NicsIGspLnVwZGF0ZSh2KS5kaWdlc3QoKQ0KDQogIC8vIFN0ZXAgSDEvSDJhLCBpZ25vcmVkIGFzIHRsZW4gPT09IHFsZW4gKDI1NiBiaXQpDQogIC8vIFN0ZXAgSDJiDQogIHYgPSBjcmVhdGVIbWFjKCdzaGEyNTYnLCBrKS51cGRhdGUodikuZGlnZXN0KCkNCg0KICB2YXIgVCA9IEJpZ0ludGVnZXIuZnJvbUJ1ZmZlcih2KQ0KDQogIC8vIFN0ZXAgSDMsIHJlcGVhdCB1bnRpbCBUIGlzIHdpdGhpbiB0aGUgaW50ZXJ2YWwgWzEsIG4gLSAxXSBhbmQgaXMgc3VpdGFibGUgZm9yIEVDRFNBDQogIHdoaWxlIChULnNpZ251bSgpIDw9IDAgfHwgVC5jb21wYXJlVG8oc2VjcDI1NmsxLm4pID49IDAgfHwgIWNoZWNrU2lnKFQpKSB7DQogICAgayA9IGNyZWF0ZUhtYWMoJ3NoYTI1NicsIGspDQogICAgICAudXBkYXRlKHYpDQogICAgICAudXBkYXRlKFpFUk8pDQogICAgICAuZGlnZXN0KCkNCg0KICAgIHYgPSBjcmVhdGVIbWFjKCdzaGEyNTYnLCBrKS51cGRhdGUodikuZGlnZXN0KCkNCg0KICAgIC8vIFN0ZXAgSDEvSDJhLCBhZ2FpbiwgaWdub3JlZCBhcyB0bGVuID09PSBxbGVuICgyNTYgYml0KQ0KICAgIC8vIFN0ZXAgSDJiIGFnYWluDQogICAgdiA9IGNyZWF0ZUhtYWMoJ3NoYTI1NicsIGspLnVwZGF0ZSh2KS5kaWdlc3QoKQ0KICAgIFQgPSBCaWdJbnRlZ2VyLmZyb21CdWZmZXIodikNCiAgfQ0KDQogIHJldHVybiBUDQp9DQoNCnZhciBOX09WRVJfVFdPID0gc2VjcDI1NmsxLm4uc2hpZnRSaWdodCgxKQ0KDQpmdW5jdGlvbiBzaWduIChoYXNoLCBkKSB7DQogIHR5cGVmb3JjZSh0eXBlcy50dXBsZSh0eXBlcy5IYXNoMjU2Yml0LCB0eXBlcy5CaWdJbnQpLCBhcmd1bWVudHMpDQoNCiAgdmFyIHggPSBkLnRvQnVmZmVyKDMyKQ0KICB2YXIgZSA9IEJpZ0ludGVnZXIuZnJvbUJ1ZmZlcihoYXNoKQ0KICB2YXIgbiA9IHNlY3AyNTZrMS5uDQogIHZhciBHID0gc2VjcDI1NmsxLkcNCg0KICB2YXIgciwgcw0KICBkZXRlcm1pbmlzdGljR2VuZXJhdGVLKGhhc2gsIHgsIGZ1bmN0aW9uIChrKSB7DQogICAgdmFyIFEgPSBHLm11bHRpcGx5KGspDQoNCiAgICBpZiAoc2VjcDI1NmsxLmlzSW5maW5pdHkoUSkpIHJldHVybiBmYWxzZQ0KDQogICAgciA9IFEuYWZmaW5lWC5tb2QobikNCiAgICBpZiAoci5zaWdudW0oKSA9PT0gMCkgcmV0dXJuIGZhbHNlDQoNCiAgICBzID0gay5tb2RJbnZlcnNlKG4pLm11bHRpcGx5KGUuYWRkKGQubXVsdGlwbHkocikpKS5tb2QobikNCiAgICBpZiAocy5zaWdudW0oKSA9PT0gMCkgcmV0dXJuIGZhbHNlDQoNCiAgICByZXR1cm4gdHJ1ZQ0KICB9KQ0KDQogIC8vIGVuZm9yY2UgbG93IFMgdmFsdWVzLCBzZWUgYmlwNjI6ICdsb3cgcyB2YWx1ZXMgaW4gc2lnbmF0dXJlcycNCiAgaWYgKHMuY29tcGFyZVRvKE5fT1ZFUl9UV08pID4gMCkgew0KICAgIHMgPSBuLnN1YnRyYWN0KHMpDQogIH0NCg0KICByZXR1cm4gbmV3IEVDU2lnbmF0dXJlKHIsIHMpDQp9DQoNCmZ1bmN0aW9uIHZlcmlmeSAoaGFzaCwgc2lnbmF0dXJlLCBRKSB7DQogIHR5cGVmb3JjZSh0eXBlcy50dXBsZSgNCiAgICB0eXBlcy5IYXNoMjU2Yml0LA0KICAgIHR5cGVzLkVDU2lnbmF0dXJlLA0KICAgIHR5cGVzLkVDUG9pbnQNCiAgKSwgYXJndW1lbnRzKQ0KDQogIHZhciBuID0gc2VjcDI1NmsxLm4NCiAgdmFyIEcgPSBzZWNwMjU2azEuRw0KDQogIHZhciByID0gc2lnbmF0dXJlLnINCiAgdmFyIHMgPSBzaWduYXR1cmUucw0KDQogIC8vIDEuNC4xIEVuZm9yY2UgciBhbmQgcyBhcmUgYm90aCBpbnRlZ2VycyBpbiB0aGUgaW50ZXJ2YWwgWzEsIG4g4oiSIDFdDQogIGlmIChyLnNpZ251bSgpIDw9IDAgfHwgci5jb21wYXJlVG8obikgPj0gMCkgcmV0dXJuIGZhbHNlDQogIGlmIChzLnNpZ251bSgpIDw9IDAgfHwgcy5jb21wYXJlVG8obikgPj0gMCkgcmV0dXJuIGZhbHNlDQoNCiAgLy8gMS40LjIgSCA9IEhhc2goTSksIGFscmVhZHkgZG9uZSBieSB0aGUgdXNlcg0KICAvLyAxLjQuMyBlID0gSA0KICB2YXIgZSA9IEJpZ0ludGVnZXIuZnJvbUJ1ZmZlcihoYXNoKQ0KDQogIC8vIENvbXB1dGUgc14tMQ0KICB2YXIgc0ludiA9IHMubW9kSW52ZXJzZShuKQ0KDQogIC8vIDEuNC40IENvbXB1dGUgdTEgPSBlc17iiJIxIG1vZCBuDQogIC8vICAgICAgICAgICAgICAgdTIgPSByc17iiJIxIG1vZCBuDQogIHZhciB1MSA9IGUubXVsdGlwbHkoc0ludikubW9kKG4pDQogIHZhciB1MiA9IHIubXVsdGlwbHkoc0ludikubW9kKG4pDQoNCiAgLy8gMS40LjUgQ29tcHV0ZSBSID0gKHhSLCB5UikNCiAgLy8gICAgICAgICAgICAgICBSID0gdTFHICsgdTJRDQogIHZhciBSID0gRy5tdWx0aXBseVR3byh1MSwgUSwgdTIpDQoNCiAgLy8gMS40LjUgKGNvbnQuKSBFbmZvcmNlIFIgaXMgbm90IGF0IGluZmluaXR5DQogIGlmIChzZWNwMjU2azEuaXNJbmZpbml0eShSKSkgcmV0dXJuIGZhbHNlDQoNCiAgLy8gMS40LjYgQ29udmVydCB0aGUgZmllbGQgZWxlbWVudCBSLnggdG8gYW4gaW50ZWdlcg0KICB2YXIgeFIgPSBSLmFmZmluZVgNCg0KICAvLyAxLjQuNyBTZXQgdiA9IHhSIG1vZCBuDQogIHZhciB2ID0geFIubW9kKG4pDQoNCiAgLy8gMS40LjggSWYgdiA9IHIsIG91dHB1dCAidmFsaWQiLCBhbmQgaWYgdiAhPSByLCBvdXRwdXQgImludmFsaWQiDQogIHJldHVybiB2LmVxdWFscyhyKQ0KfQ0KDQovKioNCiAgKiBSZWNvdmVyIGEgcHVibGljIGtleSBmcm9tIGEgc2lnbmF0dXJlLg0KICAqDQogICogU2VlIFNFQyAxOiBFbGxpcHRpYyBDdXJ2ZSBDcnlwdG9ncmFwaHksIHNlY3Rpb24gNC4xLjYsICJQdWJsaWMNCiAgKiBLZXkgUmVjb3ZlcnkgT3BlcmF0aW9uIi4NCiAgKg0KICAqIGh0dHA6Ly93d3cuc2VjZy5vcmcvZG93bmxvYWQvYWlkLTc4MC9zZWMxLXYyLnBkZg0KICAqLw0KZnVuY3Rpb24gcmVjb3ZlclB1YktleSAoZSwgc2lnbmF0dXJlLCBpKSB7DQogIHR5cGVmb3JjZSh0eXBlcy50dXBsZSgNCiAgICB0eXBlcy5CaWdJbnQsDQogICAgdHlwZXMuRUNTaWduYXR1cmUsDQogICAgdHlwZXMuVUludDINCiAgKSwgYXJndW1lbnRzKQ0KDQogIHZhciBuID0gc2VjcDI1NmsxLm4NCiAgdmFyIEcgPSBzZWNwMjU2azEuRw0KICB2YXIgciA9IHNpZ25hdHVyZS5yDQogIHZhciBzID0gc2lnbmF0dXJlLnMNCg0KICBpZiAoci5zaWdudW0oKSA8PSAwIHx8IHIuY29tcGFyZVRvKG4pID49IDApIHRocm93IG5ldyBFcnJvcignSW52YWxpZCByIHZhbHVlJykNCiAgaWYgKHMuc2lnbnVtKCkgPD0gMCB8fCBzLmNvbXBhcmVUbyhuKSA+PSAwKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcyB2YWx1ZScpDQoNCiAgLy8gQSBzZXQgTFNCIHNpZ25pZmllcyB0aGF0IHRoZSB5LWNvb3JkaW5hdGUgaXMgb2RkDQogIHZhciBpc1lPZGQgPSBpICYgMQ0KDQogIC8vIFRoZSBtb3JlIHNpZ25pZmljYW50IGJpdCBzcGVjaWZpZXMgd2hldGhlciB3ZSBzaG91bGQgdXNlIHRoZQ0KICAvLyBmaXJzdCBvciBzZWNvbmQgY2FuZGlkYXRlIGtleS4NCiAgdmFyIGlzU2Vjb25kS2V5ID0gaSA+PiAxDQoNCiAgLy8gMS4xIExldCB4ID0gciArIGpuDQogIHZhciB4ID0gaXNTZWNvbmRLZXkgPyByLmFkZChuKSA6IHINCiAgdmFyIFIgPSBzZWNwMjU2azEucG9pbnRGcm9tWChpc1lPZGQsIHgpDQoNCiAgLy8gMS40IENoZWNrIHRoYXQgblIgaXMgYXQgaW5maW5pdHkNCiAgdmFyIG5SID0gUi5tdWx0aXBseShuKQ0KICBpZiAoIXNlY3AyNTZrMS5pc0luZmluaXR5KG5SKSkgdGhyb3cgbmV3IEVycm9yKCduUiBpcyBub3QgYSB2YWxpZCBjdXJ2ZSBwb2ludCcpDQoNCiAgLy8gQ29tcHV0ZSByXi0xDQogIHZhciBySW52ID0gci5tb2RJbnZlcnNlKG4pDQoNCiAgLy8gQ29tcHV0ZSAtZSBmcm9tIGUNCiAgdmFyIGVOZWcgPSBlLm5lZ2F0ZSgpLm1vZChuKQ0KDQogIC8vIDEuNi4xIENvbXB1dGUgUSA9IHJeLTEgKHNSIC0gIGVHKQ0KICAvLyAgICAgICAgICAgICAgIFEgPSByXi0xIChzUiArIC1lRykNCiAgdmFyIFEgPSBSLm11bHRpcGx5VHdvKHMsIEcsIGVOZWcpLm11bHRpcGx5KHJJbnYpDQoNCiAgc2VjcDI1NmsxLnZhbGlkYXRlKFEpDQoNCiAgcmV0dXJuIFENCn0NCg0KLyoqDQogICogQ2FsY3VsYXRlIHB1YmtleSBleHRyYWN0aW9uIHBhcmFtZXRlci4NCiAgKg0KICAqIFdoZW4gZXh0cmFjdGluZyBhIHB1YmtleSBmcm9tIGEgc2lnbmF0dXJlLCB3ZSBoYXZlIHRvDQogICogZGlzdGluZ3Vpc2ggZm91ciBkaWZmZXJlbnQgY2FzZXMuIFJhdGhlciB0aGFuIHB1dHRpbmcgdGhpcw0KICAqIGJ1cmRlbiBvbiB0aGUgdmVyaWZpZXIsIEJpdGNvaW4gaW5jbHVkZXMgYSAyLWJpdCB2YWx1ZSB3aXRoIHRoZQ0KICAqIHNpZ25hdHVyZS4NCiAgKg0KICAqIFRoaXMgZnVuY3Rpb24gc2ltcGx5IHRyaWVzIGFsbCBmb3VyIGNhc2VzIGFuZCByZXR1cm5zIHRoZSB2YWx1ZQ0KICAqIHRoYXQgcmVzdWx0ZWQgaW4gYSBzdWNjZXNzZnVsIHB1YmtleSByZWNvdmVyeS4NCiAgKi8NCmZ1bmN0aW9uIGNhbGNQdWJLZXlSZWNvdmVyeVBhcmFtIChlLCBzaWduYXR1cmUsIFEpIHsNCiAgdHlwZWZvcmNlKHR5cGVzLnR1cGxlKA0KICAgIHR5cGVzLkJpZ0ludCwNCiAgICB0eXBlcy5FQ1NpZ25hdHVyZSwNCiAgICB0eXBlcy5FQ1BvaW50DQogICksIGFyZ3VtZW50cykNCg0KICBmb3IgKHZhciBpID0gMDsgaSA8IDQ7IGkrKykgew0KICAgIHZhciBRcHJpbWUgPSByZWNvdmVyUHViS2V5KGUsIHNpZ25hdHVyZSwgaSkNCg0KICAgIC8vIDEuNi4yIFZlcmlmeSBRDQogICAgaWYgKFFwcmltZS5lcXVhbHMoUSkpIHsNCiAgICAgIHJldHVybiBpDQogICAgfQ0KICB9DQoNCiAgdGhyb3cgbmV3IEVycm9yKCdVbmFibGUgdG8gZmluZCB2YWxpZCByZWNvdmVyeSBmYWN0b3InKQ0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IHsNCiAgY2FsY1B1YktleVJlY292ZXJ5UGFyYW06IGNhbGNQdWJLZXlSZWNvdmVyeVBhcmFtLA0KICBkZXRlcm1pbmlzdGljR2VuZXJhdGVLOiBkZXRlcm1pbmlzdGljR2VuZXJhdGVLLA0KICByZWNvdmVyUHViS2V5OiByZWNvdmVyUHViS2V5LA0KICBzaWduOiBzaWduLA0KICB2ZXJpZnk6IHZlcmlmeSwNCg0KICAvLyBUT0RPOiByZW1vdmUNCiAgX19jdXJ2ZTogc2VjcDI1NmsxDQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiLi9lY3NpZ25hdHVyZSI6NDgsIi4vdHlwZXMiOjU4LCJiaWdpIjozNywiYnVmZmVyIjo5MywiY3JlYXRlLWhtYWMiOjQ5MSwiZWN1cnZlIjo1MDUsInR5cGVmb3JjZSI6NTgyfV0sNDc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIGJjcnlwdG8gPSByZXF1aXJlKCcuL2NyeXB0bycpDQp2YXIgYnM1OGNoZWNrID0gcmVxdWlyZSgnYnM1OGNoZWNrJykNCnZhciBlY2RzYSA9IHJlcXVpcmUoJy4vZWNkc2EnKQ0KdmFyIHJhbmRvbUJ5dGVzID0gcmVxdWlyZSgncmFuZG9tYnl0ZXMnKQ0KdmFyIHR5cGVmb3JjZSA9IHJlcXVpcmUoJ3R5cGVmb3JjZScpDQp2YXIgdHlwZXMgPSByZXF1aXJlKCcuL3R5cGVzJykNCnZhciB3aWYgPSByZXF1aXJlKCd3aWYnKQ0KDQp2YXIgTkVUV09SS1MgPSByZXF1aXJlKCcuL25ldHdvcmtzJykNCnZhciBCaWdJbnRlZ2VyID0gcmVxdWlyZSgnYmlnaScpDQoNCnZhciBlY3VydmUgPSByZXF1aXJlKCdlY3VydmUnKQ0KdmFyIHNlY3AyNTZrMSA9IGVjZHNhLl9fY3VydmUNCg0KZnVuY3Rpb24gRUNQYWlyIChkLCBRLCBvcHRpb25zKSB7DQogIGlmIChvcHRpb25zKSB7DQogICAgdHlwZWZvcmNlKHsNCiAgICAgIGNvbXByZXNzZWQ6IHR5cGVzLm1heWJlKHR5cGVzLkJvb2xlYW4pLA0KICAgICAgbmV0d29yazogdHlwZXMubWF5YmUodHlwZXMuTmV0d29yaykNCiAgICB9LCBvcHRpb25zKQ0KICB9DQoNCiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge30NCg0KICBpZiAoZCkgew0KICAgIGlmIChkLnNpZ251bSgpIDw9IDApIHRocm93IG5ldyBFcnJvcignUHJpdmF0ZSBrZXkgbXVzdCBiZSBncmVhdGVyIHRoYW4gMCcpDQogICAgaWYgKGQuY29tcGFyZVRvKHNlY3AyNTZrMS5uKSA+PSAwKSB0aHJvdyBuZXcgRXJyb3IoJ1ByaXZhdGUga2V5IG11c3QgYmUgbGVzcyB0aGFuIHRoZSBjdXJ2ZSBvcmRlcicpDQogICAgaWYgKFEpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1VuZXhwZWN0ZWQgcHVibGljS2V5IHBhcmFtZXRlcicpDQoNCiAgICB0aGlzLmQgPSBkDQogIH0gZWxzZSB7DQogICAgdHlwZWZvcmNlKHR5cGVzLkVDUG9pbnQsIFEpDQoNCiAgICB0aGlzLl9fUSA9IFENCiAgfQ0KDQogIHRoaXMuY29tcHJlc3NlZCA9IG9wdGlvbnMuY29tcHJlc3NlZCA9PT0gdW5kZWZpbmVkID8gdHJ1ZSA6IG9wdGlvbnMuY29tcHJlc3NlZA0KICB0aGlzLm5ldHdvcmsgPSBvcHRpb25zLm5ldHdvcmsgfHwgTkVUV09SS1MuYml0Y29pbg0KfQ0KDQpPYmplY3QuZGVmaW5lUHJvcGVydHkoRUNQYWlyLnByb3RvdHlwZSwgJ1EnLCB7DQogIGdldDogZnVuY3Rpb24gKCkgew0KICAgIGlmICghdGhpcy5fX1EgJiYgdGhpcy5kKSB7DQogICAgICB0aGlzLl9fUSA9IHNlY3AyNTZrMS5HLm11bHRpcGx5KHRoaXMuZCkNCiAgICB9DQoNCiAgICByZXR1cm4gdGhpcy5fX1ENCiAgfQ0KfSkNCg0KRUNQYWlyLmZyb21QdWJsaWNLZXlCdWZmZXIgPSBmdW5jdGlvbiAoYnVmZmVyLCBuZXR3b3JrKSB7DQogIHZhciBRID0gZWN1cnZlLlBvaW50LmRlY29kZUZyb20oc2VjcDI1NmsxLCBidWZmZXIpDQoNCiAgcmV0dXJuIG5ldyBFQ1BhaXIobnVsbCwgUSwgew0KICAgIGNvbXByZXNzZWQ6IFEuY29tcHJlc3NlZCwNCiAgICBuZXR3b3JrOiBuZXR3b3JrDQogIH0pDQp9DQoNCkVDUGFpci5mcm9tV0lGID0gZnVuY3Rpb24gKHN0cmluZywgbmV0d29yaykgew0KICBuZXR3b3JrID0gbmV0d29yayB8fCBORVRXT1JLUy5iaXRjb2luDQogIHZhciBidWZmZXIgPSBiczU4Y2hlY2suZGVjb2RlKHN0cmluZykNCg0KICBpZiAodHlwZXMuQXJyYXkobmV0d29yaykpIHsNCiAgICB2YXIgdmVyc2lvbiA9IGJ1ZmZlclswXQ0KDQogICAgbmV0d29yayA9IG5ldHdvcmsuZmlsdGVyKGZ1bmN0aW9uIChuZXR3b3JrKSB7DQogICAgICByZXR1cm4gdmVyc2lvbiA9PT0gbmV0d29yay53aWYNCiAgICB9KS5wb3AoKSB8fCB7fQ0KICB9DQoNCiAgdmFyIGRlY29kZWQgPSB3aWYuZGVjb2RlUmF3KG5ldHdvcmsud2lmLCBidWZmZXIpDQogIHZhciBkID0gQmlnSW50ZWdlci5mcm9tQnVmZmVyKGRlY29kZWQuZCkNCg0KICByZXR1cm4gbmV3IEVDUGFpcihkLCBudWxsLCB7DQogICAgY29tcHJlc3NlZDogZGVjb2RlZC5jb21wcmVzc2VkLA0KICAgIG5ldHdvcms6IG5ldHdvcmsNCiAgfSkNCn0NCg0KRUNQYWlyLm1ha2VSYW5kb20gPSBmdW5jdGlvbiAob3B0aW9ucykgew0KICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fQ0KDQogIHZhciBybmcgPSBvcHRpb25zLnJuZyB8fCByYW5kb21CeXRlcw0KDQogIHZhciBkDQogIGRvIHsNCiAgICB2YXIgYnVmZmVyID0gcm5nKDMyKQ0KICAgIHR5cGVmb3JjZSh0eXBlcy5CdWZmZXIyNTZiaXQsIGJ1ZmZlcikNCg0KICAgIGQgPSBCaWdJbnRlZ2VyLmZyb21CdWZmZXIoYnVmZmVyKQ0KICB9IHdoaWxlIChkLnNpZ251bSgpIDw9IDAgfHwgZC5jb21wYXJlVG8oc2VjcDI1NmsxLm4pID49IDApDQoNCiAgcmV0dXJuIG5ldyBFQ1BhaXIoZCwgbnVsbCwgb3B0aW9ucykNCn0NCg0KRUNQYWlyLnByb3RvdHlwZS5nZXRBZGRyZXNzID0gZnVuY3Rpb24gKCkgew0KICB2YXIgcHViS2V5ID0gdGhpcy5nZXRQdWJsaWNLZXlCdWZmZXIoKQ0KICB2YXIgcHViS2V5SGFzaCA9IGJjcnlwdG8uaGFzaDE2MChwdWJLZXkpDQoNCiAgdmFyIHBheWxvYWQgPSBuZXcgQnVmZmVyKDIxKQ0KICBwYXlsb2FkLndyaXRlVUludDgodGhpcy5uZXR3b3JrLnB1YktleUhhc2gsIDApDQogIHB1YktleUhhc2guY29weShwYXlsb2FkLCAxKQ0KDQogIHJldHVybiBiczU4Y2hlY2suZW5jb2RlKHBheWxvYWQpDQp9DQoNCkVDUGFpci5wcm90b3R5cGUuZ2V0TmV0d29yayA9IGZ1bmN0aW9uICgpIHsNCiAgcmV0dXJuIHRoaXMubmV0d29yaw0KfQ0KDQpFQ1BhaXIucHJvdG90eXBlLmdldFB1YmxpY0tleUJ1ZmZlciA9IGZ1bmN0aW9uICgpIHsNCiAgcmV0dXJuIHRoaXMuUS5nZXRFbmNvZGVkKHRoaXMuY29tcHJlc3NlZCkNCn0NCg0KRUNQYWlyLnByb3RvdHlwZS5zaWduID0gZnVuY3Rpb24gKGhhc2gpIHsNCiAgaWYgKCF0aGlzLmQpIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBwcml2YXRlIGtleScpDQoNCiAgcmV0dXJuIGVjZHNhLnNpZ24oaGFzaCwgdGhpcy5kKQ0KfQ0KDQpFQ1BhaXIucHJvdG90eXBlLnRvV0lGID0gZnVuY3Rpb24gKCkgew0KICBpZiAoIXRoaXMuZCkgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIHByaXZhdGUga2V5JykNCg0KICByZXR1cm4gd2lmLmVuY29kZSh0aGlzLm5ldHdvcmsud2lmLCB0aGlzLmQudG9CdWZmZXIoMzIpLCB0aGlzLmNvbXByZXNzZWQpDQp9DQoNCkVDUGFpci5wcm90b3R5cGUudmVyaWZ5ID0gZnVuY3Rpb24gKGhhc2gsIHNpZ25hdHVyZSkgew0KICByZXR1cm4gZWNkc2EudmVyaWZ5KGhhc2gsIHNpZ25hdHVyZSwgdGhpcy5RKQ0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IEVDUGFpcg0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vY3J5cHRvIjo0NSwiLi9lY2RzYSI6NDYsIi4vbmV0d29ya3MiOjUyLCIuL3R5cGVzIjo1OCwiYmlnaSI6MzcsImJzNThjaGVjayI6ODgsImJ1ZmZlciI6OTMsImVjdXJ2ZSI6NTA1LCJyYW5kb21ieXRlcyI6NTU4LCJ0eXBlZm9yY2UiOjU4Miwid2lmIjo1OTB9XSw0ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQp2YXIgYmlwNjYgPSByZXF1aXJlKCdiaXA2NicpDQp2YXIgdHlwZWZvcmNlID0gcmVxdWlyZSgndHlwZWZvcmNlJykNCnZhciB0eXBlcyA9IHJlcXVpcmUoJy4vdHlwZXMnKQ0KDQp2YXIgQmlnSW50ZWdlciA9IHJlcXVpcmUoJ2JpZ2knKQ0KDQpmdW5jdGlvbiBFQ1NpZ25hdHVyZSAociwgcykgew0KICB0eXBlZm9yY2UodHlwZXMudHVwbGUodHlwZXMuQmlnSW50LCB0eXBlcy5CaWdJbnQpLCBhcmd1bWVudHMpDQoNCiAgdGhpcy5yID0gcg0KICB0aGlzLnMgPSBzDQp9DQoNCkVDU2lnbmF0dXJlLnBhcnNlQ29tcGFjdCA9IGZ1bmN0aW9uIChidWZmZXIpIHsNCiAgaWYgKGJ1ZmZlci5sZW5ndGggIT09IDY1KSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc2lnbmF0dXJlIGxlbmd0aCcpDQoNCiAgdmFyIGZsYWdCeXRlID0gYnVmZmVyLnJlYWRVSW50OCgwKSAtIDI3DQogIGlmIChmbGFnQnl0ZSAhPT0gKGZsYWdCeXRlICYgNykpIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzaWduYXR1cmUgcGFyYW1ldGVyJykNCg0KICB2YXIgY29tcHJlc3NlZCA9ICEhKGZsYWdCeXRlICYgNCkNCiAgdmFyIHJlY292ZXJ5UGFyYW0gPSBmbGFnQnl0ZSAmIDMNCg0KICB2YXIgciA9IEJpZ0ludGVnZXIuZnJvbUJ1ZmZlcihidWZmZXIuc2xpY2UoMSwgMzMpKQ0KICB2YXIgcyA9IEJpZ0ludGVnZXIuZnJvbUJ1ZmZlcihidWZmZXIuc2xpY2UoMzMpKQ0KDQogIHJldHVybiB7DQogICAgY29tcHJlc3NlZDogY29tcHJlc3NlZCwNCiAgICBpOiByZWNvdmVyeVBhcmFtLA0KICAgIHNpZ25hdHVyZTogbmV3IEVDU2lnbmF0dXJlKHIsIHMpDQogIH0NCn0NCg0KRUNTaWduYXR1cmUuZnJvbURFUiA9IGZ1bmN0aW9uIChidWZmZXIpIHsNCiAgdmFyIGRlY29kZSA9IGJpcDY2LmRlY29kZShidWZmZXIpDQogIHZhciByID0gQmlnSW50ZWdlci5mcm9tREVSSW50ZWdlcihkZWNvZGUucikNCiAgdmFyIHMgPSBCaWdJbnRlZ2VyLmZyb21ERVJJbnRlZ2VyKGRlY29kZS5zKQ0KDQogIHJldHVybiBuZXcgRUNTaWduYXR1cmUociwgcykNCn0NCg0KLy8gQklQNjI6IDEgYnl0ZSBoYXNoVHlwZSBmbGFnIChvbmx5IDB4MDEsIDB4MDIsIDB4MDMsIDB4ODEsIDB4ODIgYW5kIDB4ODMgYXJlIGFsbG93ZWQpDQpFQ1NpZ25hdHVyZS5wYXJzZVNjcmlwdFNpZ25hdHVyZSA9IGZ1bmN0aW9uIChidWZmZXIpIHsNCiAgdmFyIGhhc2hUeXBlID0gYnVmZmVyLnJlYWRVSW50OChidWZmZXIubGVuZ3RoIC0gMSkNCiAgdmFyIGhhc2hUeXBlTW9kID0gaGFzaFR5cGUgJiB+MHg4MA0KDQogIGlmIChoYXNoVHlwZU1vZCA8PSAweDAwIHx8IGhhc2hUeXBlTW9kID49IDB4MDQpIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBoYXNoVHlwZSAnICsgaGFzaFR5cGUpDQoNCiAgcmV0dXJuIHsNCiAgICBzaWduYXR1cmU6IEVDU2lnbmF0dXJlLmZyb21ERVIoYnVmZmVyLnNsaWNlKDAsIC0xKSksDQogICAgaGFzaFR5cGU6IGhhc2hUeXBlDQogIH0NCn0NCg0KRUNTaWduYXR1cmUucHJvdG90eXBlLnRvQ29tcGFjdCA9IGZ1bmN0aW9uIChpLCBjb21wcmVzc2VkKSB7DQogIGlmIChjb21wcmVzc2VkKSB7DQogICAgaSArPSA0DQogIH0NCg0KICBpICs9IDI3DQoNCiAgdmFyIGJ1ZmZlciA9IG5ldyBCdWZmZXIoNjUpDQogIGJ1ZmZlci53cml0ZVVJbnQ4KGksIDApDQoNCiAgdGhpcy5yLnRvQnVmZmVyKDMyKS5jb3B5KGJ1ZmZlciwgMSkNCiAgdGhpcy5zLnRvQnVmZmVyKDMyKS5jb3B5KGJ1ZmZlciwgMzMpDQoNCiAgcmV0dXJuIGJ1ZmZlcg0KfQ0KDQpFQ1NpZ25hdHVyZS5wcm90b3R5cGUudG9ERVIgPSBmdW5jdGlvbiAoKSB7DQogIHZhciByID0gbmV3IEJ1ZmZlcih0aGlzLnIudG9ERVJJbnRlZ2VyKCkpDQogIHZhciBzID0gbmV3IEJ1ZmZlcih0aGlzLnMudG9ERVJJbnRlZ2VyKCkpDQoNCiAgcmV0dXJuIGJpcDY2LmVuY29kZShyLCBzKQ0KfQ0KDQpFQ1NpZ25hdHVyZS5wcm90b3R5cGUudG9TY3JpcHRTaWduYXR1cmUgPSBmdW5jdGlvbiAoaGFzaFR5cGUpIHsNCiAgdmFyIGhhc2hUeXBlTW9kID0gaGFzaFR5cGUgJiB+MHg4MA0KICBpZiAoaGFzaFR5cGVNb2QgPD0gMCB8fCBoYXNoVHlwZU1vZCA+PSA0KSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgaGFzaFR5cGUgJyArIGhhc2hUeXBlKQ0KDQogIHZhciBoYXNoVHlwZUJ1ZmZlciA9IG5ldyBCdWZmZXIoMSkNCiAgaGFzaFR5cGVCdWZmZXIud3JpdGVVSW50OChoYXNoVHlwZSwgMCkNCg0KICByZXR1cm4gQnVmZmVyLmNvbmNhdChbdGhpcy50b0RFUigpLCBoYXNoVHlwZUJ1ZmZlcl0pDQp9DQoNCm1vZHVsZS5leHBvcnRzID0gRUNTaWduYXR1cmUNCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyIuL3R5cGVzIjo1OCwiYmlnaSI6MzcsImJpcDY2Ijo0MSwiYnVmZmVyIjo5MywidHlwZWZvcmNlIjo1ODJ9XSw0OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQp2YXIgYmFzZTU4Y2hlY2sgPSByZXF1aXJlKCdiczU4Y2hlY2snKQ0KdmFyIGJjcnlwdG8gPSByZXF1aXJlKCcuL2NyeXB0bycpDQp2YXIgY3JlYXRlSG1hYyA9IHJlcXVpcmUoJ2NyZWF0ZS1obWFjJykNCnZhciB0eXBlZm9yY2UgPSByZXF1aXJlKCd0eXBlZm9yY2UnKQ0KdmFyIHR5cGVzID0gcmVxdWlyZSgnLi90eXBlcycpDQp2YXIgTkVUV09SS1MgPSByZXF1aXJlKCcuL25ldHdvcmtzJykNCg0KdmFyIEJpZ0ludGVnZXIgPSByZXF1aXJlKCdiaWdpJykNCnZhciBFQ1BhaXIgPSByZXF1aXJlKCcuL2VjcGFpcicpDQoNCnZhciBlY3VydmUgPSByZXF1aXJlKCdlY3VydmUnKQ0KdmFyIGN1cnZlID0gZWN1cnZlLmdldEN1cnZlQnlOYW1lKCdzZWNwMjU2azEnKQ0KDQpmdW5jdGlvbiBIRE5vZGUgKGtleVBhaXIsIGNoYWluQ29kZSkgew0KICB0eXBlZm9yY2UodHlwZXMudHVwbGUoJ0VDUGFpcicsIHR5cGVzLkJ1ZmZlcjI1NmJpdCksIGFyZ3VtZW50cykNCg0KICBpZiAoIWtleVBhaXIuY29tcHJlc3NlZCkgdGhyb3cgbmV3IFR5cGVFcnJvcignQklQMzIgb25seSBhbGxvd3MgY29tcHJlc3NlZCBrZXlQYWlycycpDQoNCiAgdGhpcy5rZXlQYWlyID0ga2V5UGFpcg0KICB0aGlzLmNoYWluQ29kZSA9IGNoYWluQ29kZQ0KICB0aGlzLmRlcHRoID0gMA0KICB0aGlzLmluZGV4ID0gMA0KICB0aGlzLnBhcmVudEZpbmdlcnByaW50ID0gMHgwMDAwMDAwMA0KfQ0KDQpIRE5vZGUuSElHSEVTVF9CSVQgPSAweDgwMDAwMDAwDQpIRE5vZGUuTEVOR1RIID0gNzgNCkhETm9kZS5NQVNURVJfU0VDUkVUID0gbmV3IEJ1ZmZlcignQml0Y29pbiBzZWVkJykNCg0KSEROb2RlLmZyb21TZWVkQnVmZmVyID0gZnVuY3Rpb24gKHNlZWQsIG5ldHdvcmspIHsNCiAgdHlwZWZvcmNlKHR5cGVzLnR1cGxlKHR5cGVzLkJ1ZmZlciwgdHlwZXMubWF5YmUodHlwZXMuTmV0d29yaykpLCBhcmd1bWVudHMpDQoNCiAgaWYgKHNlZWQubGVuZ3RoIDwgMTYpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1NlZWQgc2hvdWxkIGJlIGF0IGxlYXN0IDEyOCBiaXRzJykNCiAgaWYgKHNlZWQubGVuZ3RoID4gNjQpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1NlZWQgc2hvdWxkIGJlIGF0IG1vc3QgNTEyIGJpdHMnKQ0KDQogIHZhciBJID0gY3JlYXRlSG1hYygnc2hhNTEyJywgSEROb2RlLk1BU1RFUl9TRUNSRVQpLnVwZGF0ZShzZWVkKS5kaWdlc3QoKQ0KICB2YXIgSUwgPSBJLnNsaWNlKDAsIDMyKQ0KICB2YXIgSVIgPSBJLnNsaWNlKDMyKQ0KDQogIC8vIEluIGNhc2UgSUwgaXMgMCBvciA+PSBuLCB0aGUgbWFzdGVyIGtleSBpcyBpbnZhbGlkDQogIC8vIFRoaXMgaXMgaGFuZGxlZCBieSB0aGUgRUNQYWlyIGNvbnN0cnVjdG9yDQogIHZhciBwSUwgPSBCaWdJbnRlZ2VyLmZyb21CdWZmZXIoSUwpDQogIHZhciBrZXlQYWlyID0gbmV3IEVDUGFpcihwSUwsIG51bGwsIHsNCiAgICBuZXR3b3JrOiBuZXR3b3JrDQogIH0pDQoNCiAgcmV0dXJuIG5ldyBIRE5vZGUoa2V5UGFpciwgSVIpDQp9DQoNCkhETm9kZS5mcm9tU2VlZEhleCA9IGZ1bmN0aW9uIChoZXgsIG5ldHdvcmspIHsNCiAgcmV0dXJuIEhETm9kZS5mcm9tU2VlZEJ1ZmZlcihuZXcgQnVmZmVyKGhleCwgJ2hleCcpLCBuZXR3b3JrKQ0KfQ0KDQpIRE5vZGUuZnJvbUJhc2U1OCA9IGZ1bmN0aW9uIChzdHJpbmcsIG5ldHdvcmtzKSB7DQogIHZhciBidWZmZXIgPSBiYXNlNThjaGVjay5kZWNvZGUoc3RyaW5nKQ0KICBpZiAoYnVmZmVyLmxlbmd0aCAhPT0gNzgpIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBidWZmZXIgbGVuZ3RoJykNCg0KICAvLyA0IGJ5dGVzOiB2ZXJzaW9uIGJ5dGVzDQogIHZhciB2ZXJzaW9uID0gYnVmZmVyLnJlYWRVSW50MzJCRSgwKQ0KICB2YXIgbmV0d29yaw0KDQogIC8vIGxpc3Qgb2YgbmV0d29ya3M/DQogIGlmIChBcnJheS5pc0FycmF5KG5ldHdvcmtzKSkgew0KICAgIG5ldHdvcmsgPSBuZXR3b3Jrcy5maWx0ZXIoZnVuY3Rpb24gKG5ldHdvcmspIHsNCiAgICAgIHJldHVybiB2ZXJzaW9uID09PSBuZXR3b3JrLmJpcDMyLnByaXZhdGUgfHwNCiAgICAgICAgICAgICB2ZXJzaW9uID09PSBuZXR3b3JrLmJpcDMyLnB1YmxpYw0KICAgIH0pLnBvcCgpIHx8IHt9DQoNCiAgLy8gb3RoZXJ3aXNlLCBhc3N1bWUgYSBuZXR3b3JrIG9iamVjdCAob3IgZGVmYXVsdCB0byBiaXRjb2luKQ0KICB9IGVsc2Ugew0KICAgIG5ldHdvcmsgPSBuZXR3b3JrcyB8fCBORVRXT1JLUy5iaXRjb2luDQogIH0NCg0KICBpZiAodmVyc2lvbiAhPT0gbmV0d29yay5iaXAzMi5wcml2YXRlICYmDQogICAgdmVyc2lvbiAhPT0gbmV0d29yay5iaXAzMi5wdWJsaWMpIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBuZXR3b3JrJykNCg0KICAvLyAxIGJ5dGU6IGRlcHRoOiAweDAwIGZvciBtYXN0ZXIgbm9kZXMsIDB4MDEgZm9yIGxldmVsLTEgZGVzY2VuZGFudHMsIC4uLg0KICB2YXIgZGVwdGggPSBidWZmZXJbNF0NCg0KICAvLyA0IGJ5dGVzOiB0aGUgZmluZ2VycHJpbnQgb2YgdGhlIHBhcmVudCdzIGtleSAoMHgwMDAwMDAwMCBpZiBtYXN0ZXIga2V5KQ0KICB2YXIgcGFyZW50RmluZ2VycHJpbnQgPSBidWZmZXIucmVhZFVJbnQzMkJFKDUpDQogIGlmIChkZXB0aCA9PT0gMCkgew0KICAgIGlmIChwYXJlbnRGaW5nZXJwcmludCAhPT0gMHgwMDAwMDAwMCkgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHBhcmVudCBmaW5nZXJwcmludCcpDQogIH0NCg0KICAvLyA0IGJ5dGVzOiBjaGlsZCBudW1iZXIuIFRoaXMgaXMgdGhlIG51bWJlciBpIGluIHhpID0geHBhci9pLCB3aXRoIHhpIHRoZSBrZXkgYmVpbmcgc2VyaWFsaXplZC4NCiAgLy8gVGhpcyBpcyBlbmNvZGVkIGluIE1TQiBvcmRlci4gKDB4MDAwMDAwMDAgaWYgbWFzdGVyIGtleSkNCiAgdmFyIGluZGV4ID0gYnVmZmVyLnJlYWRVSW50MzJCRSg5KQ0KICBpZiAoZGVwdGggPT09IDAgJiYgaW5kZXggIT09IDApIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBpbmRleCcpDQoNCiAgLy8gMzIgYnl0ZXM6IHRoZSBjaGFpbiBjb2RlDQogIHZhciBjaGFpbkNvZGUgPSBidWZmZXIuc2xpY2UoMTMsIDQ1KQ0KICB2YXIga2V5UGFpcg0KDQogIC8vIDMzIGJ5dGVzOiBwcml2YXRlIGtleSBkYXRhICgweDAwICsgaykNCiAgaWYgKHZlcnNpb24gPT09IG5ldHdvcmsuYmlwMzIucHJpdmF0ZSkgew0KICAgIGlmIChidWZmZXIucmVhZFVJbnQ4KDQ1KSAhPT0gMHgwMCkgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHByaXZhdGUga2V5JykNCg0KICAgIHZhciBkID0gQmlnSW50ZWdlci5mcm9tQnVmZmVyKGJ1ZmZlci5zbGljZSg0NiwgNzgpKQ0KDQogICAga2V5UGFpciA9IG5ldyBFQ1BhaXIoZCwgbnVsbCwgew0KICAgICAgbmV0d29yazogbmV0d29yaw0KICAgIH0pDQoNCiAgLy8gMzMgYnl0ZXM6IHB1YmxpYyBrZXkgZGF0YSAoMHgwMiArIFggb3IgMHgwMyArIFgpDQogIH0gZWxzZSB7DQogICAgdmFyIFEgPSBlY3VydmUuUG9pbnQuZGVjb2RlRnJvbShjdXJ2ZSwgYnVmZmVyLnNsaWNlKDQ1LCA3OCkpDQogICAgaWYgKCFRLmNvbXByZXNzZWQpIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBwdWJsaWMga2V5JykNCg0KICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBYIGNvb3JkaW5hdGUgaW4gdGhlIHB1YmxpYyBwb2ludCBjb3JyZXNwb25kcyB0byBhIHBvaW50IG9uIHRoZSBjdXJ2ZS4NCiAgICAvLyBJZiBub3QsIHRoZSBleHRlbmRlZCBwdWJsaWMga2V5IGlzIGludmFsaWQuDQogICAgY3VydmUudmFsaWRhdGUoUSkNCg0KICAgIGtleVBhaXIgPSBuZXcgRUNQYWlyKG51bGwsIFEsIHsNCiAgICAgIG5ldHdvcms6IG5ldHdvcmsNCiAgICB9KQ0KICB9DQoNCiAgdmFyIGhkID0gbmV3IEhETm9kZShrZXlQYWlyLCBjaGFpbkNvZGUpDQogIGhkLmRlcHRoID0gZGVwdGgNCiAgaGQuaW5kZXggPSBpbmRleA0KICBoZC5wYXJlbnRGaW5nZXJwcmludCA9IHBhcmVudEZpbmdlcnByaW50DQoNCiAgcmV0dXJuIGhkDQp9DQoNCkhETm9kZS5wcm90b3R5cGUuZ2V0QWRkcmVzcyA9IGZ1bmN0aW9uICgpIHsNCiAgcmV0dXJuIHRoaXMua2V5UGFpci5nZXRBZGRyZXNzKCkNCn0NCg0KSEROb2RlLnByb3RvdHlwZS5nZXRJZGVudGlmaWVyID0gZnVuY3Rpb24gKCkgew0KICByZXR1cm4gYmNyeXB0by5oYXNoMTYwKHRoaXMua2V5UGFpci5nZXRQdWJsaWNLZXlCdWZmZXIoKSkNCn0NCg0KSEROb2RlLnByb3RvdHlwZS5nZXRGaW5nZXJwcmludCA9IGZ1bmN0aW9uICgpIHsNCiAgcmV0dXJuIHRoaXMuZ2V0SWRlbnRpZmllcigpLnNsaWNlKDAsIDQpDQp9DQoNCkhETm9kZS5wcm90b3R5cGUuZ2V0TmV0d29yayA9IGZ1bmN0aW9uICgpIHsNCiAgcmV0dXJuIHRoaXMua2V5UGFpci5nZXROZXR3b3JrKCkNCn0NCg0KSEROb2RlLnByb3RvdHlwZS5nZXRQdWJsaWNLZXlCdWZmZXIgPSBmdW5jdGlvbiAoKSB7DQogIHJldHVybiB0aGlzLmtleVBhaXIuZ2V0UHVibGljS2V5QnVmZmVyKCkNCn0NCg0KSEROb2RlLnByb3RvdHlwZS5uZXV0ZXJlZCA9IGZ1bmN0aW9uICgpIHsNCiAgdmFyIG5ldXRlcmVkS2V5UGFpciA9IG5ldyBFQ1BhaXIobnVsbCwgdGhpcy5rZXlQYWlyLlEsIHsNCiAgICBuZXR3b3JrOiB0aGlzLmtleVBhaXIubmV0d29yaw0KICB9KQ0KDQogIHZhciBuZXV0ZXJlZCA9IG5ldyBIRE5vZGUobmV1dGVyZWRLZXlQYWlyLCB0aGlzLmNoYWluQ29kZSkNCiAgbmV1dGVyZWQuZGVwdGggPSB0aGlzLmRlcHRoDQogIG5ldXRlcmVkLmluZGV4ID0gdGhpcy5pbmRleA0KICBuZXV0ZXJlZC5wYXJlbnRGaW5nZXJwcmludCA9IHRoaXMucGFyZW50RmluZ2VycHJpbnQNCg0KICByZXR1cm4gbmV1dGVyZWQNCn0NCg0KSEROb2RlLnByb3RvdHlwZS5zaWduID0gZnVuY3Rpb24gKGhhc2gpIHsNCiAgcmV0dXJuIHRoaXMua2V5UGFpci5zaWduKGhhc2gpDQp9DQoNCkhETm9kZS5wcm90b3R5cGUudmVyaWZ5ID0gZnVuY3Rpb24gKGhhc2gsIHNpZ25hdHVyZSkgew0KICByZXR1cm4gdGhpcy5rZXlQYWlyLnZlcmlmeShoYXNoLCBzaWduYXR1cmUpDQp9DQoNCkhETm9kZS5wcm90b3R5cGUudG9CYXNlNTggPSBmdW5jdGlvbiAoX19pc1ByaXZhdGUpIHsNCiAgaWYgKF9faXNQcml2YXRlICE9PSB1bmRlZmluZWQpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vuc3VwcG9ydGVkIGFyZ3VtZW50IGluIDIuMC4wJykNCg0KICAvLyBWZXJzaW9uDQogIHZhciBuZXR3b3JrID0gdGhpcy5rZXlQYWlyLm5ldHdvcmsNCiAgdmFyIHZlcnNpb24gPSB0aGlzLmtleVBhaXIuZCA/IG5ldHdvcmsuYmlwMzIucHJpdmF0ZSA6IG5ldHdvcmsuYmlwMzIucHVibGljDQogIHZhciBidWZmZXIgPSBuZXcgQnVmZmVyKDc4KQ0KDQogIC8vIDQgYnl0ZXM6IHZlcnNpb24gYnl0ZXMNCiAgYnVmZmVyLndyaXRlVUludDMyQkUodmVyc2lvbiwgMCkNCg0KICAvLyAxIGJ5dGU6IGRlcHRoOiAweDAwIGZvciBtYXN0ZXIgbm9kZXMsIDB4MDEgZm9yIGxldmVsLTEgZGVzY2VuZGFudHMsIC4uLi4NCiAgYnVmZmVyLndyaXRlVUludDgodGhpcy5kZXB0aCwgNCkNCg0KICAvLyA0IGJ5dGVzOiB0aGUgZmluZ2VycHJpbnQgb2YgdGhlIHBhcmVudCdzIGtleSAoMHgwMDAwMDAwMCBpZiBtYXN0ZXIga2V5KQ0KICBidWZmZXIud3JpdGVVSW50MzJCRSh0aGlzLnBhcmVudEZpbmdlcnByaW50LCA1KQ0KDQogIC8vIDQgYnl0ZXM6IGNoaWxkIG51bWJlci4gVGhpcyBpcyB0aGUgbnVtYmVyIGkgaW4geGkgPSB4cGFyL2ksIHdpdGggeGkgdGhlIGtleSBiZWluZyBzZXJpYWxpemVkLg0KICAvLyBUaGlzIGlzIGVuY29kZWQgaW4gYmlnIGVuZGlhbi4gKDB4MDAwMDAwMDAgaWYgbWFzdGVyIGtleSkNCiAgYnVmZmVyLndyaXRlVUludDMyQkUodGhpcy5pbmRleCwgOSkNCg0KICAvLyAzMiBieXRlczogdGhlIGNoYWluIGNvZGUNCiAgdGhpcy5jaGFpbkNvZGUuY29weShidWZmZXIsIDEzKQ0KDQogIC8vIDMzIGJ5dGVzOiB0aGUgcHVibGljIGtleSBvciBwcml2YXRlIGtleSBkYXRhDQogIGlmICh0aGlzLmtleVBhaXIuZCkgew0KICAgIC8vIDB4MDAgKyBrIGZvciBwcml2YXRlIGtleXMNCiAgICBidWZmZXIud3JpdGVVSW50OCgwLCA0NSkNCiAgICB0aGlzLmtleVBhaXIuZC50b0J1ZmZlcigzMikuY29weShidWZmZXIsIDQ2KQ0KDQogIC8vIDMzIGJ5dGVzOiB0aGUgcHVibGljIGtleQ0KICB9IGVsc2Ugew0KICAgIC8vIFg5LjYyIGVuY29kaW5nIGZvciBwdWJsaWMga2V5cw0KICAgIHRoaXMua2V5UGFpci5nZXRQdWJsaWNLZXlCdWZmZXIoKS5jb3B5KGJ1ZmZlciwgNDUpDQogIH0NCg0KICByZXR1cm4gYmFzZTU4Y2hlY2suZW5jb2RlKGJ1ZmZlcikNCn0NCg0KLy8gaHR0cHM6Ly9naXRodWIuY29tL2JpdGNvaW4vYmlwcy9ibG9iL21hc3Rlci9iaXAtMDAzMi5tZWRpYXdpa2kjY2hpbGQta2V5LWRlcml2YXRpb24tY2tkLWZ1bmN0aW9ucw0KSEROb2RlLnByb3RvdHlwZS5kZXJpdmUgPSBmdW5jdGlvbiAoaW5kZXgpIHsNCiAgdmFyIGlzSGFyZGVuZWQgPSBpbmRleCA+PSBIRE5vZGUuSElHSEVTVF9CSVQNCiAgdmFyIGRhdGEgPSBuZXcgQnVmZmVyKDM3KQ0KDQogIC8vIEhhcmRlbmVkIGNoaWxkDQogIGlmIChpc0hhcmRlbmVkKSB7DQogICAgaWYgKCF0aGlzLmtleVBhaXIuZCkgdGhyb3cgbmV3IFR5cGVFcnJvcignQ291bGQgbm90IGRlcml2ZSBoYXJkZW5lZCBjaGlsZCBrZXknKQ0KDQogICAgLy8gZGF0YSA9IDB4MDAgfHwgc2VyMjU2KGtwYXIpIHx8IHNlcjMyKGluZGV4KQ0KICAgIGRhdGFbMF0gPSAweDAwDQogICAgdGhpcy5rZXlQYWlyLmQudG9CdWZmZXIoMzIpLmNvcHkoZGF0YSwgMSkNCiAgICBkYXRhLndyaXRlVUludDMyQkUoaW5kZXgsIDMzKQ0KDQogIC8vIE5vcm1hbCBjaGlsZA0KICB9IGVsc2Ugew0KICAgIC8vIGRhdGEgPSBzZXJQKHBvaW50KGtwYXIpKSB8fCBzZXIzMihpbmRleCkNCiAgICAvLyAgICAgID0gc2VyUChLcGFyKSB8fCBzZXIzMihpbmRleCkNCiAgICB0aGlzLmtleVBhaXIuZ2V0UHVibGljS2V5QnVmZmVyKCkuY29weShkYXRhLCAwKQ0KICAgIGRhdGEud3JpdGVVSW50MzJCRShpbmRleCwgMzMpDQogIH0NCg0KICB2YXIgSSA9IGNyZWF0ZUhtYWMoJ3NoYTUxMicsIHRoaXMuY2hhaW5Db2RlKS51cGRhdGUoZGF0YSkuZGlnZXN0KCkNCiAgdmFyIElMID0gSS5zbGljZSgwLCAzMikNCiAgdmFyIElSID0gSS5zbGljZSgzMikNCg0KICB2YXIgcElMID0gQmlnSW50ZWdlci5mcm9tQnVmZmVyKElMKQ0KDQogIC8vIEluIGNhc2UgcGFyc2UyNTYoSUwpID49IG4sIHByb2NlZWQgd2l0aCB0aGUgbmV4dCB2YWx1ZSBmb3IgaQ0KICBpZiAocElMLmNvbXBhcmVUbyhjdXJ2ZS5uKSA+PSAwKSB7DQogICAgcmV0dXJuIHRoaXMuZGVyaXZlKGluZGV4ICsgMSkNCiAgfQ0KDQogIC8vIFByaXZhdGUgcGFyZW50IGtleSAtPiBwcml2YXRlIGNoaWxkIGtleQ0KICB2YXIgZGVyaXZlZEtleVBhaXINCiAgaWYgKHRoaXMua2V5UGFpci5kKSB7DQogICAgLy8ga2kgPSBwYXJzZTI1NihJTCkgKyBrcGFyIChtb2QgbikNCiAgICB2YXIga2kgPSBwSUwuYWRkKHRoaXMua2V5UGFpci5kKS5tb2QoY3VydmUubikNCg0KICAgIC8vIEluIGNhc2Uga2kgPT0gMCwgcHJvY2VlZCB3aXRoIHRoZSBuZXh0IHZhbHVlIGZvciBpDQogICAgaWYgKGtpLnNpZ251bSgpID09PSAwKSB7DQogICAgICByZXR1cm4gdGhpcy5kZXJpdmUoaW5kZXggKyAxKQ0KICAgIH0NCg0KICAgIGRlcml2ZWRLZXlQYWlyID0gbmV3IEVDUGFpcihraSwgbnVsbCwgew0KICAgICAgbmV0d29yazogdGhpcy5rZXlQYWlyLm5ldHdvcmsNCiAgICB9KQ0KDQogIC8vIFB1YmxpYyBwYXJlbnQga2V5IC0+IHB1YmxpYyBjaGlsZCBrZXkNCiAgfSBlbHNlIHsNCiAgICAvLyBLaSA9IHBvaW50KHBhcnNlMjU2KElMKSkgKyBLcGFyDQogICAgLy8gICAgPSBHKklMICsgS3Bhcg0KICAgIHZhciBLaSA9IGN1cnZlLkcubXVsdGlwbHkocElMKS5hZGQodGhpcy5rZXlQYWlyLlEpDQoNCiAgICAvLyBJbiBjYXNlIEtpIGlzIHRoZSBwb2ludCBhdCBpbmZpbml0eSwgcHJvY2VlZCB3aXRoIHRoZSBuZXh0IHZhbHVlIGZvciBpDQogICAgaWYgKGN1cnZlLmlzSW5maW5pdHkoS2kpKSB7DQogICAgICByZXR1cm4gdGhpcy5kZXJpdmUoaW5kZXggKyAxKQ0KICAgIH0NCg0KICAgIGRlcml2ZWRLZXlQYWlyID0gbmV3IEVDUGFpcihudWxsLCBLaSwgew0KICAgICAgbmV0d29yazogdGhpcy5rZXlQYWlyLm5ldHdvcmsNCiAgICB9KQ0KICB9DQoNCiAgdmFyIGhkID0gbmV3IEhETm9kZShkZXJpdmVkS2V5UGFpciwgSVIpDQogIGhkLmRlcHRoID0gdGhpcy5kZXB0aCArIDENCiAgaGQuaW5kZXggPSBpbmRleA0KICBoZC5wYXJlbnRGaW5nZXJwcmludCA9IHRoaXMuZ2V0RmluZ2VycHJpbnQoKS5yZWFkVUludDMyQkUoMCkNCg0KICByZXR1cm4gaGQNCn0NCg0KSEROb2RlLnByb3RvdHlwZS5kZXJpdmVIYXJkZW5lZCA9IGZ1bmN0aW9uIChpbmRleCkgew0KICAvLyBPbmx5IGRlcml2ZXMgaGFyZGVuZWQgcHJpdmF0ZSBrZXlzIGJ5IGRlZmF1bHQNCiAgcmV0dXJuIHRoaXMuZGVyaXZlKGluZGV4ICsgSEROb2RlLkhJR0hFU1RfQklUKQ0KfQ0KDQpIRE5vZGUucHJvdG90eXBlLnRvU3RyaW5nID0gSEROb2RlLnByb3RvdHlwZS50b0Jhc2U1OA0KDQptb2R1bGUuZXhwb3J0cyA9IEhETm9kZQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vY3J5cHRvIjo0NSwiLi9lY3BhaXIiOjQ3LCIuL25ldHdvcmtzIjo1MiwiLi90eXBlcyI6NTgsImJpZ2kiOjM3LCJiczU4Y2hlY2siOjg4LCJidWZmZXIiOjkzLCJjcmVhdGUtaG1hYyI6NDkxLCJlY3VydmUiOjUwNSwidHlwZWZvcmNlIjo1ODJ9XSw1MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IHsNCiAgQmxvY2s6IHJlcXVpcmUoJy4vYmxvY2snKSwNCiAgRUNQYWlyOiByZXF1aXJlKCcuL2VjcGFpcicpLA0KICBFQ1NpZ25hdHVyZTogcmVxdWlyZSgnLi9lY3NpZ25hdHVyZScpLA0KICBIRE5vZGU6IHJlcXVpcmUoJy4vaGRub2RlJyksDQogIFRyYW5zYWN0aW9uOiByZXF1aXJlKCcuL3RyYW5zYWN0aW9uJyksDQogIFRyYW5zYWN0aW9uQnVpbGRlcjogcmVxdWlyZSgnLi90cmFuc2FjdGlvbl9idWlsZGVyJyksDQoNCiAgYWRkcmVzczogcmVxdWlyZSgnLi9hZGRyZXNzJyksDQogIGJ1ZmZlcnV0aWxzOiByZXF1aXJlKCcuL2J1ZmZlcnV0aWxzJyksDQogIGNyeXB0bzogcmVxdWlyZSgnLi9jcnlwdG8nKSwNCiAgbWVzc2FnZTogcmVxdWlyZSgnLi9tZXNzYWdlJyksDQogIG5ldHdvcmtzOiByZXF1aXJlKCcuL25ldHdvcmtzJyksDQogIG9wY29kZXM6IHJlcXVpcmUoJy4vb3Bjb2RlcycpLA0KICBzY3JpcHQ6IHJlcXVpcmUoJy4vc2NyaXB0JykNCn0NCg0KfSx7Ii4vYWRkcmVzcyI6NDIsIi4vYmxvY2siOjQzLCIuL2J1ZmZlcnV0aWxzIjo0NCwiLi9jcnlwdG8iOjQ1LCIuL2VjcGFpciI6NDcsIi4vZWNzaWduYXR1cmUiOjQ4LCIuL2hkbm9kZSI6NDksIi4vbWVzc2FnZSI6NTEsIi4vbmV0d29ya3MiOjUyLCIuL29wY29kZXMiOjUzLCIuL3NjcmlwdCI6NTQsIi4vdHJhbnNhY3Rpb24iOjU2LCIuL3RyYW5zYWN0aW9uX2J1aWxkZXIiOjU3fV0sNTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIGJ1ZmZlcnV0aWxzID0gcmVxdWlyZSgnLi9idWZmZXJ1dGlscycpDQp2YXIgYmNyeXB0byA9IHJlcXVpcmUoJy4vY3J5cHRvJykNCnZhciBlY2RzYSA9IHJlcXVpcmUoJy4vZWNkc2EnKQ0KdmFyIG5ldHdvcmtzID0gcmVxdWlyZSgnLi9uZXR3b3JrcycpDQoNCnZhciBCaWdJbnRlZ2VyID0gcmVxdWlyZSgnYmlnaScpDQp2YXIgRUNQYWlyID0gcmVxdWlyZSgnLi9lY3BhaXInKQ0KdmFyIEVDU2lnbmF0dXJlID0gcmVxdWlyZSgnLi9lY3NpZ25hdHVyZScpDQoNCmZ1bmN0aW9uIG1hZ2ljSGFzaCAobWVzc2FnZSwgbmV0d29yaykgew0KICB2YXIgbWVzc2FnZVByZWZpeCA9IG5ldyBCdWZmZXIobmV0d29yay5tZXNzYWdlUHJlZml4KQ0KICB2YXIgbWVzc2FnZUJ1ZmZlciA9IG5ldyBCdWZmZXIobWVzc2FnZSkNCiAgdmFyIGxlbmd0aEJ1ZmZlciA9IGJ1ZmZlcnV0aWxzLnZhckludEJ1ZmZlcihtZXNzYWdlQnVmZmVyLmxlbmd0aCkNCg0KICB2YXIgYnVmZmVyID0gQnVmZmVyLmNvbmNhdChbbWVzc2FnZVByZWZpeCwgbGVuZ3RoQnVmZmVyLCBtZXNzYWdlQnVmZmVyXSkNCiAgcmV0dXJuIGJjcnlwdG8uaGFzaDI1NihidWZmZXIpDQp9DQoNCmZ1bmN0aW9uIHNpZ24gKGtleVBhaXIsIG1lc3NhZ2UsIG5ldHdvcmspIHsNCiAgbmV0d29yayA9IG5ldHdvcmsgfHwgbmV0d29ya3MuYml0Y29pbg0KDQogIHZhciBoYXNoID0gbWFnaWNIYXNoKG1lc3NhZ2UsIG5ldHdvcmspDQogIHZhciBzaWduYXR1cmUgPSBrZXlQYWlyLnNpZ24oaGFzaCkNCiAgdmFyIGUgPSBCaWdJbnRlZ2VyLmZyb21CdWZmZXIoaGFzaCkNCiAgdmFyIGkgPSBlY2RzYS5jYWxjUHViS2V5UmVjb3ZlcnlQYXJhbShlLCBzaWduYXR1cmUsIGtleVBhaXIuUSkNCg0KICByZXR1cm4gc2lnbmF0dXJlLnRvQ29tcGFjdChpLCBrZXlQYWlyLmNvbXByZXNzZWQpDQp9DQoNCmZ1bmN0aW9uIHZlcmlmeSAoYWRkcmVzcywgc2lnbmF0dXJlLCBtZXNzYWdlLCBuZXR3b3JrKSB7DQogIGlmICghQnVmZmVyLmlzQnVmZmVyKHNpZ25hdHVyZSkpIHsNCiAgICBzaWduYXR1cmUgPSBuZXcgQnVmZmVyKHNpZ25hdHVyZSwgJ2Jhc2U2NCcpDQogIH0NCg0KICBuZXR3b3JrID0gbmV0d29yayB8fCBuZXR3b3Jrcy5iaXRjb2luDQoNCiAgdmFyIGhhc2ggPSBtYWdpY0hhc2gobWVzc2FnZSwgbmV0d29yaykNCiAgdmFyIHBhcnNlZCA9IEVDU2lnbmF0dXJlLnBhcnNlQ29tcGFjdChzaWduYXR1cmUpDQogIHZhciBlID0gQmlnSW50ZWdlci5mcm9tQnVmZmVyKGhhc2gpDQogIHZhciBRID0gZWNkc2EucmVjb3ZlclB1YktleShlLCBwYXJzZWQuc2lnbmF0dXJlLCBwYXJzZWQuaSkNCg0KICB2YXIga2V5UGFpciA9IG5ldyBFQ1BhaXIobnVsbCwgUSwgew0KICAgIGNvbXByZXNzZWQ6IHBhcnNlZC5jb21wcmVzc2VkLA0KICAgIG5ldHdvcms6IG5ldHdvcmsNCiAgfSkNCg0KICByZXR1cm4ga2V5UGFpci5nZXRBZGRyZXNzKCkgPT09IGFkZHJlc3MNCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSB7DQogIG1hZ2ljSGFzaDogbWFnaWNIYXNoLA0KICBzaWduOiBzaWduLA0KICB2ZXJpZnk6IHZlcmlmeQ0KfQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vYnVmZmVydXRpbHMiOjQ0LCIuL2NyeXB0byI6NDUsIi4vZWNkc2EiOjQ2LCIuL2VjcGFpciI6NDcsIi4vZWNzaWduYXR1cmUiOjQ4LCIuL25ldHdvcmtzIjo1MiwiYmlnaSI6MzcsImJ1ZmZlciI6OTN9XSw1MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBodHRwczovL2VuLmJpdGNvaW4uaXQvd2lraS9MaXN0X29mX2FkZHJlc3NfcHJlZml4ZXMNCi8vIERvZ2Vjb2luIEJJUDMyIGlzIGEgcHJvcG9zZWQgc3RhbmRhcmQ6IGh0dHBzOi8vYml0Y29pbnRhbGsub3JnL2luZGV4LnBocD90b3BpYz00MDk3MzENCg0KbW9kdWxlLmV4cG9ydHMgPSB7DQogIGJpdGNvaW46IHsNCiAgICBtZXNzYWdlUHJlZml4OiAnXHgxOEJpdGNvaW4gU2lnbmVkIE1lc3NhZ2U6XG4nLA0KICAgIGJpcDMyOiB7DQogICAgICBwdWJsaWM6IDB4MDQ4OGIyMWUsDQogICAgICBwcml2YXRlOiAweDA0ODhhZGU0DQogICAgfSwNCiAgICBwdWJLZXlIYXNoOiAweDAwLA0KICAgIHNjcmlwdEhhc2g6IDB4MDUsDQogICAgd2lmOiAweDgwLA0KICAgIGR1c3RUaHJlc2hvbGQ6IDU0NiAvLyBodHRwczovL2dpdGh1Yi5jb20vYml0Y29pbi9iaXRjb2luL2Jsb2IvdjAuOS4yL3NyYy9jb3JlLmgjTDE1MS1MMTYyDQogIH0sDQogIHRlc3RuZXQ6IHsNCiAgICBtZXNzYWdlUHJlZml4OiAnXHgxOEJpdGNvaW4gU2lnbmVkIE1lc3NhZ2U6XG4nLA0KICAgIGJpcDMyOiB7DQogICAgICBwdWJsaWM6IDB4MDQzNTg3Y2YsDQogICAgICBwcml2YXRlOiAweDA0MzU4Mzk0DQogICAgfSwNCiAgICBwdWJLZXlIYXNoOiAweDZmLA0KICAgIHNjcmlwdEhhc2g6IDB4YzQsDQogICAgd2lmOiAweGVmLA0KICAgIGR1c3RUaHJlc2hvbGQ6IDU0Ng0KICB9LA0KICBsaXRlY29pbjogew0KICAgIG1lc3NhZ2VQcmVmaXg6ICdceDE5TGl0ZWNvaW4gU2lnbmVkIE1lc3NhZ2U6XG4nLA0KICAgIGJpcDMyOiB7DQogICAgICBwdWJsaWM6IDB4MDE5ZGE0NjIsDQogICAgICBwcml2YXRlOiAweDAxOWQ5Y2ZlDQogICAgfSwNCiAgICBwdWJLZXlIYXNoOiAweDMwLA0KICAgIHNjcmlwdEhhc2g6IDB4MDUsDQogICAgd2lmOiAweGIwLA0KICAgIGR1c3RUaHJlc2hvbGQ6IDAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2xpdGVjb2luLXByb2plY3QvbGl0ZWNvaW4vYmxvYi92MC44LjcuMi9zcmMvbWFpbi5jcHAjTDM2MC1MMzY1DQogIH0sDQogIGRvZ2Vjb2luOiB7DQogICAgbWVzc2FnZVByZWZpeDogJ1x4MTlEb2dlY29pbiBTaWduZWQgTWVzc2FnZTpcbicsDQogICAgYmlwMzI6IHsNCiAgICAgIHB1YmxpYzogMHgwMmZhY2FmZCwNCiAgICAgIHByaXZhdGU6IDB4MDJmYWMzOTgNCiAgICB9LA0KICAgIHB1YktleUhhc2g6IDB4MWUsDQogICAgc2NyaXB0SGFzaDogMHgxNiwNCiAgICB3aWY6IDB4OWUsDQogICAgZHVzdFRocmVzaG9sZDogMCAvLyBodHRwczovL2dpdGh1Yi5jb20vZG9nZWNvaW4vZG9nZWNvaW4vYmxvYi92MS43LjEvc3JjL2NvcmUuaCNMMTU1LUwxNjANCiAgfQ0KfQ0KDQp9LHt9XSw1MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cz17DQogICJPUF9GQUxTRSI6IDAsDQogICJPUF8wIjogMCwNCiAgIk9QX1BVU0hEQVRBMSI6IDc2LA0KICAiT1BfUFVTSERBVEEyIjogNzcsDQogICJPUF9QVVNIREFUQTQiOiA3OCwNCiAgIk9QXzFORUdBVEUiOiA3OSwNCiAgIk9QX1JFU0VSVkVEIjogODAsDQogICJPUF8xIjogODEsDQogICJPUF9UUlVFIjogODEsDQogICJPUF8yIjogODIsDQogICJPUF8zIjogODMsDQogICJPUF80IjogODQsDQogICJPUF81IjogODUsDQogICJPUF82IjogODYsDQogICJPUF83IjogODcsDQogICJPUF84IjogODgsDQogICJPUF85IjogODksDQogICJPUF8xMCI6IDkwLA0KICAiT1BfMTEiOiA5MSwNCiAgIk9QXzEyIjogOTIsDQogICJPUF8xMyI6IDkzLA0KICAiT1BfMTQiOiA5NCwNCiAgIk9QXzE1IjogOTUsDQogICJPUF8xNiI6IDk2LA0KDQogICJPUF9OT1AiOiA5NywNCiAgIk9QX1ZFUiI6IDk4LA0KICAiT1BfSUYiOiA5OSwNCiAgIk9QX05PVElGIjogMTAwLA0KICAiT1BfVkVSSUYiOiAxMDEsDQogICJPUF9WRVJOT1RJRiI6IDEwMiwNCiAgIk9QX0VMU0UiOiAxMDMsDQogICJPUF9FTkRJRiI6IDEwNCwNCiAgIk9QX1ZFUklGWSI6IDEwNSwNCiAgIk9QX1JFVFVSTiI6IDEwNiwNCg0KICAiT1BfVE9BTFRTVEFDSyI6IDEwNywNCiAgIk9QX0ZST01BTFRTVEFDSyI6IDEwOCwNCiAgIk9QXzJEUk9QIjogMTA5LA0KICAiT1BfMkRVUCI6IDExMCwNCiAgIk9QXzNEVVAiOiAxMTEsDQogICJPUF8yT1ZFUiI6IDExMiwNCiAgIk9QXzJST1QiOiAxMTMsDQogICJPUF8yU1dBUCI6IDExNCwNCiAgIk9QX0lGRFVQIjogMTE1LA0KICAiT1BfREVQVEgiOiAxMTYsDQogICJPUF9EUk9QIjogMTE3LA0KICAiT1BfRFVQIjogMTE4LA0KICAiT1BfTklQIjogMTE5LA0KICAiT1BfT1ZFUiI6IDEyMCwNCiAgIk9QX1BJQ0siOiAxMjEsDQogICJPUF9ST0xMIjogMTIyLA0KICAiT1BfUk9UIjogMTIzLA0KICAiT1BfU1dBUCI6IDEyNCwNCiAgIk9QX1RVQ0siOiAxMjUsDQoNCiAgIk9QX0NBVCI6IDEyNiwNCiAgIk9QX1NVQlNUUiI6IDEyNywNCiAgIk9QX0xFRlQiOiAxMjgsDQogICJPUF9SSUdIVCI6IDEyOSwNCiAgIk9QX1NJWkUiOiAxMzAsDQoNCiAgIk9QX0lOVkVSVCI6IDEzMSwNCiAgIk9QX0FORCI6IDEzMiwNCiAgIk9QX09SIjogMTMzLA0KICAiT1BfWE9SIjogMTM0LA0KICAiT1BfRVFVQUwiOiAxMzUsDQogICJPUF9FUVVBTFZFUklGWSI6IDEzNiwNCiAgIk9QX1JFU0VSVkVEMSI6IDEzNywNCiAgIk9QX1JFU0VSVkVEMiI6IDEzOCwNCg0KICAiT1BfMUFERCI6IDEzOSwNCiAgIk9QXzFTVUIiOiAxNDAsDQogICJPUF8yTVVMIjogMTQxLA0KICAiT1BfMkRJViI6IDE0MiwNCiAgIk9QX05FR0FURSI6IDE0MywNCiAgIk9QX0FCUyI6IDE0NCwNCiAgIk9QX05PVCI6IDE0NSwNCiAgIk9QXzBOT1RFUVVBTCI6IDE0NiwNCiAgIk9QX0FERCI6IDE0NywNCiAgIk9QX1NVQiI6IDE0OCwNCiAgIk9QX01VTCI6IDE0OSwNCiAgIk9QX0RJViI6IDE1MCwNCiAgIk9QX01PRCI6IDE1MSwNCiAgIk9QX0xTSElGVCI6IDE1MiwNCiAgIk9QX1JTSElGVCI6IDE1MywNCg0KICAiT1BfQk9PTEFORCI6IDE1NCwNCiAgIk9QX0JPT0xPUiI6IDE1NSwNCiAgIk9QX05VTUVRVUFMIjogMTU2LA0KICAiT1BfTlVNRVFVQUxWRVJJRlkiOiAxNTcsDQogICJPUF9OVU1OT1RFUVVBTCI6IDE1OCwNCiAgIk9QX0xFU1NUSEFOIjogMTU5LA0KICAiT1BfR1JFQVRFUlRIQU4iOiAxNjAsDQogICJPUF9MRVNTVEhBTk9SRVFVQUwiOiAxNjEsDQogICJPUF9HUkVBVEVSVEhBTk9SRVFVQUwiOiAxNjIsDQogICJPUF9NSU4iOiAxNjMsDQogICJPUF9NQVgiOiAxNjQsDQoNCiAgIk9QX1dJVEhJTiI6IDE2NSwNCg0KICAiT1BfUklQRU1EMTYwIjogMTY2LA0KICAiT1BfU0hBMSI6IDE2NywNCiAgIk9QX1NIQTI1NiI6IDE2OCwNCiAgIk9QX0hBU0gxNjAiOiAxNjksDQogICJPUF9IQVNIMjU2IjogMTcwLA0KICAiT1BfQ09ERVNFUEFSQVRPUiI6IDE3MSwNCiAgIk9QX0NIRUNLU0lHIjogMTcyLA0KICAiT1BfQ0hFQ0tTSUdWRVJJRlkiOiAxNzMsDQogICJPUF9DSEVDS01VTFRJU0lHIjogMTc0LA0KICAiT1BfQ0hFQ0tNVUxUSVNJR1ZFUklGWSI6IDE3NSwNCg0KICAiT1BfTk9QMSI6IDE3NiwNCiAgIk9QX05PUDIiOiAxNzcsDQogICJPUF9DSEVDS0xPQ0tUSU1FVkVSSUZZIjogMTc3LA0KDQogICJPUF9OT1AzIjogMTc4LA0KICAiT1BfTk9QNCI6IDE3OSwNCiAgIk9QX05PUDUiOiAxODAsDQogICJPUF9OT1A2IjogMTgxLA0KICAiT1BfTk9QNyI6IDE4MiwNCiAgIk9QX05PUDgiOiAxODMsDQogICJPUF9OT1A5IjogMTg0LA0KICAiT1BfTk9QMTAiOiAxODUsDQoNCiAgIk9QX1BVQktFWUhBU0giOiAyNTMsDQogICJPUF9QVUJLRVkiOiAyNTQsDQogICJPUF9JTlZBTElET1BDT0RFIjogMjU1DQp9DQoNCn0se31dLDU0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCnZhciBiaXA2NiA9IHJlcXVpcmUoJ2JpcDY2JykNCnZhciBidWZmZXJ1dGlscyA9IHJlcXVpcmUoJy4vYnVmZmVydXRpbHMnKQ0KdmFyIHR5cGVmb3JjZSA9IHJlcXVpcmUoJ3R5cGVmb3JjZScpDQp2YXIgdHlwZXMgPSByZXF1aXJlKCcuL3R5cGVzJykNCg0KdmFyIE9QUyA9IHJlcXVpcmUoJy4vb3Bjb2RlcycpDQp2YXIgUkVWRVJTRV9PUFMgPSAoZnVuY3Rpb24gKCkgew0KICB2YXIgcmVzdWx0ID0ge30NCiAgZm9yICh2YXIgb3AgaW4gT1BTKSB7DQogICAgdmFyIGNvZGUgPSBPUFNbb3BdDQogICAgcmVzdWx0W2NvZGVdID0gb3ANCiAgfQ0KICByZXR1cm4gcmVzdWx0DQp9KSgpDQoNCnZhciBPUF9JTlRfQkFTRSA9IE9QUy5PUF9SRVNFUlZFRCAvLyBPUF8xIC0gMQ0KDQpmdW5jdGlvbiB0b0FTTSAoY2h1bmtzKSB7DQogIGlmIChCdWZmZXIuaXNCdWZmZXIoY2h1bmtzKSkgew0KICAgIGNodW5rcyA9IGRlY29tcGlsZShjaHVua3MpDQogIH0NCg0KICByZXR1cm4gY2h1bmtzLm1hcChmdW5jdGlvbiAoY2h1bmspIHsNCiAgICAvLyBkYXRhPw0KICAgIGlmIChCdWZmZXIuaXNCdWZmZXIoY2h1bmspKSByZXR1cm4gY2h1bmsudG9TdHJpbmcoJ2hleCcpDQoNCiAgICAvLyBvcGNvZGUhDQogICAgcmV0dXJuIFJFVkVSU0VfT1BTW2NodW5rXQ0KICB9KS5qb2luKCcgJykNCn0NCg0KZnVuY3Rpb24gZnJvbUFTTSAoYXNtKSB7DQogIHR5cGVmb3JjZSh0eXBlcy5TdHJpbmcsIGFzbSkNCg0KICByZXR1cm4gY29tcGlsZShhc20uc3BsaXQoJyAnKS5tYXAoZnVuY3Rpb24gKGNodW5rU3RyKSB7DQogICAgLy8gb3Bjb2RlPw0KICAgIGlmIChPUFNbY2h1bmtTdHJdICE9PSB1bmRlZmluZWQpIHJldHVybiBPUFNbY2h1bmtTdHJdDQoNCiAgICAvLyBkYXRhIQ0KICAgIHJldHVybiBuZXcgQnVmZmVyKGNodW5rU3RyLCAnaGV4JykNCiAgfSkpDQp9DQoNCmZ1bmN0aW9uIGNvbXBpbGUgKGNodW5rcykgew0KICAvLyBUT0RPOiByZW1vdmUgbWUNCiAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihjaHVua3MpKSByZXR1cm4gY2h1bmtzDQoNCiAgdHlwZWZvcmNlKHR5cGVzLkFycmF5LCBjaHVua3MpDQoNCiAgdmFyIGJ1ZmZlclNpemUgPSBjaHVua3MucmVkdWNlKGZ1bmN0aW9uIChhY2N1bSwgY2h1bmspIHsNCiAgICAvLyBkYXRhIGNodW5rDQogICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihjaHVuaykpIHsNCiAgICAgIHJldHVybiBhY2N1bSArIGJ1ZmZlcnV0aWxzLnB1c2hEYXRhU2l6ZShjaHVuay5sZW5ndGgpICsgY2h1bmsubGVuZ3RoDQogICAgfQ0KDQogICAgLy8gb3Bjb2RlDQogICAgcmV0dXJuIGFjY3VtICsgMQ0KICB9LCAwLjApDQoNCiAgdmFyIGJ1ZmZlciA9IG5ldyBCdWZmZXIoYnVmZmVyU2l6ZSkNCiAgdmFyIG9mZnNldCA9IDANCg0KICBjaHVua3MuZm9yRWFjaChmdW5jdGlvbiAoY2h1bmspIHsNCiAgICAvLyBkYXRhIGNodW5rDQogICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihjaHVuaykpIHsNCiAgICAgIG9mZnNldCArPSBidWZmZXJ1dGlscy53cml0ZVB1c2hEYXRhSW50KGJ1ZmZlciwgY2h1bmsubGVuZ3RoLCBvZmZzZXQpDQoNCiAgICAgIGNodW5rLmNvcHkoYnVmZmVyLCBvZmZzZXQpDQogICAgICBvZmZzZXQgKz0gY2h1bmsubGVuZ3RoDQoNCiAgICAvLyBvcGNvZGUNCiAgICB9IGVsc2Ugew0KICAgICAgYnVmZmVyLndyaXRlVUludDgoY2h1bmssIG9mZnNldCkNCiAgICAgIG9mZnNldCArPSAxDQogICAgfQ0KICB9KQ0KDQogIGlmIChvZmZzZXQgIT09IGJ1ZmZlci5sZW5ndGgpIHRocm93IG5ldyBFcnJvcignQ291bGQgbm90IGRlY29kZSBjaHVua3MnKQ0KICByZXR1cm4gYnVmZmVyDQp9DQoNCmZ1bmN0aW9uIGRlY29tcGlsZSAoYnVmZmVyKSB7DQogIC8vIFRPRE86IHJlbW92ZSBtZQ0KICBpZiAodHlwZXMuQXJyYXkoYnVmZmVyKSkgcmV0dXJuIGJ1ZmZlcg0KDQogIHR5cGVmb3JjZSh0eXBlcy5CdWZmZXIsIGJ1ZmZlcikNCg0KICB2YXIgY2h1bmtzID0gW10NCiAgdmFyIGkgPSAwDQoNCiAgd2hpbGUgKGkgPCBidWZmZXIubGVuZ3RoKSB7DQogICAgdmFyIG9wY29kZSA9IGJ1ZmZlcltpXQ0KDQogICAgLy8gZGF0YSBjaHVuaw0KICAgIGlmICgob3Bjb2RlID4gT1BTLk9QXzApICYmIChvcGNvZGUgPD0gT1BTLk9QX1BVU0hEQVRBNCkpIHsNCiAgICAgIHZhciBkID0gYnVmZmVydXRpbHMucmVhZFB1c2hEYXRhSW50KGJ1ZmZlciwgaSkNCg0KICAgICAgLy8gZGlkIHJlYWRpbmcgYSBwdXNoRGF0YUludCBmYWlsPyBlbXB0eSBzY3JpcHQNCiAgICAgIGlmIChkID09PSBudWxsKSByZXR1cm4gW10NCiAgICAgIGkgKz0gZC5zaXplDQoNCiAgICAgIC8vIGF0dGVtcHQgdG8gcmVhZCB0b28gbXVjaCBkYXRhPyBlbXB0eSBzY3JpcHQNCiAgICAgIGlmIChpICsgZC5udW1iZXIgPiBidWZmZXIubGVuZ3RoKSByZXR1cm4gW10NCg0KICAgICAgdmFyIGRhdGEgPSBidWZmZXIuc2xpY2UoaSwgaSArIGQubnVtYmVyKQ0KICAgICAgaSArPSBkLm51bWJlcg0KDQogICAgICBjaHVua3MucHVzaChkYXRhKQ0KDQogICAgLy8gb3Bjb2RlDQogICAgfSBlbHNlIHsNCiAgICAgIGNodW5rcy5wdXNoKG9wY29kZSkNCg0KICAgICAgaSArPSAxDQogICAgfQ0KICB9DQoNCiAgcmV0dXJuIGNodW5rcw0KfQ0KDQpmdW5jdGlvbiBpc0Nhbm9uaWNhbFB1YktleSAoYnVmZmVyKSB7DQogIGlmICghQnVmZmVyLmlzQnVmZmVyKGJ1ZmZlcikpIHJldHVybiBmYWxzZQ0KICBpZiAoYnVmZmVyLmxlbmd0aCA8IDMzKSByZXR1cm4gZmFsc2UNCg0KICBzd2l0Y2ggKGJ1ZmZlclswXSkgew0KICAgIGNhc2UgMHgwMjoNCiAgICBjYXNlIDB4MDM6DQogICAgICByZXR1cm4gYnVmZmVyLmxlbmd0aCA9PT0gMzMNCiAgICBjYXNlIDB4MDQ6DQogICAgICByZXR1cm4gYnVmZmVyLmxlbmd0aCA9PT0gNjUNCiAgfQ0KDQogIHJldHVybiBmYWxzZQ0KfQ0KDQpmdW5jdGlvbiBpc0Nhbm9uaWNhbFNpZ25hdHVyZSAoYnVmZmVyKSB7DQogIGlmICghQnVmZmVyLmlzQnVmZmVyKGJ1ZmZlcikpIHJldHVybiBmYWxzZQ0KICBpZiAoIWlzRGVmaW5lZEhhc2hUeXBlKGJ1ZmZlcltidWZmZXIubGVuZ3RoIC0gMV0pKSByZXR1cm4gZmFsc2UNCg0KICByZXR1cm4gYmlwNjYuY2hlY2soYnVmZmVyLnNsaWNlKDAsIC0xKSkNCn0NCg0KZnVuY3Rpb24gaXNEZWZpbmVkSGFzaFR5cGUgKGhhc2hUeXBlKSB7DQogIHZhciBoYXNoVHlwZU1vZCA9IGhhc2hUeXBlICYgfjB4ODANCg0KLy8gcmV0dXJuIGhhc2hUeXBlTW9kID4gU0lHSEFTSF9BTEwgJiYgaGFzaFR5cGVNb2QgPCBTSUdIQVNIX1NJTkdMRQ0KICByZXR1cm4gaGFzaFR5cGVNb2QgPiAweDAwICYmIGhhc2hUeXBlTW9kIDwgMHgwNA0KfQ0KDQpmdW5jdGlvbiBpc1B1YktleUhhc2hJbnB1dCAoc2NyaXB0KSB7DQogIHZhciBjaHVua3MgPSBkZWNvbXBpbGUoc2NyaXB0KQ0KDQogIHJldHVybiBjaHVua3MubGVuZ3RoID09PSAyICYmDQogICAgaXNDYW5vbmljYWxTaWduYXR1cmUoY2h1bmtzWzBdKSAmJg0KICAgIGlzQ2Fub25pY2FsUHViS2V5KGNodW5rc1sxXSkNCn0NCg0KZnVuY3Rpb24gaXNQdWJLZXlIYXNoT3V0cHV0IChzY3JpcHQpIHsNCiAgdmFyIGJ1ZmZlciA9IGNvbXBpbGUoc2NyaXB0KQ0KDQogIHJldHVybiBidWZmZXIubGVuZ3RoID09PSAyNSAmJg0KICAgIGJ1ZmZlclswXSA9PT0gT1BTLk9QX0RVUCAmJg0KICAgIGJ1ZmZlclsxXSA9PT0gT1BTLk9QX0hBU0gxNjAgJiYNCiAgICBidWZmZXJbMl0gPT09IDB4MTQgJiYNCiAgICBidWZmZXJbMjNdID09PSBPUFMuT1BfRVFVQUxWRVJJRlkgJiYNCiAgICBidWZmZXJbMjRdID09PSBPUFMuT1BfQ0hFQ0tTSUcNCn0NCg0KZnVuY3Rpb24gaXNQdWJLZXlJbnB1dCAoc2NyaXB0KSB7DQogIHZhciBjaHVua3MgPSBkZWNvbXBpbGUoc2NyaXB0KQ0KDQogIHJldHVybiBjaHVua3MubGVuZ3RoID09PSAxICYmDQogICAgaXNDYW5vbmljYWxTaWduYXR1cmUoY2h1bmtzWzBdKQ0KfQ0KDQpmdW5jdGlvbiBpc1B1YktleU91dHB1dCAoc2NyaXB0KSB7DQogIHZhciBjaHVua3MgPSBkZWNvbXBpbGUoc2NyaXB0KQ0KDQogIHJldHVybiBjaHVua3MubGVuZ3RoID09PSAyICYmDQogICAgaXNDYW5vbmljYWxQdWJLZXkoY2h1bmtzWzBdKSAmJg0KICAgIGNodW5rc1sxXSA9PT0gT1BTLk9QX0NIRUNLU0lHDQp9DQoNCmZ1bmN0aW9uIGlzU2NyaXB0SGFzaElucHV0IChzY3JpcHQsIGFsbG93SW5jb21wbGV0ZSkgew0KICB2YXIgY2h1bmtzID0gZGVjb21waWxlKHNjcmlwdCkNCiAgaWYgKGNodW5rcy5sZW5ndGggPCAyKSByZXR1cm4gZmFsc2UNCg0KICB2YXIgbGFzdENodW5rID0gY2h1bmtzW2NodW5rcy5sZW5ndGggLSAxXQ0KICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihsYXN0Q2h1bmspKSByZXR1cm4gZmFsc2UNCg0KICB2YXIgc2NyaXB0U2lnQ2h1bmtzID0gY2h1bmtzLnNsaWNlKDAsIC0xKQ0KICB2YXIgcmVkZWVtU2NyaXB0Q2h1bmtzID0gZGVjb21waWxlKGxhc3RDaHVuaykNCg0KICAvLyBpcyByZWRlZW1TY3JpcHQgYSB2YWxpZCBzY3JpcHQ/DQogIGlmIChyZWRlZW1TY3JpcHRDaHVua3MubGVuZ3RoID09PSAwKSByZXR1cm4gZmFsc2UNCg0KICByZXR1cm4gY2xhc3NpZnlJbnB1dChzY3JpcHRTaWdDaHVua3MsIGFsbG93SW5jb21wbGV0ZSkgPT09IGNsYXNzaWZ5T3V0cHV0KHJlZGVlbVNjcmlwdENodW5rcykNCn0NCg0KZnVuY3Rpb24gaXNTY3JpcHRIYXNoT3V0cHV0IChzY3JpcHQpIHsNCiAgdmFyIGJ1ZmZlciA9IGNvbXBpbGUoc2NyaXB0KQ0KDQogIHJldHVybiBidWZmZXIubGVuZ3RoID09PSAyMyAmJg0KICAgIGJ1ZmZlclswXSA9PT0gT1BTLk9QX0hBU0gxNjAgJiYNCiAgICBidWZmZXJbMV0gPT09IDB4MTQgJiYNCiAgICBidWZmZXJbMjJdID09PSBPUFMuT1BfRVFVQUwNCn0NCg0KLy8gYWxsb3dJbmNvbXBsZXRlIGlzIHRvIGFjY291bnQgZm9yIGNvbWJpbmluZyBzaWduYXR1cmVzDQovLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2JpdGNvaW4vYml0Y29pbi9ibG9iL2Y0MjUwNTA1NDY2NDRhMzZiMGI4ZTBlYjJmNjkzNGEzZTBmNmY4MGYvc3JjL3NjcmlwdC9zaWduLmNwcCNMMTk1LUwxOTcNCmZ1bmN0aW9uIGlzTXVsdGlzaWdJbnB1dCAoc2NyaXB0LCBhbGxvd0luY29tcGxldGUpIHsNCiAgdmFyIGNodW5rcyA9IGRlY29tcGlsZShzY3JpcHQpDQogIGlmIChjaHVua3MubGVuZ3RoIDwgMikgcmV0dXJuIGZhbHNlDQogIGlmIChjaHVua3NbMF0gIT09IE9QUy5PUF8wKSByZXR1cm4gZmFsc2UNCg0KICBpZiAoYWxsb3dJbmNvbXBsZXRlKSB7DQogICAgcmV0dXJuIGNodW5rcy5zbGljZSgxKS5ldmVyeShmdW5jdGlvbiAoY2h1bmspIHsNCiAgICAgIHJldHVybiBjaHVuayA9PT0gT1BTLk9QXzAgfHwgaXNDYW5vbmljYWxTaWduYXR1cmUoY2h1bmspDQogICAgfSkNCiAgfQ0KDQogIHJldHVybiBjaHVua3Muc2xpY2UoMSkuZXZlcnkoaXNDYW5vbmljYWxTaWduYXR1cmUpDQp9DQoNCmZ1bmN0aW9uIGlzTXVsdGlzaWdPdXRwdXQgKHNjcmlwdCkgew0KICB2YXIgY2h1bmtzID0gZGVjb21waWxlKHNjcmlwdCkNCiAgaWYgKGNodW5rcy5sZW5ndGggPCA0KSByZXR1cm4gZmFsc2UNCiAgaWYgKGNodW5rc1tjaHVua3MubGVuZ3RoIC0gMV0gIT09IE9QUy5PUF9DSEVDS01VTFRJU0lHKSByZXR1cm4gZmFsc2UNCg0KICB2YXIgbU9wID0gY2h1bmtzWzBdDQogIHZhciBuT3AgPSBjaHVua3NbY2h1bmtzLmxlbmd0aCAtIDJdDQoNCiAgaWYgKCF0eXBlcy5OdW1iZXIobU9wKSkgcmV0dXJuIGZhbHNlDQogIGlmICghdHlwZXMuTnVtYmVyKG5PcCkpIHJldHVybiBmYWxzZQ0KDQogIHZhciBtID0gbU9wIC0gT1BfSU5UX0JBU0UNCiAgdmFyIG4gPSBuT3AgLSBPUF9JTlRfQkFTRQ0KDQogIC8vIDAgPCBtIDw9IG4gPD0gMTYNCiAgaWYgKG0gPD0gMCkgcmV0dXJuIGZhbHNlDQogIGlmIChtID4gbikgcmV0dXJuIGZhbHNlDQogIGlmIChuID4gMTYpIHJldHVybiBmYWxzZQ0KICBpZiAobiAhPT0gY2h1bmtzLmxlbmd0aCAtIDMpIHJldHVybiBmYWxzZQ0KDQogIHJldHVybiBjaHVua3Muc2xpY2UoMSwgLTIpLmV2ZXJ5KGlzQ2Fub25pY2FsUHViS2V5KQ0KfQ0KDQpmdW5jdGlvbiBpc051bGxEYXRhT3V0cHV0IChzY3JpcHQpIHsNCiAgdmFyIGNodW5rcyA9IGRlY29tcGlsZShzY3JpcHQpDQogIHJldHVybiBjaHVua3NbMF0gPT09IE9QUy5PUF9SRVRVUk4NCn0NCg0KZnVuY3Rpb24gY2xhc3NpZnlPdXRwdXQgKHNjcmlwdCkgew0KICB2YXIgY2h1bmtzID0gZGVjb21waWxlKHNjcmlwdCkNCg0KICBpZiAoaXNQdWJLZXlIYXNoT3V0cHV0KGNodW5rcykpIHsNCiAgICByZXR1cm4gJ3B1YmtleWhhc2gnDQogIH0gZWxzZSBpZiAoaXNTY3JpcHRIYXNoT3V0cHV0KGNodW5rcykpIHsNCiAgICByZXR1cm4gJ3NjcmlwdGhhc2gnDQogIH0gZWxzZSBpZiAoaXNNdWx0aXNpZ091dHB1dChjaHVua3MpKSB7DQogICAgcmV0dXJuICdtdWx0aXNpZycNCiAgfSBlbHNlIGlmIChpc1B1YktleU91dHB1dChjaHVua3MpKSB7DQogICAgcmV0dXJuICdwdWJrZXknDQogIH0gZWxzZSBpZiAoaXNOdWxsRGF0YU91dHB1dChjaHVua3MpKSB7DQogICAgcmV0dXJuICdudWxsZGF0YScNCiAgfQ0KDQogIHJldHVybiAnbm9uc3RhbmRhcmQnDQp9DQoNCmZ1bmN0aW9uIGNsYXNzaWZ5SW5wdXQgKHNjcmlwdCwgYWxsb3dJbmNvbXBsZXRlKSB7DQogIHZhciBjaHVua3MgPSBkZWNvbXBpbGUoc2NyaXB0KQ0KDQogIGlmIChpc1B1YktleUhhc2hJbnB1dChjaHVua3MpKSB7DQogICAgcmV0dXJuICdwdWJrZXloYXNoJw0KICB9IGVsc2UgaWYgKGlzTXVsdGlzaWdJbnB1dChjaHVua3MsIGFsbG93SW5jb21wbGV0ZSkpIHsNCiAgICByZXR1cm4gJ211bHRpc2lnJw0KICB9IGVsc2UgaWYgKGlzU2NyaXB0SGFzaElucHV0KGNodW5rcywgYWxsb3dJbmNvbXBsZXRlKSkgew0KICAgIHJldHVybiAnc2NyaXB0aGFzaCcNCiAgfSBlbHNlIGlmIChpc1B1YktleUlucHV0KGNodW5rcykpIHsNCiAgICByZXR1cm4gJ3B1YmtleScNCiAgfQ0KDQogIHJldHVybiAnbm9uc3RhbmRhcmQnDQp9DQoNCi8vIFN0YW5kYXJkIFNjcmlwdCBUZW1wbGF0ZXMNCi8vIHtwdWJLZXl9IE9QX0NIRUNLU0lHDQpmdW5jdGlvbiBwdWJLZXlPdXRwdXQgKHB1YktleSkgew0KICByZXR1cm4gY29tcGlsZShbcHViS2V5LCBPUFMuT1BfQ0hFQ0tTSUddKQ0KfQ0KDQovLyBPUF9EVVAgT1BfSEFTSDE2MCB7cHViS2V5SGFzaH0gT1BfRVFVQUxWRVJJRlkgT1BfQ0hFQ0tTSUcNCmZ1bmN0aW9uIHB1YktleUhhc2hPdXRwdXQgKHB1YktleUhhc2gpIHsNCiAgdHlwZWZvcmNlKHR5cGVzLkhhc2gxNjBiaXQsIHB1YktleUhhc2gpDQoNCiAgcmV0dXJuIGNvbXBpbGUoW09QUy5PUF9EVVAsIE9QUy5PUF9IQVNIMTYwLCBwdWJLZXlIYXNoLCBPUFMuT1BfRVFVQUxWRVJJRlksIE9QUy5PUF9DSEVDS1NJR10pDQp9DQoNCi8vIE9QX0hBU0gxNjAge3NjcmlwdEhhc2h9IE9QX0VRVUFMDQpmdW5jdGlvbiBzY3JpcHRIYXNoT3V0cHV0IChzY3JpcHRIYXNoKSB7DQogIHR5cGVmb3JjZSh0eXBlcy5IYXNoMTYwYml0LCBzY3JpcHRIYXNoKQ0KDQogIHJldHVybiBjb21waWxlKFtPUFMuT1BfSEFTSDE2MCwgc2NyaXB0SGFzaCwgT1BTLk9QX0VRVUFMXSkNCn0NCg0KLy8gbSBbcHViS2V5cyAuLi5dIG4gT1BfQ0hFQ0tNVUxUSVNJRw0KZnVuY3Rpb24gbXVsdGlzaWdPdXRwdXQgKG0sIHB1YktleXMpIHsNCiAgdHlwZWZvcmNlKHR5cGVzLnR1cGxlKHR5cGVzLk51bWJlciwgW3R5cGVzLkJ1ZmZlcl0pLCBhcmd1bWVudHMpDQoNCiAgdmFyIG4gPSBwdWJLZXlzLmxlbmd0aA0KICBpZiAobiA8IG0pIHRocm93IG5ldyBFcnJvcignTm90IGVub3VnaCBwdWJLZXlzIHByb3ZpZGVkJykNCg0KICByZXR1cm4gY29tcGlsZShbXS5jb25jYXQoDQogICAgT1BfSU5UX0JBU0UgKyBtLA0KICAgIHB1YktleXMsDQogICAgT1BfSU5UX0JBU0UgKyBuLA0KICAgIE9QUy5PUF9DSEVDS01VTFRJU0lHDQogICkpDQp9DQoNCi8vIHtzaWduYXR1cmV9DQpmdW5jdGlvbiBwdWJLZXlJbnB1dCAoc2lnbmF0dXJlKSB7DQogIHR5cGVmb3JjZSh0eXBlcy5CdWZmZXIsIHNpZ25hdHVyZSkNCg0KICByZXR1cm4gY29tcGlsZShbc2lnbmF0dXJlXSkNCn0NCg0KLy8ge3NpZ25hdHVyZX0ge3B1YktleX0NCmZ1bmN0aW9uIHB1YktleUhhc2hJbnB1dCAoc2lnbmF0dXJlLCBwdWJLZXkpIHsNCiAgdHlwZWZvcmNlKHR5cGVzLnR1cGxlKHR5cGVzLkJ1ZmZlciwgdHlwZXMuQnVmZmVyKSwgYXJndW1lbnRzKQ0KDQogIHJldHVybiBjb21waWxlKFtzaWduYXR1cmUsIHB1YktleV0pDQp9DQoNCi8vIDxzY3JpcHRTaWc+IHtzZXJpYWxpemVkIHNjcmlwdFB1YktleSBzY3JpcHR9DQpmdW5jdGlvbiBzY3JpcHRIYXNoSW5wdXQgKHNjcmlwdFNpZywgc2NyaXB0UHViS2V5KSB7DQogIHZhciBzY3JpcHRTaWdDaHVua3MgPSBkZWNvbXBpbGUoc2NyaXB0U2lnKQ0KICB2YXIgc2VyaWFsaXplZFNjcmlwdFB1YktleSA9IGNvbXBpbGUoc2NyaXB0UHViS2V5KQ0KDQogIHJldHVybiBjb21waWxlKFtdLmNvbmNhdCgNCiAgICBzY3JpcHRTaWdDaHVua3MsDQogICAgc2VyaWFsaXplZFNjcmlwdFB1YktleQ0KICApKQ0KfQ0KDQovLyBPUF8wIFtzaWduYXR1cmVzIC4uLl0NCmZ1bmN0aW9uIG11bHRpc2lnSW5wdXQgKHNpZ25hdHVyZXMsIHNjcmlwdFB1YktleSkgew0KICBpZiAoc2NyaXB0UHViS2V5KSB7DQogICAgdmFyIGNodW5rcyA9IGRlY29tcGlsZShzY3JpcHRQdWJLZXkpDQogICAgaWYgKCFpc011bHRpc2lnT3V0cHV0KGNodW5rcykpIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgbXVsdGlzaWcgc2NyaXB0UHViS2V5JykNCg0KICAgIHZhciBtT3AgPSBjaHVua3NbMF0NCiAgICB2YXIgbk9wID0gY2h1bmtzW2NodW5rcy5sZW5ndGggLSAyXQ0KICAgIHZhciBtID0gbU9wIC0gT1BfSU5UX0JBU0UNCiAgICB2YXIgbiA9IG5PcCAtIE9QX0lOVF9CQVNFDQoNCiAgICBpZiAoc2lnbmF0dXJlcy5sZW5ndGggPCBtKSB0aHJvdyBuZXcgRXJyb3IoJ05vdCBlbm91Z2ggc2lnbmF0dXJlcyBwcm92aWRlZCcpDQogICAgaWYgKHNpZ25hdHVyZXMubGVuZ3RoID4gbikgdGhyb3cgbmV3IEVycm9yKCdUb28gbWFueSBzaWduYXR1cmVzIHByb3ZpZGVkJykNCiAgfQ0KDQogIHJldHVybiBjb21waWxlKFtdLmNvbmNhdChPUFMuT1BfMCwgc2lnbmF0dXJlcykpDQp9DQoNCmZ1bmN0aW9uIG51bGxEYXRhT3V0cHV0IChkYXRhKSB7DQogIHJldHVybiBjb21waWxlKFtPUFMuT1BfUkVUVVJOLCBkYXRhXSkNCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSB7DQogIGNvbXBpbGU6IGNvbXBpbGUsDQogIGRlY29tcGlsZTogZGVjb21waWxlLA0KICBmcm9tQVNNOiBmcm9tQVNNLA0KICB0b0FTTTogdG9BU00sDQoNCiAgbnVtYmVyOiByZXF1aXJlKCcuL3NjcmlwdF9udW1iZXInKSwNCg0KICBpc0Nhbm9uaWNhbFB1YktleTogaXNDYW5vbmljYWxQdWJLZXksDQogIGlzQ2Fub25pY2FsU2lnbmF0dXJlOiBpc0Nhbm9uaWNhbFNpZ25hdHVyZSwNCiAgaXNEZWZpbmVkSGFzaFR5cGU6IGlzRGVmaW5lZEhhc2hUeXBlLA0KICBpc1B1YktleUhhc2hJbnB1dDogaXNQdWJLZXlIYXNoSW5wdXQsDQogIGlzUHViS2V5SGFzaE91dHB1dDogaXNQdWJLZXlIYXNoT3V0cHV0LA0KICBpc1B1YktleUlucHV0OiBpc1B1YktleUlucHV0LA0KICBpc1B1YktleU91dHB1dDogaXNQdWJLZXlPdXRwdXQsDQogIGlzU2NyaXB0SGFzaElucHV0OiBpc1NjcmlwdEhhc2hJbnB1dCwNCiAgaXNTY3JpcHRIYXNoT3V0cHV0OiBpc1NjcmlwdEhhc2hPdXRwdXQsDQogIGlzTXVsdGlzaWdJbnB1dDogaXNNdWx0aXNpZ0lucHV0LA0KICBpc011bHRpc2lnT3V0cHV0OiBpc011bHRpc2lnT3V0cHV0LA0KICBpc051bGxEYXRhT3V0cHV0OiBpc051bGxEYXRhT3V0cHV0LA0KICBjbGFzc2lmeU91dHB1dDogY2xhc3NpZnlPdXRwdXQsDQogIGNsYXNzaWZ5SW5wdXQ6IGNsYXNzaWZ5SW5wdXQsDQogIHB1YktleU91dHB1dDogcHViS2V5T3V0cHV0LA0KICBwdWJLZXlIYXNoT3V0cHV0OiBwdWJLZXlIYXNoT3V0cHV0LA0KICBzY3JpcHRIYXNoT3V0cHV0OiBzY3JpcHRIYXNoT3V0cHV0LA0KICBtdWx0aXNpZ091dHB1dDogbXVsdGlzaWdPdXRwdXQsDQogIHB1YktleUlucHV0OiBwdWJLZXlJbnB1dCwNCiAgcHViS2V5SGFzaElucHV0OiBwdWJLZXlIYXNoSW5wdXQsDQogIHNjcmlwdEhhc2hJbnB1dDogc2NyaXB0SGFzaElucHV0LA0KICBtdWx0aXNpZ0lucHV0OiBtdWx0aXNpZ0lucHV0LA0KICBudWxsRGF0YU91dHB1dDogbnVsbERhdGFPdXRwdXQNCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyIuL2J1ZmZlcnV0aWxzIjo0NCwiLi9vcGNvZGVzIjo1MywiLi9zY3JpcHRfbnVtYmVyIjo1NSwiLi90eXBlcyI6NTgsImJpcDY2Ijo0MSwiYnVmZmVyIjo5MywidHlwZWZvcmNlIjo1ODJ9XSw1NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQpmdW5jdGlvbiBkZWNvZGUgKGJ1ZmZlciwgbWF4TGVuZ3RoLCBtaW5pbWFsKSB7DQogIG1heExlbmd0aCA9IG1heExlbmd0aCB8fCA0DQogIG1pbmltYWwgPSBtaW5pbWFsID09PSB1bmRlZmluZWQgPyB0cnVlIDogbWluaW1hbA0KDQogIHZhciBsZW5ndGggPSBidWZmZXIubGVuZ3RoDQogIGlmIChsZW5ndGggPT09IDApIHJldHVybiAwDQogIGlmIChsZW5ndGggPiBtYXhMZW5ndGgpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1NjcmlwdCBudW1iZXIgb3ZlcmZsb3cnKQ0KICBpZiAobWluaW1hbCkgew0KICAgIGlmICgoYnVmZmVyW2xlbmd0aCAtIDFdICYgMHg3ZikgPT09IDApIHsNCiAgICAgIGlmIChsZW5ndGggPD0gMSB8fCAoYnVmZmVyW2xlbmd0aCAtIDJdICYgMHg4MCkgPT09IDApIHRocm93IG5ldyBFcnJvcignTm9uLW1pbmltYWxseSBlbmNvZGVkIHNjcmlwdCBudW1iZXInKQ0KICAgIH0NCiAgfQ0KDQogIC8vIDQwLWJpdA0KICBpZiAobGVuZ3RoID09PSA1KSB7DQogICAgdmFyIGEgPSBidWZmZXIucmVhZFVJbnQzMkxFKDApDQogICAgdmFyIGIgPSBidWZmZXIucmVhZFVJbnQ4KDQpDQoNCiAgICBpZiAoYiAmIDB4ODApIHJldHVybiAtKChiICYgfjB4ODApICogMHgxMDAwMDAwMDAgKyBhKQ0KICAgIHJldHVybiBiICogMHgxMDAwMDAwMDAgKyBhDQogIH0NCg0KICB2YXIgcmVzdWx0ID0gMA0KDQogIC8vIDMyLWJpdCAvIDI0LWJpdCAvIDE2LWJpdCAvIDgtYml0DQogIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHsNCiAgICByZXN1bHQgfD0gYnVmZmVyW2ldIDw8ICg4ICogaSkNCiAgfQ0KDQogIGlmIChidWZmZXJbbGVuZ3RoIC0gMV0gJiAweDgwKSByZXR1cm4gLShyZXN1bHQgJiB+KDB4ODAgPDwgKDggKiAobGVuZ3RoIC0gMSkpKSkNCiAgcmV0dXJuIHJlc3VsdA0KfQ0KDQpmdW5jdGlvbiBzY3JpcHROdW1TaXplIChpKSB7DQogIHJldHVybiBpID4gMHg3ZmZmZmZmZiA/IDUNCiAgOiBpID4gMHg3ZmZmZmYgPyA0DQogIDogaSA+IDB4N2ZmZiA/IDMNCiAgOiBpID4gMHg3ZiA/IDINCiAgOiBpID4gMHgwMCA/IDENCiAgOiAwDQp9DQoNCmZ1bmN0aW9uIGVuY29kZSAobnVtYmVyKSB7DQogIHZhciB2YWx1ZSA9IE1hdGguYWJzKG51bWJlcikNCiAgdmFyIHNpemUgPSBzY3JpcHROdW1TaXplKHZhbHVlKQ0KICB2YXIgYnVmZmVyID0gbmV3IEJ1ZmZlcihzaXplKQ0KICB2YXIgbmVnYXRpdmUgPSBudW1iZXIgPCAwDQoNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzaXplOyArK2kpIHsNCiAgICBidWZmZXIud3JpdGVVSW50OCh2YWx1ZSAmIDB4ZmYsIGkpDQogICAgdmFsdWUgPj49IDgNCiAgfQ0KDQogIGlmIChidWZmZXJbc2l6ZSAtIDFdICYgMHg4MCkgew0KICAgIGJ1ZmZlci53cml0ZVVJbnQ4KG5lZ2F0aXZlID8gMHg4MCA6IDB4MDAsIHNpemUgLSAxKQ0KICB9IGVsc2UgaWYgKG5lZ2F0aXZlKSB7DQogICAgYnVmZmVyW3NpemUgLSAxXSB8PSAweDgwDQogIH0NCg0KICByZXR1cm4gYnVmZmVyDQp9DQoNCm1vZHVsZS5leHBvcnRzID0gew0KICBkZWNvZGU6IGRlY29kZSwNCiAgZW5jb2RlOiBlbmNvZGUNCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJidWZmZXIiOjkzfV0sNTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIGJjcnlwdG8gPSByZXF1aXJlKCcuL2NyeXB0bycpDQp2YXIgYnNjcmlwdCA9IHJlcXVpcmUoJy4vc2NyaXB0JykNCnZhciBidWZmZXJ1dGlscyA9IHJlcXVpcmUoJy4vYnVmZmVydXRpbHMnKQ0KdmFyIG9wY29kZXMgPSByZXF1aXJlKCcuL29wY29kZXMnKQ0KdmFyIHR5cGVmb3JjZSA9IHJlcXVpcmUoJ3R5cGVmb3JjZScpDQp2YXIgdHlwZXMgPSByZXF1aXJlKCcuL3R5cGVzJykNCg0KZnVuY3Rpb24gVHJhbnNhY3Rpb24gKCkgew0KICB0aGlzLnZlcnNpb24gPSAxDQogIHRoaXMubG9ja3RpbWUgPSAwDQogIHRoaXMuaW5zID0gW10NCiAgdGhpcy5vdXRzID0gW10NCn0NCg0KVHJhbnNhY3Rpb24uREVGQVVMVF9TRVFVRU5DRSA9IDB4ZmZmZmZmZmYNClRyYW5zYWN0aW9uLlNJR0hBU0hfQUxMID0gMHgwMQ0KVHJhbnNhY3Rpb24uU0lHSEFTSF9OT05FID0gMHgwMg0KVHJhbnNhY3Rpb24uU0lHSEFTSF9TSU5HTEUgPSAweDAzDQpUcmFuc2FjdGlvbi5TSUdIQVNIX0FOWU9ORUNBTlBBWSA9IDB4ODANCg0KVHJhbnNhY3Rpb24uZnJvbUJ1ZmZlciA9IGZ1bmN0aW9uIChidWZmZXIsIF9fbm9TdHJpY3QpIHsNCiAgdmFyIG9mZnNldCA9IDANCiAgZnVuY3Rpb24gcmVhZFNsaWNlIChuKSB7DQogICAgb2Zmc2V0ICs9IG4NCiAgICByZXR1cm4gYnVmZmVyLnNsaWNlKG9mZnNldCAtIG4sIG9mZnNldCkNCiAgfQ0KDQogIGZ1bmN0aW9uIHJlYWRVSW50MzIgKCkgew0KICAgIHZhciBpID0gYnVmZmVyLnJlYWRVSW50MzJMRShvZmZzZXQpDQogICAgb2Zmc2V0ICs9IDQNCiAgICByZXR1cm4gaQ0KICB9DQoNCiAgZnVuY3Rpb24gcmVhZFVJbnQ2NCAoKSB7DQogICAgdmFyIGkgPSBidWZmZXJ1dGlscy5yZWFkVUludDY0TEUoYnVmZmVyLCBvZmZzZXQpDQogICAgb2Zmc2V0ICs9IDgNCiAgICByZXR1cm4gaQ0KICB9DQoNCiAgZnVuY3Rpb24gcmVhZFZhckludCAoKSB7DQogICAgdmFyIHZpID0gYnVmZmVydXRpbHMucmVhZFZhckludChidWZmZXIsIG9mZnNldCkNCiAgICBvZmZzZXQgKz0gdmkuc2l6ZQ0KICAgIHJldHVybiB2aS5udW1iZXINCiAgfQ0KDQogIGZ1bmN0aW9uIHJlYWRTY3JpcHQgKCkgew0KICAgIHJldHVybiByZWFkU2xpY2UocmVhZFZhckludCgpKQ0KICB9DQoNCiAgdmFyIHR4ID0gbmV3IFRyYW5zYWN0aW9uKCkNCiAgdHgudmVyc2lvbiA9IHJlYWRVSW50MzIoKQ0KDQogIHZhciB2aW5MZW4gPSByZWFkVmFySW50KCkNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2aW5MZW47ICsraSkgew0KICAgIHR4Lmlucy5wdXNoKHsNCiAgICAgIGhhc2g6IHJlYWRTbGljZSgzMiksDQogICAgICBpbmRleDogcmVhZFVJbnQzMigpLA0KICAgICAgc2NyaXB0OiByZWFkU2NyaXB0KCksDQogICAgICBzZXF1ZW5jZTogcmVhZFVJbnQzMigpDQogICAgfSkNCiAgfQ0KDQogIHZhciB2b3V0TGVuID0gcmVhZFZhckludCgpDQogIGZvciAoaSA9IDA7IGkgPCB2b3V0TGVuOyArK2kpIHsNCiAgICB0eC5vdXRzLnB1c2goew0KICAgICAgdmFsdWU6IHJlYWRVSW50NjQoKSwNCiAgICAgIHNjcmlwdDogcmVhZFNjcmlwdCgpDQogICAgfSkNCiAgfQ0KDQogIHR4LmxvY2t0aW1lID0gcmVhZFVJbnQzMigpDQoNCiAgaWYgKF9fbm9TdHJpY3QpIHJldHVybiB0eA0KICBpZiAob2Zmc2V0ICE9PSBidWZmZXIubGVuZ3RoKSB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zYWN0aW9uIGhhcyB1bmV4cGVjdGVkIGRhdGEnKQ0KDQogIHJldHVybiB0eA0KfQ0KDQpUcmFuc2FjdGlvbi5mcm9tSGV4ID0gZnVuY3Rpb24gKGhleCkgew0KICByZXR1cm4gVHJhbnNhY3Rpb24uZnJvbUJ1ZmZlcihuZXcgQnVmZmVyKGhleCwgJ2hleCcpKQ0KfQ0KDQpUcmFuc2FjdGlvbi5pc0NvaW5iYXNlSGFzaCA9IGZ1bmN0aW9uIChidWZmZXIpIHsNCiAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5ldmVyeS5jYWxsKGJ1ZmZlciwgZnVuY3Rpb24gKHgpIHsNCiAgICByZXR1cm4geCA9PT0gMA0KICB9KQ0KfQ0KDQp2YXIgRU1QVFlfU0NSSVBUID0gbmV3IEJ1ZmZlcigwKQ0KDQpUcmFuc2FjdGlvbi5wcm90b3R5cGUuYWRkSW5wdXQgPSBmdW5jdGlvbiAoaGFzaCwgaW5kZXgsIHNlcXVlbmNlLCBzY3JpcHRTaWcpIHsNCiAgdHlwZWZvcmNlKHR5cGVzLnR1cGxlKA0KICAgIHR5cGVzLkhhc2gyNTZiaXQsDQogICAgdHlwZXMuVUludDMyLA0KICAgIHR5cGVzLm1heWJlKHR5cGVzLlVJbnQzMiksDQogICAgdHlwZXMubWF5YmUodHlwZXMuQnVmZmVyKQ0KICApLCBhcmd1bWVudHMpDQoNCiAgaWYgKHR5cGVzLk51bGwoc2VxdWVuY2UpKSB7DQogICAgc2VxdWVuY2UgPSBUcmFuc2FjdGlvbi5ERUZBVUxUX1NFUVVFTkNFDQogIH0NCg0KICAvLyBBZGQgdGhlIGlucHV0IGFuZCByZXR1cm4gdGhlIGlucHV0J3MgaW5kZXgNCiAgcmV0dXJuICh0aGlzLmlucy5wdXNoKHsNCiAgICBoYXNoOiBoYXNoLA0KICAgIGluZGV4OiBpbmRleCwNCiAgICBzY3JpcHQ6IHNjcmlwdFNpZyB8fCBFTVBUWV9TQ1JJUFQsDQogICAgc2VxdWVuY2U6IHNlcXVlbmNlDQogIH0pIC0gMSkNCn0NCg0KVHJhbnNhY3Rpb24ucHJvdG90eXBlLmFkZE91dHB1dCA9IGZ1bmN0aW9uIChzY3JpcHRQdWJLZXksIHZhbHVlKSB7DQogIHR5cGVmb3JjZSh0eXBlcy50dXBsZSh0eXBlcy5CdWZmZXIsIHR5cGVzLlVJbnQ1MyksIGFyZ3VtZW50cykNCg0KICAvLyBBZGQgdGhlIG91dHB1dCBhbmQgcmV0dXJuIHRoZSBvdXRwdXQncyBpbmRleA0KICByZXR1cm4gKHRoaXMub3V0cy5wdXNoKHsNCiAgICBzY3JpcHQ6IHNjcmlwdFB1YktleSwNCiAgICB2YWx1ZTogdmFsdWUNCiAgfSkgLSAxKQ0KfQ0KDQpUcmFuc2FjdGlvbi5wcm90b3R5cGUuYnl0ZUxlbmd0aCA9IGZ1bmN0aW9uICgpIHsNCiAgZnVuY3Rpb24gc2NyaXB0U2l6ZSAoc29tZVNjcmlwdCkgew0KICAgIHZhciBsZW5ndGggPSBzb21lU2NyaXB0Lmxlbmd0aA0KDQogICAgcmV0dXJuIGJ1ZmZlcnV0aWxzLnZhckludFNpemUobGVuZ3RoKSArIGxlbmd0aA0KICB9DQoNCiAgcmV0dXJuICgNCiAgICA4ICsNCiAgICBidWZmZXJ1dGlscy52YXJJbnRTaXplKHRoaXMuaW5zLmxlbmd0aCkgKw0KICAgIGJ1ZmZlcnV0aWxzLnZhckludFNpemUodGhpcy5vdXRzLmxlbmd0aCkgKw0KICAgIHRoaXMuaW5zLnJlZHVjZShmdW5jdGlvbiAoc3VtLCBpbnB1dCkgeyByZXR1cm4gc3VtICsgNDAgKyBzY3JpcHRTaXplKGlucHV0LnNjcmlwdCkgfSwgMCkgKw0KICAgIHRoaXMub3V0cy5yZWR1Y2UoZnVuY3Rpb24gKHN1bSwgb3V0cHV0KSB7IHJldHVybiBzdW0gKyA4ICsgc2NyaXB0U2l6ZShvdXRwdXQuc2NyaXB0KSB9LCAwKQ0KICApDQp9DQoNClRyYW5zYWN0aW9uLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uICgpIHsNCiAgdmFyIG5ld1R4ID0gbmV3IFRyYW5zYWN0aW9uKCkNCiAgbmV3VHgudmVyc2lvbiA9IHRoaXMudmVyc2lvbg0KICBuZXdUeC5sb2NrdGltZSA9IHRoaXMubG9ja3RpbWUNCg0KICBuZXdUeC5pbnMgPSB0aGlzLmlucy5tYXAoZnVuY3Rpb24gKHR4SW4pIHsNCiAgICByZXR1cm4gew0KICAgICAgaGFzaDogdHhJbi5oYXNoLA0KICAgICAgaW5kZXg6IHR4SW4uaW5kZXgsDQogICAgICBzY3JpcHQ6IHR4SW4uc2NyaXB0LA0KICAgICAgc2VxdWVuY2U6IHR4SW4uc2VxdWVuY2UNCiAgICB9DQogIH0pDQoNCiAgbmV3VHgub3V0cyA9IHRoaXMub3V0cy5tYXAoZnVuY3Rpb24gKHR4T3V0KSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHNjcmlwdDogdHhPdXQuc2NyaXB0LA0KICAgICAgdmFsdWU6IHR4T3V0LnZhbHVlDQogICAgfQ0KICB9KQ0KDQogIHJldHVybiBuZXdUeA0KfQ0KDQp2YXIgT05FID0gbmV3IEJ1ZmZlcignMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMScsICdoZXgnKQ0KdmFyIFZBTFVFX1VJTlQ2NF9NQVggPSBuZXcgQnVmZmVyKCdmZmZmZmZmZmZmZmZmZmZmJywgJ2hleCcpDQoNCi8qKg0KICogSGFzaCB0cmFuc2FjdGlvbiBmb3Igc2lnbmluZyBhIHNwZWNpZmljIGlucHV0Lg0KICoNCiAqIEJpdGNvaW4gdXNlcyBhIGRpZmZlcmVudCBoYXNoIGZvciBlYWNoIHNpZ25lZCB0cmFuc2FjdGlvbiBpbnB1dC4NCiAqIFRoaXMgbWV0aG9kIGNvcGllcyB0aGUgdHJhbnNhY3Rpb24sIG1ha2VzIHRoZSBuZWNlc3NhcnkgY2hhbmdlcyBiYXNlZCBvbiB0aGUNCiAqIGhhc2hUeXBlLCBhbmQgdGhlbiBoYXNoZXMgdGhlIHJlc3VsdC4NCiAqIFRoaXMgaGFzaCBjYW4gdGhlbiBiZSB1c2VkIHRvIHNpZ24gdGhlIHByb3ZpZGVkIHRyYW5zYWN0aW9uIGlucHV0Lg0KICovDQpUcmFuc2FjdGlvbi5wcm90b3R5cGUuaGFzaEZvclNpZ25hdHVyZSA9IGZ1bmN0aW9uIChpbkluZGV4LCBwcmV2T3V0U2NyaXB0LCBoYXNoVHlwZSkgew0KICB0eXBlZm9yY2UodHlwZXMudHVwbGUodHlwZXMuVUludDMyLCB0eXBlcy5CdWZmZXIsIC8qIHR5cGVzLlVJbnQ4ICovIHR5cGVzLk51bWJlciksIGFyZ3VtZW50cykNCg0KICAvLyBodHRwczovL2dpdGh1Yi5jb20vYml0Y29pbi9iaXRjb2luL2Jsb2IvbWFzdGVyL3NyYy90ZXN0L3NpZ2hhc2hfdGVzdHMuY3BwI0wyOQ0KICBpZiAoaW5JbmRleCA+PSB0aGlzLmlucy5sZW5ndGgpIHJldHVybiBPTkUNCg0KICB2YXIgdHhUbXAgPSB0aGlzLmNsb25lKCkNCg0KICAvLyBpbiBjYXNlIGNvbmNhdGVuYXRpbmcgdHdvIHNjcmlwdHMgZW5kcyB1cCB3aXRoIHR3byBjb2Rlc2VwYXJhdG9ycywNCiAgLy8gb3IgYW4gZXh0cmEgb25lIGF0IHRoZSBlbmQsIHRoaXMgcHJldmVudHMgYWxsIHRob3NlIHBvc3NpYmxlIGluY29tcGF0aWJpbGl0aWVzLg0KICB2YXIgaGFzaFNjcmlwdCA9IGJzY3JpcHQuY29tcGlsZShic2NyaXB0LmRlY29tcGlsZShwcmV2T3V0U2NyaXB0KS5maWx0ZXIoZnVuY3Rpb24gKHgpIHsNCiAgICByZXR1cm4geCAhPT0gb3Bjb2Rlcy5PUF9DT0RFU0VQQVJBVE9SDQogIH0pKQ0KICB2YXIgaQ0KDQogIC8vIGJsYW5rIG91dCBvdGhlciBpbnB1dHMnIHNpZ25hdHVyZXMNCiAgdHhUbXAuaW5zLmZvckVhY2goZnVuY3Rpb24gKGlucHV0KSB7IGlucHV0LnNjcmlwdCA9IEVNUFRZX1NDUklQVCB9KQ0KICB0eFRtcC5pbnNbaW5JbmRleF0uc2NyaXB0ID0gaGFzaFNjcmlwdA0KDQogIC8vIGJsYW5rIG91dCBzb21lIG9mIHRoZSBpbnB1dHMNCiAgaWYgKChoYXNoVHlwZSAmIDB4MWYpID09PSBUcmFuc2FjdGlvbi5TSUdIQVNIX05PTkUpIHsNCiAgICAvLyB3aWxkY2FyZCBwYXllZQ0KICAgIHR4VG1wLm91dHMgPSBbXQ0KDQogICAgLy8gbGV0IHRoZSBvdGhlcnMgdXBkYXRlIGF0IHdpbGwNCiAgICB0eFRtcC5pbnMuZm9yRWFjaChmdW5jdGlvbiAoaW5wdXQsIGkpIHsNCiAgICAgIGlmIChpICE9PSBpbkluZGV4KSB7DQogICAgICAgIGlucHV0LnNlcXVlbmNlID0gMA0KICAgICAgfQ0KICAgIH0pDQogIH0gZWxzZSBpZiAoKGhhc2hUeXBlICYgMHgxZikgPT09IFRyYW5zYWN0aW9uLlNJR0hBU0hfU0lOR0xFKSB7DQogICAgdmFyIG5PdXQgPSBpbkluZGV4DQoNCiAgICAvLyBvbmx5IGxvY2staW4gdGhlIHR4T3V0IHBheWVlIGF0IHNhbWUgaW5kZXggYXMgdHhJbg0KICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9iaXRjb2luL2JpdGNvaW4vYmxvYi9tYXN0ZXIvc3JjL3Rlc3Qvc2lnaGFzaF90ZXN0cy5jcHAjTDYwDQogICAgaWYgKG5PdXQgPj0gdGhpcy5vdXRzLmxlbmd0aCkgcmV0dXJuIE9ORQ0KDQogICAgdHhUbXAub3V0cyA9IHR4VG1wLm91dHMuc2xpY2UoMCwgbk91dCArIDEpDQoNCiAgICAvLyBibGFuayBhbGwgb3RoZXIgb3V0cHV0cyAoY2xlYXIgc2NyaXB0UHViS2V5LCB2YWx1ZSA9PT0gLTEpDQogICAgdmFyIHN0dWJPdXQgPSB7DQogICAgICBzY3JpcHQ6IEVNUFRZX1NDUklQVCwNCiAgICAgIHZhbHVlQnVmZmVyOiBWQUxVRV9VSU5UNjRfTUFYDQogICAgfQ0KDQogICAgZm9yIChpID0gMDsgaSA8IG5PdXQ7IGkrKykgew0KICAgICAgdHhUbXAub3V0c1tpXSA9IHN0dWJPdXQNCiAgICB9DQoNCiAgICAvLyBsZXQgdGhlIG90aGVycyB1cGRhdGUgYXQgd2lsbA0KICAgIHR4VG1wLmlucy5mb3JFYWNoKGZ1bmN0aW9uIChpbnB1dCwgaSkgew0KICAgICAgaWYgKGkgIT09IGluSW5kZXgpIHsNCiAgICAgICAgaW5wdXQuc2VxdWVuY2UgPSAwDQogICAgICB9DQogICAgfSkNCiAgfQ0KDQogIC8vIGJsYW5rIG91dCBvdGhlciBpbnB1dHMgY29tcGxldGVseSwgbm90IHJlY29tbWVuZGVkIGZvciBvcGVuIHRyYW5zYWN0aW9ucw0KICBpZiAoaGFzaFR5cGUgJiBUcmFuc2FjdGlvbi5TSUdIQVNIX0FOWU9ORUNBTlBBWSkgew0KICAgIHR4VG1wLmluc1swXSA9IHR4VG1wLmluc1tpbkluZGV4XQ0KICAgIHR4VG1wLmlucyA9IHR4VG1wLmlucy5zbGljZSgwLCAxKQ0KICB9DQoNCiAgLy8gc2VyaWFsaXplIGFuZCBoYXNoDQogIHZhciBidWZmZXIgPSBuZXcgQnVmZmVyKHR4VG1wLmJ5dGVMZW5ndGgoKSArIDQpDQogIGJ1ZmZlci53cml0ZUludDMyTEUoaGFzaFR5cGUsIGJ1ZmZlci5sZW5ndGggLSA0KQ0KICB0eFRtcC50b0J1ZmZlcigpLmNvcHkoYnVmZmVyLCAwKQ0KDQogIHJldHVybiBiY3J5cHRvLmhhc2gyNTYoYnVmZmVyKQ0KfQ0KDQpUcmFuc2FjdGlvbi5wcm90b3R5cGUuZ2V0SGFzaCA9IGZ1bmN0aW9uICgpIHsNCiAgcmV0dXJuIGJjcnlwdG8uaGFzaDI1Nih0aGlzLnRvQnVmZmVyKCkpDQp9DQoNClRyYW5zYWN0aW9uLnByb3RvdHlwZS5nZXRJZCA9IGZ1bmN0aW9uICgpIHsNCiAgLy8gdHJhbnNhY3Rpb24gaGFzaCdzIGFyZSBkaXNwbGF5ZWQgaW4gcmV2ZXJzZSBvcmRlcg0KICByZXR1cm4gW10ucmV2ZXJzZS5jYWxsKHRoaXMuZ2V0SGFzaCgpKS50b1N0cmluZygnaGV4JykNCn0NCg0KVHJhbnNhY3Rpb24ucHJvdG90eXBlLnRvQnVmZmVyID0gZnVuY3Rpb24gKCkgew0KICB2YXIgYnVmZmVyID0gbmV3IEJ1ZmZlcih0aGlzLmJ5dGVMZW5ndGgoKSkNCg0KICB2YXIgb2Zmc2V0ID0gMA0KICBmdW5jdGlvbiB3cml0ZVNsaWNlIChzbGljZSkgew0KICAgIHNsaWNlLmNvcHkoYnVmZmVyLCBvZmZzZXQpDQogICAgb2Zmc2V0ICs9IHNsaWNlLmxlbmd0aA0KICB9DQoNCiAgZnVuY3Rpb24gd3JpdGVVSW50MzIgKGkpIHsNCiAgICBidWZmZXIud3JpdGVVSW50MzJMRShpLCBvZmZzZXQpDQogICAgb2Zmc2V0ICs9IDQNCiAgfQ0KDQogIGZ1bmN0aW9uIHdyaXRlVUludDY0IChpKSB7DQogICAgYnVmZmVydXRpbHMud3JpdGVVSW50NjRMRShidWZmZXIsIGksIG9mZnNldCkNCiAgICBvZmZzZXQgKz0gOA0KICB9DQoNCiAgZnVuY3Rpb24gd3JpdGVWYXJJbnQgKGkpIHsNCiAgICB2YXIgbiA9IGJ1ZmZlcnV0aWxzLndyaXRlVmFySW50KGJ1ZmZlciwgaSwgb2Zmc2V0KQ0KICAgIG9mZnNldCArPSBuDQogIH0NCg0KICB3cml0ZVVJbnQzMih0aGlzLnZlcnNpb24pDQogIHdyaXRlVmFySW50KHRoaXMuaW5zLmxlbmd0aCkNCg0KICB0aGlzLmlucy5mb3JFYWNoKGZ1bmN0aW9uICh0eEluKSB7DQogICAgd3JpdGVTbGljZSh0eEluLmhhc2gpDQogICAgd3JpdGVVSW50MzIodHhJbi5pbmRleCkNCiAgICB3cml0ZVZhckludCh0eEluLnNjcmlwdC5sZW5ndGgpDQogICAgd3JpdGVTbGljZSh0eEluLnNjcmlwdCkNCiAgICB3cml0ZVVJbnQzMih0eEluLnNlcXVlbmNlKQ0KICB9KQ0KDQogIHdyaXRlVmFySW50KHRoaXMub3V0cy5sZW5ndGgpDQogIHRoaXMub3V0cy5mb3JFYWNoKGZ1bmN0aW9uICh0eE91dCkgew0KICAgIGlmICghdHhPdXQudmFsdWVCdWZmZXIpIHsNCiAgICAgIHdyaXRlVUludDY0KHR4T3V0LnZhbHVlKQ0KICAgIH0gZWxzZSB7DQogICAgICB3cml0ZVNsaWNlKHR4T3V0LnZhbHVlQnVmZmVyKQ0KICAgIH0NCg0KICAgIHdyaXRlVmFySW50KHR4T3V0LnNjcmlwdC5sZW5ndGgpDQogICAgd3JpdGVTbGljZSh0eE91dC5zY3JpcHQpDQogIH0pDQoNCiAgd3JpdGVVSW50MzIodGhpcy5sb2NrdGltZSkNCg0KICByZXR1cm4gYnVmZmVyDQp9DQoNClRyYW5zYWN0aW9uLnByb3RvdHlwZS50b0hleCA9IGZ1bmN0aW9uICgpIHsNCiAgcmV0dXJuIHRoaXMudG9CdWZmZXIoKS50b1N0cmluZygnaGV4JykNCn0NCg0KVHJhbnNhY3Rpb24ucHJvdG90eXBlLnNldElucHV0U2NyaXB0ID0gZnVuY3Rpb24gKGluZGV4LCBzY3JpcHRTaWcpIHsNCiAgdHlwZWZvcmNlKHR5cGVzLnR1cGxlKHR5cGVzLk51bWJlciwgdHlwZXMuQnVmZmVyKSwgYXJndW1lbnRzKQ0KDQogIHRoaXMuaW5zW2luZGV4XS5zY3JpcHQgPSBzY3JpcHRTaWcNCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSBUcmFuc2FjdGlvbg0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vYnVmZmVydXRpbHMiOjQ0LCIuL2NyeXB0byI6NDUsIi4vb3Bjb2RlcyI6NTMsIi4vc2NyaXB0Ijo1NCwiLi90eXBlcyI6NTgsImJ1ZmZlciI6OTMsInR5cGVmb3JjZSI6NTgyfV0sNTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIGJhZGRyZXNzID0gcmVxdWlyZSgnLi9hZGRyZXNzJykNCnZhciBiY3J5cHRvID0gcmVxdWlyZSgnLi9jcnlwdG8nKQ0KdmFyIGJzY3JpcHQgPSByZXF1aXJlKCcuL3NjcmlwdCcpDQp2YXIgYnVmZmVyRXF1YWxzID0gcmVxdWlyZSgnYnVmZmVyLWVxdWFscycpDQp2YXIgbmV0d29ya3MgPSByZXF1aXJlKCcuL25ldHdvcmtzJykNCnZhciBvcHMgPSByZXF1aXJlKCcuL29wY29kZXMnKQ0KdmFyIHR5cGVmb3JjZSA9IHJlcXVpcmUoJ3R5cGVmb3JjZScpDQp2YXIgdHlwZXMgPSByZXF1aXJlKCcuL3R5cGVzJykNCg0KdmFyIEVDUGFpciA9IHJlcXVpcmUoJy4vZWNwYWlyJykNCnZhciBFQ1NpZ25hdHVyZSA9IHJlcXVpcmUoJy4vZWNzaWduYXR1cmUnKQ0KdmFyIFRyYW5zYWN0aW9uID0gcmVxdWlyZSgnLi90cmFuc2FjdGlvbicpDQoNCi8vIHJlLW9yZGVycyBzaWduYXR1cmVzIHRvIG1hdGNoIHB1YktleXMsIGZpbGxzIHVuZGVmaW5lZCBvdGhlcndpc2UNCmZ1bmN0aW9uIGZpeE1TU2lnbmF0dXJlcyAodHJhbnNhY3Rpb24sIHZpbiwgcHViS2V5cywgc2lnbmF0dXJlcywgcHJldk91dFNjcmlwdCwgaGFzaFR5cGUsIHNraXBQdWJLZXkpIHsNCiAgLy8gbWFpbnRhaW4gYSBsb2NhbCBjb3B5IG9mIHVubWF0Y2hlZCBzaWduYXR1cmVzDQogIHZhciB1bm1hdGNoZWQgPSBzaWduYXR1cmVzLnNsaWNlKCkNCiAgdmFyIGNhY2hlID0ge30NCg0KICByZXR1cm4gcHViS2V5cy5tYXAoZnVuY3Rpb24gKHB1YktleSkgew0KICAgIC8vIHNraXAgb3B0aW9uYWxseSBwcm92aWRlZCBwdWJLZXkNCiAgICBpZiAoc2tpcFB1YktleSAmJiBidWZmZXJFcXVhbHMoc2tpcFB1YktleSwgcHViS2V5KSkgcmV0dXJuIHVuZGVmaW5lZA0KDQogICAgdmFyIG1hdGNoZWQNCiAgICB2YXIga2V5UGFpcjIgPSBFQ1BhaXIuZnJvbVB1YmxpY0tleUJ1ZmZlcihwdWJLZXkpDQoNCiAgICAvLyBjaGVjayBmb3IgYSBtYXRjaGluZyBzaWduYXR1cmUNCiAgICB1bm1hdGNoZWQuc29tZShmdW5jdGlvbiAoc2lnbmF0dXJlLCBpKSB7DQogICAgICAvLyBza2lwIGlmIHVuZGVmaW5lZCB8fCBPUF8wDQogICAgICBpZiAoIXNpZ25hdHVyZSkgcmV0dXJuIGZhbHNlDQoNCiAgICAgIHZhciBzaWduYXR1cmVIYXNoID0gY2FjaGVbaGFzaFR5cGVdID0gY2FjaGVbaGFzaFR5cGVdIHx8IHRyYW5zYWN0aW9uLmhhc2hGb3JTaWduYXR1cmUodmluLCBwcmV2T3V0U2NyaXB0LCBoYXNoVHlwZSkNCiAgICAgIGlmICgha2V5UGFpcjIudmVyaWZ5KHNpZ25hdHVyZUhhc2gsIHNpZ25hdHVyZSkpIHJldHVybiBmYWxzZQ0KDQogICAgICAvLyByZW1vdmUgbWF0Y2hlZCBzaWduYXR1cmUgZnJvbSB1bm1hdGNoZWQNCiAgICAgIHVubWF0Y2hlZFtpXSA9IHVuZGVmaW5lZA0KICAgICAgbWF0Y2hlZCA9IHNpZ25hdHVyZQ0KDQogICAgICByZXR1cm4gdHJ1ZQ0KICAgIH0pDQoNCiAgICByZXR1cm4gbWF0Y2hlZCB8fCB1bmRlZmluZWQNCiAgfSkNCn0NCg0KZnVuY3Rpb24gZXh0cmFjdElucHV0ICh0cmFuc2FjdGlvbiwgdHhJbiwgdmluKSB7DQogIHZhciByZWRlZW1TY3JpcHQNCiAgdmFyIHNjcmlwdFNpZyA9IHR4SW4uc2NyaXB0DQogIHZhciBzY3JpcHRTaWdDaHVua3MgPSBic2NyaXB0LmRlY29tcGlsZShzY3JpcHRTaWcpDQoNCiAgdmFyIHByZXZPdXRTY3JpcHQNCiAgdmFyIHByZXZPdXRUeXBlID0gYnNjcmlwdC5jbGFzc2lmeUlucHV0KHNjcmlwdFNpZywgdHJ1ZSkNCiAgdmFyIHNjcmlwdFR5cGUNCg0KICAvLyBSZS1jbGFzc2lmeSBpZiBzY3JpcHRIYXNoDQogIGlmIChwcmV2T3V0VHlwZSA9PT0gJ3NjcmlwdGhhc2gnKSB7DQogICAgcmVkZWVtU2NyaXB0ID0gc2NyaXB0U2lnQ2h1bmtzLnNsaWNlKC0xKVswXQ0KICAgIHByZXZPdXRTY3JpcHQgPSBic2NyaXB0LnNjcmlwdEhhc2hPdXRwdXQoYmNyeXB0by5oYXNoMTYwKHJlZGVlbVNjcmlwdCkpDQoNCiAgICBzY3JpcHRTaWcgPSBic2NyaXB0LmNvbXBpbGUoc2NyaXB0U2lnQ2h1bmtzLnNsaWNlKDAsIC0xKSkNCiAgICBzY3JpcHRTaWdDaHVua3MgPSBzY3JpcHRTaWdDaHVua3Muc2xpY2UoMCwgLTEpDQoNCiAgICBzY3JpcHRUeXBlID0gYnNjcmlwdC5jbGFzc2lmeUlucHV0KHNjcmlwdFNpZywgdHJ1ZSkNCiAgfSBlbHNlIHsNCiAgICBzY3JpcHRUeXBlID0gcHJldk91dFR5cGUNCiAgfQ0KDQogIC8vIHByZS1lbXB0IHJlZGVlbVNjcmlwdCBkZWNvbXBpbGF0aW9uDQogIHZhciByZWRlZW1TY3JpcHRDaHVua3MNCiAgaWYgKHJlZGVlbVNjcmlwdCkgew0KICAgIHJlZGVlbVNjcmlwdENodW5rcyA9IGJzY3JpcHQuZGVjb21waWxlKHJlZGVlbVNjcmlwdCkNCiAgfQ0KDQogIC8vIEV4dHJhY3QgaGFzaFR5cGUsIHB1YktleXMgYW5kIHNpZ25hdHVyZXMNCiAgdmFyIGhhc2hUeXBlLCBwYXJzZWQsIHB1YktleXMsIHNpZ25hdHVyZXMNCg0KICBzd2l0Y2ggKHNjcmlwdFR5cGUpIHsNCiAgICBjYXNlICdwdWJrZXloYXNoJzoNCiAgICAgIHBhcnNlZCA9IEVDU2lnbmF0dXJlLnBhcnNlU2NyaXB0U2lnbmF0dXJlKHNjcmlwdFNpZ0NodW5rc1swXSkNCiAgICAgIGhhc2hUeXBlID0gcGFyc2VkLmhhc2hUeXBlDQogICAgICBwdWJLZXlzID0gc2NyaXB0U2lnQ2h1bmtzLnNsaWNlKDEpDQogICAgICBzaWduYXR1cmVzID0gW3BhcnNlZC5zaWduYXR1cmVdDQogICAgICBwcmV2T3V0U2NyaXB0ID0gYnNjcmlwdC5wdWJLZXlIYXNoT3V0cHV0KGJjcnlwdG8uaGFzaDE2MChwdWJLZXlzWzBdKSkNCg0KICAgICAgYnJlYWsNCg0KICAgIGNhc2UgJ3B1YmtleSc6DQogICAgICBwYXJzZWQgPSBFQ1NpZ25hdHVyZS5wYXJzZVNjcmlwdFNpZ25hdHVyZShzY3JpcHRTaWdDaHVua3NbMF0pDQogICAgICBoYXNoVHlwZSA9IHBhcnNlZC5oYXNoVHlwZQ0KICAgICAgc2lnbmF0dXJlcyA9IFtwYXJzZWQuc2lnbmF0dXJlXQ0KDQogICAgICBpZiAocmVkZWVtU2NyaXB0KSB7DQogICAgICAgIHB1YktleXMgPSByZWRlZW1TY3JpcHRDaHVua3Muc2xpY2UoMCwgMSkNCiAgICAgIH0NCg0KICAgICAgYnJlYWsNCg0KICAgIGNhc2UgJ211bHRpc2lnJzoNCiAgICAgIHNpZ25hdHVyZXMgPSBzY3JpcHRTaWdDaHVua3Muc2xpY2UoMSkubWFwKGZ1bmN0aW9uIChjaHVuaykgew0KICAgICAgICBpZiAoY2h1bmsgPT09IG9wcy5PUF8wKSByZXR1cm4gdW5kZWZpbmVkDQoNCiAgICAgICAgdmFyIHBhcnNlZCA9IEVDU2lnbmF0dXJlLnBhcnNlU2NyaXB0U2lnbmF0dXJlKGNodW5rKQ0KICAgICAgICBoYXNoVHlwZSA9IHBhcnNlZC5oYXNoVHlwZQ0KDQogICAgICAgIHJldHVybiBwYXJzZWQuc2lnbmF0dXJlDQogICAgICB9KQ0KDQogICAgICBpZiAocmVkZWVtU2NyaXB0KSB7DQogICAgICAgIHB1YktleXMgPSByZWRlZW1TY3JpcHRDaHVua3Muc2xpY2UoMSwgLTIpDQoNCiAgICAgICAgaWYgKHB1YktleXMubGVuZ3RoICE9PSBzaWduYXR1cmVzLmxlbmd0aCkgew0KICAgICAgICAgIHNpZ25hdHVyZXMgPSBmaXhNU1NpZ25hdHVyZXModHJhbnNhY3Rpb24sIHZpbiwgcHViS2V5cywgc2lnbmF0dXJlcywgcmVkZWVtU2NyaXB0LCBoYXNoVHlwZSwgcmVkZWVtU2NyaXB0KQ0KICAgICAgICB9DQogICAgICB9DQoNCiAgICAgIGJyZWFrDQogIH0NCg0KICByZXR1cm4gew0KICAgIGhhc2hUeXBlOiBoYXNoVHlwZSwNCiAgICBwcmV2T3V0U2NyaXB0OiBwcmV2T3V0U2NyaXB0LA0KICAgIHByZXZPdXRUeXBlOiBwcmV2T3V0VHlwZSwNCiAgICBwdWJLZXlzOiBwdWJLZXlzLA0KICAgIHJlZGVlbVNjcmlwdDogcmVkZWVtU2NyaXB0LA0KICAgIHNjcmlwdFR5cGU6IHNjcmlwdFR5cGUsDQogICAgc2lnbmF0dXJlczogc2lnbmF0dXJlcw0KICB9DQp9DQoNCmZ1bmN0aW9uIFRyYW5zYWN0aW9uQnVpbGRlciAobmV0d29yaykgew0KICB0aGlzLnByZXZUeE1hcCA9IHt9DQogIHRoaXMucHJldk91dFNjcmlwdHMgPSB7fQ0KICB0aGlzLnByZXZPdXRUeXBlcyA9IHt9DQogIHRoaXMubmV0d29yayA9IG5ldHdvcmsgfHwgbmV0d29ya3MuYml0Y29pbg0KDQogIHRoaXMuaW5wdXRzID0gW10NCiAgdGhpcy50eCA9IG5ldyBUcmFuc2FjdGlvbigpDQp9DQoNClRyYW5zYWN0aW9uQnVpbGRlci5wcm90b3R5cGUuc2V0TG9ja1RpbWUgPSBmdW5jdGlvbiAobG9ja3RpbWUpIHsNCiAgdHlwZWZvcmNlKHR5cGVzLlVJbnQzMiwgbG9ja3RpbWUpDQoNCiAgLy8gaWYgYW55IHNpZ25hdHVyZXMgZXhpc3QsIHRocm93DQogIGlmICh0aGlzLmlucHV0cy5zb21lKGZ1bmN0aW9uIChpbnB1dCkgew0KICAgIGlmICghaW5wdXQuc2lnbmF0dXJlcykgcmV0dXJuIGZhbHNlDQoNCiAgICByZXR1cm4gaW5wdXQuc2lnbmF0dXJlcy5zb21lKGZ1bmN0aW9uIChzKSB7IHJldHVybiBzIH0pDQogIH0pKSB7DQogICAgdGhyb3cgbmV3IEVycm9yKCdObywgdGhpcyB3b3VsZCBpbnZhbGlkYXRlIHNpZ25hdHVyZXMnKQ0KICB9DQoNCiAgdGhpcy50eC5sb2NrdGltZSA9IGxvY2t0aW1lDQp9DQoNClRyYW5zYWN0aW9uQnVpbGRlci5mcm9tVHJhbnNhY3Rpb24gPSBmdW5jdGlvbiAodHJhbnNhY3Rpb24sIG5ldHdvcmspIHsNCiAgdmFyIHR4YiA9IG5ldyBUcmFuc2FjdGlvbkJ1aWxkZXIobmV0d29yaykNCg0KICAvLyBDb3B5IG90aGVyIHRyYW5zYWN0aW9uIGZpZWxkcw0KICB0eGIudHgudmVyc2lvbiA9IHRyYW5zYWN0aW9uLnZlcnNpb24NCiAgdHhiLnR4LmxvY2t0aW1lID0gdHJhbnNhY3Rpb24ubG9ja3RpbWUNCg0KICAvLyBFeHRyYWN0L2FkZCBpbnB1dHMNCiAgdHJhbnNhY3Rpb24uaW5zLmZvckVhY2goZnVuY3Rpb24gKHR4SW4pIHsNCiAgICB0eGIuYWRkSW5wdXQodHhJbi5oYXNoLCB0eEluLmluZGV4LCB0eEluLnNlcXVlbmNlKQ0KICB9KQ0KDQogIC8vIEV4dHJhY3QvYWRkIG91dHB1dHMNCiAgdHJhbnNhY3Rpb24ub3V0cy5mb3JFYWNoKGZ1bmN0aW9uICh0eE91dCkgew0KICAgIHR4Yi5hZGRPdXRwdXQodHhPdXQuc2NyaXB0LCB0eE91dC52YWx1ZSkNCiAgfSkNCg0KICAvLyBFeHRyYWN0L2FkZCBzaWduYXR1cmVzDQogIHR4Yi5pbnB1dHMgPSB0cmFuc2FjdGlvbi5pbnMubWFwKGZ1bmN0aW9uICh0eEluLCB2aW4pIHsNCiAgICAvLyBUT0RPOiB2ZXJpZnkgd2hldGhlciBleHRyYWN0SW5wdXQgaXMgc2FuZSB3aXRoIGNvaW5iYXNlIHNjcmlwdHMNCiAgICBpZiAoVHJhbnNhY3Rpb24uaXNDb2luYmFzZUhhc2godHhJbi5oYXNoKSkgew0KICAgICAgdGhyb3cgbmV3IEVycm9yKCdjb2luYmFzZSBpbnB1dHMgbm90IHN1cHBvcnRlZCcpDQogICAgfQ0KDQogICAgLy8gSWdub3JlIGVtcHR5IHNjcmlwdHMNCiAgICBpZiAodHhJbi5zY3JpcHQubGVuZ3RoID09PSAwKSByZXR1cm4ge30NCg0KICAgIHJldHVybiBleHRyYWN0SW5wdXQodHJhbnNhY3Rpb24sIHR4SW4sIHZpbikNCiAgfSkNCg0KICByZXR1cm4gdHhiDQp9DQoNClRyYW5zYWN0aW9uQnVpbGRlci5wcm90b3R5cGUuYWRkSW5wdXQgPSBmdW5jdGlvbiAodHhIYXNoLCB2b3V0LCBzZXF1ZW5jZSwgcHJldk91dFNjcmlwdCkgew0KICAvLyBpcyBpdCBhIGhleCBzdHJpbmc/DQogIGlmICh0eXBlb2YgdHhIYXNoID09PSAnc3RyaW5nJykgew0KICAgIC8vIHRyYW5zYWN0aW9uIGhhc2hzJ3MgYXJlIGRpc3BsYXllZCBpbiByZXZlcnNlIG9yZGVyLCB1bi1yZXZlcnNlIGl0DQogICAgdHhIYXNoID0gW10ucmV2ZXJzZS5jYWxsKG5ldyBCdWZmZXIodHhIYXNoLCAnaGV4JykpDQoNCiAgLy8gaXMgaXQgYSBUcmFuc2FjdGlvbiBvYmplY3Q/DQogIH0gZWxzZSBpZiAodHhIYXNoIGluc3RhbmNlb2YgVHJhbnNhY3Rpb24pIHsNCiAgICBwcmV2T3V0U2NyaXB0ID0gdHhIYXNoLm91dHNbdm91dF0uc2NyaXB0DQogICAgdHhIYXNoID0gdHhIYXNoLmdldEhhc2goKQ0KICB9DQoNCiAgdmFyIGlucHV0ID0ge30NCiAgaWYgKHByZXZPdXRTY3JpcHQpIHsNCiAgICB2YXIgcHJldk91dFNjcmlwdENodW5rcyA9IGJzY3JpcHQuZGVjb21waWxlKHByZXZPdXRTY3JpcHQpDQogICAgdmFyIHByZXZPdXRUeXBlID0gYnNjcmlwdC5jbGFzc2lmeU91dHB1dChwcmV2T3V0U2NyaXB0Q2h1bmtzKQ0KDQogICAgLy8gaWYgd2UgY2FuLCBleHRyYWN0IHB1YktleSBpbmZvcm1hdGlvbg0KICAgIHN3aXRjaCAocHJldk91dFR5cGUpIHsNCiAgICAgIGNhc2UgJ211bHRpc2lnJzoNCiAgICAgICAgaW5wdXQucHViS2V5cyA9IHByZXZPdXRTY3JpcHRDaHVua3Muc2xpY2UoMSwgLTIpDQogICAgICAgIGlucHV0LnNpZ25hdHVyZXMgPSBpbnB1dC5wdWJLZXlzLm1hcChmdW5jdGlvbiAoKSB7IHJldHVybiB1bmRlZmluZWQgfSkNCg0KICAgICAgICBicmVhaw0KDQogICAgICBjYXNlICdwdWJrZXknOg0KICAgICAgICBpbnB1dC5wdWJLZXlzID0gcHJldk91dFNjcmlwdENodW5rcy5zbGljZSgwLCAxKQ0KICAgICAgICBpbnB1dC5zaWduYXR1cmVzID0gW3VuZGVmaW5lZF0NCg0KICAgICAgICBicmVhaw0KICAgIH0NCg0KICAgIGlmIChwcmV2T3V0VHlwZSAhPT0gJ3NjcmlwdGhhc2gnKSB7DQogICAgICBpbnB1dC5zY3JpcHRUeXBlID0gcHJldk91dFR5cGUNCiAgICB9DQoNCiAgICBpbnB1dC5wcmV2T3V0U2NyaXB0ID0gcHJldk91dFNjcmlwdA0KICAgIGlucHV0LnByZXZPdXRUeXBlID0gcHJldk91dFR5cGUNCiAgfQ0KDQogIC8vIGlmIHNpZ25hdHVyZXMgZXhpc3QsIGFkZGluZyBpbnB1dHMgaXMgb25seSBhY2NlcHRhYmxlIGlmIFNJR0hBU0hfQU5ZT05FQ0FOUEFZIGlzIHVzZWQNCiAgLy8gdGhyb3cgaWYgYW55IHNpZ25hdHVyZXMgKmRpZG4ndCogdXNlIFNJR0hBU0hfQU5ZT05FQ0FOUEFZDQogIGlmICghdGhpcy5pbnB1dHMuZXZlcnkoZnVuY3Rpb24gKG90aGVySW5wdXQpIHsNCiAgICAvLyBubyBzaWduYXR1cmUNCiAgICBpZiAob3RoZXJJbnB1dC5oYXNoVHlwZSA9PT0gdW5kZWZpbmVkKSByZXR1cm4gdHJ1ZQ0KDQogICAgcmV0dXJuIG90aGVySW5wdXQuaGFzaFR5cGUgJiBUcmFuc2FjdGlvbi5TSUdIQVNIX0FOWU9ORUNBTlBBWQ0KICB9KSkgew0KICAgIHRocm93IG5ldyBFcnJvcignTm8sIHRoaXMgd291bGQgaW52YWxpZGF0ZSBzaWduYXR1cmVzJykNCiAgfQ0KDQogIHZhciBwcmV2T3V0ID0gdHhIYXNoLnRvU3RyaW5nKCdoZXgnKSArICc6JyArIHZvdXQNCiAgaWYgKHRoaXMucHJldlR4TWFwW3ByZXZPdXRdKSB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zYWN0aW9uIGlzIGFscmVhZHkgYW4gaW5wdXQnKQ0KDQogIHZhciB2aW4gPSB0aGlzLnR4LmFkZElucHV0KHR4SGFzaCwgdm91dCwgc2VxdWVuY2UpDQogIHRoaXMuaW5wdXRzW3Zpbl0gPSBpbnB1dA0KICB0aGlzLnByZXZUeE1hcFtwcmV2T3V0XSA9IHZpbg0KDQogIHJldHVybiB2aW4NCn0NCg0KVHJhbnNhY3Rpb25CdWlsZGVyLnByb3RvdHlwZS5hZGRPdXRwdXQgPSBmdW5jdGlvbiAoc2NyaXB0UHViS2V5LCB2YWx1ZSkgew0KICB2YXIgbk91dHB1dHMgPSB0aGlzLnR4Lm91dHMubGVuZ3RoDQoNCiAgLy8gaWYgc2lnbmF0dXJlcyBleGlzdCwgYWRkaW5nIG91dHB1dHMgaXMgb25seSBhY2NlcHRhYmxlIGlmIFNJR0hBU0hfTk9ORSBvciBTSUdIQVNIX1NJTkdMRSBpcyB1c2VkDQogIC8vIHRocm93cyBpZiBhbnkgc2lnbmF0dXJlcyBkaWRuJ3QgdXNlIFNJR0hBU0hfTk9ORXxTSUdIQVNIX1NJTkdMRQ0KICBpZiAoIXRoaXMuaW5wdXRzLmV2ZXJ5KGZ1bmN0aW9uIChpbnB1dCwgaW5kZXgpIHsNCiAgICAvLyBubyBzaWduYXR1cmUNCiAgICBpZiAoaW5wdXQuaGFzaFR5cGUgPT09IHVuZGVmaW5lZCkgcmV0dXJuIHRydWUNCg0KICAgIHZhciBoYXNoVHlwZU1vZCA9IGlucHV0Lmhhc2hUeXBlICYgMHgxZg0KICAgIGlmIChoYXNoVHlwZU1vZCA9PT0gVHJhbnNhY3Rpb24uU0lHSEFTSF9OT05FKSByZXR1cm4gdHJ1ZQ0KICAgIGlmIChoYXNoVHlwZU1vZCA9PT0gVHJhbnNhY3Rpb24uU0lHSEFTSF9TSU5HTEUpIHsNCiAgICAgIC8vIGFjY291bnQgZm9yIFNJR0hBU0hfU0lOR0xFIHNpZ25pbmcgb2YgYSBub24tZXhpc3Rpbmcgb3V0cHV0LCBha2EgdGhlICJTSUdIQVNIX1NJTkdMRSIgYnVnDQogICAgICByZXR1cm4gaW5kZXggPCBuT3V0cHV0cw0KICAgIH0NCg0KICAgIHJldHVybiBmYWxzZQ0KICB9KSkgew0KICAgIHRocm93IG5ldyBFcnJvcignTm8sIHRoaXMgd291bGQgaW52YWxpZGF0ZSBzaWduYXR1cmVzJykNCiAgfQ0KDQogIC8vIEF0dGVtcHQgdG8gZ2V0IGEgc2NyaXB0IGlmIGl0J3MgYSBiYXNlNTggYWRkcmVzcyBzdHJpbmcNCiAgaWYgKHR5cGVvZiBzY3JpcHRQdWJLZXkgPT09ICdzdHJpbmcnKSB7DQogICAgc2NyaXB0UHViS2V5ID0gYmFkZHJlc3MudG9PdXRwdXRTY3JpcHQoc2NyaXB0UHViS2V5LCB0aGlzLm5ldHdvcmspDQogIH0NCg0KICByZXR1cm4gdGhpcy50eC5hZGRPdXRwdXQoc2NyaXB0UHViS2V5LCB2YWx1ZSkNCn0NCg0KVHJhbnNhY3Rpb25CdWlsZGVyLnByb3RvdHlwZS5idWlsZCA9IGZ1bmN0aW9uICgpIHsNCiAgcmV0dXJuIHRoaXMuX19idWlsZChmYWxzZSkNCn0NClRyYW5zYWN0aW9uQnVpbGRlci5wcm90b3R5cGUuYnVpbGRJbmNvbXBsZXRlID0gZnVuY3Rpb24gKCkgew0KICByZXR1cm4gdGhpcy5fX2J1aWxkKHRydWUpDQp9DQoNCnZhciBjYW5CdWlsZFR5cGVzID0gew0KICAnbXVsdGlzaWcnOiB0cnVlLA0KICAncHVia2V5JzogdHJ1ZSwNCiAgJ3B1YmtleWhhc2gnOiB0cnVlDQp9DQoNClRyYW5zYWN0aW9uQnVpbGRlci5wcm90b3R5cGUuX19idWlsZCA9IGZ1bmN0aW9uIChhbGxvd0luY29tcGxldGUpIHsNCiAgaWYgKCFhbGxvd0luY29tcGxldGUpIHsNCiAgICBpZiAoIXRoaXMudHguaW5zLmxlbmd0aCkgdGhyb3cgbmV3IEVycm9yKCdUcmFuc2FjdGlvbiBoYXMgbm8gaW5wdXRzJykNCiAgICBpZiAoIXRoaXMudHgub3V0cy5sZW5ndGgpIHRocm93IG5ldyBFcnJvcignVHJhbnNhY3Rpb24gaGFzIG5vIG91dHB1dHMnKQ0KICB9DQoNCiAgdmFyIHR4ID0gdGhpcy50eC5jbG9uZSgpDQoNCiAgLy8gQ3JlYXRlIHNjcmlwdCBzaWduYXR1cmVzIGZyb20gaW5wdXRzDQogIHRoaXMuaW5wdXRzLmZvckVhY2goZnVuY3Rpb24gKGlucHV0LCBpbmRleCkgew0KICAgIHZhciBzY3JpcHRUeXBlID0gaW5wdXQuc2NyaXB0VHlwZQ0KICAgIHZhciBzY3JpcHRTaWcNCg0KICAgIGlmICghYWxsb3dJbmNvbXBsZXRlKSB7DQogICAgICBpZiAoIXNjcmlwdFR5cGUpIHRocm93IG5ldyBFcnJvcignVHJhbnNhY3Rpb24gaXMgbm90IGNvbXBsZXRlJykNCiAgICAgIGlmICghY2FuQnVpbGRUeXBlc1tzY3JpcHRUeXBlXSkgdGhyb3cgbmV3IEVycm9yKHNjcmlwdFR5cGUgKyAnIG5vdCBzdXBwb3J0ZWQnKQ0KDQogICAgICAvLyBYWFg6IG9ubHkgcmVsZXZhbnQgdG8gdHlwZXMgdGhhdCBuZWVkIHNpZ25hdHVyZXMNCiAgICAgIGlmICghaW5wdXQuc2lnbmF0dXJlcykgdGhyb3cgbmV3IEVycm9yKCdUcmFuc2FjdGlvbiBpcyBtaXNzaW5nIHNpZ25hdHVyZXMnKQ0KICAgIH0NCg0KICAgIGlmIChpbnB1dC5zaWduYXR1cmVzKSB7DQogICAgICBzd2l0Y2ggKHNjcmlwdFR5cGUpIHsNCiAgICAgICAgY2FzZSAncHVia2V5aGFzaCc6DQogICAgICAgICAgdmFyIHBraFNpZ25hdHVyZSA9IGlucHV0LnNpZ25hdHVyZXNbMF0udG9TY3JpcHRTaWduYXR1cmUoaW5wdXQuaGFzaFR5cGUpDQogICAgICAgICAgc2NyaXB0U2lnID0gYnNjcmlwdC5wdWJLZXlIYXNoSW5wdXQocGtoU2lnbmF0dXJlLCBpbnB1dC5wdWJLZXlzWzBdKQ0KICAgICAgICAgIGJyZWFrDQoNCiAgICAgICAgY2FzZSAnbXVsdGlzaWcnOg0KICAgICAgICAgIHZhciBtc1NpZ25hdHVyZXMgPSBpbnB1dC5zaWduYXR1cmVzLm1hcChmdW5jdGlvbiAoc2lnbmF0dXJlKSB7DQogICAgICAgICAgICByZXR1cm4gc2lnbmF0dXJlICYmIHNpZ25hdHVyZS50b1NjcmlwdFNpZ25hdHVyZShpbnB1dC5oYXNoVHlwZSkNCiAgICAgICAgICB9KQ0KDQogICAgICAgICAgLy8gZmlsbCBpbiBibGFua3Mgd2l0aCBPUF8wDQogICAgICAgICAgaWYgKGFsbG93SW5jb21wbGV0ZSkgew0KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtc1NpZ25hdHVyZXMubGVuZ3RoOyArK2kpIHsNCiAgICAgICAgICAgICAgbXNTaWduYXR1cmVzW2ldID0gbXNTaWduYXR1cmVzW2ldIHx8IG9wcy5PUF8wDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAvLyByZW1vdmUgYmxhbmsgc2lnbmF0dXJlcw0KICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBtc1NpZ25hdHVyZXMgPSBtc1NpZ25hdHVyZXMuZmlsdGVyKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4IH0pDQogICAgICAgICAgfQ0KDQogICAgICAgICAgdmFyIHJlZGVlbVNjcmlwdCA9IGFsbG93SW5jb21wbGV0ZSA/IHVuZGVmaW5lZCA6IGlucHV0LnJlZGVlbVNjcmlwdA0KICAgICAgICAgIHNjcmlwdFNpZyA9IGJzY3JpcHQubXVsdGlzaWdJbnB1dChtc1NpZ25hdHVyZXMsIHJlZGVlbVNjcmlwdCkNCiAgICAgICAgICBicmVhaw0KDQogICAgICAgIGNhc2UgJ3B1YmtleSc6DQogICAgICAgICAgdmFyIHBrU2lnbmF0dXJlID0gaW5wdXQuc2lnbmF0dXJlc1swXS50b1NjcmlwdFNpZ25hdHVyZShpbnB1dC5oYXNoVHlwZSkNCiAgICAgICAgICBzY3JpcHRTaWcgPSBic2NyaXB0LnB1YktleUlucHV0KHBrU2lnbmF0dXJlKQ0KICAgICAgICAgIGJyZWFrDQogICAgICB9DQogICAgfQ0KDQogICAgLy8gZGlkIHdlIGJ1aWxkIGEgc2NyaXB0U2lnPw0KICAgIGlmIChzY3JpcHRTaWcpIHsNCiAgICAgIC8vIHdyYXAgYXMgc2NyaXB0SGFzaCBpZiBuZWNlc3NhcnkNCiAgICAgIGlmIChpbnB1dC5wcmV2T3V0VHlwZSA9PT0gJ3NjcmlwdGhhc2gnKSB7DQogICAgICAgIHNjcmlwdFNpZyA9IGJzY3JpcHQuc2NyaXB0SGFzaElucHV0KHNjcmlwdFNpZywgaW5wdXQucmVkZWVtU2NyaXB0KQ0KICAgICAgfQ0KDQogICAgICB0eC5zZXRJbnB1dFNjcmlwdChpbmRleCwgc2NyaXB0U2lnKQ0KICAgIH0NCiAgfSkNCg0KICByZXR1cm4gdHgNCn0NCg0KVHJhbnNhY3Rpb25CdWlsZGVyLnByb3RvdHlwZS5zaWduID0gZnVuY3Rpb24gKGluZGV4LCBrZXlQYWlyLCByZWRlZW1TY3JpcHQsIGhhc2hUeXBlKSB7DQogIGlmIChrZXlQYWlyLm5ldHdvcmsgIT09IHRoaXMubmV0d29yaykgdGhyb3cgbmV3IEVycm9yKCdJbmNvbnNpc3RlbnQgbmV0d29yaycpDQogIGlmICghdGhpcy5pbnB1dHNbaW5kZXhdKSB0aHJvdyBuZXcgRXJyb3IoJ05vIGlucHV0IGF0IGluZGV4OiAnICsgaW5kZXgpDQogIGhhc2hUeXBlID0gaGFzaFR5cGUgfHwgVHJhbnNhY3Rpb24uU0lHSEFTSF9BTEwNCg0KICB2YXIgaW5wdXQgPSB0aGlzLmlucHV0c1tpbmRleF0NCiAgdmFyIGNhblNpZ24gPSBpbnB1dC5oYXNoVHlwZSAmJg0KICAgIGlucHV0LnByZXZPdXRTY3JpcHQgJiYNCiAgICBpbnB1dC5wcmV2T3V0VHlwZSAmJg0KICAgIGlucHV0LnB1YktleXMgJiYNCiAgICBpbnB1dC5zY3JpcHRUeXBlICYmDQogICAgaW5wdXQuc2lnbmF0dXJlcyAmJg0KICAgIGlucHV0LnNpZ25hdHVyZXMubGVuZ3RoID09PSBpbnB1dC5wdWJLZXlzLmxlbmd0aA0KDQogIHZhciBrcFB1YktleSA9IGtleVBhaXIuZ2V0UHVibGljS2V5QnVmZmVyKCkNCg0KICAvLyBhcmUgd2UgcmVhZHkgdG8gc2lnbj8NCiAgaWYgKGNhblNpZ24pIHsNCiAgICAvLyBpZiByZWRlZW1TY3JpcHQgd2FzIHByb3ZpZGVkLCBlbmZvcmNlIGNvbnNpc3RlbmN5DQogICAgaWYgKHJlZGVlbVNjcmlwdCkgew0KICAgICAgaWYgKCFidWZmZXJFcXVhbHMoaW5wdXQucmVkZWVtU2NyaXB0LCByZWRlZW1TY3JpcHQpKSB0aHJvdyBuZXcgRXJyb3IoJ0luY29uc2lzdGVudCByZWRlZW1TY3JpcHQnKQ0KICAgIH0NCg0KICAgIGlmIChpbnB1dC5oYXNoVHlwZSAhPT0gaGFzaFR5cGUpIHRocm93IG5ldyBFcnJvcignSW5jb25zaXN0ZW50IGhhc2hUeXBlJykNCg0KICAvLyBubz8gcHJlcGFyZQ0KICB9IGVsc2Ugew0KICAgIC8vIG11c3QgYmUgcGF5LXRvLXNjcmlwdEhhc2g/DQogICAgaWYgKHJlZGVlbVNjcmlwdCkgew0KICAgICAgLy8gaWYgd2UgaGF2ZSBhIHByZXZPdXRTY3JpcHQsIGVuZm9yY2Ugc2NyaXB0SGFzaCBlcXVhbGl0eSB0byB0aGUgcmVkZWVtU2NyaXB0DQogICAgICBpZiAoaW5wdXQucHJldk91dFNjcmlwdCkgew0KICAgICAgICBpZiAoaW5wdXQucHJldk91dFR5cGUgIT09ICdzY3JpcHRoYXNoJykgdGhyb3cgbmV3IEVycm9yKCdQcmV2T3V0U2NyaXB0IG11c3QgYmUgUDJTSCcpDQoNCiAgICAgICAgdmFyIHNjcmlwdEhhc2ggPSBic2NyaXB0LmRlY29tcGlsZShpbnB1dC5wcmV2T3V0U2NyaXB0KVsxXQ0KICAgICAgICBpZiAoIWJ1ZmZlckVxdWFscyhzY3JpcHRIYXNoLCBiY3J5cHRvLmhhc2gxNjAocmVkZWVtU2NyaXB0KSkpIHRocm93IG5ldyBFcnJvcignUmVkZWVtU2NyaXB0IGRvZXMgbm90IG1hdGNoICcgKyBzY3JpcHRIYXNoLnRvU3RyaW5nKCdoZXgnKSkNCiAgICAgIH0NCg0KICAgICAgdmFyIHNjcmlwdFR5cGUgPSBic2NyaXB0LmNsYXNzaWZ5T3V0cHV0KHJlZGVlbVNjcmlwdCkNCiAgICAgIHZhciByZWRlZW1TY3JpcHRDaHVua3MgPSBic2NyaXB0LmRlY29tcGlsZShyZWRlZW1TY3JpcHQpDQogICAgICB2YXIgcHViS2V5cw0KDQogICAgICBzd2l0Y2ggKHNjcmlwdFR5cGUpIHsNCiAgICAgICAgY2FzZSAnbXVsdGlzaWcnOg0KICAgICAgICAgIHB1YktleXMgPSByZWRlZW1TY3JpcHRDaHVua3Muc2xpY2UoMSwgLTIpDQoNCiAgICAgICAgICBicmVhaw0KDQogICAgICAgIGNhc2UgJ3B1YmtleWhhc2gnOg0KICAgICAgICAgIHZhciBwa2gxID0gcmVkZWVtU2NyaXB0Q2h1bmtzWzJdDQogICAgICAgICAgdmFyIHBraDIgPSBiY3J5cHRvLmhhc2gxNjAoa2V5UGFpci5nZXRQdWJsaWNLZXlCdWZmZXIoKSkNCg0KICAgICAgICAgIGlmICghYnVmZmVyRXF1YWxzKHBraDEsIHBraDIpKSB0aHJvdyBuZXcgRXJyb3IoJ3ByaXZhdGVLZXkgY2Fubm90IHNpZ24gZm9yIHRoaXMgaW5wdXQnKQ0KICAgICAgICAgIHB1YktleXMgPSBba3BQdWJLZXldDQoNCiAgICAgICAgICBicmVhaw0KDQogICAgICAgIGNhc2UgJ3B1YmtleSc6DQogICAgICAgICAgcHViS2V5cyA9IHJlZGVlbVNjcmlwdENodW5rcy5zbGljZSgwLCAxKQ0KDQogICAgICAgICAgYnJlYWsNCg0KICAgICAgICBkZWZhdWx0Og0KICAgICAgICAgIHRocm93IG5ldyBFcnJvcignUmVkZWVtU2NyaXB0IG5vdCBzdXBwb3J0ZWQgKCcgKyBzY3JpcHRUeXBlICsgJyknKQ0KICAgICAgfQ0KDQogICAgICAvLyBpZiB3ZSBkb24ndCBoYXZlIGEgcHJldk91dFNjcmlwdCwgZ2VuZXJhdGUgYSBQMlNIIHNjcmlwdA0KICAgICAgaWYgKCFpbnB1dC5wcmV2T3V0U2NyaXB0KSB7DQogICAgICAgIGlucHV0LnByZXZPdXRTY3JpcHQgPSBic2NyaXB0LnNjcmlwdEhhc2hPdXRwdXQoYmNyeXB0by5oYXNoMTYwKHJlZGVlbVNjcmlwdCkpDQogICAgICAgIGlucHV0LnByZXZPdXRUeXBlID0gJ3NjcmlwdGhhc2gnDQogICAgICB9DQoNCiAgICAgIGlucHV0LnB1YktleXMgPSBwdWJLZXlzDQogICAgICBpbnB1dC5yZWRlZW1TY3JpcHQgPSByZWRlZW1TY3JpcHQNCiAgICAgIGlucHV0LnNjcmlwdFR5cGUgPSBzY3JpcHRUeXBlDQogICAgICBpbnB1dC5zaWduYXR1cmVzID0gcHViS2V5cy5tYXAoZnVuY3Rpb24gKCkgeyByZXR1cm4gdW5kZWZpbmVkIH0pDQogICAgfSBlbHNlIHsNCiAgICAgIC8vIHBheS10by1zY3JpcHRIYXNoIGlzIG5vdCBwb3NzaWJsZSB3aXRob3V0IGEgcmVkZWVtU2NyaXB0DQogICAgICBpZiAoaW5wdXQucHJldk91dFR5cGUgPT09ICdzY3JpcHRoYXNoJykgdGhyb3cgbmV3IEVycm9yKCdQcmV2T3V0U2NyaXB0IGlzIFAyU0gsIG1pc3NpbmcgcmVkZWVtU2NyaXB0JykNCg0KICAgICAgLy8gaWYgd2UgZG9uJ3QgaGF2ZSBhIHNjcmlwdFR5cGUsIGFzc3VtZSBwdWJLZXlIYXNoIG90aGVyd2lzZQ0KICAgICAgaWYgKCFpbnB1dC5zY3JpcHRUeXBlKSB7DQogICAgICAgIGlucHV0LnByZXZPdXRTY3JpcHQgPSBic2NyaXB0LnB1YktleUhhc2hPdXRwdXQoYmNyeXB0by5oYXNoMTYwKGtleVBhaXIuZ2V0UHVibGljS2V5QnVmZmVyKCkpKQ0KICAgICAgICBpbnB1dC5wcmV2T3V0VHlwZSA9ICdwdWJrZXloYXNoJw0KICAgICAgICBpbnB1dC5wdWJLZXlzID0gW2twUHViS2V5XQ0KICAgICAgICBpbnB1dC5zY3JpcHRUeXBlID0gaW5wdXQucHJldk91dFR5cGUNCiAgICAgICAgaW5wdXQuc2lnbmF0dXJlcyA9IFt1bmRlZmluZWRdDQogICAgICB9IGVsc2Ugew0KICAgICAgICAvLyB0aHJvdyBpZiB3ZSBjYW4ndCBzaWduIHdpdGggaXQNCiAgICAgICAgaWYgKCFpbnB1dC5wdWJLZXlzIHx8ICFpbnB1dC5zaWduYXR1cmVzKSB0aHJvdyBuZXcgRXJyb3IoaW5wdXQuc2NyaXB0VHlwZSArICcgbm90IHN1cHBvcnRlZCcpDQogICAgICB9DQogICAgfQ0KDQogICAgaW5wdXQuaGFzaFR5cGUgPSBoYXNoVHlwZQ0KICB9DQoNCiAgLy8gcmVhZHkgdG8gc2lnbj8NCiAgdmFyIHNpZ25hdHVyZVNjcmlwdCA9IGlucHV0LnJlZGVlbVNjcmlwdCB8fCBpbnB1dC5wcmV2T3V0U2NyaXB0DQogIHZhciBzaWduYXR1cmVIYXNoID0gdGhpcy50eC5oYXNoRm9yU2lnbmF0dXJlKGluZGV4LCBzaWduYXR1cmVTY3JpcHQsIGhhc2hUeXBlKQ0KDQogIC8vIGVuZm9yY2UgaW4gb3JkZXIgc2lnbmluZyBvZiBwdWJsaWMga2V5cw0KICB2YXIgdmFsaWQgPSBpbnB1dC5wdWJLZXlzLnNvbWUoZnVuY3Rpb24gKHB1YktleSwgaSkgew0KICAgIGlmICghYnVmZmVyRXF1YWxzKGtwUHViS2V5LCBwdWJLZXkpKSByZXR1cm4gZmFsc2UNCiAgICBpZiAoaW5wdXQuc2lnbmF0dXJlc1tpXSkgdGhyb3cgbmV3IEVycm9yKCdTaWduYXR1cmUgYWxyZWFkeSBleGlzdHMnKQ0KDQogICAgdmFyIHNpZ25hdHVyZSA9IGtleVBhaXIuc2lnbihzaWduYXR1cmVIYXNoKQ0KICAgIGlucHV0LnNpZ25hdHVyZXNbaV0gPSBzaWduYXR1cmUNCg0KICAgIHJldHVybiB0cnVlDQogIH0pDQoNCiAgaWYgKCF2YWxpZCkgdGhyb3cgbmV3IEVycm9yKCdLZXkgcGFpciBjYW5ub3Qgc2lnbiBmb3IgdGhpcyBpbnB1dCcpDQp9DQoNCm1vZHVsZS5leHBvcnRzID0gVHJhbnNhY3Rpb25CdWlsZGVyDQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiLi9hZGRyZXNzIjo0MiwiLi9jcnlwdG8iOjQ1LCIuL2VjcGFpciI6NDcsIi4vZWNzaWduYXR1cmUiOjQ4LCIuL25ldHdvcmtzIjo1MiwiLi9vcGNvZGVzIjo1MywiLi9zY3JpcHQiOjU0LCIuL3RyYW5zYWN0aW9uIjo1NiwiLi90eXBlcyI6NTgsImJ1ZmZlciI6OTMsImJ1ZmZlci1lcXVhbHMiOjkwLCJ0eXBlZm9yY2UiOjU4Mn1dLDU4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciB0eXBlZm9yY2UgPSByZXF1aXJlKCd0eXBlZm9yY2UnKQ0KDQpmdW5jdGlvbiBuQnVmZmVyICh2YWx1ZSwgbikgew0KICB0eXBlZm9yY2UodHlwZXMuQnVmZmVyLCB2YWx1ZSkNCiAgaWYgKHZhbHVlLmxlbmd0aCAhPT0gbikgdGhyb3cgbmV3IHR5cGVmb3JjZS5UZlR5cGVFcnJvcignRXhwZWN0ZWQgJyArIChuICogOCkgKyAnLWJpdCBCdWZmZXIsIGdvdCAnICsgKHZhbHVlLmxlbmd0aCAqIDgpICsgJy1iaXQgQnVmZmVyJykNCg0KICByZXR1cm4gdHJ1ZQ0KfQ0KDQpmdW5jdGlvbiBIYXNoMTYwYml0ICh2YWx1ZSkgeyByZXR1cm4gbkJ1ZmZlcih2YWx1ZSwgMjApIH0NCmZ1bmN0aW9uIEhhc2gyNTZiaXQgKHZhbHVlKSB7IHJldHVybiBuQnVmZmVyKHZhbHVlLCAzMikgfQ0KZnVuY3Rpb24gQnVmZmVyMjU2Yml0ICh2YWx1ZSkgeyByZXR1cm4gbkJ1ZmZlcih2YWx1ZSwgMzIpIH0NCg0KdmFyIFVJTlQ1M19NQVggPSBNYXRoLnBvdygyLCA1MykgLSAxDQpmdW5jdGlvbiBVSW50MiAodmFsdWUpIHsgcmV0dXJuICh2YWx1ZSAmIDMpID09PSB2YWx1ZSB9DQpmdW5jdGlvbiBVSW50OCAodmFsdWUpIHsgcmV0dXJuICh2YWx1ZSAmIDB4ZmYpID09PSB2YWx1ZSB9DQpmdW5jdGlvbiBVSW50MzIgKHZhbHVlKSB7IHJldHVybiAodmFsdWUgPj4+IDApID09PSB2YWx1ZSB9DQpmdW5jdGlvbiBVSW50NTMgKHZhbHVlKSB7DQogIHJldHVybiB0eXBlZm9yY2UuTnVtYmVyKHZhbHVlKSAmJg0KICAgIHZhbHVlID49IDAgJiYNCiAgICB2YWx1ZSA8PSBVSU5UNTNfTUFYICYmDQogICAgTWF0aC5mbG9vcih2YWx1ZSkgPT09IHZhbHVlDQp9DQoNCi8vIGV4dGVybmFsIGRlcGVuZGVudCB0eXBlcw0KdmFyIEJpZ0ludCA9IHR5cGVmb3JjZS5xdWFja3NMaWtlKCdCaWdJbnRlZ2VyJykNCnZhciBFQ1BvaW50ID0gdHlwZWZvcmNlLnF1YWNrc0xpa2UoJ1BvaW50JykNCg0KLy8gZXhwb3NlZCwgZXh0ZXJuYWwgQVBJDQp2YXIgRUNTaWduYXR1cmUgPSB0eXBlZm9yY2UuY29tcGlsZSh7IHI6IEJpZ0ludCwgczogQmlnSW50IH0pDQp2YXIgTmV0d29yayA9IHR5cGVmb3JjZS5jb21waWxlKHsNCiAgbWVzc2FnZVByZWZpeDogdHlwZWZvcmNlLm9uZU9mKHR5cGVmb3JjZS5CdWZmZXIsIHR5cGVmb3JjZS5TdHJpbmcpLA0KICBiaXAzMjogew0KICAgIHB1YmxpYzogVUludDMyLA0KICAgIHByaXZhdGU6IFVJbnQzMg0KICB9LA0KICBwdWJLZXlIYXNoOiBVSW50OCwNCiAgc2NyaXB0SGFzaDogVUludDgsDQogIHdpZjogVUludDgsDQogIGR1c3RUaHJlc2hvbGQ6IFVJbnQ1Mw0KfSkNCg0KLy8gZXh0ZW5kIHR5cGVmb3JjZSB0eXBlcyB3aXRoIG91cnMNCnZhciB0eXBlcyA9IHsNCiAgQmlnSW50OiBCaWdJbnQsDQogIEJ1ZmZlcjI1NmJpdDogQnVmZmVyMjU2Yml0LA0KICBFQ1BvaW50OiBFQ1BvaW50LA0KICBFQ1NpZ25hdHVyZTogRUNTaWduYXR1cmUsDQogIEhhc2gxNjBiaXQ6IEhhc2gxNjBiaXQsDQogIEhhc2gyNTZiaXQ6IEhhc2gyNTZiaXQsDQogIE5ldHdvcms6IE5ldHdvcmssDQogIFVJbnQyOiBVSW50MiwNCiAgVUludDg6IFVJbnQ4LA0KICBVSW50MzI6IFVJbnQzMiwNCiAgVUludDUzOiBVSW50NTMNCn0NCg0KZm9yICh2YXIgdHlwZU5hbWUgaW4gdHlwZWZvcmNlKSB7DQogIHR5cGVzW3R5cGVOYW1lXSA9IHR5cGVmb3JjZVt0eXBlTmFtZV0NCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSB0eXBlcw0KDQp9LHsidHlwZWZvcmNlIjo1ODJ9XSw1OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykgew0KICAndXNlIHN0cmljdCc7DQoNCiAgLy8gVXRpbHMNCiAgZnVuY3Rpb24gYXNzZXJ0ICh2YWwsIG1zZykgew0KICAgIGlmICghdmFsKSB0aHJvdyBuZXcgRXJyb3IobXNnIHx8ICdBc3NlcnRpb24gZmFpbGVkJyk7DQogIH0NCg0KICAvLyBDb3VsZCB1c2UgYGluaGVyaXRzYCBtb2R1bGUsIGJ1dCBkb24ndCB3YW50IHRvIG1vdmUgZnJvbSBzaW5nbGUgZmlsZQ0KICAvLyBhcmNoaXRlY3R1cmUgeWV0Lg0KICBmdW5jdGlvbiBpbmhlcml0cyAoY3Rvciwgc3VwZXJDdG9yKSB7DQogICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3I7DQogICAgdmFyIFRlbXBDdG9yID0gZnVuY3Rpb24gKCkge307DQogICAgVGVtcEN0b3IucHJvdG90eXBlID0gc3VwZXJDdG9yLnByb3RvdHlwZTsNCiAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyBUZW1wQ3RvcigpOw0KICAgIGN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY3RvcjsNCiAgfQ0KDQogIC8vIEJODQoNCiAgZnVuY3Rpb24gQk4gKG51bWJlciwgYmFzZSwgZW5kaWFuKSB7DQogICAgaWYgKEJOLmlzQk4obnVtYmVyKSkgew0KICAgICAgcmV0dXJuIG51bWJlcjsNCiAgICB9DQoNCiAgICB0aGlzLm5lZ2F0aXZlID0gMDsNCiAgICB0aGlzLndvcmRzID0gbnVsbDsNCiAgICB0aGlzLmxlbmd0aCA9IDA7DQoNCiAgICAvLyBSZWR1Y3Rpb24gY29udGV4dA0KICAgIHRoaXMucmVkID0gbnVsbDsNCg0KICAgIGlmIChudW1iZXIgIT09IG51bGwpIHsNCiAgICAgIGlmIChiYXNlID09PSAnbGUnIHx8IGJhc2UgPT09ICdiZScpIHsNCiAgICAgICAgZW5kaWFuID0gYmFzZTsNCiAgICAgICAgYmFzZSA9IDEwOw0KICAgICAgfQ0KDQogICAgICB0aGlzLl9pbml0KG51bWJlciB8fCAwLCBiYXNlIHx8IDEwLCBlbmRpYW4gfHwgJ2JlJyk7DQogICAgfQ0KICB9DQogIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jykgew0KICAgIG1vZHVsZS5leHBvcnRzID0gQk47DQogIH0gZWxzZSB7DQogICAgZXhwb3J0cy5CTiA9IEJOOw0KICB9DQoNCiAgQk4uQk4gPSBCTjsNCiAgQk4ud29yZFNpemUgPSAyNjsNCg0KICB2YXIgQnVmZmVyOw0KICB0cnkgew0KICAgIEJ1ZmZlciA9IHJlcXVpcmUoJ2J1ZicgKyAnZmVyJykuQnVmZmVyOw0KICB9IGNhdGNoIChlKSB7DQogIH0NCg0KICBCTi5pc0JOID0gZnVuY3Rpb24gaXNCTiAobnVtKSB7DQogICAgcmV0dXJuIG51bSAhPT0gbnVsbCAmJiB0eXBlb2YgbnVtID09PSAnb2JqZWN0JyAmJg0KICAgICAgbnVtLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdCTicgJiYgQXJyYXkuaXNBcnJheShudW0ud29yZHMpOw0KICB9Ow0KDQogIEJOLm1heCA9IGZ1bmN0aW9uIG1heCAobGVmdCwgcmlnaHQpIHsNCiAgICBpZiAobGVmdC5jbXAocmlnaHQpID4gMCkgcmV0dXJuIGxlZnQ7DQogICAgcmV0dXJuIHJpZ2h0Ow0KICB9Ow0KDQogIEJOLm1pbiA9IGZ1bmN0aW9uIG1pbiAobGVmdCwgcmlnaHQpIHsNCiAgICBpZiAobGVmdC5jbXAocmlnaHQpIDwgMCkgcmV0dXJuIGxlZnQ7DQogICAgcmV0dXJuIHJpZ2h0Ow0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5faW5pdCA9IGZ1bmN0aW9uIGluaXQgKG51bWJlciwgYmFzZSwgZW5kaWFuKSB7DQogICAgaWYgKHR5cGVvZiBudW1iZXIgPT09ICdudW1iZXInKSB7DQogICAgICByZXR1cm4gdGhpcy5faW5pdE51bWJlcihudW1iZXIsIGJhc2UsIGVuZGlhbik7DQogICAgfQ0KDQogICAgaWYgKHR5cGVvZiBudW1iZXIgPT09ICdvYmplY3QnKSB7DQogICAgICByZXR1cm4gdGhpcy5faW5pdEFycmF5KG51bWJlciwgYmFzZSwgZW5kaWFuKTsNCiAgICB9DQoNCiAgICBpZiAoYmFzZSA9PT0gJ2hleCcpIHsNCiAgICAgIGJhc2UgPSAxNjsNCiAgICB9DQogICAgYXNzZXJ0KGJhc2UgPT09IChiYXNlIHwgMCkgJiYgYmFzZSA+PSAyICYmIGJhc2UgPD0gMzYpOw0KDQogICAgbnVtYmVyID0gbnVtYmVyLnRvU3RyaW5nKCkucmVwbGFjZSgvXHMrL2csICcnKTsNCiAgICB2YXIgc3RhcnQgPSAwOw0KICAgIGlmIChudW1iZXJbMF0gPT09ICctJykgew0KICAgICAgc3RhcnQrKzsNCiAgICB9DQoNCiAgICBpZiAoYmFzZSA9PT0gMTYpIHsNCiAgICAgIHRoaXMuX3BhcnNlSGV4KG51bWJlciwgc3RhcnQpOw0KICAgIH0gZWxzZSB7DQogICAgICB0aGlzLl9wYXJzZUJhc2UobnVtYmVyLCBiYXNlLCBzdGFydCk7DQogICAgfQ0KDQogICAgaWYgKG51bWJlclswXSA9PT0gJy0nKSB7DQogICAgICB0aGlzLm5lZ2F0aXZlID0gMTsNCiAgICB9DQoNCiAgICB0aGlzLnN0cmlwKCk7DQoNCiAgICBpZiAoZW5kaWFuICE9PSAnbGUnKSByZXR1cm47DQoNCiAgICB0aGlzLl9pbml0QXJyYXkodGhpcy50b0FycmF5KCksIGJhc2UsIGVuZGlhbik7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLl9pbml0TnVtYmVyID0gZnVuY3Rpb24gX2luaXROdW1iZXIgKG51bWJlciwgYmFzZSwgZW5kaWFuKSB7DQogICAgaWYgKG51bWJlciA8IDApIHsNCiAgICAgIHRoaXMubmVnYXRpdmUgPSAxOw0KICAgICAgbnVtYmVyID0gLW51bWJlcjsNCiAgICB9DQogICAgaWYgKG51bWJlciA8IDB4NDAwMDAwMCkgew0KICAgICAgdGhpcy53b3JkcyA9IFsgbnVtYmVyICYgMHgzZmZmZmZmIF07DQogICAgICB0aGlzLmxlbmd0aCA9IDE7DQogICAgfSBlbHNlIGlmIChudW1iZXIgPCAweDEwMDAwMDAwMDAwMDAwKSB7DQogICAgICB0aGlzLndvcmRzID0gWw0KICAgICAgICBudW1iZXIgJiAweDNmZmZmZmYsDQogICAgICAgIChudW1iZXIgLyAweDQwMDAwMDApICYgMHgzZmZmZmZmDQogICAgICBdOw0KICAgICAgdGhpcy5sZW5ndGggPSAyOw0KICAgIH0gZWxzZSB7DQogICAgICBhc3NlcnQobnVtYmVyIDwgMHgyMDAwMDAwMDAwMDAwMCk7IC8vIDIgXiA1MyAodW5zYWZlKQ0KICAgICAgdGhpcy53b3JkcyA9IFsNCiAgICAgICAgbnVtYmVyICYgMHgzZmZmZmZmLA0KICAgICAgICAobnVtYmVyIC8gMHg0MDAwMDAwKSAmIDB4M2ZmZmZmZiwNCiAgICAgICAgMQ0KICAgICAgXTsNCiAgICAgIHRoaXMubGVuZ3RoID0gMzsNCiAgICB9DQoNCiAgICBpZiAoZW5kaWFuICE9PSAnbGUnKSByZXR1cm47DQoNCiAgICAvLyBSZXZlcnNlIHRoZSBieXRlcw0KICAgIHRoaXMuX2luaXRBcnJheSh0aGlzLnRvQXJyYXkoKSwgYmFzZSwgZW5kaWFuKTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUuX2luaXRBcnJheSA9IGZ1bmN0aW9uIF9pbml0QXJyYXkgKG51bWJlciwgYmFzZSwgZW5kaWFuKSB7DQogICAgLy8gUGVyaGFwcyBhIFVpbnQ4QXJyYXkNCiAgICBhc3NlcnQodHlwZW9mIG51bWJlci5sZW5ndGggPT09ICdudW1iZXInKTsNCiAgICBpZiAobnVtYmVyLmxlbmd0aCA8PSAwKSB7DQogICAgICB0aGlzLndvcmRzID0gWyAwIF07DQogICAgICB0aGlzLmxlbmd0aCA9IDE7DQogICAgICByZXR1cm4gdGhpczsNCiAgICB9DQoNCiAgICB0aGlzLmxlbmd0aCA9IE1hdGguY2VpbChudW1iZXIubGVuZ3RoIC8gMyk7DQogICAgdGhpcy53b3JkcyA9IG5ldyBBcnJheSh0aGlzLmxlbmd0aCk7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7DQogICAgICB0aGlzLndvcmRzW2ldID0gMDsNCiAgICB9DQoNCiAgICB2YXIgaiwgdzsNCiAgICB2YXIgb2ZmID0gMDsNCiAgICBpZiAoZW5kaWFuID09PSAnYmUnKSB7DQogICAgICBmb3IgKGkgPSBudW1iZXIubGVuZ3RoIC0gMSwgaiA9IDA7IGkgPj0gMDsgaSAtPSAzKSB7DQogICAgICAgIHcgPSBudW1iZXJbaV0gfCAobnVtYmVyW2kgLSAxXSA8PCA4KSB8IChudW1iZXJbaSAtIDJdIDw8IDE2KTsNCiAgICAgICAgdGhpcy53b3Jkc1tqXSB8PSAodyA8PCBvZmYpICYgMHgzZmZmZmZmOw0KICAgICAgICB0aGlzLndvcmRzW2ogKyAxXSA9ICh3ID4+PiAoMjYgLSBvZmYpKSAmIDB4M2ZmZmZmZjsNCiAgICAgICAgb2ZmICs9IDI0Ow0KICAgICAgICBpZiAob2ZmID49IDI2KSB7DQogICAgICAgICAgb2ZmIC09IDI2Ow0KICAgICAgICAgIGorKzsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0gZWxzZSBpZiAoZW5kaWFuID09PSAnbGUnKSB7DQogICAgICBmb3IgKGkgPSAwLCBqID0gMDsgaSA8IG51bWJlci5sZW5ndGg7IGkgKz0gMykgew0KICAgICAgICB3ID0gbnVtYmVyW2ldIHwgKG51bWJlcltpICsgMV0gPDwgOCkgfCAobnVtYmVyW2kgKyAyXSA8PCAxNik7DQogICAgICAgIHRoaXMud29yZHNbal0gfD0gKHcgPDwgb2ZmKSAmIDB4M2ZmZmZmZjsNCiAgICAgICAgdGhpcy53b3Jkc1tqICsgMV0gPSAodyA+Pj4gKDI2IC0gb2ZmKSkgJiAweDNmZmZmZmY7DQogICAgICAgIG9mZiArPSAyNDsNCiAgICAgICAgaWYgKG9mZiA+PSAyNikgew0KICAgICAgICAgIG9mZiAtPSAyNjsNCiAgICAgICAgICBqKys7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogICAgcmV0dXJuIHRoaXMuc3RyaXAoKTsNCiAgfTsNCg0KICBmdW5jdGlvbiBwYXJzZUhleCAoc3RyLCBzdGFydCwgZW5kKSB7DQogICAgdmFyIHIgPSAwOw0KICAgIHZhciBsZW4gPSBNYXRoLm1pbihzdHIubGVuZ3RoLCBlbmQpOw0KICAgIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGxlbjsgaSsrKSB7DQogICAgICB2YXIgYyA9IHN0ci5jaGFyQ29kZUF0KGkpIC0gNDg7DQoNCiAgICAgIHIgPDw9IDQ7DQoNCiAgICAgIC8vICdhJyAtICdmJw0KICAgICAgaWYgKGMgPj0gNDkgJiYgYyA8PSA1NCkgew0KICAgICAgICByIHw9IGMgLSA0OSArIDB4YTsNCg0KICAgICAgLy8gJ0EnIC0gJ0YnDQogICAgICB9IGVsc2UgaWYgKGMgPj0gMTcgJiYgYyA8PSAyMikgew0KICAgICAgICByIHw9IGMgLSAxNyArIDB4YTsNCg0KICAgICAgLy8gJzAnIC0gJzknDQogICAgICB9IGVsc2Ugew0KICAgICAgICByIHw9IGMgJiAweGY7DQogICAgICB9DQogICAgfQ0KICAgIHJldHVybiByOw0KICB9DQoNCiAgQk4ucHJvdG90eXBlLl9wYXJzZUhleCA9IGZ1bmN0aW9uIF9wYXJzZUhleCAobnVtYmVyLCBzdGFydCkgew0KICAgIC8vIENyZWF0ZSBwb3NzaWJseSBiaWdnZXIgYXJyYXkgdG8gZW5zdXJlIHRoYXQgaXQgZml0cyB0aGUgbnVtYmVyDQogICAgdGhpcy5sZW5ndGggPSBNYXRoLmNlaWwoKG51bWJlci5sZW5ndGggLSBzdGFydCkgLyA2KTsNCiAgICB0aGlzLndvcmRzID0gbmV3IEFycmF5KHRoaXMubGVuZ3RoKTsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHsNCiAgICAgIHRoaXMud29yZHNbaV0gPSAwOw0KICAgIH0NCg0KICAgIHZhciBqLCB3Ow0KICAgIC8vIFNjYW4gMjQtYml0IGNodW5rcyBhbmQgYWRkIHRoZW0gdG8gdGhlIG51bWJlcg0KICAgIHZhciBvZmYgPSAwOw0KICAgIGZvciAoaSA9IG51bWJlci5sZW5ndGggLSA2LCBqID0gMDsgaSA+PSBzdGFydDsgaSAtPSA2KSB7DQogICAgICB3ID0gcGFyc2VIZXgobnVtYmVyLCBpLCBpICsgNik7DQogICAgICB0aGlzLndvcmRzW2pdIHw9ICh3IDw8IG9mZikgJiAweDNmZmZmZmY7DQogICAgICAvLyBOT1RFOiBgMHgzZmZmZmZgIGlzIGludGVudGlvbmFsIGhlcmUsIDI2Yml0cyBtYXggc2hpZnQgKyAyNGJpdCBoZXggbGltYg0KICAgICAgdGhpcy53b3Jkc1tqICsgMV0gfD0gdyA+Pj4gKDI2IC0gb2ZmKSAmIDB4M2ZmZmZmOw0KICAgICAgb2ZmICs9IDI0Ow0KICAgICAgaWYgKG9mZiA+PSAyNikgew0KICAgICAgICBvZmYgLT0gMjY7DQogICAgICAgIGorKzsNCiAgICAgIH0NCiAgICB9DQogICAgaWYgKGkgKyA2ICE9PSBzdGFydCkgew0KICAgICAgdyA9IHBhcnNlSGV4KG51bWJlciwgc3RhcnQsIGkgKyA2KTsNCiAgICAgIHRoaXMud29yZHNbal0gfD0gKHcgPDwgb2ZmKSAmIDB4M2ZmZmZmZjsNCiAgICAgIHRoaXMud29yZHNbaiArIDFdIHw9IHcgPj4+ICgyNiAtIG9mZikgJiAweDNmZmZmZjsNCiAgICB9DQogICAgdGhpcy5zdHJpcCgpOw0KICB9Ow0KDQogIGZ1bmN0aW9uIHBhcnNlQmFzZSAoc3RyLCBzdGFydCwgZW5kLCBtdWwpIHsNCiAgICB2YXIgciA9IDA7DQogICAgdmFyIGxlbiA9IE1hdGgubWluKHN0ci5sZW5ndGgsIGVuZCk7DQogICAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgbGVuOyBpKyspIHsNCiAgICAgIHZhciBjID0gc3RyLmNoYXJDb2RlQXQoaSkgLSA0ODsNCg0KICAgICAgciAqPSBtdWw7DQoNCiAgICAgIC8vICdhJw0KICAgICAgaWYgKGMgPj0gNDkpIHsNCiAgICAgICAgciArPSBjIC0gNDkgKyAweGE7DQoNCiAgICAgIC8vICdBJw0KICAgICAgfSBlbHNlIGlmIChjID49IDE3KSB7DQogICAgICAgIHIgKz0gYyAtIDE3ICsgMHhhOw0KDQogICAgICAvLyAnMCcgLSAnOScNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHIgKz0gYzsNCiAgICAgIH0NCiAgICB9DQogICAgcmV0dXJuIHI7DQogIH0NCg0KICBCTi5wcm90b3R5cGUuX3BhcnNlQmFzZSA9IGZ1bmN0aW9uIF9wYXJzZUJhc2UgKG51bWJlciwgYmFzZSwgc3RhcnQpIHsNCiAgICAvLyBJbml0aWFsaXplIGFzIHplcm8NCiAgICB0aGlzLndvcmRzID0gWyAwIF07DQogICAgdGhpcy5sZW5ndGggPSAxOw0KDQogICAgLy8gRmluZCBsZW5ndGggb2YgbGltYiBpbiBiYXNlDQogICAgZm9yICh2YXIgbGltYkxlbiA9IDAsIGxpbWJQb3cgPSAxOyBsaW1iUG93IDw9IDB4M2ZmZmZmZjsgbGltYlBvdyAqPSBiYXNlKSB7DQogICAgICBsaW1iTGVuKys7DQogICAgfQ0KICAgIGxpbWJMZW4tLTsNCiAgICBsaW1iUG93ID0gKGxpbWJQb3cgLyBiYXNlKSB8IDA7DQoNCiAgICB2YXIgdG90YWwgPSBudW1iZXIubGVuZ3RoIC0gc3RhcnQ7DQogICAgdmFyIG1vZCA9IHRvdGFsICUgbGltYkxlbjsNCiAgICB2YXIgZW5kID0gTWF0aC5taW4odG90YWwsIHRvdGFsIC0gbW9kKSArIHN0YXJ0Ow0KDQogICAgdmFyIHdvcmQgPSAwOw0KICAgIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgaSArPSBsaW1iTGVuKSB7DQogICAgICB3b3JkID0gcGFyc2VCYXNlKG51bWJlciwgaSwgaSArIGxpbWJMZW4sIGJhc2UpOw0KDQogICAgICB0aGlzLmltdWxuKGxpbWJQb3cpOw0KICAgICAgaWYgKHRoaXMud29yZHNbMF0gKyB3b3JkIDwgMHg0MDAwMDAwKSB7DQogICAgICAgIHRoaXMud29yZHNbMF0gKz0gd29yZDsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuX2lhZGRuKHdvcmQpOw0KICAgICAgfQ0KICAgIH0NCg0KICAgIGlmIChtb2QgIT09IDApIHsNCiAgICAgIHZhciBwb3cgPSAxOw0KICAgICAgd29yZCA9IHBhcnNlQmFzZShudW1iZXIsIGksIG51bWJlci5sZW5ndGgsIGJhc2UpOw0KDQogICAgICBmb3IgKGkgPSAwOyBpIDwgbW9kOyBpKyspIHsNCiAgICAgICAgcG93ICo9IGJhc2U7DQogICAgICB9DQoNCiAgICAgIHRoaXMuaW11bG4ocG93KTsNCiAgICAgIGlmICh0aGlzLndvcmRzWzBdICsgd29yZCA8IDB4NDAwMDAwMCkgew0KICAgICAgICB0aGlzLndvcmRzWzBdICs9IHdvcmQ7DQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLl9pYWRkbih3b3JkKTsNCiAgICAgIH0NCiAgICB9DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLmNvcHkgPSBmdW5jdGlvbiBjb3B5IChkZXN0KSB7DQogICAgZGVzdC53b3JkcyA9IG5ldyBBcnJheSh0aGlzLmxlbmd0aCk7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7DQogICAgICBkZXN0LndvcmRzW2ldID0gdGhpcy53b3Jkc1tpXTsNCiAgICB9DQogICAgZGVzdC5sZW5ndGggPSB0aGlzLmxlbmd0aDsNCiAgICBkZXN0Lm5lZ2F0aXZlID0gdGhpcy5uZWdhdGl2ZTsNCiAgICBkZXN0LnJlZCA9IHRoaXMucmVkOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uIGNsb25lICgpIHsNCiAgICB2YXIgciA9IG5ldyBCTihudWxsKTsNCiAgICB0aGlzLmNvcHkocik7DQogICAgcmV0dXJuIHI7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLl9leHBhbmQgPSBmdW5jdGlvbiBfZXhwYW5kIChzaXplKSB7DQogICAgd2hpbGUgKHRoaXMubGVuZ3RoIDwgc2l6ZSkgew0KICAgICAgdGhpcy53b3Jkc1t0aGlzLmxlbmd0aCsrXSA9IDA7DQogICAgfQ0KICAgIHJldHVybiB0aGlzOw0KICB9Ow0KDQogIC8vIFJlbW92ZSBsZWFkaW5nIGAwYCBmcm9tIGB0aGlzYA0KICBCTi5wcm90b3R5cGUuc3RyaXAgPSBmdW5jdGlvbiBzdHJpcCAoKSB7DQogICAgd2hpbGUgKHRoaXMubGVuZ3RoID4gMSAmJiB0aGlzLndvcmRzW3RoaXMubGVuZ3RoIC0gMV0gPT09IDApIHsNCiAgICAgIHRoaXMubGVuZ3RoLS07DQogICAgfQ0KICAgIHJldHVybiB0aGlzLl9ub3JtU2lnbigpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5fbm9ybVNpZ24gPSBmdW5jdGlvbiBfbm9ybVNpZ24gKCkgew0KICAgIC8vIC0wID0gMA0KICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMSAmJiB0aGlzLndvcmRzWzBdID09PSAwKSB7DQogICAgICB0aGlzLm5lZ2F0aXZlID0gMDsNCiAgICB9DQogICAgcmV0dXJuIHRoaXM7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLmluc3BlY3QgPSBmdW5jdGlvbiBpbnNwZWN0ICgpIHsNCiAgICByZXR1cm4gKHRoaXMucmVkID8gJzxCTi1SOiAnIDogJzxCTjogJykgKyB0aGlzLnRvU3RyaW5nKDE2KSArICc+JzsNCiAgfTsNCg0KICAvKg0KDQogIHZhciB6ZXJvcyA9IFtdOw0KICB2YXIgZ3JvdXBTaXplcyA9IFtdOw0KICB2YXIgZ3JvdXBCYXNlcyA9IFtdOw0KDQogIHZhciBzID0gJyc7DQogIHZhciBpID0gLTE7DQogIHdoaWxlICgrK2kgPCBCTi53b3JkU2l6ZSkgew0KICAgIHplcm9zW2ldID0gczsNCiAgICBzICs9ICcwJzsNCiAgfQ0KICBncm91cFNpemVzWzBdID0gMDsNCiAgZ3JvdXBTaXplc1sxXSA9IDA7DQogIGdyb3VwQmFzZXNbMF0gPSAwOw0KICBncm91cEJhc2VzWzFdID0gMDsNCiAgdmFyIGJhc2UgPSAyIC0gMTsNCiAgd2hpbGUgKCsrYmFzZSA8IDM2ICsgMSkgew0KICAgIHZhciBncm91cFNpemUgPSAwOw0KICAgIHZhciBncm91cEJhc2UgPSAxOw0KICAgIHdoaWxlIChncm91cEJhc2UgPCAoMSA8PCBCTi53b3JkU2l6ZSkgLyBiYXNlKSB7DQogICAgICBncm91cEJhc2UgKj0gYmFzZTsNCiAgICAgIGdyb3VwU2l6ZSArPSAxOw0KICAgIH0NCiAgICBncm91cFNpemVzW2Jhc2VdID0gZ3JvdXBTaXplOw0KICAgIGdyb3VwQmFzZXNbYmFzZV0gPSBncm91cEJhc2U7DQogIH0NCg0KICAqLw0KDQogIHZhciB6ZXJvcyA9IFsNCiAgICAnJywNCiAgICAnMCcsDQogICAgJzAwJywNCiAgICAnMDAwJywNCiAgICAnMDAwMCcsDQogICAgJzAwMDAwJywNCiAgICAnMDAwMDAwJywNCiAgICAnMDAwMDAwMCcsDQogICAgJzAwMDAwMDAwJywNCiAgICAnMDAwMDAwMDAwJywNCiAgICAnMDAwMDAwMDAwMCcsDQogICAgJzAwMDAwMDAwMDAwJywNCiAgICAnMDAwMDAwMDAwMDAwJywNCiAgICAnMDAwMDAwMDAwMDAwMCcsDQogICAgJzAwMDAwMDAwMDAwMDAwJywNCiAgICAnMDAwMDAwMDAwMDAwMDAwJywNCiAgICAnMDAwMDAwMDAwMDAwMDAwMCcsDQogICAgJzAwMDAwMDAwMDAwMDAwMDAwJywNCiAgICAnMDAwMDAwMDAwMDAwMDAwMDAwJywNCiAgICAnMDAwMDAwMDAwMDAwMDAwMDAwMCcsDQogICAgJzAwMDAwMDAwMDAwMDAwMDAwMDAwJywNCiAgICAnMDAwMDAwMDAwMDAwMDAwMDAwMDAwJywNCiAgICAnMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcsDQogICAgJzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJywNCiAgICAnMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJywNCiAgICAnMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcNCiAgXTsNCg0KICB2YXIgZ3JvdXBTaXplcyA9IFsNCiAgICAwLCAwLA0KICAgIDI1LCAxNiwgMTIsIDExLCAxMCwgOSwgOCwNCiAgICA4LCA3LCA3LCA3LCA3LCA2LCA2LA0KICAgIDYsIDYsIDYsIDYsIDYsIDUsIDUsDQogICAgNSwgNSwgNSwgNSwgNSwgNSwgNSwNCiAgICA1LCA1LCA1LCA1LCA1LCA1LCA1DQogIF07DQoNCiAgdmFyIGdyb3VwQmFzZXMgPSBbDQogICAgMCwgMCwNCiAgICAzMzU1NDQzMiwgNDMwNDY3MjEsIDE2Nzc3MjE2LCA0ODgyODEyNSwgNjA0NjYxNzYsIDQwMzUzNjA3LCAxNjc3NzIxNiwNCiAgICA0MzA0NjcyMSwgMTAwMDAwMDAsIDE5NDg3MTcxLCAzNTgzMTgwOCwgNjI3NDg1MTcsIDc1Mjk1MzYsIDExMzkwNjI1LA0KICAgIDE2Nzc3MjE2LCAyNDEzNzU2OSwgMzQwMTIyMjQsIDQ3MDQ1ODgxLCA2NDAwMDAwMCwgNDA4NDEwMSwgNTE1MzYzMiwNCiAgICA2NDM2MzQzLCA3OTYyNjI0LCA5NzY1NjI1LCAxMTg4MTM3NiwgMTQzNDg5MDcsIDE3MjEwMzY4LCAyMDUxMTE0OSwNCiAgICAyNDMwMDAwMCwgMjg2MjkxNTEsIDMzNTU0NDMyLCAzOTEzNTM5MywgNDU0MzU0MjQsIDUyNTIxODc1LCA2MDQ2NjE3Ng0KICBdOw0KDQogIEJOLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nIChiYXNlLCBwYWRkaW5nKSB7DQogICAgYmFzZSA9IGJhc2UgfHwgMTA7DQogICAgcGFkZGluZyA9IHBhZGRpbmcgfCAwIHx8IDE7DQoNCiAgICB2YXIgb3V0Ow0KICAgIGlmIChiYXNlID09PSAxNiB8fCBiYXNlID09PSAnaGV4Jykgew0KICAgICAgb3V0ID0gJyc7DQogICAgICB2YXIgb2ZmID0gMDsNCiAgICAgIHZhciBjYXJyeSA9IDA7DQogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgdmFyIHcgPSB0aGlzLndvcmRzW2ldOw0KICAgICAgICB2YXIgd29yZCA9ICgoKHcgPDwgb2ZmKSB8IGNhcnJ5KSAmIDB4ZmZmZmZmKS50b1N0cmluZygxNik7DQogICAgICAgIGNhcnJ5ID0gKHcgPj4+ICgyNCAtIG9mZikpICYgMHhmZmZmZmY7DQogICAgICAgIGlmIChjYXJyeSAhPT0gMCB8fCBpICE9PSB0aGlzLmxlbmd0aCAtIDEpIHsNCiAgICAgICAgICBvdXQgPSB6ZXJvc1s2IC0gd29yZC5sZW5ndGhdICsgd29yZCArIG91dDsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICBvdXQgPSB3b3JkICsgb3V0Ow0KICAgICAgICB9DQogICAgICAgIG9mZiArPSAyOw0KICAgICAgICBpZiAob2ZmID49IDI2KSB7DQogICAgICAgICAgb2ZmIC09IDI2Ow0KICAgICAgICAgIGktLTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgaWYgKGNhcnJ5ICE9PSAwKSB7DQogICAgICAgIG91dCA9IGNhcnJ5LnRvU3RyaW5nKDE2KSArIG91dDsNCiAgICAgIH0NCiAgICAgIHdoaWxlIChvdXQubGVuZ3RoICUgcGFkZGluZyAhPT0gMCkgew0KICAgICAgICBvdXQgPSAnMCcgKyBvdXQ7DQogICAgICB9DQogICAgICBpZiAodGhpcy5uZWdhdGl2ZSAhPT0gMCkgew0KICAgICAgICBvdXQgPSAnLScgKyBvdXQ7DQogICAgICB9DQogICAgICByZXR1cm4gb3V0Ow0KICAgIH0NCg0KICAgIGlmIChiYXNlID09PSAoYmFzZSB8IDApICYmIGJhc2UgPj0gMiAmJiBiYXNlIDw9IDM2KSB7DQogICAgICAvLyB2YXIgZ3JvdXBTaXplID0gTWF0aC5mbG9vcihCTi53b3JkU2l6ZSAqIE1hdGguTE4yIC8gTWF0aC5sb2coYmFzZSkpOw0KICAgICAgdmFyIGdyb3VwU2l6ZSA9IGdyb3VwU2l6ZXNbYmFzZV07DQogICAgICAvLyB2YXIgZ3JvdXBCYXNlID0gTWF0aC5wb3coYmFzZSwgZ3JvdXBTaXplKTsNCiAgICAgIHZhciBncm91cEJhc2UgPSBncm91cEJhc2VzW2Jhc2VdOw0KICAgICAgb3V0ID0gJyc7DQogICAgICB2YXIgYyA9IHRoaXMuY2xvbmUoKTsNCiAgICAgIGMubmVnYXRpdmUgPSAwOw0KICAgICAgd2hpbGUgKCFjLmlzWmVybygpKSB7DQogICAgICAgIHZhciByID0gYy5tb2RuKGdyb3VwQmFzZSkudG9TdHJpbmcoYmFzZSk7DQogICAgICAgIGMgPSBjLmlkaXZuKGdyb3VwQmFzZSk7DQoNCiAgICAgICAgaWYgKCFjLmlzWmVybygpKSB7DQogICAgICAgICAgb3V0ID0gemVyb3NbZ3JvdXBTaXplIC0gci5sZW5ndGhdICsgciArIG91dDsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICBvdXQgPSByICsgb3V0Ow0KICAgICAgICB9DQogICAgICB9DQogICAgICBpZiAodGhpcy5pc1plcm8oKSkgew0KICAgICAgICBvdXQgPSAnMCcgKyBvdXQ7DQogICAgICB9DQogICAgICB3aGlsZSAob3V0Lmxlbmd0aCAlIHBhZGRpbmcgIT09IDApIHsNCiAgICAgICAgb3V0ID0gJzAnICsgb3V0Ow0KICAgICAgfQ0KICAgICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDApIHsNCiAgICAgICAgb3V0ID0gJy0nICsgb3V0Ow0KICAgICAgfQ0KICAgICAgcmV0dXJuIG91dDsNCiAgICB9DQoNCiAgICBhc3NlcnQoZmFsc2UsICdCYXNlIHNob3VsZCBiZSBiZXR3ZWVuIDIgYW5kIDM2Jyk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLnRvTnVtYmVyID0gZnVuY3Rpb24gdG9OdW1iZXIgKCkgew0KICAgIHZhciByZXQgPSB0aGlzLndvcmRzWzBdOw0KICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMikgew0KICAgICAgcmV0ICs9IHRoaXMud29yZHNbMV0gKiAweDQwMDAwMDA7DQogICAgfSBlbHNlIGlmICh0aGlzLmxlbmd0aCA9PT0gMyAmJiB0aGlzLndvcmRzWzJdID09PSAweDAxKSB7DQogICAgICAvLyBOT1RFOiBhdCB0aGlzIHN0YWdlIGl0IGlzIGtub3duIHRoYXQgdGhlIHRvcCBiaXQgaXMgc2V0DQogICAgICByZXQgKz0gMHgxMDAwMDAwMDAwMDAwMCArICh0aGlzLndvcmRzWzFdICogMHg0MDAwMDAwKTsNCiAgICB9IGVsc2UgaWYgKHRoaXMubGVuZ3RoID4gMikgew0KICAgICAgYXNzZXJ0KGZhbHNlLCAnTnVtYmVyIGNhbiBvbmx5IHNhZmVseSBzdG9yZSB1cCB0byA1MyBiaXRzJyk7DQogICAgfQ0KICAgIHJldHVybiAodGhpcy5uZWdhdGl2ZSAhPT0gMCkgPyAtcmV0IDogcmV0Ow0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiB0b0pTT04gKCkgew0KICAgIHJldHVybiB0aGlzLnRvU3RyaW5nKDE2KTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUudG9CdWZmZXIgPSBmdW5jdGlvbiB0b0J1ZmZlciAoZW5kaWFuLCBsZW5ndGgpIHsNCiAgICBhc3NlcnQodHlwZW9mIEJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcpOw0KICAgIHJldHVybiB0aGlzLnRvQXJyYXlMaWtlKEJ1ZmZlciwgZW5kaWFuLCBsZW5ndGgpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS50b0FycmF5ID0gZnVuY3Rpb24gdG9BcnJheSAoZW5kaWFuLCBsZW5ndGgpIHsNCiAgICByZXR1cm4gdGhpcy50b0FycmF5TGlrZShBcnJheSwgZW5kaWFuLCBsZW5ndGgpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS50b0FycmF5TGlrZSA9IGZ1bmN0aW9uIHRvQXJyYXlMaWtlIChBcnJheVR5cGUsIGVuZGlhbiwgbGVuZ3RoKSB7DQogICAgdmFyIGJ5dGVMZW5ndGggPSB0aGlzLmJ5dGVMZW5ndGgoKTsNCiAgICB2YXIgcmVxTGVuZ3RoID0gbGVuZ3RoIHx8IE1hdGgubWF4KDEsIGJ5dGVMZW5ndGgpOw0KICAgIGFzc2VydChieXRlTGVuZ3RoIDw9IHJlcUxlbmd0aCwgJ2J5dGUgYXJyYXkgbG9uZ2VyIHRoYW4gZGVzaXJlZCBsZW5ndGgnKTsNCiAgICBhc3NlcnQocmVxTGVuZ3RoID4gMCwgJ1JlcXVlc3RlZCBhcnJheSBsZW5ndGggPD0gMCcpOw0KDQogICAgdGhpcy5zdHJpcCgpOw0KICAgIHZhciBsaXR0bGVFbmRpYW4gPSBlbmRpYW4gPT09ICdsZSc7DQogICAgdmFyIHJlcyA9IG5ldyBBcnJheVR5cGUocmVxTGVuZ3RoKTsNCg0KICAgIHZhciBiLCBpOw0KICAgIHZhciBxID0gdGhpcy5jbG9uZSgpOw0KICAgIGlmICghbGl0dGxlRW5kaWFuKSB7DQogICAgICAvLyBBc3N1bWUgYmlnLWVuZGlhbg0KICAgICAgZm9yIChpID0gMDsgaSA8IHJlcUxlbmd0aCAtIGJ5dGVMZW5ndGg7IGkrKykgew0KICAgICAgICByZXNbaV0gPSAwOw0KICAgICAgfQ0KDQogICAgICBmb3IgKGkgPSAwOyAhcS5pc1plcm8oKTsgaSsrKSB7DQogICAgICAgIGIgPSBxLmFuZGxuKDB4ZmYpOw0KICAgICAgICBxLml1c2hybig4KTsNCg0KICAgICAgICByZXNbcmVxTGVuZ3RoIC0gaSAtIDFdID0gYjsNCiAgICAgIH0NCiAgICB9IGVsc2Ugew0KICAgICAgZm9yIChpID0gMDsgIXEuaXNaZXJvKCk7IGkrKykgew0KICAgICAgICBiID0gcS5hbmRsbigweGZmKTsNCiAgICAgICAgcS5pdXNocm4oOCk7DQoNCiAgICAgICAgcmVzW2ldID0gYjsNCiAgICAgIH0NCg0KICAgICAgZm9yICg7IGkgPCByZXFMZW5ndGg7IGkrKykgew0KICAgICAgICByZXNbaV0gPSAwOw0KICAgICAgfQ0KICAgIH0NCg0KICAgIHJldHVybiByZXM7DQogIH07DQoNCiAgaWYgKE1hdGguY2x6MzIpIHsNCiAgICBCTi5wcm90b3R5cGUuX2NvdW50Qml0cyA9IGZ1bmN0aW9uIF9jb3VudEJpdHMgKHcpIHsNCiAgICAgIHJldHVybiAzMiAtIE1hdGguY2x6MzIodyk7DQogICAgfTsNCiAgfSBlbHNlIHsNCiAgICBCTi5wcm90b3R5cGUuX2NvdW50Qml0cyA9IGZ1bmN0aW9uIF9jb3VudEJpdHMgKHcpIHsNCiAgICAgIHZhciB0ID0gdzsNCiAgICAgIHZhciByID0gMDsNCiAgICAgIGlmICh0ID49IDB4MTAwMCkgew0KICAgICAgICByICs9IDEzOw0KICAgICAgICB0ID4+Pj0gMTM7DQogICAgICB9DQogICAgICBpZiAodCA+PSAweDQwKSB7DQogICAgICAgIHIgKz0gNzsNCiAgICAgICAgdCA+Pj49IDc7DQogICAgICB9DQogICAgICBpZiAodCA+PSAweDgpIHsNCiAgICAgICAgciArPSA0Ow0KICAgICAgICB0ID4+Pj0gNDsNCiAgICAgIH0NCiAgICAgIGlmICh0ID49IDB4MDIpIHsNCiAgICAgICAgciArPSAyOw0KICAgICAgICB0ID4+Pj0gMjsNCiAgICAgIH0NCiAgICAgIHJldHVybiByICsgdDsNCiAgICB9Ow0KICB9DQoNCiAgQk4ucHJvdG90eXBlLl96ZXJvQml0cyA9IGZ1bmN0aW9uIF96ZXJvQml0cyAodykgew0KICAgIC8vIFNob3J0LWN1dA0KICAgIGlmICh3ID09PSAwKSByZXR1cm4gMjY7DQoNCiAgICB2YXIgdCA9IHc7DQogICAgdmFyIHIgPSAwOw0KICAgIGlmICgodCAmIDB4MWZmZikgPT09IDApIHsNCiAgICAgIHIgKz0gMTM7DQogICAgICB0ID4+Pj0gMTM7DQogICAgfQ0KICAgIGlmICgodCAmIDB4N2YpID09PSAwKSB7DQogICAgICByICs9IDc7DQogICAgICB0ID4+Pj0gNzsNCiAgICB9DQogICAgaWYgKCh0ICYgMHhmKSA9PT0gMCkgew0KICAgICAgciArPSA0Ow0KICAgICAgdCA+Pj49IDQ7DQogICAgfQ0KICAgIGlmICgodCAmIDB4MykgPT09IDApIHsNCiAgICAgIHIgKz0gMjsNCiAgICAgIHQgPj4+PSAyOw0KICAgIH0NCiAgICBpZiAoKHQgJiAweDEpID09PSAwKSB7DQogICAgICByKys7DQogICAgfQ0KICAgIHJldHVybiByOw0KICB9Ow0KDQogIC8vIFJldHVybiBudW1iZXIgb2YgdXNlZCBiaXRzIGluIGEgQk4NCiAgQk4ucHJvdG90eXBlLmJpdExlbmd0aCA9IGZ1bmN0aW9uIGJpdExlbmd0aCAoKSB7DQogICAgdmFyIHcgPSB0aGlzLndvcmRzW3RoaXMubGVuZ3RoIC0gMV07DQogICAgdmFyIGhpID0gdGhpcy5fY291bnRCaXRzKHcpOw0KICAgIHJldHVybiAodGhpcy5sZW5ndGggLSAxKSAqIDI2ICsgaGk7DQogIH07DQoNCiAgZnVuY3Rpb24gdG9CaXRBcnJheSAobnVtKSB7DQogICAgdmFyIHcgPSBuZXcgQXJyYXkobnVtLmJpdExlbmd0aCgpKTsNCg0KICAgIGZvciAodmFyIGJpdCA9IDA7IGJpdCA8IHcubGVuZ3RoOyBiaXQrKykgew0KICAgICAgdmFyIG9mZiA9IChiaXQgLyAyNikgfCAwOw0KICAgICAgdmFyIHdiaXQgPSBiaXQgJSAyNjsNCg0KICAgICAgd1tiaXRdID0gKG51bS53b3Jkc1tvZmZdICYgKDEgPDwgd2JpdCkpID4+PiB3Yml0Ow0KICAgIH0NCg0KICAgIHJldHVybiB3Ow0KICB9DQoNCiAgLy8gTnVtYmVyIG9mIHRyYWlsaW5nIHplcm8gYml0cw0KICBCTi5wcm90b3R5cGUuemVyb0JpdHMgPSBmdW5jdGlvbiB6ZXJvQml0cyAoKSB7DQogICAgaWYgKHRoaXMuaXNaZXJvKCkpIHJldHVybiAwOw0KDQogICAgdmFyIHIgPSAwOw0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykgew0KICAgICAgdmFyIGIgPSB0aGlzLl96ZXJvQml0cyh0aGlzLndvcmRzW2ldKTsNCiAgICAgIHIgKz0gYjsNCiAgICAgIGlmIChiICE9PSAyNikgYnJlYWs7DQogICAgfQ0KICAgIHJldHVybiByOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5ieXRlTGVuZ3RoID0gZnVuY3Rpb24gYnl0ZUxlbmd0aCAoKSB7DQogICAgcmV0dXJuIE1hdGguY2VpbCh0aGlzLmJpdExlbmd0aCgpIC8gOCk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLnRvVHdvcyA9IGZ1bmN0aW9uIHRvVHdvcyAod2lkdGgpIHsNCiAgICBpZiAodGhpcy5uZWdhdGl2ZSAhPT0gMCkgew0KICAgICAgcmV0dXJuIHRoaXMuYWJzKCkuaW5vdG4od2lkdGgpLmlhZGRuKDEpOw0KICAgIH0NCiAgICByZXR1cm4gdGhpcy5jbG9uZSgpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5mcm9tVHdvcyA9IGZ1bmN0aW9uIGZyb21Ud29zICh3aWR0aCkgew0KICAgIGlmICh0aGlzLnRlc3RuKHdpZHRoIC0gMSkpIHsNCiAgICAgIHJldHVybiB0aGlzLm5vdG4od2lkdGgpLmlhZGRuKDEpLmluZWcoKTsNCiAgICB9DQogICAgcmV0dXJuIHRoaXMuY2xvbmUoKTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUuaXNOZWcgPSBmdW5jdGlvbiBpc05lZyAoKSB7DQogICAgcmV0dXJuIHRoaXMubmVnYXRpdmUgIT09IDA7DQogIH07DQoNCiAgLy8gUmV0dXJuIG5lZ2F0aXZlIGNsb25lIG9mIGB0aGlzYA0KICBCTi5wcm90b3R5cGUubmVnID0gZnVuY3Rpb24gbmVnICgpIHsNCiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmluZWcoKTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUuaW5lZyA9IGZ1bmN0aW9uIGluZWcgKCkgew0KICAgIGlmICghdGhpcy5pc1plcm8oKSkgew0KICAgICAgdGhpcy5uZWdhdGl2ZSBePSAxOw0KICAgIH0NCg0KICAgIHJldHVybiB0aGlzOw0KICB9Ow0KDQogIC8vIE9yIGBudW1gIHdpdGggYHRoaXNgIGluLXBsYWNlDQogIEJOLnByb3RvdHlwZS5pdW9yID0gZnVuY3Rpb24gaXVvciAobnVtKSB7DQogICAgd2hpbGUgKHRoaXMubGVuZ3RoIDwgbnVtLmxlbmd0aCkgew0KICAgICAgdGhpcy53b3Jkc1t0aGlzLmxlbmd0aCsrXSA9IDA7DQogICAgfQ0KDQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW0ubGVuZ3RoOyBpKyspIHsNCiAgICAgIHRoaXMud29yZHNbaV0gPSB0aGlzLndvcmRzW2ldIHwgbnVtLndvcmRzW2ldOw0KICAgIH0NCg0KICAgIHJldHVybiB0aGlzLnN0cmlwKCk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLmlvciA9IGZ1bmN0aW9uIGlvciAobnVtKSB7DQogICAgYXNzZXJ0KCh0aGlzLm5lZ2F0aXZlIHwgbnVtLm5lZ2F0aXZlKSA9PT0gMCk7DQogICAgcmV0dXJuIHRoaXMuaXVvcihudW0pOw0KICB9Ow0KDQogIC8vIE9yIGBudW1gIHdpdGggYHRoaXNgDQogIEJOLnByb3RvdHlwZS5vciA9IGZ1bmN0aW9uIG9yIChudW0pIHsNCiAgICBpZiAodGhpcy5sZW5ndGggPiBudW0ubGVuZ3RoKSByZXR1cm4gdGhpcy5jbG9uZSgpLmlvcihudW0pOw0KICAgIHJldHVybiBudW0uY2xvbmUoKS5pb3IodGhpcyk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLnVvciA9IGZ1bmN0aW9uIHVvciAobnVtKSB7DQogICAgaWYgKHRoaXMubGVuZ3RoID4gbnVtLmxlbmd0aCkgcmV0dXJuIHRoaXMuY2xvbmUoKS5pdW9yKG51bSk7DQogICAgcmV0dXJuIG51bS5jbG9uZSgpLml1b3IodGhpcyk7DQogIH07DQoNCiAgLy8gQW5kIGBudW1gIHdpdGggYHRoaXNgIGluLXBsYWNlDQogIEJOLnByb3RvdHlwZS5pdWFuZCA9IGZ1bmN0aW9uIGl1YW5kIChudW0pIHsNCiAgICAvLyBiID0gbWluLWxlbmd0aChudW0sIHRoaXMpDQogICAgdmFyIGI7DQogICAgaWYgKHRoaXMubGVuZ3RoID4gbnVtLmxlbmd0aCkgew0KICAgICAgYiA9IG51bTsNCiAgICB9IGVsc2Ugew0KICAgICAgYiA9IHRoaXM7DQogICAgfQ0KDQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBiLmxlbmd0aDsgaSsrKSB7DQogICAgICB0aGlzLndvcmRzW2ldID0gdGhpcy53b3Jkc1tpXSAmIG51bS53b3Jkc1tpXTsNCiAgICB9DQoNCiAgICB0aGlzLmxlbmd0aCA9IGIubGVuZ3RoOw0KDQogICAgcmV0dXJuIHRoaXMuc3RyaXAoKTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUuaWFuZCA9IGZ1bmN0aW9uIGlhbmQgKG51bSkgew0KICAgIGFzc2VydCgodGhpcy5uZWdhdGl2ZSB8IG51bS5uZWdhdGl2ZSkgPT09IDApOw0KICAgIHJldHVybiB0aGlzLml1YW5kKG51bSk7DQogIH07DQoNCiAgLy8gQW5kIGBudW1gIHdpdGggYHRoaXNgDQogIEJOLnByb3RvdHlwZS5hbmQgPSBmdW5jdGlvbiBhbmQgKG51bSkgew0KICAgIGlmICh0aGlzLmxlbmd0aCA+IG51bS5sZW5ndGgpIHJldHVybiB0aGlzLmNsb25lKCkuaWFuZChudW0pOw0KICAgIHJldHVybiBudW0uY2xvbmUoKS5pYW5kKHRoaXMpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS51YW5kID0gZnVuY3Rpb24gdWFuZCAobnVtKSB7DQogICAgaWYgKHRoaXMubGVuZ3RoID4gbnVtLmxlbmd0aCkgcmV0dXJuIHRoaXMuY2xvbmUoKS5pdWFuZChudW0pOw0KICAgIHJldHVybiBudW0uY2xvbmUoKS5pdWFuZCh0aGlzKTsNCiAgfTsNCg0KICAvLyBYb3IgYG51bWAgd2l0aCBgdGhpc2AgaW4tcGxhY2UNCiAgQk4ucHJvdG90eXBlLml1eG9yID0gZnVuY3Rpb24gaXV4b3IgKG51bSkgew0KICAgIC8vIGEubGVuZ3RoID4gYi5sZW5ndGgNCiAgICB2YXIgYTsNCiAgICB2YXIgYjsNCiAgICBpZiAodGhpcy5sZW5ndGggPiBudW0ubGVuZ3RoKSB7DQogICAgICBhID0gdGhpczsNCiAgICAgIGIgPSBudW07DQogICAgfSBlbHNlIHsNCiAgICAgIGEgPSBudW07DQogICAgICBiID0gdGhpczsNCiAgICB9DQoNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGIubGVuZ3RoOyBpKyspIHsNCiAgICAgIHRoaXMud29yZHNbaV0gPSBhLndvcmRzW2ldIF4gYi53b3Jkc1tpXTsNCiAgICB9DQoNCiAgICBpZiAodGhpcyAhPT0gYSkgew0KICAgICAgZm9yICg7IGkgPCBhLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIHRoaXMud29yZHNbaV0gPSBhLndvcmRzW2ldOw0KICAgICAgfQ0KICAgIH0NCg0KICAgIHRoaXMubGVuZ3RoID0gYS5sZW5ndGg7DQoNCiAgICByZXR1cm4gdGhpcy5zdHJpcCgpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5peG9yID0gZnVuY3Rpb24gaXhvciAobnVtKSB7DQogICAgYXNzZXJ0KCh0aGlzLm5lZ2F0aXZlIHwgbnVtLm5lZ2F0aXZlKSA9PT0gMCk7DQogICAgcmV0dXJuIHRoaXMuaXV4b3IobnVtKTsNCiAgfTsNCg0KICAvLyBYb3IgYG51bWAgd2l0aCBgdGhpc2ANCiAgQk4ucHJvdG90eXBlLnhvciA9IGZ1bmN0aW9uIHhvciAobnVtKSB7DQogICAgaWYgKHRoaXMubGVuZ3RoID4gbnVtLmxlbmd0aCkgcmV0dXJuIHRoaXMuY2xvbmUoKS5peG9yKG51bSk7DQogICAgcmV0dXJuIG51bS5jbG9uZSgpLml4b3IodGhpcyk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLnV4b3IgPSBmdW5jdGlvbiB1eG9yIChudW0pIHsNCiAgICBpZiAodGhpcy5sZW5ndGggPiBudW0ubGVuZ3RoKSByZXR1cm4gdGhpcy5jbG9uZSgpLml1eG9yKG51bSk7DQogICAgcmV0dXJuIG51bS5jbG9uZSgpLml1eG9yKHRoaXMpOw0KICB9Ow0KDQogIC8vIE5vdCBgYHRoaXNgYCB3aXRoIGBgd2lkdGhgYCBiaXR3aWR0aA0KICBCTi5wcm90b3R5cGUuaW5vdG4gPSBmdW5jdGlvbiBpbm90biAod2lkdGgpIHsNCiAgICBhc3NlcnQodHlwZW9mIHdpZHRoID09PSAnbnVtYmVyJyAmJiB3aWR0aCA+PSAwKTsNCg0KICAgIHZhciBieXRlc05lZWRlZCA9IE1hdGguY2VpbCh3aWR0aCAvIDI2KSB8IDA7DQogICAgdmFyIGJpdHNMZWZ0ID0gd2lkdGggJSAyNjsNCg0KICAgIC8vIEV4dGVuZCB0aGUgYnVmZmVyIHdpdGggbGVhZGluZyB6ZXJvZXMNCiAgICB0aGlzLl9leHBhbmQoYnl0ZXNOZWVkZWQpOw0KDQogICAgaWYgKGJpdHNMZWZ0ID4gMCkgew0KICAgICAgYnl0ZXNOZWVkZWQtLTsNCiAgICB9DQoNCiAgICAvLyBIYW5kbGUgY29tcGxldGUgd29yZHMNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJ5dGVzTmVlZGVkOyBpKyspIHsNCiAgICAgIHRoaXMud29yZHNbaV0gPSB+dGhpcy53b3Jkc1tpXSAmIDB4M2ZmZmZmZjsNCiAgICB9DQoNCiAgICAvLyBIYW5kbGUgdGhlIHJlc2lkdWUNCiAgICBpZiAoYml0c0xlZnQgPiAwKSB7DQogICAgICB0aGlzLndvcmRzW2ldID0gfnRoaXMud29yZHNbaV0gJiAoMHgzZmZmZmZmID4+ICgyNiAtIGJpdHNMZWZ0KSk7DQogICAgfQ0KDQogICAgLy8gQW5kIHJlbW92ZSBsZWFkaW5nIHplcm9lcw0KICAgIHJldHVybiB0aGlzLnN0cmlwKCk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLm5vdG4gPSBmdW5jdGlvbiBub3RuICh3aWR0aCkgew0KICAgIHJldHVybiB0aGlzLmNsb25lKCkuaW5vdG4od2lkdGgpOw0KICB9Ow0KDQogIC8vIFNldCBgYml0YCBvZiBgdGhpc2ANCiAgQk4ucHJvdG90eXBlLnNldG4gPSBmdW5jdGlvbiBzZXRuIChiaXQsIHZhbCkgew0KICAgIGFzc2VydCh0eXBlb2YgYml0ID09PSAnbnVtYmVyJyAmJiBiaXQgPj0gMCk7DQoNCiAgICB2YXIgb2ZmID0gKGJpdCAvIDI2KSB8IDA7DQogICAgdmFyIHdiaXQgPSBiaXQgJSAyNjsNCg0KICAgIHRoaXMuX2V4cGFuZChvZmYgKyAxKTsNCg0KICAgIGlmICh2YWwpIHsNCiAgICAgIHRoaXMud29yZHNbb2ZmXSA9IHRoaXMud29yZHNbb2ZmXSB8ICgxIDw8IHdiaXQpOw0KICAgIH0gZWxzZSB7DQogICAgICB0aGlzLndvcmRzW29mZl0gPSB0aGlzLndvcmRzW29mZl0gJiB+KDEgPDwgd2JpdCk7DQogICAgfQ0KDQogICAgcmV0dXJuIHRoaXMuc3RyaXAoKTsNCiAgfTsNCg0KICAvLyBBZGQgYG51bWAgdG8gYHRoaXNgIGluLXBsYWNlDQogIEJOLnByb3RvdHlwZS5pYWRkID0gZnVuY3Rpb24gaWFkZCAobnVtKSB7DQogICAgdmFyIHI7DQoNCiAgICAvLyBuZWdhdGl2ZSArIHBvc2l0aXZlDQogICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDAgJiYgbnVtLm5lZ2F0aXZlID09PSAwKSB7DQogICAgICB0aGlzLm5lZ2F0aXZlID0gMDsNCiAgICAgIHIgPSB0aGlzLmlzdWIobnVtKTsNCiAgICAgIHRoaXMubmVnYXRpdmUgXj0gMTsNCiAgICAgIHJldHVybiB0aGlzLl9ub3JtU2lnbigpOw0KDQogICAgLy8gcG9zaXRpdmUgKyBuZWdhdGl2ZQ0KICAgIH0gZWxzZSBpZiAodGhpcy5uZWdhdGl2ZSA9PT0gMCAmJiBudW0ubmVnYXRpdmUgIT09IDApIHsNCiAgICAgIG51bS5uZWdhdGl2ZSA9IDA7DQogICAgICByID0gdGhpcy5pc3ViKG51bSk7DQogICAgICBudW0ubmVnYXRpdmUgPSAxOw0KICAgICAgcmV0dXJuIHIuX25vcm1TaWduKCk7DQogICAgfQ0KDQogICAgLy8gYS5sZW5ndGggPiBiLmxlbmd0aA0KICAgIHZhciBhLCBiOw0KICAgIGlmICh0aGlzLmxlbmd0aCA+IG51bS5sZW5ndGgpIHsNCiAgICAgIGEgPSB0aGlzOw0KICAgICAgYiA9IG51bTsNCiAgICB9IGVsc2Ugew0KICAgICAgYSA9IG51bTsNCiAgICAgIGIgPSB0aGlzOw0KICAgIH0NCg0KICAgIHZhciBjYXJyeSA9IDA7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBiLmxlbmd0aDsgaSsrKSB7DQogICAgICByID0gKGEud29yZHNbaV0gfCAwKSArIChiLndvcmRzW2ldIHwgMCkgKyBjYXJyeTsNCiAgICAgIHRoaXMud29yZHNbaV0gPSByICYgMHgzZmZmZmZmOw0KICAgICAgY2FycnkgPSByID4+PiAyNjsNCiAgICB9DQogICAgZm9yICg7IGNhcnJ5ICE9PSAwICYmIGkgPCBhLmxlbmd0aDsgaSsrKSB7DQogICAgICByID0gKGEud29yZHNbaV0gfCAwKSArIGNhcnJ5Ow0KICAgICAgdGhpcy53b3Jkc1tpXSA9IHIgJiAweDNmZmZmZmY7DQogICAgICBjYXJyeSA9IHIgPj4+IDI2Ow0KICAgIH0NCg0KICAgIHRoaXMubGVuZ3RoID0gYS5sZW5ndGg7DQogICAgaWYgKGNhcnJ5ICE9PSAwKSB7DQogICAgICB0aGlzLndvcmRzW3RoaXMubGVuZ3RoXSA9IGNhcnJ5Ow0KICAgICAgdGhpcy5sZW5ndGgrKzsNCiAgICAvLyBDb3B5IHRoZSByZXN0IG9mIHRoZSB3b3Jkcw0KICAgIH0gZWxzZSBpZiAoYSAhPT0gdGhpcykgew0KICAgICAgZm9yICg7IGkgPCBhLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIHRoaXMud29yZHNbaV0gPSBhLndvcmRzW2ldOw0KICAgICAgfQ0KICAgIH0NCg0KICAgIHJldHVybiB0aGlzOw0KICB9Ow0KDQogIC8vIEFkZCBgbnVtYCB0byBgdGhpc2ANCiAgQk4ucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIGFkZCAobnVtKSB7DQogICAgdmFyIHJlczsNCiAgICBpZiAobnVtLm5lZ2F0aXZlICE9PSAwICYmIHRoaXMubmVnYXRpdmUgPT09IDApIHsNCiAgICAgIG51bS5uZWdhdGl2ZSA9IDA7DQogICAgICByZXMgPSB0aGlzLnN1YihudW0pOw0KICAgICAgbnVtLm5lZ2F0aXZlIF49IDE7DQogICAgICByZXR1cm4gcmVzOw0KICAgIH0gZWxzZSBpZiAobnVtLm5lZ2F0aXZlID09PSAwICYmIHRoaXMubmVnYXRpdmUgIT09IDApIHsNCiAgICAgIHRoaXMubmVnYXRpdmUgPSAwOw0KICAgICAgcmVzID0gbnVtLnN1Yih0aGlzKTsNCiAgICAgIHRoaXMubmVnYXRpdmUgPSAxOw0KICAgICAgcmV0dXJuIHJlczsNCiAgICB9DQoNCiAgICBpZiAodGhpcy5sZW5ndGggPiBudW0ubGVuZ3RoKSByZXR1cm4gdGhpcy5jbG9uZSgpLmlhZGQobnVtKTsNCg0KICAgIHJldHVybiBudW0uY2xvbmUoKS5pYWRkKHRoaXMpOw0KICB9Ow0KDQogIC8vIFN1YnRyYWN0IGBudW1gIGZyb20gYHRoaXNgIGluLXBsYWNlDQogIEJOLnByb3RvdHlwZS5pc3ViID0gZnVuY3Rpb24gaXN1YiAobnVtKSB7DQogICAgLy8gdGhpcyAtICgtbnVtKSA9IHRoaXMgKyBudW0NCiAgICBpZiAobnVtLm5lZ2F0aXZlICE9PSAwKSB7DQogICAgICBudW0ubmVnYXRpdmUgPSAwOw0KICAgICAgdmFyIHIgPSB0aGlzLmlhZGQobnVtKTsNCiAgICAgIG51bS5uZWdhdGl2ZSA9IDE7DQogICAgICByZXR1cm4gci5fbm9ybVNpZ24oKTsNCg0KICAgIC8vIC10aGlzIC0gbnVtID0gLSh0aGlzICsgbnVtKQ0KICAgIH0gZWxzZSBpZiAodGhpcy5uZWdhdGl2ZSAhPT0gMCkgew0KICAgICAgdGhpcy5uZWdhdGl2ZSA9IDA7DQogICAgICB0aGlzLmlhZGQobnVtKTsNCiAgICAgIHRoaXMubmVnYXRpdmUgPSAxOw0KICAgICAgcmV0dXJuIHRoaXMuX25vcm1TaWduKCk7DQogICAgfQ0KDQogICAgLy8gQXQgdGhpcyBwb2ludCBib3RoIG51bWJlcnMgYXJlIHBvc2l0aXZlDQogICAgdmFyIGNtcCA9IHRoaXMuY21wKG51bSk7DQoNCiAgICAvLyBPcHRpbWl6YXRpb24gLSB6ZXJvaWZ5DQogICAgaWYgKGNtcCA9PT0gMCkgew0KICAgICAgdGhpcy5uZWdhdGl2ZSA9IDA7DQogICAgICB0aGlzLmxlbmd0aCA9IDE7DQogICAgICB0aGlzLndvcmRzWzBdID0gMDsNCiAgICAgIHJldHVybiB0aGlzOw0KICAgIH0NCg0KICAgIC8vIGEgPiBiDQogICAgdmFyIGEsIGI7DQogICAgaWYgKGNtcCA+IDApIHsNCiAgICAgIGEgPSB0aGlzOw0KICAgICAgYiA9IG51bTsNCiAgICB9IGVsc2Ugew0KICAgICAgYSA9IG51bTsNCiAgICAgIGIgPSB0aGlzOw0KICAgIH0NCg0KICAgIHZhciBjYXJyeSA9IDA7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBiLmxlbmd0aDsgaSsrKSB7DQogICAgICByID0gKGEud29yZHNbaV0gfCAwKSAtIChiLndvcmRzW2ldIHwgMCkgKyBjYXJyeTsNCiAgICAgIGNhcnJ5ID0gciA+PiAyNjsNCiAgICAgIHRoaXMud29yZHNbaV0gPSByICYgMHgzZmZmZmZmOw0KICAgIH0NCiAgICBmb3IgKDsgY2FycnkgIT09IDAgJiYgaSA8IGEubGVuZ3RoOyBpKyspIHsNCiAgICAgIHIgPSAoYS53b3Jkc1tpXSB8IDApICsgY2Fycnk7DQogICAgICBjYXJyeSA9IHIgPj4gMjY7DQogICAgICB0aGlzLndvcmRzW2ldID0gciAmIDB4M2ZmZmZmZjsNCiAgICB9DQoNCiAgICAvLyBDb3B5IHJlc3Qgb2YgdGhlIHdvcmRzDQogICAgaWYgKGNhcnJ5ID09PSAwICYmIGkgPCBhLmxlbmd0aCAmJiBhICE9PSB0aGlzKSB7DQogICAgICBmb3IgKDsgaSA8IGEubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgdGhpcy53b3Jkc1tpXSA9IGEud29yZHNbaV07DQogICAgICB9DQogICAgfQ0KDQogICAgdGhpcy5sZW5ndGggPSBNYXRoLm1heCh0aGlzLmxlbmd0aCwgaSk7DQoNCiAgICBpZiAoYSAhPT0gdGhpcykgew0KICAgICAgdGhpcy5uZWdhdGl2ZSA9IDE7DQogICAgfQ0KDQogICAgcmV0dXJuIHRoaXMuc3RyaXAoKTsNCiAgfTsNCg0KICAvLyBTdWJ0cmFjdCBgbnVtYCBmcm9tIGB0aGlzYA0KICBCTi5wcm90b3R5cGUuc3ViID0gZnVuY3Rpb24gc3ViIChudW0pIHsNCiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmlzdWIobnVtKTsNCiAgfTsNCg0KICBmdW5jdGlvbiBzbWFsbE11bFRvIChzZWxmLCBudW0sIG91dCkgew0KICAgIG91dC5uZWdhdGl2ZSA9IG51bS5uZWdhdGl2ZSBeIHNlbGYubmVnYXRpdmU7DQogICAgdmFyIGxlbiA9IChzZWxmLmxlbmd0aCArIG51bS5sZW5ndGgpIHwgMDsNCiAgICBvdXQubGVuZ3RoID0gbGVuOw0KICAgIGxlbiA9IChsZW4gLSAxKSB8IDA7DQoNCiAgICAvLyBQZWVsIG9uZSBpdGVyYXRpb24gKGNvbXBpbGVyIGNhbid0IGRvIGl0LCBiZWNhdXNlIG9mIGNvZGUgY29tcGxleGl0eSkNCiAgICB2YXIgYSA9IHNlbGYud29yZHNbMF0gfCAwOw0KICAgIHZhciBiID0gbnVtLndvcmRzWzBdIHwgMDsNCiAgICB2YXIgciA9IGEgKiBiOw0KDQogICAgdmFyIGxvID0gciAmIDB4M2ZmZmZmZjsNCiAgICB2YXIgY2FycnkgPSAociAvIDB4NDAwMDAwMCkgfCAwOw0KICAgIG91dC53b3Jkc1swXSA9IGxvOw0KDQogICAgZm9yICh2YXIgayA9IDE7IGsgPCBsZW47IGsrKykgew0KICAgICAgLy8gU3VtIGFsbCB3b3JkcyB3aXRoIHRoZSBzYW1lIGBpICsgaiA9IGtgIGFuZCBhY2N1bXVsYXRlIGBuY2FycnlgLA0KICAgICAgLy8gbm90ZSB0aGF0IG5jYXJyeSBjb3VsZCBiZSA+PSAweDNmZmZmZmYNCiAgICAgIHZhciBuY2FycnkgPSBjYXJyeSA+Pj4gMjY7DQogICAgICB2YXIgcndvcmQgPSBjYXJyeSAmIDB4M2ZmZmZmZjsNCiAgICAgIHZhciBtYXhKID0gTWF0aC5taW4oaywgbnVtLmxlbmd0aCAtIDEpOw0KICAgICAgZm9yICh2YXIgaiA9IE1hdGgubWF4KDAsIGsgLSBzZWxmLmxlbmd0aCArIDEpOyBqIDw9IG1heEo7IGorKykgew0KICAgICAgICB2YXIgaSA9IChrIC0gaikgfCAwOw0KICAgICAgICBhID0gc2VsZi53b3Jkc1tpXSB8IDA7DQogICAgICAgIGIgPSBudW0ud29yZHNbal0gfCAwOw0KICAgICAgICByID0gYSAqIGIgKyByd29yZDsNCiAgICAgICAgbmNhcnJ5ICs9IChyIC8gMHg0MDAwMDAwKSB8IDA7DQogICAgICAgIHJ3b3JkID0gciAmIDB4M2ZmZmZmZjsNCiAgICAgIH0NCiAgICAgIG91dC53b3Jkc1trXSA9IHJ3b3JkIHwgMDsNCiAgICAgIGNhcnJ5ID0gbmNhcnJ5IHwgMDsNCiAgICB9DQogICAgaWYgKGNhcnJ5ICE9PSAwKSB7DQogICAgICBvdXQud29yZHNba10gPSBjYXJyeSB8IDA7DQogICAgfSBlbHNlIHsNCiAgICAgIG91dC5sZW5ndGgtLTsNCiAgICB9DQoNCiAgICByZXR1cm4gb3V0LnN0cmlwKCk7DQogIH0NCg0KICAvLyBUT0RPKGluZHV0bnkpOiBpdCBtYXkgYmUgcmVhc29uYWJsZSB0byBvbWl0IGl0IGZvciB1c2VycyB3aG8gZG9uJ3QgbmVlZA0KICAvLyB0byB3b3JrIHdpdGggMjU2LWJpdCBudW1iZXJzLCBvdGhlcndpc2UgaXQgZ2l2ZXMgMjAlIGltcHJvdmVtZW50IGZvciAyNTYtYml0DQogIC8vIG11bHRpcGxpY2F0aW9uIChsaWtlIGVsbGlwdGljIHNlY3AyNTZrMSkuDQogIHZhciBjb21iMTBNdWxUbyA9IGZ1bmN0aW9uIGNvbWIxME11bFRvIChzZWxmLCBudW0sIG91dCkgew0KICAgIHZhciBhID0gc2VsZi53b3JkczsNCiAgICB2YXIgYiA9IG51bS53b3JkczsNCiAgICB2YXIgbyA9IG91dC53b3JkczsNCiAgICB2YXIgYyA9IDA7DQogICAgdmFyIGxvOw0KICAgIHZhciBtaWQ7DQogICAgdmFyIGhpOw0KICAgIHZhciBhMCA9IGFbMF0gfCAwOw0KICAgIHZhciBhbDAgPSBhMCAmIDB4MWZmZjsNCiAgICB2YXIgYWgwID0gYTAgPj4+IDEzOw0KICAgIHZhciBhMSA9IGFbMV0gfCAwOw0KICAgIHZhciBhbDEgPSBhMSAmIDB4MWZmZjsNCiAgICB2YXIgYWgxID0gYTEgPj4+IDEzOw0KICAgIHZhciBhMiA9IGFbMl0gfCAwOw0KICAgIHZhciBhbDIgPSBhMiAmIDB4MWZmZjsNCiAgICB2YXIgYWgyID0gYTIgPj4+IDEzOw0KICAgIHZhciBhMyA9IGFbM10gfCAwOw0KICAgIHZhciBhbDMgPSBhMyAmIDB4MWZmZjsNCiAgICB2YXIgYWgzID0gYTMgPj4+IDEzOw0KICAgIHZhciBhNCA9IGFbNF0gfCAwOw0KICAgIHZhciBhbDQgPSBhNCAmIDB4MWZmZjsNCiAgICB2YXIgYWg0ID0gYTQgPj4+IDEzOw0KICAgIHZhciBhNSA9IGFbNV0gfCAwOw0KICAgIHZhciBhbDUgPSBhNSAmIDB4MWZmZjsNCiAgICB2YXIgYWg1ID0gYTUgPj4+IDEzOw0KICAgIHZhciBhNiA9IGFbNl0gfCAwOw0KICAgIHZhciBhbDYgPSBhNiAmIDB4MWZmZjsNCiAgICB2YXIgYWg2ID0gYTYgPj4+IDEzOw0KICAgIHZhciBhNyA9IGFbN10gfCAwOw0KICAgIHZhciBhbDcgPSBhNyAmIDB4MWZmZjsNCiAgICB2YXIgYWg3ID0gYTcgPj4+IDEzOw0KICAgIHZhciBhOCA9IGFbOF0gfCAwOw0KICAgIHZhciBhbDggPSBhOCAmIDB4MWZmZjsNCiAgICB2YXIgYWg4ID0gYTggPj4+IDEzOw0KICAgIHZhciBhOSA9IGFbOV0gfCAwOw0KICAgIHZhciBhbDkgPSBhOSAmIDB4MWZmZjsNCiAgICB2YXIgYWg5ID0gYTkgPj4+IDEzOw0KICAgIHZhciBiMCA9IGJbMF0gfCAwOw0KICAgIHZhciBibDAgPSBiMCAmIDB4MWZmZjsNCiAgICB2YXIgYmgwID0gYjAgPj4+IDEzOw0KICAgIHZhciBiMSA9IGJbMV0gfCAwOw0KICAgIHZhciBibDEgPSBiMSAmIDB4MWZmZjsNCiAgICB2YXIgYmgxID0gYjEgPj4+IDEzOw0KICAgIHZhciBiMiA9IGJbMl0gfCAwOw0KICAgIHZhciBibDIgPSBiMiAmIDB4MWZmZjsNCiAgICB2YXIgYmgyID0gYjIgPj4+IDEzOw0KICAgIHZhciBiMyA9IGJbM10gfCAwOw0KICAgIHZhciBibDMgPSBiMyAmIDB4MWZmZjsNCiAgICB2YXIgYmgzID0gYjMgPj4+IDEzOw0KICAgIHZhciBiNCA9IGJbNF0gfCAwOw0KICAgIHZhciBibDQgPSBiNCAmIDB4MWZmZjsNCiAgICB2YXIgYmg0ID0gYjQgPj4+IDEzOw0KICAgIHZhciBiNSA9IGJbNV0gfCAwOw0KICAgIHZhciBibDUgPSBiNSAmIDB4MWZmZjsNCiAgICB2YXIgYmg1ID0gYjUgPj4+IDEzOw0KICAgIHZhciBiNiA9IGJbNl0gfCAwOw0KICAgIHZhciBibDYgPSBiNiAmIDB4MWZmZjsNCiAgICB2YXIgYmg2ID0gYjYgPj4+IDEzOw0KICAgIHZhciBiNyA9IGJbN10gfCAwOw0KICAgIHZhciBibDcgPSBiNyAmIDB4MWZmZjsNCiAgICB2YXIgYmg3ID0gYjcgPj4+IDEzOw0KICAgIHZhciBiOCA9IGJbOF0gfCAwOw0KICAgIHZhciBibDggPSBiOCAmIDB4MWZmZjsNCiAgICB2YXIgYmg4ID0gYjggPj4+IDEzOw0KICAgIHZhciBiOSA9IGJbOV0gfCAwOw0KICAgIHZhciBibDkgPSBiOSAmIDB4MWZmZjsNCiAgICB2YXIgYmg5ID0gYjkgPj4+IDEzOw0KDQogICAgb3V0Lm5lZ2F0aXZlID0gc2VsZi5uZWdhdGl2ZSBeIG51bS5uZWdhdGl2ZTsNCiAgICBvdXQubGVuZ3RoID0gMTk7DQogICAgLyogayA9IDAgKi8NCiAgICBsbyA9IE1hdGguaW11bChhbDAsIGJsMCk7DQogICAgbWlkID0gTWF0aC5pbXVsKGFsMCwgYmgwKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMCwgYmwwKTsNCiAgICBoaSA9IE1hdGguaW11bChhaDAsIGJoMCk7DQogICAgdmFyIHcwID0gYyArIGxvICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKTsNCiAgICBjID0gaGkgKyAobWlkID4+PiAxMykgKyAodzAgPj4+IDI2KTsNCiAgICB3MCAmPSAweDNmZmZmZmY7DQogICAgLyogayA9IDEgKi8NCiAgICBsbyA9IE1hdGguaW11bChhbDEsIGJsMCk7DQogICAgbWlkID0gTWF0aC5pbXVsKGFsMSwgYmgwKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMSwgYmwwKTsNCiAgICBoaSA9IE1hdGguaW11bChhaDEsIGJoMCk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsMCwgYmwxKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsMCwgYmgxKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMCwgYmwxKTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWgwLCBiaDEpOw0KICAgIHZhciB3MSA9IGMgKyBsbyArICgobWlkICYgMHgxZmZmKSA8PCAxMyk7DQogICAgYyA9IGhpICsgKG1pZCA+Pj4gMTMpICsgKHcxID4+PiAyNik7DQogICAgdzEgJj0gMHgzZmZmZmZmOw0KICAgIC8qIGsgPSAyICovDQogICAgbG8gPSBNYXRoLmltdWwoYWwyLCBibDApOw0KICAgIG1pZCA9IE1hdGguaW11bChhbDIsIGJoMCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDIsIGJsMCk7DQogICAgaGkgPSBNYXRoLmltdWwoYWgyLCBiaDApOw0KICAgIGxvICs9IE1hdGguaW11bChhbDEsIGJsMSk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDEsIGJoMSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDEsIGJsMSk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoMSwgYmgxKTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwwLCBibDIpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwwLCBiaDIpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgwLCBibDIpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDAsIGJoMik7DQogICAgdmFyIHcyID0gYyArIGxvICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKTsNCiAgICBjID0gaGkgKyAobWlkID4+PiAxMykgKyAodzIgPj4+IDI2KTsNCiAgICB3MiAmPSAweDNmZmZmZmY7DQogICAgLyogayA9IDMgKi8NCiAgICBsbyA9IE1hdGguaW11bChhbDMsIGJsMCk7DQogICAgbWlkID0gTWF0aC5pbXVsKGFsMywgYmgwKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMywgYmwwKTsNCiAgICBoaSA9IE1hdGguaW11bChhaDMsIGJoMCk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsMiwgYmwxKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsMiwgYmgxKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMiwgYmwxKTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWgyLCBiaDEpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDEsIGJsMik7DQogICAgbWlkICs9IE1hdGguaW11bChhbDEsIGJoMik7DQogICAgbWlkICs9IE1hdGguaW11bChhaDEsIGJsMik7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoMSwgYmgyKTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwwLCBibDMpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwwLCBiaDMpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgwLCBibDMpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDAsIGJoMyk7DQogICAgdmFyIHczID0gYyArIGxvICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKTsNCiAgICBjID0gaGkgKyAobWlkID4+PiAxMykgKyAodzMgPj4+IDI2KTsNCiAgICB3MyAmPSAweDNmZmZmZmY7DQogICAgLyogayA9IDQgKi8NCiAgICBsbyA9IE1hdGguaW11bChhbDQsIGJsMCk7DQogICAgbWlkID0gTWF0aC5pbXVsKGFsNCwgYmgwKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoNCwgYmwwKTsNCiAgICBoaSA9IE1hdGguaW11bChhaDQsIGJoMCk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsMywgYmwxKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsMywgYmgxKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMywgYmwxKTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWgzLCBiaDEpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDIsIGJsMik7DQogICAgbWlkICs9IE1hdGguaW11bChhbDIsIGJoMik7DQogICAgbWlkICs9IE1hdGguaW11bChhaDIsIGJsMik7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoMiwgYmgyKTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwxLCBibDMpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwxLCBiaDMpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgxLCBibDMpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDEsIGJoMyk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsMCwgYmw0KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsMCwgYmg0KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMCwgYmw0KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWgwLCBiaDQpOw0KICAgIHZhciB3NCA9IGMgKyBsbyArICgobWlkICYgMHgxZmZmKSA8PCAxMyk7DQogICAgYyA9IGhpICsgKG1pZCA+Pj4gMTMpICsgKHc0ID4+PiAyNik7DQogICAgdzQgJj0gMHgzZmZmZmZmOw0KICAgIC8qIGsgPSA1ICovDQogICAgbG8gPSBNYXRoLmltdWwoYWw1LCBibDApOw0KICAgIG1pZCA9IE1hdGguaW11bChhbDUsIGJoMCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDUsIGJsMCk7DQogICAgaGkgPSBNYXRoLmltdWwoYWg1LCBiaDApOw0KICAgIGxvICs9IE1hdGguaW11bChhbDQsIGJsMSk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDQsIGJoMSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDQsIGJsMSk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNCwgYmgxKTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwzLCBibDIpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwzLCBiaDIpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgzLCBibDIpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDMsIGJoMik7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsMiwgYmwzKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsMiwgYmgzKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMiwgYmwzKTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWgyLCBiaDMpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDEsIGJsNCk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDEsIGJoNCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDEsIGJsNCk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoMSwgYmg0KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwwLCBibDUpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwwLCBiaDUpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgwLCBibDUpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDAsIGJoNSk7DQogICAgdmFyIHc1ID0gYyArIGxvICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKTsNCiAgICBjID0gaGkgKyAobWlkID4+PiAxMykgKyAodzUgPj4+IDI2KTsNCiAgICB3NSAmPSAweDNmZmZmZmY7DQogICAgLyogayA9IDYgKi8NCiAgICBsbyA9IE1hdGguaW11bChhbDYsIGJsMCk7DQogICAgbWlkID0gTWF0aC5pbXVsKGFsNiwgYmgwKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoNiwgYmwwKTsNCiAgICBoaSA9IE1hdGguaW11bChhaDYsIGJoMCk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsNSwgYmwxKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsNSwgYmgxKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoNSwgYmwxKTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWg1LCBiaDEpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDQsIGJsMik7DQogICAgbWlkICs9IE1hdGguaW11bChhbDQsIGJoMik7DQogICAgbWlkICs9IE1hdGguaW11bChhaDQsIGJsMik7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNCwgYmgyKTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwzLCBibDMpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwzLCBiaDMpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgzLCBibDMpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDMsIGJoMyk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsMiwgYmw0KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsMiwgYmg0KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMiwgYmw0KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWgyLCBiaDQpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDEsIGJsNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDEsIGJoNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDEsIGJsNSk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoMSwgYmg1KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwwLCBibDYpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwwLCBiaDYpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgwLCBibDYpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDAsIGJoNik7DQogICAgdmFyIHc2ID0gYyArIGxvICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKTsNCiAgICBjID0gaGkgKyAobWlkID4+PiAxMykgKyAodzYgPj4+IDI2KTsNCiAgICB3NiAmPSAweDNmZmZmZmY7DQogICAgLyogayA9IDcgKi8NCiAgICBsbyA9IE1hdGguaW11bChhbDcsIGJsMCk7DQogICAgbWlkID0gTWF0aC5pbXVsKGFsNywgYmgwKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoNywgYmwwKTsNCiAgICBoaSA9IE1hdGguaW11bChhaDcsIGJoMCk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsNiwgYmwxKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsNiwgYmgxKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoNiwgYmwxKTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWg2LCBiaDEpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDUsIGJsMik7DQogICAgbWlkICs9IE1hdGguaW11bChhbDUsIGJoMik7DQogICAgbWlkICs9IE1hdGguaW11bChhaDUsIGJsMik7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNSwgYmgyKTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw0LCBibDMpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw0LCBiaDMpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg0LCBibDMpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDQsIGJoMyk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsMywgYmw0KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsMywgYmg0KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMywgYmw0KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWgzLCBiaDQpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDIsIGJsNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDIsIGJoNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDIsIGJsNSk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoMiwgYmg1KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwxLCBibDYpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwxLCBiaDYpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgxLCBibDYpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDEsIGJoNik7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsMCwgYmw3KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsMCwgYmg3KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMCwgYmw3KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWgwLCBiaDcpOw0KICAgIHZhciB3NyA9IGMgKyBsbyArICgobWlkICYgMHgxZmZmKSA8PCAxMyk7DQogICAgYyA9IGhpICsgKG1pZCA+Pj4gMTMpICsgKHc3ID4+PiAyNik7DQogICAgdzcgJj0gMHgzZmZmZmZmOw0KICAgIC8qIGsgPSA4ICovDQogICAgbG8gPSBNYXRoLmltdWwoYWw4LCBibDApOw0KICAgIG1pZCA9IE1hdGguaW11bChhbDgsIGJoMCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDgsIGJsMCk7DQogICAgaGkgPSBNYXRoLmltdWwoYWg4LCBiaDApOw0KICAgIGxvICs9IE1hdGguaW11bChhbDcsIGJsMSk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDcsIGJoMSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDcsIGJsMSk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNywgYmgxKTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw2LCBibDIpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw2LCBiaDIpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg2LCBibDIpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDYsIGJoMik7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsNSwgYmwzKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsNSwgYmgzKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoNSwgYmwzKTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWg1LCBiaDMpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDQsIGJsNCk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDQsIGJoNCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDQsIGJsNCk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNCwgYmg0KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwzLCBibDUpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwzLCBiaDUpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgzLCBibDUpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDMsIGJoNSk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsMiwgYmw2KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsMiwgYmg2KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMiwgYmw2KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWgyLCBiaDYpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDEsIGJsNyk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDEsIGJoNyk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDEsIGJsNyk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoMSwgYmg3KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwwLCBibDgpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwwLCBiaDgpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgwLCBibDgpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDAsIGJoOCk7DQogICAgdmFyIHc4ID0gYyArIGxvICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKTsNCiAgICBjID0gaGkgKyAobWlkID4+PiAxMykgKyAodzggPj4+IDI2KTsNCiAgICB3OCAmPSAweDNmZmZmZmY7DQogICAgLyogayA9IDkgKi8NCiAgICBsbyA9IE1hdGguaW11bChhbDksIGJsMCk7DQogICAgbWlkID0gTWF0aC5pbXVsKGFsOSwgYmgwKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoOSwgYmwwKTsNCiAgICBoaSA9IE1hdGguaW11bChhaDksIGJoMCk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsOCwgYmwxKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsOCwgYmgxKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoOCwgYmwxKTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWg4LCBiaDEpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDcsIGJsMik7DQogICAgbWlkICs9IE1hdGguaW11bChhbDcsIGJoMik7DQogICAgbWlkICs9IE1hdGguaW11bChhaDcsIGJsMik7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNywgYmgyKTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw2LCBibDMpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw2LCBiaDMpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg2LCBibDMpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDYsIGJoMyk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsNSwgYmw0KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsNSwgYmg0KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoNSwgYmw0KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWg1LCBiaDQpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDQsIGJsNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDQsIGJoNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDQsIGJsNSk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNCwgYmg1KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwzLCBibDYpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwzLCBiaDYpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgzLCBibDYpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDMsIGJoNik7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsMiwgYmw3KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsMiwgYmg3KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMiwgYmw3KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWgyLCBiaDcpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDEsIGJsOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDEsIGJoOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDEsIGJsOCk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoMSwgYmg4KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwwLCBibDkpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwwLCBiaDkpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgwLCBibDkpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDAsIGJoOSk7DQogICAgdmFyIHc5ID0gYyArIGxvICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKTsNCiAgICBjID0gaGkgKyAobWlkID4+PiAxMykgKyAodzkgPj4+IDI2KTsNCiAgICB3OSAmPSAweDNmZmZmZmY7DQogICAgLyogayA9IDEwICovDQogICAgbG8gPSBNYXRoLmltdWwoYWw5LCBibDEpOw0KICAgIG1pZCA9IE1hdGguaW11bChhbDksIGJoMSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDksIGJsMSk7DQogICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDEpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDgsIGJsMik7DQogICAgbWlkICs9IE1hdGguaW11bChhbDgsIGJoMik7DQogICAgbWlkICs9IE1hdGguaW11bChhaDgsIGJsMik7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoOCwgYmgyKTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw3LCBibDMpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw3LCBiaDMpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg3LCBibDMpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDcsIGJoMyk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsNiwgYmw0KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsNiwgYmg0KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoNiwgYmw0KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWg2LCBiaDQpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDUsIGJsNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDUsIGJoNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDUsIGJsNSk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNSwgYmg1KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw0LCBibDYpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw0LCBiaDYpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg0LCBibDYpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDQsIGJoNik7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsMywgYmw3KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsMywgYmg3KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMywgYmw3KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWgzLCBiaDcpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDIsIGJsOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDIsIGJoOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDIsIGJsOCk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoMiwgYmg4KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwxLCBibDkpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwxLCBiaDkpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgxLCBibDkpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDEsIGJoOSk7DQogICAgdmFyIHcxMCA9IGMgKyBsbyArICgobWlkICYgMHgxZmZmKSA8PCAxMyk7DQogICAgYyA9IGhpICsgKG1pZCA+Pj4gMTMpICsgKHcxMCA+Pj4gMjYpOw0KICAgIHcxMCAmPSAweDNmZmZmZmY7DQogICAgLyogayA9IDExICovDQogICAgbG8gPSBNYXRoLmltdWwoYWw5LCBibDIpOw0KICAgIG1pZCA9IE1hdGguaW11bChhbDksIGJoMik7DQogICAgbWlkICs9IE1hdGguaW11bChhaDksIGJsMik7DQogICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDIpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDgsIGJsMyk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDgsIGJoMyk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDgsIGJsMyk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoOCwgYmgzKTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw3LCBibDQpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw3LCBiaDQpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg3LCBibDQpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDcsIGJoNCk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsNiwgYmw1KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsNiwgYmg1KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoNiwgYmw1KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWg2LCBiaDUpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDUsIGJsNik7DQogICAgbWlkICs9IE1hdGguaW11bChhbDUsIGJoNik7DQogICAgbWlkICs9IE1hdGguaW11bChhaDUsIGJsNik7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNSwgYmg2KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw0LCBibDcpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw0LCBiaDcpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg0LCBibDcpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDQsIGJoNyk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsMywgYmw4KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsMywgYmg4KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoMywgYmw4KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWgzLCBiaDgpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDIsIGJsOSk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDIsIGJoOSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDIsIGJsOSk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoMiwgYmg5KTsNCiAgICB2YXIgdzExID0gYyArIGxvICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKTsNCiAgICBjID0gaGkgKyAobWlkID4+PiAxMykgKyAodzExID4+PiAyNik7DQogICAgdzExICY9IDB4M2ZmZmZmZjsNCiAgICAvKiBrID0gMTIgKi8NCiAgICBsbyA9IE1hdGguaW11bChhbDksIGJsMyk7DQogICAgbWlkID0gTWF0aC5pbXVsKGFsOSwgYmgzKTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoOSwgYmwzKTsNCiAgICBoaSA9IE1hdGguaW11bChhaDksIGJoMyk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsOCwgYmw0KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsOCwgYmg0KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoOCwgYmw0KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWg4LCBiaDQpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDcsIGJsNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDcsIGJoNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDcsIGJsNSk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNywgYmg1KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw2LCBibDYpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw2LCBiaDYpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg2LCBibDYpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDYsIGJoNik7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsNSwgYmw3KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsNSwgYmg3KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoNSwgYmw3KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWg1LCBiaDcpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDQsIGJsOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDQsIGJoOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDQsIGJsOCk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNCwgYmg4KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWwzLCBibDkpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWwzLCBiaDkpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWgzLCBibDkpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDMsIGJoOSk7DQogICAgdmFyIHcxMiA9IGMgKyBsbyArICgobWlkICYgMHgxZmZmKSA8PCAxMyk7DQogICAgYyA9IGhpICsgKG1pZCA+Pj4gMTMpICsgKHcxMiA+Pj4gMjYpOw0KICAgIHcxMiAmPSAweDNmZmZmZmY7DQogICAgLyogayA9IDEzICovDQogICAgbG8gPSBNYXRoLmltdWwoYWw5LCBibDQpOw0KICAgIG1pZCA9IE1hdGguaW11bChhbDksIGJoNCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDksIGJsNCk7DQogICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDQpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDgsIGJsNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDgsIGJoNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDgsIGJsNSk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoOCwgYmg1KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw3LCBibDYpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw3LCBiaDYpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg3LCBibDYpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDcsIGJoNik7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsNiwgYmw3KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsNiwgYmg3KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoNiwgYmw3KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWg2LCBiaDcpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDUsIGJsOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDUsIGJoOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDUsIGJsOCk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNSwgYmg4KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw0LCBibDkpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw0LCBiaDkpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg0LCBibDkpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDQsIGJoOSk7DQogICAgdmFyIHcxMyA9IGMgKyBsbyArICgobWlkICYgMHgxZmZmKSA8PCAxMyk7DQogICAgYyA9IGhpICsgKG1pZCA+Pj4gMTMpICsgKHcxMyA+Pj4gMjYpOw0KICAgIHcxMyAmPSAweDNmZmZmZmY7DQogICAgLyogayA9IDE0ICovDQogICAgbG8gPSBNYXRoLmltdWwoYWw5LCBibDUpOw0KICAgIG1pZCA9IE1hdGguaW11bChhbDksIGJoNSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDksIGJsNSk7DQogICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDUpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDgsIGJsNik7DQogICAgbWlkICs9IE1hdGguaW11bChhbDgsIGJoNik7DQogICAgbWlkICs9IE1hdGguaW11bChhaDgsIGJsNik7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoOCwgYmg2KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw3LCBibDcpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw3LCBiaDcpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg3LCBibDcpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDcsIGJoNyk7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsNiwgYmw4KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsNiwgYmg4KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoNiwgYmw4KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWg2LCBiaDgpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDUsIGJsOSk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDUsIGJoOSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDUsIGJsOSk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNSwgYmg5KTsNCiAgICB2YXIgdzE0ID0gYyArIGxvICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKTsNCiAgICBjID0gaGkgKyAobWlkID4+PiAxMykgKyAodzE0ID4+PiAyNik7DQogICAgdzE0ICY9IDB4M2ZmZmZmZjsNCiAgICAvKiBrID0gMTUgKi8NCiAgICBsbyA9IE1hdGguaW11bChhbDksIGJsNik7DQogICAgbWlkID0gTWF0aC5pbXVsKGFsOSwgYmg2KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoOSwgYmw2KTsNCiAgICBoaSA9IE1hdGguaW11bChhaDksIGJoNik7DQogICAgbG8gKz0gTWF0aC5pbXVsKGFsOCwgYmw3KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFsOCwgYmg3KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoOCwgYmw3KTsNCiAgICBoaSArPSBNYXRoLmltdWwoYWg4LCBiaDcpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDcsIGJsOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDcsIGJoOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDcsIGJsOCk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoNywgYmg4KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw2LCBibDkpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw2LCBiaDkpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg2LCBibDkpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDYsIGJoOSk7DQogICAgdmFyIHcxNSA9IGMgKyBsbyArICgobWlkICYgMHgxZmZmKSA8PCAxMyk7DQogICAgYyA9IGhpICsgKG1pZCA+Pj4gMTMpICsgKHcxNSA+Pj4gMjYpOw0KICAgIHcxNSAmPSAweDNmZmZmZmY7DQogICAgLyogayA9IDE2ICovDQogICAgbG8gPSBNYXRoLmltdWwoYWw5LCBibDcpOw0KICAgIG1pZCA9IE1hdGguaW11bChhbDksIGJoNyk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDksIGJsNyk7DQogICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDcpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDgsIGJsOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDgsIGJoOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDgsIGJsOCk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoOCwgYmg4KTsNCiAgICBsbyArPSBNYXRoLmltdWwoYWw3LCBibDkpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWw3LCBiaDkpOw0KICAgIG1pZCArPSBNYXRoLmltdWwoYWg3LCBibDkpOw0KICAgIGhpICs9IE1hdGguaW11bChhaDcsIGJoOSk7DQogICAgdmFyIHcxNiA9IGMgKyBsbyArICgobWlkICYgMHgxZmZmKSA8PCAxMyk7DQogICAgYyA9IGhpICsgKG1pZCA+Pj4gMTMpICsgKHcxNiA+Pj4gMjYpOw0KICAgIHcxNiAmPSAweDNmZmZmZmY7DQogICAgLyogayA9IDE3ICovDQogICAgbG8gPSBNYXRoLmltdWwoYWw5LCBibDgpOw0KICAgIG1pZCA9IE1hdGguaW11bChhbDksIGJoOCk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDksIGJsOCk7DQogICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDgpOw0KICAgIGxvICs9IE1hdGguaW11bChhbDgsIGJsOSk7DQogICAgbWlkICs9IE1hdGguaW11bChhbDgsIGJoOSk7DQogICAgbWlkICs9IE1hdGguaW11bChhaDgsIGJsOSk7DQogICAgaGkgKz0gTWF0aC5pbXVsKGFoOCwgYmg5KTsNCiAgICB2YXIgdzE3ID0gYyArIGxvICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKTsNCiAgICBjID0gaGkgKyAobWlkID4+PiAxMykgKyAodzE3ID4+PiAyNik7DQogICAgdzE3ICY9IDB4M2ZmZmZmZjsNCiAgICAvKiBrID0gMTggKi8NCiAgICBsbyA9IE1hdGguaW11bChhbDksIGJsOSk7DQogICAgbWlkID0gTWF0aC5pbXVsKGFsOSwgYmg5KTsNCiAgICBtaWQgKz0gTWF0aC5pbXVsKGFoOSwgYmw5KTsNCiAgICBoaSA9IE1hdGguaW11bChhaDksIGJoOSk7DQogICAgdmFyIHcxOCA9IGMgKyBsbyArICgobWlkICYgMHgxZmZmKSA8PCAxMyk7DQogICAgYyA9IGhpICsgKG1pZCA+Pj4gMTMpICsgKHcxOCA+Pj4gMjYpOw0KICAgIHcxOCAmPSAweDNmZmZmZmY7DQogICAgb1swXSA9IHcwOw0KICAgIG9bMV0gPSB3MTsNCiAgICBvWzJdID0gdzI7DQogICAgb1szXSA9IHczOw0KICAgIG9bNF0gPSB3NDsNCiAgICBvWzVdID0gdzU7DQogICAgb1s2XSA9IHc2Ow0KICAgIG9bN10gPSB3NzsNCiAgICBvWzhdID0gdzg7DQogICAgb1s5XSA9IHc5Ow0KICAgIG9bMTBdID0gdzEwOw0KICAgIG9bMTFdID0gdzExOw0KICAgIG9bMTJdID0gdzEyOw0KICAgIG9bMTNdID0gdzEzOw0KICAgIG9bMTRdID0gdzE0Ow0KICAgIG9bMTVdID0gdzE1Ow0KICAgIG9bMTZdID0gdzE2Ow0KICAgIG9bMTddID0gdzE3Ow0KICAgIG9bMThdID0gdzE4Ow0KICAgIGlmIChjICE9PSAwKSB7DQogICAgICBvWzE5XSA9IGM7DQogICAgICBvdXQubGVuZ3RoKys7DQogICAgfQ0KICAgIHJldHVybiBvdXQ7DQogIH07DQoNCiAgLy8gUG9seWZpbGwgY29tYg0KICBpZiAoIU1hdGguaW11bCkgew0KICAgIGNvbWIxME11bFRvID0gc21hbGxNdWxUbzsNCiAgfQ0KDQogIGZ1bmN0aW9uIGJpZ011bFRvIChzZWxmLCBudW0sIG91dCkgew0KICAgIG91dC5uZWdhdGl2ZSA9IG51bS5uZWdhdGl2ZSBeIHNlbGYubmVnYXRpdmU7DQogICAgb3V0Lmxlbmd0aCA9IHNlbGYubGVuZ3RoICsgbnVtLmxlbmd0aDsNCg0KICAgIHZhciBjYXJyeSA9IDA7DQogICAgdmFyIGhuY2FycnkgPSAwOw0KICAgIGZvciAodmFyIGsgPSAwOyBrIDwgb3V0Lmxlbmd0aCAtIDE7IGsrKykgew0KICAgICAgLy8gU3VtIGFsbCB3b3JkcyB3aXRoIHRoZSBzYW1lIGBpICsgaiA9IGtgIGFuZCBhY2N1bXVsYXRlIGBuY2FycnlgLA0KICAgICAgLy8gbm90ZSB0aGF0IG5jYXJyeSBjb3VsZCBiZSA+PSAweDNmZmZmZmYNCiAgICAgIHZhciBuY2FycnkgPSBobmNhcnJ5Ow0KICAgICAgaG5jYXJyeSA9IDA7DQogICAgICB2YXIgcndvcmQgPSBjYXJyeSAmIDB4M2ZmZmZmZjsNCiAgICAgIHZhciBtYXhKID0gTWF0aC5taW4oaywgbnVtLmxlbmd0aCAtIDEpOw0KICAgICAgZm9yICh2YXIgaiA9IE1hdGgubWF4KDAsIGsgLSBzZWxmLmxlbmd0aCArIDEpOyBqIDw9IG1heEo7IGorKykgew0KICAgICAgICB2YXIgaSA9IGsgLSBqOw0KICAgICAgICB2YXIgYSA9IHNlbGYud29yZHNbaV0gfCAwOw0KICAgICAgICB2YXIgYiA9IG51bS53b3Jkc1tqXSB8IDA7DQogICAgICAgIHZhciByID0gYSAqIGI7DQoNCiAgICAgICAgdmFyIGxvID0gciAmIDB4M2ZmZmZmZjsNCiAgICAgICAgbmNhcnJ5ID0gKG5jYXJyeSArICgociAvIDB4NDAwMDAwMCkgfCAwKSkgfCAwOw0KICAgICAgICBsbyA9IChsbyArIHJ3b3JkKSB8IDA7DQogICAgICAgIHJ3b3JkID0gbG8gJiAweDNmZmZmZmY7DQogICAgICAgIG5jYXJyeSA9IChuY2FycnkgKyAobG8gPj4+IDI2KSkgfCAwOw0KDQogICAgICAgIGhuY2FycnkgKz0gbmNhcnJ5ID4+PiAyNjsNCiAgICAgICAgbmNhcnJ5ICY9IDB4M2ZmZmZmZjsNCiAgICAgIH0NCiAgICAgIG91dC53b3Jkc1trXSA9IHJ3b3JkOw0KICAgICAgY2FycnkgPSBuY2Fycnk7DQogICAgICBuY2FycnkgPSBobmNhcnJ5Ow0KICAgIH0NCiAgICBpZiAoY2FycnkgIT09IDApIHsNCiAgICAgIG91dC53b3Jkc1trXSA9IGNhcnJ5Ow0KICAgIH0gZWxzZSB7DQogICAgICBvdXQubGVuZ3RoLS07DQogICAgfQ0KDQogICAgcmV0dXJuIG91dC5zdHJpcCgpOw0KICB9DQoNCiAgZnVuY3Rpb24ganVtYm9NdWxUbyAoc2VsZiwgbnVtLCBvdXQpIHsNCiAgICB2YXIgZmZ0bSA9IG5ldyBGRlRNKCk7DQogICAgcmV0dXJuIGZmdG0ubXVscChzZWxmLCBudW0sIG91dCk7DQogIH0NCg0KICBCTi5wcm90b3R5cGUubXVsVG8gPSBmdW5jdGlvbiBtdWxUbyAobnVtLCBvdXQpIHsNCiAgICB2YXIgcmVzOw0KICAgIHZhciBsZW4gPSB0aGlzLmxlbmd0aCArIG51bS5sZW5ndGg7DQogICAgaWYgKHRoaXMubGVuZ3RoID09PSAxMCAmJiBudW0ubGVuZ3RoID09PSAxMCkgew0KICAgICAgcmVzID0gY29tYjEwTXVsVG8odGhpcywgbnVtLCBvdXQpOw0KICAgIH0gZWxzZSBpZiAobGVuIDwgNjMpIHsNCiAgICAgIHJlcyA9IHNtYWxsTXVsVG8odGhpcywgbnVtLCBvdXQpOw0KICAgIH0gZWxzZSBpZiAobGVuIDwgMTAyNCkgew0KICAgICAgcmVzID0gYmlnTXVsVG8odGhpcywgbnVtLCBvdXQpOw0KICAgIH0gZWxzZSB7DQogICAgICByZXMgPSBqdW1ib011bFRvKHRoaXMsIG51bSwgb3V0KTsNCiAgICB9DQoNCiAgICByZXR1cm4gcmVzOw0KICB9Ow0KDQogIC8vIENvb2xleS1UdWtleSBhbGdvcml0aG0gZm9yIEZGVA0KICAvLyBzbGlnaHRseSByZXZpc2l0ZWQgdG8gcmVseSBvbiBsb29waW5nIGluc3RlYWQgb2YgcmVjdXJzaW9uDQoNCiAgZnVuY3Rpb24gRkZUTSAoeCwgeSkgew0KICAgIHRoaXMueCA9IHg7DQogICAgdGhpcy55ID0geTsNCiAgfQ0KDQogIEZGVE0ucHJvdG90eXBlLm1ha2VSQlQgPSBmdW5jdGlvbiBtYWtlUkJUIChOKSB7DQogICAgdmFyIHQgPSBuZXcgQXJyYXkoTik7DQogICAgdmFyIGwgPSBCTi5wcm90b3R5cGUuX2NvdW50Qml0cyhOKSAtIDE7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOOyBpKyspIHsNCiAgICAgIHRbaV0gPSB0aGlzLnJldkJpbihpLCBsLCBOKTsNCiAgICB9DQoNCiAgICByZXR1cm4gdDsNCiAgfTsNCg0KICAvLyBSZXR1cm5zIGJpbmFyeS1yZXZlcnNlZCByZXByZXNlbnRhdGlvbiBvZiBgeGANCiAgRkZUTS5wcm90b3R5cGUucmV2QmluID0gZnVuY3Rpb24gcmV2QmluICh4LCBsLCBOKSB7DQogICAgaWYgKHggPT09IDAgfHwgeCA9PT0gTiAtIDEpIHJldHVybiB4Ow0KDQogICAgdmFyIHJiID0gMDsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGw7IGkrKykgew0KICAgICAgcmIgfD0gKHggJiAxKSA8PCAobCAtIGkgLSAxKTsNCiAgICAgIHggPj49IDE7DQogICAgfQ0KDQogICAgcmV0dXJuIHJiOw0KICB9Ow0KDQogIC8vIFBlcmZvcm1zICJ0d2VlZGxpbmciIHBoYXNlLCB0aGVyZWZvcmUgJ2VtdWxhdGluZycNCiAgLy8gYmVoYXZpb3VyIG9mIHRoZSByZWN1cnNpdmUgYWxnb3JpdGhtDQogIEZGVE0ucHJvdG90eXBlLnBlcm11dGUgPSBmdW5jdGlvbiBwZXJtdXRlIChyYnQsIHJ3cywgaXdzLCBydHdzLCBpdHdzLCBOKSB7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOOyBpKyspIHsNCiAgICAgIHJ0d3NbaV0gPSByd3NbcmJ0W2ldXTsNCiAgICAgIGl0d3NbaV0gPSBpd3NbcmJ0W2ldXTsNCiAgICB9DQogIH07DQoNCiAgRkZUTS5wcm90b3R5cGUudHJhbnNmb3JtID0gZnVuY3Rpb24gdHJhbnNmb3JtIChyd3MsIGl3cywgcnR3cywgaXR3cywgTiwgcmJ0KSB7DQogICAgdGhpcy5wZXJtdXRlKHJidCwgcndzLCBpd3MsIHJ0d3MsIGl0d3MsIE4pOw0KDQogICAgZm9yICh2YXIgcyA9IDE7IHMgPCBOOyBzIDw8PSAxKSB7DQogICAgICB2YXIgbCA9IHMgPDwgMTsNCg0KICAgICAgdmFyIHJ0d2RmID0gTWF0aC5jb3MoMiAqIE1hdGguUEkgLyBsKTsNCiAgICAgIHZhciBpdHdkZiA9IE1hdGguc2luKDIgKiBNYXRoLlBJIC8gbCk7DQoNCiAgICAgIGZvciAodmFyIHAgPSAwOyBwIDwgTjsgcCArPSBsKSB7DQogICAgICAgIHZhciBydHdkZl8gPSBydHdkZjsNCiAgICAgICAgdmFyIGl0d2RmXyA9IGl0d2RmOw0KDQogICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgczsgaisrKSB7DQogICAgICAgICAgdmFyIHJlID0gcnR3c1twICsgal07DQogICAgICAgICAgdmFyIGllID0gaXR3c1twICsgal07DQoNCiAgICAgICAgICB2YXIgcm8gPSBydHdzW3AgKyBqICsgc107DQogICAgICAgICAgdmFyIGlvID0gaXR3c1twICsgaiArIHNdOw0KDQogICAgICAgICAgdmFyIHJ4ID0gcnR3ZGZfICogcm8gLSBpdHdkZl8gKiBpbzsNCg0KICAgICAgICAgIGlvID0gcnR3ZGZfICogaW8gKyBpdHdkZl8gKiBybzsNCiAgICAgICAgICBybyA9IHJ4Ow0KDQogICAgICAgICAgcnR3c1twICsgal0gPSByZSArIHJvOw0KICAgICAgICAgIGl0d3NbcCArIGpdID0gaWUgKyBpbzsNCg0KICAgICAgICAgIHJ0d3NbcCArIGogKyBzXSA9IHJlIC0gcm87DQogICAgICAgICAgaXR3c1twICsgaiArIHNdID0gaWUgLSBpbzsNCg0KICAgICAgICAgIC8qIGpzaGludCBtYXhkZXB0aCA6IGZhbHNlICovDQogICAgICAgICAgaWYgKGogIT09IGwpIHsNCiAgICAgICAgICAgIHJ4ID0gcnR3ZGYgKiBydHdkZl8gLSBpdHdkZiAqIGl0d2RmXzsNCg0KICAgICAgICAgICAgaXR3ZGZfID0gcnR3ZGYgKiBpdHdkZl8gKyBpdHdkZiAqIHJ0d2RmXzsNCiAgICAgICAgICAgIHJ0d2RmXyA9IHJ4Ow0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAgfTsNCg0KICBGRlRNLnByb3RvdHlwZS5ndWVzc0xlbjEzYiA9IGZ1bmN0aW9uIGd1ZXNzTGVuMTNiIChuLCBtKSB7DQogICAgdmFyIE4gPSBNYXRoLm1heChtLCBuKSB8IDE7DQogICAgdmFyIG9kZCA9IE4gJiAxOw0KICAgIHZhciBpID0gMDsNCiAgICBmb3IgKE4gPSBOIC8gMiB8IDA7IE47IE4gPSBOID4+PiAxKSB7DQogICAgICBpKys7DQogICAgfQ0KDQogICAgcmV0dXJuIDEgPDwgaSArIDEgKyBvZGQ7DQogIH07DQoNCiAgRkZUTS5wcm90b3R5cGUuY29uanVnYXRlID0gZnVuY3Rpb24gY29uanVnYXRlIChyd3MsIGl3cywgTikgew0KICAgIGlmIChOIDw9IDEpIHJldHVybjsNCg0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgTiAvIDI7IGkrKykgew0KICAgICAgdmFyIHQgPSByd3NbaV07DQoNCiAgICAgIHJ3c1tpXSA9IHJ3c1tOIC0gaSAtIDFdOw0KICAgICAgcndzW04gLSBpIC0gMV0gPSB0Ow0KDQogICAgICB0ID0gaXdzW2ldOw0KDQogICAgICBpd3NbaV0gPSAtaXdzW04gLSBpIC0gMV07DQogICAgICBpd3NbTiAtIGkgLSAxXSA9IC10Ow0KICAgIH0NCiAgfTsNCg0KICBGRlRNLnByb3RvdHlwZS5ub3JtYWxpemUxM2IgPSBmdW5jdGlvbiBub3JtYWxpemUxM2IgKHdzLCBOKSB7DQogICAgdmFyIGNhcnJ5ID0gMDsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IE4gLyAyOyBpKyspIHsNCiAgICAgIHZhciB3ID0gTWF0aC5yb3VuZCh3c1syICogaSArIDFdIC8gTikgKiAweDIwMDAgKw0KICAgICAgICBNYXRoLnJvdW5kKHdzWzIgKiBpXSAvIE4pICsNCiAgICAgICAgY2Fycnk7DQoNCiAgICAgIHdzW2ldID0gdyAmIDB4M2ZmZmZmZjsNCg0KICAgICAgaWYgKHcgPCAweDQwMDAwMDApIHsNCiAgICAgICAgY2FycnkgPSAwOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgY2FycnkgPSB3IC8gMHg0MDAwMDAwIHwgMDsNCiAgICAgIH0NCiAgICB9DQoNCiAgICByZXR1cm4gd3M7DQogIH07DQoNCiAgRkZUTS5wcm90b3R5cGUuY29udmVydDEzYiA9IGZ1bmN0aW9uIGNvbnZlcnQxM2IgKHdzLCBsZW4sIHJ3cywgTikgew0KICAgIHZhciBjYXJyeSA9IDA7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykgew0KICAgICAgY2FycnkgPSBjYXJyeSArICh3c1tpXSB8IDApOw0KDQogICAgICByd3NbMiAqIGldID0gY2FycnkgJiAweDFmZmY7IGNhcnJ5ID0gY2FycnkgPj4+IDEzOw0KICAgICAgcndzWzIgKiBpICsgMV0gPSBjYXJyeSAmIDB4MWZmZjsgY2FycnkgPSBjYXJyeSA+Pj4gMTM7DQogICAgfQ0KDQogICAgLy8gUGFkIHdpdGggemVyb2VzDQogICAgZm9yIChpID0gMiAqIGxlbjsgaSA8IE47ICsraSkgew0KICAgICAgcndzW2ldID0gMDsNCiAgICB9DQoNCiAgICBhc3NlcnQoY2FycnkgPT09IDApOw0KICAgIGFzc2VydCgoY2FycnkgJiB+MHgxZmZmKSA9PT0gMCk7DQogIH07DQoNCiAgRkZUTS5wcm90b3R5cGUuc3R1YiA9IGZ1bmN0aW9uIHN0dWIgKE4pIHsNCiAgICB2YXIgcGggPSBuZXcgQXJyYXkoTik7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOOyBpKyspIHsNCiAgICAgIHBoW2ldID0gMDsNCiAgICB9DQoNCiAgICByZXR1cm4gcGg7DQogIH07DQoNCiAgRkZUTS5wcm90b3R5cGUubXVscCA9IGZ1bmN0aW9uIG11bHAgKHgsIHksIG91dCkgew0KICAgIHZhciBOID0gMiAqIHRoaXMuZ3Vlc3NMZW4xM2IoeC5sZW5ndGgsIHkubGVuZ3RoKTsNCg0KICAgIHZhciByYnQgPSB0aGlzLm1ha2VSQlQoTik7DQoNCiAgICB2YXIgXyA9IHRoaXMuc3R1YihOKTsNCg0KICAgIHZhciByd3MgPSBuZXcgQXJyYXkoTik7DQogICAgdmFyIHJ3c3QgPSBuZXcgQXJyYXkoTik7DQogICAgdmFyIGl3c3QgPSBuZXcgQXJyYXkoTik7DQoNCiAgICB2YXIgbnJ3cyA9IG5ldyBBcnJheShOKTsNCiAgICB2YXIgbnJ3c3QgPSBuZXcgQXJyYXkoTik7DQogICAgdmFyIG5pd3N0ID0gbmV3IEFycmF5KE4pOw0KDQogICAgdmFyIHJtd3MgPSBvdXQud29yZHM7DQogICAgcm13cy5sZW5ndGggPSBOOw0KDQogICAgdGhpcy5jb252ZXJ0MTNiKHgud29yZHMsIHgubGVuZ3RoLCByd3MsIE4pOw0KICAgIHRoaXMuY29udmVydDEzYih5LndvcmRzLCB5Lmxlbmd0aCwgbnJ3cywgTik7DQoNCiAgICB0aGlzLnRyYW5zZm9ybShyd3MsIF8sIHJ3c3QsIGl3c3QsIE4sIHJidCk7DQogICAgdGhpcy50cmFuc2Zvcm0obnJ3cywgXywgbnJ3c3QsIG5pd3N0LCBOLCByYnQpOw0KDQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOOyBpKyspIHsNCiAgICAgIHZhciByeCA9IHJ3c3RbaV0gKiBucndzdFtpXSAtIGl3c3RbaV0gKiBuaXdzdFtpXTsNCiAgICAgIGl3c3RbaV0gPSByd3N0W2ldICogbml3c3RbaV0gKyBpd3N0W2ldICogbnJ3c3RbaV07DQogICAgICByd3N0W2ldID0gcng7DQogICAgfQ0KDQogICAgdGhpcy5jb25qdWdhdGUocndzdCwgaXdzdCwgTik7DQogICAgdGhpcy50cmFuc2Zvcm0ocndzdCwgaXdzdCwgcm13cywgXywgTiwgcmJ0KTsNCiAgICB0aGlzLmNvbmp1Z2F0ZShybXdzLCBfLCBOKTsNCiAgICB0aGlzLm5vcm1hbGl6ZTEzYihybXdzLCBOKTsNCg0KICAgIG91dC5uZWdhdGl2ZSA9IHgubmVnYXRpdmUgXiB5Lm5lZ2F0aXZlOw0KICAgIG91dC5sZW5ndGggPSB4Lmxlbmd0aCArIHkubGVuZ3RoOw0KICAgIHJldHVybiBvdXQuc3RyaXAoKTsNCiAgfTsNCg0KICAvLyBNdWx0aXBseSBgdGhpc2AgYnkgYG51bWANCiAgQk4ucHJvdG90eXBlLm11bCA9IGZ1bmN0aW9uIG11bCAobnVtKSB7DQogICAgdmFyIG91dCA9IG5ldyBCTihudWxsKTsNCiAgICBvdXQud29yZHMgPSBuZXcgQXJyYXkodGhpcy5sZW5ndGggKyBudW0ubGVuZ3RoKTsNCiAgICByZXR1cm4gdGhpcy5tdWxUbyhudW0sIG91dCk7DQogIH07DQoNCiAgLy8gTXVsdGlwbHkgZW1wbG95aW5nIEZGVA0KICBCTi5wcm90b3R5cGUubXVsZiA9IGZ1bmN0aW9uIG11bGYgKG51bSkgew0KICAgIHZhciBvdXQgPSBuZXcgQk4obnVsbCk7DQogICAgb3V0LndvcmRzID0gbmV3IEFycmF5KHRoaXMubGVuZ3RoICsgbnVtLmxlbmd0aCk7DQogICAgcmV0dXJuIGp1bWJvTXVsVG8odGhpcywgbnVtLCBvdXQpOw0KICB9Ow0KDQogIC8vIEluLXBsYWNlIE11bHRpcGxpY2F0aW9uDQogIEJOLnByb3RvdHlwZS5pbXVsID0gZnVuY3Rpb24gaW11bCAobnVtKSB7DQogICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5tdWxUbyhudW0sIHRoaXMpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5pbXVsbiA9IGZ1bmN0aW9uIGltdWxuIChudW0pIHsNCiAgICBhc3NlcnQodHlwZW9mIG51bSA9PT0gJ251bWJlcicpOw0KICAgIGFzc2VydChudW0gPCAweDQwMDAwMDApOw0KDQogICAgLy8gQ2FycnkNCiAgICB2YXIgY2FycnkgPSAwOw0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykgew0KICAgICAgdmFyIHcgPSAodGhpcy53b3Jkc1tpXSB8IDApICogbnVtOw0KICAgICAgdmFyIGxvID0gKHcgJiAweDNmZmZmZmYpICsgKGNhcnJ5ICYgMHgzZmZmZmZmKTsNCiAgICAgIGNhcnJ5ID4+PSAyNjsNCiAgICAgIGNhcnJ5ICs9ICh3IC8gMHg0MDAwMDAwKSB8IDA7DQogICAgICAvLyBOT1RFOiBsbyBpcyAyN2JpdCBtYXhpbXVtDQogICAgICBjYXJyeSArPSBsbyA+Pj4gMjY7DQogICAgICB0aGlzLndvcmRzW2ldID0gbG8gJiAweDNmZmZmZmY7DQogICAgfQ0KDQogICAgaWYgKGNhcnJ5ICE9PSAwKSB7DQogICAgICB0aGlzLndvcmRzW2ldID0gY2Fycnk7DQogICAgICB0aGlzLmxlbmd0aCsrOw0KICAgIH0NCg0KICAgIHJldHVybiB0aGlzOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5tdWxuID0gZnVuY3Rpb24gbXVsbiAobnVtKSB7DQogICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pbXVsbihudW0pOw0KICB9Ow0KDQogIC8vIGB0aGlzYCAqIGB0aGlzYA0KICBCTi5wcm90b3R5cGUuc3FyID0gZnVuY3Rpb24gc3FyICgpIHsNCiAgICByZXR1cm4gdGhpcy5tdWwodGhpcyk7DQogIH07DQoNCiAgLy8gYHRoaXNgICogYHRoaXNgIGluLXBsYWNlDQogIEJOLnByb3RvdHlwZS5pc3FyID0gZnVuY3Rpb24gaXNxciAoKSB7DQogICAgcmV0dXJuIHRoaXMuaW11bCh0aGlzLmNsb25lKCkpOw0KICB9Ow0KDQogIC8vIE1hdGgucG93KGB0aGlzYCwgYG51bWApDQogIEJOLnByb3RvdHlwZS5wb3cgPSBmdW5jdGlvbiBwb3cgKG51bSkgew0KICAgIHZhciB3ID0gdG9CaXRBcnJheShudW0pOw0KICAgIGlmICh3Lmxlbmd0aCA9PT0gMCkgcmV0dXJuIG5ldyBCTigxKTsNCg0KICAgIC8vIFNraXAgbGVhZGluZyB6ZXJvZXMNCiAgICB2YXIgcmVzID0gdGhpczsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHcubGVuZ3RoOyBpKyssIHJlcyA9IHJlcy5zcXIoKSkgew0KICAgICAgaWYgKHdbaV0gIT09IDApIGJyZWFrOw0KICAgIH0NCg0KICAgIGlmICgrK2kgPCB3Lmxlbmd0aCkgew0KICAgICAgZm9yICh2YXIgcSA9IHJlcy5zcXIoKTsgaSA8IHcubGVuZ3RoOyBpKyssIHEgPSBxLnNxcigpKSB7DQogICAgICAgIGlmICh3W2ldID09PSAwKSBjb250aW51ZTsNCg0KICAgICAgICByZXMgPSByZXMubXVsKHEpOw0KICAgICAgfQ0KICAgIH0NCg0KICAgIHJldHVybiByZXM7DQogIH07DQoNCiAgLy8gU2hpZnQtbGVmdCBpbi1wbGFjZQ0KICBCTi5wcm90b3R5cGUuaXVzaGxuID0gZnVuY3Rpb24gaXVzaGxuIChiaXRzKSB7DQogICAgYXNzZXJ0KHR5cGVvZiBiaXRzID09PSAnbnVtYmVyJyAmJiBiaXRzID49IDApOw0KICAgIHZhciByID0gYml0cyAlIDI2Ow0KICAgIHZhciBzID0gKGJpdHMgLSByKSAvIDI2Ow0KICAgIHZhciBjYXJyeU1hc2sgPSAoMHgzZmZmZmZmID4+PiAoMjYgLSByKSkgPDwgKDI2IC0gcik7DQogICAgdmFyIGk7DQoNCiAgICBpZiAociAhPT0gMCkgew0KICAgICAgdmFyIGNhcnJ5ID0gMDsNCg0KICAgICAgZm9yIChpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgdmFyIG5ld0NhcnJ5ID0gdGhpcy53b3Jkc1tpXSAmIGNhcnJ5TWFzazsNCiAgICAgICAgdmFyIGMgPSAoKHRoaXMud29yZHNbaV0gfCAwKSAtIG5ld0NhcnJ5KSA8PCByOw0KICAgICAgICB0aGlzLndvcmRzW2ldID0gYyB8IGNhcnJ5Ow0KICAgICAgICBjYXJyeSA9IG5ld0NhcnJ5ID4+PiAoMjYgLSByKTsNCiAgICAgIH0NCg0KICAgICAgaWYgKGNhcnJ5KSB7DQogICAgICAgIHRoaXMud29yZHNbaV0gPSBjYXJyeTsNCiAgICAgICAgdGhpcy5sZW5ndGgrKzsNCiAgICAgIH0NCiAgICB9DQoNCiAgICBpZiAocyAhPT0gMCkgew0KICAgICAgZm9yIChpID0gdGhpcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgew0KICAgICAgICB0aGlzLndvcmRzW2kgKyBzXSA9IHRoaXMud29yZHNbaV07DQogICAgICB9DQoNCiAgICAgIGZvciAoaSA9IDA7IGkgPCBzOyBpKyspIHsNCiAgICAgICAgdGhpcy53b3Jkc1tpXSA9IDA7DQogICAgICB9DQoNCiAgICAgIHRoaXMubGVuZ3RoICs9IHM7DQogICAgfQ0KDQogICAgcmV0dXJuIHRoaXMuc3RyaXAoKTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUuaXNobG4gPSBmdW5jdGlvbiBpc2hsbiAoYml0cykgew0KICAgIC8vIFRPRE8oaW5kdXRueSk6IGltcGxlbWVudCBtZQ0KICAgIGFzc2VydCh0aGlzLm5lZ2F0aXZlID09PSAwKTsNCiAgICByZXR1cm4gdGhpcy5pdXNobG4oYml0cyk7DQogIH07DQoNCiAgLy8gU2hpZnQtcmlnaHQgaW4tcGxhY2UNCiAgLy8gTk9URTogYGhpbnRgIGlzIGEgbG93ZXN0IGJpdCBiZWZvcmUgdHJhaWxpbmcgemVyb2VzDQogIC8vIE5PVEU6IGlmIGBleHRlbmRlZGAgaXMgcHJlc2VudCAtIGl0IHdpbGwgYmUgZmlsbGVkIHdpdGggZGVzdHJveWVkIGJpdHMNCiAgQk4ucHJvdG90eXBlLml1c2hybiA9IGZ1bmN0aW9uIGl1c2hybiAoYml0cywgaGludCwgZXh0ZW5kZWQpIHsNCiAgICBhc3NlcnQodHlwZW9mIGJpdHMgPT09ICdudW1iZXInICYmIGJpdHMgPj0gMCk7DQogICAgdmFyIGg7DQogICAgaWYgKGhpbnQpIHsNCiAgICAgIGggPSAoaGludCAtIChoaW50ICUgMjYpKSAvIDI2Ow0KICAgIH0gZWxzZSB7DQogICAgICBoID0gMDsNCiAgICB9DQoNCiAgICB2YXIgciA9IGJpdHMgJSAyNjsNCiAgICB2YXIgcyA9IE1hdGgubWluKChiaXRzIC0gcikgLyAyNiwgdGhpcy5sZW5ndGgpOw0KICAgIHZhciBtYXNrID0gMHgzZmZmZmZmIF4gKCgweDNmZmZmZmYgPj4+IHIpIDw8IHIpOw0KICAgIHZhciBtYXNrZWRXb3JkcyA9IGV4dGVuZGVkOw0KDQogICAgaCAtPSBzOw0KICAgIGggPSBNYXRoLm1heCgwLCBoKTsNCg0KICAgIC8vIEV4dGVuZGVkIG1vZGUsIGNvcHkgbWFza2VkIHBhcnQNCiAgICBpZiAobWFza2VkV29yZHMpIHsNCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgczsgaSsrKSB7DQogICAgICAgIG1hc2tlZFdvcmRzLndvcmRzW2ldID0gdGhpcy53b3Jkc1tpXTsNCiAgICAgIH0NCiAgICAgIG1hc2tlZFdvcmRzLmxlbmd0aCA9IHM7DQogICAgfQ0KDQogICAgaWYgKHMgPT09IDApIHsNCiAgICAgIC8vIE5vLW9wLCB3ZSBzaG91bGQgbm90IG1vdmUgYW55dGhpbmcgYXQgYWxsDQogICAgfSBlbHNlIGlmICh0aGlzLmxlbmd0aCA+IHMpIHsNCiAgICAgIHRoaXMubGVuZ3RoIC09IHM7DQogICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykgew0KICAgICAgICB0aGlzLndvcmRzW2ldID0gdGhpcy53b3Jkc1tpICsgc107DQogICAgICB9DQogICAgfSBlbHNlIHsNCiAgICAgIHRoaXMud29yZHNbMF0gPSAwOw0KICAgICAgdGhpcy5sZW5ndGggPSAxOw0KICAgIH0NCg0KICAgIHZhciBjYXJyeSA9IDA7DQogICAgZm9yIChpID0gdGhpcy5sZW5ndGggLSAxOyBpID49IDAgJiYgKGNhcnJ5ICE9PSAwIHx8IGkgPj0gaCk7IGktLSkgew0KICAgICAgdmFyIHdvcmQgPSB0aGlzLndvcmRzW2ldIHwgMDsNCiAgICAgIHRoaXMud29yZHNbaV0gPSAoY2FycnkgPDwgKDI2IC0gcikpIHwgKHdvcmQgPj4+IHIpOw0KICAgICAgY2FycnkgPSB3b3JkICYgbWFzazsNCiAgICB9DQoNCiAgICAvLyBQdXNoIGNhcnJpZWQgYml0cyBhcyBhIG1hc2sNCiAgICBpZiAobWFza2VkV29yZHMgJiYgY2FycnkgIT09IDApIHsNCiAgICAgIG1hc2tlZFdvcmRzLndvcmRzW21hc2tlZFdvcmRzLmxlbmd0aCsrXSA9IGNhcnJ5Ow0KICAgIH0NCg0KICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgdGhpcy53b3Jkc1swXSA9IDA7DQogICAgICB0aGlzLmxlbmd0aCA9IDE7DQogICAgfQ0KDQogICAgcmV0dXJuIHRoaXMuc3RyaXAoKTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUuaXNocm4gPSBmdW5jdGlvbiBpc2hybiAoYml0cywgaGludCwgZXh0ZW5kZWQpIHsNCiAgICAvLyBUT0RPKGluZHV0bnkpOiBpbXBsZW1lbnQgbWUNCiAgICBhc3NlcnQodGhpcy5uZWdhdGl2ZSA9PT0gMCk7DQogICAgcmV0dXJuIHRoaXMuaXVzaHJuKGJpdHMsIGhpbnQsIGV4dGVuZGVkKTsNCiAgfTsNCg0KICAvLyBTaGlmdC1sZWZ0DQogIEJOLnByb3RvdHlwZS5zaGxuID0gZnVuY3Rpb24gc2hsbiAoYml0cykgew0KICAgIHJldHVybiB0aGlzLmNsb25lKCkuaXNobG4oYml0cyk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLnVzaGxuID0gZnVuY3Rpb24gdXNobG4gKGJpdHMpIHsNCiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLml1c2hsbihiaXRzKTsNCiAgfTsNCg0KICAvLyBTaGlmdC1yaWdodA0KICBCTi5wcm90b3R5cGUuc2hybiA9IGZ1bmN0aW9uIHNocm4gKGJpdHMpIHsNCiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmlzaHJuKGJpdHMpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS51c2hybiA9IGZ1bmN0aW9uIHVzaHJuIChiaXRzKSB7DQogICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pdXNocm4oYml0cyk7DQogIH07DQoNCiAgLy8gVGVzdCBpZiBuIGJpdCBpcyBzZXQNCiAgQk4ucHJvdG90eXBlLnRlc3RuID0gZnVuY3Rpb24gdGVzdG4gKGJpdCkgew0KICAgIGFzc2VydCh0eXBlb2YgYml0ID09PSAnbnVtYmVyJyAmJiBiaXQgPj0gMCk7DQogICAgdmFyIHIgPSBiaXQgJSAyNjsNCiAgICB2YXIgcyA9IChiaXQgLSByKSAvIDI2Ow0KICAgIHZhciBxID0gMSA8PCByOw0KDQogICAgLy8gRmFzdCBjYXNlOiBiaXQgaXMgbXVjaCBoaWdoZXIgdGhhbiBhbGwgZXhpc3Rpbmcgd29yZHMNCiAgICBpZiAodGhpcy5sZW5ndGggPD0gcykgcmV0dXJuIGZhbHNlOw0KDQogICAgLy8gQ2hlY2sgYml0IGFuZCByZXR1cm4NCiAgICB2YXIgdyA9IHRoaXMud29yZHNbc107DQoNCiAgICByZXR1cm4gISEodyAmIHEpOw0KICB9Ow0KDQogIC8vIFJldHVybiBvbmx5IGxvd2VycyBiaXRzIG9mIG51bWJlciAoaW4tcGxhY2UpDQogIEJOLnByb3RvdHlwZS5pbWFza24gPSBmdW5jdGlvbiBpbWFza24gKGJpdHMpIHsNCiAgICBhc3NlcnQodHlwZW9mIGJpdHMgPT09ICdudW1iZXInICYmIGJpdHMgPj0gMCk7DQogICAgdmFyIHIgPSBiaXRzICUgMjY7DQogICAgdmFyIHMgPSAoYml0cyAtIHIpIC8gMjY7DQoNCiAgICBhc3NlcnQodGhpcy5uZWdhdGl2ZSA9PT0gMCwgJ2ltYXNrbiB3b3JrcyBvbmx5IHdpdGggcG9zaXRpdmUgbnVtYmVycycpOw0KDQogICAgaWYgKHIgIT09IDApIHsNCiAgICAgIHMrKzsNCiAgICB9DQogICAgdGhpcy5sZW5ndGggPSBNYXRoLm1pbihzLCB0aGlzLmxlbmd0aCk7DQoNCiAgICBpZiAociAhPT0gMCkgew0KICAgICAgdmFyIG1hc2sgPSAweDNmZmZmZmYgXiAoKDB4M2ZmZmZmZiA+Pj4gcikgPDwgcik7DQogICAgICB0aGlzLndvcmRzW3RoaXMubGVuZ3RoIC0gMV0gJj0gbWFzazsNCiAgICB9DQoNCiAgICByZXR1cm4gdGhpcy5zdHJpcCgpOw0KICB9Ow0KDQogIC8vIFJldHVybiBvbmx5IGxvd2VycyBiaXRzIG9mIG51bWJlcg0KICBCTi5wcm90b3R5cGUubWFza24gPSBmdW5jdGlvbiBtYXNrbiAoYml0cykgew0KICAgIHJldHVybiB0aGlzLmNsb25lKCkuaW1hc2tuKGJpdHMpOw0KICB9Ow0KDQogIC8vIEFkZCBwbGFpbiBudW1iZXIgYG51bWAgdG8gYHRoaXNgDQogIEJOLnByb3RvdHlwZS5pYWRkbiA9IGZ1bmN0aW9uIGlhZGRuIChudW0pIHsNCiAgICBhc3NlcnQodHlwZW9mIG51bSA9PT0gJ251bWJlcicpOw0KICAgIGFzc2VydChudW0gPCAweDQwMDAwMDApOw0KICAgIGlmIChudW0gPCAwKSByZXR1cm4gdGhpcy5pc3VibigtbnVtKTsNCg0KICAgIC8vIFBvc3NpYmxlIHNpZ24gY2hhbmdlDQogICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDApIHsNCiAgICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMSAmJiAodGhpcy53b3Jkc1swXSB8IDApIDwgbnVtKSB7DQogICAgICAgIHRoaXMud29yZHNbMF0gPSBudW0gLSAodGhpcy53b3Jkc1swXSB8IDApOw0KICAgICAgICB0aGlzLm5lZ2F0aXZlID0gMDsNCiAgICAgICAgcmV0dXJuIHRoaXM7DQogICAgICB9DQoNCiAgICAgIHRoaXMubmVnYXRpdmUgPSAwOw0KICAgICAgdGhpcy5pc3VibihudW0pOw0KICAgICAgdGhpcy5uZWdhdGl2ZSA9IDE7DQogICAgICByZXR1cm4gdGhpczsNCiAgICB9DQoNCiAgICAvLyBBZGQgd2l0aG91dCBjaGVja3MNCiAgICByZXR1cm4gdGhpcy5faWFkZG4obnVtKTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUuX2lhZGRuID0gZnVuY3Rpb24gX2lhZGRuIChudW0pIHsNCiAgICB0aGlzLndvcmRzWzBdICs9IG51bTsNCg0KICAgIC8vIENhcnJ5DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aCAmJiB0aGlzLndvcmRzW2ldID49IDB4NDAwMDAwMDsgaSsrKSB7DQogICAgICB0aGlzLndvcmRzW2ldIC09IDB4NDAwMDAwMDsNCiAgICAgIGlmIChpID09PSB0aGlzLmxlbmd0aCAtIDEpIHsNCiAgICAgICAgdGhpcy53b3Jkc1tpICsgMV0gPSAxOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy53b3Jkc1tpICsgMV0rKzsNCiAgICAgIH0NCiAgICB9DQogICAgdGhpcy5sZW5ndGggPSBNYXRoLm1heCh0aGlzLmxlbmd0aCwgaSArIDEpOw0KDQogICAgcmV0dXJuIHRoaXM7DQogIH07DQoNCiAgLy8gU3VidHJhY3QgcGxhaW4gbnVtYmVyIGBudW1gIGZyb20gYHRoaXNgDQogIEJOLnByb3RvdHlwZS5pc3VibiA9IGZ1bmN0aW9uIGlzdWJuIChudW0pIHsNCiAgICBhc3NlcnQodHlwZW9mIG51bSA9PT0gJ251bWJlcicpOw0KICAgIGFzc2VydChudW0gPCAweDQwMDAwMDApOw0KICAgIGlmIChudW0gPCAwKSByZXR1cm4gdGhpcy5pYWRkbigtbnVtKTsNCg0KICAgIGlmICh0aGlzLm5lZ2F0aXZlICE9PSAwKSB7DQogICAgICB0aGlzLm5lZ2F0aXZlID0gMDsNCiAgICAgIHRoaXMuaWFkZG4obnVtKTsNCiAgICAgIHRoaXMubmVnYXRpdmUgPSAxOw0KICAgICAgcmV0dXJuIHRoaXM7DQogICAgfQ0KDQogICAgdGhpcy53b3Jkc1swXSAtPSBudW07DQoNCiAgICBpZiAodGhpcy5sZW5ndGggPT09IDEgJiYgdGhpcy53b3Jkc1swXSA8IDApIHsNCiAgICAgIHRoaXMud29yZHNbMF0gPSAtdGhpcy53b3Jkc1swXTsNCiAgICAgIHRoaXMubmVnYXRpdmUgPSAxOw0KICAgIH0gZWxzZSB7DQogICAgICAvLyBDYXJyeQ0KICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aCAmJiB0aGlzLndvcmRzW2ldIDwgMDsgaSsrKSB7DQogICAgICAgIHRoaXMud29yZHNbaV0gKz0gMHg0MDAwMDAwOw0KICAgICAgICB0aGlzLndvcmRzW2kgKyAxXSAtPSAxOw0KICAgICAgfQ0KICAgIH0NCg0KICAgIHJldHVybiB0aGlzLnN0cmlwKCk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLmFkZG4gPSBmdW5jdGlvbiBhZGRuIChudW0pIHsNCiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmlhZGRuKG51bSk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLnN1Ym4gPSBmdW5jdGlvbiBzdWJuIChudW0pIHsNCiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmlzdWJuKG51bSk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLmlhYnMgPSBmdW5jdGlvbiBpYWJzICgpIHsNCiAgICB0aGlzLm5lZ2F0aXZlID0gMDsNCg0KICAgIHJldHVybiB0aGlzOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5hYnMgPSBmdW5jdGlvbiBhYnMgKCkgew0KICAgIHJldHVybiB0aGlzLmNsb25lKCkuaWFicygpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5faXNobG5zdWJtdWwgPSBmdW5jdGlvbiBfaXNobG5zdWJtdWwgKG51bSwgbXVsLCBzaGlmdCkgew0KICAgIHZhciBsZW4gPSBudW0ubGVuZ3RoICsgc2hpZnQ7DQogICAgdmFyIGk7DQoNCiAgICB0aGlzLl9leHBhbmQobGVuKTsNCg0KICAgIHZhciB3Ow0KICAgIHZhciBjYXJyeSA9IDA7DQogICAgZm9yIChpID0gMDsgaSA8IG51bS5sZW5ndGg7IGkrKykgew0KICAgICAgdyA9ICh0aGlzLndvcmRzW2kgKyBzaGlmdF0gfCAwKSArIGNhcnJ5Ow0KICAgICAgdmFyIHJpZ2h0ID0gKG51bS53b3Jkc1tpXSB8IDApICogbXVsOw0KICAgICAgdyAtPSByaWdodCAmIDB4M2ZmZmZmZjsNCiAgICAgIGNhcnJ5ID0gKHcgPj4gMjYpIC0gKChyaWdodCAvIDB4NDAwMDAwMCkgfCAwKTsNCiAgICAgIHRoaXMud29yZHNbaSArIHNoaWZ0XSA9IHcgJiAweDNmZmZmZmY7DQogICAgfQ0KICAgIGZvciAoOyBpIDwgdGhpcy5sZW5ndGggLSBzaGlmdDsgaSsrKSB7DQogICAgICB3ID0gKHRoaXMud29yZHNbaSArIHNoaWZ0XSB8IDApICsgY2Fycnk7DQogICAgICBjYXJyeSA9IHcgPj4gMjY7DQogICAgICB0aGlzLndvcmRzW2kgKyBzaGlmdF0gPSB3ICYgMHgzZmZmZmZmOw0KICAgIH0NCg0KICAgIGlmIChjYXJyeSA9PT0gMCkgcmV0dXJuIHRoaXMuc3RyaXAoKTsNCg0KICAgIC8vIFN1YnRyYWN0aW9uIG92ZXJmbG93DQogICAgYXNzZXJ0KGNhcnJ5ID09PSAtMSk7DQogICAgY2FycnkgPSAwOw0KICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7DQogICAgICB3ID0gLSh0aGlzLndvcmRzW2ldIHwgMCkgKyBjYXJyeTsNCiAgICAgIGNhcnJ5ID0gdyA+PiAyNjsNCiAgICAgIHRoaXMud29yZHNbaV0gPSB3ICYgMHgzZmZmZmZmOw0KICAgIH0NCiAgICB0aGlzLm5lZ2F0aXZlID0gMTsNCg0KICAgIHJldHVybiB0aGlzLnN0cmlwKCk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLl93b3JkRGl2ID0gZnVuY3Rpb24gX3dvcmREaXYgKG51bSwgbW9kZSkgew0KICAgIHZhciBzaGlmdCA9IHRoaXMubGVuZ3RoIC0gbnVtLmxlbmd0aDsNCg0KICAgIHZhciBhID0gdGhpcy5jbG9uZSgpOw0KICAgIHZhciBiID0gbnVtOw0KDQogICAgLy8gTm9ybWFsaXplDQogICAgdmFyIGJoaSA9IGIud29yZHNbYi5sZW5ndGggLSAxXSB8IDA7DQogICAgdmFyIGJoaUJpdHMgPSB0aGlzLl9jb3VudEJpdHMoYmhpKTsNCiAgICBzaGlmdCA9IDI2IC0gYmhpQml0czsNCiAgICBpZiAoc2hpZnQgIT09IDApIHsNCiAgICAgIGIgPSBiLnVzaGxuKHNoaWZ0KTsNCiAgICAgIGEuaXVzaGxuKHNoaWZ0KTsNCiAgICAgIGJoaSA9IGIud29yZHNbYi5sZW5ndGggLSAxXSB8IDA7DQogICAgfQ0KDQogICAgLy8gSW5pdGlhbGl6ZSBxdW90aWVudA0KICAgIHZhciBtID0gYS5sZW5ndGggLSBiLmxlbmd0aDsNCiAgICB2YXIgcTsNCg0KICAgIGlmIChtb2RlICE9PSAnbW9kJykgew0KICAgICAgcSA9IG5ldyBCTihudWxsKTsNCiAgICAgIHEubGVuZ3RoID0gbSArIDE7DQogICAgICBxLndvcmRzID0gbmV3IEFycmF5KHEubGVuZ3RoKTsNCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcS5sZW5ndGg7IGkrKykgew0KICAgICAgICBxLndvcmRzW2ldID0gMDsNCiAgICAgIH0NCiAgICB9DQoNCiAgICB2YXIgZGlmZiA9IGEuY2xvbmUoKS5faXNobG5zdWJtdWwoYiwgMSwgbSk7DQogICAgaWYgKGRpZmYubmVnYXRpdmUgPT09IDApIHsNCiAgICAgIGEgPSBkaWZmOw0KICAgICAgaWYgKHEpIHsNCiAgICAgICAgcS53b3Jkc1ttXSA9IDE7DQogICAgICB9DQogICAgfQ0KDQogICAgZm9yICh2YXIgaiA9IG0gLSAxOyBqID49IDA7IGotLSkgew0KICAgICAgdmFyIHFqID0gKGEud29yZHNbYi5sZW5ndGggKyBqXSB8IDApICogMHg0MDAwMDAwICsNCiAgICAgICAgKGEud29yZHNbYi5sZW5ndGggKyBqIC0gMV0gfCAwKTsNCg0KICAgICAgLy8gTk9URTogKHFqIC8gYmhpKSBpcyAoMHgzZmZmZmZmICogMHg0MDAwMDAwICsgMHgzZmZmZmZmKSAvIDB4MjAwMDAwMCBtYXgNCiAgICAgIC8vICgweDdmZmZmZmYpDQogICAgICBxaiA9IE1hdGgubWluKChxaiAvIGJoaSkgfCAwLCAweDNmZmZmZmYpOw0KDQogICAgICBhLl9pc2hsbnN1Ym11bChiLCBxaiwgaik7DQogICAgICB3aGlsZSAoYS5uZWdhdGl2ZSAhPT0gMCkgew0KICAgICAgICBxai0tOw0KICAgICAgICBhLm5lZ2F0aXZlID0gMDsNCiAgICAgICAgYS5faXNobG5zdWJtdWwoYiwgMSwgaik7DQogICAgICAgIGlmICghYS5pc1plcm8oKSkgew0KICAgICAgICAgIGEubmVnYXRpdmUgXj0gMTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgaWYgKHEpIHsNCiAgICAgICAgcS53b3Jkc1tqXSA9IHFqOw0KICAgICAgfQ0KICAgIH0NCiAgICBpZiAocSkgew0KICAgICAgcS5zdHJpcCgpOw0KICAgIH0NCiAgICBhLnN0cmlwKCk7DQoNCiAgICAvLyBEZW5vcm1hbGl6ZQ0KICAgIGlmIChtb2RlICE9PSAnZGl2JyAmJiBzaGlmdCAhPT0gMCkgew0KICAgICAgYS5pdXNocm4oc2hpZnQpOw0KICAgIH0NCg0KICAgIHJldHVybiB7DQogICAgICBkaXY6IHEgfHwgbnVsbCwNCiAgICAgIG1vZDogYQ0KICAgIH07DQogIH07DQoNCiAgLy8gTk9URTogMSkgYG1vZGVgIGNhbiBiZSBzZXQgdG8gYG1vZGAgdG8gcmVxdWVzdCBtb2Qgb25seSwNCiAgLy8gICAgICAgdG8gYGRpdmAgdG8gcmVxdWVzdCBkaXYgb25seSwgb3IgYmUgYWJzZW50IHRvDQogIC8vICAgICAgIHJlcXVlc3QgYm90aCBkaXYgJiBtb2QNCiAgLy8gICAgICAgMikgYHBvc2l0aXZlYCBpcyB0cnVlIGlmIHVuc2lnbmVkIG1vZCBpcyByZXF1ZXN0ZWQNCiAgQk4ucHJvdG90eXBlLmRpdm1vZCA9IGZ1bmN0aW9uIGRpdm1vZCAobnVtLCBtb2RlLCBwb3NpdGl2ZSkgew0KICAgIGFzc2VydCghbnVtLmlzWmVybygpKTsNCg0KICAgIGlmICh0aGlzLmlzWmVybygpKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICBkaXY6IG5ldyBCTigwKSwNCiAgICAgICAgbW9kOiBuZXcgQk4oMCkNCiAgICAgIH07DQogICAgfQ0KDQogICAgdmFyIGRpdiwgbW9kLCByZXM7DQogICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDAgJiYgbnVtLm5lZ2F0aXZlID09PSAwKSB7DQogICAgICByZXMgPSB0aGlzLm5lZygpLmRpdm1vZChudW0sIG1vZGUpOw0KDQogICAgICBpZiAobW9kZSAhPT0gJ21vZCcpIHsNCiAgICAgICAgZGl2ID0gcmVzLmRpdi5uZWcoKTsNCiAgICAgIH0NCg0KICAgICAgaWYgKG1vZGUgIT09ICdkaXYnKSB7DQogICAgICAgIG1vZCA9IHJlcy5tb2QubmVnKCk7DQogICAgICAgIGlmIChwb3NpdGl2ZSAmJiBtb2QubmVnYXRpdmUgIT09IDApIHsNCiAgICAgICAgICBtb2QuaWFkZChudW0pOw0KICAgICAgICB9DQogICAgICB9DQoNCiAgICAgIHJldHVybiB7DQogICAgICAgIGRpdjogZGl2LA0KICAgICAgICBtb2Q6IG1vZA0KICAgICAgfTsNCiAgICB9DQoNCiAgICBpZiAodGhpcy5uZWdhdGl2ZSA9PT0gMCAmJiBudW0ubmVnYXRpdmUgIT09IDApIHsNCiAgICAgIHJlcyA9IHRoaXMuZGl2bW9kKG51bS5uZWcoKSwgbW9kZSk7DQoNCiAgICAgIGlmIChtb2RlICE9PSAnbW9kJykgew0KICAgICAgICBkaXYgPSByZXMuZGl2Lm5lZygpOw0KICAgICAgfQ0KDQogICAgICByZXR1cm4gew0KICAgICAgICBkaXY6IGRpdiwNCiAgICAgICAgbW9kOiByZXMubW9kDQogICAgICB9Ow0KICAgIH0NCg0KICAgIGlmICgodGhpcy5uZWdhdGl2ZSAmIG51bS5uZWdhdGl2ZSkgIT09IDApIHsNCiAgICAgIHJlcyA9IHRoaXMubmVnKCkuZGl2bW9kKG51bS5uZWcoKSwgbW9kZSk7DQoNCiAgICAgIGlmIChtb2RlICE9PSAnZGl2Jykgew0KICAgICAgICBtb2QgPSByZXMubW9kLm5lZygpOw0KICAgICAgICBpZiAocG9zaXRpdmUgJiYgbW9kLm5lZ2F0aXZlICE9PSAwKSB7DQogICAgICAgICAgbW9kLmlzdWIobnVtKTsNCiAgICAgICAgfQ0KICAgICAgfQ0KDQogICAgICByZXR1cm4gew0KICAgICAgICBkaXY6IHJlcy5kaXYsDQogICAgICAgIG1vZDogbW9kDQogICAgICB9Ow0KICAgIH0NCg0KICAgIC8vIEJvdGggbnVtYmVycyBhcmUgcG9zaXRpdmUgYXQgdGhpcyBwb2ludA0KDQogICAgLy8gU3RyaXAgYm90aCBudW1iZXJzIHRvIGFwcHJveGltYXRlIHNoaWZ0IHZhbHVlDQogICAgaWYgKG51bS5sZW5ndGggPiB0aGlzLmxlbmd0aCB8fCB0aGlzLmNtcChudW0pIDwgMCkgew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgZGl2OiBuZXcgQk4oMCksDQogICAgICAgIG1vZDogdGhpcw0KICAgICAgfTsNCiAgICB9DQoNCiAgICAvLyBWZXJ5IHNob3J0IHJlZHVjdGlvbg0KICAgIGlmIChudW0ubGVuZ3RoID09PSAxKSB7DQogICAgICBpZiAobW9kZSA9PT0gJ2RpdicpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICBkaXY6IHRoaXMuZGl2bihudW0ud29yZHNbMF0pLA0KICAgICAgICAgIG1vZDogbnVsbA0KICAgICAgICB9Ow0KICAgICAgfQ0KDQogICAgICBpZiAobW9kZSA9PT0gJ21vZCcpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICBkaXY6IG51bGwsDQogICAgICAgICAgbW9kOiBuZXcgQk4odGhpcy5tb2RuKG51bS53b3Jkc1swXSkpDQogICAgICAgIH07DQogICAgICB9DQoNCiAgICAgIHJldHVybiB7DQogICAgICAgIGRpdjogdGhpcy5kaXZuKG51bS53b3Jkc1swXSksDQogICAgICAgIG1vZDogbmV3IEJOKHRoaXMubW9kbihudW0ud29yZHNbMF0pKQ0KICAgICAgfTsNCiAgICB9DQoNCiAgICByZXR1cm4gdGhpcy5fd29yZERpdihudW0sIG1vZGUpOw0KICB9Ow0KDQogIC8vIEZpbmQgYHRoaXNgIC8gYG51bWANCiAgQk4ucHJvdG90eXBlLmRpdiA9IGZ1bmN0aW9uIGRpdiAobnVtKSB7DQogICAgcmV0dXJuIHRoaXMuZGl2bW9kKG51bSwgJ2RpdicsIGZhbHNlKS5kaXY7DQogIH07DQoNCiAgLy8gRmluZCBgdGhpc2AgJSBgbnVtYA0KICBCTi5wcm90b3R5cGUubW9kID0gZnVuY3Rpb24gbW9kIChudW0pIHsNCiAgICByZXR1cm4gdGhpcy5kaXZtb2QobnVtLCAnbW9kJywgZmFsc2UpLm1vZDsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUudW1vZCA9IGZ1bmN0aW9uIHVtb2QgKG51bSkgew0KICAgIHJldHVybiB0aGlzLmRpdm1vZChudW0sICdtb2QnLCB0cnVlKS5tb2Q7DQogIH07DQoNCiAgLy8gRmluZCBSb3VuZChgdGhpc2AgLyBgbnVtYCkNCiAgQk4ucHJvdG90eXBlLmRpdlJvdW5kID0gZnVuY3Rpb24gZGl2Um91bmQgKG51bSkgew0KICAgIHZhciBkbSA9IHRoaXMuZGl2bW9kKG51bSk7DQoNCiAgICAvLyBGYXN0IGNhc2UgLSBleGFjdCBkaXZpc2lvbg0KICAgIGlmIChkbS5tb2QuaXNaZXJvKCkpIHJldHVybiBkbS5kaXY7DQoNCiAgICB2YXIgbW9kID0gZG0uZGl2Lm5lZ2F0aXZlICE9PSAwID8gZG0ubW9kLmlzdWIobnVtKSA6IGRtLm1vZDsNCg0KICAgIHZhciBoYWxmID0gbnVtLnVzaHJuKDEpOw0KICAgIHZhciByMiA9IG51bS5hbmRsbigxKTsNCiAgICB2YXIgY21wID0gbW9kLmNtcChoYWxmKTsNCg0KICAgIC8vIFJvdW5kIGRvd24NCiAgICBpZiAoY21wIDwgMCB8fCByMiA9PT0gMSAmJiBjbXAgPT09IDApIHJldHVybiBkbS5kaXY7DQoNCiAgICAvLyBSb3VuZCB1cA0KICAgIHJldHVybiBkbS5kaXYubmVnYXRpdmUgIT09IDAgPyBkbS5kaXYuaXN1Ym4oMSkgOiBkbS5kaXYuaWFkZG4oMSk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLm1vZG4gPSBmdW5jdGlvbiBtb2RuIChudW0pIHsNCiAgICBhc3NlcnQobnVtIDw9IDB4M2ZmZmZmZik7DQogICAgdmFyIHAgPSAoMSA8PCAyNikgJSBudW07DQoNCiAgICB2YXIgYWNjID0gMDsNCiAgICBmb3IgKHZhciBpID0gdGhpcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgew0KICAgICAgYWNjID0gKHAgKiBhY2MgKyAodGhpcy53b3Jkc1tpXSB8IDApKSAlIG51bTsNCiAgICB9DQoNCiAgICByZXR1cm4gYWNjOw0KICB9Ow0KDQogIC8vIEluLXBsYWNlIGRpdmlzaW9uIGJ5IG51bWJlcg0KICBCTi5wcm90b3R5cGUuaWRpdm4gPSBmdW5jdGlvbiBpZGl2biAobnVtKSB7DQogICAgYXNzZXJ0KG51bSA8PSAweDNmZmZmZmYpOw0KDQogICAgdmFyIGNhcnJ5ID0gMDsNCiAgICBmb3IgKHZhciBpID0gdGhpcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgew0KICAgICAgdmFyIHcgPSAodGhpcy53b3Jkc1tpXSB8IDApICsgY2FycnkgKiAweDQwMDAwMDA7DQogICAgICB0aGlzLndvcmRzW2ldID0gKHcgLyBudW0pIHwgMDsNCiAgICAgIGNhcnJ5ID0gdyAlIG51bTsNCiAgICB9DQoNCiAgICByZXR1cm4gdGhpcy5zdHJpcCgpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5kaXZuID0gZnVuY3Rpb24gZGl2biAobnVtKSB7DQogICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pZGl2bihudW0pOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5lZ2NkID0gZnVuY3Rpb24gZWdjZCAocCkgew0KICAgIGFzc2VydChwLm5lZ2F0aXZlID09PSAwKTsNCiAgICBhc3NlcnQoIXAuaXNaZXJvKCkpOw0KDQogICAgdmFyIHggPSB0aGlzOw0KICAgIHZhciB5ID0gcC5jbG9uZSgpOw0KDQogICAgaWYgKHgubmVnYXRpdmUgIT09IDApIHsNCiAgICAgIHggPSB4LnVtb2QocCk7DQogICAgfSBlbHNlIHsNCiAgICAgIHggPSB4LmNsb25lKCk7DQogICAgfQ0KDQogICAgLy8gQSAqIHggKyBCICogeSA9IHgNCiAgICB2YXIgQSA9IG5ldyBCTigxKTsNCiAgICB2YXIgQiA9IG5ldyBCTigwKTsNCg0KICAgIC8vIEMgKiB4ICsgRCAqIHkgPSB5DQogICAgdmFyIEMgPSBuZXcgQk4oMCk7DQogICAgdmFyIEQgPSBuZXcgQk4oMSk7DQoNCiAgICB2YXIgZyA9IDA7DQoNCiAgICB3aGlsZSAoeC5pc0V2ZW4oKSAmJiB5LmlzRXZlbigpKSB7DQogICAgICB4Lml1c2hybigxKTsNCiAgICAgIHkuaXVzaHJuKDEpOw0KICAgICAgKytnOw0KICAgIH0NCg0KICAgIHZhciB5cCA9IHkuY2xvbmUoKTsNCiAgICB2YXIgeHAgPSB4LmNsb25lKCk7DQoNCiAgICB3aGlsZSAoIXguaXNaZXJvKCkpIHsNCiAgICAgIGZvciAodmFyIGkgPSAwLCBpbSA9IDE7ICh4LndvcmRzWzBdICYgaW0pID09PSAwICYmIGkgPCAyNjsgKytpLCBpbSA8PD0gMSk7DQogICAgICBpZiAoaSA+IDApIHsNCiAgICAgICAgeC5pdXNocm4oaSk7DQogICAgICAgIHdoaWxlIChpLS0gPiAwKSB7DQogICAgICAgICAgaWYgKEEuaXNPZGQoKSB8fCBCLmlzT2RkKCkpIHsNCiAgICAgICAgICAgIEEuaWFkZCh5cCk7DQogICAgICAgICAgICBCLmlzdWIoeHApOw0KICAgICAgICAgIH0NCg0KICAgICAgICAgIEEuaXVzaHJuKDEpOw0KICAgICAgICAgIEIuaXVzaHJuKDEpOw0KICAgICAgICB9DQogICAgICB9DQoNCiAgICAgIGZvciAodmFyIGogPSAwLCBqbSA9IDE7ICh5LndvcmRzWzBdICYgam0pID09PSAwICYmIGogPCAyNjsgKytqLCBqbSA8PD0gMSk7DQogICAgICBpZiAoaiA+IDApIHsNCiAgICAgICAgeS5pdXNocm4oaik7DQogICAgICAgIHdoaWxlIChqLS0gPiAwKSB7DQogICAgICAgICAgaWYgKEMuaXNPZGQoKSB8fCBELmlzT2RkKCkpIHsNCiAgICAgICAgICAgIEMuaWFkZCh5cCk7DQogICAgICAgICAgICBELmlzdWIoeHApOw0KICAgICAgICAgIH0NCg0KICAgICAgICAgIEMuaXVzaHJuKDEpOw0KICAgICAgICAgIEQuaXVzaHJuKDEpOw0KICAgICAgICB9DQogICAgICB9DQoNCiAgICAgIGlmICh4LmNtcCh5KSA+PSAwKSB7DQogICAgICAgIHguaXN1Yih5KTsNCiAgICAgICAgQS5pc3ViKEMpOw0KICAgICAgICBCLmlzdWIoRCk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICB5LmlzdWIoeCk7DQogICAgICAgIEMuaXN1YihBKTsNCiAgICAgICAgRC5pc3ViKEIpOw0KICAgICAgfQ0KICAgIH0NCg0KICAgIHJldHVybiB7DQogICAgICBhOiBDLA0KICAgICAgYjogRCwNCiAgICAgIGdjZDogeS5pdXNobG4oZykNCiAgICB9Ow0KICB9Ow0KDQogIC8vIFRoaXMgaXMgcmVkdWNlZCBpbmNhcm5hdGlvbiBvZiB0aGUgYmluYXJ5IEVFQQ0KICAvLyBhYm92ZSwgZGVzaWduYXRlZCB0byBpbnZlcnQgbWVtYmVycyBvZiB0aGUNCiAgLy8gX3ByaW1lXyBmaWVsZHMgRihwKSBhdCBhIG1heGltYWwgc3BlZWQNCiAgQk4ucHJvdG90eXBlLl9pbnZtcCA9IGZ1bmN0aW9uIF9pbnZtcCAocCkgew0KICAgIGFzc2VydChwLm5lZ2F0aXZlID09PSAwKTsNCiAgICBhc3NlcnQoIXAuaXNaZXJvKCkpOw0KDQogICAgdmFyIGEgPSB0aGlzOw0KICAgIHZhciBiID0gcC5jbG9uZSgpOw0KDQogICAgaWYgKGEubmVnYXRpdmUgIT09IDApIHsNCiAgICAgIGEgPSBhLnVtb2QocCk7DQogICAgfSBlbHNlIHsNCiAgICAgIGEgPSBhLmNsb25lKCk7DQogICAgfQ0KDQogICAgdmFyIHgxID0gbmV3IEJOKDEpOw0KICAgIHZhciB4MiA9IG5ldyBCTigwKTsNCg0KICAgIHZhciBkZWx0YSA9IGIuY2xvbmUoKTsNCg0KICAgIHdoaWxlIChhLmNtcG4oMSkgPiAwICYmIGIuY21wbigxKSA+IDApIHsNCiAgICAgIGZvciAodmFyIGkgPSAwLCBpbSA9IDE7IChhLndvcmRzWzBdICYgaW0pID09PSAwICYmIGkgPCAyNjsgKytpLCBpbSA8PD0gMSk7DQogICAgICBpZiAoaSA+IDApIHsNCiAgICAgICAgYS5pdXNocm4oaSk7DQogICAgICAgIHdoaWxlIChpLS0gPiAwKSB7DQogICAgICAgICAgaWYgKHgxLmlzT2RkKCkpIHsNCiAgICAgICAgICAgIHgxLmlhZGQoZGVsdGEpOw0KICAgICAgICAgIH0NCg0KICAgICAgICAgIHgxLml1c2hybigxKTsNCiAgICAgICAgfQ0KICAgICAgfQ0KDQogICAgICBmb3IgKHZhciBqID0gMCwgam0gPSAxOyAoYi53b3Jkc1swXSAmIGptKSA9PT0gMCAmJiBqIDwgMjY7ICsraiwgam0gPDw9IDEpOw0KICAgICAgaWYgKGogPiAwKSB7DQogICAgICAgIGIuaXVzaHJuKGopOw0KICAgICAgICB3aGlsZSAoai0tID4gMCkgew0KICAgICAgICAgIGlmICh4Mi5pc09kZCgpKSB7DQogICAgICAgICAgICB4Mi5pYWRkKGRlbHRhKTsNCiAgICAgICAgICB9DQoNCiAgICAgICAgICB4Mi5pdXNocm4oMSk7DQogICAgICAgIH0NCiAgICAgIH0NCg0KICAgICAgaWYgKGEuY21wKGIpID49IDApIHsNCiAgICAgICAgYS5pc3ViKGIpOw0KICAgICAgICB4MS5pc3ViKHgyKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGIuaXN1YihhKTsNCiAgICAgICAgeDIuaXN1Yih4MSk7DQogICAgICB9DQogICAgfQ0KDQogICAgdmFyIHJlczsNCiAgICBpZiAoYS5jbXBuKDEpID09PSAwKSB7DQogICAgICByZXMgPSB4MTsNCiAgICB9IGVsc2Ugew0KICAgICAgcmVzID0geDI7DQogICAgfQ0KDQogICAgaWYgKHJlcy5jbXBuKDApIDwgMCkgew0KICAgICAgcmVzLmlhZGQocCk7DQogICAgfQ0KDQogICAgcmV0dXJuIHJlczsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUuZ2NkID0gZnVuY3Rpb24gZ2NkIChudW0pIHsNCiAgICBpZiAodGhpcy5pc1plcm8oKSkgcmV0dXJuIG51bS5hYnMoKTsNCiAgICBpZiAobnVtLmlzWmVybygpKSByZXR1cm4gdGhpcy5hYnMoKTsNCg0KICAgIHZhciBhID0gdGhpcy5jbG9uZSgpOw0KICAgIHZhciBiID0gbnVtLmNsb25lKCk7DQogICAgYS5uZWdhdGl2ZSA9IDA7DQogICAgYi5uZWdhdGl2ZSA9IDA7DQoNCiAgICAvLyBSZW1vdmUgY29tbW9uIGZhY3RvciBvZiB0d28NCiAgICBmb3IgKHZhciBzaGlmdCA9IDA7IGEuaXNFdmVuKCkgJiYgYi5pc0V2ZW4oKTsgc2hpZnQrKykgew0KICAgICAgYS5pdXNocm4oMSk7DQogICAgICBiLml1c2hybigxKTsNCiAgICB9DQoNCiAgICBkbyB7DQogICAgICB3aGlsZSAoYS5pc0V2ZW4oKSkgew0KICAgICAgICBhLml1c2hybigxKTsNCiAgICAgIH0NCiAgICAgIHdoaWxlIChiLmlzRXZlbigpKSB7DQogICAgICAgIGIuaXVzaHJuKDEpOw0KICAgICAgfQ0KDQogICAgICB2YXIgciA9IGEuY21wKGIpOw0KICAgICAgaWYgKHIgPCAwKSB7DQogICAgICAgIC8vIFN3YXAgYGFgIGFuZCBgYmAgdG8gbWFrZSBgYWAgYWx3YXlzIGJpZ2dlciB0aGFuIGBiYA0KICAgICAgICB2YXIgdCA9IGE7DQogICAgICAgIGEgPSBiOw0KICAgICAgICBiID0gdDsNCiAgICAgIH0gZWxzZSBpZiAociA9PT0gMCB8fCBiLmNtcG4oMSkgPT09IDApIHsNCiAgICAgICAgYnJlYWs7DQogICAgICB9DQoNCiAgICAgIGEuaXN1YihiKTsNCiAgICB9IHdoaWxlICh0cnVlKTsNCg0KICAgIHJldHVybiBiLml1c2hsbihzaGlmdCk7DQogIH07DQoNCiAgLy8gSW52ZXJ0IG51bWJlciBpbiB0aGUgZmllbGQgRihudW0pDQogIEJOLnByb3RvdHlwZS5pbnZtID0gZnVuY3Rpb24gaW52bSAobnVtKSB7DQogICAgcmV0dXJuIHRoaXMuZWdjZChudW0pLmEudW1vZChudW0pOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5pc0V2ZW4gPSBmdW5jdGlvbiBpc0V2ZW4gKCkgew0KICAgIHJldHVybiAodGhpcy53b3Jkc1swXSAmIDEpID09PSAwOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5pc09kZCA9IGZ1bmN0aW9uIGlzT2RkICgpIHsNCiAgICByZXR1cm4gKHRoaXMud29yZHNbMF0gJiAxKSA9PT0gMTsNCiAgfTsNCg0KICAvLyBBbmQgZmlyc3Qgd29yZCBhbmQgbnVtDQogIEJOLnByb3RvdHlwZS5hbmRsbiA9IGZ1bmN0aW9uIGFuZGxuIChudW0pIHsNCiAgICByZXR1cm4gdGhpcy53b3Jkc1swXSAmIG51bTsNCiAgfTsNCg0KICAvLyBJbmNyZW1lbnQgYXQgdGhlIGJpdCBwb3NpdGlvbiBpbi1saW5lDQogIEJOLnByb3RvdHlwZS5iaW5jbiA9IGZ1bmN0aW9uIGJpbmNuIChiaXQpIHsNCiAgICBhc3NlcnQodHlwZW9mIGJpdCA9PT0gJ251bWJlcicpOw0KICAgIHZhciByID0gYml0ICUgMjY7DQogICAgdmFyIHMgPSAoYml0IC0gcikgLyAyNjsNCiAgICB2YXIgcSA9IDEgPDwgcjsNCg0KICAgIC8vIEZhc3QgY2FzZTogYml0IGlzIG11Y2ggaGlnaGVyIHRoYW4gYWxsIGV4aXN0aW5nIHdvcmRzDQogICAgaWYgKHRoaXMubGVuZ3RoIDw9IHMpIHsNCiAgICAgIHRoaXMuX2V4cGFuZChzICsgMSk7DQogICAgICB0aGlzLndvcmRzW3NdIHw9IHE7DQogICAgICByZXR1cm4gdGhpczsNCiAgICB9DQoNCiAgICAvLyBBZGQgYml0IGFuZCBwcm9wYWdhdGUsIGlmIG5lZWRlZA0KICAgIHZhciBjYXJyeSA9IHE7DQogICAgZm9yICh2YXIgaSA9IHM7IGNhcnJ5ICE9PSAwICYmIGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7DQogICAgICB2YXIgdyA9IHRoaXMud29yZHNbaV0gfCAwOw0KICAgICAgdyArPSBjYXJyeTsNCiAgICAgIGNhcnJ5ID0gdyA+Pj4gMjY7DQogICAgICB3ICY9IDB4M2ZmZmZmZjsNCiAgICAgIHRoaXMud29yZHNbaV0gPSB3Ow0KICAgIH0NCiAgICBpZiAoY2FycnkgIT09IDApIHsNCiAgICAgIHRoaXMud29yZHNbaV0gPSBjYXJyeTsNCiAgICAgIHRoaXMubGVuZ3RoKys7DQogICAgfQ0KICAgIHJldHVybiB0aGlzOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5pc1plcm8gPSBmdW5jdGlvbiBpc1plcm8gKCkgew0KICAgIHJldHVybiB0aGlzLmxlbmd0aCA9PT0gMSAmJiB0aGlzLndvcmRzWzBdID09PSAwOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5jbXBuID0gZnVuY3Rpb24gY21wbiAobnVtKSB7DQogICAgdmFyIG5lZ2F0aXZlID0gbnVtIDwgMDsNCg0KICAgIGlmICh0aGlzLm5lZ2F0aXZlICE9PSAwICYmICFuZWdhdGl2ZSkgcmV0dXJuIC0xOw0KICAgIGlmICh0aGlzLm5lZ2F0aXZlID09PSAwICYmIG5lZ2F0aXZlKSByZXR1cm4gMTsNCg0KICAgIHRoaXMuc3RyaXAoKTsNCg0KICAgIHZhciByZXM7DQogICAgaWYgKHRoaXMubGVuZ3RoID4gMSkgew0KICAgICAgcmVzID0gMTsNCiAgICB9IGVsc2Ugew0KICAgICAgaWYgKG5lZ2F0aXZlKSB7DQogICAgICAgIG51bSA9IC1udW07DQogICAgICB9DQoNCiAgICAgIGFzc2VydChudW0gPD0gMHgzZmZmZmZmLCAnTnVtYmVyIGlzIHRvbyBiaWcnKTsNCg0KICAgICAgdmFyIHcgPSB0aGlzLndvcmRzWzBdIHwgMDsNCiAgICAgIHJlcyA9IHcgPT09IG51bSA/IDAgOiB3IDwgbnVtID8gLTEgOiAxOw0KICAgIH0NCiAgICBpZiAodGhpcy5uZWdhdGl2ZSAhPT0gMCkgcmV0dXJuIC1yZXMgfCAwOw0KICAgIHJldHVybiByZXM7DQogIH07DQoNCiAgLy8gQ29tcGFyZSB0d28gbnVtYmVycyBhbmQgcmV0dXJuOg0KICAvLyAxIC0gaWYgYHRoaXNgID4gYG51bWANCiAgLy8gMCAtIGlmIGB0aGlzYCA9PSBgbnVtYA0KICAvLyAtMSAtIGlmIGB0aGlzYCA8IGBudW1gDQogIEJOLnByb3RvdHlwZS5jbXAgPSBmdW5jdGlvbiBjbXAgKG51bSkgew0KICAgIGlmICh0aGlzLm5lZ2F0aXZlICE9PSAwICYmIG51bS5uZWdhdGl2ZSA9PT0gMCkgcmV0dXJuIC0xOw0KICAgIGlmICh0aGlzLm5lZ2F0aXZlID09PSAwICYmIG51bS5uZWdhdGl2ZSAhPT0gMCkgcmV0dXJuIDE7DQoNCiAgICB2YXIgcmVzID0gdGhpcy51Y21wKG51bSk7DQogICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDApIHJldHVybiAtcmVzIHwgMDsNCiAgICByZXR1cm4gcmVzOw0KICB9Ow0KDQogIC8vIFVuc2lnbmVkIGNvbXBhcmlzb24NCiAgQk4ucHJvdG90eXBlLnVjbXAgPSBmdW5jdGlvbiB1Y21wIChudW0pIHsNCiAgICAvLyBBdCB0aGlzIHBvaW50IGJvdGggbnVtYmVycyBoYXZlIHRoZSBzYW1lIHNpZ24NCiAgICBpZiAodGhpcy5sZW5ndGggPiBudW0ubGVuZ3RoKSByZXR1cm4gMTsNCiAgICBpZiAodGhpcy5sZW5ndGggPCBudW0ubGVuZ3RoKSByZXR1cm4gLTE7DQoNCiAgICB2YXIgcmVzID0gMDsNCiAgICBmb3IgKHZhciBpID0gdGhpcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgew0KICAgICAgdmFyIGEgPSB0aGlzLndvcmRzW2ldIHwgMDsNCiAgICAgIHZhciBiID0gbnVtLndvcmRzW2ldIHwgMDsNCg0KICAgICAgaWYgKGEgPT09IGIpIGNvbnRpbnVlOw0KICAgICAgaWYgKGEgPCBiKSB7DQogICAgICAgIHJlcyA9IC0xOw0KICAgICAgfSBlbHNlIGlmIChhID4gYikgew0KICAgICAgICByZXMgPSAxOw0KICAgICAgfQ0KICAgICAgYnJlYWs7DQogICAgfQ0KICAgIHJldHVybiByZXM7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLmd0biA9IGZ1bmN0aW9uIGd0biAobnVtKSB7DQogICAgcmV0dXJuIHRoaXMuY21wbihudW0pID09PSAxOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5ndCA9IGZ1bmN0aW9uIGd0IChudW0pIHsNCiAgICByZXR1cm4gdGhpcy5jbXAobnVtKSA9PT0gMTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUuZ3RlbiA9IGZ1bmN0aW9uIGd0ZW4gKG51bSkgew0KICAgIHJldHVybiB0aGlzLmNtcG4obnVtKSA+PSAwOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5ndGUgPSBmdW5jdGlvbiBndGUgKG51bSkgew0KICAgIHJldHVybiB0aGlzLmNtcChudW0pID49IDA7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLmx0biA9IGZ1bmN0aW9uIGx0biAobnVtKSB7DQogICAgcmV0dXJuIHRoaXMuY21wbihudW0pID09PSAtMTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUubHQgPSBmdW5jdGlvbiBsdCAobnVtKSB7DQogICAgcmV0dXJuIHRoaXMuY21wKG51bSkgPT09IC0xOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5sdGVuID0gZnVuY3Rpb24gbHRlbiAobnVtKSB7DQogICAgcmV0dXJuIHRoaXMuY21wbihudW0pIDw9IDA7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLmx0ZSA9IGZ1bmN0aW9uIGx0ZSAobnVtKSB7DQogICAgcmV0dXJuIHRoaXMuY21wKG51bSkgPD0gMDsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUuZXFuID0gZnVuY3Rpb24gZXFuIChudW0pIHsNCiAgICByZXR1cm4gdGhpcy5jbXBuKG51bSkgPT09IDA7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLmVxID0gZnVuY3Rpb24gZXEgKG51bSkgew0KICAgIHJldHVybiB0aGlzLmNtcChudW0pID09PSAwOw0KICB9Ow0KDQogIC8vDQogIC8vIEEgcmVkdWNlIGNvbnRleHQsIGNvdWxkIGJlIHVzaW5nIG1vbnRnb21lcnkgb3Igc29tZXRoaW5nIGJldHRlciwgZGVwZW5kaW5nDQogIC8vIG9uIHRoZSBgbWAgaXRzZWxmLg0KICAvLw0KICBCTi5yZWQgPSBmdW5jdGlvbiByZWQgKG51bSkgew0KICAgIHJldHVybiBuZXcgUmVkKG51bSk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLnRvUmVkID0gZnVuY3Rpb24gdG9SZWQgKGN0eCkgew0KICAgIGFzc2VydCghdGhpcy5yZWQsICdBbHJlYWR5IGEgbnVtYmVyIGluIHJlZHVjdGlvbiBjb250ZXh0Jyk7DQogICAgYXNzZXJ0KHRoaXMubmVnYXRpdmUgPT09IDAsICdyZWQgd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlcycpOw0KICAgIHJldHVybiBjdHguY29udmVydFRvKHRoaXMpLl9mb3JjZVJlZChjdHgpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5mcm9tUmVkID0gZnVuY3Rpb24gZnJvbVJlZCAoKSB7DQogICAgYXNzZXJ0KHRoaXMucmVkLCAnZnJvbVJlZCB3b3JrcyBvbmx5IHdpdGggbnVtYmVycyBpbiByZWR1Y3Rpb24gY29udGV4dCcpOw0KICAgIHJldHVybiB0aGlzLnJlZC5jb252ZXJ0RnJvbSh0aGlzKTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUuX2ZvcmNlUmVkID0gZnVuY3Rpb24gX2ZvcmNlUmVkIChjdHgpIHsNCiAgICB0aGlzLnJlZCA9IGN0eDsNCiAgICByZXR1cm4gdGhpczsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUuZm9yY2VSZWQgPSBmdW5jdGlvbiBmb3JjZVJlZCAoY3R4KSB7DQogICAgYXNzZXJ0KCF0aGlzLnJlZCwgJ0FscmVhZHkgYSBudW1iZXIgaW4gcmVkdWN0aW9uIGNvbnRleHQnKTsNCiAgICByZXR1cm4gdGhpcy5fZm9yY2VSZWQoY3R4KTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUucmVkQWRkID0gZnVuY3Rpb24gcmVkQWRkIChudW0pIHsNCiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWRBZGQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7DQogICAgcmV0dXJuIHRoaXMucmVkLmFkZCh0aGlzLCBudW0pOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5yZWRJQWRkID0gZnVuY3Rpb24gcmVkSUFkZCAobnVtKSB7DQogICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkSUFkZCB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTsNCiAgICByZXR1cm4gdGhpcy5yZWQuaWFkZCh0aGlzLCBudW0pOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5yZWRTdWIgPSBmdW5jdGlvbiByZWRTdWIgKG51bSkgew0KICAgIGFzc2VydCh0aGlzLnJlZCwgJ3JlZFN1YiB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTsNCiAgICByZXR1cm4gdGhpcy5yZWQuc3ViKHRoaXMsIG51bSk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLnJlZElTdWIgPSBmdW5jdGlvbiByZWRJU3ViIChudW0pIHsNCiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWRJU3ViIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVycycpOw0KICAgIHJldHVybiB0aGlzLnJlZC5pc3ViKHRoaXMsIG51bSk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLnJlZFNobCA9IGZ1bmN0aW9uIHJlZFNobCAobnVtKSB7DQogICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkU2hsIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVycycpOw0KICAgIHJldHVybiB0aGlzLnJlZC5zaGwodGhpcywgbnVtKTsNCiAgfTsNCg0KICBCTi5wcm90b3R5cGUucmVkTXVsID0gZnVuY3Rpb24gcmVkTXVsIChudW0pIHsNCiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWRNdWwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7DQogICAgdGhpcy5yZWQuX3ZlcmlmeTIodGhpcywgbnVtKTsNCiAgICByZXR1cm4gdGhpcy5yZWQubXVsKHRoaXMsIG51bSk7DQogIH07DQoNCiAgQk4ucHJvdG90eXBlLnJlZElNdWwgPSBmdW5jdGlvbiByZWRJTXVsIChudW0pIHsNCiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWRNdWwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7DQogICAgdGhpcy5yZWQuX3ZlcmlmeTIodGhpcywgbnVtKTsNCiAgICByZXR1cm4gdGhpcy5yZWQuaW11bCh0aGlzLCBudW0pOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5yZWRTcXIgPSBmdW5jdGlvbiByZWRTcXIgKCkgew0KICAgIGFzc2VydCh0aGlzLnJlZCwgJ3JlZFNxciB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTsNCiAgICB0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTsNCiAgICByZXR1cm4gdGhpcy5yZWQuc3FyKHRoaXMpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5yZWRJU3FyID0gZnVuY3Rpb24gcmVkSVNxciAoKSB7DQogICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkSVNxciB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTsNCiAgICB0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTsNCiAgICByZXR1cm4gdGhpcy5yZWQuaXNxcih0aGlzKTsNCiAgfTsNCg0KICAvLyBTcXVhcmUgcm9vdCBvdmVyIHANCiAgQk4ucHJvdG90eXBlLnJlZFNxcnQgPSBmdW5jdGlvbiByZWRTcXJ0ICgpIHsNCiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWRTcXJ0IHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVycycpOw0KICAgIHRoaXMucmVkLl92ZXJpZnkxKHRoaXMpOw0KICAgIHJldHVybiB0aGlzLnJlZC5zcXJ0KHRoaXMpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5yZWRJbnZtID0gZnVuY3Rpb24gcmVkSW52bSAoKSB7DQogICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkSW52bSB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTsNCiAgICB0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTsNCiAgICByZXR1cm4gdGhpcy5yZWQuaW52bSh0aGlzKTsNCiAgfTsNCg0KICAvLyBSZXR1cm4gbmVnYXRpdmUgY2xvbmUgb2YgYHRoaXNgICUgYHJlZCBtb2R1bG9gDQogIEJOLnByb3RvdHlwZS5yZWROZWcgPSBmdW5jdGlvbiByZWROZWcgKCkgew0KICAgIGFzc2VydCh0aGlzLnJlZCwgJ3JlZE5lZyB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTsNCiAgICB0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTsNCiAgICByZXR1cm4gdGhpcy5yZWQubmVnKHRoaXMpOw0KICB9Ow0KDQogIEJOLnByb3RvdHlwZS5yZWRQb3cgPSBmdW5jdGlvbiByZWRQb3cgKG51bSkgew0KICAgIGFzc2VydCh0aGlzLnJlZCAmJiAhbnVtLnJlZCwgJ3JlZFBvdyhub3JtYWxOdW0pJyk7DQogICAgdGhpcy5yZWQuX3ZlcmlmeTEodGhpcyk7DQogICAgcmV0dXJuIHRoaXMucmVkLnBvdyh0aGlzLCBudW0pOw0KICB9Ow0KDQogIC8vIFByaW1lIG51bWJlcnMgd2l0aCBlZmZpY2llbnQgcmVkdWN0aW9uDQogIHZhciBwcmltZXMgPSB7DQogICAgazI1NjogbnVsbCwNCiAgICBwMjI0OiBudWxsLA0KICAgIHAxOTI6IG51bGwsDQogICAgcDI1NTE5OiBudWxsDQogIH07DQoNCiAgLy8gUHNldWRvLU1lcnNlbm5lIHByaW1lDQogIGZ1bmN0aW9uIE1QcmltZSAobmFtZSwgcCkgew0KICAgIC8vIFAgPSAyIF4gTiAtIEsNCiAgICB0aGlzLm5hbWUgPSBuYW1lOw0KICAgIHRoaXMucCA9IG5ldyBCTihwLCAxNik7DQogICAgdGhpcy5uID0gdGhpcy5wLmJpdExlbmd0aCgpOw0KICAgIHRoaXMuayA9IG5ldyBCTigxKS5pdXNobG4odGhpcy5uKS5pc3ViKHRoaXMucCk7DQoNCiAgICB0aGlzLnRtcCA9IHRoaXMuX3RtcCgpOw0KICB9DQoNCiAgTVByaW1lLnByb3RvdHlwZS5fdG1wID0gZnVuY3Rpb24gX3RtcCAoKSB7DQogICAgdmFyIHRtcCA9IG5ldyBCTihudWxsKTsNCiAgICB0bXAud29yZHMgPSBuZXcgQXJyYXkoTWF0aC5jZWlsKHRoaXMubiAvIDEzKSk7DQogICAgcmV0dXJuIHRtcDsNCiAgfTsNCg0KICBNUHJpbWUucHJvdG90eXBlLmlyZWR1Y2UgPSBmdW5jdGlvbiBpcmVkdWNlIChudW0pIHsNCiAgICAvLyBBc3N1bWVzIHRoYXQgYG51bWAgaXMgbGVzcyB0aGFuIGBQXjJgDQogICAgLy8gbnVtID0gSEkgKiAoMiBeIE4gLSBLKSArIEhJICogSyArIExPID0gSEkgKiBLICsgTE8gKG1vZCBQKQ0KICAgIHZhciByID0gbnVtOw0KICAgIHZhciBybGVuOw0KDQogICAgZG8gew0KICAgICAgdGhpcy5zcGxpdChyLCB0aGlzLnRtcCk7DQogICAgICByID0gdGhpcy5pbXVsSyhyKTsNCiAgICAgIHIgPSByLmlhZGQodGhpcy50bXApOw0KICAgICAgcmxlbiA9IHIuYml0TGVuZ3RoKCk7DQogICAgfSB3aGlsZSAocmxlbiA+IHRoaXMubik7DQoNCiAgICB2YXIgY21wID0gcmxlbiA8IHRoaXMubiA/IC0xIDogci51Y21wKHRoaXMucCk7DQogICAgaWYgKGNtcCA9PT0gMCkgew0KICAgICAgci53b3Jkc1swXSA9IDA7DQogICAgICByLmxlbmd0aCA9IDE7DQogICAgfSBlbHNlIGlmIChjbXAgPiAwKSB7DQogICAgICByLmlzdWIodGhpcy5wKTsNCiAgICB9IGVsc2Ugew0KICAgICAgci5zdHJpcCgpOw0KICAgIH0NCg0KICAgIHJldHVybiByOw0KICB9Ow0KDQogIE1QcmltZS5wcm90b3R5cGUuc3BsaXQgPSBmdW5jdGlvbiBzcGxpdCAoaW5wdXQsIG91dCkgew0KICAgIGlucHV0Lml1c2hybih0aGlzLm4sIDAsIG91dCk7DQogIH07DQoNCiAgTVByaW1lLnByb3RvdHlwZS5pbXVsSyA9IGZ1bmN0aW9uIGltdWxLIChudW0pIHsNCiAgICByZXR1cm4gbnVtLmltdWwodGhpcy5rKTsNCiAgfTsNCg0KICBmdW5jdGlvbiBLMjU2ICgpIHsNCiAgICBNUHJpbWUuY2FsbCgNCiAgICAgIHRoaXMsDQogICAgICAnazI1NicsDQogICAgICAnZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZjMmYnKTsNCiAgfQ0KICBpbmhlcml0cyhLMjU2LCBNUHJpbWUpOw0KDQogIEsyNTYucHJvdG90eXBlLnNwbGl0ID0gZnVuY3Rpb24gc3BsaXQgKGlucHV0LCBvdXRwdXQpIHsNCiAgICAvLyAyNTYgPSA5ICogMjYgKyAyMg0KICAgIHZhciBtYXNrID0gMHgzZmZmZmY7DQoNCiAgICB2YXIgb3V0TGVuID0gTWF0aC5taW4oaW5wdXQubGVuZ3RoLCA5KTsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG91dExlbjsgaSsrKSB7DQogICAgICBvdXRwdXQud29yZHNbaV0gPSBpbnB1dC53b3Jkc1tpXTsNCiAgICB9DQogICAgb3V0cHV0Lmxlbmd0aCA9IG91dExlbjsNCg0KICAgIGlmIChpbnB1dC5sZW5ndGggPD0gOSkgew0KICAgICAgaW5wdXQud29yZHNbMF0gPSAwOw0KICAgICAgaW5wdXQubGVuZ3RoID0gMTsNCiAgICAgIHJldHVybjsNCiAgICB9DQoNCiAgICAvLyBTaGlmdCBieSA5IGxpbWJzDQogICAgdmFyIHByZXYgPSBpbnB1dC53b3Jkc1s5XTsNCiAgICBvdXRwdXQud29yZHNbb3V0cHV0Lmxlbmd0aCsrXSA9IHByZXYgJiBtYXNrOw0KDQogICAgZm9yIChpID0gMTA7IGkgPCBpbnB1dC5sZW5ndGg7IGkrKykgew0KICAgICAgdmFyIG5leHQgPSBpbnB1dC53b3Jkc1tpXSB8IDA7DQogICAgICBpbnB1dC53b3Jkc1tpIC0gMTBdID0gKChuZXh0ICYgbWFzaykgPDwgNCkgfCAocHJldiA+Pj4gMjIpOw0KICAgICAgcHJldiA9IG5leHQ7DQogICAgfQ0KICAgIHByZXYgPj4+PSAyMjsNCiAgICBpbnB1dC53b3Jkc1tpIC0gMTBdID0gcHJldjsNCiAgICBpZiAocHJldiA9PT0gMCAmJiBpbnB1dC5sZW5ndGggPiAxMCkgew0KICAgICAgaW5wdXQubGVuZ3RoIC09IDEwOw0KICAgIH0gZWxzZSB7DQogICAgICBpbnB1dC5sZW5ndGggLT0gOTsNCiAgICB9DQogIH07DQoNCiAgSzI1Ni5wcm90b3R5cGUuaW11bEsgPSBmdW5jdGlvbiBpbXVsSyAobnVtKSB7DQogICAgLy8gSyA9IDB4MTAwMDAwM2QxID0gWyAweDQwLCAweDNkMSBdDQogICAgbnVtLndvcmRzW251bS5sZW5ndGhdID0gMDsNCiAgICBudW0ud29yZHNbbnVtLmxlbmd0aCArIDFdID0gMDsNCiAgICBudW0ubGVuZ3RoICs9IDI7DQoNCiAgICAvLyBib3VuZGVkIGF0OiAweDQwICogMHgzZmZmZmZmICsgMHgzZDAgPSAweDEwMDAwMDM5MA0KICAgIHZhciBsbyA9IDA7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW0ubGVuZ3RoOyBpKyspIHsNCiAgICAgIHZhciB3ID0gbnVtLndvcmRzW2ldIHwgMDsNCiAgICAgIGxvICs9IHcgKiAweDNkMTsNCiAgICAgIG51bS53b3Jkc1tpXSA9IGxvICYgMHgzZmZmZmZmOw0KICAgICAgbG8gPSB3ICogMHg0MCArICgobG8gLyAweDQwMDAwMDApIHwgMCk7DQogICAgfQ0KDQogICAgLy8gRmFzdCBsZW5ndGggcmVkdWN0aW9uDQogICAgaWYgKG51bS53b3Jkc1tudW0ubGVuZ3RoIC0gMV0gPT09IDApIHsNCiAgICAgIG51bS5sZW5ndGgtLTsNCiAgICAgIGlmIChudW0ud29yZHNbbnVtLmxlbmd0aCAtIDFdID09PSAwKSB7DQogICAgICAgIG51bS5sZW5ndGgtLTsNCiAgICAgIH0NCiAgICB9DQogICAgcmV0dXJuIG51bTsNCiAgfTsNCg0KICBmdW5jdGlvbiBQMjI0ICgpIHsNCiAgICBNUHJpbWUuY2FsbCgNCiAgICAgIHRoaXMsDQogICAgICAncDIyNCcsDQogICAgICAnZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDEnKTsNCiAgfQ0KICBpbmhlcml0cyhQMjI0LCBNUHJpbWUpOw0KDQogIGZ1bmN0aW9uIFAxOTIgKCkgew0KICAgIE1QcmltZS5jYWxsKA0KICAgICAgdGhpcywNCiAgICAgICdwMTkyJywNCiAgICAgICdmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmZmZiBmZmZmZmZmZicpOw0KICB9DQogIGluaGVyaXRzKFAxOTIsIE1QcmltZSk7DQoNCiAgZnVuY3Rpb24gUDI1NTE5ICgpIHsNCiAgICAvLyAyIF4gMjU1IC0gMTkNCiAgICBNUHJpbWUuY2FsbCgNCiAgICAgIHRoaXMsDQogICAgICAnMjU1MTknLA0KICAgICAgJzdmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZWQnKTsNCiAgfQ0KICBpbmhlcml0cyhQMjU1MTksIE1QcmltZSk7DQoNCiAgUDI1NTE5LnByb3RvdHlwZS5pbXVsSyA9IGZ1bmN0aW9uIGltdWxLIChudW0pIHsNCiAgICAvLyBLID0gMHgxMw0KICAgIHZhciBjYXJyeSA9IDA7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW0ubGVuZ3RoOyBpKyspIHsNCiAgICAgIHZhciBoaSA9IChudW0ud29yZHNbaV0gfCAwKSAqIDB4MTMgKyBjYXJyeTsNCiAgICAgIHZhciBsbyA9IGhpICYgMHgzZmZmZmZmOw0KICAgICAgaGkgPj4+PSAyNjsNCg0KICAgICAgbnVtLndvcmRzW2ldID0gbG87DQogICAgICBjYXJyeSA9IGhpOw0KICAgIH0NCiAgICBpZiAoY2FycnkgIT09IDApIHsNCiAgICAgIG51bS53b3Jkc1tudW0ubGVuZ3RoKytdID0gY2Fycnk7DQogICAgfQ0KICAgIHJldHVybiBudW07DQogIH07DQoNCiAgLy8gRXhwb3J0ZWQgbW9zdGx5IGZvciB0ZXN0aW5nIHB1cnBvc2VzLCB1c2UgcGxhaW4gbmFtZSBpbnN0ZWFkDQogIEJOLl9wcmltZSA9IGZ1bmN0aW9uIHByaW1lIChuYW1lKSB7DQogICAgLy8gQ2FjaGVkIHZlcnNpb24gb2YgcHJpbWUNCiAgICBpZiAocHJpbWVzW25hbWVdKSByZXR1cm4gcHJpbWVzW25hbWVdOw0KDQogICAgdmFyIHByaW1lOw0KICAgIGlmIChuYW1lID09PSAnazI1NicpIHsNCiAgICAgIHByaW1lID0gbmV3IEsyNTYoKTsNCiAgICB9IGVsc2UgaWYgKG5hbWUgPT09ICdwMjI0Jykgew0KICAgICAgcHJpbWUgPSBuZXcgUDIyNCgpOw0KICAgIH0gZWxzZSBpZiAobmFtZSA9PT0gJ3AxOTInKSB7DQogICAgICBwcmltZSA9IG5ldyBQMTkyKCk7DQogICAgfSBlbHNlIGlmIChuYW1lID09PSAncDI1NTE5Jykgew0KICAgICAgcHJpbWUgPSBuZXcgUDI1NTE5KCk7DQogICAgfSBlbHNlIHsNCiAgICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biBwcmltZSAnICsgbmFtZSk7DQogICAgfQ0KICAgIHByaW1lc1tuYW1lXSA9IHByaW1lOw0KDQogICAgcmV0dXJuIHByaW1lOw0KICB9Ow0KDQogIC8vDQogIC8vIEJhc2UgcmVkdWN0aW9uIGVuZ2luZQ0KICAvLw0KICBmdW5jdGlvbiBSZWQgKG0pIHsNCiAgICBpZiAodHlwZW9mIG0gPT09ICdzdHJpbmcnKSB7DQogICAgICB2YXIgcHJpbWUgPSBCTi5fcHJpbWUobSk7DQogICAgICB0aGlzLm0gPSBwcmltZS5wOw0KICAgICAgdGhpcy5wcmltZSA9IHByaW1lOw0KICAgIH0gZWxzZSB7DQogICAgICBhc3NlcnQobS5ndG4oMSksICdtb2R1bHVzIG11c3QgYmUgZ3JlYXRlciB0aGFuIDEnKTsNCiAgICAgIHRoaXMubSA9IG07DQogICAgICB0aGlzLnByaW1lID0gbnVsbDsNCiAgICB9DQogIH0NCg0KICBSZWQucHJvdG90eXBlLl92ZXJpZnkxID0gZnVuY3Rpb24gX3ZlcmlmeTEgKGEpIHsNCiAgICBhc3NlcnQoYS5uZWdhdGl2ZSA9PT0gMCwgJ3JlZCB3b3JrcyBvbmx5IHdpdGggcG9zaXRpdmVzJyk7DQogICAgYXNzZXJ0KGEucmVkLCAncmVkIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVycycpOw0KICB9Ow0KDQogIFJlZC5wcm90b3R5cGUuX3ZlcmlmeTIgPSBmdW5jdGlvbiBfdmVyaWZ5MiAoYSwgYikgew0KICAgIGFzc2VydCgoYS5uZWdhdGl2ZSB8IGIubmVnYXRpdmUpID09PSAwLCAncmVkIHdvcmtzIG9ubHkgd2l0aCBwb3NpdGl2ZXMnKTsNCiAgICBhc3NlcnQoYS5yZWQgJiYgYS5yZWQgPT09IGIucmVkLA0KICAgICAgJ3JlZCB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTsNCiAgfTsNCg0KICBSZWQucHJvdG90eXBlLmltb2QgPSBmdW5jdGlvbiBpbW9kIChhKSB7DQogICAgaWYgKHRoaXMucHJpbWUpIHJldHVybiB0aGlzLnByaW1lLmlyZWR1Y2UoYSkuX2ZvcmNlUmVkKHRoaXMpOw0KICAgIHJldHVybiBhLnVtb2QodGhpcy5tKS5fZm9yY2VSZWQodGhpcyk7DQogIH07DQoNCiAgUmVkLnByb3RvdHlwZS5uZWcgPSBmdW5jdGlvbiBuZWcgKGEpIHsNCiAgICBpZiAoYS5pc1plcm8oKSkgew0KICAgICAgcmV0dXJuIGEuY2xvbmUoKTsNCiAgICB9DQoNCiAgICByZXR1cm4gdGhpcy5tLnN1YihhKS5fZm9yY2VSZWQodGhpcyk7DQogIH07DQoNCiAgUmVkLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiBhZGQgKGEsIGIpIHsNCiAgICB0aGlzLl92ZXJpZnkyKGEsIGIpOw0KDQogICAgdmFyIHJlcyA9IGEuYWRkKGIpOw0KICAgIGlmIChyZXMuY21wKHRoaXMubSkgPj0gMCkgew0KICAgICAgcmVzLmlzdWIodGhpcy5tKTsNCiAgICB9DQogICAgcmV0dXJuIHJlcy5fZm9yY2VSZWQodGhpcyk7DQogIH07DQoNCiAgUmVkLnByb3RvdHlwZS5pYWRkID0gZnVuY3Rpb24gaWFkZCAoYSwgYikgew0KICAgIHRoaXMuX3ZlcmlmeTIoYSwgYik7DQoNCiAgICB2YXIgcmVzID0gYS5pYWRkKGIpOw0KICAgIGlmIChyZXMuY21wKHRoaXMubSkgPj0gMCkgew0KICAgICAgcmVzLmlzdWIodGhpcy5tKTsNCiAgICB9DQogICAgcmV0dXJuIHJlczsNCiAgfTsNCg0KICBSZWQucHJvdG90eXBlLnN1YiA9IGZ1bmN0aW9uIHN1YiAoYSwgYikgew0KICAgIHRoaXMuX3ZlcmlmeTIoYSwgYik7DQoNCiAgICB2YXIgcmVzID0gYS5zdWIoYik7DQogICAgaWYgKHJlcy5jbXBuKDApIDwgMCkgew0KICAgICAgcmVzLmlhZGQodGhpcy5tKTsNCiAgICB9DQogICAgcmV0dXJuIHJlcy5fZm9yY2VSZWQodGhpcyk7DQogIH07DQoNCiAgUmVkLnByb3RvdHlwZS5pc3ViID0gZnVuY3Rpb24gaXN1YiAoYSwgYikgew0KICAgIHRoaXMuX3ZlcmlmeTIoYSwgYik7DQoNCiAgICB2YXIgcmVzID0gYS5pc3ViKGIpOw0KICAgIGlmIChyZXMuY21wbigwKSA8IDApIHsNCiAgICAgIHJlcy5pYWRkKHRoaXMubSk7DQogICAgfQ0KICAgIHJldHVybiByZXM7DQogIH07DQoNCiAgUmVkLnByb3RvdHlwZS5zaGwgPSBmdW5jdGlvbiBzaGwgKGEsIG51bSkgew0KICAgIHRoaXMuX3ZlcmlmeTEoYSk7DQogICAgcmV0dXJuIHRoaXMuaW1vZChhLnVzaGxuKG51bSkpOw0KICB9Ow0KDQogIFJlZC5wcm90b3R5cGUuaW11bCA9IGZ1bmN0aW9uIGltdWwgKGEsIGIpIHsNCiAgICB0aGlzLl92ZXJpZnkyKGEsIGIpOw0KICAgIHJldHVybiB0aGlzLmltb2QoYS5pbXVsKGIpKTsNCiAgfTsNCg0KICBSZWQucHJvdG90eXBlLm11bCA9IGZ1bmN0aW9uIG11bCAoYSwgYikgew0KICAgIHRoaXMuX3ZlcmlmeTIoYSwgYik7DQogICAgcmV0dXJuIHRoaXMuaW1vZChhLm11bChiKSk7DQogIH07DQoNCiAgUmVkLnByb3RvdHlwZS5pc3FyID0gZnVuY3Rpb24gaXNxciAoYSkgew0KICAgIHJldHVybiB0aGlzLmltdWwoYSwgYS5jbG9uZSgpKTsNCiAgfTsNCg0KICBSZWQucHJvdG90eXBlLnNxciA9IGZ1bmN0aW9uIHNxciAoYSkgew0KICAgIHJldHVybiB0aGlzLm11bChhLCBhKTsNCiAgfTsNCg0KICBSZWQucHJvdG90eXBlLnNxcnQgPSBmdW5jdGlvbiBzcXJ0IChhKSB7DQogICAgaWYgKGEuaXNaZXJvKCkpIHJldHVybiBhLmNsb25lKCk7DQoNCiAgICB2YXIgbW9kMyA9IHRoaXMubS5hbmRsbigzKTsNCiAgICBhc3NlcnQobW9kMyAlIDIgPT09IDEpOw0KDQogICAgLy8gRmFzdCBjYXNlDQogICAgaWYgKG1vZDMgPT09IDMpIHsNCiAgICAgIHZhciBwb3cgPSB0aGlzLm0uYWRkKG5ldyBCTigxKSkuaXVzaHJuKDIpOw0KICAgICAgcmV0dXJuIHRoaXMucG93KGEsIHBvdyk7DQogICAgfQ0KDQogICAgLy8gVG9uZWxsaS1TaGFua3MgYWxnb3JpdGhtIChUb3RhbGx5IHVub3B0aW1pemVkIGFuZCBzbG93KQ0KICAgIC8vDQogICAgLy8gRmluZCBRIGFuZCBTLCB0aGF0IFEgKiAyIF4gUyA9IChQIC0gMSkNCiAgICB2YXIgcSA9IHRoaXMubS5zdWJuKDEpOw0KICAgIHZhciBzID0gMDsNCiAgICB3aGlsZSAoIXEuaXNaZXJvKCkgJiYgcS5hbmRsbigxKSA9PT0gMCkgew0KICAgICAgcysrOw0KICAgICAgcS5pdXNocm4oMSk7DQogICAgfQ0KICAgIGFzc2VydCghcS5pc1plcm8oKSk7DQoNCiAgICB2YXIgb25lID0gbmV3IEJOKDEpLnRvUmVkKHRoaXMpOw0KICAgIHZhciBuT25lID0gb25lLnJlZE5lZygpOw0KDQogICAgLy8gRmluZCBxdWFkcmF0aWMgbm9uLXJlc2lkdWUNCiAgICAvLyBOT1RFOiBNYXggaXMgc3VjaCBiZWNhdXNlIG9mIGdlbmVyYWxpemVkIFJpZW1hbm4gaHlwb3RoZXNpcy4NCiAgICB2YXIgbHBvdyA9IHRoaXMubS5zdWJuKDEpLml1c2hybigxKTsNCiAgICB2YXIgeiA9IHRoaXMubS5iaXRMZW5ndGgoKTsNCiAgICB6ID0gbmV3IEJOKDIgKiB6ICogeikudG9SZWQodGhpcyk7DQoNCiAgICB3aGlsZSAodGhpcy5wb3coeiwgbHBvdykuY21wKG5PbmUpICE9PSAwKSB7DQogICAgICB6LnJlZElBZGQobk9uZSk7DQogICAgfQ0KDQogICAgdmFyIGMgPSB0aGlzLnBvdyh6LCBxKTsNCiAgICB2YXIgciA9IHRoaXMucG93KGEsIHEuYWRkbigxKS5pdXNocm4oMSkpOw0KICAgIHZhciB0ID0gdGhpcy5wb3coYSwgcSk7DQogICAgdmFyIG0gPSBzOw0KICAgIHdoaWxlICh0LmNtcChvbmUpICE9PSAwKSB7DQogICAgICB2YXIgdG1wID0gdDsNCiAgICAgIGZvciAodmFyIGkgPSAwOyB0bXAuY21wKG9uZSkgIT09IDA7IGkrKykgew0KICAgICAgICB0bXAgPSB0bXAucmVkU3FyKCk7DQogICAgICB9DQogICAgICBhc3NlcnQoaSA8IG0pOw0KICAgICAgdmFyIGIgPSB0aGlzLnBvdyhjLCBuZXcgQk4oMSkuaXVzaGxuKG0gLSBpIC0gMSkpOw0KDQogICAgICByID0gci5yZWRNdWwoYik7DQogICAgICBjID0gYi5yZWRTcXIoKTsNCiAgICAgIHQgPSB0LnJlZE11bChjKTsNCiAgICAgIG0gPSBpOw0KICAgIH0NCg0KICAgIHJldHVybiByOw0KICB9Ow0KDQogIFJlZC5wcm90b3R5cGUuaW52bSA9IGZ1bmN0aW9uIGludm0gKGEpIHsNCiAgICB2YXIgaW52ID0gYS5faW52bXAodGhpcy5tKTsNCiAgICBpZiAoaW52Lm5lZ2F0aXZlICE9PSAwKSB7DQogICAgICBpbnYubmVnYXRpdmUgPSAwOw0KICAgICAgcmV0dXJuIHRoaXMuaW1vZChpbnYpLnJlZE5lZygpOw0KICAgIH0gZWxzZSB7DQogICAgICByZXR1cm4gdGhpcy5pbW9kKGludik7DQogICAgfQ0KICB9Ow0KDQogIFJlZC5wcm90b3R5cGUucG93ID0gZnVuY3Rpb24gcG93IChhLCBudW0pIHsNCiAgICBpZiAobnVtLmlzWmVybygpKSByZXR1cm4gbmV3IEJOKDEpOw0KICAgIGlmIChudW0uY21wbigxKSA9PT0gMCkgcmV0dXJuIGEuY2xvbmUoKTsNCg0KICAgIHZhciB3aW5kb3dTaXplID0gNDsNCiAgICB2YXIgd25kID0gbmV3IEFycmF5KDEgPDwgd2luZG93U2l6ZSk7DQogICAgd25kWzBdID0gbmV3IEJOKDEpLnRvUmVkKHRoaXMpOw0KICAgIHduZFsxXSA9IGE7DQogICAgZm9yICh2YXIgaSA9IDI7IGkgPCB3bmQubGVuZ3RoOyBpKyspIHsNCiAgICAgIHduZFtpXSA9IHRoaXMubXVsKHduZFtpIC0gMV0sIGEpOw0KICAgIH0NCg0KICAgIHZhciByZXMgPSB3bmRbMF07DQogICAgdmFyIGN1cnJlbnQgPSAwOw0KICAgIHZhciBjdXJyZW50TGVuID0gMDsNCiAgICB2YXIgc3RhcnQgPSBudW0uYml0TGVuZ3RoKCkgJSAyNjsNCiAgICBpZiAoc3RhcnQgPT09IDApIHsNCiAgICAgIHN0YXJ0ID0gMjY7DQogICAgfQ0KDQogICAgZm9yIChpID0gbnVtLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7DQogICAgICB2YXIgd29yZCA9IG51bS53b3Jkc1tpXTsNCiAgICAgIGZvciAodmFyIGogPSBzdGFydCAtIDE7IGogPj0gMDsgai0tKSB7DQogICAgICAgIHZhciBiaXQgPSAod29yZCA+PiBqKSAmIDE7DQogICAgICAgIGlmIChyZXMgIT09IHduZFswXSkgew0KICAgICAgICAgIHJlcyA9IHRoaXMuc3FyKHJlcyk7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoYml0ID09PSAwICYmIGN1cnJlbnQgPT09IDApIHsNCiAgICAgICAgICBjdXJyZW50TGVuID0gMDsNCiAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgfQ0KDQogICAgICAgIGN1cnJlbnQgPDw9IDE7DQogICAgICAgIGN1cnJlbnQgfD0gYml0Ow0KICAgICAgICBjdXJyZW50TGVuKys7DQogICAgICAgIGlmIChjdXJyZW50TGVuICE9PSB3aW5kb3dTaXplICYmIChpICE9PSAwIHx8IGogIT09IDApKSBjb250aW51ZTsNCg0KICAgICAgICByZXMgPSB0aGlzLm11bChyZXMsIHduZFtjdXJyZW50XSk7DQogICAgICAgIGN1cnJlbnRMZW4gPSAwOw0KICAgICAgICBjdXJyZW50ID0gMDsNCiAgICAgIH0NCiAgICAgIHN0YXJ0ID0gMjY7DQogICAgfQ0KDQogICAgcmV0dXJuIHJlczsNCiAgfTsNCg0KICBSZWQucHJvdG90eXBlLmNvbnZlcnRUbyA9IGZ1bmN0aW9uIGNvbnZlcnRUbyAobnVtKSB7DQogICAgdmFyIHIgPSBudW0udW1vZCh0aGlzLm0pOw0KDQogICAgcmV0dXJuIHIgPT09IG51bSA/IHIuY2xvbmUoKSA6IHI7DQogIH07DQoNCiAgUmVkLnByb3RvdHlwZS5jb252ZXJ0RnJvbSA9IGZ1bmN0aW9uIGNvbnZlcnRGcm9tIChudW0pIHsNCiAgICB2YXIgcmVzID0gbnVtLmNsb25lKCk7DQogICAgcmVzLnJlZCA9IG51bGw7DQogICAgcmV0dXJuIHJlczsNCiAgfTsNCg0KICAvLw0KICAvLyBNb250Z29tZXJ5IG1ldGhvZCBlbmdpbmUNCiAgLy8NCg0KICBCTi5tb250ID0gZnVuY3Rpb24gbW9udCAobnVtKSB7DQogICAgcmV0dXJuIG5ldyBNb250KG51bSk7DQogIH07DQoNCiAgZnVuY3Rpb24gTW9udCAobSkgew0KICAgIFJlZC5jYWxsKHRoaXMsIG0pOw0KDQogICAgdGhpcy5zaGlmdCA9IHRoaXMubS5iaXRMZW5ndGgoKTsNCiAgICBpZiAodGhpcy5zaGlmdCAlIDI2ICE9PSAwKSB7DQogICAgICB0aGlzLnNoaWZ0ICs9IDI2IC0gKHRoaXMuc2hpZnQgJSAyNik7DQogICAgfQ0KDQogICAgdGhpcy5yID0gbmV3IEJOKDEpLml1c2hsbih0aGlzLnNoaWZ0KTsNCiAgICB0aGlzLnIyID0gdGhpcy5pbW9kKHRoaXMuci5zcXIoKSk7DQogICAgdGhpcy5yaW52ID0gdGhpcy5yLl9pbnZtcCh0aGlzLm0pOw0KDQogICAgdGhpcy5taW52ID0gdGhpcy5yaW52Lm11bCh0aGlzLnIpLmlzdWJuKDEpLmRpdih0aGlzLm0pOw0KICAgIHRoaXMubWludiA9IHRoaXMubWludi51bW9kKHRoaXMucik7DQogICAgdGhpcy5taW52ID0gdGhpcy5yLnN1Yih0aGlzLm1pbnYpOw0KICB9DQogIGluaGVyaXRzKE1vbnQsIFJlZCk7DQoNCiAgTW9udC5wcm90b3R5cGUuY29udmVydFRvID0gZnVuY3Rpb24gY29udmVydFRvIChudW0pIHsNCiAgICByZXR1cm4gdGhpcy5pbW9kKG51bS51c2hsbih0aGlzLnNoaWZ0KSk7DQogIH07DQoNCiAgTW9udC5wcm90b3R5cGUuY29udmVydEZyb20gPSBmdW5jdGlvbiBjb252ZXJ0RnJvbSAobnVtKSB7DQogICAgdmFyIHIgPSB0aGlzLmltb2QobnVtLm11bCh0aGlzLnJpbnYpKTsNCiAgICByLnJlZCA9IG51bGw7DQogICAgcmV0dXJuIHI7DQogIH07DQoNCiAgTW9udC5wcm90b3R5cGUuaW11bCA9IGZ1bmN0aW9uIGltdWwgKGEsIGIpIHsNCiAgICBpZiAoYS5pc1plcm8oKSB8fCBiLmlzWmVybygpKSB7DQogICAgICBhLndvcmRzWzBdID0gMDsNCiAgICAgIGEubGVuZ3RoID0gMTsNCiAgICAgIHJldHVybiBhOw0KICAgIH0NCg0KICAgIHZhciB0ID0gYS5pbXVsKGIpOw0KICAgIHZhciBjID0gdC5tYXNrbih0aGlzLnNoaWZ0KS5tdWwodGhpcy5taW52KS5pbWFza24odGhpcy5zaGlmdCkubXVsKHRoaXMubSk7DQogICAgdmFyIHUgPSB0LmlzdWIoYykuaXVzaHJuKHRoaXMuc2hpZnQpOw0KICAgIHZhciByZXMgPSB1Ow0KDQogICAgaWYgKHUuY21wKHRoaXMubSkgPj0gMCkgew0KICAgICAgcmVzID0gdS5pc3ViKHRoaXMubSk7DQogICAgfSBlbHNlIGlmICh1LmNtcG4oMCkgPCAwKSB7DQogICAgICByZXMgPSB1LmlhZGQodGhpcy5tKTsNCiAgICB9DQoNCiAgICByZXR1cm4gcmVzLl9mb3JjZVJlZCh0aGlzKTsNCiAgfTsNCg0KICBNb250LnByb3RvdHlwZS5tdWwgPSBmdW5jdGlvbiBtdWwgKGEsIGIpIHsNCiAgICBpZiAoYS5pc1plcm8oKSB8fCBiLmlzWmVybygpKSByZXR1cm4gbmV3IEJOKDApLl9mb3JjZVJlZCh0aGlzKTsNCg0KICAgIHZhciB0ID0gYS5tdWwoYik7DQogICAgdmFyIGMgPSB0Lm1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm1pbnYpLmltYXNrbih0aGlzLnNoaWZ0KS5tdWwodGhpcy5tKTsNCiAgICB2YXIgdSA9IHQuaXN1YihjKS5pdXNocm4odGhpcy5zaGlmdCk7DQogICAgdmFyIHJlcyA9IHU7DQogICAgaWYgKHUuY21wKHRoaXMubSkgPj0gMCkgew0KICAgICAgcmVzID0gdS5pc3ViKHRoaXMubSk7DQogICAgfSBlbHNlIGlmICh1LmNtcG4oMCkgPCAwKSB7DQogICAgICByZXMgPSB1LmlhZGQodGhpcy5tKTsNCiAgICB9DQoNCiAgICByZXR1cm4gcmVzLl9mb3JjZVJlZCh0aGlzKTsNCiAgfTsNCg0KICBNb250LnByb3RvdHlwZS5pbnZtID0gZnVuY3Rpb24gaW52bSAoYSkgew0KICAgIC8vIChBUileLTEgKiBSXjIgPSAoQV4tMSAqIFJeLTEpICogUl4yID0gQV4tMSAqIFINCiAgICB2YXIgcmVzID0gdGhpcy5pbW9kKGEuX2ludm1wKHRoaXMubSkubXVsKHRoaXMucjIpKTsNCiAgICByZXR1cm4gcmVzLl9mb3JjZVJlZCh0aGlzKTsNCiAgfTsNCn0pKHR5cGVvZiBtb2R1bGUgPT09ICd1bmRlZmluZWQnIHx8IG1vZHVsZSwgdGhpcyk7DQoNCn0se31dLDYwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciByOw0KDQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJhbmQobGVuKSB7DQogIGlmICghcikNCiAgICByID0gbmV3IFJhbmQobnVsbCk7DQoNCiAgcmV0dXJuIHIuZ2VuZXJhdGUobGVuKTsNCn07DQoNCmZ1bmN0aW9uIFJhbmQocmFuZCkgew0KICB0aGlzLnJhbmQgPSByYW5kOw0KfQ0KbW9kdWxlLmV4cG9ydHMuUmFuZCA9IFJhbmQ7DQoNClJhbmQucHJvdG90eXBlLmdlbmVyYXRlID0gZnVuY3Rpb24gZ2VuZXJhdGUobGVuKSB7DQogIHJldHVybiB0aGlzLl9yYW5kKGxlbik7DQp9Ow0KDQppZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHsNCiAgaWYgKHdpbmRvdy5jcnlwdG8gJiYgd2luZG93LmNyeXB0by5nZXRSYW5kb21WYWx1ZXMpIHsNCiAgICAvLyBNb2Rlcm4gYnJvd3NlcnMNCiAgICBSYW5kLnByb3RvdHlwZS5fcmFuZCA9IGZ1bmN0aW9uIF9yYW5kKG4pIHsNCiAgICAgIHZhciBhcnIgPSBuZXcgVWludDhBcnJheShuKTsNCiAgICAgIHdpbmRvdy5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKGFycik7DQogICAgICByZXR1cm4gYXJyOw0KICAgIH07DQogIH0gZWxzZSBpZiAod2luZG93Lm1zQ3J5cHRvICYmIHdpbmRvdy5tc0NyeXB0by5nZXRSYW5kb21WYWx1ZXMpIHsNCiAgICAvLyBJRQ0KICAgIFJhbmQucHJvdG90eXBlLl9yYW5kID0gZnVuY3Rpb24gX3JhbmQobikgew0KICAgICAgdmFyIGFyciA9IG5ldyBVaW50OEFycmF5KG4pOw0KICAgICAgd2luZG93Lm1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcyhhcnIpOw0KICAgICAgcmV0dXJuIGFycjsNCiAgICB9Ow0KICB9IGVsc2Ugew0KICAgIC8vIE9sZCBqdW5rDQogICAgUmFuZC5wcm90b3R5cGUuX3JhbmQgPSBmdW5jdGlvbigpIHsNCiAgICAgIHRocm93IG5ldyBFcnJvcignTm90IGltcGxlbWVudGVkIHlldCcpOw0KICAgIH07DQogIH0NCn0gZWxzZSB7DQogIC8vIE5vZGUuanMgb3IgV2ViIHdvcmtlcg0KICB0cnkgew0KICAgIHZhciBjcnlwdG8gPSByZXF1aXJlKCdjcnknICsgJ3B0bycpOw0KDQogICAgUmFuZC5wcm90b3R5cGUuX3JhbmQgPSBmdW5jdGlvbiBfcmFuZChuKSB7DQogICAgICByZXR1cm4gY3J5cHRvLnJhbmRvbUJ5dGVzKG4pOw0KICAgIH07DQogIH0gY2F0Y2ggKGUpIHsNCiAgICAvLyBFbXVsYXRlIGNyeXB0byBBUEkgdXNpbmcgcmFuZHkNCiAgICBSYW5kLnByb3RvdHlwZS5fcmFuZCA9IGZ1bmN0aW9uIF9yYW5kKG4pIHsNCiAgICAgIHZhciByZXMgPSBuZXcgVWludDhBcnJheShuKTsNCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzLmxlbmd0aDsgaSsrKQ0KICAgICAgICByZXNbaV0gPSB0aGlzLnJhbmQuZ2V0Qnl0ZSgpOw0KICAgICAgcmV0dXJuIHJlczsNCiAgICB9Ow0KICB9DQp9DQoNCn0se31dLDYxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCg0KfSx7fV0sNjI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KLy8gYmFzZWQgb24gdGhlIGFlcyBpbXBsaW1lbnRhdGlvbiBpbiB0cmlwbGUgc2VjDQovLyBodHRwczovL2dpdGh1Yi5jb20va2V5YmFzZS90cmlwbGVzZWMNCg0KLy8gd2hpY2ggaXMgaW4gdHVybiBiYXNlZCBvbiB0aGUgb25lIGZyb20gY3J5cHRvLWpzDQovLyBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2NyeXB0by1qcy8NCg0KdmFyIHVpbnRfbWF4ID0gTWF0aC5wb3coMiwgMzIpDQpmdW5jdGlvbiBmaXh1cF91aW50MzIgKHgpIHsNCiAgdmFyIHJldCwgeF9wb3MNCiAgcmV0ID0geCA+IHVpbnRfbWF4IHx8IHggPCAwID8gKHhfcG9zID0gTWF0aC5hYnMoeCkgJSB1aW50X21heCwgeCA8IDAgPyB1aW50X21heCAtIHhfcG9zIDogeF9wb3MpIDogeA0KICByZXR1cm4gcmV0DQp9DQpmdW5jdGlvbiBzY3J1Yl92ZWMgKHYpIHsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2Lmxlbmd0aDsgdisrKSB7DQogICAgdltpXSA9IDANCiAgfQ0KICByZXR1cm4gZmFsc2UNCn0NCg0KZnVuY3Rpb24gR2xvYmFsICgpIHsNCiAgdGhpcy5TQk9YID0gW10NCiAgdGhpcy5JTlZfU0JPWCA9IFtdDQogIHRoaXMuU1VCX01JWCA9IFtbXSwgW10sIFtdLCBbXV0NCiAgdGhpcy5JTlZfU1VCX01JWCA9IFtbXSwgW10sIFtdLCBbXV0NCiAgdGhpcy5pbml0KCkNCiAgdGhpcy5SQ09OID0gWzB4MDAsIDB4MDEsIDB4MDIsIDB4MDQsIDB4MDgsIDB4MTAsIDB4MjAsIDB4NDAsIDB4ODAsIDB4MWIsIDB4MzZdDQp9DQoNCkdsb2JhbC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHsNCiAgdmFyIGQsIGksIHN4LCB0LCB4LCB4MiwgeDQsIHg4LCB4aSwgX2kNCiAgZCA9IChmdW5jdGlvbiAoKSB7DQogICAgdmFyIF9pLCBfcmVzdWx0cw0KICAgIF9yZXN1bHRzID0gW10NCiAgICBmb3IgKGkgPSBfaSA9IDA7IF9pIDwgMjU2OyBpID0gKytfaSkgew0KICAgICAgaWYgKGkgPCAxMjgpIHsNCiAgICAgICAgX3Jlc3VsdHMucHVzaChpIDw8IDEpDQogICAgICB9IGVsc2Ugew0KICAgICAgICBfcmVzdWx0cy5wdXNoKChpIDw8IDEpIF4gMHgxMWIpDQogICAgICB9DQogICAgfQ0KICAgIHJldHVybiBfcmVzdWx0cw0KICB9KSgpDQogIHggPSAwDQogIHhpID0gMA0KICBmb3IgKGkgPSBfaSA9IDA7IF9pIDwgMjU2OyBpID0gKytfaSkgew0KICAgIHN4ID0geGkgXiAoeGkgPDwgMSkgXiAoeGkgPDwgMikgXiAoeGkgPDwgMykgXiAoeGkgPDwgNCkNCiAgICBzeCA9IChzeCA+Pj4gOCkgXiAoc3ggJiAweGZmKSBeIDB4NjMNCiAgICB0aGlzLlNCT1hbeF0gPSBzeA0KICAgIHRoaXMuSU5WX1NCT1hbc3hdID0geA0KICAgIHgyID0gZFt4XQ0KICAgIHg0ID0gZFt4Ml0NCiAgICB4OCA9IGRbeDRdDQogICAgdCA9IChkW3N4XSAqIDB4MTAxKSBeIChzeCAqIDB4MTAxMDEwMCkNCiAgICB0aGlzLlNVQl9NSVhbMF1beF0gPSAodCA8PCAyNCkgfCAodCA+Pj4gOCkNCiAgICB0aGlzLlNVQl9NSVhbMV1beF0gPSAodCA8PCAxNikgfCAodCA+Pj4gMTYpDQogICAgdGhpcy5TVUJfTUlYWzJdW3hdID0gKHQgPDwgOCkgfCAodCA+Pj4gMjQpDQogICAgdGhpcy5TVUJfTUlYWzNdW3hdID0gdA0KICAgIHQgPSAoeDggKiAweDEwMTAxMDEpIF4gKHg0ICogMHgxMDAwMSkgXiAoeDIgKiAweDEwMSkgXiAoeCAqIDB4MTAxMDEwMCkNCiAgICB0aGlzLklOVl9TVUJfTUlYWzBdW3N4XSA9ICh0IDw8IDI0KSB8ICh0ID4+PiA4KQ0KICAgIHRoaXMuSU5WX1NVQl9NSVhbMV1bc3hdID0gKHQgPDwgMTYpIHwgKHQgPj4+IDE2KQ0KICAgIHRoaXMuSU5WX1NVQl9NSVhbMl1bc3hdID0gKHQgPDwgOCkgfCAodCA+Pj4gMjQpDQogICAgdGhpcy5JTlZfU1VCX01JWFszXVtzeF0gPSB0DQogICAgaWYgKHggPT09IDApIHsNCiAgICAgIHggPSB4aSA9IDENCiAgICB9IGVsc2Ugew0KICAgICAgeCA9IHgyIF4gZFtkW2RbeDggXiB4Ml1dXQ0KICAgICAgeGkgXj0gZFtkW3hpXV0NCiAgICB9DQogIH0NCiAgcmV0dXJuIHRydWUNCn0NCg0KdmFyIEcgPSBuZXcgR2xvYmFsKCkNCg0KQUVTLmJsb2NrU2l6ZSA9IDQgKiA0DQoNCkFFUy5wcm90b3R5cGUuYmxvY2tTaXplID0gQUVTLmJsb2NrU2l6ZQ0KDQpBRVMua2V5U2l6ZSA9IDI1NiAvIDgNCg0KQUVTLnByb3RvdHlwZS5rZXlTaXplID0gQUVTLmtleVNpemUNCg0KZnVuY3Rpb24gYnVmZmVyVG9BcnJheSAoYnVmKSB7DQogIHZhciBsZW4gPSBidWYubGVuZ3RoIC8gNA0KICB2YXIgb3V0ID0gbmV3IEFycmF5KGxlbikNCiAgdmFyIGkgPSAtMQ0KICB3aGlsZSAoKytpIDwgbGVuKSB7DQogICAgb3V0W2ldID0gYnVmLnJlYWRVSW50MzJCRShpICogNCkNCiAgfQ0KICByZXR1cm4gb3V0DQp9DQpmdW5jdGlvbiBBRVMgKGtleSkgew0KICB0aGlzLl9rZXkgPSBidWZmZXJUb0FycmF5KGtleSkNCiAgdGhpcy5fZG9SZXNldCgpDQp9DQoNCkFFUy5wcm90b3R5cGUuX2RvUmVzZXQgPSBmdW5jdGlvbiAoKSB7DQogIHZhciBpbnZLc1Jvdywga2V5U2l6ZSwga2V5V29yZHMsIGtzUm93LCBrc1Jvd3MsIHQNCiAga2V5V29yZHMgPSB0aGlzLl9rZXkNCiAga2V5U2l6ZSA9IGtleVdvcmRzLmxlbmd0aA0KICB0aGlzLl9uUm91bmRzID0ga2V5U2l6ZSArIDYNCiAga3NSb3dzID0gKHRoaXMuX25Sb3VuZHMgKyAxKSAqIDQNCiAgdGhpcy5fa2V5U2NoZWR1bGUgPSBbXQ0KICBmb3IgKGtzUm93ID0gMDsga3NSb3cgPCBrc1Jvd3M7IGtzUm93KyspIHsNCiAgICB0aGlzLl9rZXlTY2hlZHVsZVtrc1Jvd10gPSBrc1JvdyA8IGtleVNpemUgPyBrZXlXb3Jkc1trc1Jvd10gOiAodCA9IHRoaXMuX2tleVNjaGVkdWxlW2tzUm93IC0gMV0sIChrc1JvdyAlIGtleVNpemUpID09PSAwID8gKHQgPSAodCA8PCA4KSB8ICh0ID4+PiAyNCksIHQgPSAoRy5TQk9YW3QgPj4+IDI0XSA8PCAyNCkgfCAoRy5TQk9YWyh0ID4+PiAxNikgJiAweGZmXSA8PCAxNikgfCAoRy5TQk9YWyh0ID4+PiA4KSAmIDB4ZmZdIDw8IDgpIHwgRy5TQk9YW3QgJiAweGZmXSwgdCBePSBHLlJDT05bKGtzUm93IC8ga2V5U2l6ZSkgfCAwXSA8PCAyNCkgOiBrZXlTaXplID4gNiAmJiBrc1JvdyAlIGtleVNpemUgPT09IDQgPyB0ID0gKEcuU0JPWFt0ID4+PiAyNF0gPDwgMjQpIHwgKEcuU0JPWFsodCA+Pj4gMTYpICYgMHhmZl0gPDwgMTYpIHwgKEcuU0JPWFsodCA+Pj4gOCkgJiAweGZmXSA8PCA4KSB8IEcuU0JPWFt0ICYgMHhmZl0gOiB2b2lkIDAsIHRoaXMuX2tleVNjaGVkdWxlW2tzUm93IC0ga2V5U2l6ZV0gXiB0KQ0KICB9DQogIHRoaXMuX2ludktleVNjaGVkdWxlID0gW10NCiAgZm9yIChpbnZLc1JvdyA9IDA7IGludktzUm93IDwga3NSb3dzOyBpbnZLc1JvdysrKSB7DQogICAga3NSb3cgPSBrc1Jvd3MgLSBpbnZLc1Jvdw0KICAgIHQgPSB0aGlzLl9rZXlTY2hlZHVsZVtrc1JvdyAtIChpbnZLc1JvdyAlIDQgPyAwIDogNCldDQogICAgdGhpcy5faW52S2V5U2NoZWR1bGVbaW52S3NSb3ddID0gaW52S3NSb3cgPCA0IHx8IGtzUm93IDw9IDQgPyB0IDogRy5JTlZfU1VCX01JWFswXVtHLlNCT1hbdCA+Pj4gMjRdXSBeIEcuSU5WX1NVQl9NSVhbMV1bRy5TQk9YWyh0ID4+PiAxNikgJiAweGZmXV0gXiBHLklOVl9TVUJfTUlYWzJdW0cuU0JPWFsodCA+Pj4gOCkgJiAweGZmXV0gXiBHLklOVl9TVUJfTUlYWzNdW0cuU0JPWFt0ICYgMHhmZl1dDQogIH0NCiAgcmV0dXJuIHRydWUNCn0NCg0KQUVTLnByb3RvdHlwZS5lbmNyeXB0QmxvY2sgPSBmdW5jdGlvbiAoTSkgew0KICBNID0gYnVmZmVyVG9BcnJheShuZXcgQnVmZmVyKE0pKQ0KICB2YXIgb3V0ID0gdGhpcy5fZG9DcnlwdEJsb2NrKE0sIHRoaXMuX2tleVNjaGVkdWxlLCBHLlNVQl9NSVgsIEcuU0JPWCkNCiAgdmFyIGJ1ZiA9IG5ldyBCdWZmZXIoMTYpDQogIGJ1Zi53cml0ZVVJbnQzMkJFKG91dFswXSwgMCkNCiAgYnVmLndyaXRlVUludDMyQkUob3V0WzFdLCA0KQ0KICBidWYud3JpdGVVSW50MzJCRShvdXRbMl0sIDgpDQogIGJ1Zi53cml0ZVVJbnQzMkJFKG91dFszXSwgMTIpDQogIHJldHVybiBidWYNCn0NCg0KQUVTLnByb3RvdHlwZS5kZWNyeXB0QmxvY2sgPSBmdW5jdGlvbiAoTSkgew0KICBNID0gYnVmZmVyVG9BcnJheShuZXcgQnVmZmVyKE0pKQ0KICB2YXIgdGVtcCA9IFtNWzNdLCBNWzFdXQ0KICBNWzFdID0gdGVtcFswXQ0KICBNWzNdID0gdGVtcFsxXQ0KICB2YXIgb3V0ID0gdGhpcy5fZG9DcnlwdEJsb2NrKE0sIHRoaXMuX2ludktleVNjaGVkdWxlLCBHLklOVl9TVUJfTUlYLCBHLklOVl9TQk9YKQ0KICB2YXIgYnVmID0gbmV3IEJ1ZmZlcigxNikNCiAgYnVmLndyaXRlVUludDMyQkUob3V0WzBdLCAwKQ0KICBidWYud3JpdGVVSW50MzJCRShvdXRbM10sIDQpDQogIGJ1Zi53cml0ZVVJbnQzMkJFKG91dFsyXSwgOCkNCiAgYnVmLndyaXRlVUludDMyQkUob3V0WzFdLCAxMikNCiAgcmV0dXJuIGJ1Zg0KfQ0KDQpBRVMucHJvdG90eXBlLnNjcnViID0gZnVuY3Rpb24gKCkgew0KICBzY3J1Yl92ZWModGhpcy5fa2V5U2NoZWR1bGUpDQogIHNjcnViX3ZlYyh0aGlzLl9pbnZLZXlTY2hlZHVsZSkNCiAgc2NydWJfdmVjKHRoaXMuX2tleSkNCn0NCg0KQUVTLnByb3RvdHlwZS5fZG9DcnlwdEJsb2NrID0gZnVuY3Rpb24gKE0sIGtleVNjaGVkdWxlLCBTVUJfTUlYLCBTQk9YKSB7DQogIHZhciBrc1JvdywgczAsIHMxLCBzMiwgczMsIHQwLCB0MSwgdDIsIHQzDQoNCiAgczAgPSBNWzBdIF4ga2V5U2NoZWR1bGVbMF0NCiAgczEgPSBNWzFdIF4ga2V5U2NoZWR1bGVbMV0NCiAgczIgPSBNWzJdIF4ga2V5U2NoZWR1bGVbMl0NCiAgczMgPSBNWzNdIF4ga2V5U2NoZWR1bGVbM10NCiAga3NSb3cgPSA0DQogIGZvciAodmFyIHJvdW5kID0gMTsgcm91bmQgPCB0aGlzLl9uUm91bmRzOyByb3VuZCsrKSB7DQogICAgdDAgPSBTVUJfTUlYWzBdW3MwID4+PiAyNF0gXiBTVUJfTUlYWzFdWyhzMSA+Pj4gMTYpICYgMHhmZl0gXiBTVUJfTUlYWzJdWyhzMiA+Pj4gOCkgJiAweGZmXSBeIFNVQl9NSVhbM11bczMgJiAweGZmXSBeIGtleVNjaGVkdWxlW2tzUm93KytdDQogICAgdDEgPSBTVUJfTUlYWzBdW3MxID4+PiAyNF0gXiBTVUJfTUlYWzFdWyhzMiA+Pj4gMTYpICYgMHhmZl0gXiBTVUJfTUlYWzJdWyhzMyA+Pj4gOCkgJiAweGZmXSBeIFNVQl9NSVhbM11bczAgJiAweGZmXSBeIGtleVNjaGVkdWxlW2tzUm93KytdDQogICAgdDIgPSBTVUJfTUlYWzBdW3MyID4+PiAyNF0gXiBTVUJfTUlYWzFdWyhzMyA+Pj4gMTYpICYgMHhmZl0gXiBTVUJfTUlYWzJdWyhzMCA+Pj4gOCkgJiAweGZmXSBeIFNVQl9NSVhbM11bczEgJiAweGZmXSBeIGtleVNjaGVkdWxlW2tzUm93KytdDQogICAgdDMgPSBTVUJfTUlYWzBdW3MzID4+PiAyNF0gXiBTVUJfTUlYWzFdWyhzMCA+Pj4gMTYpICYgMHhmZl0gXiBTVUJfTUlYWzJdWyhzMSA+Pj4gOCkgJiAweGZmXSBeIFNVQl9NSVhbM11bczIgJiAweGZmXSBeIGtleVNjaGVkdWxlW2tzUm93KytdDQogICAgczAgPSB0MA0KICAgIHMxID0gdDENCiAgICBzMiA9IHQyDQogICAgczMgPSB0Mw0KICB9DQogIHQwID0gKChTQk9YW3MwID4+PiAyNF0gPDwgMjQpIHwgKFNCT1hbKHMxID4+PiAxNikgJiAweGZmXSA8PCAxNikgfCAoU0JPWFsoczIgPj4+IDgpICYgMHhmZl0gPDwgOCkgfCBTQk9YW3MzICYgMHhmZl0pIF4ga2V5U2NoZWR1bGVba3NSb3crK10NCiAgdDEgPSAoKFNCT1hbczEgPj4+IDI0XSA8PCAyNCkgfCAoU0JPWFsoczIgPj4+IDE2KSAmIDB4ZmZdIDw8IDE2KSB8IChTQk9YWyhzMyA+Pj4gOCkgJiAweGZmXSA8PCA4KSB8IFNCT1hbczAgJiAweGZmXSkgXiBrZXlTY2hlZHVsZVtrc1JvdysrXQ0KICB0MiA9ICgoU0JPWFtzMiA+Pj4gMjRdIDw8IDI0KSB8IChTQk9YWyhzMyA+Pj4gMTYpICYgMHhmZl0gPDwgMTYpIHwgKFNCT1hbKHMwID4+PiA4KSAmIDB4ZmZdIDw8IDgpIHwgU0JPWFtzMSAmIDB4ZmZdKSBeIGtleVNjaGVkdWxlW2tzUm93KytdDQogIHQzID0gKChTQk9YW3MzID4+PiAyNF0gPDwgMjQpIHwgKFNCT1hbKHMwID4+PiAxNikgJiAweGZmXSA8PCAxNikgfCAoU0JPWFsoczEgPj4+IDgpICYgMHhmZl0gPDwgOCkgfCBTQk9YW3MyICYgMHhmZl0pIF4ga2V5U2NoZWR1bGVba3NSb3crK10NCiAgcmV0dXJuIFsNCiAgICBmaXh1cF91aW50MzIodDApLA0KICAgIGZpeHVwX3VpbnQzMih0MSksDQogICAgZml4dXBfdWludDMyKHQyKSwNCiAgICBmaXh1cF91aW50MzIodDMpDQogIF0NCn0NCg0KZXhwb3J0cy5BRVMgPSBBRVMNCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJidWZmZXIiOjkzfV0sNjM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIGFlcyA9IHJlcXVpcmUoJy4vYWVzJykNCnZhciBUcmFuc2Zvcm0gPSByZXF1aXJlKCdjaXBoZXItYmFzZScpDQp2YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpDQp2YXIgR0hBU0ggPSByZXF1aXJlKCcuL2doYXNoJykNCnZhciB4b3IgPSByZXF1aXJlKCdidWZmZXIteG9yJykNCmluaGVyaXRzKFN0cmVhbUNpcGhlciwgVHJhbnNmb3JtKQ0KbW9kdWxlLmV4cG9ydHMgPSBTdHJlYW1DaXBoZXINCg0KZnVuY3Rpb24gU3RyZWFtQ2lwaGVyIChtb2RlLCBrZXksIGl2LCBkZWNyeXB0KSB7DQogIGlmICghKHRoaXMgaW5zdGFuY2VvZiBTdHJlYW1DaXBoZXIpKSB7DQogICAgcmV0dXJuIG5ldyBTdHJlYW1DaXBoZXIobW9kZSwga2V5LCBpdikNCiAgfQ0KICBUcmFuc2Zvcm0uY2FsbCh0aGlzKQ0KICB0aGlzLl9maW5JRCA9IEJ1ZmZlci5jb25jYXQoW2l2LCBuZXcgQnVmZmVyKFswLCAwLCAwLCAxXSldKQ0KICBpdiA9IEJ1ZmZlci5jb25jYXQoW2l2LCBuZXcgQnVmZmVyKFswLCAwLCAwLCAyXSldKQ0KICB0aGlzLl9jaXBoZXIgPSBuZXcgYWVzLkFFUyhrZXkpDQogIHRoaXMuX3ByZXYgPSBuZXcgQnVmZmVyKGl2Lmxlbmd0aCkNCiAgdGhpcy5fY2FjaGUgPSBuZXcgQnVmZmVyKCcnKQ0KICB0aGlzLl9zZWNDYWNoZSA9IG5ldyBCdWZmZXIoJycpDQogIHRoaXMuX2RlY3J5cHQgPSBkZWNyeXB0DQogIHRoaXMuX2FsZW4gPSAwDQogIHRoaXMuX2xlbiA9IDANCiAgaXYuY29weSh0aGlzLl9wcmV2KQ0KICB0aGlzLl9tb2RlID0gbW9kZQ0KICB2YXIgaCA9IG5ldyBCdWZmZXIoNCkNCiAgaC5maWxsKDApDQogIHRoaXMuX2doYXNoID0gbmV3IEdIQVNIKHRoaXMuX2NpcGhlci5lbmNyeXB0QmxvY2soaCkpDQogIHRoaXMuX2F1dGhUYWcgPSBudWxsDQogIHRoaXMuX2NhbGxlZCA9IGZhbHNlDQp9DQpTdHJlYW1DaXBoZXIucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoY2h1bmspIHsNCiAgaWYgKCF0aGlzLl9jYWxsZWQgJiYgdGhpcy5fYWxlbikgew0KICAgIHZhciBydW1wID0gMTYgLSAodGhpcy5fYWxlbiAlIDE2KQ0KICAgIGlmIChydW1wIDwgMTYpIHsNCiAgICAgIHJ1bXAgPSBuZXcgQnVmZmVyKHJ1bXApDQogICAgICBydW1wLmZpbGwoMCkNCiAgICAgIHRoaXMuX2doYXNoLnVwZGF0ZShydW1wKQ0KICAgIH0NCiAgfQ0KICB0aGlzLl9jYWxsZWQgPSB0cnVlDQogIHZhciBvdXQgPSB0aGlzLl9tb2RlLmVuY3J5cHQodGhpcywgY2h1bmspDQogIGlmICh0aGlzLl9kZWNyeXB0KSB7DQogICAgdGhpcy5fZ2hhc2gudXBkYXRlKGNodW5rKQ0KICB9IGVsc2Ugew0KICAgIHRoaXMuX2doYXNoLnVwZGF0ZShvdXQpDQogIH0NCiAgdGhpcy5fbGVuICs9IGNodW5rLmxlbmd0aA0KICByZXR1cm4gb3V0DQp9DQpTdHJlYW1DaXBoZXIucHJvdG90eXBlLl9maW5hbCA9IGZ1bmN0aW9uICgpIHsNCiAgaWYgKHRoaXMuX2RlY3J5cHQgJiYgIXRoaXMuX2F1dGhUYWcpIHsNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vuc3VwcG9ydGVkIHN0YXRlIG9yIHVuYWJsZSB0byBhdXRoZW50aWNhdGUgZGF0YScpDQogIH0NCiAgdmFyIHRhZyA9IHhvcih0aGlzLl9naGFzaC5maW5hbCh0aGlzLl9hbGVuICogOCwgdGhpcy5fbGVuICogOCksIHRoaXMuX2NpcGhlci5lbmNyeXB0QmxvY2sodGhpcy5fZmluSUQpKQ0KICBpZiAodGhpcy5fZGVjcnlwdCkgew0KICAgIGlmICh4b3JUZXN0KHRhZywgdGhpcy5fYXV0aFRhZykpIHsNCiAgICAgIHRocm93IG5ldyBFcnJvcignVW5zdXBwb3J0ZWQgc3RhdGUgb3IgdW5hYmxlIHRvIGF1dGhlbnRpY2F0ZSBkYXRhJykNCiAgICB9DQogIH0gZWxzZSB7DQogICAgdGhpcy5fYXV0aFRhZyA9IHRhZw0KICB9DQogIHRoaXMuX2NpcGhlci5zY3J1YigpDQp9DQpTdHJlYW1DaXBoZXIucHJvdG90eXBlLmdldEF1dGhUYWcgPSBmdW5jdGlvbiBnZXRBdXRoVGFnICgpIHsNCiAgaWYgKCF0aGlzLl9kZWNyeXB0ICYmIEJ1ZmZlci5pc0J1ZmZlcih0aGlzLl9hdXRoVGFnKSkgew0KICAgIHJldHVybiB0aGlzLl9hdXRoVGFnDQogIH0gZWxzZSB7DQogICAgdGhyb3cgbmV3IEVycm9yKCdBdHRlbXB0aW5nIHRvIGdldCBhdXRoIHRhZyBpbiB1bnN1cHBvcnRlZCBzdGF0ZScpDQogIH0NCn0NClN0cmVhbUNpcGhlci5wcm90b3R5cGUuc2V0QXV0aFRhZyA9IGZ1bmN0aW9uIHNldEF1dGhUYWcgKHRhZykgew0KICBpZiAodGhpcy5fZGVjcnlwdCkgew0KICAgIHRoaXMuX2F1dGhUYWcgPSB0YWcNCiAgfSBlbHNlIHsNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ0F0dGVtcHRpbmcgdG8gc2V0IGF1dGggdGFnIGluIHVuc3VwcG9ydGVkIHN0YXRlJykNCiAgfQ0KfQ0KU3RyZWFtQ2lwaGVyLnByb3RvdHlwZS5zZXRBQUQgPSBmdW5jdGlvbiBzZXRBQUQgKGJ1Zikgew0KICBpZiAoIXRoaXMuX2NhbGxlZCkgew0KICAgIHRoaXMuX2doYXNoLnVwZGF0ZShidWYpDQogICAgdGhpcy5fYWxlbiArPSBidWYubGVuZ3RoDQogIH0gZWxzZSB7DQogICAgdGhyb3cgbmV3IEVycm9yKCdBdHRlbXB0aW5nIHRvIHNldCBBQUQgaW4gdW5zdXBwb3J0ZWQgc3RhdGUnKQ0KICB9DQp9DQpmdW5jdGlvbiB4b3JUZXN0IChhLCBiKSB7DQogIHZhciBvdXQgPSAwDQogIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpIHsNCiAgICBvdXQrKw0KICB9DQogIHZhciBsZW4gPSBNYXRoLm1pbihhLmxlbmd0aCwgYi5sZW5ndGgpDQogIHZhciBpID0gLTENCiAgd2hpbGUgKCsraSA8IGxlbikgew0KICAgIG91dCArPSAoYVtpXSBeIGJbaV0pDQogIH0NCiAgcmV0dXJuIG91dA0KfQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vYWVzIjo2MiwiLi9naGFzaCI6NjcsImJ1ZmZlciI6OTMsImJ1ZmZlci14b3IiOjkyLCJjaXBoZXItYmFzZSI6OTQsImluaGVyaXRzIjo1Mzd9XSw2NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgY2lwaGVycyA9IHJlcXVpcmUoJy4vZW5jcnlwdGVyJykNCmV4cG9ydHMuY3JlYXRlQ2lwaGVyID0gZXhwb3J0cy5DaXBoZXIgPSBjaXBoZXJzLmNyZWF0ZUNpcGhlcg0KZXhwb3J0cy5jcmVhdGVDaXBoZXJpdiA9IGV4cG9ydHMuQ2lwaGVyaXYgPSBjaXBoZXJzLmNyZWF0ZUNpcGhlcml2DQp2YXIgZGVjaXBoZXJzID0gcmVxdWlyZSgnLi9kZWNyeXB0ZXInKQ0KZXhwb3J0cy5jcmVhdGVEZWNpcGhlciA9IGV4cG9ydHMuRGVjaXBoZXIgPSBkZWNpcGhlcnMuY3JlYXRlRGVjaXBoZXINCmV4cG9ydHMuY3JlYXRlRGVjaXBoZXJpdiA9IGV4cG9ydHMuRGVjaXBoZXJpdiA9IGRlY2lwaGVycy5jcmVhdGVEZWNpcGhlcml2DQp2YXIgbW9kZXMgPSByZXF1aXJlKCcuL21vZGVzJykNCmZ1bmN0aW9uIGdldENpcGhlcnMgKCkgew0KICByZXR1cm4gT2JqZWN0LmtleXMobW9kZXMpDQp9DQpleHBvcnRzLmxpc3RDaXBoZXJzID0gZXhwb3J0cy5nZXRDaXBoZXJzID0gZ2V0Q2lwaGVycw0KDQp9LHsiLi9kZWNyeXB0ZXIiOjY1LCIuL2VuY3J5cHRlciI6NjYsIi4vbW9kZXMiOjY4fV0sNjU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIGFlcyA9IHJlcXVpcmUoJy4vYWVzJykNCnZhciBUcmFuc2Zvcm0gPSByZXF1aXJlKCdjaXBoZXItYmFzZScpDQp2YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpDQp2YXIgbW9kZXMgPSByZXF1aXJlKCcuL21vZGVzJykNCnZhciBTdHJlYW1DaXBoZXIgPSByZXF1aXJlKCcuL3N0cmVhbUNpcGhlcicpDQp2YXIgQXV0aENpcGhlciA9IHJlcXVpcmUoJy4vYXV0aENpcGhlcicpDQp2YXIgZWJ0ayA9IHJlcXVpcmUoJ2V2cF9ieXRlc3Rva2V5JykNCg0KaW5oZXJpdHMoRGVjaXBoZXIsIFRyYW5zZm9ybSkNCmZ1bmN0aW9uIERlY2lwaGVyIChtb2RlLCBrZXksIGl2KSB7DQogIGlmICghKHRoaXMgaW5zdGFuY2VvZiBEZWNpcGhlcikpIHsNCiAgICByZXR1cm4gbmV3IERlY2lwaGVyKG1vZGUsIGtleSwgaXYpDQogIH0NCiAgVHJhbnNmb3JtLmNhbGwodGhpcykNCiAgdGhpcy5fY2FjaGUgPSBuZXcgU3BsaXR0ZXIoKQ0KICB0aGlzLl9sYXN0ID0gdm9pZCAwDQogIHRoaXMuX2NpcGhlciA9IG5ldyBhZXMuQUVTKGtleSkNCiAgdGhpcy5fcHJldiA9IG5ldyBCdWZmZXIoaXYubGVuZ3RoKQ0KICBpdi5jb3B5KHRoaXMuX3ByZXYpDQogIHRoaXMuX21vZGUgPSBtb2RlDQogIHRoaXMuX2F1dG9wYWRkaW5nID0gdHJ1ZQ0KfQ0KRGVjaXBoZXIucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoZGF0YSkgew0KICB0aGlzLl9jYWNoZS5hZGQoZGF0YSkNCiAgdmFyIGNodW5rDQogIHZhciB0aGluZw0KICB2YXIgb3V0ID0gW10NCiAgd2hpbGUgKChjaHVuayA9IHRoaXMuX2NhY2hlLmdldCh0aGlzLl9hdXRvcGFkZGluZykpKSB7DQogICAgdGhpbmcgPSB0aGlzLl9tb2RlLmRlY3J5cHQodGhpcywgY2h1bmspDQogICAgb3V0LnB1c2godGhpbmcpDQogIH0NCiAgcmV0dXJuIEJ1ZmZlci5jb25jYXQob3V0KQ0KfQ0KRGVjaXBoZXIucHJvdG90eXBlLl9maW5hbCA9IGZ1bmN0aW9uICgpIHsNCiAgdmFyIGNodW5rID0gdGhpcy5fY2FjaGUuZmx1c2goKQ0KICBpZiAodGhpcy5fYXV0b3BhZGRpbmcpIHsNCiAgICByZXR1cm4gdW5wYWQodGhpcy5fbW9kZS5kZWNyeXB0KHRoaXMsIGNodW5rKSkNCiAgfSBlbHNlIGlmIChjaHVuaykgew0KICAgIHRocm93IG5ldyBFcnJvcignZGF0YSBub3QgbXVsdGlwbGUgb2YgYmxvY2sgbGVuZ3RoJykNCiAgfQ0KfQ0KRGVjaXBoZXIucHJvdG90eXBlLnNldEF1dG9QYWRkaW5nID0gZnVuY3Rpb24gKHNldFRvKSB7DQogIHRoaXMuX2F1dG9wYWRkaW5nID0gISFzZXRUbw0KICByZXR1cm4gdGhpcw0KfQ0KZnVuY3Rpb24gU3BsaXR0ZXIgKCkgew0KICBpZiAoISh0aGlzIGluc3RhbmNlb2YgU3BsaXR0ZXIpKSB7DQogICAgcmV0dXJuIG5ldyBTcGxpdHRlcigpDQogIH0NCiAgdGhpcy5jYWNoZSA9IG5ldyBCdWZmZXIoJycpDQp9DQpTcGxpdHRlci5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKGRhdGEpIHsNCiAgdGhpcy5jYWNoZSA9IEJ1ZmZlci5jb25jYXQoW3RoaXMuY2FjaGUsIGRhdGFdKQ0KfQ0KDQpTcGxpdHRlci5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKGF1dG9QYWRkaW5nKSB7DQogIHZhciBvdXQNCiAgaWYgKGF1dG9QYWRkaW5nKSB7DQogICAgaWYgKHRoaXMuY2FjaGUubGVuZ3RoID4gMTYpIHsNCiAgICAgIG91dCA9IHRoaXMuY2FjaGUuc2xpY2UoMCwgMTYpDQogICAgICB0aGlzLmNhY2hlID0gdGhpcy5jYWNoZS5zbGljZSgxNikNCiAgICAgIHJldHVybiBvdXQNCiAgICB9DQogIH0gZWxzZSB7DQogICAgaWYgKHRoaXMuY2FjaGUubGVuZ3RoID49IDE2KSB7DQogICAgICBvdXQgPSB0aGlzLmNhY2hlLnNsaWNlKDAsIDE2KQ0KICAgICAgdGhpcy5jYWNoZSA9IHRoaXMuY2FjaGUuc2xpY2UoMTYpDQogICAgICByZXR1cm4gb3V0DQogICAgfQ0KICB9DQogIHJldHVybiBudWxsDQp9DQpTcGxpdHRlci5wcm90b3R5cGUuZmx1c2ggPSBmdW5jdGlvbiAoKSB7DQogIGlmICh0aGlzLmNhY2hlLmxlbmd0aCkgew0KICAgIHJldHVybiB0aGlzLmNhY2hlDQogIH0NCn0NCmZ1bmN0aW9uIHVucGFkIChsYXN0KSB7DQogIHZhciBwYWRkZWQgPSBsYXN0WzE1XQ0KICB2YXIgaSA9IC0xDQogIHdoaWxlICgrK2kgPCBwYWRkZWQpIHsNCiAgICBpZiAobGFzdFsoaSArICgxNiAtIHBhZGRlZCkpXSAhPT0gcGFkZGVkKSB7DQogICAgICB0aHJvdyBuZXcgRXJyb3IoJ3VuYWJsZSB0byBkZWNyeXB0IGRhdGEnKQ0KICAgIH0NCiAgfQ0KICBpZiAocGFkZGVkID09PSAxNikgew0KICAgIHJldHVybg0KICB9DQogIHJldHVybiBsYXN0LnNsaWNlKDAsIDE2IC0gcGFkZGVkKQ0KfQ0KDQp2YXIgbW9kZWxpc3QgPSB7DQogIEVDQjogcmVxdWlyZSgnLi9tb2Rlcy9lY2InKSwNCiAgQ0JDOiByZXF1aXJlKCcuL21vZGVzL2NiYycpLA0KICBDRkI6IHJlcXVpcmUoJy4vbW9kZXMvY2ZiJyksDQogIENGQjg6IHJlcXVpcmUoJy4vbW9kZXMvY2ZiOCcpLA0KICBDRkIxOiByZXF1aXJlKCcuL21vZGVzL2NmYjEnKSwNCiAgT0ZCOiByZXF1aXJlKCcuL21vZGVzL29mYicpLA0KICBDVFI6IHJlcXVpcmUoJy4vbW9kZXMvY3RyJyksDQogIEdDTTogcmVxdWlyZSgnLi9tb2Rlcy9jdHInKQ0KfQ0KDQpmdW5jdGlvbiBjcmVhdGVEZWNpcGhlcml2IChzdWl0ZSwgcGFzc3dvcmQsIGl2KSB7DQogIHZhciBjb25maWcgPSBtb2Rlc1tzdWl0ZS50b0xvd2VyQ2FzZSgpXQ0KICBpZiAoIWNvbmZpZykgew0KICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgc3VpdGUgdHlwZScpDQogIH0NCiAgaWYgKHR5cGVvZiBpdiA9PT0gJ3N0cmluZycpIHsNCiAgICBpdiA9IG5ldyBCdWZmZXIoaXYpDQogIH0NCiAgaWYgKHR5cGVvZiBwYXNzd29yZCA9PT0gJ3N0cmluZycpIHsNCiAgICBwYXNzd29yZCA9IG5ldyBCdWZmZXIocGFzc3dvcmQpDQogIH0NCiAgaWYgKHBhc3N3b3JkLmxlbmd0aCAhPT0gY29uZmlnLmtleSAvIDgpIHsNCiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIGtleSBsZW5ndGggJyArIHBhc3N3b3JkLmxlbmd0aCkNCiAgfQ0KICBpZiAoaXYubGVuZ3RoICE9PSBjb25maWcuaXYpIHsNCiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIGl2IGxlbmd0aCAnICsgaXYubGVuZ3RoKQ0KICB9DQogIGlmIChjb25maWcudHlwZSA9PT0gJ3N0cmVhbScpIHsNCiAgICByZXR1cm4gbmV3IFN0cmVhbUNpcGhlcihtb2RlbGlzdFtjb25maWcubW9kZV0sIHBhc3N3b3JkLCBpdiwgdHJ1ZSkNCiAgfSBlbHNlIGlmIChjb25maWcudHlwZSA9PT0gJ2F1dGgnKSB7DQogICAgcmV0dXJuIG5ldyBBdXRoQ2lwaGVyKG1vZGVsaXN0W2NvbmZpZy5tb2RlXSwgcGFzc3dvcmQsIGl2LCB0cnVlKQ0KICB9DQogIHJldHVybiBuZXcgRGVjaXBoZXIobW9kZWxpc3RbY29uZmlnLm1vZGVdLCBwYXNzd29yZCwgaXYpDQp9DQoNCmZ1bmN0aW9uIGNyZWF0ZURlY2lwaGVyIChzdWl0ZSwgcGFzc3dvcmQpIHsNCiAgdmFyIGNvbmZpZyA9IG1vZGVzW3N1aXRlLnRvTG93ZXJDYXNlKCldDQogIGlmICghY29uZmlnKSB7DQogICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW52YWxpZCBzdWl0ZSB0eXBlJykNCiAgfQ0KICB2YXIga2V5cyA9IGVidGsocGFzc3dvcmQsIGZhbHNlLCBjb25maWcua2V5LCBjb25maWcuaXYpDQogIHJldHVybiBjcmVhdGVEZWNpcGhlcml2KHN1aXRlLCBrZXlzLmtleSwga2V5cy5pdikNCn0NCmV4cG9ydHMuY3JlYXRlRGVjaXBoZXIgPSBjcmVhdGVEZWNpcGhlcg0KZXhwb3J0cy5jcmVhdGVEZWNpcGhlcml2ID0gY3JlYXRlRGVjaXBoZXJpdg0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vYWVzIjo2MiwiLi9hdXRoQ2lwaGVyIjo2MywiLi9tb2RlcyI6NjgsIi4vbW9kZXMvY2JjIjo2OSwiLi9tb2Rlcy9jZmIiOjcwLCIuL21vZGVzL2NmYjEiOjcxLCIuL21vZGVzL2NmYjgiOjcyLCIuL21vZGVzL2N0ciI6NzMsIi4vbW9kZXMvZWNiIjo3NCwiLi9tb2Rlcy9vZmIiOjc1LCIuL3N0cmVhbUNpcGhlciI6NzYsImJ1ZmZlciI6OTMsImNpcGhlci1iYXNlIjo5NCwiZXZwX2J5dGVzdG9rZXkiOjUyNiwiaW5oZXJpdHMiOjUzN31dLDY2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCnZhciBhZXMgPSByZXF1aXJlKCcuL2FlcycpDQp2YXIgVHJhbnNmb3JtID0gcmVxdWlyZSgnY2lwaGVyLWJhc2UnKQ0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKQ0KdmFyIG1vZGVzID0gcmVxdWlyZSgnLi9tb2RlcycpDQp2YXIgZWJ0ayA9IHJlcXVpcmUoJ2V2cF9ieXRlc3Rva2V5JykNCnZhciBTdHJlYW1DaXBoZXIgPSByZXF1aXJlKCcuL3N0cmVhbUNpcGhlcicpDQp2YXIgQXV0aENpcGhlciA9IHJlcXVpcmUoJy4vYXV0aENpcGhlcicpDQppbmhlcml0cyhDaXBoZXIsIFRyYW5zZm9ybSkNCmZ1bmN0aW9uIENpcGhlciAobW9kZSwga2V5LCBpdikgew0KICBpZiAoISh0aGlzIGluc3RhbmNlb2YgQ2lwaGVyKSkgew0KICAgIHJldHVybiBuZXcgQ2lwaGVyKG1vZGUsIGtleSwgaXYpDQogIH0NCiAgVHJhbnNmb3JtLmNhbGwodGhpcykNCiAgdGhpcy5fY2FjaGUgPSBuZXcgU3BsaXR0ZXIoKQ0KICB0aGlzLl9jaXBoZXIgPSBuZXcgYWVzLkFFUyhrZXkpDQogIHRoaXMuX3ByZXYgPSBuZXcgQnVmZmVyKGl2Lmxlbmd0aCkNCiAgaXYuY29weSh0aGlzLl9wcmV2KQ0KICB0aGlzLl9tb2RlID0gbW9kZQ0KICB0aGlzLl9hdXRvcGFkZGluZyA9IHRydWUNCn0NCkNpcGhlci5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uIChkYXRhKSB7DQogIHRoaXMuX2NhY2hlLmFkZChkYXRhKQ0KICB2YXIgY2h1bmsNCiAgdmFyIHRoaW5nDQogIHZhciBvdXQgPSBbXQ0KICB3aGlsZSAoKGNodW5rID0gdGhpcy5fY2FjaGUuZ2V0KCkpKSB7DQogICAgdGhpbmcgPSB0aGlzLl9tb2RlLmVuY3J5cHQodGhpcywgY2h1bmspDQogICAgb3V0LnB1c2godGhpbmcpDQogIH0NCiAgcmV0dXJuIEJ1ZmZlci5jb25jYXQob3V0KQ0KfQ0KQ2lwaGVyLnByb3RvdHlwZS5fZmluYWwgPSBmdW5jdGlvbiAoKSB7DQogIHZhciBjaHVuayA9IHRoaXMuX2NhY2hlLmZsdXNoKCkNCiAgaWYgKHRoaXMuX2F1dG9wYWRkaW5nKSB7DQogICAgY2h1bmsgPSB0aGlzLl9tb2RlLmVuY3J5cHQodGhpcywgY2h1bmspDQogICAgdGhpcy5fY2lwaGVyLnNjcnViKCkNCiAgICByZXR1cm4gY2h1bmsNCiAgfSBlbHNlIGlmIChjaHVuay50b1N0cmluZygnaGV4JykgIT09ICcxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMCcpIHsNCiAgICB0aGlzLl9jaXBoZXIuc2NydWIoKQ0KICAgIHRocm93IG5ldyBFcnJvcignZGF0YSBub3QgbXVsdGlwbGUgb2YgYmxvY2sgbGVuZ3RoJykNCiAgfQ0KfQ0KQ2lwaGVyLnByb3RvdHlwZS5zZXRBdXRvUGFkZGluZyA9IGZ1bmN0aW9uIChzZXRUbykgew0KICB0aGlzLl9hdXRvcGFkZGluZyA9ICEhc2V0VG8NCiAgcmV0dXJuIHRoaXMNCn0NCg0KZnVuY3Rpb24gU3BsaXR0ZXIgKCkgew0KICBpZiAoISh0aGlzIGluc3RhbmNlb2YgU3BsaXR0ZXIpKSB7DQogICAgcmV0dXJuIG5ldyBTcGxpdHRlcigpDQogIH0NCiAgdGhpcy5jYWNoZSA9IG5ldyBCdWZmZXIoJycpDQp9DQpTcGxpdHRlci5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKGRhdGEpIHsNCiAgdGhpcy5jYWNoZSA9IEJ1ZmZlci5jb25jYXQoW3RoaXMuY2FjaGUsIGRhdGFdKQ0KfQ0KDQpTcGxpdHRlci5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKCkgew0KICBpZiAodGhpcy5jYWNoZS5sZW5ndGggPiAxNSkgew0KICAgIHZhciBvdXQgPSB0aGlzLmNhY2hlLnNsaWNlKDAsIDE2KQ0KICAgIHRoaXMuY2FjaGUgPSB0aGlzLmNhY2hlLnNsaWNlKDE2KQ0KICAgIHJldHVybiBvdXQNCiAgfQ0KICByZXR1cm4gbnVsbA0KfQ0KU3BsaXR0ZXIucHJvdG90eXBlLmZsdXNoID0gZnVuY3Rpb24gKCkgew0KICB2YXIgbGVuID0gMTYgLSB0aGlzLmNhY2hlLmxlbmd0aA0KICB2YXIgcGFkQnVmZiA9IG5ldyBCdWZmZXIobGVuKQ0KDQogIHZhciBpID0gLTENCiAgd2hpbGUgKCsraSA8IGxlbikgew0KICAgIHBhZEJ1ZmYud3JpdGVVSW50OChsZW4sIGkpDQogIH0NCiAgdmFyIG91dCA9IEJ1ZmZlci5jb25jYXQoW3RoaXMuY2FjaGUsIHBhZEJ1ZmZdKQ0KICByZXR1cm4gb3V0DQp9DQp2YXIgbW9kZWxpc3QgPSB7DQogIEVDQjogcmVxdWlyZSgnLi9tb2Rlcy9lY2InKSwNCiAgQ0JDOiByZXF1aXJlKCcuL21vZGVzL2NiYycpLA0KICBDRkI6IHJlcXVpcmUoJy4vbW9kZXMvY2ZiJyksDQogIENGQjg6IHJlcXVpcmUoJy4vbW9kZXMvY2ZiOCcpLA0KICBDRkIxOiByZXF1aXJlKCcuL21vZGVzL2NmYjEnKSwNCiAgT0ZCOiByZXF1aXJlKCcuL21vZGVzL29mYicpLA0KICBDVFI6IHJlcXVpcmUoJy4vbW9kZXMvY3RyJyksDQogIEdDTTogcmVxdWlyZSgnLi9tb2Rlcy9jdHInKQ0KfQ0KDQpmdW5jdGlvbiBjcmVhdGVDaXBoZXJpdiAoc3VpdGUsIHBhc3N3b3JkLCBpdikgew0KICB2YXIgY29uZmlnID0gbW9kZXNbc3VpdGUudG9Mb3dlckNhc2UoKV0NCiAgaWYgKCFjb25maWcpIHsNCiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIHN1aXRlIHR5cGUnKQ0KICB9DQogIGlmICh0eXBlb2YgaXYgPT09ICdzdHJpbmcnKSB7DQogICAgaXYgPSBuZXcgQnVmZmVyKGl2KQ0KICB9DQogIGlmICh0eXBlb2YgcGFzc3dvcmQgPT09ICdzdHJpbmcnKSB7DQogICAgcGFzc3dvcmQgPSBuZXcgQnVmZmVyKHBhc3N3b3JkKQ0KICB9DQogIGlmIChwYXNzd29yZC5sZW5ndGggIT09IGNvbmZpZy5rZXkgLyA4KSB7DQogICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW52YWxpZCBrZXkgbGVuZ3RoICcgKyBwYXNzd29yZC5sZW5ndGgpDQogIH0NCiAgaWYgKGl2Lmxlbmd0aCAhPT0gY29uZmlnLml2KSB7DQogICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW52YWxpZCBpdiBsZW5ndGggJyArIGl2Lmxlbmd0aCkNCiAgfQ0KICBpZiAoY29uZmlnLnR5cGUgPT09ICdzdHJlYW0nKSB7DQogICAgcmV0dXJuIG5ldyBTdHJlYW1DaXBoZXIobW9kZWxpc3RbY29uZmlnLm1vZGVdLCBwYXNzd29yZCwgaXYpDQogIH0gZWxzZSBpZiAoY29uZmlnLnR5cGUgPT09ICdhdXRoJykgew0KICAgIHJldHVybiBuZXcgQXV0aENpcGhlcihtb2RlbGlzdFtjb25maWcubW9kZV0sIHBhc3N3b3JkLCBpdikNCiAgfQ0KICByZXR1cm4gbmV3IENpcGhlcihtb2RlbGlzdFtjb25maWcubW9kZV0sIHBhc3N3b3JkLCBpdikNCn0NCmZ1bmN0aW9uIGNyZWF0ZUNpcGhlciAoc3VpdGUsIHBhc3N3b3JkKSB7DQogIHZhciBjb25maWcgPSBtb2Rlc1tzdWl0ZS50b0xvd2VyQ2FzZSgpXQ0KICBpZiAoIWNvbmZpZykgew0KICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgc3VpdGUgdHlwZScpDQogIH0NCiAgdmFyIGtleXMgPSBlYnRrKHBhc3N3b3JkLCBmYWxzZSwgY29uZmlnLmtleSwgY29uZmlnLml2KQ0KICByZXR1cm4gY3JlYXRlQ2lwaGVyaXYoc3VpdGUsIGtleXMua2V5LCBrZXlzLml2KQ0KfQ0KDQpleHBvcnRzLmNyZWF0ZUNpcGhlcml2ID0gY3JlYXRlQ2lwaGVyaXYNCmV4cG9ydHMuY3JlYXRlQ2lwaGVyID0gY3JlYXRlQ2lwaGVyDQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiLi9hZXMiOjYyLCIuL2F1dGhDaXBoZXIiOjYzLCIuL21vZGVzIjo2OCwiLi9tb2Rlcy9jYmMiOjY5LCIuL21vZGVzL2NmYiI6NzAsIi4vbW9kZXMvY2ZiMSI6NzEsIi4vbW9kZXMvY2ZiOCI6NzIsIi4vbW9kZXMvY3RyIjo3MywiLi9tb2Rlcy9lY2IiOjc0LCIuL21vZGVzL29mYiI6NzUsIi4vc3RyZWFtQ2lwaGVyIjo3NiwiYnVmZmVyIjo5MywiY2lwaGVyLWJhc2UiOjk0LCJldnBfYnl0ZXN0b2tleSI6NTI2LCJpbmhlcml0cyI6NTM3fV0sNjc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIHplcm9zID0gbmV3IEJ1ZmZlcigxNikNCnplcm9zLmZpbGwoMCkNCm1vZHVsZS5leHBvcnRzID0gR0hBU0gNCmZ1bmN0aW9uIEdIQVNIIChrZXkpIHsNCiAgdGhpcy5oID0ga2V5DQogIHRoaXMuc3RhdGUgPSBuZXcgQnVmZmVyKDE2KQ0KICB0aGlzLnN0YXRlLmZpbGwoMCkNCiAgdGhpcy5jYWNoZSA9IG5ldyBCdWZmZXIoJycpDQp9DQovLyBmcm9tIGh0dHA6Ly9iaXR3aXNlc2hpZnRsZWZ0LmdpdGh1Yi5pby9zamNsL2RvYy9zeW1ib2xzL3NyYy9jb3JlX2djbS5qcy5odG1sDQovLyBieSBKdWhvIFbDpGjDpC1IZXJ0dHVhDQpHSEFTSC5wcm90b3R5cGUuZ2hhc2ggPSBmdW5jdGlvbiAoYmxvY2spIHsNCiAgdmFyIGkgPSAtMQ0KICB3aGlsZSAoKytpIDwgYmxvY2subGVuZ3RoKSB7DQogICAgdGhpcy5zdGF0ZVtpXSBePSBibG9ja1tpXQ0KICB9DQogIHRoaXMuX211bHRpcGx5KCkNCn0NCg0KR0hBU0gucHJvdG90eXBlLl9tdWx0aXBseSA9IGZ1bmN0aW9uICgpIHsNCiAgdmFyIFZpID0gdG9BcnJheSh0aGlzLmgpDQogIHZhciBaaSA9IFswLCAwLCAwLCAwXQ0KICB2YXIgaiwgeGksIGxzYl9WaQ0KICB2YXIgaSA9IC0xDQogIHdoaWxlICgrK2kgPCAxMjgpIHsNCiAgICB4aSA9ICh0aGlzLnN0YXRlW35+KGkgLyA4KV0gJiAoMSA8PCAoNyAtIGkgJSA4KSkpICE9PSAwDQogICAgaWYgKHhpKSB7DQogICAgICAvLyBaX2krMSA9IFpfaSBeIFZfaQ0KICAgICAgWmkgPSB4b3IoWmksIFZpKQ0KICAgIH0NCg0KICAgIC8vIFN0b3JlIHRoZSB2YWx1ZSBvZiBMU0IoVl9pKQ0KICAgIGxzYl9WaSA9IChWaVszXSAmIDEpICE9PSAwDQoNCiAgICAvLyBWX2krMSA9IFZfaSA+PiAxDQogICAgZm9yIChqID0gMzsgaiA+IDA7IGotLSkgew0KICAgICAgVmlbal0gPSAoVmlbal0gPj4+IDEpIHwgKChWaVtqIC0gMV0gJiAxKSA8PCAzMSkNCiAgICB9DQogICAgVmlbMF0gPSBWaVswXSA+Pj4gMQ0KDQogICAgLy8gSWYgTFNCKFZfaSkgaXMgMSwgVl9pKzEgPSAoVl9pID4+IDEpIF4gUg0KICAgIGlmIChsc2JfVmkpIHsNCiAgICAgIFZpWzBdID0gVmlbMF0gXiAoMHhlMSA8PCAyNCkNCiAgICB9DQogIH0NCiAgdGhpcy5zdGF0ZSA9IGZyb21BcnJheShaaSkNCn0NCkdIQVNILnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoYnVmKSB7DQogIHRoaXMuY2FjaGUgPSBCdWZmZXIuY29uY2F0KFt0aGlzLmNhY2hlLCBidWZdKQ0KICB2YXIgY2h1bmsNCiAgd2hpbGUgKHRoaXMuY2FjaGUubGVuZ3RoID49IDE2KSB7DQogICAgY2h1bmsgPSB0aGlzLmNhY2hlLnNsaWNlKDAsIDE2KQ0KICAgIHRoaXMuY2FjaGUgPSB0aGlzLmNhY2hlLnNsaWNlKDE2KQ0KICAgIHRoaXMuZ2hhc2goY2h1bmspDQogIH0NCn0NCkdIQVNILnByb3RvdHlwZS5maW5hbCA9IGZ1bmN0aW9uIChhYmwsIGJsKSB7DQogIGlmICh0aGlzLmNhY2hlLmxlbmd0aCkgew0KICAgIHRoaXMuZ2hhc2goQnVmZmVyLmNvbmNhdChbdGhpcy5jYWNoZSwgemVyb3NdLCAxNikpDQogIH0NCiAgdGhpcy5naGFzaChmcm9tQXJyYXkoWw0KICAgIDAsIGFibCwNCiAgICAwLCBibA0KICBdKSkNCiAgcmV0dXJuIHRoaXMuc3RhdGUNCn0NCg0KZnVuY3Rpb24gdG9BcnJheSAoYnVmKSB7DQogIHJldHVybiBbDQogICAgYnVmLnJlYWRVSW50MzJCRSgwKSwNCiAgICBidWYucmVhZFVJbnQzMkJFKDQpLA0KICAgIGJ1Zi5yZWFkVUludDMyQkUoOCksDQogICAgYnVmLnJlYWRVSW50MzJCRSgxMikNCiAgXQ0KfQ0KZnVuY3Rpb24gZnJvbUFycmF5IChvdXQpIHsNCiAgb3V0ID0gb3V0Lm1hcChmaXh1cF91aW50MzIpDQogIHZhciBidWYgPSBuZXcgQnVmZmVyKDE2KQ0KICBidWYud3JpdGVVSW50MzJCRShvdXRbMF0sIDApDQogIGJ1Zi53cml0ZVVJbnQzMkJFKG91dFsxXSwgNCkNCiAgYnVmLndyaXRlVUludDMyQkUob3V0WzJdLCA4KQ0KICBidWYud3JpdGVVSW50MzJCRShvdXRbM10sIDEyKQ0KICByZXR1cm4gYnVmDQp9DQp2YXIgdWludF9tYXggPSBNYXRoLnBvdygyLCAzMikNCmZ1bmN0aW9uIGZpeHVwX3VpbnQzMiAoeCkgew0KICB2YXIgcmV0LCB4X3Bvcw0KICByZXQgPSB4ID4gdWludF9tYXggfHwgeCA8IDAgPyAoeF9wb3MgPSBNYXRoLmFicyh4KSAlIHVpbnRfbWF4LCB4IDwgMCA/IHVpbnRfbWF4IC0geF9wb3MgOiB4X3BvcykgOiB4DQogIHJldHVybiByZXQNCn0NCmZ1bmN0aW9uIHhvciAoYSwgYikgew0KICByZXR1cm4gWw0KICAgIGFbMF0gXiBiWzBdLA0KICAgIGFbMV0gXiBiWzFdLA0KICAgIGFbMl0gXiBiWzJdLA0KICAgIGFbM10gXiBiWzNdDQogIF0NCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJidWZmZXIiOjkzfV0sNjg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KZXhwb3J0c1snYWVzLTEyOC1lY2InXSA9IHsNCiAgY2lwaGVyOiAnQUVTJywNCiAga2V5OiAxMjgsDQogIGl2OiAwLA0KICBtb2RlOiAnRUNCJywNCiAgdHlwZTogJ2Jsb2NrJw0KfQ0KZXhwb3J0c1snYWVzLTE5Mi1lY2InXSA9IHsNCiAgY2lwaGVyOiAnQUVTJywNCiAga2V5OiAxOTIsDQogIGl2OiAwLA0KICBtb2RlOiAnRUNCJywNCiAgdHlwZTogJ2Jsb2NrJw0KfQ0KZXhwb3J0c1snYWVzLTI1Ni1lY2InXSA9IHsNCiAgY2lwaGVyOiAnQUVTJywNCiAga2V5OiAyNTYsDQogIGl2OiAwLA0KICBtb2RlOiAnRUNCJywNCiAgdHlwZTogJ2Jsb2NrJw0KfQ0KZXhwb3J0c1snYWVzLTEyOC1jYmMnXSA9IHsNCiAgY2lwaGVyOiAnQUVTJywNCiAga2V5OiAxMjgsDQogIGl2OiAxNiwNCiAgbW9kZTogJ0NCQycsDQogIHR5cGU6ICdibG9jaycNCn0NCmV4cG9ydHNbJ2Flcy0xOTItY2JjJ10gPSB7DQogIGNpcGhlcjogJ0FFUycsDQogIGtleTogMTkyLA0KICBpdjogMTYsDQogIG1vZGU6ICdDQkMnLA0KICB0eXBlOiAnYmxvY2snDQp9DQpleHBvcnRzWydhZXMtMjU2LWNiYyddID0gew0KICBjaXBoZXI6ICdBRVMnLA0KICBrZXk6IDI1NiwNCiAgaXY6IDE2LA0KICBtb2RlOiAnQ0JDJywNCiAgdHlwZTogJ2Jsb2NrJw0KfQ0KZXhwb3J0c1snYWVzMTI4J10gPSBleHBvcnRzWydhZXMtMTI4LWNiYyddDQpleHBvcnRzWydhZXMxOTInXSA9IGV4cG9ydHNbJ2Flcy0xOTItY2JjJ10NCmV4cG9ydHNbJ2FlczI1NiddID0gZXhwb3J0c1snYWVzLTI1Ni1jYmMnXQ0KZXhwb3J0c1snYWVzLTEyOC1jZmInXSA9IHsNCiAgY2lwaGVyOiAnQUVTJywNCiAga2V5OiAxMjgsDQogIGl2OiAxNiwNCiAgbW9kZTogJ0NGQicsDQogIHR5cGU6ICdzdHJlYW0nDQp9DQpleHBvcnRzWydhZXMtMTkyLWNmYiddID0gew0KICBjaXBoZXI6ICdBRVMnLA0KICBrZXk6IDE5MiwNCiAgaXY6IDE2LA0KICBtb2RlOiAnQ0ZCJywNCiAgdHlwZTogJ3N0cmVhbScNCn0NCmV4cG9ydHNbJ2Flcy0yNTYtY2ZiJ10gPSB7DQogIGNpcGhlcjogJ0FFUycsDQogIGtleTogMjU2LA0KICBpdjogMTYsDQogIG1vZGU6ICdDRkInLA0KICB0eXBlOiAnc3RyZWFtJw0KfQ0KZXhwb3J0c1snYWVzLTEyOC1jZmI4J10gPSB7DQogIGNpcGhlcjogJ0FFUycsDQogIGtleTogMTI4LA0KICBpdjogMTYsDQogIG1vZGU6ICdDRkI4JywNCiAgdHlwZTogJ3N0cmVhbScNCn0NCmV4cG9ydHNbJ2Flcy0xOTItY2ZiOCddID0gew0KICBjaXBoZXI6ICdBRVMnLA0KICBrZXk6IDE5MiwNCiAgaXY6IDE2LA0KICBtb2RlOiAnQ0ZCOCcsDQogIHR5cGU6ICdzdHJlYW0nDQp9DQpleHBvcnRzWydhZXMtMjU2LWNmYjgnXSA9IHsNCiAgY2lwaGVyOiAnQUVTJywNCiAga2V5OiAyNTYsDQogIGl2OiAxNiwNCiAgbW9kZTogJ0NGQjgnLA0KICB0eXBlOiAnc3RyZWFtJw0KfQ0KZXhwb3J0c1snYWVzLTEyOC1jZmIxJ10gPSB7DQogIGNpcGhlcjogJ0FFUycsDQogIGtleTogMTI4LA0KICBpdjogMTYsDQogIG1vZGU6ICdDRkIxJywNCiAgdHlwZTogJ3N0cmVhbScNCn0NCmV4cG9ydHNbJ2Flcy0xOTItY2ZiMSddID0gew0KICBjaXBoZXI6ICdBRVMnLA0KICBrZXk6IDE5MiwNCiAgaXY6IDE2LA0KICBtb2RlOiAnQ0ZCMScsDQogIHR5cGU6ICdzdHJlYW0nDQp9DQpleHBvcnRzWydhZXMtMjU2LWNmYjEnXSA9IHsNCiAgY2lwaGVyOiAnQUVTJywNCiAga2V5OiAyNTYsDQogIGl2OiAxNiwNCiAgbW9kZTogJ0NGQjEnLA0KICB0eXBlOiAnc3RyZWFtJw0KfQ0KZXhwb3J0c1snYWVzLTEyOC1vZmInXSA9IHsNCiAgY2lwaGVyOiAnQUVTJywNCiAga2V5OiAxMjgsDQogIGl2OiAxNiwNCiAgbW9kZTogJ09GQicsDQogIHR5cGU6ICdzdHJlYW0nDQp9DQpleHBvcnRzWydhZXMtMTkyLW9mYiddID0gew0KICBjaXBoZXI6ICdBRVMnLA0KICBrZXk6IDE5MiwNCiAgaXY6IDE2LA0KICBtb2RlOiAnT0ZCJywNCiAgdHlwZTogJ3N0cmVhbScNCn0NCmV4cG9ydHNbJ2Flcy0yNTYtb2ZiJ10gPSB7DQogIGNpcGhlcjogJ0FFUycsDQogIGtleTogMjU2LA0KICBpdjogMTYsDQogIG1vZGU6ICdPRkInLA0KICB0eXBlOiAnc3RyZWFtJw0KfQ0KZXhwb3J0c1snYWVzLTEyOC1jdHInXSA9IHsNCiAgY2lwaGVyOiAnQUVTJywNCiAga2V5OiAxMjgsDQogIGl2OiAxNiwNCiAgbW9kZTogJ0NUUicsDQogIHR5cGU6ICdzdHJlYW0nDQp9DQpleHBvcnRzWydhZXMtMTkyLWN0ciddID0gew0KICBjaXBoZXI6ICdBRVMnLA0KICBrZXk6IDE5MiwNCiAgaXY6IDE2LA0KICBtb2RlOiAnQ1RSJywNCiAgdHlwZTogJ3N0cmVhbScNCn0NCmV4cG9ydHNbJ2Flcy0yNTYtY3RyJ10gPSB7DQogIGNpcGhlcjogJ0FFUycsDQogIGtleTogMjU2LA0KICBpdjogMTYsDQogIG1vZGU6ICdDVFInLA0KICB0eXBlOiAnc3RyZWFtJw0KfQ0KZXhwb3J0c1snYWVzLTEyOC1nY20nXSA9IHsNCiAgY2lwaGVyOiAnQUVTJywNCiAga2V5OiAxMjgsDQogIGl2OiAxMiwNCiAgbW9kZTogJ0dDTScsDQogIHR5cGU6ICdhdXRoJw0KfQ0KZXhwb3J0c1snYWVzLTE5Mi1nY20nXSA9IHsNCiAgY2lwaGVyOiAnQUVTJywNCiAga2V5OiAxOTIsDQogIGl2OiAxMiwNCiAgbW9kZTogJ0dDTScsDQogIHR5cGU6ICdhdXRoJw0KfQ0KZXhwb3J0c1snYWVzLTI1Ni1nY20nXSA9IHsNCiAgY2lwaGVyOiAnQUVTJywNCiAga2V5OiAyNTYsDQogIGl2OiAxMiwNCiAgbW9kZTogJ0dDTScsDQogIHR5cGU6ICdhdXRoJw0KfQ0KDQp9LHt9XSw2OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgeG9yID0gcmVxdWlyZSgnYnVmZmVyLXhvcicpDQoNCmV4cG9ydHMuZW5jcnlwdCA9IGZ1bmN0aW9uIChzZWxmLCBibG9jaykgew0KICB2YXIgZGF0YSA9IHhvcihibG9jaywgc2VsZi5fcHJldikNCg0KICBzZWxmLl9wcmV2ID0gc2VsZi5fY2lwaGVyLmVuY3J5cHRCbG9jayhkYXRhKQ0KICByZXR1cm4gc2VsZi5fcHJldg0KfQ0KDQpleHBvcnRzLmRlY3J5cHQgPSBmdW5jdGlvbiAoc2VsZiwgYmxvY2spIHsNCiAgdmFyIHBhZCA9IHNlbGYuX3ByZXYNCg0KICBzZWxmLl9wcmV2ID0gYmxvY2sNCiAgdmFyIG91dCA9IHNlbGYuX2NpcGhlci5kZWNyeXB0QmxvY2soYmxvY2spDQoNCiAgcmV0dXJuIHhvcihvdXQsIHBhZCkNCn0NCg0KfSx7ImJ1ZmZlci14b3IiOjkyfV0sNzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIHhvciA9IHJlcXVpcmUoJ2J1ZmZlci14b3InKQ0KDQpleHBvcnRzLmVuY3J5cHQgPSBmdW5jdGlvbiAoc2VsZiwgZGF0YSwgZGVjcnlwdCkgew0KICB2YXIgb3V0ID0gbmV3IEJ1ZmZlcignJykNCiAgdmFyIGxlbg0KDQogIHdoaWxlIChkYXRhLmxlbmd0aCkgew0KICAgIGlmIChzZWxmLl9jYWNoZS5sZW5ndGggPT09IDApIHsNCiAgICAgIHNlbGYuX2NhY2hlID0gc2VsZi5fY2lwaGVyLmVuY3J5cHRCbG9jayhzZWxmLl9wcmV2KQ0KICAgICAgc2VsZi5fcHJldiA9IG5ldyBCdWZmZXIoJycpDQogICAgfQ0KDQogICAgaWYgKHNlbGYuX2NhY2hlLmxlbmd0aCA8PSBkYXRhLmxlbmd0aCkgew0KICAgICAgbGVuID0gc2VsZi5fY2FjaGUubGVuZ3RoDQogICAgICBvdXQgPSBCdWZmZXIuY29uY2F0KFtvdXQsIGVuY3J5cHRTdGFydChzZWxmLCBkYXRhLnNsaWNlKDAsIGxlbiksIGRlY3J5cHQpXSkNCiAgICAgIGRhdGEgPSBkYXRhLnNsaWNlKGxlbikNCiAgICB9IGVsc2Ugew0KICAgICAgb3V0ID0gQnVmZmVyLmNvbmNhdChbb3V0LCBlbmNyeXB0U3RhcnQoc2VsZiwgZGF0YSwgZGVjcnlwdCldKQ0KICAgICAgYnJlYWsNCiAgICB9DQogIH0NCg0KICByZXR1cm4gb3V0DQp9DQpmdW5jdGlvbiBlbmNyeXB0U3RhcnQgKHNlbGYsIGRhdGEsIGRlY3J5cHQpIHsNCiAgdmFyIGxlbiA9IGRhdGEubGVuZ3RoDQogIHZhciBvdXQgPSB4b3IoZGF0YSwgc2VsZi5fY2FjaGUpDQogIHNlbGYuX2NhY2hlID0gc2VsZi5fY2FjaGUuc2xpY2UobGVuKQ0KICBzZWxmLl9wcmV2ID0gQnVmZmVyLmNvbmNhdChbc2VsZi5fcHJldiwgZGVjcnlwdCA/IGRhdGEgOiBvdXRdKQ0KICByZXR1cm4gb3V0DQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiYnVmZmVyIjo5MywiYnVmZmVyLXhvciI6OTJ9XSw3MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQpmdW5jdGlvbiBlbmNyeXB0Qnl0ZSAoc2VsZiwgYnl0ZVBhcmFtLCBkZWNyeXB0KSB7DQogIHZhciBwYWQNCiAgdmFyIGkgPSAtMQ0KICB2YXIgbGVuID0gOA0KICB2YXIgb3V0ID0gMA0KICB2YXIgYml0LCB2YWx1ZQ0KICB3aGlsZSAoKytpIDwgbGVuKSB7DQogICAgcGFkID0gc2VsZi5fY2lwaGVyLmVuY3J5cHRCbG9jayhzZWxmLl9wcmV2KQ0KICAgIGJpdCA9IChieXRlUGFyYW0gJiAoMSA8PCAoNyAtIGkpKSkgPyAweDgwIDogMA0KICAgIHZhbHVlID0gcGFkWzBdIF4gYml0DQogICAgb3V0ICs9ICgodmFsdWUgJiAweDgwKSA+PiAoaSAlIDgpKQ0KICAgIHNlbGYuX3ByZXYgPSBzaGlmdEluKHNlbGYuX3ByZXYsIGRlY3J5cHQgPyBiaXQgOiB2YWx1ZSkNCiAgfQ0KICByZXR1cm4gb3V0DQp9DQpleHBvcnRzLmVuY3J5cHQgPSBmdW5jdGlvbiAoc2VsZiwgY2h1bmssIGRlY3J5cHQpIHsNCiAgdmFyIGxlbiA9IGNodW5rLmxlbmd0aA0KICB2YXIgb3V0ID0gbmV3IEJ1ZmZlcihsZW4pDQogIHZhciBpID0gLTENCiAgd2hpbGUgKCsraSA8IGxlbikgew0KICAgIG91dFtpXSA9IGVuY3J5cHRCeXRlKHNlbGYsIGNodW5rW2ldLCBkZWNyeXB0KQ0KICB9DQogIHJldHVybiBvdXQNCn0NCmZ1bmN0aW9uIHNoaWZ0SW4gKGJ1ZmZlciwgdmFsdWUpIHsNCiAgdmFyIGxlbiA9IGJ1ZmZlci5sZW5ndGgNCiAgdmFyIGkgPSAtMQ0KICB2YXIgb3V0ID0gbmV3IEJ1ZmZlcihidWZmZXIubGVuZ3RoKQ0KICBidWZmZXIgPSBCdWZmZXIuY29uY2F0KFtidWZmZXIsIG5ldyBCdWZmZXIoW3ZhbHVlXSldKQ0KICB3aGlsZSAoKytpIDwgbGVuKSB7DQogICAgb3V0W2ldID0gYnVmZmVyW2ldIDw8IDEgfCBidWZmZXJbaSArIDFdID4+ICg3KQ0KICB9DQogIHJldHVybiBvdXQNCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJidWZmZXIiOjkzfV0sNzI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KZnVuY3Rpb24gZW5jcnlwdEJ5dGUgKHNlbGYsIGJ5dGVQYXJhbSwgZGVjcnlwdCkgew0KICB2YXIgcGFkID0gc2VsZi5fY2lwaGVyLmVuY3J5cHRCbG9jayhzZWxmLl9wcmV2KQ0KICB2YXIgb3V0ID0gcGFkWzBdIF4gYnl0ZVBhcmFtDQogIHNlbGYuX3ByZXYgPSBCdWZmZXIuY29uY2F0KFtzZWxmLl9wcmV2LnNsaWNlKDEpLCBuZXcgQnVmZmVyKFtkZWNyeXB0ID8gYnl0ZVBhcmFtIDogb3V0XSldKQ0KICByZXR1cm4gb3V0DQp9DQpleHBvcnRzLmVuY3J5cHQgPSBmdW5jdGlvbiAoc2VsZiwgY2h1bmssIGRlY3J5cHQpIHsNCiAgdmFyIGxlbiA9IGNodW5rLmxlbmd0aA0KICB2YXIgb3V0ID0gbmV3IEJ1ZmZlcihsZW4pDQogIHZhciBpID0gLTENCiAgd2hpbGUgKCsraSA8IGxlbikgew0KICAgIG91dFtpXSA9IGVuY3J5cHRCeXRlKHNlbGYsIGNodW5rW2ldLCBkZWNyeXB0KQ0KICB9DQogIHJldHVybiBvdXQNCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJidWZmZXIiOjkzfV0sNzM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIHhvciA9IHJlcXVpcmUoJ2J1ZmZlci14b3InKQ0KDQpmdW5jdGlvbiBpbmNyMzIgKGl2KSB7DQogIHZhciBsZW4gPSBpdi5sZW5ndGgNCiAgdmFyIGl0ZW0NCiAgd2hpbGUgKGxlbi0tKSB7DQogICAgaXRlbSA9IGl2LnJlYWRVSW50OChsZW4pDQogICAgaWYgKGl0ZW0gPT09IDI1NSkgew0KICAgICAgaXYud3JpdGVVSW50OCgwLCBsZW4pDQogICAgfSBlbHNlIHsNCiAgICAgIGl0ZW0rKw0KICAgICAgaXYud3JpdGVVSW50OChpdGVtLCBsZW4pDQogICAgICBicmVhaw0KICAgIH0NCiAgfQ0KfQ0KDQpmdW5jdGlvbiBnZXRCbG9jayAoc2VsZikgew0KICB2YXIgb3V0ID0gc2VsZi5fY2lwaGVyLmVuY3J5cHRCbG9jayhzZWxmLl9wcmV2KQ0KICBpbmNyMzIoc2VsZi5fcHJldikNCiAgcmV0dXJuIG91dA0KfQ0KDQpleHBvcnRzLmVuY3J5cHQgPSBmdW5jdGlvbiAoc2VsZiwgY2h1bmspIHsNCiAgd2hpbGUgKHNlbGYuX2NhY2hlLmxlbmd0aCA8IGNodW5rLmxlbmd0aCkgew0KICAgIHNlbGYuX2NhY2hlID0gQnVmZmVyLmNvbmNhdChbc2VsZi5fY2FjaGUsIGdldEJsb2NrKHNlbGYpXSkNCiAgfQ0KICB2YXIgcGFkID0gc2VsZi5fY2FjaGUuc2xpY2UoMCwgY2h1bmsubGVuZ3RoKQ0KICBzZWxmLl9jYWNoZSA9IHNlbGYuX2NhY2hlLnNsaWNlKGNodW5rLmxlbmd0aCkNCiAgcmV0dXJuIHhvcihjaHVuaywgcGFkKQ0KfQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7ImJ1ZmZlciI6OTMsImJ1ZmZlci14b3IiOjkyfV0sNzQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KZXhwb3J0cy5lbmNyeXB0ID0gZnVuY3Rpb24gKHNlbGYsIGJsb2NrKSB7DQogIHJldHVybiBzZWxmLl9jaXBoZXIuZW5jcnlwdEJsb2NrKGJsb2NrKQ0KfQ0KZXhwb3J0cy5kZWNyeXB0ID0gZnVuY3Rpb24gKHNlbGYsIGJsb2NrKSB7DQogIHJldHVybiBzZWxmLl9jaXBoZXIuZGVjcnlwdEJsb2NrKGJsb2NrKQ0KfQ0KDQp9LHt9XSw3NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQp2YXIgeG9yID0gcmVxdWlyZSgnYnVmZmVyLXhvcicpDQoNCmZ1bmN0aW9uIGdldEJsb2NrIChzZWxmKSB7DQogIHNlbGYuX3ByZXYgPSBzZWxmLl9jaXBoZXIuZW5jcnlwdEJsb2NrKHNlbGYuX3ByZXYpDQogIHJldHVybiBzZWxmLl9wcmV2DQp9DQoNCmV4cG9ydHMuZW5jcnlwdCA9IGZ1bmN0aW9uIChzZWxmLCBjaHVuaykgew0KICB3aGlsZSAoc2VsZi5fY2FjaGUubGVuZ3RoIDwgY2h1bmsubGVuZ3RoKSB7DQogICAgc2VsZi5fY2FjaGUgPSBCdWZmZXIuY29uY2F0KFtzZWxmLl9jYWNoZSwgZ2V0QmxvY2soc2VsZildKQ0KICB9DQoNCiAgdmFyIHBhZCA9IHNlbGYuX2NhY2hlLnNsaWNlKDAsIGNodW5rLmxlbmd0aCkNCiAgc2VsZi5fY2FjaGUgPSBzZWxmLl9jYWNoZS5zbGljZShjaHVuay5sZW5ndGgpDQogIHJldHVybiB4b3IoY2h1bmssIHBhZCkNCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJidWZmZXIiOjkzLCJidWZmZXIteG9yIjo5Mn1dLDc2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCnZhciBhZXMgPSByZXF1aXJlKCcuL2FlcycpDQp2YXIgVHJhbnNmb3JtID0gcmVxdWlyZSgnY2lwaGVyLWJhc2UnKQ0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKQ0KDQppbmhlcml0cyhTdHJlYW1DaXBoZXIsIFRyYW5zZm9ybSkNCm1vZHVsZS5leHBvcnRzID0gU3RyZWFtQ2lwaGVyDQpmdW5jdGlvbiBTdHJlYW1DaXBoZXIgKG1vZGUsIGtleSwgaXYsIGRlY3J5cHQpIHsNCiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFN0cmVhbUNpcGhlcikpIHsNCiAgICByZXR1cm4gbmV3IFN0cmVhbUNpcGhlcihtb2RlLCBrZXksIGl2KQ0KICB9DQogIFRyYW5zZm9ybS5jYWxsKHRoaXMpDQogIHRoaXMuX2NpcGhlciA9IG5ldyBhZXMuQUVTKGtleSkNCiAgdGhpcy5fcHJldiA9IG5ldyBCdWZmZXIoaXYubGVuZ3RoKQ0KICB0aGlzLl9jYWNoZSA9IG5ldyBCdWZmZXIoJycpDQogIHRoaXMuX3NlY0NhY2hlID0gbmV3IEJ1ZmZlcignJykNCiAgdGhpcy5fZGVjcnlwdCA9IGRlY3J5cHQNCiAgaXYuY29weSh0aGlzLl9wcmV2KQ0KICB0aGlzLl9tb2RlID0gbW9kZQ0KfQ0KU3RyZWFtQ2lwaGVyLnByb3RvdHlwZS5fdXBkYXRlID0gZnVuY3Rpb24gKGNodW5rKSB7DQogIHJldHVybiB0aGlzLl9tb2RlLmVuY3J5cHQodGhpcywgY2h1bmssIHRoaXMuX2RlY3J5cHQpDQp9DQpTdHJlYW1DaXBoZXIucHJvdG90eXBlLl9maW5hbCA9IGZ1bmN0aW9uICgpIHsNCiAgdGhpcy5fY2lwaGVyLnNjcnViKCkNCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyIuL2FlcyI6NjIsImJ1ZmZlciI6OTMsImNpcGhlci1iYXNlIjo5NCwiaW5oZXJpdHMiOjUzN31dLDc3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBlYnRrID0gcmVxdWlyZSgnZXZwX2J5dGVzdG9rZXknKQ0KdmFyIGFlcyA9IHJlcXVpcmUoJ2Jyb3dzZXJpZnktYWVzL2Jyb3dzZXInKQ0KdmFyIERFUyA9IHJlcXVpcmUoJ2Jyb3dzZXJpZnktZGVzJykNCnZhciBkZXNNb2RlcyA9IHJlcXVpcmUoJ2Jyb3dzZXJpZnktZGVzL21vZGVzJykNCnZhciBhZXNNb2RlcyA9IHJlcXVpcmUoJ2Jyb3dzZXJpZnktYWVzL21vZGVzJykNCmZ1bmN0aW9uIGNyZWF0ZUNpcGhlciAoc3VpdGUsIHBhc3N3b3JkKSB7DQogIHZhciBrZXlMZW4sIGl2TGVuDQogIHN1aXRlID0gc3VpdGUudG9Mb3dlckNhc2UoKQ0KICBpZiAoYWVzTW9kZXNbc3VpdGVdKSB7DQogICAga2V5TGVuID0gYWVzTW9kZXNbc3VpdGVdLmtleQ0KICAgIGl2TGVuID0gYWVzTW9kZXNbc3VpdGVdLml2DQogIH0gZWxzZSBpZiAoZGVzTW9kZXNbc3VpdGVdKSB7DQogICAga2V5TGVuID0gZGVzTW9kZXNbc3VpdGVdLmtleSAqIDgNCiAgICBpdkxlbiA9IGRlc01vZGVzW3N1aXRlXS5pdg0KICB9IGVsc2Ugew0KICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgc3VpdGUgdHlwZScpDQogIH0NCiAgdmFyIGtleXMgPSBlYnRrKHBhc3N3b3JkLCBmYWxzZSwga2V5TGVuLCBpdkxlbikNCiAgcmV0dXJuIGNyZWF0ZUNpcGhlcml2KHN1aXRlLCBrZXlzLmtleSwga2V5cy5pdikNCn0NCmZ1bmN0aW9uIGNyZWF0ZURlY2lwaGVyIChzdWl0ZSwgcGFzc3dvcmQpIHsNCiAgdmFyIGtleUxlbiwgaXZMZW4NCiAgc3VpdGUgPSBzdWl0ZS50b0xvd2VyQ2FzZSgpDQogIGlmIChhZXNNb2Rlc1tzdWl0ZV0pIHsNCiAgICBrZXlMZW4gPSBhZXNNb2Rlc1tzdWl0ZV0ua2V5DQogICAgaXZMZW4gPSBhZXNNb2Rlc1tzdWl0ZV0uaXYNCiAgfSBlbHNlIGlmIChkZXNNb2Rlc1tzdWl0ZV0pIHsNCiAgICBrZXlMZW4gPSBkZXNNb2Rlc1tzdWl0ZV0ua2V5ICogOA0KICAgIGl2TGVuID0gZGVzTW9kZXNbc3VpdGVdLml2DQogIH0gZWxzZSB7DQogICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW52YWxpZCBzdWl0ZSB0eXBlJykNCiAgfQ0KICB2YXIga2V5cyA9IGVidGsocGFzc3dvcmQsIGZhbHNlLCBrZXlMZW4sIGl2TGVuKQ0KICByZXR1cm4gY3JlYXRlRGVjaXBoZXJpdihzdWl0ZSwga2V5cy5rZXksIGtleXMuaXYpDQp9DQoNCmZ1bmN0aW9uIGNyZWF0ZUNpcGhlcml2IChzdWl0ZSwga2V5LCBpdikgew0KICBzdWl0ZSA9IHN1aXRlLnRvTG93ZXJDYXNlKCkNCiAgaWYgKGFlc01vZGVzW3N1aXRlXSkgew0KICAgIHJldHVybiBhZXMuY3JlYXRlQ2lwaGVyaXYoc3VpdGUsIGtleSwgaXYpDQogIH0gZWxzZSBpZiAoZGVzTW9kZXNbc3VpdGVdKSB7DQogICAgcmV0dXJuIG5ldyBERVMoew0KICAgICAga2V5OiBrZXksDQogICAgICBpdjogaXYsDQogICAgICBtb2RlOiBzdWl0ZQ0KICAgIH0pDQogIH0gZWxzZSB7DQogICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW52YWxpZCBzdWl0ZSB0eXBlJykNCiAgfQ0KfQ0KZnVuY3Rpb24gY3JlYXRlRGVjaXBoZXJpdiAoc3VpdGUsIGtleSwgaXYpIHsNCiAgc3VpdGUgPSBzdWl0ZS50b0xvd2VyQ2FzZSgpDQogIGlmIChhZXNNb2Rlc1tzdWl0ZV0pIHsNCiAgICByZXR1cm4gYWVzLmNyZWF0ZURlY2lwaGVyaXYoc3VpdGUsIGtleSwgaXYpDQogIH0gZWxzZSBpZiAoZGVzTW9kZXNbc3VpdGVdKSB7DQogICAgcmV0dXJuIG5ldyBERVMoew0KICAgICAga2V5OiBrZXksDQogICAgICBpdjogaXYsDQogICAgICBtb2RlOiBzdWl0ZSwNCiAgICAgIGRlY3J5cHQ6IHRydWUNCiAgICB9KQ0KICB9IGVsc2Ugew0KICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgc3VpdGUgdHlwZScpDQogIH0NCn0NCmV4cG9ydHMuY3JlYXRlQ2lwaGVyID0gZXhwb3J0cy5DaXBoZXIgPSBjcmVhdGVDaXBoZXINCmV4cG9ydHMuY3JlYXRlQ2lwaGVyaXYgPSBleHBvcnRzLkNpcGhlcml2ID0gY3JlYXRlQ2lwaGVyaXYNCmV4cG9ydHMuY3JlYXRlRGVjaXBoZXIgPSBleHBvcnRzLkRlY2lwaGVyID0gY3JlYXRlRGVjaXBoZXINCmV4cG9ydHMuY3JlYXRlRGVjaXBoZXJpdiA9IGV4cG9ydHMuRGVjaXBoZXJpdiA9IGNyZWF0ZURlY2lwaGVyaXYNCmZ1bmN0aW9uIGdldENpcGhlcnMgKCkgew0KICByZXR1cm4gT2JqZWN0LmtleXMoZGVzTW9kZXMpLmNvbmNhdChhZXMuZ2V0Q2lwaGVycygpKQ0KfQ0KZXhwb3J0cy5saXN0Q2lwaGVycyA9IGV4cG9ydHMuZ2V0Q2lwaGVycyA9IGdldENpcGhlcnMNCg0KfSx7ImJyb3dzZXJpZnktYWVzL2Jyb3dzZXIiOjY0LCJicm93c2VyaWZ5LWFlcy9tb2RlcyI6NjgsImJyb3dzZXJpZnktZGVzIjo3OCwiYnJvd3NlcmlmeS1kZXMvbW9kZXMiOjc5LCJldnBfYnl0ZXN0b2tleSI6NTI2fV0sNzg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIENpcGhlckJhc2UgPSByZXF1aXJlKCdjaXBoZXItYmFzZScpDQp2YXIgZGVzID0gcmVxdWlyZSgnZGVzLmpzJykNCnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJykNCg0KdmFyIG1vZGVzID0gew0KICAnZGVzLWVkZTMtY2JjJzogZGVzLkNCQy5pbnN0YW50aWF0ZShkZXMuRURFKSwNCiAgJ2Rlcy1lZGUzJzogZGVzLkVERSwNCiAgJ2Rlcy1lZGUtY2JjJzogZGVzLkNCQy5pbnN0YW50aWF0ZShkZXMuRURFKSwNCiAgJ2Rlcy1lZGUnOiBkZXMuRURFLA0KICAnZGVzLWNiYyc6IGRlcy5DQkMuaW5zdGFudGlhdGUoZGVzLkRFUyksDQogICdkZXMtZWNiJzogZGVzLkRFUw0KfQ0KbW9kZXMuZGVzID0gbW9kZXNbJ2Rlcy1jYmMnXQ0KbW9kZXMuZGVzMyA9IG1vZGVzWydkZXMtZWRlMy1jYmMnXQ0KbW9kdWxlLmV4cG9ydHMgPSBERVMNCmluaGVyaXRzKERFUywgQ2lwaGVyQmFzZSkNCmZ1bmN0aW9uIERFUyAob3B0cykgew0KICBDaXBoZXJCYXNlLmNhbGwodGhpcykNCiAgdmFyIG1vZGVOYW1lID0gb3B0cy5tb2RlLnRvTG93ZXJDYXNlKCkNCiAgdmFyIG1vZGUgPSBtb2Rlc1ttb2RlTmFtZV0NCiAgdmFyIHR5cGUNCiAgaWYgKG9wdHMuZGVjcnlwdCkgew0KICAgIHR5cGUgPSAnZGVjcnlwdCcNCiAgfSBlbHNlIHsNCiAgICB0eXBlID0gJ2VuY3J5cHQnDQogIH0NCiAgdmFyIGtleSA9IG9wdHMua2V5DQogIGlmIChtb2RlTmFtZSA9PT0gJ2Rlcy1lZGUnIHx8IG1vZGVOYW1lID09PSAnZGVzLWVkZS1jYmMnKSB7DQogICAga2V5ID0gQnVmZmVyLmNvbmNhdChba2V5LCBrZXkuc2xpY2UoMCwgOCldKQ0KICB9DQogIHZhciBpdiA9IG9wdHMuaXYNCiAgdGhpcy5fZGVzID0gbW9kZS5jcmVhdGUoew0KICAgIGtleToga2V5LA0KICAgIGl2OiBpdiwNCiAgICB0eXBlOiB0eXBlDQogIH0pDQp9DQpERVMucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoZGF0YSkgew0KICByZXR1cm4gbmV3IEJ1ZmZlcih0aGlzLl9kZXMudXBkYXRlKGRhdGEpKQ0KfQ0KREVTLnByb3RvdHlwZS5fZmluYWwgPSBmdW5jdGlvbiAoKSB7DQogIHJldHVybiBuZXcgQnVmZmVyKHRoaXMuX2Rlcy5maW5hbCgpKQ0KfQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7ImJ1ZmZlciI6OTMsImNpcGhlci1iYXNlIjo5NCwiZGVzLmpzIjo0OTMsImluaGVyaXRzIjo1Mzd9XSw3OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpleHBvcnRzWydkZXMtZWNiJ10gPSB7DQogIGtleTogOCwNCiAgaXY6IDANCn0NCmV4cG9ydHNbJ2Rlcy1jYmMnXSA9IGV4cG9ydHMuZGVzID0gew0KICBrZXk6IDgsDQogIGl2OiA4DQp9DQpleHBvcnRzWydkZXMtZWRlMy1jYmMnXSA9IGV4cG9ydHMuZGVzMyA9IHsNCiAga2V5OiAyNCwNCiAgaXY6IDgNCn0NCmV4cG9ydHNbJ2Rlcy1lZGUzJ10gPSB7DQogIGtleTogMjQsDQogIGl2OiAwDQp9DQpleHBvcnRzWydkZXMtZWRlLWNiYyddID0gew0KICBrZXk6IDE2LA0KICBpdjogOA0KfQ0KZXhwb3J0c1snZGVzLWVkZSddID0gew0KICBrZXk6IDE2LA0KICBpdjogMA0KfQ0KDQp9LHt9XSw4MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQp2YXIgYm4gPSByZXF1aXJlKCdibi5qcycpOw0KdmFyIHJhbmRvbUJ5dGVzID0gcmVxdWlyZSgncmFuZG9tYnl0ZXMnKTsNCm1vZHVsZS5leHBvcnRzID0gY3J0Ow0KZnVuY3Rpb24gYmxpbmQocHJpdikgew0KICB2YXIgciA9IGdldHIocHJpdik7DQogIHZhciBibGluZGVyID0gci50b1JlZChibi5tb250KHByaXYubW9kdWx1cykpDQogIC5yZWRQb3cobmV3IGJuKHByaXYucHVibGljRXhwb25lbnQpKS5mcm9tUmVkKCk7DQogIHJldHVybiB7DQogICAgYmxpbmRlcjogYmxpbmRlciwNCiAgICB1bmJsaW5kZXI6ci5pbnZtKHByaXYubW9kdWx1cykNCiAgfTsNCn0NCmZ1bmN0aW9uIGNydChtc2csIHByaXYpIHsNCiAgdmFyIGJsaW5kcyA9IGJsaW5kKHByaXYpOw0KICB2YXIgbGVuID0gcHJpdi5tb2R1bHVzLmJ5dGVMZW5ndGgoKTsNCiAgdmFyIG1vZCA9IGJuLm1vbnQocHJpdi5tb2R1bHVzKTsNCiAgdmFyIGJsaW5kZWQgPSBuZXcgYm4obXNnKS5tdWwoYmxpbmRzLmJsaW5kZXIpLnVtb2QocHJpdi5tb2R1bHVzKTsNCiAgdmFyIGMxID0gYmxpbmRlZC50b1JlZChibi5tb250KHByaXYucHJpbWUxKSk7DQogIHZhciBjMiA9IGJsaW5kZWQudG9SZWQoYm4ubW9udChwcml2LnByaW1lMikpOw0KICB2YXIgcWludiA9IHByaXYuY29lZmZpY2llbnQ7DQogIHZhciBwID0gcHJpdi5wcmltZTE7DQogIHZhciBxID0gcHJpdi5wcmltZTI7DQogIHZhciBtMSA9IGMxLnJlZFBvdyhwcml2LmV4cG9uZW50MSk7DQogIHZhciBtMiA9IGMyLnJlZFBvdyhwcml2LmV4cG9uZW50Mik7DQogIG0xID0gbTEuZnJvbVJlZCgpOw0KICBtMiA9IG0yLmZyb21SZWQoKTsNCiAgdmFyIGggPSBtMS5pc3ViKG0yKS5pbXVsKHFpbnYpLnVtb2QocCk7DQogIGguaW11bChxKTsNCiAgbTIuaWFkZChoKTsNCiAgcmV0dXJuIG5ldyBCdWZmZXIobTIuaW11bChibGluZHMudW5ibGluZGVyKS51bW9kKHByaXYubW9kdWx1cykudG9BcnJheShmYWxzZSwgbGVuKSk7DQp9DQpjcnQuZ2V0ciA9IGdldHI7DQpmdW5jdGlvbiBnZXRyKHByaXYpIHsNCiAgdmFyIGxlbiA9IHByaXYubW9kdWx1cy5ieXRlTGVuZ3RoKCk7DQogIHZhciByID0gbmV3IGJuKHJhbmRvbUJ5dGVzKGxlbikpOw0KICB3aGlsZSAoci5jbXAocHJpdi5tb2R1bHVzKSA+PSAgMCB8fCAhci51bW9kKHByaXYucHJpbWUxKSB8fCAhci51bW9kKHByaXYucHJpbWUyKSkgew0KICAgIHIgPSBuZXcgYm4ocmFuZG9tQnl0ZXMobGVuKSk7DQogIH0NCiAgcmV0dXJuIHI7DQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiYm4uanMiOjU5LCJidWZmZXIiOjkzLCJyYW5kb21ieXRlcyI6NTU4fV0sODE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KJ3VzZSBzdHJpY3QnDQpleHBvcnRzWydSU0EtU0hBMjI0J10gPSBleHBvcnRzLnNoYTIyNFdpdGhSU0FFbmNyeXB0aW9uID0gew0KICBzaWduOiAncnNhJywNCiAgaGFzaDogJ3NoYTIyNCcsDQogIGlkOiBuZXcgQnVmZmVyKCczMDJkMzAwZDA2MDk2MDg2NDgwMTY1MDMwNDAyMDQwNTAwMDQxYycsICdoZXgnKQ0KfQ0KZXhwb3J0c1snUlNBLVNIQTI1NiddID0gZXhwb3J0cy5zaGEyNTZXaXRoUlNBRW5jcnlwdGlvbiA9IHsNCiAgc2lnbjogJ3JzYScsDQogIGhhc2g6ICdzaGEyNTYnLA0KICBpZDogbmV3IEJ1ZmZlcignMzAzMTMwMGQwNjA5NjA4NjQ4MDE2NTAzMDQwMjAxMDUwMDA0MjAnLCAnaGV4JykNCn0NCmV4cG9ydHNbJ1JTQS1TSEEzODQnXSA9IGV4cG9ydHMuc2hhMzg0V2l0aFJTQUVuY3J5cHRpb24gPSB7DQogIHNpZ246ICdyc2EnLA0KICBoYXNoOiAnc2hhMzg0JywNCiAgaWQ6IG5ldyBCdWZmZXIoJzMwNDEzMDBkMDYwOTYwODY0ODAxNjUwMzA0MDIwMjA1MDAwNDMwJywgJ2hleCcpDQp9DQpleHBvcnRzWydSU0EtU0hBNTEyJ10gPSBleHBvcnRzLnNoYTUxMldpdGhSU0FFbmNyeXB0aW9uID0gew0KICBzaWduOiAncnNhJywNCiAgaGFzaDogJ3NoYTUxMicsDQogIGlkOiBuZXcgQnVmZmVyKCczMDUxMzAwZDA2MDk2MDg2NDgwMTY1MDMwNDAyMDMwNTAwMDQ0MCcsICdoZXgnKQ0KfQ0KZXhwb3J0c1snUlNBLVNIQTEnXSA9IHsNCiAgc2lnbjogJ3JzYScsDQogIGhhc2g6ICdzaGExJywNCiAgaWQ6IG5ldyBCdWZmZXIoJzMwMjEzMDA5MDYwNTJiMGUwMzAyMWEwNTAwMDQxNCcsICdoZXgnKQ0KfQ0KZXhwb3J0c1snZWNkc2Etd2l0aC1TSEExJ10gPSB7DQogIHNpZ246ICdlY2RzYScsDQogIGhhc2g6ICdzaGExJywNCiAgaWQ6IG5ldyBCdWZmZXIoJycsICdoZXgnKQ0KfQ0KDQpleHBvcnRzLkRTQSA9IGV4cG9ydHNbJ0RTQS1TSEExJ10gPSBleHBvcnRzWydEU0EtU0hBJ10gPSB7DQogIHNpZ246ICdkc2EnLA0KICBoYXNoOiAnc2hhMScsDQogIGlkOiBuZXcgQnVmZmVyKCcnLCAnaGV4JykNCn0NCmV4cG9ydHNbJ0RTQS1TSEEyMjQnXSA9IGV4cG9ydHNbJ0RTQS1XSVRILVNIQTIyNCddID0gew0KICBzaWduOiAnZHNhJywNCiAgaGFzaDogJ3NoYTIyNCcsDQogIGlkOiBuZXcgQnVmZmVyKCcnLCAnaGV4JykNCn0NCmV4cG9ydHNbJ0RTQS1TSEEyNTYnXSA9IGV4cG9ydHNbJ0RTQS1XSVRILVNIQTI1NiddID0gew0KICBzaWduOiAnZHNhJywNCiAgaGFzaDogJ3NoYTI1NicsDQogIGlkOiBuZXcgQnVmZmVyKCcnLCAnaGV4JykNCn0NCmV4cG9ydHNbJ0RTQS1TSEEzODQnXSA9IGV4cG9ydHNbJ0RTQS1XSVRILVNIQTM4NCddID0gew0KICBzaWduOiAnZHNhJywNCiAgaGFzaDogJ3NoYTM4NCcsDQogIGlkOiBuZXcgQnVmZmVyKCcnLCAnaGV4JykNCn0NCmV4cG9ydHNbJ0RTQS1TSEE1MTInXSA9IGV4cG9ydHNbJ0RTQS1XSVRILVNIQTUxMiddID0gew0KICBzaWduOiAnZHNhJywNCiAgaGFzaDogJ3NoYTUxMicsDQogIGlkOiBuZXcgQnVmZmVyKCcnLCAnaGV4JykNCn0NCmV4cG9ydHNbJ0RTQS1SSVBFTUQxNjAnXSA9IHsNCiAgc2lnbjogJ2RzYScsDQogIGhhc2g6ICdybWQxNjAnLA0KICBpZDogbmV3IEJ1ZmZlcignJywgJ2hleCcpDQp9DQpleHBvcnRzWydSU0EtUklQRU1EMTYwJ10gPSBleHBvcnRzLnJpcGVtZDE2MFdpdGhSU0EgPSB7DQogIHNpZ246ICdyc2EnLA0KICBoYXNoOiAncm1kMTYwJywNCiAgaWQ6IG5ldyBCdWZmZXIoJzMwMjEzMDA5MDYwNTJiMjQwMzAyMDEwNTAwMDQxNCcsICdoZXgnKQ0KfQ0KZXhwb3J0c1snUlNBLU1ENSddID0gZXhwb3J0cy5tZDVXaXRoUlNBRW5jcnlwdGlvbiA9IHsNCiAgc2lnbjogJ3JzYScsDQogIGhhc2g6ICdtZDUnLA0KICBpZDogbmV3IEJ1ZmZlcignMzAyMDMwMGMwNjA4MmE4NjQ4ODZmNzBkMDIwNTA1MDAwNDEwJywgJ2hleCcpDQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiYnVmZmVyIjo5M31dLDgyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCnZhciBfYWxnb3MgPSByZXF1aXJlKCcuL2FsZ29zJykNCnZhciBjcmVhdGVIYXNoID0gcmVxdWlyZSgnY3JlYXRlLWhhc2gnKQ0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKQ0KdmFyIHNpZ24gPSByZXF1aXJlKCcuL3NpZ24nKQ0KdmFyIHN0cmVhbSA9IHJlcXVpcmUoJ3N0cmVhbScpDQp2YXIgdmVyaWZ5ID0gcmVxdWlyZSgnLi92ZXJpZnknKQ0KDQp2YXIgYWxnb3MgPSB7fQ0KT2JqZWN0LmtleXMoX2FsZ29zKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsNCiAgYWxnb3Nba2V5XSA9IGFsZ29zW2tleS50b0xvd2VyQ2FzZSgpXSA9IF9hbGdvc1trZXldDQp9KQ0KDQpmdW5jdGlvbiBTaWduIChhbGdvcml0aG0pIHsNCiAgc3RyZWFtLldyaXRhYmxlLmNhbGwodGhpcykNCg0KICB2YXIgZGF0YSA9IGFsZ29zW2FsZ29yaXRobV0NCiAgaWYgKCFkYXRhKSB7DQogICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIG1lc3NhZ2UgZGlnZXN0JykNCiAgfQ0KDQogIHRoaXMuX2hhc2hUeXBlID0gZGF0YS5oYXNoDQogIHRoaXMuX2hhc2ggPSBjcmVhdGVIYXNoKGRhdGEuaGFzaCkNCiAgdGhpcy5fdGFnID0gZGF0YS5pZA0KICB0aGlzLl9zaWduVHlwZSA9IGRhdGEuc2lnbg0KfQ0KaW5oZXJpdHMoU2lnbiwgc3RyZWFtLldyaXRhYmxlKQ0KDQpTaWduLnByb3RvdHlwZS5fd3JpdGUgPSBmdW5jdGlvbiBfd3JpdGUgKGRhdGEsIF8sIGRvbmUpIHsNCiAgdGhpcy5faGFzaC51cGRhdGUoZGF0YSkNCiAgZG9uZSgpDQp9DQoNClNpZ24ucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIHVwZGF0ZSAoZGF0YSwgZW5jKSB7DQogIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHsNCiAgICBkYXRhID0gbmV3IEJ1ZmZlcihkYXRhLCBlbmMpDQogIH0NCg0KICB0aGlzLl9oYXNoLnVwZGF0ZShkYXRhKQ0KICByZXR1cm4gdGhpcw0KfQ0KDQpTaWduLnByb3RvdHlwZS5zaWduID0gZnVuY3Rpb24gc2lnbk1ldGhvZCAoa2V5LCBlbmMpIHsNCiAgdGhpcy5lbmQoKQ0KICB2YXIgaGFzaCA9IHRoaXMuX2hhc2guZGlnZXN0KCkNCiAgdmFyIHNpZyA9IHNpZ24oQnVmZmVyLmNvbmNhdChbdGhpcy5fdGFnLCBoYXNoXSksIGtleSwgdGhpcy5faGFzaFR5cGUsIHRoaXMuX3NpZ25UeXBlKQ0KDQogIHJldHVybiBlbmMgPyBzaWcudG9TdHJpbmcoZW5jKSA6IHNpZw0KfQ0KDQpmdW5jdGlvbiBWZXJpZnkgKGFsZ29yaXRobSkgew0KICBzdHJlYW0uV3JpdGFibGUuY2FsbCh0aGlzKQ0KDQogIHZhciBkYXRhID0gYWxnb3NbYWxnb3JpdGhtXQ0KICBpZiAoIWRhdGEpIHsNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gbWVzc2FnZSBkaWdlc3QnKQ0KICB9DQoNCiAgdGhpcy5faGFzaCA9IGNyZWF0ZUhhc2goZGF0YS5oYXNoKQ0KICB0aGlzLl90YWcgPSBkYXRhLmlkDQogIHRoaXMuX3NpZ25UeXBlID0gZGF0YS5zaWduDQp9DQppbmhlcml0cyhWZXJpZnksIHN0cmVhbS5Xcml0YWJsZSkNCg0KVmVyaWZ5LnByb3RvdHlwZS5fd3JpdGUgPSBmdW5jdGlvbiBfd3JpdGUgKGRhdGEsIF8sIGRvbmUpIHsNCiAgdGhpcy5faGFzaC51cGRhdGUoZGF0YSkNCg0KICBkb25lKCkNCn0NCg0KVmVyaWZ5LnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiB1cGRhdGUgKGRhdGEsIGVuYykgew0KICBpZiAodHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnKSB7DQogICAgZGF0YSA9IG5ldyBCdWZmZXIoZGF0YSwgZW5jKQ0KICB9DQoNCiAgdGhpcy5faGFzaC51cGRhdGUoZGF0YSkNCiAgcmV0dXJuIHRoaXMNCn0NCg0KVmVyaWZ5LnByb3RvdHlwZS52ZXJpZnkgPSBmdW5jdGlvbiB2ZXJpZnlNZXRob2QgKGtleSwgc2lnLCBlbmMpIHsNCiAgaWYgKHR5cGVvZiBzaWcgPT09ICdzdHJpbmcnKSB7DQogICAgc2lnID0gbmV3IEJ1ZmZlcihzaWcsIGVuYykNCiAgfQ0KDQogIHRoaXMuZW5kKCkNCiAgdmFyIGhhc2ggPSB0aGlzLl9oYXNoLmRpZ2VzdCgpDQoNCiAgcmV0dXJuIHZlcmlmeShzaWcsIEJ1ZmZlci5jb25jYXQoW3RoaXMuX3RhZywgaGFzaF0pLCBrZXksIHRoaXMuX3NpZ25UeXBlKQ0KfQ0KDQpmdW5jdGlvbiBjcmVhdGVTaWduIChhbGdvcml0aG0pIHsNCiAgcmV0dXJuIG5ldyBTaWduKGFsZ29yaXRobSkNCn0NCg0KZnVuY3Rpb24gY3JlYXRlVmVyaWZ5IChhbGdvcml0aG0pIHsNCiAgcmV0dXJuIG5ldyBWZXJpZnkoYWxnb3JpdGhtKQ0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IHsNCiAgU2lnbjogY3JlYXRlU2lnbiwNCiAgVmVyaWZ5OiBjcmVhdGVWZXJpZnksDQogIGNyZWF0ZVNpZ246IGNyZWF0ZVNpZ24sDQogIGNyZWF0ZVZlcmlmeTogY3JlYXRlVmVyaWZ5DQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiLi9hbGdvcyI6ODEsIi4vc2lnbiI6ODQsIi4vdmVyaWZ5Ijo4NSwiYnVmZmVyIjo5MywiY3JlYXRlLWhhc2giOjQ4OCwiaW5oZXJpdHMiOjUzNywic3RyZWFtIjo1ODB9XSw4MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCcNCmV4cG9ydHNbJzEuMy4xMzIuMC4xMCddID0gJ3NlY3AyNTZrMScNCg0KZXhwb3J0c1snMS4zLjEzMi4wLjMzJ10gPSAncDIyNCcNCg0KZXhwb3J0c1snMS4yLjg0MC4xMDA0NS4zLjEuMSddID0gJ3AxOTInDQoNCmV4cG9ydHNbJzEuMi44NDAuMTAwNDUuMy4xLjcnXSA9ICdwMjU2Jw0KDQpleHBvcnRzWycxLjMuMTMyLjAuMzQnXSA9ICdwMzg0Jw0KDQpleHBvcnRzWycxLjMuMTMyLjAuMzUnXSA9ICdwNTIxJw0KDQp9LHt9XSw4NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQovLyBtdWNoIG9mIHRoaXMgYmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL2luZHV0bnkvc2VsZi1zaWduZWQvYmxvYi9naC1wYWdlcy9saWIvcnNhLmpzDQp2YXIgY3JlYXRlSG1hYyA9IHJlcXVpcmUoJ2NyZWF0ZS1obWFjJykNCnZhciBjcnQgPSByZXF1aXJlKCdicm93c2VyaWZ5LXJzYScpDQp2YXIgY3VydmVzID0gcmVxdWlyZSgnLi9jdXJ2ZXMnKQ0KdmFyIGVsbGlwdGljID0gcmVxdWlyZSgnZWxsaXB0aWMnKQ0KdmFyIHBhcnNlS2V5cyA9IHJlcXVpcmUoJ3BhcnNlLWFzbjEnKQ0KDQp2YXIgQk4gPSByZXF1aXJlKCdibi5qcycpDQp2YXIgRUMgPSBlbGxpcHRpYy5lYw0KDQpmdW5jdGlvbiBzaWduIChoYXNoLCBrZXksIGhhc2hUeXBlLCBzaWduVHlwZSkgew0KICB2YXIgcHJpdiA9IHBhcnNlS2V5cyhrZXkpDQogIGlmIChwcml2LmN1cnZlKSB7DQogICAgaWYgKHNpZ25UeXBlICE9PSAnZWNkc2EnKSB0aHJvdyBuZXcgRXJyb3IoJ3dyb25nIHByaXZhdGUga2V5IHR5cGUnKQ0KDQogICAgcmV0dXJuIGVjU2lnbihoYXNoLCBwcml2KQ0KICB9IGVsc2UgaWYgKHByaXYudHlwZSA9PT0gJ2RzYScpIHsNCiAgICBpZiAoc2lnblR5cGUgIT09ICdkc2EnKSB7DQogICAgICB0aHJvdyBuZXcgRXJyb3IoJ3dyb25nIHByaXZhdGUga2V5IHR5cGUnKQ0KICAgIH0NCiAgICByZXR1cm4gZHNhU2lnbihoYXNoLCBwcml2LCBoYXNoVHlwZSkNCiAgfSBlbHNlIHsNCiAgICBpZiAoc2lnblR5cGUgIT09ICdyc2EnKSB0aHJvdyBuZXcgRXJyb3IoJ3dyb25nIHByaXZhdGUga2V5IHR5cGUnKQ0KICB9DQoNCiAgdmFyIGxlbiA9IHByaXYubW9kdWx1cy5ieXRlTGVuZ3RoKCkNCiAgdmFyIHBhZCA9IFsgMCwgMSBdDQogIHdoaWxlIChoYXNoLmxlbmd0aCArIHBhZC5sZW5ndGggKyAxIDwgbGVuKSB7DQogICAgcGFkLnB1c2goMHhmZikNCiAgfQ0KICBwYWQucHVzaCgweDAwKQ0KICB2YXIgaSA9IC0xDQogIHdoaWxlICgrK2kgPCBoYXNoLmxlbmd0aCkgew0KICAgIHBhZC5wdXNoKGhhc2hbaV0pDQogIH0NCg0KICB2YXIgb3V0ID0gY3J0KHBhZCwgcHJpdikNCiAgcmV0dXJuIG91dA0KfQ0KDQpmdW5jdGlvbiBlY1NpZ24gKGhhc2gsIHByaXYpIHsNCiAgdmFyIGN1cnZlSWQgPSBjdXJ2ZXNbcHJpdi5jdXJ2ZS5qb2luKCcuJyldDQogIGlmICghY3VydmVJZCkgdGhyb3cgbmV3IEVycm9yKCd1bmtub3duIGN1cnZlICcgKyBwcml2LmN1cnZlLmpvaW4oJy4nKSkNCg0KICB2YXIgY3VydmUgPSBuZXcgRUMoY3VydmVJZCkNCiAgdmFyIGtleSA9IGN1cnZlLmdlbktleVBhaXIoKQ0KDQogIGtleS5faW1wb3J0UHJpdmF0ZShwcml2LnByaXZhdGVLZXkpDQogIHZhciBvdXQgPSBrZXkuc2lnbihoYXNoKQ0KDQogIHJldHVybiBuZXcgQnVmZmVyKG91dC50b0RFUigpKQ0KfQ0KDQpmdW5jdGlvbiBkc2FTaWduIChoYXNoLCBwcml2LCBhbGdvKSB7DQogIHZhciB4ID0gcHJpdi5wYXJhbXMucHJpdl9rZXkNCiAgdmFyIHAgPSBwcml2LnBhcmFtcy5wDQogIHZhciBxID0gcHJpdi5wYXJhbXMucQ0KICB2YXIgZyA9IHByaXYucGFyYW1zLmcNCiAgdmFyIHIgPSBuZXcgQk4oMCkNCiAgdmFyIGsNCiAgdmFyIEggPSBiaXRzMmludChoYXNoLCBxKS5tb2QocSkNCiAgdmFyIHMgPSBmYWxzZQ0KICB2YXIga3YgPSBnZXRLZXkoeCwgcSwgaGFzaCwgYWxnbykNCiAgd2hpbGUgKHMgPT09IGZhbHNlKSB7DQogICAgayA9IG1ha2VLZXkocSwga3YsIGFsZ28pDQogICAgciA9IG1ha2VSKGcsIGssIHAsIHEpDQogICAgcyA9IGsuaW52bShxKS5pbXVsKEguYWRkKHgubXVsKHIpKSkubW9kKHEpDQogICAgaWYgKCFzLmNtcG4oMCkpIHsNCiAgICAgIHMgPSBmYWxzZQ0KICAgICAgciA9IG5ldyBCTigwKQ0KICAgIH0NCiAgfQ0KICByZXR1cm4gdG9ERVIociwgcykNCn0NCg0KZnVuY3Rpb24gdG9ERVIgKHIsIHMpIHsNCiAgciA9IHIudG9BcnJheSgpDQogIHMgPSBzLnRvQXJyYXkoKQ0KDQogIC8vIFBhZCB2YWx1ZXMNCiAgaWYgKHJbMF0gJiAweDgwKSB7DQogICAgciA9IFsgMCBdLmNvbmNhdChyKQ0KICB9DQogIC8vIFBhZCB2YWx1ZXMNCiAgaWYgKHNbMF0gJiAweDgwKSB7DQogICAgcyA9IFswXS5jb25jYXQocykNCiAgfQ0KDQogIHZhciB0b3RhbCA9IHIubGVuZ3RoICsgcy5sZW5ndGggKyA0DQogIHZhciByZXMgPSBbIDB4MzAsIHRvdGFsLCAweDAyLCByLmxlbmd0aCBdDQogIHJlcyA9IHJlcy5jb25jYXQociwgWyAweDAyLCBzLmxlbmd0aCBdLCBzKQ0KICByZXR1cm4gbmV3IEJ1ZmZlcihyZXMpDQp9DQoNCmZ1bmN0aW9uIGdldEtleSAoeCwgcSwgaGFzaCwgYWxnbykgew0KICB4ID0gbmV3IEJ1ZmZlcih4LnRvQXJyYXkoKSkNCiAgaWYgKHgubGVuZ3RoIDwgcS5ieXRlTGVuZ3RoKCkpIHsNCiAgICB2YXIgemVyb3MgPSBuZXcgQnVmZmVyKHEuYnl0ZUxlbmd0aCgpIC0geC5sZW5ndGgpDQogICAgemVyb3MuZmlsbCgwKQ0KICAgIHggPSBCdWZmZXIuY29uY2F0KFt6ZXJvcywgeF0pDQogIH0NCiAgdmFyIGhsZW4gPSBoYXNoLmxlbmd0aA0KICB2YXIgaGJpdHMgPSBiaXRzMm9jdGV0cyhoYXNoLCBxKQ0KICB2YXIgdiA9IG5ldyBCdWZmZXIoaGxlbikNCiAgdi5maWxsKDEpDQogIHZhciBrID0gbmV3IEJ1ZmZlcihobGVuKQ0KICBrLmZpbGwoMCkNCiAgayA9IGNyZWF0ZUhtYWMoYWxnbywgaykNCiAgICAudXBkYXRlKHYpDQogICAgLnVwZGF0ZShuZXcgQnVmZmVyKFswXSkpDQogICAgLnVwZGF0ZSh4KQ0KICAgIC51cGRhdGUoaGJpdHMpDQogICAgLmRpZ2VzdCgpDQogIHYgPSBjcmVhdGVIbWFjKGFsZ28sIGspDQogICAgLnVwZGF0ZSh2KQ0KICAgIC5kaWdlc3QoKQ0KICBrID0gY3JlYXRlSG1hYyhhbGdvLCBrKQ0KICAgIC51cGRhdGUodikNCiAgICAudXBkYXRlKG5ldyBCdWZmZXIoWzFdKSkNCiAgICAudXBkYXRlKHgpDQogICAgLnVwZGF0ZShoYml0cykNCiAgICAuZGlnZXN0KCkNCiAgdiA9IGNyZWF0ZUhtYWMoYWxnbywgaykNCiAgICAudXBkYXRlKHYpDQogICAgLmRpZ2VzdCgpDQogIHJldHVybiB7DQogICAgazogaywNCiAgICB2OiB2DQogIH0NCn0NCg0KZnVuY3Rpb24gYml0czJpbnQgKG9iaXRzLCBxKSB7DQogIHZhciBiaXRzID0gbmV3IEJOKG9iaXRzKQ0KICB2YXIgc2hpZnQgPSAob2JpdHMubGVuZ3RoIDw8IDMpIC0gcS5iaXRMZW5ndGgoKQ0KICBpZiAoc2hpZnQgPiAwKSB7DQogICAgYml0cy5pc2hybihzaGlmdCkNCiAgfQ0KICByZXR1cm4gYml0cw0KfQ0KDQpmdW5jdGlvbiBiaXRzMm9jdGV0cyAoYml0cywgcSkgew0KICBiaXRzID0gYml0czJpbnQoYml0cywgcSkNCiAgYml0cyA9IGJpdHMubW9kKHEpDQogIHZhciBvdXQgPSBuZXcgQnVmZmVyKGJpdHMudG9BcnJheSgpKQ0KICBpZiAob3V0Lmxlbmd0aCA8IHEuYnl0ZUxlbmd0aCgpKSB7DQogICAgdmFyIHplcm9zID0gbmV3IEJ1ZmZlcihxLmJ5dGVMZW5ndGgoKSAtIG91dC5sZW5ndGgpDQogICAgemVyb3MuZmlsbCgwKQ0KICAgIG91dCA9IEJ1ZmZlci5jb25jYXQoW3plcm9zLCBvdXRdKQ0KICB9DQogIHJldHVybiBvdXQNCn0NCg0KZnVuY3Rpb24gbWFrZUtleSAocSwga3YsIGFsZ28pIHsNCiAgdmFyIHQsIGsNCg0KICBkbyB7DQogICAgdCA9IG5ldyBCdWZmZXIoJycpDQoNCiAgICB3aGlsZSAodC5sZW5ndGggKiA4IDwgcS5iaXRMZW5ndGgoKSkgew0KICAgICAga3YudiA9IGNyZWF0ZUhtYWMoYWxnbywga3YuaykNCiAgICAgICAgLnVwZGF0ZShrdi52KQ0KICAgICAgICAuZGlnZXN0KCkNCiAgICAgIHQgPSBCdWZmZXIuY29uY2F0KFt0LCBrdi52XSkNCiAgICB9DQoNCiAgICBrID0gYml0czJpbnQodCwgcSkNCiAgICBrdi5rID0gY3JlYXRlSG1hYyhhbGdvLCBrdi5rKQ0KICAgICAgLnVwZGF0ZShrdi52KQ0KICAgICAgLnVwZGF0ZShuZXcgQnVmZmVyKFswXSkpDQogICAgICAuZGlnZXN0KCkNCiAgICBrdi52ID0gY3JlYXRlSG1hYyhhbGdvLCBrdi5rKQ0KICAgICAgLnVwZGF0ZShrdi52KQ0KICAgICAgLmRpZ2VzdCgpDQogIH0gd2hpbGUgKGsuY21wKHEpICE9PSAtMSkNCg0KICByZXR1cm4gaw0KfQ0KDQpmdW5jdGlvbiBtYWtlUiAoZywgaywgcCwgcSkgew0KICByZXR1cm4gZy50b1JlZChCTi5tb250KHApKS5yZWRQb3coaykuZnJvbVJlZCgpLm1vZChxKQ0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IHNpZ24NCm1vZHVsZS5leHBvcnRzLmdldEtleSA9IGdldEtleQ0KbW9kdWxlLmV4cG9ydHMubWFrZUtleSA9IG1ha2VLZXkNCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyIuL2N1cnZlcyI6ODMsImJuLmpzIjo1OSwiYnJvd3NlcmlmeS1yc2EiOjgwLCJidWZmZXIiOjkzLCJjcmVhdGUtaG1hYyI6NDkxLCJlbGxpcHRpYyI6NTA4LCJwYXJzZS1hc24xIjo1NDd9XSw4NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQovLyBtdWNoIG9mIHRoaXMgYmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL2luZHV0bnkvc2VsZi1zaWduZWQvYmxvYi9naC1wYWdlcy9saWIvcnNhLmpzDQp2YXIgY3VydmVzID0gcmVxdWlyZSgnLi9jdXJ2ZXMnKQ0KdmFyIGVsbGlwdGljID0gcmVxdWlyZSgnZWxsaXB0aWMnKQ0KdmFyIHBhcnNlS2V5cyA9IHJlcXVpcmUoJ3BhcnNlLWFzbjEnKQ0KDQp2YXIgQk4gPSByZXF1aXJlKCdibi5qcycpDQp2YXIgRUMgPSBlbGxpcHRpYy5lYw0KDQpmdW5jdGlvbiB2ZXJpZnkgKHNpZywgaGFzaCwga2V5LCBzaWduVHlwZSkgew0KICB2YXIgcHViID0gcGFyc2VLZXlzKGtleSkNCiAgaWYgKHB1Yi50eXBlID09PSAnZWMnKSB7DQogICAgaWYgKHNpZ25UeXBlICE9PSAnZWNkc2EnKSB7DQogICAgICB0aHJvdyBuZXcgRXJyb3IoJ3dyb25nIHB1YmxpYyBrZXkgdHlwZScpDQogICAgfQ0KICAgIHJldHVybiBlY1ZlcmlmeShzaWcsIGhhc2gsIHB1YikNCiAgfSBlbHNlIGlmIChwdWIudHlwZSA9PT0gJ2RzYScpIHsNCiAgICBpZiAoc2lnblR5cGUgIT09ICdkc2EnKSB7DQogICAgICB0aHJvdyBuZXcgRXJyb3IoJ3dyb25nIHB1YmxpYyBrZXkgdHlwZScpDQogICAgfQ0KICAgIHJldHVybiBkc2FWZXJpZnkoc2lnLCBoYXNoLCBwdWIpDQogIH0gZWxzZSB7DQogICAgaWYgKHNpZ25UeXBlICE9PSAncnNhJykgew0KICAgICAgdGhyb3cgbmV3IEVycm9yKCd3cm9uZyBwdWJsaWMga2V5IHR5cGUnKQ0KICAgIH0NCiAgfQ0KICB2YXIgbGVuID0gcHViLm1vZHVsdXMuYnl0ZUxlbmd0aCgpDQogIHZhciBwYWQgPSBbIDEgXQ0KICB2YXIgcGFkTnVtID0gMA0KICB3aGlsZSAoaGFzaC5sZW5ndGggKyBwYWQubGVuZ3RoICsgMiA8IGxlbikgew0KICAgIHBhZC5wdXNoKDB4ZmYpDQogICAgcGFkTnVtKysNCiAgfQ0KICBwYWQucHVzaCgweDAwKQ0KICB2YXIgaSA9IC0xDQogIHdoaWxlICgrK2kgPCBoYXNoLmxlbmd0aCkgew0KICAgIHBhZC5wdXNoKGhhc2hbaV0pDQogIH0NCiAgcGFkID0gbmV3IEJ1ZmZlcihwYWQpDQogIHZhciByZWQgPSBCTi5tb250KHB1Yi5tb2R1bHVzKQ0KICBzaWcgPSBuZXcgQk4oc2lnKS50b1JlZChyZWQpDQoNCiAgc2lnID0gc2lnLnJlZFBvdyhuZXcgQk4ocHViLnB1YmxpY0V4cG9uZW50KSkNCg0KICBzaWcgPSBuZXcgQnVmZmVyKHNpZy5mcm9tUmVkKCkudG9BcnJheSgpKQ0KICB2YXIgb3V0ID0gMA0KICBpZiAocGFkTnVtIDwgOCkgew0KICAgIG91dCA9IDENCiAgfQ0KICBsZW4gPSBNYXRoLm1pbihzaWcubGVuZ3RoLCBwYWQubGVuZ3RoKQ0KICBpZiAoc2lnLmxlbmd0aCAhPT0gcGFkLmxlbmd0aCkgew0KICAgIG91dCA9IDENCiAgfQ0KDQogIGkgPSAtMQ0KICB3aGlsZSAoKytpIDwgbGVuKSB7DQogICAgb3V0IHw9IChzaWdbaV0gXiBwYWRbaV0pDQogIH0NCiAgcmV0dXJuIG91dCA9PT0gMA0KfQ0KDQpmdW5jdGlvbiBlY1ZlcmlmeSAoc2lnLCBoYXNoLCBwdWIpIHsNCiAgdmFyIGN1cnZlSWQgPSBjdXJ2ZXNbcHViLmRhdGEuYWxnb3JpdGhtLmN1cnZlLmpvaW4oJy4nKV0NCiAgaWYgKCFjdXJ2ZUlkKSB0aHJvdyBuZXcgRXJyb3IoJ3Vua25vd24gY3VydmUgJyArIHB1Yi5kYXRhLmFsZ29yaXRobS5jdXJ2ZS5qb2luKCcuJykpDQoNCiAgdmFyIGN1cnZlID0gbmV3IEVDKGN1cnZlSWQpDQogIHZhciBwdWJrZXkgPSBwdWIuZGF0YS5zdWJqZWN0UHJpdmF0ZUtleS5kYXRhDQoNCiAgcmV0dXJuIGN1cnZlLnZlcmlmeShoYXNoLCBzaWcsIHB1YmtleSkNCn0NCg0KZnVuY3Rpb24gZHNhVmVyaWZ5IChzaWcsIGhhc2gsIHB1Yikgew0KICB2YXIgcCA9IHB1Yi5kYXRhLnANCiAgdmFyIHEgPSBwdWIuZGF0YS5xDQogIHZhciBnID0gcHViLmRhdGEuZw0KICB2YXIgeSA9IHB1Yi5kYXRhLnB1Yl9rZXkNCiAgdmFyIHVucGFja2VkID0gcGFyc2VLZXlzLnNpZ25hdHVyZS5kZWNvZGUoc2lnLCAnZGVyJykNCiAgdmFyIHMgPSB1bnBhY2tlZC5zDQogIHZhciByID0gdW5wYWNrZWQucg0KICBjaGVja1ZhbHVlKHMsIHEpDQogIGNoZWNrVmFsdWUociwgcSkNCiAgdmFyIG1vbnRwID0gQk4ubW9udChwKQ0KICB2YXIgdyA9IHMuaW52bShxKQ0KICB2YXIgdiA9IGcudG9SZWQobW9udHApDQogICAgLnJlZFBvdyhuZXcgQk4oaGFzaCkubXVsKHcpLm1vZChxKSkNCiAgICAuZnJvbVJlZCgpDQogICAgLm11bCgNCiAgICAgIHkudG9SZWQobW9udHApDQogICAgICAgIC5yZWRQb3coci5tdWwodykubW9kKHEpKQ0KICAgICAgICAuZnJvbVJlZCgpDQogICkubW9kKHApLm1vZChxKQ0KICByZXR1cm4gIXYuY21wKHIpDQp9DQoNCmZ1bmN0aW9uIGNoZWNrVmFsdWUgKGIsIHEpIHsNCiAgaWYgKGIuY21wbigwKSA8PSAwKSB7DQogICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHNpZycpDQogIH0NCiAgaWYgKGIuY21wKHEpID49IHEpIHsNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgc2lnJykNCiAgfQ0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IHZlcmlmeQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vY3VydmVzIjo4MywiYm4uanMiOjU5LCJidWZmZXIiOjkzLCJlbGxpcHRpYyI6NTA4LCJwYXJzZS1hc24xIjo1NDd9XSw4NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bNjFdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7ImR1cCI6NjF9XSw4NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBCYXNlNTggZW5jb2RpbmcvZGVjb2RpbmcNCi8vIE9yaWdpbmFsbHkgd3JpdHRlbiBieSBNaWtlIEhlYXJuIGZvciBCaXRjb2luSg0KLy8gQ29weXJpZ2h0IChjKSAyMDExIEdvb2dsZSBJbmMNCi8vIFBvcnRlZCB0byBKYXZhU2NyaXB0IGJ5IFN0ZWZhbiBUaG9tYXMNCi8vIE1lcmdlZCBCdWZmZXIgcmVmYWN0b3JpbmdzIGZyb20gYmFzZTU4LW5hdGl2ZSBieSBTdGVwaGVuIFBhaXINCi8vIENvcHlyaWdodCAoYykgMjAxMyBCaXRQYXkgSW5jDQoNCnZhciBBTFBIQUJFVCA9ICcxMjM0NTY3ODlBQkNERUZHSEpLTE1OUFFSU1RVVldYWVphYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6Jw0KdmFyIEFMUEhBQkVUX01BUCA9IHt9DQpmb3IodmFyIGkgPSAwOyBpIDwgQUxQSEFCRVQubGVuZ3RoOyBpKyspIHsNCiAgQUxQSEFCRVRfTUFQW0FMUEhBQkVULmNoYXJBdChpKV0gPSBpDQp9DQp2YXIgQkFTRSA9IDU4DQoNCmZ1bmN0aW9uIGVuY29kZShidWZmZXIpIHsNCiAgaWYgKGJ1ZmZlci5sZW5ndGggPT09IDApIHJldHVybiAnJw0KDQogIHZhciBpLCBqLCBkaWdpdHMgPSBbMF0NCiAgZm9yIChpID0gMDsgaSA8IGJ1ZmZlci5sZW5ndGg7IGkrKykgew0KICAgIGZvciAoaiA9IDA7IGogPCBkaWdpdHMubGVuZ3RoOyBqKyspIGRpZ2l0c1tqXSA8PD0gOA0KDQogICAgZGlnaXRzWzBdICs9IGJ1ZmZlcltpXQ0KDQogICAgdmFyIGNhcnJ5ID0gMA0KICAgIGZvciAoaiA9IDA7IGogPCBkaWdpdHMubGVuZ3RoOyArK2opIHsNCiAgICAgIGRpZ2l0c1tqXSArPSBjYXJyeQ0KDQogICAgICBjYXJyeSA9IChkaWdpdHNbal0gLyBCQVNFKSB8IDANCiAgICAgIGRpZ2l0c1tqXSAlPSBCQVNFDQogICAgfQ0KDQogICAgd2hpbGUgKGNhcnJ5KSB7DQogICAgICBkaWdpdHMucHVzaChjYXJyeSAlIEJBU0UpDQoNCiAgICAgIGNhcnJ5ID0gKGNhcnJ5IC8gQkFTRSkgfCAwDQogICAgfQ0KICB9DQoNCiAgLy8gZGVhbCB3aXRoIGxlYWRpbmcgemVyb3MNCiAgZm9yIChpID0gMDsgYnVmZmVyW2ldID09PSAwICYmIGkgPCBidWZmZXIubGVuZ3RoIC0gMTsgaSsrKSBkaWdpdHMucHVzaCgwKQ0KDQogIC8vIGNvbnZlcnQgZGlnaXRzIHRvIGEgc3RyaW5nDQogIHZhciBzdHJpbmdPdXRwdXQgPSAiIg0KICBmb3IgKHZhciBpID0gZGlnaXRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7DQogICAgc3RyaW5nT3V0cHV0ID0gc3RyaW5nT3V0cHV0ICsgQUxQSEFCRVRbZGlnaXRzW2ldXQ0KICB9DQogIHJldHVybiBzdHJpbmdPdXRwdXQNCn0NCg0KZnVuY3Rpb24gZGVjb2RlKHN0cmluZykgew0KICBpZiAoc3RyaW5nLmxlbmd0aCA9PT0gMCkgcmV0dXJuIFtdDQoNCiAgdmFyIGksIGosIGJ5dGVzID0gWzBdDQogIGZvciAoaSA9IDA7IGkgPCBzdHJpbmcubGVuZ3RoOyBpKyspIHsNCiAgICB2YXIgYyA9IHN0cmluZ1tpXQ0KICAgIGlmICghKGMgaW4gQUxQSEFCRVRfTUFQKSkgdGhyb3cgbmV3IEVycm9yKCdOb24tYmFzZTU4IGNoYXJhY3RlcicpDQoNCiAgICBmb3IgKGogPSAwOyBqIDwgYnl0ZXMubGVuZ3RoOyBqKyspIGJ5dGVzW2pdICo9IEJBU0UNCiAgICBieXRlc1swXSArPSBBTFBIQUJFVF9NQVBbY10NCg0KICAgIHZhciBjYXJyeSA9IDANCiAgICBmb3IgKGogPSAwOyBqIDwgYnl0ZXMubGVuZ3RoOyArK2opIHsNCiAgICAgIGJ5dGVzW2pdICs9IGNhcnJ5DQoNCiAgICAgIGNhcnJ5ID0gYnl0ZXNbal0gPj4gOA0KICAgICAgYnl0ZXNbal0gJj0gMHhmZg0KICAgIH0NCg0KICAgIHdoaWxlIChjYXJyeSkgew0KICAgICAgYnl0ZXMucHVzaChjYXJyeSAmIDB4ZmYpDQoNCiAgICAgIGNhcnJ5ID4+PSA4DQogICAgfQ0KICB9DQoNCiAgLy8gZGVhbCB3aXRoIGxlYWRpbmcgemVyb3MNCiAgZm9yIChpID0gMDsgc3RyaW5nW2ldID09PSAnMScgJiYgaSA8IHN0cmluZy5sZW5ndGggLSAxOyBpKyspIGJ5dGVzLnB1c2goMCkNCg0KICByZXR1cm4gYnl0ZXMucmV2ZXJzZSgpDQp9DQoNCm1vZHVsZS5leHBvcnRzID0gew0KICBlbmNvZGU6IGVuY29kZSwNCiAgZGVjb2RlOiBkZWNvZGUNCn0NCg0KfSx7fV0sODg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KJ3VzZSBzdHJpY3QnDQoNCnZhciBiYXNlNTggPSByZXF1aXJlKCdiczU4JykNCnZhciBjcmVhdGVIYXNoID0gcmVxdWlyZSgnY3JlYXRlLWhhc2gnKQ0KDQovLyBTSEEyNTYoU0hBMjU2KGJ1ZmZlcikpDQpmdW5jdGlvbiBzaGEyNTZ4MiAoYnVmZmVyKSB7DQogIHZhciB0bXAgPSBjcmVhdGVIYXNoKCdzaGEyNTYnKS51cGRhdGUoYnVmZmVyKS5kaWdlc3QoKQ0KICByZXR1cm4gY3JlYXRlSGFzaCgnc2hhMjU2JykudXBkYXRlKHRtcCkuZGlnZXN0KCkNCn0NCg0KLy8gRW5jb2RlIGEgYnVmZmVyIGFzIGEgYmFzZTU4LWNoZWNrIGVuY29kZWQgc3RyaW5nDQpmdW5jdGlvbiBlbmNvZGUgKHBheWxvYWQpIHsNCiAgdmFyIGNoZWNrc3VtID0gc2hhMjU2eDIocGF5bG9hZCkNCg0KICByZXR1cm4gYmFzZTU4LmVuY29kZShCdWZmZXIuY29uY2F0KFsNCiAgICBwYXlsb2FkLA0KICAgIGNoZWNrc3VtDQogIF0sIHBheWxvYWQubGVuZ3RoICsgNCkpDQp9DQoNCi8vIERlY29kZSBhIGJhc2U1OC1jaGVjayBlbmNvZGVkIHN0cmluZyB0byBhIGJ1ZmZlcg0KZnVuY3Rpb24gZGVjb2RlIChzdHJpbmcpIHsNCiAgdmFyIGJ1ZmZlciA9IG5ldyBCdWZmZXIoYmFzZTU4LmRlY29kZShzdHJpbmcpKQ0KDQogIHZhciBwYXlsb2FkID0gYnVmZmVyLnNsaWNlKDAsIC00KQ0KICB2YXIgY2hlY2tzdW0gPSBidWZmZXIuc2xpY2UoLTQpDQogIHZhciBuZXdDaGVja3N1bSA9IHNoYTI1NngyKHBheWxvYWQpDQoNCiAgaWYgKGNoZWNrc3VtWzBdIF4gbmV3Q2hlY2tzdW1bMF0gfA0KICAgICAgY2hlY2tzdW1bMV0gXiBuZXdDaGVja3N1bVsxXSB8DQogICAgICBjaGVja3N1bVsyXSBeIG5ld0NoZWNrc3VtWzJdIHwNCiAgICAgIGNoZWNrc3VtWzNdIF4gbmV3Q2hlY2tzdW1bM10pIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjaGVja3N1bScpDQoNCiAgcmV0dXJuIHBheWxvYWQNCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSB7DQogIGVuY29kZTogZW5jb2RlLA0KICBkZWNvZGU6IGRlY29kZQ0KfQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7ImJzNTgiOjg3LCJidWZmZXIiOjkzLCJjcmVhdGUtaGFzaCI6NDg4fV0sODk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihhLCBiKSB7DQogIGlmICh0eXBlb2YgYS5jb21wYXJlID09PSAnZnVuY3Rpb24nKSByZXR1cm4gYS5jb21wYXJlKGIpDQogIGlmIChhID09PSBiKSByZXR1cm4gMA0KDQogIHZhciB4ID0gYS5sZW5ndGgNCiAgdmFyIHkgPSBiLmxlbmd0aA0KDQogIHZhciBpID0gMA0KICB2YXIgbGVuID0gTWF0aC5taW4oeCwgeSkNCiAgd2hpbGUgKGkgPCBsZW4pIHsNCiAgICBpZiAoYVtpXSAhPT0gYltpXSkgYnJlYWsNCg0KICAgICsraQ0KICB9DQoNCiAgaWYgKGkgIT09IGxlbikgew0KICAgIHggPSBhW2ldDQogICAgeSA9IGJbaV0NCiAgfQ0KDQogIGlmICh4IDwgeSkgcmV0dXJuIC0xDQogIGlmICh5IDwgeCkgcmV0dXJuIDENCiAgcmV0dXJuIDANCn0NCg0KDQp9LHt9XSw5MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQondXNlIHN0cmljdCc7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhLCBiKSB7DQoJaWYgKCFCdWZmZXIuaXNCdWZmZXIoYSkgfHwgIUJ1ZmZlci5pc0J1ZmZlcihiKSkgew0KCQl0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudHMgbXVzdCBiZSBCdWZmZXJzJyk7DQoJfQ0KDQoJaWYgKGEgPT09IGIpIHsNCgkJcmV0dXJuIHRydWU7DQoJfQ0KDQoJaWYgKHR5cGVvZiBhLmVxdWFscyA9PT0gJ2Z1bmN0aW9uJykgew0KCQlyZXR1cm4gYS5lcXVhbHMoYik7DQoJfQ0KDQoJaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkgew0KCQlyZXR1cm4gZmFsc2U7DQoJfQ0KDQoJZm9yICh2YXIgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7DQoJCWlmIChhW2ldICE9PSBiW2ldKSB7DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0NCgl9DQoNCglyZXR1cm4gdHJ1ZTsNCn07DQoNCn0pLmNhbGwodGhpcyx7ImlzQnVmZmVyIjpyZXF1aXJlKCIuLi9pcy1idWZmZXIvaW5kZXguanMiKX0pDQp9LHsiLi4vaXMtYnVmZmVyL2luZGV4LmpzIjo1Mzh9XSw5MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJldmVyc2UgKHNyYykgew0KICB2YXIgYnVmZmVyID0gbmV3IEJ1ZmZlcihzcmMubGVuZ3RoKQ0KDQogIGZvciAodmFyIGkgPSAwLCBqID0gc3JjLmxlbmd0aCAtIDE7IGkgPD0gajsgKytpLCAtLWopIHsNCiAgICBidWZmZXJbaV0gPSBzcmNbal0NCiAgICBidWZmZXJbal0gPSBzcmNbaV0NCiAgfQ0KDQogIHJldHVybiBidWZmZXINCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJidWZmZXIiOjkzfV0sOTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4b3IgKGEsIGIpIHsNCiAgdmFyIGxlbmd0aCA9IE1hdGgubWluKGEubGVuZ3RoLCBiLmxlbmd0aCkNCiAgdmFyIGJ1ZmZlciA9IG5ldyBCdWZmZXIobGVuZ3RoKQ0KDQogIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHsNCiAgICBidWZmZXJbaV0gPSBhW2ldIF4gYltpXQ0KICB9DQoNCiAgcmV0dXJuIGJ1ZmZlcg0KfQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7ImJ1ZmZlciI6OTN9XSw5MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKGdsb2JhbCl7DQovKiENCiAqIFRoZSBidWZmZXIgbW9kdWxlIGZyb20gbm9kZS5qcywgZm9yIHRoZSBicm93c2VyLg0KICoNCiAqIEBhdXRob3IgICBGZXJvc3MgQWJvdWtoYWRpamVoIDxmZXJvc3NAZmVyb3NzLm9yZz4gPGh0dHA6Ly9mZXJvc3Mub3JnPg0KICogQGxpY2Vuc2UgIE1JVA0KICovDQovKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqLw0KDQondXNlIHN0cmljdCcNCg0KdmFyIGJhc2U2NCA9IHJlcXVpcmUoJ2Jhc2U2NC1qcycpDQp2YXIgaWVlZTc1NCA9IHJlcXVpcmUoJ2llZWU3NTQnKQ0KdmFyIGlzQXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JykNCg0KZXhwb3J0cy5CdWZmZXIgPSBCdWZmZXINCmV4cG9ydHMuU2xvd0J1ZmZlciA9IFNsb3dCdWZmZXINCmV4cG9ydHMuSU5TUEVDVF9NQVhfQllURVMgPSA1MA0KDQovKioNCiAqIElmIGBCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVGA6DQogKiAgID09PSB0cnVlICAgIFVzZSBVaW50OEFycmF5IGltcGxlbWVudGF0aW9uIChmYXN0ZXN0KQ0KICogICA9PT0gZmFsc2UgICBVc2UgT2JqZWN0IGltcGxlbWVudGF0aW9uIChtb3N0IGNvbXBhdGlibGUsIGV2ZW4gSUU2KQ0KICoNCiAqIEJyb3dzZXJzIHRoYXQgc3VwcG9ydCB0eXBlZCBhcnJheXMgYXJlIElFIDEwKywgRmlyZWZveCA0KywgQ2hyb21lIDcrLCBTYWZhcmkgNS4xKywNCiAqIE9wZXJhIDExLjYrLCBpT1MgNC4yKy4NCiAqDQogKiBEdWUgdG8gdmFyaW91cyBicm93c2VyIGJ1Z3MsIHNvbWV0aW1lcyB0aGUgT2JqZWN0IGltcGxlbWVudGF0aW9uIHdpbGwgYmUgdXNlZCBldmVuDQogKiB3aGVuIHRoZSBicm93c2VyIHN1cHBvcnRzIHR5cGVkIGFycmF5cy4NCiAqDQogKiBOb3RlOg0KICoNCiAqICAgLSBGaXJlZm94IDQtMjkgbGFja3Mgc3VwcG9ydCBmb3IgYWRkaW5nIG5ldyBwcm9wZXJ0aWVzIHRvIGBVaW50OEFycmF5YCBpbnN0YW5jZXMsDQogKiAgICAgU2VlOiBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02OTU0MzguDQogKg0KICogICAtIENocm9tZSA5LTEwIGlzIG1pc3NpbmcgdGhlIGBUeXBlZEFycmF5LnByb3RvdHlwZS5zdWJhcnJheWAgZnVuY3Rpb24uDQogKg0KICogICAtIElFMTAgaGFzIGEgYnJva2VuIGBUeXBlZEFycmF5LnByb3RvdHlwZS5zdWJhcnJheWAgZnVuY3Rpb24gd2hpY2ggcmV0dXJucyBhcnJheXMgb2YNCiAqICAgICBpbmNvcnJlY3QgbGVuZ3RoIGluIHNvbWUgc2l0dWF0aW9ucy4NCg0KICogV2UgZGV0ZWN0IHRoZXNlIGJ1Z2d5IGJyb3dzZXJzIGFuZCBzZXQgYEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUYCB0byBgZmFsc2VgIHNvIHRoZXkNCiAqIGdldCB0aGUgT2JqZWN0IGltcGxlbWVudGF0aW9uLCB3aGljaCBpcyBzbG93ZXIgYnV0IGJlaGF2ZXMgY29ycmVjdGx5Lg0KICovDQpCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCA9IGdsb2JhbC5UWVBFRF9BUlJBWV9TVVBQT1JUICE9PSB1bmRlZmluZWQNCiAgPyBnbG9iYWwuVFlQRURfQVJSQVlfU1VQUE9SVA0KICA6IHR5cGVkQXJyYXlTdXBwb3J0KCkNCg0KLyoNCiAqIEV4cG9ydCBrTWF4TGVuZ3RoIGFmdGVyIHR5cGVkIGFycmF5IHN1cHBvcnQgaXMgZGV0ZXJtaW5lZC4NCiAqLw0KZXhwb3J0cy5rTWF4TGVuZ3RoID0ga01heExlbmd0aCgpDQoNCmZ1bmN0aW9uIHR5cGVkQXJyYXlTdXBwb3J0ICgpIHsNCiAgdHJ5IHsNCiAgICB2YXIgYXJyID0gbmV3IFVpbnQ4QXJyYXkoMSkNCiAgICBhcnIuZm9vID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gNDIgfQ0KICAgIHJldHVybiBhcnIuZm9vKCkgPT09IDQyICYmIC8vIHR5cGVkIGFycmF5IGluc3RhbmNlcyBjYW4gYmUgYXVnbWVudGVkDQogICAgICAgIHR5cGVvZiBhcnIuc3ViYXJyYXkgPT09ICdmdW5jdGlvbicgJiYgLy8gY2hyb21lIDktMTAgbGFjayBgc3ViYXJyYXlgDQogICAgICAgIGFyci5zdWJhcnJheSgxLCAxKS5ieXRlTGVuZ3RoID09PSAwIC8vIGllMTAgaGFzIGJyb2tlbiBgc3ViYXJyYXlgDQogIH0gY2F0Y2ggKGUpIHsNCiAgICByZXR1cm4gZmFsc2UNCiAgfQ0KfQ0KDQpmdW5jdGlvbiBrTWF4TGVuZ3RoICgpIHsNCiAgcmV0dXJuIEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUDQogICAgPyAweDdmZmZmZmZmDQogICAgOiAweDNmZmZmZmZmDQp9DQoNCmZ1bmN0aW9uIGNyZWF0ZUJ1ZmZlciAodGhhdCwgbGVuZ3RoKSB7DQogIGlmIChrTWF4TGVuZ3RoKCkgPCBsZW5ndGgpIHsNCiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW52YWxpZCB0eXBlZCBhcnJheSBsZW5ndGgnKQ0KICB9DQogIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkgew0KICAgIC8vIFJldHVybiBhbiBhdWdtZW50ZWQgYFVpbnQ4QXJyYXlgIGluc3RhbmNlLCBmb3IgYmVzdCBwZXJmb3JtYW5jZQ0KICAgIHRoYXQgPSBuZXcgVWludDhBcnJheShsZW5ndGgpDQogICAgdGhhdC5fX3Byb3RvX18gPSBCdWZmZXIucHJvdG90eXBlDQogIH0gZWxzZSB7DQogICAgLy8gRmFsbGJhY2s6IFJldHVybiBhbiBvYmplY3QgaW5zdGFuY2Ugb2YgdGhlIEJ1ZmZlciBjbGFzcw0KICAgIGlmICh0aGF0ID09PSBudWxsKSB7DQogICAgICB0aGF0ID0gbmV3IEJ1ZmZlcihsZW5ndGgpDQogICAgfQ0KICAgIHRoYXQubGVuZ3RoID0gbGVuZ3RoDQogIH0NCg0KICByZXR1cm4gdGhhdA0KfQ0KDQovKioNCiAqIFRoZSBCdWZmZXIgY29uc3RydWN0b3IgcmV0dXJucyBpbnN0YW5jZXMgb2YgYFVpbnQ4QXJyYXlgIHRoYXQgaGF2ZSB0aGVpcg0KICogcHJvdG90eXBlIGNoYW5nZWQgdG8gYEJ1ZmZlci5wcm90b3R5cGVgLiBGdXJ0aGVybW9yZSwgYEJ1ZmZlcmAgaXMgYSBzdWJjbGFzcyBvZg0KICogYFVpbnQ4QXJyYXlgLCBzbyB0aGUgcmV0dXJuZWQgaW5zdGFuY2VzIHdpbGwgaGF2ZSBhbGwgdGhlIG5vZGUgYEJ1ZmZlcmAgbWV0aG9kcw0KICogYW5kIHRoZSBgVWludDhBcnJheWAgbWV0aG9kcy4gU3F1YXJlIGJyYWNrZXQgbm90YXRpb24gd29ya3MgYXMgZXhwZWN0ZWQgLS0gaXQNCiAqIHJldHVybnMgYSBzaW5nbGUgb2N0ZXQuDQogKg0KICogVGhlIGBVaW50OEFycmF5YCBwcm90b3R5cGUgcmVtYWlucyB1bm1vZGlmaWVkLg0KICovDQoNCmZ1bmN0aW9uIEJ1ZmZlciAoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHsNCiAgaWYgKCFCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCAmJiAhKHRoaXMgaW5zdGFuY2VvZiBCdWZmZXIpKSB7DQogICAgcmV0dXJuIG5ldyBCdWZmZXIoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpDQogIH0NCg0KICAvLyBDb21tb24gY2FzZS4NCiAgaWYgKHR5cGVvZiBhcmcgPT09ICdudW1iZXInKSB7DQogICAgaWYgKHR5cGVvZiBlbmNvZGluZ09yT2Zmc2V0ID09PSAnc3RyaW5nJykgew0KICAgICAgdGhyb3cgbmV3IEVycm9yKA0KICAgICAgICAnSWYgZW5jb2RpbmcgaXMgc3BlY2lmaWVkIHRoZW4gdGhlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmcnDQogICAgICApDQogICAgfQ0KICAgIHJldHVybiBhbGxvY1Vuc2FmZSh0aGlzLCBhcmcpDQogIH0NCiAgcmV0dXJuIGZyb20odGhpcywgYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpDQp9DQoNCkJ1ZmZlci5wb29sU2l6ZSA9IDgxOTIgLy8gbm90IHVzZWQgYnkgdGhpcyBpbXBsZW1lbnRhdGlvbg0KDQovLyBUT0RPOiBMZWdhY3ksIG5vdCBuZWVkZWQgYW55bW9yZS4gUmVtb3ZlIGluIG5leHQgbWFqb3IgdmVyc2lvbi4NCkJ1ZmZlci5fYXVnbWVudCA9IGZ1bmN0aW9uIChhcnIpIHsNCiAgYXJyLl9fcHJvdG9fXyA9IEJ1ZmZlci5wcm90b3R5cGUNCiAgcmV0dXJuIGFycg0KfQ0KDQpmdW5jdGlvbiBmcm9tICh0aGF0LCB2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7DQogIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7DQogICAgdGhyb3cgbmV3IFR5cGVFcnJvcignInZhbHVlIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBhIG51bWJlcicpDQogIH0NCg0KICBpZiAodHlwZW9mIEFycmF5QnVmZmVyICE9PSAndW5kZWZpbmVkJyAmJiB2YWx1ZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7DQogICAgcmV0dXJuIGZyb21BcnJheUJ1ZmZlcih0aGF0LCB2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKQ0KICB9DQoNCiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHsNCiAgICByZXR1cm4gZnJvbVN0cmluZyh0aGF0LCB2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCkNCiAgfQ0KDQogIHJldHVybiBmcm9tT2JqZWN0KHRoYXQsIHZhbHVlKQ0KfQ0KDQovKioNCiAqIEZ1bmN0aW9uYWxseSBlcXVpdmFsZW50IHRvIEJ1ZmZlcihhcmcsIGVuY29kaW5nKSBidXQgdGhyb3dzIGEgVHlwZUVycm9yDQogKiBpZiB2YWx1ZSBpcyBhIG51bWJlci4NCiAqIEJ1ZmZlci5mcm9tKHN0clssIGVuY29kaW5nXSkNCiAqIEJ1ZmZlci5mcm9tKGFycmF5KQ0KICogQnVmZmVyLmZyb20oYnVmZmVyKQ0KICogQnVmZmVyLmZyb20oYXJyYXlCdWZmZXJbLCBieXRlT2Zmc2V0WywgbGVuZ3RoXV0pDQogKiovDQpCdWZmZXIuZnJvbSA9IGZ1bmN0aW9uICh2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7DQogIHJldHVybiBmcm9tKG51bGwsIHZhbHVlLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpDQp9DQoNCmlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkgew0KICBCdWZmZXIucHJvdG90eXBlLl9fcHJvdG9fXyA9IFVpbnQ4QXJyYXkucHJvdG90eXBlDQogIEJ1ZmZlci5fX3Byb3RvX18gPSBVaW50OEFycmF5DQogIGlmICh0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wuc3BlY2llcyAmJg0KICAgICAgQnVmZmVyW1N5bWJvbC5zcGVjaWVzXSA9PT0gQnVmZmVyKSB7DQogICAgLy8gRml4IHN1YmFycmF5KCkgaW4gRVMyMDE2LiBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvYnVmZmVyL3B1bGwvOTcNCiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQnVmZmVyLCBTeW1ib2wuc3BlY2llcywgew0KICAgICAgdmFsdWU6IG51bGwsDQogICAgICBjb25maWd1cmFibGU6IHRydWUNCiAgICB9KQ0KICB9DQp9DQoNCmZ1bmN0aW9uIGFzc2VydFNpemUgKHNpemUpIHsNCiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykgew0KICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJyJzaXplIiBhcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJykNCiAgfQ0KfQ0KDQpmdW5jdGlvbiBhbGxvYyAodGhhdCwgc2l6ZSwgZmlsbCwgZW5jb2RpbmcpIHsNCiAgYXNzZXJ0U2l6ZShzaXplKQ0KICBpZiAoc2l6ZSA8PSAwKSB7DQogICAgcmV0dXJuIGNyZWF0ZUJ1ZmZlcih0aGF0LCBzaXplKQ0KICB9DQogIGlmIChmaWxsICE9PSB1bmRlZmluZWQpIHsNCiAgICAvLyBPbmx5IHBheSBhdHRlbnRpb24gdG8gZW5jb2RpbmcgaWYgaXQncyBhIHN0cmluZy4gVGhpcw0KICAgIC8vIHByZXZlbnRzIGFjY2lkZW50YWxseSBzZW5kaW5nIGluIGEgbnVtYmVyIHRoYXQgd291bGQNCiAgICAvLyBiZSBpbnRlcnByZXR0ZWQgYXMgYSBzdGFydCBvZmZzZXQuDQogICAgcmV0dXJuIHR5cGVvZiBlbmNvZGluZyA9PT0gJ3N0cmluZycNCiAgICAgID8gY3JlYXRlQnVmZmVyKHRoYXQsIHNpemUpLmZpbGwoZmlsbCwgZW5jb2RpbmcpDQogICAgICA6IGNyZWF0ZUJ1ZmZlcih0aGF0LCBzaXplKS5maWxsKGZpbGwpDQogIH0NCiAgcmV0dXJuIGNyZWF0ZUJ1ZmZlcih0aGF0LCBzaXplKQ0KfQ0KDQovKioNCiAqIENyZWF0ZXMgYSBuZXcgZmlsbGVkIEJ1ZmZlciBpbnN0YW5jZS4NCiAqIGFsbG9jKHNpemVbLCBmaWxsWywgZW5jb2RpbmddXSkNCiAqKi8NCkJ1ZmZlci5hbGxvYyA9IGZ1bmN0aW9uIChzaXplLCBmaWxsLCBlbmNvZGluZykgew0KICByZXR1cm4gYWxsb2MobnVsbCwgc2l6ZSwgZmlsbCwgZW5jb2RpbmcpDQp9DQoNCmZ1bmN0aW9uIGFsbG9jVW5zYWZlICh0aGF0LCBzaXplKSB7DQogIGFzc2VydFNpemUoc2l6ZSkNCiAgdGhhdCA9IGNyZWF0ZUJ1ZmZlcih0aGF0LCBzaXplIDwgMCA/IDAgOiBjaGVja2VkKHNpemUpIHwgMCkNCiAgaWYgKCFCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkgew0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7DQogICAgICB0aGF0W2ldID0gMA0KICAgIH0NCiAgfQ0KICByZXR1cm4gdGhhdA0KfQ0KDQovKioNCiAqIEVxdWl2YWxlbnQgdG8gQnVmZmVyKG51bSksIGJ5IGRlZmF1bHQgY3JlYXRlcyBhIG5vbi16ZXJvLWZpbGxlZCBCdWZmZXIgaW5zdGFuY2UuDQogKiAqLw0KQnVmZmVyLmFsbG9jVW5zYWZlID0gZnVuY3Rpb24gKHNpemUpIHsNCiAgcmV0dXJuIGFsbG9jVW5zYWZlKG51bGwsIHNpemUpDQp9DQovKioNCiAqIEVxdWl2YWxlbnQgdG8gU2xvd0J1ZmZlcihudW0pLCBieSBkZWZhdWx0IGNyZWF0ZXMgYSBub24temVyby1maWxsZWQgQnVmZmVyIGluc3RhbmNlLg0KICovDQpCdWZmZXIuYWxsb2NVbnNhZmVTbG93ID0gZnVuY3Rpb24gKHNpemUpIHsNCiAgcmV0dXJuIGFsbG9jVW5zYWZlKG51bGwsIHNpemUpDQp9DQoNCmZ1bmN0aW9uIGZyb21TdHJpbmcgKHRoYXQsIHN0cmluZywgZW5jb2RpbmcpIHsNCiAgaWYgKHR5cGVvZiBlbmNvZGluZyAhPT0gJ3N0cmluZycgfHwgZW5jb2RpbmcgPT09ICcnKSB7DQogICAgZW5jb2RpbmcgPSAndXRmOCcNCiAgfQ0KDQogIGlmICghQnVmZmVyLmlzRW5jb2RpbmcoZW5jb2RpbmcpKSB7DQogICAgdGhyb3cgbmV3IFR5cGVFcnJvcignImVuY29kaW5nIiBtdXN0IGJlIGEgdmFsaWQgc3RyaW5nIGVuY29kaW5nJykNCiAgfQ0KDQogIHZhciBsZW5ndGggPSBieXRlTGVuZ3RoKHN0cmluZywgZW5jb2RpbmcpIHwgMA0KICB0aGF0ID0gY3JlYXRlQnVmZmVyKHRoYXQsIGxlbmd0aCkNCg0KICB0aGF0LndyaXRlKHN0cmluZywgZW5jb2RpbmcpDQogIHJldHVybiB0aGF0DQp9DQoNCmZ1bmN0aW9uIGZyb21BcnJheUxpa2UgKHRoYXQsIGFycmF5KSB7DQogIHZhciBsZW5ndGggPSBjaGVja2VkKGFycmF5Lmxlbmd0aCkgfCAwDQogIHRoYXQgPSBjcmVhdGVCdWZmZXIodGhhdCwgbGVuZ3RoKQ0KICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSArPSAxKSB7DQogICAgdGhhdFtpXSA9IGFycmF5W2ldICYgMjU1DQogIH0NCiAgcmV0dXJuIHRoYXQNCn0NCg0KZnVuY3Rpb24gZnJvbUFycmF5QnVmZmVyICh0aGF0LCBhcnJheSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7DQogIGFycmF5LmJ5dGVMZW5ndGggLy8gdGhpcyB0aHJvd3MgaWYgYGFycmF5YCBpcyBub3QgYSB2YWxpZCBBcnJheUJ1ZmZlcg0KDQogIGlmIChieXRlT2Zmc2V0IDwgMCB8fCBhcnJheS5ieXRlTGVuZ3RoIDwgYnl0ZU9mZnNldCkgew0KICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdcJ29mZnNldFwnIGlzIG91dCBvZiBib3VuZHMnKQ0KICB9DQoNCiAgaWYgKGFycmF5LmJ5dGVMZW5ndGggPCBieXRlT2Zmc2V0ICsgKGxlbmd0aCB8fCAwKSkgew0KICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdcJ2xlbmd0aFwnIGlzIG91dCBvZiBib3VuZHMnKQ0KICB9DQoNCiAgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7DQogICAgYXJyYXkgPSBuZXcgVWludDhBcnJheShhcnJheSwgYnl0ZU9mZnNldCkNCiAgfSBlbHNlIHsNCiAgICBhcnJheSA9IG5ldyBVaW50OEFycmF5KGFycmF5LCBieXRlT2Zmc2V0LCBsZW5ndGgpDQogIH0NCg0KICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHsNCiAgICAvLyBSZXR1cm4gYW4gYXVnbWVudGVkIGBVaW50OEFycmF5YCBpbnN0YW5jZSwgZm9yIGJlc3QgcGVyZm9ybWFuY2UNCiAgICB0aGF0ID0gYXJyYXkNCiAgICB0aGF0Ll9fcHJvdG9fXyA9IEJ1ZmZlci5wcm90b3R5cGUNCiAgfSBlbHNlIHsNCiAgICAvLyBGYWxsYmFjazogUmV0dXJuIGFuIG9iamVjdCBpbnN0YW5jZSBvZiB0aGUgQnVmZmVyIGNsYXNzDQogICAgdGhhdCA9IGZyb21BcnJheUxpa2UodGhhdCwgYXJyYXkpDQogIH0NCiAgcmV0dXJuIHRoYXQNCn0NCg0KZnVuY3Rpb24gZnJvbU9iamVjdCAodGhhdCwgb2JqKSB7DQogIGlmIChCdWZmZXIuaXNCdWZmZXIob2JqKSkgew0KICAgIHZhciBsZW4gPSBjaGVja2VkKG9iai5sZW5ndGgpIHwgMA0KICAgIHRoYXQgPSBjcmVhdGVCdWZmZXIodGhhdCwgbGVuKQ0KDQogICAgaWYgKHRoYXQubGVuZ3RoID09PSAwKSB7DQogICAgICByZXR1cm4gdGhhdA0KICAgIH0NCg0KICAgIG9iai5jb3B5KHRoYXQsIDAsIDAsIGxlbikNCiAgICByZXR1cm4gdGhhdA0KICB9DQoNCiAgaWYgKG9iaikgew0KICAgIGlmICgodHlwZW9mIEFycmF5QnVmZmVyICE9PSAndW5kZWZpbmVkJyAmJg0KICAgICAgICBvYmouYnVmZmVyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHx8ICdsZW5ndGgnIGluIG9iaikgew0KICAgICAgaWYgKHR5cGVvZiBvYmoubGVuZ3RoICE9PSAnbnVtYmVyJyB8fCBpc25hbihvYmoubGVuZ3RoKSkgew0KICAgICAgICByZXR1cm4gY3JlYXRlQnVmZmVyKHRoYXQsIDApDQogICAgICB9DQogICAgICByZXR1cm4gZnJvbUFycmF5TGlrZSh0aGF0LCBvYmopDQogICAgfQ0KDQogICAgaWYgKG9iai50eXBlID09PSAnQnVmZmVyJyAmJiBpc0FycmF5KG9iai5kYXRhKSkgew0KICAgICAgcmV0dXJuIGZyb21BcnJheUxpa2UodGhhdCwgb2JqLmRhdGEpDQogICAgfQ0KICB9DQoNCiAgdGhyb3cgbmV3IFR5cGVFcnJvcignRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZywgQnVmZmVyLCBBcnJheUJ1ZmZlciwgQXJyYXksIG9yIGFycmF5LWxpa2Ugb2JqZWN0LicpDQp9DQoNCmZ1bmN0aW9uIGNoZWNrZWQgKGxlbmd0aCkgew0KICAvLyBOb3RlOiBjYW5ub3QgdXNlIGBsZW5ndGggPCBrTWF4TGVuZ3RoYCBoZXJlIGJlY2F1c2UgdGhhdCBmYWlscyB3aGVuDQogIC8vIGxlbmd0aCBpcyBOYU4gKHdoaWNoIGlzIG90aGVyd2lzZSBjb2VyY2VkIHRvIHplcm8uKQ0KICBpZiAobGVuZ3RoID49IGtNYXhMZW5ndGgoKSkgew0KICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdBdHRlbXB0IHRvIGFsbG9jYXRlIEJ1ZmZlciBsYXJnZXIgdGhhbiBtYXhpbXVtICcgKw0KICAgICAgICAgICAgICAgICAgICAgICAgICdzaXplOiAweCcgKyBrTWF4TGVuZ3RoKCkudG9TdHJpbmcoMTYpICsgJyBieXRlcycpDQogIH0NCiAgcmV0dXJuIGxlbmd0aCB8IDANCn0NCg0KZnVuY3Rpb24gU2xvd0J1ZmZlciAobGVuZ3RoKSB7DQogIGlmICgrbGVuZ3RoICE9IGxlbmd0aCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGVxZXFlcQ0KICAgIGxlbmd0aCA9IDANCiAgfQ0KICByZXR1cm4gQnVmZmVyLmFsbG9jKCtsZW5ndGgpDQp9DQoNCkJ1ZmZlci5pc0J1ZmZlciA9IGZ1bmN0aW9uIGlzQnVmZmVyIChiKSB7DQogIHJldHVybiAhIShiICE9IG51bGwgJiYgYi5faXNCdWZmZXIpDQp9DQoNCkJ1ZmZlci5jb21wYXJlID0gZnVuY3Rpb24gY29tcGFyZSAoYSwgYikgew0KICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihhKSB8fCAhQnVmZmVyLmlzQnVmZmVyKGIpKSB7DQogICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnRzIG11c3QgYmUgQnVmZmVycycpDQogIH0NCg0KICBpZiAoYSA9PT0gYikgcmV0dXJuIDANCg0KICB2YXIgeCA9IGEubGVuZ3RoDQogIHZhciB5ID0gYi5sZW5ndGgNCg0KICBmb3IgKHZhciBpID0gMCwgbGVuID0gTWF0aC5taW4oeCwgeSk7IGkgPCBsZW47ICsraSkgew0KICAgIGlmIChhW2ldICE9PSBiW2ldKSB7DQogICAgICB4ID0gYVtpXQ0KICAgICAgeSA9IGJbaV0NCiAgICAgIGJyZWFrDQogICAgfQ0KICB9DQoNCiAgaWYgKHggPCB5KSByZXR1cm4gLTENCiAgaWYgKHkgPCB4KSByZXR1cm4gMQ0KICByZXR1cm4gMA0KfQ0KDQpCdWZmZXIuaXNFbmNvZGluZyA9IGZ1bmN0aW9uIGlzRW5jb2RpbmcgKGVuY29kaW5nKSB7DQogIHN3aXRjaCAoU3RyaW5nKGVuY29kaW5nKS50b0xvd2VyQ2FzZSgpKSB7DQogICAgY2FzZSAnaGV4JzoNCiAgICBjYXNlICd1dGY4JzoNCiAgICBjYXNlICd1dGYtOCc6DQogICAgY2FzZSAnYXNjaWknOg0KICAgIGNhc2UgJ2JpbmFyeSc6DQogICAgY2FzZSAnYmFzZTY0JzoNCiAgICBjYXNlICdyYXcnOg0KICAgIGNhc2UgJ3VjczInOg0KICAgIGNhc2UgJ3Vjcy0yJzoNCiAgICBjYXNlICd1dGYxNmxlJzoNCiAgICBjYXNlICd1dGYtMTZsZSc6DQogICAgICByZXR1cm4gdHJ1ZQ0KICAgIGRlZmF1bHQ6DQogICAgICByZXR1cm4gZmFsc2UNCiAgfQ0KfQ0KDQpCdWZmZXIuY29uY2F0ID0gZnVuY3Rpb24gY29uY2F0IChsaXN0LCBsZW5ndGgpIHsNCiAgaWYgKCFpc0FycmF5KGxpc3QpKSB7DQogICAgdGhyb3cgbmV3IFR5cGVFcnJvcignImxpc3QiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpDQogIH0NCg0KICBpZiAobGlzdC5sZW5ndGggPT09IDApIHsNCiAgICByZXR1cm4gQnVmZmVyLmFsbG9jKDApDQogIH0NCg0KICB2YXIgaQ0KICBpZiAobGVuZ3RoID09PSB1bmRlZmluZWQpIHsNCiAgICBsZW5ndGggPSAwDQogICAgZm9yIChpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHsNCiAgICAgIGxlbmd0aCArPSBsaXN0W2ldLmxlbmd0aA0KICAgIH0NCiAgfQ0KDQogIHZhciBidWZmZXIgPSBCdWZmZXIuYWxsb2NVbnNhZmUobGVuZ3RoKQ0KICB2YXIgcG9zID0gMA0KICBmb3IgKGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykgew0KICAgIHZhciBidWYgPSBsaXN0W2ldDQogICAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoYnVmKSkgew0KICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignImxpc3QiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpDQogICAgfQ0KICAgIGJ1Zi5jb3B5KGJ1ZmZlciwgcG9zKQ0KICAgIHBvcyArPSBidWYubGVuZ3RoDQogIH0NCiAgcmV0dXJuIGJ1ZmZlcg0KfQ0KDQpmdW5jdGlvbiBieXRlTGVuZ3RoIChzdHJpbmcsIGVuY29kaW5nKSB7DQogIGlmIChCdWZmZXIuaXNCdWZmZXIoc3RyaW5nKSkgew0KICAgIHJldHVybiBzdHJpbmcubGVuZ3RoDQogIH0NCiAgaWYgKHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIEFycmF5QnVmZmVyLmlzVmlldyA9PT0gJ2Z1bmN0aW9uJyAmJg0KICAgICAgKEFycmF5QnVmZmVyLmlzVmlldyhzdHJpbmcpIHx8IHN0cmluZyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSkgew0KICAgIHJldHVybiBzdHJpbmcuYnl0ZUxlbmd0aA0KICB9DQogIGlmICh0eXBlb2Ygc3RyaW5nICE9PSAnc3RyaW5nJykgew0KICAgIHN0cmluZyA9ICcnICsgc3RyaW5nDQogIH0NCg0KICB2YXIgbGVuID0gc3RyaW5nLmxlbmd0aA0KICBpZiAobGVuID09PSAwKSByZXR1cm4gMA0KDQogIC8vIFVzZSBhIGZvciBsb29wIHRvIGF2b2lkIHJlY3Vyc2lvbg0KICB2YXIgbG93ZXJlZENhc2UgPSBmYWxzZQ0KICBmb3IgKDs7KSB7DQogICAgc3dpdGNoIChlbmNvZGluZykgew0KICAgICAgY2FzZSAnYXNjaWknOg0KICAgICAgY2FzZSAnYmluYXJ5JzoNCiAgICAgIC8vIERlcHJlY2F0ZWQNCiAgICAgIGNhc2UgJ3Jhdyc6DQogICAgICBjYXNlICdyYXdzJzoNCiAgICAgICAgcmV0dXJuIGxlbg0KICAgICAgY2FzZSAndXRmOCc6DQogICAgICBjYXNlICd1dGYtOCc6DQogICAgICBjYXNlIHVuZGVmaW5lZDoNCiAgICAgICAgcmV0dXJuIHV0ZjhUb0J5dGVzKHN0cmluZykubGVuZ3RoDQogICAgICBjYXNlICd1Y3MyJzoNCiAgICAgIGNhc2UgJ3Vjcy0yJzoNCiAgICAgIGNhc2UgJ3V0ZjE2bGUnOg0KICAgICAgY2FzZSAndXRmLTE2bGUnOg0KICAgICAgICByZXR1cm4gbGVuICogMg0KICAgICAgY2FzZSAnaGV4JzoNCiAgICAgICAgcmV0dXJuIGxlbiA+Pj4gMQ0KICAgICAgY2FzZSAnYmFzZTY0JzoNCiAgICAgICAgcmV0dXJuIGJhc2U2NFRvQnl0ZXMoc3RyaW5nKS5sZW5ndGgNCiAgICAgIGRlZmF1bHQ6DQogICAgICAgIGlmIChsb3dlcmVkQ2FzZSkgcmV0dXJuIHV0ZjhUb0J5dGVzKHN0cmluZykubGVuZ3RoIC8vIGFzc3VtZSB1dGY4DQogICAgICAgIGVuY29kaW5nID0gKCcnICsgZW5jb2RpbmcpLnRvTG93ZXJDYXNlKCkNCiAgICAgICAgbG93ZXJlZENhc2UgPSB0cnVlDQogICAgfQ0KICB9DQp9DQpCdWZmZXIuYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGgNCg0KZnVuY3Rpb24gc2xvd1RvU3RyaW5nIChlbmNvZGluZywgc3RhcnQsIGVuZCkgew0KICB2YXIgbG93ZXJlZENhc2UgPSBmYWxzZQ0KDQogIC8vIE5vIG5lZWQgdG8gdmVyaWZ5IHRoYXQgInRoaXMubGVuZ3RoIDw9IE1BWF9VSU5UMzIiIHNpbmNlIGl0J3MgYSByZWFkLW9ubHkNCiAgLy8gcHJvcGVydHkgb2YgYSB0eXBlZCBhcnJheS4NCg0KICAvLyBUaGlzIGJlaGF2ZXMgbmVpdGhlciBsaWtlIFN0cmluZyBub3IgVWludDhBcnJheSBpbiB0aGF0IHdlIHNldCBzdGFydC9lbmQNCiAgLy8gdG8gdGhlaXIgdXBwZXIvbG93ZXIgYm91bmRzIGlmIHRoZSB2YWx1ZSBwYXNzZWQgaXMgb3V0IG9mIHJhbmdlLg0KICAvLyB1bmRlZmluZWQgaXMgaGFuZGxlZCBzcGVjaWFsbHkgYXMgcGVyIEVDTUEtMjYyIDZ0aCBFZGl0aW9uLA0KICAvLyBTZWN0aW9uIDEzLjMuMy43IFJ1bnRpbWUgU2VtYW50aWNzOiBLZXllZEJpbmRpbmdJbml0aWFsaXphdGlvbi4NCiAgaWYgKHN0YXJ0ID09PSB1bmRlZmluZWQgfHwgc3RhcnQgPCAwKSB7DQogICAgc3RhcnQgPSAwDQogIH0NCiAgLy8gUmV0dXJuIGVhcmx5IGlmIHN0YXJ0ID4gdGhpcy5sZW5ndGguIERvbmUgaGVyZSB0byBwcmV2ZW50IHBvdGVudGlhbCB1aW50MzINCiAgLy8gY29lcmNpb24gZmFpbCBiZWxvdy4NCiAgaWYgKHN0YXJ0ID4gdGhpcy5sZW5ndGgpIHsNCiAgICByZXR1cm4gJycNCiAgfQ0KDQogIGlmIChlbmQgPT09IHVuZGVmaW5lZCB8fCBlbmQgPiB0aGlzLmxlbmd0aCkgew0KICAgIGVuZCA9IHRoaXMubGVuZ3RoDQogIH0NCg0KICBpZiAoZW5kIDw9IDApIHsNCiAgICByZXR1cm4gJycNCiAgfQ0KDQogIC8vIEZvcmNlIGNvZXJzaW9uIHRvIHVpbnQzMi4gVGhpcyB3aWxsIGFsc28gY29lcmNlIGZhbHNleS9OYU4gdmFsdWVzIHRvIDAuDQogIGVuZCA+Pj49IDANCiAgc3RhcnQgPj4+PSAwDQoNCiAgaWYgKGVuZCA8PSBzdGFydCkgew0KICAgIHJldHVybiAnJw0KICB9DQoNCiAgaWYgKCFlbmNvZGluZykgZW5jb2RpbmcgPSAndXRmOCcNCg0KICB3aGlsZSAodHJ1ZSkgew0KICAgIHN3aXRjaCAoZW5jb2RpbmcpIHsNCiAgICAgIGNhc2UgJ2hleCc6DQogICAgICAgIHJldHVybiBoZXhTbGljZSh0aGlzLCBzdGFydCwgZW5kKQ0KDQogICAgICBjYXNlICd1dGY4JzoNCiAgICAgIGNhc2UgJ3V0Zi04JzoNCiAgICAgICAgcmV0dXJuIHV0ZjhTbGljZSh0aGlzLCBzdGFydCwgZW5kKQ0KDQogICAgICBjYXNlICdhc2NpaSc6DQogICAgICAgIHJldHVybiBhc2NpaVNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpDQoNCiAgICAgIGNhc2UgJ2JpbmFyeSc6DQogICAgICAgIHJldHVybiBiaW5hcnlTbGljZSh0aGlzLCBzdGFydCwgZW5kKQ0KDQogICAgICBjYXNlICdiYXNlNjQnOg0KICAgICAgICByZXR1cm4gYmFzZTY0U2xpY2UodGhpcywgc3RhcnQsIGVuZCkNCg0KICAgICAgY2FzZSAndWNzMic6DQogICAgICBjYXNlICd1Y3MtMic6DQogICAgICBjYXNlICd1dGYxNmxlJzoNCiAgICAgIGNhc2UgJ3V0Zi0xNmxlJzoNCiAgICAgICAgcmV0dXJuIHV0ZjE2bGVTbGljZSh0aGlzLCBzdGFydCwgZW5kKQ0KDQogICAgICBkZWZhdWx0Og0KICAgICAgICBpZiAobG93ZXJlZENhc2UpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZykNCiAgICAgICAgZW5jb2RpbmcgPSAoZW5jb2RpbmcgKyAnJykudG9Mb3dlckNhc2UoKQ0KICAgICAgICBsb3dlcmVkQ2FzZSA9IHRydWUNCiAgICB9DQogIH0NCn0NCg0KLy8gVGhlIHByb3BlcnR5IGlzIHVzZWQgYnkgYEJ1ZmZlci5pc0J1ZmZlcmAgYW5kIGBpcy1idWZmZXJgIChpbiBTYWZhcmkgNS03KSB0byBkZXRlY3QNCi8vIEJ1ZmZlciBpbnN0YW5jZXMuDQpCdWZmZXIucHJvdG90eXBlLl9pc0J1ZmZlciA9IHRydWUNCg0KZnVuY3Rpb24gc3dhcCAoYiwgbiwgbSkgew0KICB2YXIgaSA9IGJbbl0NCiAgYltuXSA9IGJbbV0NCiAgYlttXSA9IGkNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5zd2FwMTYgPSBmdW5jdGlvbiBzd2FwMTYgKCkgew0KICB2YXIgbGVuID0gdGhpcy5sZW5ndGgNCiAgaWYgKGxlbiAlIDIgIT09IDApIHsNCiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDE2LWJpdHMnKQ0KICB9DQogIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpICs9IDIpIHsNCiAgICBzd2FwKHRoaXMsIGksIGkgKyAxKQ0KICB9DQogIHJldHVybiB0aGlzDQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUuc3dhcDMyID0gZnVuY3Rpb24gc3dhcDMyICgpIHsNCiAgdmFyIGxlbiA9IHRoaXMubGVuZ3RoDQogIGlmIChsZW4gJSA0ICE9PSAwKSB7DQogICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0J1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAzMi1iaXRzJykNCiAgfQ0KICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7DQogICAgc3dhcCh0aGlzLCBpLCBpICsgMykNCiAgICBzd2FwKHRoaXMsIGkgKyAxLCBpICsgMikNCiAgfQ0KICByZXR1cm4gdGhpcw0KfQ0KDQpCdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcgKCkgew0KICB2YXIgbGVuZ3RoID0gdGhpcy5sZW5ndGggfCAwDQogIGlmIChsZW5ndGggPT09IDApIHJldHVybiAnJw0KICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHV0ZjhTbGljZSh0aGlzLCAwLCBsZW5ndGgpDQogIHJldHVybiBzbG93VG9TdHJpbmcuYXBwbHkodGhpcywgYXJndW1lbnRzKQ0KfQ0KDQpCdWZmZXIucHJvdG90eXBlLmVxdWFscyA9IGZ1bmN0aW9uIGVxdWFscyAoYikgew0KICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihiKSkgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlcicpDQogIGlmICh0aGlzID09PSBiKSByZXR1cm4gdHJ1ZQ0KICByZXR1cm4gQnVmZmVyLmNvbXBhcmUodGhpcywgYikgPT09IDANCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5pbnNwZWN0ID0gZnVuY3Rpb24gaW5zcGVjdCAoKSB7DQogIHZhciBzdHIgPSAnJw0KICB2YXIgbWF4ID0gZXhwb3J0cy5JTlNQRUNUX01BWF9CWVRFUw0KICBpZiAodGhpcy5sZW5ndGggPiAwKSB7DQogICAgc3RyID0gdGhpcy50b1N0cmluZygnaGV4JywgMCwgbWF4KS5tYXRjaCgvLnsyfS9nKS5qb2luKCcgJykNCiAgICBpZiAodGhpcy5sZW5ndGggPiBtYXgpIHN0ciArPSAnIC4uLiAnDQogIH0NCiAgcmV0dXJuICc8QnVmZmVyICcgKyBzdHIgKyAnPicNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5jb21wYXJlID0gZnVuY3Rpb24gY29tcGFyZSAodGFyZ2V0LCBzdGFydCwgZW5kLCB0aGlzU3RhcnQsIHRoaXNFbmQpIHsNCiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIodGFyZ2V0KSkgew0KICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBCdWZmZXInKQ0KICB9DQoNCiAgaWYgKHN0YXJ0ID09PSB1bmRlZmluZWQpIHsNCiAgICBzdGFydCA9IDANCiAgfQ0KICBpZiAoZW5kID09PSB1bmRlZmluZWQpIHsNCiAgICBlbmQgPSB0YXJnZXQgPyB0YXJnZXQubGVuZ3RoIDogMA0KICB9DQogIGlmICh0aGlzU3RhcnQgPT09IHVuZGVmaW5lZCkgew0KICAgIHRoaXNTdGFydCA9IDANCiAgfQ0KICBpZiAodGhpc0VuZCA9PT0gdW5kZWZpbmVkKSB7DQogICAgdGhpc0VuZCA9IHRoaXMubGVuZ3RoDQogIH0NCg0KICBpZiAoc3RhcnQgPCAwIHx8IGVuZCA+IHRhcmdldC5sZW5ndGggfHwgdGhpc1N0YXJ0IDwgMCB8fCB0aGlzRW5kID4gdGhpcy5sZW5ndGgpIHsNCiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignb3V0IG9mIHJhbmdlIGluZGV4JykNCiAgfQ0KDQogIGlmICh0aGlzU3RhcnQgPj0gdGhpc0VuZCAmJiBzdGFydCA+PSBlbmQpIHsNCiAgICByZXR1cm4gMA0KICB9DQogIGlmICh0aGlzU3RhcnQgPj0gdGhpc0VuZCkgew0KICAgIHJldHVybiAtMQ0KICB9DQogIGlmIChzdGFydCA+PSBlbmQpIHsNCiAgICByZXR1cm4gMQ0KICB9DQoNCiAgc3RhcnQgPj4+PSAwDQogIGVuZCA+Pj49IDANCiAgdGhpc1N0YXJ0ID4+Pj0gMA0KICB0aGlzRW5kID4+Pj0gMA0KDQogIGlmICh0aGlzID09PSB0YXJnZXQpIHJldHVybiAwDQoNCiAgdmFyIHggPSB0aGlzRW5kIC0gdGhpc1N0YXJ0DQogIHZhciB5ID0gZW5kIC0gc3RhcnQNCiAgdmFyIGxlbiA9IE1hdGgubWluKHgsIHkpDQoNCiAgdmFyIHRoaXNDb3B5ID0gdGhpcy5zbGljZSh0aGlzU3RhcnQsIHRoaXNFbmQpDQogIHZhciB0YXJnZXRDb3B5ID0gdGFyZ2V0LnNsaWNlKHN0YXJ0LCBlbmQpDQoNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSkgew0KICAgIGlmICh0aGlzQ29weVtpXSAhPT0gdGFyZ2V0Q29weVtpXSkgew0KICAgICAgeCA9IHRoaXNDb3B5W2ldDQogICAgICB5ID0gdGFyZ2V0Q29weVtpXQ0KICAgICAgYnJlYWsNCiAgICB9DQogIH0NCg0KICBpZiAoeCA8IHkpIHJldHVybiAtMQ0KICBpZiAoeSA8IHgpIHJldHVybiAxDQogIHJldHVybiAwDQp9DQoNCmZ1bmN0aW9uIGFycmF5SW5kZXhPZiAoYXJyLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nKSB7DQogIHZhciBpbmRleFNpemUgPSAxDQogIHZhciBhcnJMZW5ndGggPSBhcnIubGVuZ3RoDQogIHZhciB2YWxMZW5ndGggPSB2YWwubGVuZ3RoDQoNCiAgaWYgKGVuY29kaW5nICE9PSB1bmRlZmluZWQpIHsNCiAgICBlbmNvZGluZyA9IFN0cmluZyhlbmNvZGluZykudG9Mb3dlckNhc2UoKQ0KICAgIGlmIChlbmNvZGluZyA9PT0gJ3VjczInIHx8IGVuY29kaW5nID09PSAndWNzLTInIHx8DQogICAgICAgIGVuY29kaW5nID09PSAndXRmMTZsZScgfHwgZW5jb2RpbmcgPT09ICd1dGYtMTZsZScpIHsNCiAgICAgIGlmIChhcnIubGVuZ3RoIDwgMiB8fCB2YWwubGVuZ3RoIDwgMikgew0KICAgICAgICByZXR1cm4gLTENCiAgICAgIH0NCiAgICAgIGluZGV4U2l6ZSA9IDINCiAgICAgIGFyckxlbmd0aCAvPSAyDQogICAgICB2YWxMZW5ndGggLz0gMg0KICAgICAgYnl0ZU9mZnNldCAvPSAyDQogICAgfQ0KICB9DQoNCiAgZnVuY3Rpb24gcmVhZCAoYnVmLCBpKSB7DQogICAgaWYgKGluZGV4U2l6ZSA9PT0gMSkgew0KICAgICAgcmV0dXJuIGJ1ZltpXQ0KICAgIH0gZWxzZSB7DQogICAgICByZXR1cm4gYnVmLnJlYWRVSW50MTZCRShpICogaW5kZXhTaXplKQ0KICAgIH0NCiAgfQ0KDQogIHZhciBmb3VuZEluZGV4ID0gLTENCiAgZm9yICh2YXIgaSA9IDA7IGJ5dGVPZmZzZXQgKyBpIDwgYXJyTGVuZ3RoOyBpKyspIHsNCiAgICBpZiAocmVhZChhcnIsIGJ5dGVPZmZzZXQgKyBpKSA9PT0gcmVhZCh2YWwsIGZvdW5kSW5kZXggPT09IC0xID8gMCA6IGkgLSBmb3VuZEluZGV4KSkgew0KICAgICAgaWYgKGZvdW5kSW5kZXggPT09IC0xKSBmb3VuZEluZGV4ID0gaQ0KICAgICAgaWYgKGkgLSBmb3VuZEluZGV4ICsgMSA9PT0gdmFsTGVuZ3RoKSByZXR1cm4gKGJ5dGVPZmZzZXQgKyBmb3VuZEluZGV4KSAqIGluZGV4U2l6ZQ0KICAgIH0gZWxzZSB7DQogICAgICBpZiAoZm91bmRJbmRleCAhPT0gLTEpIGkgLT0gaSAtIGZvdW5kSW5kZXgNCiAgICAgIGZvdW5kSW5kZXggPSAtMQ0KICAgIH0NCiAgfQ0KICByZXR1cm4gLTENCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5pbmRleE9mID0gZnVuY3Rpb24gaW5kZXhPZiAodmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZykgew0KICBpZiAodHlwZW9mIGJ5dGVPZmZzZXQgPT09ICdzdHJpbmcnKSB7DQogICAgZW5jb2RpbmcgPSBieXRlT2Zmc2V0DQogICAgYnl0ZU9mZnNldCA9IDANCiAgfSBlbHNlIGlmIChieXRlT2Zmc2V0ID4gMHg3ZmZmZmZmZikgew0KICAgIGJ5dGVPZmZzZXQgPSAweDdmZmZmZmZmDQogIH0gZWxzZSBpZiAoYnl0ZU9mZnNldCA8IC0weDgwMDAwMDAwKSB7DQogICAgYnl0ZU9mZnNldCA9IC0weDgwMDAwMDAwDQogIH0NCiAgYnl0ZU9mZnNldCA+Pj0gMA0KDQogIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIC0xDQogIGlmIChieXRlT2Zmc2V0ID49IHRoaXMubGVuZ3RoKSByZXR1cm4gLTENCg0KICAvLyBOZWdhdGl2ZSBvZmZzZXRzIHN0YXJ0IGZyb20gdGhlIGVuZCBvZiB0aGUgYnVmZmVyDQogIGlmIChieXRlT2Zmc2V0IDwgMCkgYnl0ZU9mZnNldCA9IE1hdGgubWF4KHRoaXMubGVuZ3RoICsgYnl0ZU9mZnNldCwgMCkNCg0KICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycpIHsNCiAgICB2YWwgPSBCdWZmZXIuZnJvbSh2YWwsIGVuY29kaW5nKQ0KICB9DQoNCiAgaWYgKEJ1ZmZlci5pc0J1ZmZlcih2YWwpKSB7DQogICAgLy8gc3BlY2lhbCBjYXNlOiBsb29raW5nIGZvciBlbXB0eSBzdHJpbmcvYnVmZmVyIGFsd2F5cyBmYWlscw0KICAgIGlmICh2YWwubGVuZ3RoID09PSAwKSB7DQogICAgICByZXR1cm4gLTENCiAgICB9DQogICAgcmV0dXJuIGFycmF5SW5kZXhPZih0aGlzLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nKQ0KICB9DQogIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykgew0KICAgIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCAmJiBVaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mID09PSAnZnVuY3Rpb24nKSB7DQogICAgICByZXR1cm4gVWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKHRoaXMsIHZhbCwgYnl0ZU9mZnNldCkNCiAgICB9DQogICAgcmV0dXJuIGFycmF5SW5kZXhPZih0aGlzLCBbIHZhbCBdLCBieXRlT2Zmc2V0LCBlbmNvZGluZykNCiAgfQ0KDQogIHRocm93IG5ldyBUeXBlRXJyb3IoJ3ZhbCBtdXN0IGJlIHN0cmluZywgbnVtYmVyIG9yIEJ1ZmZlcicpDQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUuaW5jbHVkZXMgPSBmdW5jdGlvbiBpbmNsdWRlcyAodmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZykgew0KICByZXR1cm4gdGhpcy5pbmRleE9mKHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcpICE9PSAtMQ0KfQ0KDQpmdW5jdGlvbiBoZXhXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7DQogIG9mZnNldCA9IE51bWJlcihvZmZzZXQpIHx8IDANCiAgdmFyIHJlbWFpbmluZyA9IGJ1Zi5sZW5ndGggLSBvZmZzZXQNCiAgaWYgKCFsZW5ndGgpIHsNCiAgICBsZW5ndGggPSByZW1haW5pbmcNCiAgfSBlbHNlIHsNCiAgICBsZW5ndGggPSBOdW1iZXIobGVuZ3RoKQ0KICAgIGlmIChsZW5ndGggPiByZW1haW5pbmcpIHsNCiAgICAgIGxlbmd0aCA9IHJlbWFpbmluZw0KICAgIH0NCiAgfQ0KDQogIC8vIG11c3QgYmUgYW4gZXZlbiBudW1iZXIgb2YgZGlnaXRzDQogIHZhciBzdHJMZW4gPSBzdHJpbmcubGVuZ3RoDQogIGlmIChzdHJMZW4gJSAyICE9PSAwKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgaGV4IHN0cmluZycpDQoNCiAgaWYgKGxlbmd0aCA+IHN0ckxlbiAvIDIpIHsNCiAgICBsZW5ndGggPSBzdHJMZW4gLyAyDQogIH0NCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgew0KICAgIHZhciBwYXJzZWQgPSBwYXJzZUludChzdHJpbmcuc3Vic3RyKGkgKiAyLCAyKSwgMTYpDQogICAgaWYgKGlzTmFOKHBhcnNlZCkpIHJldHVybiBpDQogICAgYnVmW29mZnNldCArIGldID0gcGFyc2VkDQogIH0NCiAgcmV0dXJuIGkNCn0NCg0KZnVuY3Rpb24gdXRmOFdyaXRlIChidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpIHsNCiAgcmV0dXJuIGJsaXRCdWZmZXIodXRmOFRvQnl0ZXMoc3RyaW5nLCBidWYubGVuZ3RoIC0gb2Zmc2V0KSwgYnVmLCBvZmZzZXQsIGxlbmd0aCkNCn0NCg0KZnVuY3Rpb24gYXNjaWlXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7DQogIHJldHVybiBibGl0QnVmZmVyKGFzY2lpVG9CeXRlcyhzdHJpbmcpLCBidWYsIG9mZnNldCwgbGVuZ3RoKQ0KfQ0KDQpmdW5jdGlvbiBiaW5hcnlXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7DQogIHJldHVybiBhc2NpaVdyaXRlKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkNCn0NCg0KZnVuY3Rpb24gYmFzZTY0V3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkgew0KICByZXR1cm4gYmxpdEJ1ZmZlcihiYXNlNjRUb0J5dGVzKHN0cmluZyksIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpDQp9DQoNCmZ1bmN0aW9uIHVjczJXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7DQogIHJldHVybiBibGl0QnVmZmVyKHV0ZjE2bGVUb0J5dGVzKHN0cmluZywgYnVmLmxlbmd0aCAtIG9mZnNldCksIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpDQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiB3cml0ZSAoc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCwgZW5jb2RpbmcpIHsNCiAgLy8gQnVmZmVyI3dyaXRlKHN0cmluZykNCiAgaWYgKG9mZnNldCA9PT0gdW5kZWZpbmVkKSB7DQogICAgZW5jb2RpbmcgPSAndXRmOCcNCiAgICBsZW5ndGggPSB0aGlzLmxlbmd0aA0KICAgIG9mZnNldCA9IDANCiAgLy8gQnVmZmVyI3dyaXRlKHN0cmluZywgZW5jb2RpbmcpDQogIH0gZWxzZSBpZiAobGVuZ3RoID09PSB1bmRlZmluZWQgJiYgdHlwZW9mIG9mZnNldCA9PT0gJ3N0cmluZycpIHsNCiAgICBlbmNvZGluZyA9IG9mZnNldA0KICAgIGxlbmd0aCA9IHRoaXMubGVuZ3RoDQogICAgb2Zmc2V0ID0gMA0KICAvLyBCdWZmZXIjd3JpdGUoc3RyaW5nLCBvZmZzZXRbLCBsZW5ndGhdWywgZW5jb2RpbmddKQ0KICB9IGVsc2UgaWYgKGlzRmluaXRlKG9mZnNldCkpIHsNCiAgICBvZmZzZXQgPSBvZmZzZXQgfCAwDQogICAgaWYgKGlzRmluaXRlKGxlbmd0aCkpIHsNCiAgICAgIGxlbmd0aCA9IGxlbmd0aCB8IDANCiAgICAgIGlmIChlbmNvZGluZyA9PT0gdW5kZWZpbmVkKSBlbmNvZGluZyA9ICd1dGY4Jw0KICAgIH0gZWxzZSB7DQogICAgICBlbmNvZGluZyA9IGxlbmd0aA0KICAgICAgbGVuZ3RoID0gdW5kZWZpbmVkDQogICAgfQ0KICAvLyBsZWdhY3kgd3JpdGUoc3RyaW5nLCBlbmNvZGluZywgb2Zmc2V0LCBsZW5ndGgpIC0gcmVtb3ZlIGluIHYwLjEzDQogIH0gZWxzZSB7DQogICAgdGhyb3cgbmV3IEVycm9yKA0KICAgICAgJ0J1ZmZlci53cml0ZShzdHJpbmcsIGVuY29kaW5nLCBvZmZzZXRbLCBsZW5ndGhdKSBpcyBubyBsb25nZXIgc3VwcG9ydGVkJw0KICAgICkNCiAgfQ0KDQogIHZhciByZW1haW5pbmcgPSB0aGlzLmxlbmd0aCAtIG9mZnNldA0KICBpZiAobGVuZ3RoID09PSB1bmRlZmluZWQgfHwgbGVuZ3RoID4gcmVtYWluaW5nKSBsZW5ndGggPSByZW1haW5pbmcNCg0KICBpZiAoKHN0cmluZy5sZW5ndGggPiAwICYmIChsZW5ndGggPCAwIHx8IG9mZnNldCA8IDApKSB8fCBvZmZzZXQgPiB0aGlzLmxlbmd0aCkgew0KICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdBdHRlbXB0IHRvIHdyaXRlIG91dHNpZGUgYnVmZmVyIGJvdW5kcycpDQogIH0NCg0KICBpZiAoIWVuY29kaW5nKSBlbmNvZGluZyA9ICd1dGY4Jw0KDQogIHZhciBsb3dlcmVkQ2FzZSA9IGZhbHNlDQogIGZvciAoOzspIHsNCiAgICBzd2l0Y2ggKGVuY29kaW5nKSB7DQogICAgICBjYXNlICdoZXgnOg0KICAgICAgICByZXR1cm4gaGV4V3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkNCg0KICAgICAgY2FzZSAndXRmOCc6DQogICAgICBjYXNlICd1dGYtOCc6DQogICAgICAgIHJldHVybiB1dGY4V3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkNCg0KICAgICAgY2FzZSAnYXNjaWknOg0KICAgICAgICByZXR1cm4gYXNjaWlXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKQ0KDQogICAgICBjYXNlICdiaW5hcnknOg0KICAgICAgICByZXR1cm4gYmluYXJ5V3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkNCg0KICAgICAgY2FzZSAnYmFzZTY0JzoNCiAgICAgICAgLy8gV2FybmluZzogbWF4TGVuZ3RoIG5vdCB0YWtlbiBpbnRvIGFjY291bnQgaW4gYmFzZTY0V3JpdGUNCiAgICAgICAgcmV0dXJuIGJhc2U2NFdyaXRlKHRoaXMsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpDQoNCiAgICAgIGNhc2UgJ3VjczInOg0KICAgICAgY2FzZSAndWNzLTInOg0KICAgICAgY2FzZSAndXRmMTZsZSc6DQogICAgICBjYXNlICd1dGYtMTZsZSc6DQogICAgICAgIHJldHVybiB1Y3MyV3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkNCg0KICAgICAgZGVmYXVsdDoNCiAgICAgICAgaWYgKGxvd2VyZWRDYXNlKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdVbmtub3duIGVuY29kaW5nOiAnICsgZW5jb2RpbmcpDQogICAgICAgIGVuY29kaW5nID0gKCcnICsgZW5jb2RpbmcpLnRvTG93ZXJDYXNlKCkNCiAgICAgICAgbG93ZXJlZENhc2UgPSB0cnVlDQogICAgfQ0KICB9DQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gdG9KU09OICgpIHsNCiAgcmV0dXJuIHsNCiAgICB0eXBlOiAnQnVmZmVyJywNCiAgICBkYXRhOiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0aGlzLl9hcnIgfHwgdGhpcywgMCkNCiAgfQ0KfQ0KDQpmdW5jdGlvbiBiYXNlNjRTbGljZSAoYnVmLCBzdGFydCwgZW5kKSB7DQogIGlmIChzdGFydCA9PT0gMCAmJiBlbmQgPT09IGJ1Zi5sZW5ndGgpIHsNCiAgICByZXR1cm4gYmFzZTY0LmZyb21CeXRlQXJyYXkoYnVmKQ0KICB9IGVsc2Ugew0KICAgIHJldHVybiBiYXNlNjQuZnJvbUJ5dGVBcnJheShidWYuc2xpY2Uoc3RhcnQsIGVuZCkpDQogIH0NCn0NCg0KZnVuY3Rpb24gdXRmOFNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHsNCiAgZW5kID0gTWF0aC5taW4oYnVmLmxlbmd0aCwgZW5kKQ0KICB2YXIgcmVzID0gW10NCg0KICB2YXIgaSA9IHN0YXJ0DQogIHdoaWxlIChpIDwgZW5kKSB7DQogICAgdmFyIGZpcnN0Qnl0ZSA9IGJ1ZltpXQ0KICAgIHZhciBjb2RlUG9pbnQgPSBudWxsDQogICAgdmFyIGJ5dGVzUGVyU2VxdWVuY2UgPSAoZmlyc3RCeXRlID4gMHhFRikgPyA0DQogICAgICA6IChmaXJzdEJ5dGUgPiAweERGKSA/IDMNCiAgICAgIDogKGZpcnN0Qnl0ZSA+IDB4QkYpID8gMg0KICAgICAgOiAxDQoNCiAgICBpZiAoaSArIGJ5dGVzUGVyU2VxdWVuY2UgPD0gZW5kKSB7DQogICAgICB2YXIgc2Vjb25kQnl0ZSwgdGhpcmRCeXRlLCBmb3VydGhCeXRlLCB0ZW1wQ29kZVBvaW50DQoNCiAgICAgIHN3aXRjaCAoYnl0ZXNQZXJTZXF1ZW5jZSkgew0KICAgICAgICBjYXNlIDE6DQogICAgICAgICAgaWYgKGZpcnN0Qnl0ZSA8IDB4ODApIHsNCiAgICAgICAgICAgIGNvZGVQb2ludCA9IGZpcnN0Qnl0ZQ0KICAgICAgICAgIH0NCiAgICAgICAgICBicmVhaw0KICAgICAgICBjYXNlIDI6DQogICAgICAgICAgc2Vjb25kQnl0ZSA9IGJ1ZltpICsgMV0NCiAgICAgICAgICBpZiAoKHNlY29uZEJ5dGUgJiAweEMwKSA9PT0gMHg4MCkgew0KICAgICAgICAgICAgdGVtcENvZGVQb2ludCA9IChmaXJzdEJ5dGUgJiAweDFGKSA8PCAweDYgfCAoc2Vjb25kQnl0ZSAmIDB4M0YpDQogICAgICAgICAgICBpZiAodGVtcENvZGVQb2ludCA+IDB4N0YpIHsNCiAgICAgICAgICAgICAgY29kZVBvaW50ID0gdGVtcENvZGVQb2ludA0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgICBicmVhaw0KICAgICAgICBjYXNlIDM6DQogICAgICAgICAgc2Vjb25kQnl0ZSA9IGJ1ZltpICsgMV0NCiAgICAgICAgICB0aGlyZEJ5dGUgPSBidWZbaSArIDJdDQogICAgICAgICAgaWYgKChzZWNvbmRCeXRlICYgMHhDMCkgPT09IDB4ODAgJiYgKHRoaXJkQnl0ZSAmIDB4QzApID09PSAweDgwKSB7DQogICAgICAgICAgICB0ZW1wQ29kZVBvaW50ID0gKGZpcnN0Qnl0ZSAmIDB4RikgPDwgMHhDIHwgKHNlY29uZEJ5dGUgJiAweDNGKSA8PCAweDYgfCAodGhpcmRCeXRlICYgMHgzRikNCiAgICAgICAgICAgIGlmICh0ZW1wQ29kZVBvaW50ID4gMHg3RkYgJiYgKHRlbXBDb2RlUG9pbnQgPCAweEQ4MDAgfHwgdGVtcENvZGVQb2ludCA+IDB4REZGRikpIHsNCiAgICAgICAgICAgICAgY29kZVBvaW50ID0gdGVtcENvZGVQb2ludA0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgICBicmVhaw0KICAgICAgICBjYXNlIDQ6DQogICAgICAgICAgc2Vjb25kQnl0ZSA9IGJ1ZltpICsgMV0NCiAgICAgICAgICB0aGlyZEJ5dGUgPSBidWZbaSArIDJdDQogICAgICAgICAgZm91cnRoQnl0ZSA9IGJ1ZltpICsgM10NCiAgICAgICAgICBpZiAoKHNlY29uZEJ5dGUgJiAweEMwKSA9PT0gMHg4MCAmJiAodGhpcmRCeXRlICYgMHhDMCkgPT09IDB4ODAgJiYgKGZvdXJ0aEJ5dGUgJiAweEMwKSA9PT0gMHg4MCkgew0KICAgICAgICAgICAgdGVtcENvZGVQb2ludCA9IChmaXJzdEJ5dGUgJiAweEYpIDw8IDB4MTIgfCAoc2Vjb25kQnl0ZSAmIDB4M0YpIDw8IDB4QyB8ICh0aGlyZEJ5dGUgJiAweDNGKSA8PCAweDYgfCAoZm91cnRoQnl0ZSAmIDB4M0YpDQogICAgICAgICAgICBpZiAodGVtcENvZGVQb2ludCA+IDB4RkZGRiAmJiB0ZW1wQ29kZVBvaW50IDwgMHgxMTAwMDApIHsNCiAgICAgICAgICAgICAgY29kZVBvaW50ID0gdGVtcENvZGVQb2ludA0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQoNCiAgICBpZiAoY29kZVBvaW50ID09PSBudWxsKSB7DQogICAgICAvLyB3ZSBkaWQgbm90IGdlbmVyYXRlIGEgdmFsaWQgY29kZVBvaW50IHNvIGluc2VydCBhDQogICAgICAvLyByZXBsYWNlbWVudCBjaGFyIChVK0ZGRkQpIGFuZCBhZHZhbmNlIG9ubHkgMSBieXRlDQogICAgICBjb2RlUG9pbnQgPSAweEZGRkQNCiAgICAgIGJ5dGVzUGVyU2VxdWVuY2UgPSAxDQogICAgfSBlbHNlIGlmIChjb2RlUG9pbnQgPiAweEZGRkYpIHsNCiAgICAgIC8vIGVuY29kZSB0byB1dGYxNiAoc3Vycm9nYXRlIHBhaXIgZGFuY2UpDQogICAgICBjb2RlUG9pbnQgLT0gMHgxMDAwMA0KICAgICAgcmVzLnB1c2goY29kZVBvaW50ID4+PiAxMCAmIDB4M0ZGIHwgMHhEODAwKQ0KICAgICAgY29kZVBvaW50ID0gMHhEQzAwIHwgY29kZVBvaW50ICYgMHgzRkYNCiAgICB9DQoNCiAgICByZXMucHVzaChjb2RlUG9pbnQpDQogICAgaSArPSBieXRlc1BlclNlcXVlbmNlDQogIH0NCg0KICByZXR1cm4gZGVjb2RlQ29kZVBvaW50c0FycmF5KHJlcykNCn0NCg0KLy8gQmFzZWQgb24gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjI3NDcyNzIvNjgwNzQyLCB0aGUgYnJvd3NlciB3aXRoDQovLyB0aGUgbG93ZXN0IGxpbWl0IGlzIENocm9tZSwgd2l0aCAweDEwMDAwIGFyZ3MuDQovLyBXZSBnbyAxIG1hZ25pdHVkZSBsZXNzLCBmb3Igc2FmZXR5DQp2YXIgTUFYX0FSR1VNRU5UU19MRU5HVEggPSAweDEwMDANCg0KZnVuY3Rpb24gZGVjb2RlQ29kZVBvaW50c0FycmF5IChjb2RlUG9pbnRzKSB7DQogIHZhciBsZW4gPSBjb2RlUG9pbnRzLmxlbmd0aA0KICBpZiAobGVuIDw9IE1BWF9BUkdVTUVOVFNfTEVOR1RIKSB7DQogICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLCBjb2RlUG9pbnRzKSAvLyBhdm9pZCBleHRyYSBzbGljZSgpDQogIH0NCg0KICAvLyBEZWNvZGUgaW4gY2h1bmtzIHRvIGF2b2lkICJjYWxsIHN0YWNrIHNpemUgZXhjZWVkZWQiLg0KICB2YXIgcmVzID0gJycNCiAgdmFyIGkgPSAwDQogIHdoaWxlIChpIDwgbGVuKSB7DQogICAgcmVzICs9IFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoDQogICAgICBTdHJpbmcsDQogICAgICBjb2RlUG9pbnRzLnNsaWNlKGksIGkgKz0gTUFYX0FSR1VNRU5UU19MRU5HVEgpDQogICAgKQ0KICB9DQogIHJldHVybiByZXMNCn0NCg0KZnVuY3Rpb24gYXNjaWlTbGljZSAoYnVmLCBzdGFydCwgZW5kKSB7DQogIHZhciByZXQgPSAnJw0KICBlbmQgPSBNYXRoLm1pbihidWYubGVuZ3RoLCBlbmQpDQoNCiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpKyspIHsNCiAgICByZXQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShidWZbaV0gJiAweDdGKQ0KICB9DQogIHJldHVybiByZXQNCn0NCg0KZnVuY3Rpb24gYmluYXJ5U2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkgew0KICB2YXIgcmV0ID0gJycNCiAgZW5kID0gTWF0aC5taW4oYnVmLmxlbmd0aCwgZW5kKQ0KDQogIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgaSsrKSB7DQogICAgcmV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnVmW2ldKQ0KICB9DQogIHJldHVybiByZXQNCn0NCg0KZnVuY3Rpb24gaGV4U2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkgew0KICB2YXIgbGVuID0gYnVmLmxlbmd0aA0KDQogIGlmICghc3RhcnQgfHwgc3RhcnQgPCAwKSBzdGFydCA9IDANCiAgaWYgKCFlbmQgfHwgZW5kIDwgMCB8fCBlbmQgPiBsZW4pIGVuZCA9IGxlbg0KDQogIHZhciBvdXQgPSAnJw0KICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkrKykgew0KICAgIG91dCArPSB0b0hleChidWZbaV0pDQogIH0NCiAgcmV0dXJuIG91dA0KfQ0KDQpmdW5jdGlvbiB1dGYxNmxlU2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkgew0KICB2YXIgYnl0ZXMgPSBidWYuc2xpY2Uoc3RhcnQsIGVuZCkNCiAgdmFyIHJlcyA9ICcnDQogIGZvciAodmFyIGkgPSAwOyBpIDwgYnl0ZXMubGVuZ3RoOyBpICs9IDIpIHsNCiAgICByZXMgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShieXRlc1tpXSArIGJ5dGVzW2kgKyAxXSAqIDI1NikNCiAgfQ0KICByZXR1cm4gcmVzDQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUuc2xpY2UgPSBmdW5jdGlvbiBzbGljZSAoc3RhcnQsIGVuZCkgew0KICB2YXIgbGVuID0gdGhpcy5sZW5ndGgNCiAgc3RhcnQgPSB+fnN0YXJ0DQogIGVuZCA9IGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuIDogfn5lbmQNCg0KICBpZiAoc3RhcnQgPCAwKSB7DQogICAgc3RhcnQgKz0gbGVuDQogICAgaWYgKHN0YXJ0IDwgMCkgc3RhcnQgPSAwDQogIH0gZWxzZSBpZiAoc3RhcnQgPiBsZW4pIHsNCiAgICBzdGFydCA9IGxlbg0KICB9DQoNCiAgaWYgKGVuZCA8IDApIHsNCiAgICBlbmQgKz0gbGVuDQogICAgaWYgKGVuZCA8IDApIGVuZCA9IDANCiAgfSBlbHNlIGlmIChlbmQgPiBsZW4pIHsNCiAgICBlbmQgPSBsZW4NCiAgfQ0KDQogIGlmIChlbmQgPCBzdGFydCkgZW5kID0gc3RhcnQNCg0KICB2YXIgbmV3QnVmDQogIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkgew0KICAgIG5ld0J1ZiA9IHRoaXMuc3ViYXJyYXkoc3RhcnQsIGVuZCkNCiAgICBuZXdCdWYuX19wcm90b19fID0gQnVmZmVyLnByb3RvdHlwZQ0KICB9IGVsc2Ugew0KICAgIHZhciBzbGljZUxlbiA9IGVuZCAtIHN0YXJ0DQogICAgbmV3QnVmID0gbmV3IEJ1ZmZlcihzbGljZUxlbiwgdW5kZWZpbmVkKQ0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2xpY2VMZW47IGkrKykgew0KICAgICAgbmV3QnVmW2ldID0gdGhpc1tpICsgc3RhcnRdDQogICAgfQ0KICB9DQoNCiAgcmV0dXJuIG5ld0J1Zg0KfQ0KDQovKg0KICogTmVlZCB0byBtYWtlIHN1cmUgdGhhdCBidWZmZXIgaXNuJ3QgdHJ5aW5nIHRvIHdyaXRlIG91dCBvZiBib3VuZHMuDQogKi8NCmZ1bmN0aW9uIGNoZWNrT2Zmc2V0IChvZmZzZXQsIGV4dCwgbGVuZ3RoKSB7DQogIGlmICgob2Zmc2V0ICUgMSkgIT09IDAgfHwgb2Zmc2V0IDwgMCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ29mZnNldCBpcyBub3QgdWludCcpDQogIGlmIChvZmZzZXQgKyBleHQgPiBsZW5ndGgpIHRocm93IG5ldyBSYW5nZUVycm9yKCdUcnlpbmcgdG8gYWNjZXNzIGJleW9uZCBidWZmZXIgbGVuZ3RoJykNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludExFID0gZnVuY3Rpb24gcmVhZFVJbnRMRSAob2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkgew0KICBvZmZzZXQgPSBvZmZzZXQgfCAwDQogIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoIHwgMA0KICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIGJ5dGVMZW5ndGgsIHRoaXMubGVuZ3RoKQ0KDQogIHZhciB2YWwgPSB0aGlzW29mZnNldF0NCiAgdmFyIG11bCA9IDENCiAgdmFyIGkgPSAwDQogIHdoaWxlICgrK2kgPCBieXRlTGVuZ3RoICYmIChtdWwgKj0gMHgxMDApKSB7DQogICAgdmFsICs9IHRoaXNbb2Zmc2V0ICsgaV0gKiBtdWwNCiAgfQ0KDQogIHJldHVybiB2YWwNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludEJFID0gZnVuY3Rpb24gcmVhZFVJbnRCRSAob2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkgew0KICBvZmZzZXQgPSBvZmZzZXQgfCAwDQogIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoIHwgMA0KICBpZiAoIW5vQXNzZXJ0KSB7DQogICAgY2hlY2tPZmZzZXQob2Zmc2V0LCBieXRlTGVuZ3RoLCB0aGlzLmxlbmd0aCkNCiAgfQ0KDQogIHZhciB2YWwgPSB0aGlzW29mZnNldCArIC0tYnl0ZUxlbmd0aF0NCiAgdmFyIG11bCA9IDENCiAgd2hpbGUgKGJ5dGVMZW5ndGggPiAwICYmIChtdWwgKj0gMHgxMDApKSB7DQogICAgdmFsICs9IHRoaXNbb2Zmc2V0ICsgLS1ieXRlTGVuZ3RoXSAqIG11bA0KICB9DQoNCiAgcmV0dXJuIHZhbA0KfQ0KDQpCdWZmZXIucHJvdG90eXBlLnJlYWRVSW50OCA9IGZ1bmN0aW9uIHJlYWRVSW50OCAob2Zmc2V0LCBub0Fzc2VydCkgew0KICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDEsIHRoaXMubGVuZ3RoKQ0KICByZXR1cm4gdGhpc1tvZmZzZXRdDQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQxNkxFID0gZnVuY3Rpb24gcmVhZFVJbnQxNkxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgMiwgdGhpcy5sZW5ndGgpDQogIHJldHVybiB0aGlzW29mZnNldF0gfCAodGhpc1tvZmZzZXQgKyAxXSA8PCA4KQ0KfQ0KDQpCdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MTZCRSA9IGZ1bmN0aW9uIHJlYWRVSW50MTZCRSAob2Zmc2V0LCBub0Fzc2VydCkgew0KICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDIsIHRoaXMubGVuZ3RoKQ0KICByZXR1cm4gKHRoaXNbb2Zmc2V0XSA8PCA4KSB8IHRoaXNbb2Zmc2V0ICsgMV0NCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDMyTEUgPSBmdW5jdGlvbiByZWFkVUludDMyTEUgKG9mZnNldCwgbm9Bc3NlcnQpIHsNCiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCA0LCB0aGlzLmxlbmd0aCkNCg0KICByZXR1cm4gKCh0aGlzW29mZnNldF0pIHwNCiAgICAgICh0aGlzW29mZnNldCArIDFdIDw8IDgpIHwNCiAgICAgICh0aGlzW29mZnNldCArIDJdIDw8IDE2KSkgKw0KICAgICAgKHRoaXNbb2Zmc2V0ICsgM10gKiAweDEwMDAwMDApDQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQzMkJFID0gZnVuY3Rpb24gcmVhZFVJbnQzMkJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpDQoNCiAgcmV0dXJuICh0aGlzW29mZnNldF0gKiAweDEwMDAwMDApICsNCiAgICAoKHRoaXNbb2Zmc2V0ICsgMV0gPDwgMTYpIHwNCiAgICAodGhpc1tvZmZzZXQgKyAyXSA8PCA4KSB8DQogICAgdGhpc1tvZmZzZXQgKyAzXSkNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50TEUgPSBmdW5jdGlvbiByZWFkSW50TEUgKG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHsNCiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMA0KICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCB8IDANCiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCBieXRlTGVuZ3RoLCB0aGlzLmxlbmd0aCkNCg0KICB2YXIgdmFsID0gdGhpc1tvZmZzZXRdDQogIHZhciBtdWwgPSAxDQogIHZhciBpID0gMA0KICB3aGlsZSAoKytpIDwgYnl0ZUxlbmd0aCAmJiAobXVsICo9IDB4MTAwKSkgew0KICAgIHZhbCArPSB0aGlzW29mZnNldCArIGldICogbXVsDQogIH0NCiAgbXVsICo9IDB4ODANCg0KICBpZiAodmFsID49IG11bCkgdmFsIC09IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoKQ0KDQogIHJldHVybiB2YWwNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50QkUgPSBmdW5jdGlvbiByZWFkSW50QkUgKG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHsNCiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMA0KICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCB8IDANCiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCBieXRlTGVuZ3RoLCB0aGlzLmxlbmd0aCkNCg0KICB2YXIgaSA9IGJ5dGVMZW5ndGgNCiAgdmFyIG11bCA9IDENCiAgdmFyIHZhbCA9IHRoaXNbb2Zmc2V0ICsgLS1pXQ0KICB3aGlsZSAoaSA+IDAgJiYgKG11bCAqPSAweDEwMCkpIHsNCiAgICB2YWwgKz0gdGhpc1tvZmZzZXQgKyAtLWldICogbXVsDQogIH0NCiAgbXVsICo9IDB4ODANCg0KICBpZiAodmFsID49IG11bCkgdmFsIC09IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoKQ0KDQogIHJldHVybiB2YWwNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50OCA9IGZ1bmN0aW9uIHJlYWRJbnQ4IChvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgMSwgdGhpcy5sZW5ndGgpDQogIGlmICghKHRoaXNbb2Zmc2V0XSAmIDB4ODApKSByZXR1cm4gKHRoaXNbb2Zmc2V0XSkNCiAgcmV0dXJuICgoMHhmZiAtIHRoaXNbb2Zmc2V0XSArIDEpICogLTEpDQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDE2TEUgPSBmdW5jdGlvbiByZWFkSW50MTZMRSAob2Zmc2V0LCBub0Fzc2VydCkgew0KICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDIsIHRoaXMubGVuZ3RoKQ0KICB2YXIgdmFsID0gdGhpc1tvZmZzZXRdIHwgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgOCkNCiAgcmV0dXJuICh2YWwgJiAweDgwMDApID8gdmFsIHwgMHhGRkZGMDAwMCA6IHZhbA0KfQ0KDQpCdWZmZXIucHJvdG90eXBlLnJlYWRJbnQxNkJFID0gZnVuY3Rpb24gcmVhZEludDE2QkUgKG9mZnNldCwgbm9Bc3NlcnQpIHsNCiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAyLCB0aGlzLmxlbmd0aCkNCiAgdmFyIHZhbCA9IHRoaXNbb2Zmc2V0ICsgMV0gfCAodGhpc1tvZmZzZXRdIDw8IDgpDQogIHJldHVybiAodmFsICYgMHg4MDAwKSA/IHZhbCB8IDB4RkZGRjAwMDAgOiB2YWwNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MzJMRSA9IGZ1bmN0aW9uIHJlYWRJbnQzMkxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpDQoNCiAgcmV0dXJuICh0aGlzW29mZnNldF0pIHwNCiAgICAodGhpc1tvZmZzZXQgKyAxXSA8PCA4KSB8DQogICAgKHRoaXNbb2Zmc2V0ICsgMl0gPDwgMTYpIHwNCiAgICAodGhpc1tvZmZzZXQgKyAzXSA8PCAyNCkNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MzJCRSA9IGZ1bmN0aW9uIHJlYWRJbnQzMkJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpDQoNCiAgcmV0dXJuICh0aGlzW29mZnNldF0gPDwgMjQpIHwNCiAgICAodGhpc1tvZmZzZXQgKyAxXSA8PCAxNikgfA0KICAgICh0aGlzW29mZnNldCArIDJdIDw8IDgpIHwNCiAgICAodGhpc1tvZmZzZXQgKyAzXSkNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5yZWFkRmxvYXRMRSA9IGZ1bmN0aW9uIHJlYWRGbG9hdExFIChvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpDQogIHJldHVybiBpZWVlNzU0LnJlYWQodGhpcywgb2Zmc2V0LCB0cnVlLCAyMywgNCkNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5yZWFkRmxvYXRCRSA9IGZ1bmN0aW9uIHJlYWRGbG9hdEJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpDQogIHJldHVybiBpZWVlNzU0LnJlYWQodGhpcywgb2Zmc2V0LCBmYWxzZSwgMjMsIDQpDQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUucmVhZERvdWJsZUxFID0gZnVuY3Rpb24gcmVhZERvdWJsZUxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgOCwgdGhpcy5sZW5ndGgpDQogIHJldHVybiBpZWVlNzU0LnJlYWQodGhpcywgb2Zmc2V0LCB0cnVlLCA1MiwgOCkNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS5yZWFkRG91YmxlQkUgPSBmdW5jdGlvbiByZWFkRG91YmxlQkUgKG9mZnNldCwgbm9Bc3NlcnQpIHsNCiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCA4LCB0aGlzLmxlbmd0aCkNCiAgcmV0dXJuIGllZWU3NTQucmVhZCh0aGlzLCBvZmZzZXQsIGZhbHNlLCA1MiwgOCkNCn0NCg0KZnVuY3Rpb24gY2hlY2tJbnQgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgZXh0LCBtYXgsIG1pbikgew0KICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihidWYpKSB0aHJvdyBuZXcgVHlwZUVycm9yKCciYnVmZmVyIiBhcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyIGluc3RhbmNlJykNCiAgaWYgKHZhbHVlID4gbWF4IHx8IHZhbHVlIDwgbWluKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignInZhbHVlIiBhcmd1bWVudCBpcyBvdXQgb2YgYm91bmRzJykNCiAgaWYgKG9mZnNldCArIGV4dCA+IGJ1Zi5sZW5ndGgpIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbmRleCBvdXQgb2YgcmFuZ2UnKQ0KfQ0KDQpCdWZmZXIucHJvdG90eXBlLndyaXRlVUludExFID0gZnVuY3Rpb24gd3JpdGVVSW50TEUgKHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7DQogIHZhbHVlID0gK3ZhbHVlDQogIG9mZnNldCA9IG9mZnNldCB8IDANCiAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggfCAwDQogIGlmICghbm9Bc3NlcnQpIHsNCiAgICB2YXIgbWF4Qnl0ZXMgPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aCkgLSAxDQogICAgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbWF4Qnl0ZXMsIDApDQogIH0NCg0KICB2YXIgbXVsID0gMQ0KICB2YXIgaSA9IDANCiAgdGhpc1tvZmZzZXRdID0gdmFsdWUgJiAweEZGDQogIHdoaWxlICgrK2kgPCBieXRlTGVuZ3RoICYmIChtdWwgKj0gMHgxMDApKSB7DQogICAgdGhpc1tvZmZzZXQgKyBpXSA9ICh2YWx1ZSAvIG11bCkgJiAweEZGDQogIH0NCg0KICByZXR1cm4gb2Zmc2V0ICsgYnl0ZUxlbmd0aA0KfQ0KDQpCdWZmZXIucHJvdG90eXBlLndyaXRlVUludEJFID0gZnVuY3Rpb24gd3JpdGVVSW50QkUgKHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7DQogIHZhbHVlID0gK3ZhbHVlDQogIG9mZnNldCA9IG9mZnNldCB8IDANCiAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggfCAwDQogIGlmICghbm9Bc3NlcnQpIHsNCiAgICB2YXIgbWF4Qnl0ZXMgPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aCkgLSAxDQogICAgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbWF4Qnl0ZXMsIDApDQogIH0NCg0KICB2YXIgaSA9IGJ5dGVMZW5ndGggLSAxDQogIHZhciBtdWwgPSAxDQogIHRoaXNbb2Zmc2V0ICsgaV0gPSB2YWx1ZSAmIDB4RkYNCiAgd2hpbGUgKC0taSA+PSAwICYmIChtdWwgKj0gMHgxMDApKSB7DQogICAgdGhpc1tvZmZzZXQgKyBpXSA9ICh2YWx1ZSAvIG11bCkgJiAweEZGDQogIH0NCg0KICByZXR1cm4gb2Zmc2V0ICsgYnl0ZUxlbmd0aA0KfQ0KDQpCdWZmZXIucHJvdG90eXBlLndyaXRlVUludDggPSBmdW5jdGlvbiB3cml0ZVVJbnQ4ICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkgew0KICB2YWx1ZSA9ICt2YWx1ZQ0KICBvZmZzZXQgPSBvZmZzZXQgfCAwDQogIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDEsIDB4ZmYsIDApDQogIGlmICghQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHZhbHVlID0gTWF0aC5mbG9vcih2YWx1ZSkNCiAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZikNCiAgcmV0dXJuIG9mZnNldCArIDENCn0NCg0KZnVuY3Rpb24gb2JqZWN0V3JpdGVVSW50MTYgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbGl0dGxlRW5kaWFuKSB7DQogIGlmICh2YWx1ZSA8IDApIHZhbHVlID0gMHhmZmZmICsgdmFsdWUgKyAxDQogIGZvciAodmFyIGkgPSAwLCBqID0gTWF0aC5taW4oYnVmLmxlbmd0aCAtIG9mZnNldCwgMik7IGkgPCBqOyBpKyspIHsNCiAgICBidWZbb2Zmc2V0ICsgaV0gPSAodmFsdWUgJiAoMHhmZiA8PCAoOCAqIChsaXR0bGVFbmRpYW4gPyBpIDogMSAtIGkpKSkpID4+Pg0KICAgICAgKGxpdHRsZUVuZGlhbiA/IGkgOiAxIC0gaSkgKiA4DQogIH0NCn0NCg0KQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQxNkxFID0gZnVuY3Rpb24gd3JpdGVVSW50MTZMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHsNCiAgdmFsdWUgPSArdmFsdWUNCiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMA0KICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAyLCAweGZmZmYsIDApDQogIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkgew0KICAgIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpDQogICAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gOCkNCiAgfSBlbHNlIHsNCiAgICBvYmplY3RXcml0ZVVJbnQxNih0aGlzLCB2YWx1ZSwgb2Zmc2V0LCB0cnVlKQ0KICB9DQogIHJldHVybiBvZmZzZXQgKyAyDQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MTZCRSA9IGZ1bmN0aW9uIHdyaXRlVUludDE2QkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIHZhbHVlID0gK3ZhbHVlDQogIG9mZnNldCA9IG9mZnNldCB8IDANCiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMiwgMHhmZmZmLCAwKQ0KICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHsNCiAgICB0aGlzW29mZnNldF0gPSAodmFsdWUgPj4+IDgpDQogICAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSAmIDB4ZmYpDQogIH0gZWxzZSB7DQogICAgb2JqZWN0V3JpdGVVSW50MTYodGhpcywgdmFsdWUsIG9mZnNldCwgZmFsc2UpDQogIH0NCiAgcmV0dXJuIG9mZnNldCArIDINCn0NCg0KZnVuY3Rpb24gb2JqZWN0V3JpdGVVSW50MzIgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbGl0dGxlRW5kaWFuKSB7DQogIGlmICh2YWx1ZSA8IDApIHZhbHVlID0gMHhmZmZmZmZmZiArIHZhbHVlICsgMQ0KICBmb3IgKHZhciBpID0gMCwgaiA9IE1hdGgubWluKGJ1Zi5sZW5ndGggLSBvZmZzZXQsIDQpOyBpIDwgajsgaSsrKSB7DQogICAgYnVmW29mZnNldCArIGldID0gKHZhbHVlID4+PiAobGl0dGxlRW5kaWFuID8gaSA6IDMgLSBpKSAqIDgpICYgMHhmZg0KICB9DQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MzJMRSA9IGZ1bmN0aW9uIHdyaXRlVUludDMyTEUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIHZhbHVlID0gK3ZhbHVlDQogIG9mZnNldCA9IG9mZnNldCB8IDANCiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgNCwgMHhmZmZmZmZmZiwgMCkNCiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7DQogICAgdGhpc1tvZmZzZXQgKyAzXSA9ICh2YWx1ZSA+Pj4gMjQpDQogICAgdGhpc1tvZmZzZXQgKyAyXSA9ICh2YWx1ZSA+Pj4gMTYpDQogICAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gOCkNCiAgICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKQ0KICB9IGVsc2Ugew0KICAgIG9iamVjdFdyaXRlVUludDMyKHRoaXMsIHZhbHVlLCBvZmZzZXQsIHRydWUpDQogIH0NCiAgcmV0dXJuIG9mZnNldCArIDQNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQzMkJFID0gZnVuY3Rpb24gd3JpdGVVSW50MzJCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHsNCiAgdmFsdWUgPSArdmFsdWUNCiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMA0KICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCA0LCAweGZmZmZmZmZmLCAwKQ0KICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHsNCiAgICB0aGlzW29mZnNldF0gPSAodmFsdWUgPj4+IDI0KQ0KICAgIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDE2KQ0KICAgIHRoaXNbb2Zmc2V0ICsgMl0gPSAodmFsdWUgPj4+IDgpDQogICAgdGhpc1tvZmZzZXQgKyAzXSA9ICh2YWx1ZSAmIDB4ZmYpDQogIH0gZWxzZSB7DQogICAgb2JqZWN0V3JpdGVVSW50MzIodGhpcywgdmFsdWUsIG9mZnNldCwgZmFsc2UpDQogIH0NCiAgcmV0dXJuIG9mZnNldCArIDQNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS53cml0ZUludExFID0gZnVuY3Rpb24gd3JpdGVJbnRMRSAodmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHsNCiAgdmFsdWUgPSArdmFsdWUNCiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMA0KICBpZiAoIW5vQXNzZXJ0KSB7DQogICAgdmFyIGxpbWl0ID0gTWF0aC5wb3coMiwgOCAqIGJ5dGVMZW5ndGggLSAxKQ0KDQogICAgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbGltaXQgLSAxLCAtbGltaXQpDQogIH0NCg0KICB2YXIgaSA9IDANCiAgdmFyIG11bCA9IDENCiAgdmFyIHN1YiA9IDANCiAgdGhpc1tvZmZzZXRdID0gdmFsdWUgJiAweEZGDQogIHdoaWxlICgrK2kgPCBieXRlTGVuZ3RoICYmIChtdWwgKj0gMHgxMDApKSB7DQogICAgaWYgKHZhbHVlIDwgMCAmJiBzdWIgPT09IDAgJiYgdGhpc1tvZmZzZXQgKyBpIC0gMV0gIT09IDApIHsNCiAgICAgIHN1YiA9IDENCiAgICB9DQogICAgdGhpc1tvZmZzZXQgKyBpXSA9ICgodmFsdWUgLyBtdWwpID4+IDApIC0gc3ViICYgMHhGRg0KICB9DQoNCiAgcmV0dXJuIG9mZnNldCArIGJ5dGVMZW5ndGgNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS53cml0ZUludEJFID0gZnVuY3Rpb24gd3JpdGVJbnRCRSAodmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHsNCiAgdmFsdWUgPSArdmFsdWUNCiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMA0KICBpZiAoIW5vQXNzZXJ0KSB7DQogICAgdmFyIGxpbWl0ID0gTWF0aC5wb3coMiwgOCAqIGJ5dGVMZW5ndGggLSAxKQ0KDQogICAgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbGltaXQgLSAxLCAtbGltaXQpDQogIH0NCg0KICB2YXIgaSA9IGJ5dGVMZW5ndGggLSAxDQogIHZhciBtdWwgPSAxDQogIHZhciBzdWIgPSAwDQogIHRoaXNbb2Zmc2V0ICsgaV0gPSB2YWx1ZSAmIDB4RkYNCiAgd2hpbGUgKC0taSA+PSAwICYmIChtdWwgKj0gMHgxMDApKSB7DQogICAgaWYgKHZhbHVlIDwgMCAmJiBzdWIgPT09IDAgJiYgdGhpc1tvZmZzZXQgKyBpICsgMV0gIT09IDApIHsNCiAgICAgIHN1YiA9IDENCiAgICB9DQogICAgdGhpc1tvZmZzZXQgKyBpXSA9ICgodmFsdWUgLyBtdWwpID4+IDApIC0gc3ViICYgMHhGRg0KICB9DQoNCiAgcmV0dXJuIG9mZnNldCArIGJ5dGVMZW5ndGgNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDggPSBmdW5jdGlvbiB3cml0ZUludDggKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIHZhbHVlID0gK3ZhbHVlDQogIG9mZnNldCA9IG9mZnNldCB8IDANCiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMSwgMHg3ZiwgLTB4ODApDQogIGlmICghQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHZhbHVlID0gTWF0aC5mbG9vcih2YWx1ZSkNCiAgaWYgKHZhbHVlIDwgMCkgdmFsdWUgPSAweGZmICsgdmFsdWUgKyAxDQogIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpDQogIHJldHVybiBvZmZzZXQgKyAxDQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQxNkxFID0gZnVuY3Rpb24gd3JpdGVJbnQxNkxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkgew0KICB2YWx1ZSA9ICt2YWx1ZQ0KICBvZmZzZXQgPSBvZmZzZXQgfCAwDQogIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDIsIDB4N2ZmZiwgLTB4ODAwMCkNCiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7DQogICAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZikNCiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiA4KQ0KICB9IGVsc2Ugew0KICAgIG9iamVjdFdyaXRlVUludDE2KHRoaXMsIHZhbHVlLCBvZmZzZXQsIHRydWUpDQogIH0NCiAgcmV0dXJuIG9mZnNldCArIDINCn0NCg0KQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDE2QkUgPSBmdW5jdGlvbiB3cml0ZUludDE2QkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIHZhbHVlID0gK3ZhbHVlDQogIG9mZnNldCA9IG9mZnNldCB8IDANCiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMiwgMHg3ZmZmLCAtMHg4MDAwKQ0KICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHsNCiAgICB0aGlzW29mZnNldF0gPSAodmFsdWUgPj4+IDgpDQogICAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSAmIDB4ZmYpDQogIH0gZWxzZSB7DQogICAgb2JqZWN0V3JpdGVVSW50MTYodGhpcywgdmFsdWUsIG9mZnNldCwgZmFsc2UpDQogIH0NCiAgcmV0dXJuIG9mZnNldCArIDINCn0NCg0KQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDMyTEUgPSBmdW5jdGlvbiB3cml0ZUludDMyTEUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIHZhbHVlID0gK3ZhbHVlDQogIG9mZnNldCA9IG9mZnNldCB8IDANCiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgNCwgMHg3ZmZmZmZmZiwgLTB4ODAwMDAwMDApDQogIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkgew0KICAgIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpDQogICAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gOCkNCiAgICB0aGlzW29mZnNldCArIDJdID0gKHZhbHVlID4+PiAxNikNCiAgICB0aGlzW29mZnNldCArIDNdID0gKHZhbHVlID4+PiAyNCkNCiAgfSBlbHNlIHsNCiAgICBvYmplY3RXcml0ZVVJbnQzMih0aGlzLCB2YWx1ZSwgb2Zmc2V0LCB0cnVlKQ0KICB9DQogIHJldHVybiBvZmZzZXQgKyA0DQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQzMkJFID0gZnVuY3Rpb24gd3JpdGVJbnQzMkJFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkgew0KICB2YWx1ZSA9ICt2YWx1ZQ0KICBvZmZzZXQgPSBvZmZzZXQgfCAwDQogIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDQsIDB4N2ZmZmZmZmYsIC0weDgwMDAwMDAwKQ0KICBpZiAodmFsdWUgPCAwKSB2YWx1ZSA9IDB4ZmZmZmZmZmYgKyB2YWx1ZSArIDENCiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7DQogICAgdGhpc1tvZmZzZXRdID0gKHZhbHVlID4+PiAyNCkNCiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiAxNikNCiAgICB0aGlzW29mZnNldCArIDJdID0gKHZhbHVlID4+PiA4KQ0KICAgIHRoaXNbb2Zmc2V0ICsgM10gPSAodmFsdWUgJiAweGZmKQ0KICB9IGVsc2Ugew0KICAgIG9iamVjdFdyaXRlVUludDMyKHRoaXMsIHZhbHVlLCBvZmZzZXQsIGZhbHNlKQ0KICB9DQogIHJldHVybiBvZmZzZXQgKyA0DQp9DQoNCmZ1bmN0aW9uIGNoZWNrSUVFRTc1NCAoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBleHQsIG1heCwgbWluKSB7DQogIGlmIChvZmZzZXQgKyBleHQgPiBidWYubGVuZ3RoKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW5kZXggb3V0IG9mIHJhbmdlJykNCiAgaWYgKG9mZnNldCA8IDApIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbmRleCBvdXQgb2YgcmFuZ2UnKQ0KfQ0KDQpmdW5jdGlvbiB3cml0ZUZsb2F0IChidWYsIHZhbHVlLCBvZmZzZXQsIGxpdHRsZUVuZGlhbiwgbm9Bc3NlcnQpIHsNCiAgaWYgKCFub0Fzc2VydCkgew0KICAgIGNoZWNrSUVFRTc1NChidWYsIHZhbHVlLCBvZmZzZXQsIDQsIDMuNDAyODIzNDY2Mzg1Mjg4NmUrMzgsIC0zLjQwMjgyMzQ2NjM4NTI4ODZlKzM4KQ0KICB9DQogIGllZWU3NTQud3JpdGUoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4sIDIzLCA0KQ0KICByZXR1cm4gb2Zmc2V0ICsgNA0KfQ0KDQpCdWZmZXIucHJvdG90eXBlLndyaXRlRmxvYXRMRSA9IGZ1bmN0aW9uIHdyaXRlRmxvYXRMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHsNCiAgcmV0dXJuIHdyaXRlRmxvYXQodGhpcywgdmFsdWUsIG9mZnNldCwgdHJ1ZSwgbm9Bc3NlcnQpDQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUud3JpdGVGbG9hdEJFID0gZnVuY3Rpb24gd3JpdGVGbG9hdEJFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkgew0KICByZXR1cm4gd3JpdGVGbG9hdCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSwgbm9Bc3NlcnQpDQp9DQoNCmZ1bmN0aW9uIHdyaXRlRG91YmxlIChidWYsIHZhbHVlLCBvZmZzZXQsIGxpdHRsZUVuZGlhbiwgbm9Bc3NlcnQpIHsNCiAgaWYgKCFub0Fzc2VydCkgew0KICAgIGNoZWNrSUVFRTc1NChidWYsIHZhbHVlLCBvZmZzZXQsIDgsIDEuNzk3NjkzMTM0ODYyMzE1N0UrMzA4LCAtMS43OTc2OTMxMzQ4NjIzMTU3RSszMDgpDQogIH0NCiAgaWVlZTc1NC53cml0ZShidWYsIHZhbHVlLCBvZmZzZXQsIGxpdHRsZUVuZGlhbiwgNTIsIDgpDQogIHJldHVybiBvZmZzZXQgKyA4DQp9DQoNCkJ1ZmZlci5wcm90b3R5cGUud3JpdGVEb3VibGVMRSA9IGZ1bmN0aW9uIHdyaXRlRG91YmxlTEUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7DQogIHJldHVybiB3cml0ZURvdWJsZSh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCB0cnVlLCBub0Fzc2VydCkNCn0NCg0KQnVmZmVyLnByb3RvdHlwZS53cml0ZURvdWJsZUJFID0gZnVuY3Rpb24gd3JpdGVEb3VibGVCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHsNCiAgcmV0dXJuIHdyaXRlRG91YmxlKHRoaXMsIHZhbHVlLCBvZmZzZXQsIGZhbHNlLCBub0Fzc2VydCkNCn0NCg0KLy8gY29weSh0YXJnZXRCdWZmZXIsIHRhcmdldFN0YXJ0PTAsIHNvdXJjZVN0YXJ0PTAsIHNvdXJjZUVuZD1idWZmZXIubGVuZ3RoKQ0KQnVmZmVyLnByb3RvdHlwZS5jb3B5ID0gZnVuY3Rpb24gY29weSAodGFyZ2V0LCB0YXJnZXRTdGFydCwgc3RhcnQsIGVuZCkgew0KICBpZiAoIXN0YXJ0KSBzdGFydCA9IDANCiAgaWYgKCFlbmQgJiYgZW5kICE9PSAwKSBlbmQgPSB0aGlzLmxlbmd0aA0KICBpZiAodGFyZ2V0U3RhcnQgPj0gdGFyZ2V0Lmxlbmd0aCkgdGFyZ2V0U3RhcnQgPSB0YXJnZXQubGVuZ3RoDQogIGlmICghdGFyZ2V0U3RhcnQpIHRhcmdldFN0YXJ0ID0gMA0KICBpZiAoZW5kID4gMCAmJiBlbmQgPCBzdGFydCkgZW5kID0gc3RhcnQNCg0KICAvLyBDb3B5IDAgYnl0ZXM7IHdlJ3JlIGRvbmUNCiAgaWYgKGVuZCA9PT0gc3RhcnQpIHJldHVybiAwDQogIGlmICh0YXJnZXQubGVuZ3RoID09PSAwIHx8IHRoaXMubGVuZ3RoID09PSAwKSByZXR1cm4gMA0KDQogIC8vIEZhdGFsIGVycm9yIGNvbmRpdGlvbnMNCiAgaWYgKHRhcmdldFN0YXJ0IDwgMCkgew0KICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCd0YXJnZXRTdGFydCBvdXQgb2YgYm91bmRzJykNCiAgfQ0KICBpZiAoc3RhcnQgPCAwIHx8IHN0YXJ0ID49IHRoaXMubGVuZ3RoKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignc291cmNlU3RhcnQgb3V0IG9mIGJvdW5kcycpDQogIGlmIChlbmQgPCAwKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignc291cmNlRW5kIG91dCBvZiBib3VuZHMnKQ0KDQogIC8vIEFyZSB3ZSBvb2I/DQogIGlmIChlbmQgPiB0aGlzLmxlbmd0aCkgZW5kID0gdGhpcy5sZW5ndGgNCiAgaWYgKHRhcmdldC5sZW5ndGggLSB0YXJnZXRTdGFydCA8IGVuZCAtIHN0YXJ0KSB7DQogICAgZW5kID0gdGFyZ2V0Lmxlbmd0aCAtIHRhcmdldFN0YXJ0ICsgc3RhcnQNCiAgfQ0KDQogIHZhciBsZW4gPSBlbmQgLSBzdGFydA0KICB2YXIgaQ0KDQogIGlmICh0aGlzID09PSB0YXJnZXQgJiYgc3RhcnQgPCB0YXJnZXRTdGFydCAmJiB0YXJnZXRTdGFydCA8IGVuZCkgew0KICAgIC8vIGRlc2NlbmRpbmcgY29weSBmcm9tIGVuZA0KICAgIGZvciAoaSA9IGxlbiAtIDE7IGkgPj0gMDsgaS0tKSB7DQogICAgICB0YXJnZXRbaSArIHRhcmdldFN0YXJ0XSA9IHRoaXNbaSArIHN0YXJ0XQ0KICAgIH0NCiAgfSBlbHNlIGlmIChsZW4gPCAxMDAwIHx8ICFCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkgew0KICAgIC8vIGFzY2VuZGluZyBjb3B5IGZyb20gc3RhcnQNCiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKyspIHsNCiAgICAgIHRhcmdldFtpICsgdGFyZ2V0U3RhcnRdID0gdGhpc1tpICsgc3RhcnRdDQogICAgfQ0KICB9IGVsc2Ugew0KICAgIFVpbnQ4QXJyYXkucHJvdG90eXBlLnNldC5jYWxsKA0KICAgICAgdGFyZ2V0LA0KICAgICAgdGhpcy5zdWJhcnJheShzdGFydCwgc3RhcnQgKyBsZW4pLA0KICAgICAgdGFyZ2V0U3RhcnQNCiAgICApDQogIH0NCg0KICByZXR1cm4gbGVuDQp9DQoNCi8vIFVzYWdlOg0KLy8gICAgYnVmZmVyLmZpbGwobnVtYmVyWywgb2Zmc2V0WywgZW5kXV0pDQovLyAgICBidWZmZXIuZmlsbChidWZmZXJbLCBvZmZzZXRbLCBlbmRdXSkNCi8vICAgIGJ1ZmZlci5maWxsKHN0cmluZ1ssIG9mZnNldFssIGVuZF1dWywgZW5jb2RpbmddKQ0KQnVmZmVyLnByb3RvdHlwZS5maWxsID0gZnVuY3Rpb24gZmlsbCAodmFsLCBzdGFydCwgZW5kLCBlbmNvZGluZykgew0KICAvLyBIYW5kbGUgc3RyaW5nIGNhc2VzOg0KICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycpIHsNCiAgICBpZiAodHlwZW9mIHN0YXJ0ID09PSAnc3RyaW5nJykgew0KICAgICAgZW5jb2RpbmcgPSBzdGFydA0KICAgICAgc3RhcnQgPSAwDQogICAgICBlbmQgPSB0aGlzLmxlbmd0aA0KICAgIH0gZWxzZSBpZiAodHlwZW9mIGVuZCA9PT0gJ3N0cmluZycpIHsNCiAgICAgIGVuY29kaW5nID0gZW5kDQogICAgICBlbmQgPSB0aGlzLmxlbmd0aA0KICAgIH0NCiAgICBpZiAodmFsLmxlbmd0aCA9PT0gMSkgew0KICAgICAgdmFyIGNvZGUgPSB2YWwuY2hhckNvZGVBdCgwKQ0KICAgICAgaWYgKGNvZGUgPCAyNTYpIHsNCiAgICAgICAgdmFsID0gY29kZQ0KICAgICAgfQ0KICAgIH0NCiAgICBpZiAoZW5jb2RpbmcgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgZW5jb2RpbmcgIT09ICdzdHJpbmcnKSB7DQogICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdlbmNvZGluZyBtdXN0IGJlIGEgc3RyaW5nJykNCiAgICB9DQogICAgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ3N0cmluZycgJiYgIUJ1ZmZlci5pc0VuY29kaW5nKGVuY29kaW5nKSkgew0KICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVW5rbm93biBlbmNvZGluZzogJyArIGVuY29kaW5nKQ0KICAgIH0NCiAgfSBlbHNlIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykgew0KICAgIHZhbCA9IHZhbCAmIDI1NQ0KICB9DQoNCiAgLy8gSW52YWxpZCByYW5nZXMgYXJlIG5vdCBzZXQgdG8gYSBkZWZhdWx0LCBzbyBjYW4gcmFuZ2UgY2hlY2sgZWFybHkuDQogIGlmIChzdGFydCA8IDAgfHwgdGhpcy5sZW5ndGggPCBzdGFydCB8fCB0aGlzLmxlbmd0aCA8IGVuZCkgew0KICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdPdXQgb2YgcmFuZ2UgaW5kZXgnKQ0KICB9DQoNCiAgaWYgKGVuZCA8PSBzdGFydCkgew0KICAgIHJldHVybiB0aGlzDQogIH0NCg0KICBzdGFydCA9IHN0YXJ0ID4+PiAwDQogIGVuZCA9IGVuZCA9PT0gdW5kZWZpbmVkID8gdGhpcy5sZW5ndGggOiBlbmQgPj4+IDANCg0KICBpZiAoIXZhbCkgdmFsID0gMA0KDQogIHZhciBpDQogIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykgew0KICAgIGZvciAoaSA9IHN0YXJ0OyBpIDwgZW5kOyBpKyspIHsNCiAgICAgIHRoaXNbaV0gPSB2YWwNCiAgICB9DQogIH0gZWxzZSB7DQogICAgdmFyIGJ5dGVzID0gQnVmZmVyLmlzQnVmZmVyKHZhbCkNCiAgICAgID8gdmFsDQogICAgICA6IHV0ZjhUb0J5dGVzKG5ldyBCdWZmZXIodmFsLCBlbmNvZGluZykudG9TdHJpbmcoKSkNCiAgICB2YXIgbGVuID0gYnl0ZXMubGVuZ3RoDQogICAgZm9yIChpID0gMDsgaSA8IGVuZCAtIHN0YXJ0OyBpKyspIHsNCiAgICAgIHRoaXNbaSArIHN0YXJ0XSA9IGJ5dGVzW2kgJSBsZW5dDQogICAgfQ0KICB9DQoNCiAgcmV0dXJuIHRoaXMNCn0NCg0KLy8gSEVMUEVSIEZVTkNUSU9OUw0KLy8gPT09PT09PT09PT09PT09PQ0KDQp2YXIgSU5WQUxJRF9CQVNFNjRfUkUgPSAvW14rXC8wLTlBLVphLXotX10vZw0KDQpmdW5jdGlvbiBiYXNlNjRjbGVhbiAoc3RyKSB7DQogIC8vIE5vZGUgc3RyaXBzIG91dCBpbnZhbGlkIGNoYXJhY3RlcnMgbGlrZSBcbiBhbmQgXHQgZnJvbSB0aGUgc3RyaW5nLCBiYXNlNjQtanMgZG9lcyBub3QNCiAgc3RyID0gc3RyaW5ndHJpbShzdHIpLnJlcGxhY2UoSU5WQUxJRF9CQVNFNjRfUkUsICcnKQ0KICAvLyBOb2RlIGNvbnZlcnRzIHN0cmluZ3Mgd2l0aCBsZW5ndGggPCAyIHRvICcnDQogIGlmIChzdHIubGVuZ3RoIDwgMikgcmV0dXJuICcnDQogIC8vIE5vZGUgYWxsb3dzIGZvciBub24tcGFkZGVkIGJhc2U2NCBzdHJpbmdzIChtaXNzaW5nIHRyYWlsaW5nID09PSksIGJhc2U2NC1qcyBkb2VzIG5vdA0KICB3aGlsZSAoc3RyLmxlbmd0aCAlIDQgIT09IDApIHsNCiAgICBzdHIgPSBzdHIgKyAnPScNCiAgfQ0KICByZXR1cm4gc3RyDQp9DQoNCmZ1bmN0aW9uIHN0cmluZ3RyaW0gKHN0cikgew0KICBpZiAoc3RyLnRyaW0pIHJldHVybiBzdHIudHJpbSgpDQogIHJldHVybiBzdHIucmVwbGFjZSgvXlxzK3xccyskL2csICcnKQ0KfQ0KDQpmdW5jdGlvbiB0b0hleCAobikgew0KICBpZiAobiA8IDE2KSByZXR1cm4gJzAnICsgbi50b1N0cmluZygxNikNCiAgcmV0dXJuIG4udG9TdHJpbmcoMTYpDQp9DQoNCmZ1bmN0aW9uIHV0ZjhUb0J5dGVzIChzdHJpbmcsIHVuaXRzKSB7DQogIHVuaXRzID0gdW5pdHMgfHwgSW5maW5pdHkNCiAgdmFyIGNvZGVQb2ludA0KICB2YXIgbGVuZ3RoID0gc3RyaW5nLmxlbmd0aA0KICB2YXIgbGVhZFN1cnJvZ2F0ZSA9IG51bGwNCiAgdmFyIGJ5dGVzID0gW10NCg0KICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7DQogICAgY29kZVBvaW50ID0gc3RyaW5nLmNoYXJDb2RlQXQoaSkNCg0KICAgIC8vIGlzIHN1cnJvZ2F0ZSBjb21wb25lbnQNCiAgICBpZiAoY29kZVBvaW50ID4gMHhEN0ZGICYmIGNvZGVQb2ludCA8IDB4RTAwMCkgew0KICAgICAgLy8gbGFzdCBjaGFyIHdhcyBhIGxlYWQNCiAgICAgIGlmICghbGVhZFN1cnJvZ2F0ZSkgew0KICAgICAgICAvLyBubyBsZWFkIHlldA0KICAgICAgICBpZiAoY29kZVBvaW50ID4gMHhEQkZGKSB7DQogICAgICAgICAgLy8gdW5leHBlY3RlZCB0cmFpbA0KICAgICAgICAgIGlmICgodW5pdHMgLT0gMykgPiAtMSkgYnl0ZXMucHVzaCgweEVGLCAweEJGLCAweEJEKQ0KICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgIH0gZWxzZSBpZiAoaSArIDEgPT09IGxlbmd0aCkgew0KICAgICAgICAgIC8vIHVucGFpcmVkIGxlYWQNCiAgICAgICAgICBpZiAoKHVuaXRzIC09IDMpID4gLTEpIGJ5dGVzLnB1c2goMHhFRiwgMHhCRiwgMHhCRCkNCiAgICAgICAgICBjb250aW51ZQ0KICAgICAgICB9DQoNCiAgICAgICAgLy8gdmFsaWQgbGVhZA0KICAgICAgICBsZWFkU3Vycm9nYXRlID0gY29kZVBvaW50DQoNCiAgICAgICAgY29udGludWUNCiAgICAgIH0NCg0KICAgICAgLy8gMiBsZWFkcyBpbiBhIHJvdw0KICAgICAgaWYgKGNvZGVQb2ludCA8IDB4REMwMCkgew0KICAgICAgICBpZiAoKHVuaXRzIC09IDMpID4gLTEpIGJ5dGVzLnB1c2goMHhFRiwgMHhCRiwgMHhCRCkNCiAgICAgICAgbGVhZFN1cnJvZ2F0ZSA9IGNvZGVQb2ludA0KICAgICAgICBjb250aW51ZQ0KICAgICAgfQ0KDQogICAgICAvLyB2YWxpZCBzdXJyb2dhdGUgcGFpcg0KICAgICAgY29kZVBvaW50ID0gKGxlYWRTdXJyb2dhdGUgLSAweEQ4MDAgPDwgMTAgfCBjb2RlUG9pbnQgLSAweERDMDApICsgMHgxMDAwMA0KICAgIH0gZWxzZSBpZiAobGVhZFN1cnJvZ2F0ZSkgew0KICAgICAgLy8gdmFsaWQgYm1wIGNoYXIsIGJ1dCBsYXN0IGNoYXIgd2FzIGEgbGVhZA0KICAgICAgaWYgKCh1bml0cyAtPSAzKSA+IC0xKSBieXRlcy5wdXNoKDB4RUYsIDB4QkYsIDB4QkQpDQogICAgfQ0KDQogICAgbGVhZFN1cnJvZ2F0ZSA9IG51bGwNCg0KICAgIC8vIGVuY29kZSB1dGY4DQogICAgaWYgKGNvZGVQb2ludCA8IDB4ODApIHsNCiAgICAgIGlmICgodW5pdHMgLT0gMSkgPCAwKSBicmVhaw0KICAgICAgYnl0ZXMucHVzaChjb2RlUG9pbnQpDQogICAgfSBlbHNlIGlmIChjb2RlUG9pbnQgPCAweDgwMCkgew0KICAgICAgaWYgKCh1bml0cyAtPSAyKSA8IDApIGJyZWFrDQogICAgICBieXRlcy5wdXNoKA0KICAgICAgICBjb2RlUG9pbnQgPj4gMHg2IHwgMHhDMCwNCiAgICAgICAgY29kZVBvaW50ICYgMHgzRiB8IDB4ODANCiAgICAgICkNCiAgICB9IGVsc2UgaWYgKGNvZGVQb2ludCA8IDB4MTAwMDApIHsNCiAgICAgIGlmICgodW5pdHMgLT0gMykgPCAwKSBicmVhaw0KICAgICAgYnl0ZXMucHVzaCgNCiAgICAgICAgY29kZVBvaW50ID4+IDB4QyB8IDB4RTAsDQogICAgICAgIGNvZGVQb2ludCA+PiAweDYgJiAweDNGIHwgMHg4MCwNCiAgICAgICAgY29kZVBvaW50ICYgMHgzRiB8IDB4ODANCiAgICAgICkNCiAgICB9IGVsc2UgaWYgKGNvZGVQb2ludCA8IDB4MTEwMDAwKSB7DQogICAgICBpZiAoKHVuaXRzIC09IDQpIDwgMCkgYnJlYWsNCiAgICAgIGJ5dGVzLnB1c2goDQogICAgICAgIGNvZGVQb2ludCA+PiAweDEyIHwgMHhGMCwNCiAgICAgICAgY29kZVBvaW50ID4+IDB4QyAmIDB4M0YgfCAweDgwLA0KICAgICAgICBjb2RlUG9pbnQgPj4gMHg2ICYgMHgzRiB8IDB4ODAsDQogICAgICAgIGNvZGVQb2ludCAmIDB4M0YgfCAweDgwDQogICAgICApDQogICAgfSBlbHNlIHsNCiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjb2RlIHBvaW50JykNCiAgICB9DQogIH0NCg0KICByZXR1cm4gYnl0ZXMNCn0NCg0KZnVuY3Rpb24gYXNjaWlUb0J5dGVzIChzdHIpIHsNCiAgdmFyIGJ5dGVBcnJheSA9IFtdDQogIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7DQogICAgLy8gTm9kZSdzIGNvZGUgc2VlbXMgdG8gYmUgZG9pbmcgdGhpcyBhbmQgbm90ICYgMHg3Ri4uDQogICAgYnl0ZUFycmF5LnB1c2goc3RyLmNoYXJDb2RlQXQoaSkgJiAweEZGKQ0KICB9DQogIHJldHVybiBieXRlQXJyYXkNCn0NCg0KZnVuY3Rpb24gdXRmMTZsZVRvQnl0ZXMgKHN0ciwgdW5pdHMpIHsNCiAgdmFyIGMsIGhpLCBsbw0KICB2YXIgYnl0ZUFycmF5ID0gW10NCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHsNCiAgICBpZiAoKHVuaXRzIC09IDIpIDwgMCkgYnJlYWsNCg0KICAgIGMgPSBzdHIuY2hhckNvZGVBdChpKQ0KICAgIGhpID0gYyA+PiA4DQogICAgbG8gPSBjICUgMjU2DQogICAgYnl0ZUFycmF5LnB1c2gobG8pDQogICAgYnl0ZUFycmF5LnB1c2goaGkpDQogIH0NCg0KICByZXR1cm4gYnl0ZUFycmF5DQp9DQoNCmZ1bmN0aW9uIGJhc2U2NFRvQnl0ZXMgKHN0cikgew0KICByZXR1cm4gYmFzZTY0LnRvQnl0ZUFycmF5KGJhc2U2NGNsZWFuKHN0cikpDQp9DQoNCmZ1bmN0aW9uIGJsaXRCdWZmZXIgKHNyYywgZHN0LCBvZmZzZXQsIGxlbmd0aCkgew0KICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7DQogICAgaWYgKChpICsgb2Zmc2V0ID49IGRzdC5sZW5ndGgpIHx8IChpID49IHNyYy5sZW5ndGgpKSBicmVhaw0KICAgIGRzdFtpICsgb2Zmc2V0XSA9IHNyY1tpXQ0KICB9DQogIHJldHVybiBpDQp9DQoNCmZ1bmN0aW9uIGlzbmFuICh2YWwpIHsNCiAgcmV0dXJuIHZhbCAhPT0gdmFsIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tc2VsZi1jb21wYXJlDQp9DQoNCn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSAidW5kZWZpbmVkIiA/IGdsb2JhbCA6IHR5cGVvZiBzZWxmICE9PSAidW5kZWZpbmVkIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSAidW5kZWZpbmVkIiA/IHdpbmRvdyA6IHt9KQ0KfSx7ImJhc2U2NC1qcyI6MzMsImllZWU3NTQiOjUzNSwiaXNhcnJheSI6NTM5fV0sOTQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIFRyYW5zZm9ybSA9IHJlcXVpcmUoJ3N0cmVhbScpLlRyYW5zZm9ybQ0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKQ0KdmFyIFN0cmluZ0RlY29kZXIgPSByZXF1aXJlKCdzdHJpbmdfZGVjb2RlcicpLlN0cmluZ0RlY29kZXINCm1vZHVsZS5leHBvcnRzID0gQ2lwaGVyQmFzZQ0KaW5oZXJpdHMoQ2lwaGVyQmFzZSwgVHJhbnNmb3JtKQ0KZnVuY3Rpb24gQ2lwaGVyQmFzZSAoaGFzaE1vZGUpIHsNCiAgVHJhbnNmb3JtLmNhbGwodGhpcykNCiAgdGhpcy5oYXNoTW9kZSA9IHR5cGVvZiBoYXNoTW9kZSA9PT0gJ3N0cmluZycNCiAgaWYgKHRoaXMuaGFzaE1vZGUpIHsNCiAgICB0aGlzW2hhc2hNb2RlXSA9IHRoaXMuX2ZpbmFsT3JEaWdlc3QNCiAgfSBlbHNlIHsNCiAgICB0aGlzLmZpbmFsID0gdGhpcy5fZmluYWxPckRpZ2VzdA0KICB9DQogIHRoaXMuX2RlY29kZXIgPSBudWxsDQogIHRoaXMuX2VuY29kaW5nID0gbnVsbA0KfQ0KQ2lwaGVyQmFzZS5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKGRhdGEsIGlucHV0RW5jLCBvdXRwdXRFbmMpIHsNCiAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykgew0KICAgIGRhdGEgPSBuZXcgQnVmZmVyKGRhdGEsIGlucHV0RW5jKQ0KICB9DQogIHZhciBvdXREYXRhID0gdGhpcy5fdXBkYXRlKGRhdGEpDQogIGlmICh0aGlzLmhhc2hNb2RlKSB7DQogICAgcmV0dXJuIHRoaXMNCiAgfQ0KICBpZiAob3V0cHV0RW5jKSB7DQogICAgb3V0RGF0YSA9IHRoaXMuX3RvU3RyaW5nKG91dERhdGEsIG91dHB1dEVuYykNCiAgfQ0KICByZXR1cm4gb3V0RGF0YQ0KfQ0KDQpDaXBoZXJCYXNlLnByb3RvdHlwZS5zZXRBdXRvUGFkZGluZyA9IGZ1bmN0aW9uICgpIHt9DQoNCkNpcGhlckJhc2UucHJvdG90eXBlLmdldEF1dGhUYWcgPSBmdW5jdGlvbiAoKSB7DQogIHRocm93IG5ldyBFcnJvcigndHJ5aW5nIHRvIGdldCBhdXRoIHRhZyBpbiB1bnN1cHBvcnRlZCBzdGF0ZScpDQp9DQoNCkNpcGhlckJhc2UucHJvdG90eXBlLnNldEF1dGhUYWcgPSBmdW5jdGlvbiAoKSB7DQogIHRocm93IG5ldyBFcnJvcigndHJ5aW5nIHRvIHNldCBhdXRoIHRhZyBpbiB1bnN1cHBvcnRlZCBzdGF0ZScpDQp9DQoNCkNpcGhlckJhc2UucHJvdG90eXBlLnNldEFBRCA9IGZ1bmN0aW9uICgpIHsNCiAgdGhyb3cgbmV3IEVycm9yKCd0cnlpbmcgdG8gc2V0IGFhZCBpbiB1bnN1cHBvcnRlZCBzdGF0ZScpDQp9DQoNCkNpcGhlckJhc2UucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbiAoZGF0YSwgXywgbmV4dCkgew0KICB2YXIgZXJyDQogIHRyeSB7DQogICAgaWYgKHRoaXMuaGFzaE1vZGUpIHsNCiAgICAgIHRoaXMuX3VwZGF0ZShkYXRhKQ0KICAgIH0gZWxzZSB7DQogICAgICB0aGlzLnB1c2godGhpcy5fdXBkYXRlKGRhdGEpKQ0KICAgIH0NCiAgfSBjYXRjaCAoZSkgew0KICAgIGVyciA9IGUNCiAgfSBmaW5hbGx5IHsNCiAgICBuZXh0KGVycikNCiAgfQ0KfQ0KQ2lwaGVyQmFzZS5wcm90b3R5cGUuX2ZsdXNoID0gZnVuY3Rpb24gKGRvbmUpIHsNCiAgdmFyIGVycg0KICB0cnkgew0KICAgIHRoaXMucHVzaCh0aGlzLl9maW5hbCgpKQ0KICB9IGNhdGNoIChlKSB7DQogICAgZXJyID0gZQ0KICB9IGZpbmFsbHkgew0KICAgIGRvbmUoZXJyKQ0KICB9DQp9DQpDaXBoZXJCYXNlLnByb3RvdHlwZS5fZmluYWxPckRpZ2VzdCA9IGZ1bmN0aW9uIChvdXRwdXRFbmMpIHsNCiAgdmFyIG91dERhdGEgPSB0aGlzLl9maW5hbCgpIHx8IG5ldyBCdWZmZXIoJycpDQogIGlmIChvdXRwdXRFbmMpIHsNCiAgICBvdXREYXRhID0gdGhpcy5fdG9TdHJpbmcob3V0RGF0YSwgb3V0cHV0RW5jLCB0cnVlKQ0KICB9DQogIHJldHVybiBvdXREYXRhDQp9DQoNCkNpcGhlckJhc2UucHJvdG90eXBlLl90b1N0cmluZyA9IGZ1bmN0aW9uICh2YWx1ZSwgZW5jLCBmaW5hbCkgew0KICBpZiAoIXRoaXMuX2RlY29kZXIpIHsNCiAgICB0aGlzLl9kZWNvZGVyID0gbmV3IFN0cmluZ0RlY29kZXIoZW5jKQ0KICAgIHRoaXMuX2VuY29kaW5nID0gZW5jDQogIH0NCiAgaWYgKHRoaXMuX2VuY29kaW5nICE9PSBlbmMpIHsNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NhblwndCBzd2l0Y2ggZW5jb2RpbmdzJykNCiAgfQ0KICB2YXIgb3V0ID0gdGhpcy5fZGVjb2Rlci53cml0ZSh2YWx1ZSkNCiAgaWYgKGZpbmFsKSB7DQogICAgb3V0ICs9IHRoaXMuX2RlY29kZXIuZW5kKCkNCiAgfQ0KICByZXR1cm4gb3V0DQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiYnVmZmVyIjo5MywiaW5oZXJpdHMiOjUzNywic3RyZWFtIjo1ODAsInN0cmluZ19kZWNvZGVyIjo1ODF9XSw5NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2NvcmUucmVnZXhwLmVzY2FwZScpOw0KbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuUmVnRXhwLmVzY2FwZTsNCn0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjoyMTIsIi4uLy4uL21vZHVsZXMvY29yZS5yZWdleHAuZXNjYXBlIjozMDl9XSw5NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgY29yZSAgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykNCiAgLCAkSlNPTiA9IGNvcmUuSlNPTiB8fCAoY29yZS5KU09OID0ge3N0cmluZ2lmeTogSlNPTi5zdHJpbmdpZnl9KTsNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3RyaW5naWZ5KGl0KXsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFycw0KICByZXR1cm4gJEpTT04uc3RyaW5naWZ5LmFwcGx5KCRKU09OLCBhcmd1bWVudHMpOw0KfTsNCn0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjoxMTN9XSw5NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuYXNzaWduJyk7DQptb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3QuYXNzaWduOw0KfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjExMywiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmFzc2lnbiI6MTc5fV0sOTg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZScpOw0KdmFyICRPYmplY3QgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0Ow0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGUoUCwgRCl7DQogIHJldHVybiAkT2JqZWN0LmNyZWF0ZShQLCBEKTsNCn07DQp9LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MTEzLCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlIjoxODB9XSw5OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5Jyk7DQp2YXIgJE9iamVjdCA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3Q7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KGl0LCBrZXksIGRlc2Mpew0KICByZXR1cm4gJE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpdCwga2V5LCBkZXNjKTsNCn07DQp9LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MTEzLCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5IjoxODF9XSwxMDA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YnKTsNCm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdC5nZXRQcm90b3R5cGVPZjsNCn0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjoxMTMsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mIjoxODJ9XSwxMDE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMnKTsNCm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdC5rZXlzOw0KfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjExMywiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMiOjE4M31dLDEwMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZicpOw0KbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LnNldFByb3RvdHlwZU9mOw0KfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjExMywiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YiOjE4NH1dLDEwMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7DQpyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTsNCnJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpOw0KcmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucHJvbWlzZScpOw0KbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9tb2R1bGVzL19jb3JlJykuUHJvbWlzZTsNCn0seyIuLi9tb2R1bGVzL19jb3JlIjoxMTMsIi4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciOjE4NSwiLi4vbW9kdWxlcy9lczYucHJvbWlzZSI6MTg2LCIuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiOjE4NywiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjoxOTF9XSwxMDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYuc3ltYm9sJyk7DQpyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7DQpyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3InKTsNCnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlJyk7DQptb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5TeW1ib2w7DQp9LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MTEzLCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIjoxODUsIi4uLy4uL21vZHVsZXMvZXM2LnN5bWJvbCI6MTg4LCIuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IiOjE4OSwiLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLm9ic2VydmFibGUiOjE5MH1dLDEwNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTsNCnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpOw0KbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL193a3MtZXh0JykuZignaXRlcmF0b3InKTsNCn0seyIuLi8uLi9tb2R1bGVzL193a3MtZXh0IjoxNzUsIi4uLy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciI6MTg3LCIuLi8uLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOjE5MX1dLDEwNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXsNCiAgaWYodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSBmdW5jdGlvbiEnKTsNCiAgcmV0dXJuIGl0Ow0KfTsNCn0se31dLDEwNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCl7IC8qIGVtcHR5ICovIH07DQp9LHt9XSwxMDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCwgQ29uc3RydWN0b3IsIG5hbWUsIGZvcmJpZGRlbkZpZWxkKXsNCiAgaWYoIShpdCBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSB8fCAoZm9yYmlkZGVuRmllbGQgIT09IHVuZGVmaW5lZCAmJiBmb3JiaWRkZW5GaWVsZCBpbiBpdCkpew0KICAgIHRocm93IFR5cGVFcnJvcihuYW1lICsgJzogaW5jb3JyZWN0IGludm9jYXRpb24hJyk7DQogIH0gcmV0dXJuIGl0Ow0KfTsNCn0se31dLDEwOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTsNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpew0KICBpZighaXNPYmplY3QoaXQpKXRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGFuIG9iamVjdCEnKTsNCiAgcmV0dXJuIGl0Ow0KfTsNCn0seyIuL19pcy1vYmplY3QiOjEzMn1dLDExMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBmYWxzZSAtPiBBcnJheSNpbmRleE9mDQovLyB0cnVlICAtPiBBcnJheSNpbmNsdWRlcw0KdmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKQ0KICAsIHRvTGVuZ3RoICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpDQogICwgdG9JbmRleCAgID0gcmVxdWlyZSgnLi9fdG8taW5kZXgnKTsNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oSVNfSU5DTFVERVMpew0KICByZXR1cm4gZnVuY3Rpb24oJHRoaXMsIGVsLCBmcm9tSW5kZXgpew0KICAgIHZhciBPICAgICAgPSB0b0lPYmplY3QoJHRoaXMpDQogICAgICAsIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKQ0KICAgICAgLCBpbmRleCAgPSB0b0luZGV4KGZyb21JbmRleCwgbGVuZ3RoKQ0KICAgICAgLCB2YWx1ZTsNCiAgICAvLyBBcnJheSNpbmNsdWRlcyB1c2VzIFNhbWVWYWx1ZVplcm8gZXF1YWxpdHkgYWxnb3JpdGhtDQogICAgaWYoSVNfSU5DTFVERVMgJiYgZWwgIT0gZWwpd2hpbGUobGVuZ3RoID4gaW5kZXgpew0KICAgICAgdmFsdWUgPSBPW2luZGV4KytdOw0KICAgICAgaWYodmFsdWUgIT0gdmFsdWUpcmV0dXJuIHRydWU7DQogICAgLy8gQXJyYXkjdG9JbmRleCBpZ25vcmVzIGhvbGVzLCBBcnJheSNpbmNsdWRlcyAtIG5vdA0KICAgIH0gZWxzZSBmb3IoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKWlmKElTX0lOQ0xVREVTIHx8IGluZGV4IGluIE8pew0KICAgICAgaWYoT1tpbmRleF0gPT09IGVsKXJldHVybiBJU19JTkNMVURFUyB8fCBpbmRleCB8fCAwOw0KICAgIH0gcmV0dXJuICFJU19JTkNMVURFUyAmJiAtMTsNCiAgfTsNCn07DQp9LHsiLi9fdG8taW5kZXgiOjE2NywiLi9fdG8taW9iamVjdCI6MTY5LCIuL190by1sZW5ndGgiOjE3MH1dLDExMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBnZXR0aW5nIHRhZyBmcm9tIDE5LjEuMy42IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcoKQ0KdmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpDQogICwgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJykNCiAgLy8gRVMzIHdyb25nIGhlcmUNCiAgLCBBUkcgPSBjb2YoZnVuY3Rpb24oKXsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJzsNCg0KLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3INCnZhciB0cnlHZXQgPSBmdW5jdGlvbihpdCwga2V5KXsNCiAgdHJ5IHsNCiAgICByZXR1cm4gaXRba2V5XTsNCiAgfSBjYXRjaChlKXsgLyogZW1wdHkgKi8gfQ0KfTsNCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7DQogIHZhciBPLCBULCBCOw0KICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCcNCiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2UNCiAgICA6IHR5cGVvZiAoVCA9IHRyeUdldChPID0gT2JqZWN0KGl0KSwgVEFHKSkgPT0gJ3N0cmluZycgPyBUDQogICAgLy8gYnVpbHRpblRhZyBjYXNlDQogICAgOiBBUkcgPyBjb2YoTykNCiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrDQogICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7DQp9Ow0KfSx7Ii4vX2NvZiI6MTEyLCIuL193a3MiOjE3Nn1dLDExMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZzsNCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7DQogIHJldHVybiB0b1N0cmluZy5jYWxsKGl0KS5zbGljZSg4LCAtMSk7DQp9Ow0KfSx7fV0sMTEzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7dmVyc2lvbjogJzIuNC4wJ307DQppZih0eXBlb2YgX19lID09ICdudW1iZXInKV9fZSA9IGNvcmU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWYNCn0se31dLDExNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBvcHRpb25hbCAvIHNpbXBsZSBjb250ZXh0IGJpbmRpbmcNCnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGZuLCB0aGF0LCBsZW5ndGgpew0KICBhRnVuY3Rpb24oZm4pOw0KICBpZih0aGF0ID09PSB1bmRlZmluZWQpcmV0dXJuIGZuOw0KICBzd2l0Y2gobGVuZ3RoKXsNCiAgICBjYXNlIDE6IHJldHVybiBmdW5jdGlvbihhKXsNCiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpOw0KICAgIH07DQogICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24oYSwgYil7DQogICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiKTsNCiAgICB9Ow0KICAgIGNhc2UgMzogcmV0dXJuIGZ1bmN0aW9uKGEsIGIsIGMpew0KICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYiwgYyk7DQogICAgfTsNCiAgfQ0KICByZXR1cm4gZnVuY3Rpb24oLyogLi4uYXJncyAqLyl7DQogICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7DQogIH07DQp9Ow0KfSx7Ii4vX2EtZnVuY3Rpb24iOjEwNn1dLDExNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyA3LjIuMSBSZXF1aXJlT2JqZWN0Q29lcmNpYmxlKGFyZ3VtZW50KQ0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7DQogIGlmKGl0ID09IHVuZGVmaW5lZCl0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNhbGwgbWV0aG9kIG9uICAiICsgaXQpOw0KICByZXR1cm4gaXQ7DQp9Ow0KfSx7fV0sMTE2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIFRoYW5rJ3MgSUU4IGZvciBoaXMgZnVubnkgZGVmaW5lUHJvcGVydHkNCm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXsNCiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ2EnLCB7Z2V0OiBmdW5jdGlvbigpeyByZXR1cm4gNzsgfX0pLmEgIT0gNzsNCn0pOw0KfSx7Ii4vX2ZhaWxzIjoxMjF9XSwxMTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JykNCiAgLCBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50DQogIC8vIGluIG9sZCBJRSB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0Jw0KICAsIGlzID0gaXNPYmplY3QoZG9jdW1lbnQpICYmIGlzT2JqZWN0KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpOw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7DQogIHJldHVybiBpcyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307DQp9Ow0KfSx7Ii4vX2dsb2JhbCI6MTIzLCIuL19pcy1vYmplY3QiOjEzMn1dLDExODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBJRSA4LSBkb24ndCBlbnVtIGJ1ZyBrZXlzDQptb2R1bGUuZXhwb3J0cyA9ICgNCiAgJ2NvbnN0cnVjdG9yLGhhc093blByb3BlcnR5LGlzUHJvdG90eXBlT2YscHJvcGVydHlJc0VudW1lcmFibGUsdG9Mb2NhbGVTdHJpbmcsdG9TdHJpbmcsdmFsdWVPZicNCikuc3BsaXQoJywnKTsNCn0se31dLDExOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBhbGwgZW51bWVyYWJsZSBvYmplY3Qga2V5cywgaW5jbHVkZXMgc3ltYm9scw0KdmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpDQogICwgZ09QUyAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJykNCiAgLCBwSUUgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpOw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7DQogIHZhciByZXN1bHQgICAgID0gZ2V0S2V5cyhpdCkNCiAgICAsIGdldFN5bWJvbHMgPSBnT1BTLmY7DQogIGlmKGdldFN5bWJvbHMpew0KICAgIHZhciBzeW1ib2xzID0gZ2V0U3ltYm9scyhpdCkNCiAgICAgICwgaXNFbnVtICA9IHBJRS5mDQogICAgICAsIGkgICAgICAgPSAwDQogICAgICAsIGtleTsNCiAgICB3aGlsZShzeW1ib2xzLmxlbmd0aCA+IGkpaWYoaXNFbnVtLmNhbGwoaXQsIGtleSA9IHN5bWJvbHNbaSsrXSkpcmVzdWx0LnB1c2goa2V5KTsNCiAgfSByZXR1cm4gcmVzdWx0Ow0KfTsNCn0seyIuL19vYmplY3QtZ29wcyI6MTUwLCIuL19vYmplY3Qta2V5cyI6MTUzLCIuL19vYmplY3QtcGllIjoxNTR9XSwxMjA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGdsb2JhbCAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpDQogICwgY29yZSAgICAgID0gcmVxdWlyZSgnLi9fY29yZScpDQogICwgY3R4ICAgICAgID0gcmVxdWlyZSgnLi9fY3R4JykNCiAgLCBoaWRlICAgICAgPSByZXF1aXJlKCcuL19oaWRlJykNCiAgLCBQUk9UT1RZUEUgPSAncHJvdG90eXBlJzsNCg0KdmFyICRleHBvcnQgPSBmdW5jdGlvbih0eXBlLCBuYW1lLCBzb3VyY2Upew0KICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRg0KICAgICwgSVNfR0xPQkFMID0gdHlwZSAmICRleHBvcnQuRw0KICAgICwgSVNfU1RBVElDID0gdHlwZSAmICRleHBvcnQuUw0KICAgICwgSVNfUFJPVE8gID0gdHlwZSAmICRleHBvcnQuUA0KICAgICwgSVNfQklORCAgID0gdHlwZSAmICRleHBvcnQuQg0KICAgICwgSVNfV1JBUCAgID0gdHlwZSAmICRleHBvcnQuVw0KICAgICwgZXhwb3J0cyAgID0gSVNfR0xPQkFMID8gY29yZSA6IGNvcmVbbmFtZV0gfHwgKGNvcmVbbmFtZV0gPSB7fSkNCiAgICAsIGV4cFByb3RvICA9IGV4cG9ydHNbUFJPVE9UWVBFXQ0KICAgICwgdGFyZ2V0ICAgID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIDogKGdsb2JhbFtuYW1lXSB8fCB7fSlbUFJPVE9UWVBFXQ0KICAgICwga2V5LCBvd24sIG91dDsNCiAgaWYoSVNfR0xPQkFMKXNvdXJjZSA9IG5hbWU7DQogIGZvcihrZXkgaW4gc291cmNlKXsNCiAgICAvLyBjb250YWlucyBpbiBuYXRpdmUNCiAgICBvd24gPSAhSVNfRk9SQ0VEICYmIHRhcmdldCAmJiB0YXJnZXRba2V5XSAhPT0gdW5kZWZpbmVkOw0KICAgIGlmKG93biAmJiBrZXkgaW4gZXhwb3J0cyljb250aW51ZTsNCiAgICAvLyBleHBvcnQgbmF0aXZlIG9yIHBhc3NlZA0KICAgIG91dCA9IG93biA/IHRhcmdldFtrZXldIDogc291cmNlW2tleV07DQogICAgLy8gcHJldmVudCBnbG9iYWwgcG9sbHV0aW9uIGZvciBuYW1lc3BhY2VzDQogICAgZXhwb3J0c1trZXldID0gSVNfR0xPQkFMICYmIHR5cGVvZiB0YXJnZXRba2V5XSAhPSAnZnVuY3Rpb24nID8gc291cmNlW2tleV0NCiAgICAvLyBiaW5kIHRpbWVycyB0byBnbG9iYWwgZm9yIGNhbGwgZnJvbSBleHBvcnQgY29udGV4dA0KICAgIDogSVNfQklORCAmJiBvd24gPyBjdHgob3V0LCBnbG9iYWwpDQogICAgLy8gd3JhcCBnbG9iYWwgY29uc3RydWN0b3JzIGZvciBwcmV2ZW50IGNoYW5nZSB0aGVtIGluIGxpYnJhcnkNCiAgICA6IElTX1dSQVAgJiYgdGFyZ2V0W2tleV0gPT0gb3V0ID8gKGZ1bmN0aW9uKEMpew0KICAgICAgdmFyIEYgPSBmdW5jdGlvbihhLCBiLCBjKXsNCiAgICAgICAgaWYodGhpcyBpbnN0YW5jZW9mIEMpew0KICAgICAgICAgIHN3aXRjaChhcmd1bWVudHMubGVuZ3RoKXsNCiAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIG5ldyBDOw0KICAgICAgICAgICAgY2FzZSAxOiByZXR1cm4gbmV3IEMoYSk7DQogICAgICAgICAgICBjYXNlIDI6IHJldHVybiBuZXcgQyhhLCBiKTsNCiAgICAgICAgICB9IHJldHVybiBuZXcgQyhhLCBiLCBjKTsNCiAgICAgICAgfSByZXR1cm4gQy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOw0KICAgICAgfTsNCiAgICAgIEZbUFJPVE9UWVBFXSA9IENbUFJPVE9UWVBFXTsNCiAgICAgIHJldHVybiBGOw0KICAgIC8vIG1ha2Ugc3RhdGljIHZlcnNpb25zIGZvciBwcm90b3R5cGUgbWV0aG9kcw0KICAgIH0pKG91dCkgOiBJU19QUk9UTyAmJiB0eXBlb2Ygb3V0ID09ICdmdW5jdGlvbicgPyBjdHgoRnVuY3Rpb24uY2FsbCwgb3V0KSA6IG91dDsNCiAgICAvLyBleHBvcnQgcHJvdG8gbWV0aG9kcyB0byBjb3JlLiVDT05TVFJVQ1RPUiUubWV0aG9kcy4lTkFNRSUNCiAgICBpZihJU19QUk9UTyl7DQogICAgICAoZXhwb3J0cy52aXJ0dWFsIHx8IChleHBvcnRzLnZpcnR1YWwgPSB7fSkpW2tleV0gPSBvdXQ7DQogICAgICAvLyBleHBvcnQgcHJvdG8gbWV0aG9kcyB0byBjb3JlLiVDT05TVFJVQ1RPUiUucHJvdG90eXBlLiVOQU1FJQ0KICAgICAgaWYodHlwZSAmICRleHBvcnQuUiAmJiBleHBQcm90byAmJiAhZXhwUHJvdG9ba2V5XSloaWRlKGV4cFByb3RvLCBrZXksIG91dCk7DQogICAgfQ0KICB9DQp9Ow0KLy8gdHlwZSBiaXRtYXANCiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkDQokZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbA0KJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWMNCiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG8NCiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZA0KJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwDQokZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmUNCiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YCANCm1vZHVsZS5leHBvcnRzID0gJGV4cG9ydDsNCn0seyIuL19jb3JlIjoxMTMsIi4vX2N0eCI6MTE0LCIuL19nbG9iYWwiOjEyMywiLi9faGlkZSI6MTI1fV0sMTIxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZXhlYyl7DQogIHRyeSB7DQogICAgcmV0dXJuICEhZXhlYygpOw0KICB9IGNhdGNoKGUpew0KICAgIHJldHVybiB0cnVlOw0KICB9DQp9Ow0KfSx7fV0sMTIyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBjdHggICAgICAgICA9IHJlcXVpcmUoJy4vX2N0eCcpDQogICwgY2FsbCAgICAgICAgPSByZXF1aXJlKCcuL19pdGVyLWNhbGwnKQ0KICAsIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpDQogICwgYW5PYmplY3QgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKQ0KICAsIHRvTGVuZ3RoICAgID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJykNCiAgLCBnZXRJdGVyRm4gICA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJykNCiAgLCBCUkVBSyAgICAgICA9IHt9DQogICwgUkVUVVJOICAgICAgPSB7fTsNCnZhciBleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdGVyYWJsZSwgZW50cmllcywgZm4sIHRoYXQsIElURVJBVE9SKXsNCiAgdmFyIGl0ZXJGbiA9IElURVJBVE9SID8gZnVuY3Rpb24oKXsgcmV0dXJuIGl0ZXJhYmxlOyB9IDogZ2V0SXRlckZuKGl0ZXJhYmxlKQ0KICAgICwgZiAgICAgID0gY3R4KGZuLCB0aGF0LCBlbnRyaWVzID8gMiA6IDEpDQogICAgLCBpbmRleCAgPSAwDQogICAgLCBsZW5ndGgsIHN0ZXAsIGl0ZXJhdG9yLCByZXN1bHQ7DQogIGlmKHR5cGVvZiBpdGVyRm4gIT0gJ2Z1bmN0aW9uJyl0aHJvdyBUeXBlRXJyb3IoaXRlcmFibGUgKyAnIGlzIG5vdCBpdGVyYWJsZSEnKTsNCiAgLy8gZmFzdCBjYXNlIGZvciBhcnJheXMgd2l0aCBkZWZhdWx0IGl0ZXJhdG9yDQogIGlmKGlzQXJyYXlJdGVyKGl0ZXJGbikpZm9yKGxlbmd0aCA9IHRvTGVuZ3RoKGl0ZXJhYmxlLmxlbmd0aCk7IGxlbmd0aCA+IGluZGV4OyBpbmRleCsrKXsNCiAgICByZXN1bHQgPSBlbnRyaWVzID8gZihhbk9iamVjdChzdGVwID0gaXRlcmFibGVbaW5kZXhdKVswXSwgc3RlcFsxXSkgOiBmKGl0ZXJhYmxlW2luZGV4XSk7DQogICAgaWYocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTilyZXR1cm4gcmVzdWx0Ow0KICB9IGVsc2UgZm9yKGl0ZXJhdG9yID0gaXRlckZuLmNhbGwoaXRlcmFibGUpOyAhKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7ICl7DQogICAgcmVzdWx0ID0gY2FsbChpdGVyYXRvciwgZiwgc3RlcC52YWx1ZSwgZW50cmllcyk7DQogICAgaWYocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTilyZXR1cm4gcmVzdWx0Ow0KICB9DQp9Ow0KZXhwb3J0cy5CUkVBSyAgPSBCUkVBSzsNCmV4cG9ydHMuUkVUVVJOID0gUkVUVVJOOw0KfSx7Ii4vX2FuLW9iamVjdCI6MTA5LCIuL19jdHgiOjExNCwiLi9faXMtYXJyYXktaXRlciI6MTMwLCIuL19pdGVyLWNhbGwiOjEzMywiLi9fdG8tbGVuZ3RoIjoxNzAsIi4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kIjoxNzd9XSwxMjM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjgNCnZhciBnbG9iYWwgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Lk1hdGggPT0gTWF0aA0KICA/IHdpbmRvdyA6IHR5cGVvZiBzZWxmICE9ICd1bmRlZmluZWQnICYmIHNlbGYuTWF0aCA9PSBNYXRoID8gc2VsZiA6IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7DQppZih0eXBlb2YgX19nID09ICdudW1iZXInKV9fZyA9IGdsb2JhbDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZg0KfSx7fV0sMTI0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBoYXNPd25Qcm9wZXJ0eSA9IHt9Lmhhc093blByb3BlcnR5Ow0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCwga2V5KXsNCiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoaXQsIGtleSk7DQp9Ow0KfSx7fV0sMTI1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBkUCAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykNCiAgLCBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpOw0KbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZnVuY3Rpb24ob2JqZWN0LCBrZXksIHZhbHVlKXsNCiAgcmV0dXJuIGRQLmYob2JqZWN0LCBrZXksIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTsNCn0gOiBmdW5jdGlvbihvYmplY3QsIGtleSwgdmFsdWUpew0KICBvYmplY3Rba2V5XSA9IHZhbHVlOw0KICByZXR1cm4gb2JqZWN0Ow0KfTsNCn0seyIuL19kZXNjcmlwdG9ycyI6MTE2LCIuL19vYmplY3QtZHAiOjE0NSwiLi9fcHJvcGVydHktZGVzYyI6MTU2fV0sMTI2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Ow0KfSx7Ii4vX2dsb2JhbCI6MTIzfV0sMTI3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXsNCiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2RpdicpLCAnYScsIHtnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiA3OyB9fSkuYSAhPSA3Ow0KfSk7DQp9LHsiLi9fZGVzY3JpcHRvcnMiOjExNiwiLi9fZG9tLWNyZWF0ZSI6MTE3LCIuL19mYWlscyI6MTIxfV0sMTI4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIGZhc3QgYXBwbHksIGh0dHA6Ly9qc3BlcmYubG5raXQuY29tL2Zhc3QtYXBwbHkvNQ0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihmbiwgYXJncywgdGhhdCl7DQogIHZhciB1biA9IHRoYXQgPT09IHVuZGVmaW5lZDsNCiAgc3dpdGNoKGFyZ3MubGVuZ3RoKXsNCiAgICBjYXNlIDA6IHJldHVybiB1biA/IGZuKCkNCiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCk7DQogICAgY2FzZSAxOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdKQ0KICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdKTsNCiAgICBjYXNlIDI6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0pDQogICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0pOw0KICAgIGNhc2UgMzogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSkNCiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7DQogICAgY2FzZSA0OiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKQ0KICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKTsNCiAgfSByZXR1cm4gICAgICAgICAgICAgIGZuLmFwcGx5KHRoYXQsIGFyZ3MpOw0KfTsNCn0se31dLDEyOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIGFuZCBub24tZW51bWVyYWJsZSBvbGQgVjggc3RyaW5ncw0KdmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpOw0KbW9kdWxlLmV4cG9ydHMgPSBPYmplY3QoJ3onKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKSA/IE9iamVjdCA6IGZ1bmN0aW9uKGl0KXsNCiAgcmV0dXJuIGNvZihpdCkgPT0gJ1N0cmluZycgPyBpdC5zcGxpdCgnJykgOiBPYmplY3QoaXQpOw0KfTsNCn0seyIuL19jb2YiOjExMn1dLDEzMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBjaGVjayBvbiBkZWZhdWx0IEFycmF5IGl0ZXJhdG9yDQp2YXIgSXRlcmF0b3JzICA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpDQogICwgSVRFUkFUT1IgICA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpDQogICwgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTsNCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7DQogIHJldHVybiBpdCAhPT0gdW5kZWZpbmVkICYmIChJdGVyYXRvcnMuQXJyYXkgPT09IGl0IHx8IEFycmF5UHJvdG9bSVRFUkFUT1JdID09PSBpdCk7DQp9Ow0KfSx7Ii4vX2l0ZXJhdG9ycyI6MTM4LCIuL193a3MiOjE3Nn1dLDEzMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyA3LjIuMiBJc0FycmF5KGFyZ3VtZW50KQ0KdmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpOw0KbW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIGlzQXJyYXkoYXJnKXsNCiAgcmV0dXJuIGNvZihhcmcpID09ICdBcnJheSc7DQp9Ow0KfSx7Ii4vX2NvZiI6MTEyfV0sMTMyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpew0KICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nOw0KfTsNCn0se31dLDEzMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBjYWxsIHNvbWV0aGluZyBvbiBpdGVyYXRvciBzdGVwIHdpdGggc2FmZSBjbG9zaW5nIG9uIGVycm9yDQp2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTsNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXRlcmF0b3IsIGZuLCB2YWx1ZSwgZW50cmllcyl7DQogIHRyeSB7DQogICAgcmV0dXJuIGVudHJpZXMgPyBmbihhbk9iamVjdCh2YWx1ZSlbMF0sIHZhbHVlWzFdKSA6IGZuKHZhbHVlKTsNCiAgLy8gNy40LjYgSXRlcmF0b3JDbG9zZShpdGVyYXRvciwgY29tcGxldGlvbikNCiAgfSBjYXRjaChlKXsNCiAgICB2YXIgcmV0ID0gaXRlcmF0b3JbJ3JldHVybiddOw0KICAgIGlmKHJldCAhPT0gdW5kZWZpbmVkKWFuT2JqZWN0KHJldC5jYWxsKGl0ZXJhdG9yKSk7DQogICAgdGhyb3cgZTsNCiAgfQ0KfTsNCn0seyIuL19hbi1vYmplY3QiOjEwOX1dLDEzNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgY3JlYXRlICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJykNCiAgLCBkZXNjcmlwdG9yICAgICA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKQ0KICAsIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKQ0KICAsIEl0ZXJhdG9yUHJvdG90eXBlID0ge307DQoNCi8vIDI1LjEuMi4xLjEgJUl0ZXJhdG9yUHJvdG90eXBlJVtAQGl0ZXJhdG9yXSgpDQpyZXF1aXJlKCcuL19oaWRlJykoSXRlcmF0b3JQcm90b3R5cGUsIHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpLCBmdW5jdGlvbigpeyByZXR1cm4gdGhpczsgfSk7DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpew0KICBDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBjcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUsIHtuZXh0OiBkZXNjcmlwdG9yKDEsIG5leHQpfSk7DQogIHNldFRvU3RyaW5nVGFnKENvbnN0cnVjdG9yLCBOQU1FICsgJyBJdGVyYXRvcicpOw0KfTsNCn0seyIuL19oaWRlIjoxMjUsIi4vX29iamVjdC1jcmVhdGUiOjE0NCwiLi9fcHJvcGVydHktZGVzYyI6MTU2LCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6MTYxLCIuL193a3MiOjE3Nn1dLDEzNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgTElCUkFSWSAgICAgICAgPSByZXF1aXJlKCcuL19saWJyYXJ5JykNCiAgLCAkZXhwb3J0ICAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgcmVkZWZpbmUgICAgICAgPSByZXF1aXJlKCcuL19yZWRlZmluZScpDQogICwgaGlkZSAgICAgICAgICAgPSByZXF1aXJlKCcuL19oaWRlJykNCiAgLCBoYXMgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpDQogICwgSXRlcmF0b3JzICAgICAgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKQ0KICAsICRpdGVyQ3JlYXRlICAgID0gcmVxdWlyZSgnLi9faXRlci1jcmVhdGUnKQ0KICAsIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKQ0KICAsIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpDQogICwgSVRFUkFUT1IgICAgICAgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKQ0KICAsIEJVR0dZICAgICAgICAgID0gIShbXS5rZXlzICYmICduZXh0JyBpbiBbXS5rZXlzKCkpIC8vIFNhZmFyaSBoYXMgYnVnZ3kgaXRlcmF0b3JzIHcvbyBgbmV4dGANCiAgLCBGRl9JVEVSQVRPUiAgICA9ICdAQGl0ZXJhdG9yJw0KICAsIEtFWVMgICAgICAgICAgID0gJ2tleXMnDQogICwgVkFMVUVTICAgICAgICAgPSAndmFsdWVzJzsNCg0KdmFyIHJldHVyblRoaXMgPSBmdW5jdGlvbigpeyByZXR1cm4gdGhpczsgfTsNCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihCYXNlLCBOQU1FLCBDb25zdHJ1Y3RvciwgbmV4dCwgREVGQVVMVCwgSVNfU0VULCBGT1JDRUQpew0KICAkaXRlckNyZWF0ZShDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCk7DQogIHZhciBnZXRNZXRob2QgPSBmdW5jdGlvbihraW5kKXsNCiAgICBpZighQlVHR1kgJiYga2luZCBpbiBwcm90bylyZXR1cm4gcHJvdG9ba2luZF07DQogICAgc3dpdGNoKGtpbmQpew0KICAgICAgY2FzZSBLRVlTOiByZXR1cm4gZnVuY3Rpb24ga2V5cygpeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9Ow0KICAgICAgY2FzZSBWQUxVRVM6IHJldHVybiBmdW5jdGlvbiB2YWx1ZXMoKXsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTsNCiAgICB9IHJldHVybiBmdW5jdGlvbiBlbnRyaWVzKCl7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07DQogIH07DQogIHZhciBUQUcgICAgICAgID0gTkFNRSArICcgSXRlcmF0b3InDQogICAgLCBERUZfVkFMVUVTID0gREVGQVVMVCA9PSBWQUxVRVMNCiAgICAsIFZBTFVFU19CVUcgPSBmYWxzZQ0KICAgICwgcHJvdG8gICAgICA9IEJhc2UucHJvdG90eXBlDQogICAgLCAkbmF0aXZlICAgID0gcHJvdG9bSVRFUkFUT1JdIHx8IHByb3RvW0ZGX0lURVJBVE9SXSB8fCBERUZBVUxUICYmIHByb3RvW0RFRkFVTFRdDQogICAgLCAkZGVmYXVsdCAgID0gJG5hdGl2ZSB8fCBnZXRNZXRob2QoREVGQVVMVCkNCiAgICAsICRlbnRyaWVzICAgPSBERUZBVUxUID8gIURFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZCgnZW50cmllcycpIDogdW5kZWZpbmVkDQogICAgLCAkYW55TmF0aXZlID0gTkFNRSA9PSAnQXJyYXknID8gcHJvdG8uZW50cmllcyB8fCAkbmF0aXZlIDogJG5hdGl2ZQ0KICAgICwgbWV0aG9kcywga2V5LCBJdGVyYXRvclByb3RvdHlwZTsNCiAgLy8gRml4IG5hdGl2ZQ0KICBpZigkYW55TmF0aXZlKXsNCiAgICBJdGVyYXRvclByb3RvdHlwZSA9IGdldFByb3RvdHlwZU9mKCRhbnlOYXRpdmUuY2FsbChuZXcgQmFzZSkpOw0KICAgIGlmKEl0ZXJhdG9yUHJvdG90eXBlICE9PSBPYmplY3QucHJvdG90eXBlKXsNCiAgICAgIC8vIFNldCBAQHRvU3RyaW5nVGFnIHRvIG5hdGl2ZSBpdGVyYXRvcnMNCiAgICAgIHNldFRvU3RyaW5nVGFnKEl0ZXJhdG9yUHJvdG90eXBlLCBUQUcsIHRydWUpOw0KICAgICAgLy8gZml4IGZvciBzb21lIG9sZCBlbmdpbmVzDQogICAgICBpZighTElCUkFSWSAmJiAhaGFzKEl0ZXJhdG9yUHJvdG90eXBlLCBJVEVSQVRPUikpaGlkZShJdGVyYXRvclByb3RvdHlwZSwgSVRFUkFUT1IsIHJldHVyblRoaXMpOw0KICAgIH0NCiAgfQ0KICAvLyBmaXggQXJyYXkje3ZhbHVlcywgQEBpdGVyYXRvcn0ubmFtZSBpbiBWOCAvIEZGDQogIGlmKERFRl9WQUxVRVMgJiYgJG5hdGl2ZSAmJiAkbmF0aXZlLm5hbWUgIT09IFZBTFVFUyl7DQogICAgVkFMVUVTX0JVRyA9IHRydWU7DQogICAgJGRlZmF1bHQgPSBmdW5jdGlvbiB2YWx1ZXMoKXsgcmV0dXJuICRuYXRpdmUuY2FsbCh0aGlzKTsgfTsNCiAgfQ0KICAvLyBEZWZpbmUgaXRlcmF0b3INCiAgaWYoKCFMSUJSQVJZIHx8IEZPUkNFRCkgJiYgKEJVR0dZIHx8IFZBTFVFU19CVUcgfHwgIXByb3RvW0lURVJBVE9SXSkpew0KICAgIGhpZGUocHJvdG8sIElURVJBVE9SLCAkZGVmYXVsdCk7DQogIH0NCiAgLy8gUGx1ZyBmb3IgbGlicmFyeQ0KICBJdGVyYXRvcnNbTkFNRV0gPSAkZGVmYXVsdDsNCiAgSXRlcmF0b3JzW1RBR10gID0gcmV0dXJuVGhpczsNCiAgaWYoREVGQVVMVCl7DQogICAgbWV0aG9kcyA9IHsNCiAgICAgIHZhbHVlczogIERFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChWQUxVRVMpLA0KICAgICAga2V5czogICAgSVNfU0VUICAgICA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKEtFWVMpLA0KICAgICAgZW50cmllczogJGVudHJpZXMNCiAgICB9Ow0KICAgIGlmKEZPUkNFRClmb3Ioa2V5IGluIG1ldGhvZHMpew0KICAgICAgaWYoIShrZXkgaW4gcHJvdG8pKXJlZGVmaW5lKHByb3RvLCBrZXksIG1ldGhvZHNba2V5XSk7DQogICAgfSBlbHNlICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKEJVR0dZIHx8IFZBTFVFU19CVUcpLCBOQU1FLCBtZXRob2RzKTsNCiAgfQ0KICByZXR1cm4gbWV0aG9kczsNCn07DQp9LHsiLi9fZXhwb3J0IjoxMjAsIi4vX2hhcyI6MTI0LCIuL19oaWRlIjoxMjUsIi4vX2l0ZXItY3JlYXRlIjoxMzQsIi4vX2l0ZXJhdG9ycyI6MTM4LCIuL19saWJyYXJ5IjoxNDAsIi4vX29iamVjdC1ncG8iOjE1MSwiLi9fcmVkZWZpbmUiOjE1OCwiLi9fc2V0LXRvLXN0cmluZy10YWciOjE2MSwiLi9fd2tzIjoxNzZ9XSwxMzY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIElURVJBVE9SICAgICA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpDQogICwgU0FGRV9DTE9TSU5HID0gZmFsc2U7DQoNCnRyeSB7DQogIHZhciByaXRlciA9IFs3XVtJVEVSQVRPUl0oKTsNCiAgcml0ZXJbJ3JldHVybiddID0gZnVuY3Rpb24oKXsgU0FGRV9DTE9TSU5HID0gdHJ1ZTsgfTsNCiAgQXJyYXkuZnJvbShyaXRlciwgZnVuY3Rpb24oKXsgdGhyb3cgMjsgfSk7DQp9IGNhdGNoKGUpeyAvKiBlbXB0eSAqLyB9DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZXhlYywgc2tpcENsb3Npbmcpew0KICBpZighc2tpcENsb3NpbmcgJiYgIVNBRkVfQ0xPU0lORylyZXR1cm4gZmFsc2U7DQogIHZhciBzYWZlID0gZmFsc2U7DQogIHRyeSB7DQogICAgdmFyIGFyciAgPSBbN10NCiAgICAgICwgaXRlciA9IGFycltJVEVSQVRPUl0oKTsNCiAgICBpdGVyLm5leHQgPSBmdW5jdGlvbigpeyByZXR1cm4ge2RvbmU6IHNhZmUgPSB0cnVlfTsgfTsNCiAgICBhcnJbSVRFUkFUT1JdID0gZnVuY3Rpb24oKXsgcmV0dXJuIGl0ZXI7IH07DQogICAgZXhlYyhhcnIpOw0KICB9IGNhdGNoKGUpeyAvKiBlbXB0eSAqLyB9DQogIHJldHVybiBzYWZlOw0KfTsNCn0seyIuL193a3MiOjE3Nn1dLDEzNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGRvbmUsIHZhbHVlKXsNCiAgcmV0dXJuIHt2YWx1ZTogdmFsdWUsIGRvbmU6ICEhZG9uZX07DQp9Ow0KfSx7fV0sMTM4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0ge307DQp9LHt9XSwxMzk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGdldEtleXMgICA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJykNCiAgLCB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9iamVjdCwgZWwpew0KICB2YXIgTyAgICAgID0gdG9JT2JqZWN0KG9iamVjdCkNCiAgICAsIGtleXMgICA9IGdldEtleXMoTykNCiAgICAsIGxlbmd0aCA9IGtleXMubGVuZ3RoDQogICAgLCBpbmRleCAgPSAwDQogICAgLCBrZXk7DQogIHdoaWxlKGxlbmd0aCA+IGluZGV4KWlmKE9ba2V5ID0ga2V5c1tpbmRleCsrXV0gPT09IGVsKXJldHVybiBrZXk7DQp9Ow0KfSx7Ii4vX29iamVjdC1rZXlzIjoxNTMsIi4vX3RvLWlvYmplY3QiOjE2OX1dLDE0MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IHRydWU7DQp9LHt9XSwxNDE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIE1FVEEgICAgID0gcmVxdWlyZSgnLi9fdWlkJykoJ21ldGEnKQ0KICAsIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JykNCiAgLCBoYXMgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpDQogICwgc2V0RGVzYyAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mDQogICwgaWQgICAgICAgPSAwOw0KdmFyIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGUgfHwgZnVuY3Rpb24oKXsNCiAgcmV0dXJuIHRydWU7DQp9Ow0KdmFyIEZSRUVaRSA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7DQogIHJldHVybiBpc0V4dGVuc2libGUoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHt9KSk7DQp9KTsNCnZhciBzZXRNZXRhID0gZnVuY3Rpb24oaXQpew0KICBzZXREZXNjKGl0LCBNRVRBLCB7dmFsdWU6IHsNCiAgICBpOiAnTycgKyArK2lkLCAvLyBvYmplY3QgSUQNCiAgICB3OiB7fSAgICAgICAgICAvLyB3ZWFrIGNvbGxlY3Rpb25zIElEcw0KICB9fSk7DQp9Ow0KdmFyIGZhc3RLZXkgPSBmdW5jdGlvbihpdCwgY3JlYXRlKXsNCiAgLy8gcmV0dXJuIHByaW1pdGl2ZSB3aXRoIHByZWZpeA0KICBpZighaXNPYmplY3QoaXQpKXJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCcgPyBpdCA6ICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgPyAnUycgOiAnUCcpICsgaXQ7DQogIGlmKCFoYXMoaXQsIE1FVEEpKXsNCiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdA0KICAgIGlmKCFpc0V4dGVuc2libGUoaXQpKXJldHVybiAnRic7DQogICAgLy8gbm90IG5lY2Vzc2FyeSB0byBhZGQgbWV0YWRhdGENCiAgICBpZighY3JlYXRlKXJldHVybiAnRSc7DQogICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGENCiAgICBzZXRNZXRhKGl0KTsNCiAgLy8gcmV0dXJuIG9iamVjdCBJRA0KICB9IHJldHVybiBpdFtNRVRBXS5pOw0KfTsNCnZhciBnZXRXZWFrID0gZnVuY3Rpb24oaXQsIGNyZWF0ZSl7DQogIGlmKCFoYXMoaXQsIE1FVEEpKXsNCiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdA0KICAgIGlmKCFpc0V4dGVuc2libGUoaXQpKXJldHVybiB0cnVlOw0KICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhDQogICAgaWYoIWNyZWF0ZSlyZXR1cm4gZmFsc2U7DQogICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGENCiAgICBzZXRNZXRhKGl0KTsNCiAgLy8gcmV0dXJuIGhhc2ggd2VhayBjb2xsZWN0aW9ucyBJRHMNCiAgfSByZXR1cm4gaXRbTUVUQV0udzsNCn07DQovLyBhZGQgbWV0YWRhdGEgb24gZnJlZXplLWZhbWlseSBtZXRob2RzIGNhbGxpbmcNCnZhciBvbkZyZWV6ZSA9IGZ1bmN0aW9uKGl0KXsNCiAgaWYoRlJFRVpFICYmIG1ldGEuTkVFRCAmJiBpc0V4dGVuc2libGUoaXQpICYmICFoYXMoaXQsIE1FVEEpKXNldE1ldGEoaXQpOw0KICByZXR1cm4gaXQ7DQp9Ow0KdmFyIG1ldGEgPSBtb2R1bGUuZXhwb3J0cyA9IHsNCiAgS0VZOiAgICAgIE1FVEEsDQogIE5FRUQ6ICAgICBmYWxzZSwNCiAgZmFzdEtleTogIGZhc3RLZXksDQogIGdldFdlYWs6ICBnZXRXZWFrLA0KICBvbkZyZWV6ZTogb25GcmVlemUNCn07DQp9LHsiLi9fZmFpbHMiOjEyMSwiLi9faGFzIjoxMjQsIi4vX2lzLW9iamVjdCI6MTMyLCIuL19vYmplY3QtZHAiOjE0NSwiLi9fdWlkIjoxNzN9XSwxNDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGdsb2JhbCAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpDQogICwgbWFjcm90YXNrID0gcmVxdWlyZSgnLi9fdGFzaycpLnNldA0KICAsIE9ic2VydmVyICA9IGdsb2JhbC5NdXRhdGlvbk9ic2VydmVyIHx8IGdsb2JhbC5XZWJLaXRNdXRhdGlvbk9ic2VydmVyDQogICwgcHJvY2VzcyAgID0gZ2xvYmFsLnByb2Nlc3MNCiAgLCBQcm9taXNlICAgPSBnbG9iYWwuUHJvbWlzZQ0KICAsIGlzTm9kZSAgICA9IHJlcXVpcmUoJy4vX2NvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJzsNCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpew0KICB2YXIgaGVhZCwgbGFzdCwgbm90aWZ5Ow0KDQogIHZhciBmbHVzaCA9IGZ1bmN0aW9uKCl7DQogICAgdmFyIHBhcmVudCwgZm47DQogICAgaWYoaXNOb2RlICYmIChwYXJlbnQgPSBwcm9jZXNzLmRvbWFpbikpcGFyZW50LmV4aXQoKTsNCiAgICB3aGlsZShoZWFkKXsNCiAgICAgIGZuICAgPSBoZWFkLmZuOw0KICAgICAgaGVhZCA9IGhlYWQubmV4dDsNCiAgICAgIHRyeSB7DQogICAgICAgIGZuKCk7DQogICAgICB9IGNhdGNoKGUpew0KICAgICAgICBpZihoZWFkKW5vdGlmeSgpOw0KICAgICAgICBlbHNlIGxhc3QgPSB1bmRlZmluZWQ7DQogICAgICAgIHRocm93IGU7DQogICAgICB9DQogICAgfSBsYXN0ID0gdW5kZWZpbmVkOw0KICAgIGlmKHBhcmVudClwYXJlbnQuZW50ZXIoKTsNCiAgfTsNCg0KICAvLyBOb2RlLmpzDQogIGlmKGlzTm9kZSl7DQogICAgbm90aWZ5ID0gZnVuY3Rpb24oKXsNCiAgICAgIHByb2Nlc3MubmV4dFRpY2soZmx1c2gpOw0KICAgIH07DQogIC8vIGJyb3dzZXJzIHdpdGggTXV0YXRpb25PYnNlcnZlcg0KICB9IGVsc2UgaWYoT2JzZXJ2ZXIpew0KICAgIHZhciB0b2dnbGUgPSB0cnVlDQogICAgICAsIG5vZGUgICA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKTsNCiAgICBuZXcgT2JzZXJ2ZXIoZmx1c2gpLm9ic2VydmUobm9kZSwge2NoYXJhY3RlckRhdGE6IHRydWV9KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXcNCiAgICBub3RpZnkgPSBmdW5jdGlvbigpew0KICAgICAgbm9kZS5kYXRhID0gdG9nZ2xlID0gIXRvZ2dsZTsNCiAgICB9Ow0KICAvLyBlbnZpcm9ubWVudHMgd2l0aCBtYXliZSBub24tY29tcGxldGVseSBjb3JyZWN0LCBidXQgZXhpc3RlbnQgUHJvbWlzZQ0KICB9IGVsc2UgaWYoUHJvbWlzZSAmJiBQcm9taXNlLnJlc29sdmUpew0KICAgIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKCk7DQogICAgbm90aWZ5ID0gZnVuY3Rpb24oKXsNCiAgICAgIHByb21pc2UudGhlbihmbHVzaCk7DQogICAgfTsNCiAgLy8gZm9yIG90aGVyIGVudmlyb25tZW50cyAtIG1hY3JvdGFzayBiYXNlZCBvbjoNCiAgLy8gLSBzZXRJbW1lZGlhdGUNCiAgLy8gLSBNZXNzYWdlQ2hhbm5lbA0KICAvLyAtIHdpbmRvdy5wb3N0TWVzc2FnDQogIC8vIC0gb25yZWFkeXN0YXRlY2hhbmdlDQogIC8vIC0gc2V0VGltZW91dA0KICB9IGVsc2Ugew0KICAgIG5vdGlmeSA9IGZ1bmN0aW9uKCl7DQogICAgICAvLyBzdHJhbmdlIElFICsgd2VicGFjayBkZXYgc2VydmVyIGJ1ZyAtIHVzZSAuY2FsbChnbG9iYWwpDQogICAgICBtYWNyb3Rhc2suY2FsbChnbG9iYWwsIGZsdXNoKTsNCiAgICB9Ow0KICB9DQoNCiAgcmV0dXJuIGZ1bmN0aW9uKGZuKXsNCiAgICB2YXIgdGFzayA9IHtmbjogZm4sIG5leHQ6IHVuZGVmaW5lZH07DQogICAgaWYobGFzdClsYXN0Lm5leHQgPSB0YXNrOw0KICAgIGlmKCFoZWFkKXsNCiAgICAgIGhlYWQgPSB0YXNrOw0KICAgICAgbm90aWZ5KCk7DQogICAgfSBsYXN0ID0gdGFzazsNCiAgfTsNCn07DQp9LHsiLi9fY29mIjoxMTIsIi4vX2dsb2JhbCI6MTIzLCIuL190YXNrIjoxNjZ9XSwxNDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KLy8gMTkuMS4yLjEgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHNvdXJjZSwgLi4uKQ0KdmFyIGdldEtleXMgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKQ0KICAsIGdPUFMgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKQ0KICAsIHBJRSAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpDQogICwgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKQ0KICAsIElPYmplY3QgID0gcmVxdWlyZSgnLi9faW9iamVjdCcpDQogICwgJGFzc2lnbiAgPSBPYmplY3QuYXNzaWduOw0KDQovLyBzaG91bGQgd29yayB3aXRoIHN5bWJvbHMgYW5kIHNob3VsZCBoYXZlIGRldGVybWluaXN0aWMgcHJvcGVydHkgb3JkZXIgKFY4IGJ1ZykNCm1vZHVsZS5leHBvcnRzID0gISRhc3NpZ24gfHwgcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpew0KICB2YXIgQSA9IHt9DQogICAgLCBCID0ge30NCiAgICAsIFMgPSBTeW1ib2woKQ0KICAgICwgSyA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdCc7DQogIEFbU10gPSA3Ow0KICBLLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uKGspeyBCW2tdID0gazsgfSk7DQogIHJldHVybiAkYXNzaWduKHt9LCBBKVtTXSAhPSA3IHx8IE9iamVjdC5rZXlzKCRhc3NpZ24oe30sIEIpKS5qb2luKCcnKSAhPSBLOw0KfSkgPyBmdW5jdGlvbiBhc3NpZ24odGFyZ2V0LCBzb3VyY2UpeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzDQogIHZhciBUICAgICA9IHRvT2JqZWN0KHRhcmdldCkNCiAgICAsIGFMZW4gID0gYXJndW1lbnRzLmxlbmd0aA0KICAgICwgaW5kZXggPSAxDQogICAgLCBnZXRTeW1ib2xzID0gZ09QUy5mDQogICAgLCBpc0VudW0gICAgID0gcElFLmY7DQogIHdoaWxlKGFMZW4gPiBpbmRleCl7DQogICAgdmFyIFMgICAgICA9IElPYmplY3QoYXJndW1lbnRzW2luZGV4KytdKQ0KICAgICAgLCBrZXlzICAgPSBnZXRTeW1ib2xzID8gZ2V0S2V5cyhTKS5jb25jYXQoZ2V0U3ltYm9scyhTKSkgOiBnZXRLZXlzKFMpDQogICAgICAsIGxlbmd0aCA9IGtleXMubGVuZ3RoDQogICAgICAsIGogICAgICA9IDANCiAgICAgICwga2V5Ow0KICAgIHdoaWxlKGxlbmd0aCA+IGopaWYoaXNFbnVtLmNhbGwoUywga2V5ID0ga2V5c1tqKytdKSlUW2tleV0gPSBTW2tleV07DQogIH0gcmV0dXJuIFQ7DQp9IDogJGFzc2lnbjsNCn0seyIuL19mYWlscyI6MTIxLCIuL19pb2JqZWN0IjoxMjksIi4vX29iamVjdC1nb3BzIjoxNTAsIi4vX29iamVjdC1rZXlzIjoxNTMsIi4vX29iamVjdC1waWUiOjE1NCwiLi9fdG8tb2JqZWN0IjoxNzF9XSwxNDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pDQp2YXIgYW5PYmplY3QgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKQ0KICAsIGRQcyAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpDQogICwgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJykNCiAgLCBJRV9QUk9UTyAgICA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKQ0KICAsIEVtcHR5ICAgICAgID0gZnVuY3Rpb24oKXsgLyogZW1wdHkgKi8gfQ0KICAsIFBST1RPVFlQRSAgID0gJ3Byb3RvdHlwZSc7DQoNCi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGUNCnZhciBjcmVhdGVEaWN0ID0gZnVuY3Rpb24oKXsNCiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWcNCiAgdmFyIGlmcmFtZSA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnaWZyYW1lJykNCiAgICAsIGkgICAgICA9IGVudW1CdWdLZXlzLmxlbmd0aA0KICAgICwgZ3QgICAgID0gJz4nDQogICAgLCBpZnJhbWVEb2N1bWVudDsNCiAgaWZyYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7DQogIHJlcXVpcmUoJy4vX2h0bWwnKS5hcHBlbmRDaGlsZChpZnJhbWUpOw0KICBpZnJhbWUuc3JjID0gJ2phdmFzY3JpcHQ6JzsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1zY3JpcHQtdXJsDQogIC8vIGNyZWF0ZURpY3QgPSBpZnJhbWUuY29udGVudFdpbmRvdy5PYmplY3Q7DQogIC8vIGh0bWwucmVtb3ZlQ2hpbGQoaWZyYW1lKTsNCiAgaWZyYW1lRG9jdW1lbnQgPSBpZnJhbWUuY29udGVudFdpbmRvdy5kb2N1bWVudDsNCiAgaWZyYW1lRG9jdW1lbnQub3BlbigpOw0KICBpZnJhbWVEb2N1bWVudC53cml0ZSgnPHNjcmlwdD5kb2N1bWVudC5GPU9iamVjdDwvc2NyaXB0JyArIGd0KTsNCiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTsNCiAgY3JlYXRlRGljdCA9IGlmcmFtZURvY3VtZW50LkY7DQogIHdoaWxlKGktLSlkZWxldGUgY3JlYXRlRGljdFtQUk9UT1RZUEVdW2VudW1CdWdLZXlzW2ldXTsNCiAgcmV0dXJuIGNyZWF0ZURpY3QoKTsNCn07DQoNCm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmNyZWF0ZSB8fCBmdW5jdGlvbiBjcmVhdGUoTywgUHJvcGVydGllcyl7DQogIHZhciByZXN1bHQ7DQogIGlmKE8gIT09IG51bGwpew0KICAgIEVtcHR5W1BST1RPVFlQRV0gPSBhbk9iamVjdChPKTsNCiAgICByZXN1bHQgPSBuZXcgRW1wdHk7DQogICAgRW1wdHlbUFJPVE9UWVBFXSA9IG51bGw7DQogICAgLy8gYWRkICJfX3Byb3RvX18iIGZvciBPYmplY3QuZ2V0UHJvdG90eXBlT2YgcG9seWZpbGwNCiAgICByZXN1bHRbSUVfUFJPVE9dID0gTzsNCiAgfSBlbHNlIHJlc3VsdCA9IGNyZWF0ZURpY3QoKTsNCiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IGRQcyhyZXN1bHQsIFByb3BlcnRpZXMpOw0KfTsNCn0seyIuL19hbi1vYmplY3QiOjEwOSwiLi9fZG9tLWNyZWF0ZSI6MTE3LCIuL19lbnVtLWJ1Zy1rZXlzIjoxMTgsIi4vX2h0bWwiOjEyNiwiLi9fb2JqZWN0LWRwcyI6MTQ2LCIuL19zaGFyZWQta2V5IjoxNjJ9XSwxNDU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGFuT2JqZWN0ICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JykNCiAgLCBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJykNCiAgLCB0b1ByaW1pdGl2ZSAgICA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpDQogICwgZFAgICAgICAgICAgICAgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7DQoNCmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKXsNCiAgYW5PYmplY3QoTyk7DQogIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTsNCiAgYW5PYmplY3QoQXR0cmlidXRlcyk7DQogIGlmKElFOF9ET01fREVGSU5FKXRyeSB7DQogICAgcmV0dXJuIGRQKE8sIFAsIEF0dHJpYnV0ZXMpOw0KICB9IGNhdGNoKGUpeyAvKiBlbXB0eSAqLyB9DQogIGlmKCdnZXQnIGluIEF0dHJpYnV0ZXMgfHwgJ3NldCcgaW4gQXR0cmlidXRlcyl0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIScpOw0KICBpZigndmFsdWUnIGluIEF0dHJpYnV0ZXMpT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7DQogIHJldHVybiBPOw0KfTsNCn0seyIuL19hbi1vYmplY3QiOjEwOSwiLi9fZGVzY3JpcHRvcnMiOjExNiwiLi9faWU4LWRvbS1kZWZpbmUiOjEyNywiLi9fdG8tcHJpbWl0aXZlIjoxNzJ9XSwxNDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGRQICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykNCiAgLCBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpDQogICwgZ2V0S2V5cyAgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpOw0KDQptb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcyl7DQogIGFuT2JqZWN0KE8pOw0KICB2YXIga2V5cyAgID0gZ2V0S2V5cyhQcm9wZXJ0aWVzKQ0KICAgICwgbGVuZ3RoID0ga2V5cy5sZW5ndGgNCiAgICAsIGkgPSAwDQogICAgLCBQOw0KICB3aGlsZShsZW5ndGggPiBpKWRQLmYoTywgUCA9IGtleXNbaSsrXSwgUHJvcGVydGllc1tQXSk7DQogIHJldHVybiBPOw0KfTsNCn0seyIuL19hbi1vYmplY3QiOjEwOSwiLi9fZGVzY3JpcHRvcnMiOjExNiwiLi9fb2JqZWN0LWRwIjoxNDUsIi4vX29iamVjdC1rZXlzIjoxNTN9XSwxNDc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIHBJRSAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpDQogICwgY3JlYXRlRGVzYyAgICAgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJykNCiAgLCB0b0lPYmplY3QgICAgICA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKQ0KICAsIHRvUHJpbWl0aXZlICAgID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJykNCiAgLCBoYXMgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpDQogICwgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpDQogICwgZ09QRCAgICAgICAgICAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOw0KDQpleHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QRCA6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKXsNCiAgTyA9IHRvSU9iamVjdChPKTsNCiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpOw0KICBpZihJRThfRE9NX0RFRklORSl0cnkgew0KICAgIHJldHVybiBnT1BEKE8sIFApOw0KICB9IGNhdGNoKGUpeyAvKiBlbXB0eSAqLyB9DQogIGlmKGhhcyhPLCBQKSlyZXR1cm4gY3JlYXRlRGVzYyghcElFLmYuY2FsbChPLCBQKSwgT1tQXSk7DQp9Ow0KfSx7Ii4vX2Rlc2NyaXB0b3JzIjoxMTYsIi4vX2hhcyI6MTI0LCIuL19pZTgtZG9tLWRlZmluZSI6MTI3LCIuL19vYmplY3QtcGllIjoxNTQsIi4vX3Byb3BlcnR5LWRlc2MiOjE1NiwiLi9fdG8taW9iamVjdCI6MTY5LCIuL190by1wcmltaXRpdmUiOjE3Mn1dLDE0ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBmYWxsYmFjayBmb3IgSUUxMSBidWdneSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB3aXRoIGlmcmFtZSBhbmQgd2luZG93DQp2YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpDQogICwgZ09QTiAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mDQogICwgdG9TdHJpbmcgID0ge30udG9TdHJpbmc7DQoNCnZhciB3aW5kb3dOYW1lcyA9IHR5cGVvZiB3aW5kb3cgPT0gJ29iamVjdCcgJiYgd2luZG93ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzDQogID8gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KSA6IFtdOw0KDQp2YXIgZ2V0V2luZG93TmFtZXMgPSBmdW5jdGlvbihpdCl7DQogIHRyeSB7DQogICAgcmV0dXJuIGdPUE4oaXQpOw0KICB9IGNhdGNoKGUpew0KICAgIHJldHVybiB3aW5kb3dOYW1lcy5zbGljZSgpOw0KICB9DQp9Ow0KDQptb2R1bGUuZXhwb3J0cy5mID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCl7DQogIHJldHVybiB3aW5kb3dOYW1lcyAmJiB0b1N0cmluZy5jYWxsKGl0KSA9PSAnW29iamVjdCBXaW5kb3ddJyA/IGdldFdpbmRvd05hbWVzKGl0KSA6IGdPUE4odG9JT2JqZWN0KGl0KSk7DQp9Ow0KDQp9LHsiLi9fb2JqZWN0LWdvcG4iOjE0OSwiLi9fdG8taW9iamVjdCI6MTY5fV0sMTQ5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDE5LjEuMi43IC8gMTUuMi4zLjQgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTykNCnZhciAka2V5cyAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKQ0KICAsIGhpZGRlbktleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJykuY29uY2F0KCdsZW5ndGgnLCAncHJvdG90eXBlJyk7DQoNCmV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHx8IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoTyl7DQogIHJldHVybiAka2V5cyhPLCBoaWRkZW5LZXlzKTsNCn07DQp9LHsiLi9fZW51bS1idWcta2V5cyI6MTE4LCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCI6MTUyfV0sMTUwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7DQp9LHt9XSwxNTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMTkuMS4yLjkgLyAxNS4yLjMuMiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTykNCnZhciBoYXMgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpDQogICwgdG9PYmplY3QgICAgPSByZXF1aXJlKCcuL190by1vYmplY3QnKQ0KICAsIElFX1BST1RPICAgID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpDQogICwgT2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlOw0KDQptb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbihPKXsNCiAgTyA9IHRvT2JqZWN0KE8pOw0KICBpZihoYXMoTywgSUVfUFJPVE8pKXJldHVybiBPW0lFX1BST1RPXTsNCiAgaWYodHlwZW9mIE8uY29uc3RydWN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBPIGluc3RhbmNlb2YgTy5jb25zdHJ1Y3Rvcil7DQogICAgcmV0dXJuIE8uY29uc3RydWN0b3IucHJvdG90eXBlOw0KICB9IHJldHVybiBPIGluc3RhbmNlb2YgT2JqZWN0ID8gT2JqZWN0UHJvdG8gOiBudWxsOw0KfTsNCn0seyIuL19oYXMiOjEyNCwiLi9fc2hhcmVkLWtleSI6MTYyLCIuL190by1vYmplY3QiOjE3MX1dLDE1MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgaGFzICAgICAgICAgID0gcmVxdWlyZSgnLi9faGFzJykNCiAgLCB0b0lPYmplY3QgICAgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JykNCiAgLCBhcnJheUluZGV4T2YgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKGZhbHNlKQ0KICAsIElFX1BST1RPICAgICA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTsNCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvYmplY3QsIG5hbWVzKXsNCiAgdmFyIE8gICAgICA9IHRvSU9iamVjdChvYmplY3QpDQogICAgLCBpICAgICAgPSAwDQogICAgLCByZXN1bHQgPSBbXQ0KICAgICwga2V5Ow0KICBmb3Ioa2V5IGluIE8paWYoa2V5ICE9IElFX1BST1RPKWhhcyhPLCBrZXkpICYmIHJlc3VsdC5wdXNoKGtleSk7DQogIC8vIERvbid0IGVudW0gYnVnICYgaGlkZGVuIGtleXMNCiAgd2hpbGUobmFtZXMubGVuZ3RoID4gaSlpZihoYXMoTywga2V5ID0gbmFtZXNbaSsrXSkpew0KICAgIH5hcnJheUluZGV4T2YocmVzdWx0LCBrZXkpIHx8IHJlc3VsdC5wdXNoKGtleSk7DQogIH0NCiAgcmV0dXJuIHJlc3VsdDsNCn07DQp9LHsiLi9fYXJyYXktaW5jbHVkZXMiOjExMCwiLi9faGFzIjoxMjQsIi4vX3NoYXJlZC1rZXkiOjE2MiwiLi9fdG8taW9iamVjdCI6MTY5fV0sMTUzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDE5LjEuMi4xNCAvIDE1LjIuMy4xNCBPYmplY3Qua2V5cyhPKQ0KdmFyICRrZXlzICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKQ0KICAsIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpOw0KDQptb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIGtleXMoTyl7DQogIHJldHVybiAka2V5cyhPLCBlbnVtQnVnS2V5cyk7DQp9Ow0KfSx7Ii4vX2VudW0tYnVnLWtleXMiOjExOCwiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiOjE1Mn1dLDE1NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpleHBvcnRzLmYgPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZTsNCn0se31dLDE1NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBtb3N0IE9iamVjdCBtZXRob2RzIGJ5IEVTNiBzaG91bGQgYWNjZXB0IHByaW1pdGl2ZXMNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBjb3JlICAgID0gcmVxdWlyZSgnLi9fY29yZScpDQogICwgZmFpbHMgICA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKEtFWSwgZXhlYyl7DQogIHZhciBmbiAgPSAoY29yZS5PYmplY3QgfHwge30pW0tFWV0gfHwgT2JqZWN0W0tFWV0NCiAgICAsIGV4cCA9IHt9Ow0KICBleHBbS0VZXSA9IGV4ZWMoZm4pOw0KICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uKCl7IGZuKDEpOyB9KSwgJ09iamVjdCcsIGV4cCk7DQp9Ow0KfSx7Ii4vX2NvcmUiOjExMywiLi9fZXhwb3J0IjoxMjAsIi4vX2ZhaWxzIjoxMjF9XSwxNTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihiaXRtYXAsIHZhbHVlKXsNCiAgcmV0dXJuIHsNCiAgICBlbnVtZXJhYmxlICA6ICEoYml0bWFwICYgMSksDQogICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLA0KICAgIHdyaXRhYmxlICAgIDogIShiaXRtYXAgJiA0KSwNCiAgICB2YWx1ZSAgICAgICA6IHZhbHVlDQogIH07DQp9Ow0KfSx7fV0sMTU3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpOw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih0YXJnZXQsIHNyYywgc2FmZSl7DQogIGZvcih2YXIga2V5IGluIHNyYyl7DQogICAgaWYoc2FmZSAmJiB0YXJnZXRba2V5XSl0YXJnZXRba2V5XSA9IHNyY1trZXldOw0KICAgIGVsc2UgaGlkZSh0YXJnZXQsIGtleSwgc3JjW2tleV0pOw0KICB9IHJldHVybiB0YXJnZXQ7DQp9Ow0KfSx7Ii4vX2hpZGUiOjEyNX1dLDE1ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2hpZGUnKTsNCn0seyIuL19oaWRlIjoxMjV9XSwxNTk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gV29ya3Mgd2l0aCBfX3Byb3RvX18gb25seS4gT2xkIHY4IGNhbid0IHdvcmsgd2l0aCBudWxsIHByb3RvIG9iamVjdHMuDQovKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqLw0KdmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JykNCiAgLCBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpOw0KdmFyIGNoZWNrID0gZnVuY3Rpb24oTywgcHJvdG8pew0KICBhbk9iamVjdChPKTsNCiAgaWYoIWlzT2JqZWN0KHByb3RvKSAmJiBwcm90byAhPT0gbnVsbCl0aHJvdyBUeXBlRXJyb3IocHJvdG8gKyAiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlISIpOw0KfTsNCm1vZHVsZS5leHBvcnRzID0gew0KICBzZXQ6IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCAoJ19fcHJvdG9fXycgaW4ge30gPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lDQogICAgZnVuY3Rpb24odGVzdCwgYnVnZ3ksIHNldCl7DQogICAgICB0cnkgew0KICAgICAgICBzZXQgPSByZXF1aXJlKCcuL19jdHgnKShGdW5jdGlvbi5jYWxsLCByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmYoT2JqZWN0LnByb3RvdHlwZSwgJ19fcHJvdG9fXycpLnNldCwgMik7DQogICAgICAgIHNldCh0ZXN0LCBbXSk7DQogICAgICAgIGJ1Z2d5ID0gISh0ZXN0IGluc3RhbmNlb2YgQXJyYXkpOw0KICAgICAgfSBjYXRjaChlKXsgYnVnZ3kgPSB0cnVlOyB9DQogICAgICByZXR1cm4gZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pew0KICAgICAgICBjaGVjayhPLCBwcm90byk7DQogICAgICAgIGlmKGJ1Z2d5KU8uX19wcm90b19fID0gcHJvdG87DQogICAgICAgIGVsc2Ugc2V0KE8sIHByb3RvKTsNCiAgICAgICAgcmV0dXJuIE87DQogICAgICB9Ow0KICAgIH0oe30sIGZhbHNlKSA6IHVuZGVmaW5lZCksDQogIGNoZWNrOiBjaGVjaw0KfTsNCn0seyIuL19hbi1vYmplY3QiOjEwOSwiLi9fY3R4IjoxMTQsIi4vX2lzLW9iamVjdCI6MTMyLCIuL19vYmplY3QtZ29wZCI6MTQ3fV0sMTYwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciBnbG9iYWwgICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpDQogICwgY29yZSAgICAgICAgPSByZXF1aXJlKCcuL19jb3JlJykNCiAgLCBkUCAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpDQogICwgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpDQogICwgU1BFQ0lFUyAgICAgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpOw0KDQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKEtFWSl7DQogIHZhciBDID0gdHlwZW9mIGNvcmVbS0VZXSA9PSAnZnVuY3Rpb24nID8gY29yZVtLRVldIDogZ2xvYmFsW0tFWV07DQogIGlmKERFU0NSSVBUT1JTICYmIEMgJiYgIUNbU1BFQ0lFU10pZFAuZihDLCBTUEVDSUVTLCB7DQogICAgY29uZmlndXJhYmxlOiB0cnVlLA0KICAgIGdldDogZnVuY3Rpb24oKXsgcmV0dXJuIHRoaXM7IH0NCiAgfSk7DQp9Ow0KfSx7Ii4vX2NvcmUiOjExMywiLi9fZGVzY3JpcHRvcnMiOjExNiwiLi9fZ2xvYmFsIjoxMjMsIi4vX29iamVjdC1kcCI6MTQ1LCIuL193a3MiOjE3Nn1dLDE2MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgZGVmID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZg0KICAsIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpDQogICwgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQsIHRhZywgc3RhdCl7DQogIGlmKGl0ICYmICFoYXMoaXQgPSBzdGF0ID8gaXQgOiBpdC5wcm90b3R5cGUsIFRBRykpZGVmKGl0LCBUQUcsIHtjb25maWd1cmFibGU6IHRydWUsIHZhbHVlOiB0YWd9KTsNCn07DQp9LHsiLi9faGFzIjoxMjQsIi4vX29iamVjdC1kcCI6MTQ1LCIuL193a3MiOjE3Nn1dLDE2MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ2tleXMnKQ0KICAsIHVpZCAgICA9IHJlcXVpcmUoJy4vX3VpZCcpOw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihrZXkpew0KICByZXR1cm4gc2hhcmVkW2tleV0gfHwgKHNoYXJlZFtrZXldID0gdWlkKGtleSkpOw0KfTsNCn0seyIuL19zaGFyZWQiOjE2MywiLi9fdWlkIjoxNzN9XSwxNjM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpDQogICwgU0hBUkVEID0gJ19fY29yZS1qc19zaGFyZWRfXycNCiAgLCBzdG9yZSAgPSBnbG9iYWxbU0hBUkVEXSB8fCAoZ2xvYmFsW1NIQVJFRF0gPSB7fSk7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGtleSl7DQogIHJldHVybiBzdG9yZVtrZXldIHx8IChzdG9yZVtrZXldID0ge30pOw0KfTsNCn0seyIuL19nbG9iYWwiOjEyM31dLDE2NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyA3LjMuMjAgU3BlY2llc0NvbnN0cnVjdG9yKE8sIGRlZmF1bHRDb25zdHJ1Y3RvcikNCnZhciBhbk9iamVjdCAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKQ0KICAsIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKQ0KICAsIFNQRUNJRVMgICA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKE8sIEQpew0KICB2YXIgQyA9IGFuT2JqZWN0KE8pLmNvbnN0cnVjdG9yLCBTOw0KICByZXR1cm4gQyA9PT0gdW5kZWZpbmVkIHx8IChTID0gYW5PYmplY3QoQylbU1BFQ0lFU10pID09IHVuZGVmaW5lZCA/IEQgOiBhRnVuY3Rpb24oUyk7DQp9Ow0KfSx7Ii4vX2EtZnVuY3Rpb24iOjEwNiwiLi9fYW4tb2JqZWN0IjoxMDksIi4vX3drcyI6MTc2fV0sMTY1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJykNCiAgLCBkZWZpbmVkICAgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7DQovLyB0cnVlICAtPiBTdHJpbmcjYXQNCi8vIGZhbHNlIC0+IFN0cmluZyNjb2RlUG9pbnRBdA0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihUT19TVFJJTkcpew0KICByZXR1cm4gZnVuY3Rpb24odGhhdCwgcG9zKXsNCiAgICB2YXIgcyA9IFN0cmluZyhkZWZpbmVkKHRoYXQpKQ0KICAgICAgLCBpID0gdG9JbnRlZ2VyKHBvcykNCiAgICAgICwgbCA9IHMubGVuZ3RoDQogICAgICAsIGEsIGI7DQogICAgaWYoaSA8IDAgfHwgaSA+PSBsKXJldHVybiBUT19TVFJJTkcgPyAnJyA6IHVuZGVmaW5lZDsNCiAgICBhID0gcy5jaGFyQ29kZUF0KGkpOw0KICAgIHJldHVybiBhIDwgMHhkODAwIHx8IGEgPiAweGRiZmYgfHwgaSArIDEgPT09IGwgfHwgKGIgPSBzLmNoYXJDb2RlQXQoaSArIDEpKSA8IDB4ZGMwMCB8fCBiID4gMHhkZmZmDQogICAgICA/IFRPX1NUUklORyA/IHMuY2hhckF0KGkpIDogYQ0KICAgICAgOiBUT19TVFJJTkcgPyBzLnNsaWNlKGksIGkgKyAyKSA6IChhIC0gMHhkODAwIDw8IDEwKSArIChiIC0gMHhkYzAwKSArIDB4MTAwMDA7DQogIH07DQp9Ow0KfSx7Ii4vX2RlZmluZWQiOjExNSwiLi9fdG8taW50ZWdlciI6MTY4fV0sMTY2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBjdHggICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19jdHgnKQ0KICAsIGludm9rZSAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2ludm9rZScpDQogICwgaHRtbCAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9faHRtbCcpDQogICwgY2VsICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpDQogICwgZ2xvYmFsICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykNCiAgLCBwcm9jZXNzICAgICAgICAgICAgPSBnbG9iYWwucHJvY2Vzcw0KICAsIHNldFRhc2sgICAgICAgICAgICA9IGdsb2JhbC5zZXRJbW1lZGlhdGUNCiAgLCBjbGVhclRhc2sgICAgICAgICAgPSBnbG9iYWwuY2xlYXJJbW1lZGlhdGUNCiAgLCBNZXNzYWdlQ2hhbm5lbCAgICAgPSBnbG9iYWwuTWVzc2FnZUNoYW5uZWwNCiAgLCBjb3VudGVyICAgICAgICAgICAgPSAwDQogICwgcXVldWUgICAgICAgICAgICAgID0ge30NCiAgLCBPTlJFQURZU1RBVEVDSEFOR0UgPSAnb25yZWFkeXN0YXRlY2hhbmdlJw0KICAsIGRlZmVyLCBjaGFubmVsLCBwb3J0Ow0KdmFyIHJ1biA9IGZ1bmN0aW9uKCl7DQogIHZhciBpZCA9ICt0aGlzOw0KICBpZihxdWV1ZS5oYXNPd25Qcm9wZXJ0eShpZCkpew0KICAgIHZhciBmbiA9IHF1ZXVlW2lkXTsNCiAgICBkZWxldGUgcXVldWVbaWRdOw0KICAgIGZuKCk7DQogIH0NCn07DQp2YXIgbGlzdGVuZXIgPSBmdW5jdGlvbihldmVudCl7DQogIHJ1bi5jYWxsKGV2ZW50LmRhdGEpOw0KfTsNCi8vIE5vZGUuanMgMC45KyAmIElFMTArIGhhcyBzZXRJbW1lZGlhdGUsIG90aGVyd2lzZToNCmlmKCFzZXRUYXNrIHx8ICFjbGVhclRhc2spew0KICBzZXRUYXNrID0gZnVuY3Rpb24gc2V0SW1tZWRpYXRlKGZuKXsNCiAgICB2YXIgYXJncyA9IFtdLCBpID0gMTsNCiAgICB3aGlsZShhcmd1bWVudHMubGVuZ3RoID4gaSlhcmdzLnB1c2goYXJndW1lbnRzW2krK10pOw0KICAgIHF1ZXVlWysrY291bnRlcl0gPSBmdW5jdGlvbigpew0KICAgICAgaW52b2tlKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbiksIGFyZ3MpOw0KICAgIH07DQogICAgZGVmZXIoY291bnRlcik7DQogICAgcmV0dXJuIGNvdW50ZXI7DQogIH07DQogIGNsZWFyVGFzayA9IGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGlkKXsNCiAgICBkZWxldGUgcXVldWVbaWRdOw0KICB9Ow0KICAvLyBOb2RlLmpzIDAuOC0NCiAgaWYocmVxdWlyZSgnLi9fY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnKXsNCiAgICBkZWZlciA9IGZ1bmN0aW9uKGlkKXsNCiAgICAgIHByb2Nlc3MubmV4dFRpY2soY3R4KHJ1biwgaWQsIDEpKTsNCiAgICB9Ow0KICAvLyBCcm93c2VycyB3aXRoIE1lc3NhZ2VDaGFubmVsLCBpbmNsdWRlcyBXZWJXb3JrZXJzDQogIH0gZWxzZSBpZihNZXNzYWdlQ2hhbm5lbCl7DQogICAgY2hhbm5lbCA9IG5ldyBNZXNzYWdlQ2hhbm5lbDsNCiAgICBwb3J0ICAgID0gY2hhbm5lbC5wb3J0MjsNCiAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGxpc3RlbmVyOw0KICAgIGRlZmVyID0gY3R4KHBvcnQucG9zdE1lc3NhZ2UsIHBvcnQsIDEpOw0KICAvLyBCcm93c2VycyB3aXRoIHBvc3RNZXNzYWdlLCBza2lwIFdlYldvcmtlcnMNCiAgLy8gSUU4IGhhcyBwb3N0TWVzc2FnZSwgYnV0IGl0J3Mgc3luYyAmIHR5cGVvZiBpdHMgcG9zdE1lc3NhZ2UgaXMgJ29iamVjdCcNCiAgfSBlbHNlIGlmKGdsb2JhbC5hZGRFdmVudExpc3RlbmVyICYmIHR5cGVvZiBwb3N0TWVzc2FnZSA9PSAnZnVuY3Rpb24nICYmICFnbG9iYWwuaW1wb3J0U2NyaXB0cyl7DQogICAgZGVmZXIgPSBmdW5jdGlvbihpZCl7DQogICAgICBnbG9iYWwucG9zdE1lc3NhZ2UoaWQgKyAnJywgJyonKTsNCiAgICB9Ow0KICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgbGlzdGVuZXIsIGZhbHNlKTsNCiAgLy8gSUU4LQ0KICB9IGVsc2UgaWYoT05SRUFEWVNUQVRFQ0hBTkdFIGluIGNlbCgnc2NyaXB0Jykpew0KICAgIGRlZmVyID0gZnVuY3Rpb24oaWQpew0KICAgICAgaHRtbC5hcHBlbmRDaGlsZChjZWwoJ3NjcmlwdCcpKVtPTlJFQURZU1RBVEVDSEFOR0VdID0gZnVuY3Rpb24oKXsNCiAgICAgICAgaHRtbC5yZW1vdmVDaGlsZCh0aGlzKTsNCiAgICAgICAgcnVuLmNhbGwoaWQpOw0KICAgICAgfTsNCiAgICB9Ow0KICAvLyBSZXN0IG9sZCBicm93c2Vycw0KICB9IGVsc2Ugew0KICAgIGRlZmVyID0gZnVuY3Rpb24oaWQpew0KICAgICAgc2V0VGltZW91dChjdHgocnVuLCBpZCwgMSksIDApOw0KICAgIH07DQogIH0NCn0NCm1vZHVsZS5leHBvcnRzID0gew0KICBzZXQ6ICAgc2V0VGFzaywNCiAgY2xlYXI6IGNsZWFyVGFzaw0KfTsNCn0seyIuL19jb2YiOjExMiwiLi9fY3R4IjoxMTQsIi4vX2RvbS1jcmVhdGUiOjExNywiLi9fZ2xvYmFsIjoxMjMsIi4vX2h0bWwiOjEyNiwiLi9faW52b2tlIjoxMjh9XSwxNjc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKQ0KICAsIG1heCAgICAgICA9IE1hdGgubWF4DQogICwgbWluICAgICAgID0gTWF0aC5taW47DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGluZGV4LCBsZW5ndGgpew0KICBpbmRleCA9IHRvSW50ZWdlcihpbmRleCk7DQogIHJldHVybiBpbmRleCA8IDAgPyBtYXgoaW5kZXggKyBsZW5ndGgsIDApIDogbWluKGluZGV4LCBsZW5ndGgpOw0KfTsNCn0seyIuL190by1pbnRlZ2VyIjoxNjh9XSwxNjg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gNy4xLjQgVG9JbnRlZ2VyDQp2YXIgY2VpbCAgPSBNYXRoLmNlaWwNCiAgLCBmbG9vciA9IE1hdGguZmxvb3I7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXsNCiAgcmV0dXJuIGlzTmFOKGl0ID0gK2l0KSA/IDAgOiAoaXQgPiAwID8gZmxvb3IgOiBjZWlsKShpdCk7DQp9Ow0KfSx7fV0sMTY5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIHRvIGluZGV4ZWQgb2JqZWN0LCB0b09iamVjdCB3aXRoIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgc3RyaW5ncw0KdmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0JykNCiAgLCBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpOw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7DQogIHJldHVybiBJT2JqZWN0KGRlZmluZWQoaXQpKTsNCn07DQp9LHsiLi9fZGVmaW5lZCI6MTE1LCIuL19pb2JqZWN0IjoxMjl9XSwxNzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gNy4xLjE1IFRvTGVuZ3RoDQp2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpDQogICwgbWluICAgICAgID0gTWF0aC5taW47DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXsNCiAgcmV0dXJuIGl0ID4gMCA/IG1pbih0b0ludGVnZXIoaXQpLCAweDFmZmZmZmZmZmZmZmZmKSA6IDA7IC8vIHBvdygyLCA1MykgLSAxID09IDkwMDcxOTkyNTQ3NDA5OTENCn07DQp9LHsiLi9fdG8taW50ZWdlciI6MTY4fV0sMTcxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDcuMS4xMyBUb09iamVjdChhcmd1bWVudCkNCnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpOw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7DQogIHJldHVybiBPYmplY3QoZGVmaW5lZChpdCkpOw0KfTsNCn0seyIuL19kZWZpbmVkIjoxMTV9XSwxNzI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gNy4xLjEgVG9QcmltaXRpdmUoaW5wdXQgWywgUHJlZmVycmVkVHlwZV0pDQp2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTsNCi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlDQovLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCwgUyl7DQogIGlmKCFpc09iamVjdChpdCkpcmV0dXJuIGl0Ow0KICB2YXIgZm4sIHZhbDsNCiAgaWYoUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSlyZXR1cm4gdmFsOw0KICBpZih0eXBlb2YgKGZuID0gaXQudmFsdWVPZikgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKXJldHVybiB2YWw7DQogIGlmKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKXJldHVybiB2YWw7DQogIHRocm93IFR5cGVFcnJvcigiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlIik7DQp9Ow0KfSx7Ii4vX2lzLW9iamVjdCI6MTMyfV0sMTczOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBpZCA9IDANCiAgLCBweCA9IE1hdGgucmFuZG9tKCk7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGtleSl7DQogIHJldHVybiAnU3ltYm9sKCcuY29uY2F0KGtleSA9PT0gdW5kZWZpbmVkID8gJycgOiBrZXksICcpXycsICgrK2lkICsgcHgpLnRvU3RyaW5nKDM2KSk7DQp9Ow0KfSx7fV0sMTc0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBnbG9iYWwgICAgICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpDQogICwgY29yZSAgICAgICAgICAgPSByZXF1aXJlKCcuL19jb3JlJykNCiAgLCBMSUJSQVJZICAgICAgICA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKQ0KICAsIHdrc0V4dCAgICAgICAgID0gcmVxdWlyZSgnLi9fd2tzLWV4dCcpDQogICwgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mOw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihuYW1lKXsNCiAgdmFyICRTeW1ib2wgPSBjb3JlLlN5bWJvbCB8fCAoY29yZS5TeW1ib2wgPSBMSUJSQVJZID8ge30gOiBnbG9iYWwuU3ltYm9sIHx8IHt9KTsNCiAgaWYobmFtZS5jaGFyQXQoMCkgIT0gJ18nICYmICEobmFtZSBpbiAkU3ltYm9sKSlkZWZpbmVQcm9wZXJ0eSgkU3ltYm9sLCBuYW1lLCB7dmFsdWU6IHdrc0V4dC5mKG5hbWUpfSk7DQp9Ow0KfSx7Ii4vX2NvcmUiOjExMywiLi9fZ2xvYmFsIjoxMjMsIi4vX2xpYnJhcnkiOjE0MCwiLi9fb2JqZWN0LWRwIjoxNDUsIi4vX3drcy1leHQiOjE3NX1dLDE3NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpleHBvcnRzLmYgPSByZXF1aXJlKCcuL193a3MnKTsNCn0seyIuL193a3MiOjE3Nn1dLDE3NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgc3RvcmUgICAgICA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCd3a3MnKQ0KICAsIHVpZCAgICAgICAgPSByZXF1aXJlKCcuL191aWQnKQ0KICAsIFN5bWJvbCAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5TeW1ib2wNCiAgLCBVU0VfU1lNQk9MID0gdHlwZW9mIFN5bWJvbCA9PSAnZnVuY3Rpb24nOw0KDQp2YXIgJGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG5hbWUpew0KICByZXR1cm4gc3RvcmVbbmFtZV0gfHwgKHN0b3JlW25hbWVdID0NCiAgICBVU0VfU1lNQk9MICYmIFN5bWJvbFtuYW1lXSB8fCAoVVNFX1NZTUJPTCA/IFN5bWJvbCA6IHVpZCkoJ1N5bWJvbC4nICsgbmFtZSkpOw0KfTsNCg0KJGV4cG9ydHMuc3RvcmUgPSBzdG9yZTsNCn0seyIuL19nbG9iYWwiOjEyMywiLi9fc2hhcmVkIjoxNjMsIi4vX3VpZCI6MTczfV0sMTc3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBjbGFzc29mICAgPSByZXF1aXJlKCcuL19jbGFzc29mJykNCiAgLCBJVEVSQVRPUiAgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKQ0KICAsIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpOw0KbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb3JlJykuZ2V0SXRlcmF0b3JNZXRob2QgPSBmdW5jdGlvbihpdCl7DQogIGlmKGl0ICE9IHVuZGVmaW5lZClyZXR1cm4gaXRbSVRFUkFUT1JdDQogICAgfHwgaXRbJ0BAaXRlcmF0b3InXQ0KICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07DQp9Ow0KfSx7Ii4vX2NsYXNzb2YiOjExMSwiLi9fY29yZSI6MTEzLCIuL19pdGVyYXRvcnMiOjEzOCwiLi9fd2tzIjoxNzZ9XSwxNzg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKQ0KICAsIHN0ZXAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19pdGVyLXN0ZXAnKQ0KICAsIEl0ZXJhdG9ycyAgICAgICAgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKQ0KICAsIHRvSU9iamVjdCAgICAgICAgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7DQoNCi8vIDIyLjEuMy40IEFycmF5LnByb3RvdHlwZS5lbnRyaWVzKCkNCi8vIDIyLjEuMy4xMyBBcnJheS5wcm90b3R5cGUua2V5cygpDQovLyAyMi4xLjMuMjkgQXJyYXkucHJvdG90eXBlLnZhbHVlcygpDQovLyAyMi4xLjMuMzAgQXJyYXkucHJvdG90eXBlW0BAaXRlcmF0b3JdKCkNCm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShBcnJheSwgJ0FycmF5JywgZnVuY3Rpb24oaXRlcmF0ZWQsIGtpbmQpew0KICB0aGlzLl90ID0gdG9JT2JqZWN0KGl0ZXJhdGVkKTsgLy8gdGFyZ2V0DQogIHRoaXMuX2kgPSAwOyAgICAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4DQogIHRoaXMuX2sgPSBraW5kOyAgICAgICAgICAgICAgICAvLyBraW5kDQovLyAyMi4xLjUuMi4xICVBcnJheUl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KCkNCn0sIGZ1bmN0aW9uKCl7DQogIHZhciBPICAgICA9IHRoaXMuX3QNCiAgICAsIGtpbmQgID0gdGhpcy5faw0KICAgICwgaW5kZXggPSB0aGlzLl9pKys7DQogIGlmKCFPIHx8IGluZGV4ID49IE8ubGVuZ3RoKXsNCiAgICB0aGlzLl90ID0gdW5kZWZpbmVkOw0KICAgIHJldHVybiBzdGVwKDEpOw0KICB9DQogIGlmKGtpbmQgPT0gJ2tleXMnICApcmV0dXJuIHN0ZXAoMCwgaW5kZXgpOw0KICBpZihraW5kID09ICd2YWx1ZXMnKXJldHVybiBzdGVwKDAsIE9baW5kZXhdKTsNCiAgcmV0dXJuIHN0ZXAoMCwgW2luZGV4LCBPW2luZGV4XV0pOw0KfSwgJ3ZhbHVlcycpOw0KDQovLyBhcmd1bWVudHNMaXN0W0BAaXRlcmF0b3JdIGlzICVBcnJheVByb3RvX3ZhbHVlcyUgKDkuNC40LjYsIDkuNC40LjcpDQpJdGVyYXRvcnMuQXJndW1lbnRzID0gSXRlcmF0b3JzLkFycmF5Ow0KDQphZGRUb1Vuc2NvcGFibGVzKCdrZXlzJyk7DQphZGRUb1Vuc2NvcGFibGVzKCd2YWx1ZXMnKTsNCmFkZFRvVW5zY29wYWJsZXMoJ2VudHJpZXMnKTsNCn0seyIuL19hZGQtdG8tdW5zY29wYWJsZXMiOjEwNywiLi9faXRlci1kZWZpbmUiOjEzNSwiLi9faXRlci1zdGVwIjoxMzcsIi4vX2l0ZXJhdG9ycyI6MTM4LCIuL190by1pb2JqZWN0IjoxNjl9XSwxNzk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMTkuMS4zLjEgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHNvdXJjZSkNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7DQoNCiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GLCAnT2JqZWN0Jywge2Fzc2lnbjogcmVxdWlyZSgnLi9fb2JqZWN0LWFzc2lnbicpfSk7DQp9LHsiLi9fZXhwb3J0IjoxMjAsIi4vX29iamVjdC1hc3NpZ24iOjE0M31dLDE4MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQovLyAxOS4xLjIuMiAvIDE1LjIuMy41IE9iamVjdC5jcmVhdGUoTyBbLCBQcm9wZXJ0aWVzXSkNCiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge2NyZWF0ZTogcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpfSk7DQp9LHsiLi9fZXhwb3J0IjoxMjAsIi4vX29iamVjdC1jcmVhdGUiOjE0NH1dLDE4MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpOw0KLy8gMTkuMS4yLjQgLyAxNS4yLjMuNiBPYmplY3QuZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcykNCiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyksICdPYmplY3QnLCB7ZGVmaW5lUHJvcGVydHk6IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmZ9KTsNCn0seyIuL19kZXNjcmlwdG9ycyI6MTE2LCIuL19leHBvcnQiOjEyMCwiLi9fb2JqZWN0LWRwIjoxNDV9XSwxODI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMTkuMS4yLjkgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pDQp2YXIgdG9PYmplY3QgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JykNCiAgLCAkZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7DQoNCnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZ2V0UHJvdG90eXBlT2YnLCBmdW5jdGlvbigpew0KICByZXR1cm4gZnVuY3Rpb24gZ2V0UHJvdG90eXBlT2YoaXQpew0KICAgIHJldHVybiAkZ2V0UHJvdG90eXBlT2YodG9PYmplY3QoaXQpKTsNCiAgfTsNCn0pOw0KfSx7Ii4vX29iamVjdC1ncG8iOjE1MSwiLi9fb2JqZWN0LXNhcCI6MTU1LCIuL190by1vYmplY3QiOjE3MX1dLDE4MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAxOS4xLjIuMTQgT2JqZWN0LmtleXMoTykNCnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpDQogICwgJGtleXMgICAgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpOw0KDQpyZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2tleXMnLCBmdW5jdGlvbigpew0KICByZXR1cm4gZnVuY3Rpb24ga2V5cyhpdCl7DQogICAgcmV0dXJuICRrZXlzKHRvT2JqZWN0KGl0KSk7DQogIH07DQp9KTsNCn0seyIuL19vYmplY3Qta2V5cyI6MTUzLCIuL19vYmplY3Qtc2FwIjoxNTUsIi4vX3RvLW9iamVjdCI6MTcxfV0sMTg0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDE5LjEuMy4xOSBPYmplY3Quc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpOw0KJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7c2V0UHJvdG90eXBlT2Y6IHJlcXVpcmUoJy4vX3NldC1wcm90bycpLnNldH0pOw0KfSx7Ii4vX2V4cG9ydCI6MTIwLCIuL19zZXQtcHJvdG8iOjE1OX1dLDE4NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bNjFdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7ImR1cCI6NjF9XSwxODY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyIExJQlJBUlkgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKQ0KICAsIGdsb2JhbCAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpDQogICwgY3R4ICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fY3R4JykNCiAgLCBjbGFzc29mICAgICAgICAgICAgPSByZXF1aXJlKCcuL19jbGFzc29mJykNCiAgLCAkZXhwb3J0ICAgICAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIGlzT2JqZWN0ICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpDQogICwgYW5PYmplY3QgICAgICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JykNCiAgLCBhRnVuY3Rpb24gICAgICAgICAgPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJykNCiAgLCBhbkluc3RhbmNlICAgICAgICAgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpDQogICwgZm9yT2YgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fZm9yLW9mJykNCiAgLCBzZXRQcm90byAgICAgICAgICAgPSByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQNCiAgLCBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJykNCiAgLCB0YXNrICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL190YXNrJykuc2V0DQogICwgbWljcm90YXNrICAgICAgICAgID0gcmVxdWlyZSgnLi9fbWljcm90YXNrJykoKQ0KICAsIFBST01JU0UgICAgICAgICAgICA9ICdQcm9taXNlJw0KICAsIFR5cGVFcnJvciAgICAgICAgICA9IGdsb2JhbC5UeXBlRXJyb3INCiAgLCBwcm9jZXNzICAgICAgICAgICAgPSBnbG9iYWwucHJvY2Vzcw0KICAsICRQcm9taXNlICAgICAgICAgICA9IGdsb2JhbFtQUk9NSVNFXQ0KICAsIHByb2Nlc3MgICAgICAgICAgICA9IGdsb2JhbC5wcm9jZXNzDQogICwgaXNOb2RlICAgICAgICAgICAgID0gY2xhc3NvZihwcm9jZXNzKSA9PSAncHJvY2VzcycNCiAgLCBlbXB0eSAgICAgICAgICAgICAgPSBmdW5jdGlvbigpeyAvKiBlbXB0eSAqLyB9DQogICwgSW50ZXJuYWwsIEdlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSwgV3JhcHBlcjsNCg0KdmFyIFVTRV9OQVRJVkUgPSAhIWZ1bmN0aW9uKCl7DQogIHRyeSB7DQogICAgLy8gY29ycmVjdCBzdWJjbGFzc2luZyB3aXRoIEBAc3BlY2llcyBzdXBwb3J0DQogICAgdmFyIHByb21pc2UgICAgID0gJFByb21pc2UucmVzb2x2ZSgxKQ0KICAgICAgLCBGYWtlUHJvbWlzZSA9IChwcm9taXNlLmNvbnN0cnVjdG9yID0ge30pW3JlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyldID0gZnVuY3Rpb24oZXhlYyl7IGV4ZWMoZW1wdHksIGVtcHR5KTsgfTsNCiAgICAvLyB1bmhhbmRsZWQgcmVqZWN0aW9ucyB0cmFja2luZyBzdXBwb3J0LCBOb2RlSlMgUHJvbWlzZSB3aXRob3V0IGl0IGZhaWxzIEBAc3BlY2llcyB0ZXN0DQogICAgcmV0dXJuIChpc05vZGUgfHwgdHlwZW9mIFByb21pc2VSZWplY3Rpb25FdmVudCA9PSAnZnVuY3Rpb24nKSAmJiBwcm9taXNlLnRoZW4oZW1wdHkpIGluc3RhbmNlb2YgRmFrZVByb21pc2U7DQogIH0gY2F0Y2goZSl7IC8qIGVtcHR5ICovIH0NCn0oKTsNCg0KLy8gaGVscGVycw0KdmFyIHNhbWVDb25zdHJ1Y3RvciA9IGZ1bmN0aW9uKGEsIGIpew0KICAvLyB3aXRoIGxpYnJhcnkgd3JhcHBlciBzcGVjaWFsIGNhc2UNCiAgcmV0dXJuIGEgPT09IGIgfHwgYSA9PT0gJFByb21pc2UgJiYgYiA9PT0gV3JhcHBlcjsNCn07DQp2YXIgaXNUaGVuYWJsZSA9IGZ1bmN0aW9uKGl0KXsNCiAgdmFyIHRoZW47DQogIHJldHVybiBpc09iamVjdChpdCkgJiYgdHlwZW9mICh0aGVuID0gaXQudGhlbikgPT0gJ2Z1bmN0aW9uJyA/IHRoZW4gOiBmYWxzZTsNCn07DQp2YXIgbmV3UHJvbWlzZUNhcGFiaWxpdHkgPSBmdW5jdGlvbihDKXsNCiAgcmV0dXJuIHNhbWVDb25zdHJ1Y3RvcigkUHJvbWlzZSwgQykNCiAgICA/IG5ldyBQcm9taXNlQ2FwYWJpbGl0eShDKQ0KICAgIDogbmV3IEdlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eShDKTsNCn07DQp2YXIgUHJvbWlzZUNhcGFiaWxpdHkgPSBHZW5lcmljUHJvbWlzZUNhcGFiaWxpdHkgPSBmdW5jdGlvbihDKXsNCiAgdmFyIHJlc29sdmUsIHJlamVjdDsNCiAgdGhpcy5wcm9taXNlID0gbmV3IEMoZnVuY3Rpb24oJCRyZXNvbHZlLCAkJHJlamVjdCl7DQogICAgaWYocmVzb2x2ZSAhPT0gdW5kZWZpbmVkIHx8IHJlamVjdCAhPT0gdW5kZWZpbmVkKXRocm93IFR5cGVFcnJvcignQmFkIFByb21pc2UgY29uc3RydWN0b3InKTsNCiAgICByZXNvbHZlID0gJCRyZXNvbHZlOw0KICAgIHJlamVjdCAgPSAkJHJlamVjdDsNCiAgfSk7DQogIHRoaXMucmVzb2x2ZSA9IGFGdW5jdGlvbihyZXNvbHZlKTsNCiAgdGhpcy5yZWplY3QgID0gYUZ1bmN0aW9uKHJlamVjdCk7DQp9Ow0KdmFyIHBlcmZvcm0gPSBmdW5jdGlvbihleGVjKXsNCiAgdHJ5IHsNCiAgICBleGVjKCk7DQogIH0gY2F0Y2goZSl7DQogICAgcmV0dXJuIHtlcnJvcjogZX07DQogIH0NCn07DQp2YXIgbm90aWZ5ID0gZnVuY3Rpb24ocHJvbWlzZSwgaXNSZWplY3Qpew0KICBpZihwcm9taXNlLl9uKXJldHVybjsNCiAgcHJvbWlzZS5fbiA9IHRydWU7DQogIHZhciBjaGFpbiA9IHByb21pc2UuX2M7DQogIG1pY3JvdGFzayhmdW5jdGlvbigpew0KICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3YNCiAgICAgICwgb2sgICAgPSBwcm9taXNlLl9zID09IDENCiAgICAgICwgaSAgICAgPSAwOw0KICAgIHZhciBydW4gPSBmdW5jdGlvbihyZWFjdGlvbil7DQogICAgICB2YXIgaGFuZGxlciA9IG9rID8gcmVhY3Rpb24ub2sgOiByZWFjdGlvbi5mYWlsDQogICAgICAgICwgcmVzb2x2ZSA9IHJlYWN0aW9uLnJlc29sdmUNCiAgICAgICAgLCByZWplY3QgID0gcmVhY3Rpb24ucmVqZWN0DQogICAgICAgICwgZG9tYWluICA9IHJlYWN0aW9uLmRvbWFpbg0KICAgICAgICAsIHJlc3VsdCwgdGhlbjsNCiAgICAgIHRyeSB7DQogICAgICAgIGlmKGhhbmRsZXIpew0KICAgICAgICAgIGlmKCFvayl7DQogICAgICAgICAgICBpZihwcm9taXNlLl9oID09IDIpb25IYW5kbGVVbmhhbmRsZWQocHJvbWlzZSk7DQogICAgICAgICAgICBwcm9taXNlLl9oID0gMTsNCiAgICAgICAgICB9DQogICAgICAgICAgaWYoaGFuZGxlciA9PT0gdHJ1ZSlyZXN1bHQgPSB2YWx1ZTsNCiAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgIGlmKGRvbWFpbilkb21haW4uZW50ZXIoKTsNCiAgICAgICAgICAgIHJlc3VsdCA9IGhhbmRsZXIodmFsdWUpOw0KICAgICAgICAgICAgaWYoZG9tYWluKWRvbWFpbi5leGl0KCk7DQogICAgICAgICAgfQ0KICAgICAgICAgIGlmKHJlc3VsdCA9PT0gcmVhY3Rpb24ucHJvbWlzZSl7DQogICAgICAgICAgICByZWplY3QoVHlwZUVycm9yKCdQcm9taXNlLWNoYWluIGN5Y2xlJykpOw0KICAgICAgICAgIH0gZWxzZSBpZih0aGVuID0gaXNUaGVuYWJsZShyZXN1bHQpKXsNCiAgICAgICAgICAgIHRoZW4uY2FsbChyZXN1bHQsIHJlc29sdmUsIHJlamVjdCk7DQogICAgICAgICAgfSBlbHNlIHJlc29sdmUocmVzdWx0KTsNCiAgICAgICAgfSBlbHNlIHJlamVjdCh2YWx1ZSk7DQogICAgICB9IGNhdGNoKGUpew0KICAgICAgICByZWplY3QoZSk7DQogICAgICB9DQogICAgfTsNCiAgICB3aGlsZShjaGFpbi5sZW5ndGggPiBpKXJ1bihjaGFpbltpKytdKTsgLy8gdmFyaWFibGUgbGVuZ3RoIC0gY2FuJ3QgdXNlIGZvckVhY2gNCiAgICBwcm9taXNlLl9jID0gW107DQogICAgcHJvbWlzZS5fbiA9IGZhbHNlOw0KICAgIGlmKGlzUmVqZWN0ICYmICFwcm9taXNlLl9oKW9uVW5oYW5kbGVkKHByb21pc2UpOw0KICB9KTsNCn07DQp2YXIgb25VbmhhbmRsZWQgPSBmdW5jdGlvbihwcm9taXNlKXsNCiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24oKXsNCiAgICB2YXIgdmFsdWUgPSBwcm9taXNlLl92DQogICAgICAsIGFicnVwdCwgaGFuZGxlciwgY29uc29sZTsNCiAgICBpZihpc1VuaGFuZGxlZChwcm9taXNlKSl7DQogICAgICBhYnJ1cHQgPSBwZXJmb3JtKGZ1bmN0aW9uKCl7DQogICAgICAgIGlmKGlzTm9kZSl7DQogICAgICAgICAgcHJvY2Vzcy5lbWl0KCd1bmhhbmRsZWRSZWplY3Rpb24nLCB2YWx1ZSwgcHJvbWlzZSk7DQogICAgICAgIH0gZWxzZSBpZihoYW5kbGVyID0gZ2xvYmFsLm9udW5oYW5kbGVkcmVqZWN0aW9uKXsNCiAgICAgICAgICBoYW5kbGVyKHtwcm9taXNlOiBwcm9taXNlLCByZWFzb246IHZhbHVlfSk7DQogICAgICAgIH0gZWxzZSBpZigoY29uc29sZSA9IGdsb2JhbC5jb25zb2xlKSAmJiBjb25zb2xlLmVycm9yKXsNCiAgICAgICAgICBjb25zb2xlLmVycm9yKCdVbmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb24nLCB2YWx1ZSk7DQogICAgICAgIH0NCiAgICAgIH0pOw0KICAgICAgLy8gQnJvd3NlcnMgc2hvdWxkIG5vdCB0cmlnZ2VyIGByZWplY3Rpb25IYW5kbGVkYCBldmVudCBpZiBpdCB3YXMgaGFuZGxlZCBoZXJlLCBOb2RlSlMgLSBzaG91bGQNCiAgICAgIHByb21pc2UuX2ggPSBpc05vZGUgfHwgaXNVbmhhbmRsZWQocHJvbWlzZSkgPyAyIDogMTsNCiAgICB9IHByb21pc2UuX2EgPSB1bmRlZmluZWQ7DQogICAgaWYoYWJydXB0KXRocm93IGFicnVwdC5lcnJvcjsNCiAgfSk7DQp9Ow0KdmFyIGlzVW5oYW5kbGVkID0gZnVuY3Rpb24ocHJvbWlzZSl7DQogIGlmKHByb21pc2UuX2ggPT0gMSlyZXR1cm4gZmFsc2U7DQogIHZhciBjaGFpbiA9IHByb21pc2UuX2EgfHwgcHJvbWlzZS5fYw0KICAgICwgaSAgICAgPSAwDQogICAgLCByZWFjdGlvbjsNCiAgd2hpbGUoY2hhaW4ubGVuZ3RoID4gaSl7DQogICAgcmVhY3Rpb24gPSBjaGFpbltpKytdOw0KICAgIGlmKHJlYWN0aW9uLmZhaWwgfHwgIWlzVW5oYW5kbGVkKHJlYWN0aW9uLnByb21pc2UpKXJldHVybiBmYWxzZTsNCiAgfSByZXR1cm4gdHJ1ZTsNCn07DQp2YXIgb25IYW5kbGVVbmhhbmRsZWQgPSBmdW5jdGlvbihwcm9taXNlKXsNCiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24oKXsNCiAgICB2YXIgaGFuZGxlcjsNCiAgICBpZihpc05vZGUpew0KICAgICAgcHJvY2Vzcy5lbWl0KCdyZWplY3Rpb25IYW5kbGVkJywgcHJvbWlzZSk7DQogICAgfSBlbHNlIGlmKGhhbmRsZXIgPSBnbG9iYWwub25yZWplY3Rpb25oYW5kbGVkKXsNCiAgICAgIGhhbmRsZXIoe3Byb21pc2U6IHByb21pc2UsIHJlYXNvbjogcHJvbWlzZS5fdn0pOw0KICAgIH0NCiAgfSk7DQp9Ow0KdmFyICRyZWplY3QgPSBmdW5jdGlvbih2YWx1ZSl7DQogIHZhciBwcm9taXNlID0gdGhpczsNCiAgaWYocHJvbWlzZS5fZClyZXR1cm47DQogIHByb21pc2UuX2QgPSB0cnVlOw0KICBwcm9taXNlID0gcHJvbWlzZS5fdyB8fCBwcm9taXNlOyAvLyB1bndyYXANCiAgcHJvbWlzZS5fdiA9IHZhbHVlOw0KICBwcm9taXNlLl9zID0gMjsNCiAgaWYoIXByb21pc2UuX2EpcHJvbWlzZS5fYSA9IHByb21pc2UuX2Muc2xpY2UoKTsNCiAgbm90aWZ5KHByb21pc2UsIHRydWUpOw0KfTsNCnZhciAkcmVzb2x2ZSA9IGZ1bmN0aW9uKHZhbHVlKXsNCiAgdmFyIHByb21pc2UgPSB0aGlzDQogICAgLCB0aGVuOw0KICBpZihwcm9taXNlLl9kKXJldHVybjsNCiAgcHJvbWlzZS5fZCA9IHRydWU7DQogIHByb21pc2UgPSBwcm9taXNlLl93IHx8IHByb21pc2U7IC8vIHVud3JhcA0KICB0cnkgew0KICAgIGlmKHByb21pc2UgPT09IHZhbHVlKXRocm93IFR5cGVFcnJvcigiUHJvbWlzZSBjYW4ndCBiZSByZXNvbHZlZCBpdHNlbGYiKTsNCiAgICBpZih0aGVuID0gaXNUaGVuYWJsZSh2YWx1ZSkpew0KICAgICAgbWljcm90YXNrKGZ1bmN0aW9uKCl7DQogICAgICAgIHZhciB3cmFwcGVyID0ge193OiBwcm9taXNlLCBfZDogZmFsc2V9OyAvLyB3cmFwDQogICAgICAgIHRyeSB7DQogICAgICAgICAgdGhlbi5jYWxsKHZhbHVlLCBjdHgoJHJlc29sdmUsIHdyYXBwZXIsIDEpLCBjdHgoJHJlamVjdCwgd3JhcHBlciwgMSkpOw0KICAgICAgICB9IGNhdGNoKGUpew0KICAgICAgICAgICRyZWplY3QuY2FsbCh3cmFwcGVyLCBlKTsNCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgfSBlbHNlIHsNCiAgICAgIHByb21pc2UuX3YgPSB2YWx1ZTsNCiAgICAgIHByb21pc2UuX3MgPSAxOw0KICAgICAgbm90aWZ5KHByb21pc2UsIGZhbHNlKTsNCiAgICB9DQogIH0gY2F0Y2goZSl7DQogICAgJHJlamVjdC5jYWxsKHtfdzogcHJvbWlzZSwgX2Q6IGZhbHNlfSwgZSk7IC8vIHdyYXANCiAgfQ0KfTsNCg0KLy8gY29uc3RydWN0b3IgcG9seWZpbGwNCmlmKCFVU0VfTkFUSVZFKXsNCiAgLy8gMjUuNC4zLjEgUHJvbWlzZShleGVjdXRvcikNCiAgJFByb21pc2UgPSBmdW5jdGlvbiBQcm9taXNlKGV4ZWN1dG9yKXsNCiAgICBhbkluc3RhbmNlKHRoaXMsICRQcm9taXNlLCBQUk9NSVNFLCAnX2gnKTsNCiAgICBhRnVuY3Rpb24oZXhlY3V0b3IpOw0KICAgIEludGVybmFsLmNhbGwodGhpcyk7DQogICAgdHJ5IHsNCiAgICAgIGV4ZWN1dG9yKGN0eCgkcmVzb2x2ZSwgdGhpcywgMSksIGN0eCgkcmVqZWN0LCB0aGlzLCAxKSk7DQogICAgfSBjYXRjaChlcnIpew0KICAgICAgJHJlamVjdC5jYWxsKHRoaXMsIGVycik7DQogICAgfQ0KICB9Ow0KICBJbnRlcm5hbCA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3Ipew0KICAgIHRoaXMuX2MgPSBbXTsgICAgICAgICAgICAgLy8gPC0gYXdhaXRpbmcgcmVhY3Rpb25zDQogICAgdGhpcy5fYSA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSBjaGVja2VkIGluIGlzVW5oYW5kbGVkIHJlYWN0aW9ucw0KICAgIHRoaXMuX3MgPSAwOyAgICAgICAgICAgICAgLy8gPC0gc3RhdGUNCiAgICB0aGlzLl9kID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIGRvbmUNCiAgICB0aGlzLl92ID0gdW5kZWZpbmVkOyAgICAgIC8vIDwtIHZhbHVlDQogICAgdGhpcy5faCA9IDA7ICAgICAgICAgICAgICAvLyA8LSByZWplY3Rpb24gc3RhdGUsIDAgLSBkZWZhdWx0LCAxIC0gaGFuZGxlZCwgMiAtIHVuaGFuZGxlZA0KICAgIHRoaXMuX24gPSBmYWxzZTsgICAgICAgICAgLy8gPC0gbm90aWZ5DQogIH07DQogIEludGVybmFsLnByb3RvdHlwZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpKCRQcm9taXNlLnByb3RvdHlwZSwgew0KICAgIC8vIDI1LjQuNS4zIFByb21pc2UucHJvdG90eXBlLnRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpDQogICAgdGhlbjogZnVuY3Rpb24gdGhlbihvbkZ1bGZpbGxlZCwgb25SZWplY3RlZCl7DQogICAgICB2YXIgcmVhY3Rpb24gICAgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eShzcGVjaWVzQ29uc3RydWN0b3IodGhpcywgJFByb21pc2UpKTsNCiAgICAgIHJlYWN0aW9uLm9rICAgICA9IHR5cGVvZiBvbkZ1bGZpbGxlZCA9PSAnZnVuY3Rpb24nID8gb25GdWxmaWxsZWQgOiB0cnVlOw0KICAgICAgcmVhY3Rpb24uZmFpbCAgID0gdHlwZW9mIG9uUmVqZWN0ZWQgPT0gJ2Z1bmN0aW9uJyAmJiBvblJlamVjdGVkOw0KICAgICAgcmVhY3Rpb24uZG9tYWluID0gaXNOb2RlID8gcHJvY2Vzcy5kb21haW4gOiB1bmRlZmluZWQ7DQogICAgICB0aGlzLl9jLnB1c2gocmVhY3Rpb24pOw0KICAgICAgaWYodGhpcy5fYSl0aGlzLl9hLnB1c2gocmVhY3Rpb24pOw0KICAgICAgaWYodGhpcy5fcylub3RpZnkodGhpcywgZmFsc2UpOw0KICAgICAgcmV0dXJuIHJlYWN0aW9uLnByb21pc2U7DQogICAgfSwNCiAgICAvLyAyNS40LjUuMSBQcm9taXNlLnByb3RvdHlwZS5jYXRjaChvblJlamVjdGVkKQ0KICAgICdjYXRjaCc6IGZ1bmN0aW9uKG9uUmVqZWN0ZWQpew0KICAgICAgcmV0dXJuIHRoaXMudGhlbih1bmRlZmluZWQsIG9uUmVqZWN0ZWQpOw0KICAgIH0NCiAgfSk7DQogIFByb21pc2VDYXBhYmlsaXR5ID0gZnVuY3Rpb24oKXsNCiAgICB2YXIgcHJvbWlzZSAgPSBuZXcgSW50ZXJuYWw7DQogICAgdGhpcy5wcm9taXNlID0gcHJvbWlzZTsNCiAgICB0aGlzLnJlc29sdmUgPSBjdHgoJHJlc29sdmUsIHByb21pc2UsIDEpOw0KICAgIHRoaXMucmVqZWN0ICA9IGN0eCgkcmVqZWN0LCBwcm9taXNlLCAxKTsNCiAgfTsNCn0NCg0KJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwge1Byb21pc2U6ICRQcm9taXNlfSk7DQpyZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpKCRQcm9taXNlLCBQUk9NSVNFKTsNCnJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoUFJPTUlTRSk7DQpXcmFwcGVyID0gcmVxdWlyZSgnLi9fY29yZScpW1BST01JU0VdOw0KDQovLyBzdGF0aWNzDQokZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCBQUk9NSVNFLCB7DQogIC8vIDI1LjQuNC41IFByb21pc2UucmVqZWN0KHIpDQogIHJlamVjdDogZnVuY3Rpb24gcmVqZWN0KHIpew0KICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkodGhpcykNCiAgICAgICwgJCRyZWplY3QgICA9IGNhcGFiaWxpdHkucmVqZWN0Ow0KICAgICQkcmVqZWN0KHIpOw0KICAgIHJldHVybiBjYXBhYmlsaXR5LnByb21pc2U7DQogIH0NCn0pOw0KJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoTElCUkFSWSB8fCAhVVNFX05BVElWRSksIFBST01JU0UsIHsNCiAgLy8gMjUuNC40LjYgUHJvbWlzZS5yZXNvbHZlKHgpDQogIHJlc29sdmU6IGZ1bmN0aW9uIHJlc29sdmUoeCl7DQogICAgLy8gaW5zdGFuY2VvZiBpbnN0ZWFkIG9mIGludGVybmFsIHNsb3QgY2hlY2sgYmVjYXVzZSB3ZSBzaG91bGQgZml4IGl0IHdpdGhvdXQgcmVwbGFjZW1lbnQgbmF0aXZlIFByb21pc2UgY29yZQ0KICAgIGlmKHggaW5zdGFuY2VvZiAkUHJvbWlzZSAmJiBzYW1lQ29uc3RydWN0b3IoeC5jb25zdHJ1Y3RvciwgdGhpcykpcmV0dXJuIHg7DQogICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSh0aGlzKQ0KICAgICAgLCAkJHJlc29sdmUgID0gY2FwYWJpbGl0eS5yZXNvbHZlOw0KICAgICQkcmVzb2x2ZSh4KTsNCiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlOw0KICB9DQp9KTsNCiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIShVU0VfTkFUSVZFICYmIHJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0JykoZnVuY3Rpb24oaXRlcil7DQogICRQcm9taXNlLmFsbChpdGVyKVsnY2F0Y2gnXShlbXB0eSk7DQp9KSksIFBST01JU0UsIHsNCiAgLy8gMjUuNC40LjEgUHJvbWlzZS5hbGwoaXRlcmFibGUpDQogIGFsbDogZnVuY3Rpb24gYWxsKGl0ZXJhYmxlKXsNCiAgICB2YXIgQyAgICAgICAgICA9IHRoaXMNCiAgICAgICwgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpDQogICAgICAsIHJlc29sdmUgICAgPSBjYXBhYmlsaXR5LnJlc29sdmUNCiAgICAgICwgcmVqZWN0ICAgICA9IGNhcGFiaWxpdHkucmVqZWN0Ow0KICAgIHZhciBhYnJ1cHQgPSBwZXJmb3JtKGZ1bmN0aW9uKCl7DQogICAgICB2YXIgdmFsdWVzICAgID0gW10NCiAgICAgICAgLCBpbmRleCAgICAgPSAwDQogICAgICAgICwgcmVtYWluaW5nID0gMTsNCiAgICAgIGZvck9mKGl0ZXJhYmxlLCBmYWxzZSwgZnVuY3Rpb24ocHJvbWlzZSl7DQogICAgICAgIHZhciAkaW5kZXggICAgICAgID0gaW5kZXgrKw0KICAgICAgICAgICwgYWxyZWFkeUNhbGxlZCA9IGZhbHNlOw0KICAgICAgICB2YWx1ZXMucHVzaCh1bmRlZmluZWQpOw0KICAgICAgICByZW1haW5pbmcrKzsNCiAgICAgICAgQy5yZXNvbHZlKHByb21pc2UpLnRoZW4oZnVuY3Rpb24odmFsdWUpew0KICAgICAgICAgIGlmKGFscmVhZHlDYWxsZWQpcmV0dXJuOw0KICAgICAgICAgIGFscmVhZHlDYWxsZWQgID0gdHJ1ZTsNCiAgICAgICAgICB2YWx1ZXNbJGluZGV4XSA9IHZhbHVlOw0KICAgICAgICAgIC0tcmVtYWluaW5nIHx8IHJlc29sdmUodmFsdWVzKTsNCiAgICAgICAgfSwgcmVqZWN0KTsNCiAgICAgIH0pOw0KICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpOw0KICAgIH0pOw0KICAgIGlmKGFicnVwdClyZWplY3QoYWJydXB0LmVycm9yKTsNCiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlOw0KICB9LA0KICAvLyAyNS40LjQuNCBQcm9taXNlLnJhY2UoaXRlcmFibGUpDQogIHJhY2U6IGZ1bmN0aW9uIHJhY2UoaXRlcmFibGUpew0KICAgIHZhciBDICAgICAgICAgID0gdGhpcw0KICAgICAgLCBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkoQykNCiAgICAgICwgcmVqZWN0ICAgICA9IGNhcGFiaWxpdHkucmVqZWN0Ow0KICAgIHZhciBhYnJ1cHQgPSBwZXJmb3JtKGZ1bmN0aW9uKCl7DQogICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uKHByb21pc2Upew0KICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihjYXBhYmlsaXR5LnJlc29sdmUsIHJlamVjdCk7DQogICAgICB9KTsNCiAgICB9KTsNCiAgICBpZihhYnJ1cHQpcmVqZWN0KGFicnVwdC5lcnJvcik7DQogICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTsNCiAgfQ0KfSk7DQp9LHsiLi9fYS1mdW5jdGlvbiI6MTA2LCIuL19hbi1pbnN0YW5jZSI6MTA4LCIuL19hbi1vYmplY3QiOjEwOSwiLi9fY2xhc3NvZiI6MTExLCIuL19jb3JlIjoxMTMsIi4vX2N0eCI6MTE0LCIuL19leHBvcnQiOjEyMCwiLi9fZm9yLW9mIjoxMjIsIi4vX2dsb2JhbCI6MTIzLCIuL19pcy1vYmplY3QiOjEzMiwiLi9faXRlci1kZXRlY3QiOjEzNiwiLi9fbGlicmFyeSI6MTQwLCIuL19taWNyb3Rhc2siOjE0MiwiLi9fcmVkZWZpbmUtYWxsIjoxNTcsIi4vX3NldC1wcm90byI6MTU5LCIuL19zZXQtc3BlY2llcyI6MTYwLCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6MTYxLCIuL19zcGVjaWVzLWNvbnN0cnVjdG9yIjoxNjQsIi4vX3Rhc2siOjE2NiwiLi9fd2tzIjoxNzZ9XSwxODc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyICRhdCAgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTsNCg0KLy8gMjEuMS4zLjI3IFN0cmluZy5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKQ0KcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShTdHJpbmcsICdTdHJpbmcnLCBmdW5jdGlvbihpdGVyYXRlZCl7DQogIHRoaXMuX3QgPSBTdHJpbmcoaXRlcmF0ZWQpOyAvLyB0YXJnZXQNCiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXgNCi8vIDIxLjEuNS4yLjEgJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KCkNCn0sIGZ1bmN0aW9uKCl7DQogIHZhciBPICAgICA9IHRoaXMuX3QNCiAgICAsIGluZGV4ID0gdGhpcy5faQ0KICAgICwgcG9pbnQ7DQogIGlmKGluZGV4ID49IE8ubGVuZ3RoKXJldHVybiB7dmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZX07DQogIHBvaW50ID0gJGF0KE8sIGluZGV4KTsNCiAgdGhpcy5faSArPSBwb2ludC5sZW5ndGg7DQogIHJldHVybiB7dmFsdWU6IHBvaW50LCBkb25lOiBmYWxzZX07DQp9KTsNCn0seyIuL19pdGVyLWRlZmluZSI6MTM1LCIuL19zdHJpbmctYXQiOjE2NX1dLDE4ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQovLyBFQ01BU2NyaXB0IDYgc3ltYm9scyBzaGltDQp2YXIgZ2xvYmFsICAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKQ0KICAsIGhhcyAgICAgICAgICAgID0gcmVxdWlyZSgnLi9faGFzJykNCiAgLCBERVNDUklQVE9SUyAgICA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykNCiAgLCAkZXhwb3J0ICAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgcmVkZWZpbmUgICAgICAgPSByZXF1aXJlKCcuL19yZWRlZmluZScpDQogICwgTUVUQSAgICAgICAgICAgPSByZXF1aXJlKCcuL19tZXRhJykuS0VZDQogICwgJGZhaWxzICAgICAgICAgPSByZXF1aXJlKCcuL19mYWlscycpDQogICwgc2hhcmVkICAgICAgICAgPSByZXF1aXJlKCcuL19zaGFyZWQnKQ0KICAsIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKQ0KICAsIHVpZCAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdWlkJykNCiAgLCB3a3MgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX3drcycpDQogICwgd2tzRXh0ICAgICAgICAgPSByZXF1aXJlKCcuL193a3MtZXh0JykNCiAgLCB3a3NEZWZpbmUgICAgICA9IHJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKQ0KICAsIGtleU9mICAgICAgICAgID0gcmVxdWlyZSgnLi9fa2V5b2YnKQ0KICAsIGVudW1LZXlzICAgICAgID0gcmVxdWlyZSgnLi9fZW51bS1rZXlzJykNCiAgLCBpc0FycmF5ICAgICAgICA9IHJlcXVpcmUoJy4vX2lzLWFycmF5JykNCiAgLCBhbk9iamVjdCAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpDQogICwgdG9JT2JqZWN0ICAgICAgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JykNCiAgLCB0b1ByaW1pdGl2ZSAgICA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpDQogICwgY3JlYXRlRGVzYyAgICAgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJykNCiAgLCBfY3JlYXRlICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKQ0KICAsIGdPUE5FeHQgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4tZXh0JykNCiAgLCAkR09QRCAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykNCiAgLCAkRFAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpDQogICwgJGtleXMgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpDQogICwgZ09QRCAgICAgICAgICAgPSAkR09QRC5mDQogICwgZFAgICAgICAgICAgICAgPSAkRFAuZg0KICAsIGdPUE4gICAgICAgICAgID0gZ09QTkV4dC5mDQogICwgJFN5bWJvbCAgICAgICAgPSBnbG9iYWwuU3ltYm9sDQogICwgJEpTT04gICAgICAgICAgPSBnbG9iYWwuSlNPTg0KICAsIF9zdHJpbmdpZnkgICAgID0gJEpTT04gJiYgJEpTT04uc3RyaW5naWZ5DQogICwgUFJPVE9UWVBFICAgICAgPSAncHJvdG90eXBlJw0KICAsIEhJRERFTiAgICAgICAgID0gd2tzKCdfaGlkZGVuJykNCiAgLCBUT19QUklNSVRJVkUgICA9IHdrcygndG9QcmltaXRpdmUnKQ0KICAsIGlzRW51bSAgICAgICAgID0ge30ucHJvcGVydHlJc0VudW1lcmFibGUNCiAgLCBTeW1ib2xSZWdpc3RyeSA9IHNoYXJlZCgnc3ltYm9sLXJlZ2lzdHJ5JykNCiAgLCBBbGxTeW1ib2xzICAgICA9IHNoYXJlZCgnc3ltYm9scycpDQogICwgT1BTeW1ib2xzICAgICAgPSBzaGFyZWQoJ29wLXN5bWJvbHMnKQ0KICAsIE9iamVjdFByb3RvICAgID0gT2JqZWN0W1BST1RPVFlQRV0NCiAgLCBVU0VfTkFUSVZFICAgICA9IHR5cGVvZiAkU3ltYm9sID09ICdmdW5jdGlvbicNCiAgLCBRT2JqZWN0ICAgICAgICA9IGdsb2JhbC5RT2JqZWN0Ow0KLy8gRG9uJ3QgdXNlIHNldHRlcnMgaW4gUXQgU2NyaXB0LCBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMTczDQp2YXIgc2V0dGVyID0gIVFPYmplY3QgfHwgIVFPYmplY3RbUFJPVE9UWVBFXSB8fCAhUU9iamVjdFtQUk9UT1RZUEVdLmZpbmRDaGlsZDsNCg0KLy8gZmFsbGJhY2sgZm9yIG9sZCBBbmRyb2lkLCBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9Njg3DQp2YXIgc2V0U3ltYm9sRGVzYyA9IERFU0NSSVBUT1JTICYmICRmYWlscyhmdW5jdGlvbigpew0KICByZXR1cm4gX2NyZWF0ZShkUCh7fSwgJ2EnLCB7DQogICAgZ2V0OiBmdW5jdGlvbigpeyByZXR1cm4gZFAodGhpcywgJ2EnLCB7dmFsdWU6IDd9KS5hOyB9DQogIH0pKS5hICE9IDc7DQp9KSA/IGZ1bmN0aW9uKGl0LCBrZXksIEQpew0KICB2YXIgcHJvdG9EZXNjID0gZ09QRChPYmplY3RQcm90bywga2V5KTsNCiAgaWYocHJvdG9EZXNjKWRlbGV0ZSBPYmplY3RQcm90b1trZXldOw0KICBkUChpdCwga2V5LCBEKTsNCiAgaWYocHJvdG9EZXNjICYmIGl0ICE9PSBPYmplY3RQcm90bylkUChPYmplY3RQcm90bywga2V5LCBwcm90b0Rlc2MpOw0KfSA6IGRQOw0KDQp2YXIgd3JhcCA9IGZ1bmN0aW9uKHRhZyl7DQogIHZhciBzeW0gPSBBbGxTeW1ib2xzW3RhZ10gPSBfY3JlYXRlKCRTeW1ib2xbUFJPVE9UWVBFXSk7DQogIHN5bS5fayA9IHRhZzsNCiAgcmV0dXJuIHN5bTsNCn07DQoNCnZhciBpc1N5bWJvbCA9IFVTRV9OQVRJVkUgJiYgdHlwZW9mICRTeW1ib2wuaXRlcmF0b3IgPT0gJ3N5bWJvbCcgPyBmdW5jdGlvbihpdCl7DQogIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCc7DQp9IDogZnVuY3Rpb24oaXQpew0KICByZXR1cm4gaXQgaW5zdGFuY2VvZiAkU3ltYm9sOw0KfTsNCg0KdmFyICRkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KGl0LCBrZXksIEQpew0KICBpZihpdCA9PT0gT2JqZWN0UHJvdG8pJGRlZmluZVByb3BlcnR5KE9QU3ltYm9scywga2V5LCBEKTsNCiAgYW5PYmplY3QoaXQpOw0KICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpOw0KICBhbk9iamVjdChEKTsNCiAgaWYoaGFzKEFsbFN5bWJvbHMsIGtleSkpew0KICAgIGlmKCFELmVudW1lcmFibGUpew0KICAgICAgaWYoIWhhcyhpdCwgSElEREVOKSlkUChpdCwgSElEREVOLCBjcmVhdGVEZXNjKDEsIHt9KSk7DQogICAgICBpdFtISURERU5dW2tleV0gPSB0cnVlOw0KICAgIH0gZWxzZSB7DQogICAgICBpZihoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKWl0W0hJRERFTl1ba2V5XSA9IGZhbHNlOw0KICAgICAgRCA9IF9jcmVhdGUoRCwge2VudW1lcmFibGU6IGNyZWF0ZURlc2MoMCwgZmFsc2UpfSk7DQogICAgfSByZXR1cm4gc2V0U3ltYm9sRGVzYyhpdCwga2V5LCBEKTsNCiAgfSByZXR1cm4gZFAoaXQsIGtleSwgRCk7DQp9Ow0KdmFyICRkZWZpbmVQcm9wZXJ0aWVzID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhpdCwgUCl7DQogIGFuT2JqZWN0KGl0KTsNCiAgdmFyIGtleXMgPSBlbnVtS2V5cyhQID0gdG9JT2JqZWN0KFApKQ0KICAgICwgaSAgICA9IDANCiAgICAsIGwgPSBrZXlzLmxlbmd0aA0KICAgICwga2V5Ow0KICB3aGlsZShsID4gaSkkZGVmaW5lUHJvcGVydHkoaXQsIGtleSA9IGtleXNbaSsrXSwgUFtrZXldKTsNCiAgcmV0dXJuIGl0Ow0KfTsNCnZhciAkY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGl0LCBQKXsNCiAgcmV0dXJuIFAgPT09IHVuZGVmaW5lZCA/IF9jcmVhdGUoaXQpIDogJGRlZmluZVByb3BlcnRpZXMoX2NyZWF0ZShpdCksIFApOw0KfTsNCnZhciAkcHJvcGVydHlJc0VudW1lcmFibGUgPSBmdW5jdGlvbiBwcm9wZXJ0eUlzRW51bWVyYWJsZShrZXkpew0KICB2YXIgRSA9IGlzRW51bS5jYWxsKHRoaXMsIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSkpOw0KICBpZih0aGlzID09PSBPYmplY3RQcm90byAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhaGFzKE9QU3ltYm9scywga2V5KSlyZXR1cm4gZmFsc2U7DQogIHJldHVybiBFIHx8ICFoYXModGhpcywga2V5KSB8fCAhaGFzKEFsbFN5bWJvbHMsIGtleSkgfHwgaGFzKHRoaXMsIEhJRERFTikgJiYgdGhpc1tISURERU5dW2tleV0gPyBFIDogdHJ1ZTsNCn07DQp2YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihpdCwga2V5KXsNCiAgaXQgID0gdG9JT2JqZWN0KGl0KTsNCiAga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKTsNCiAgaWYoaXQgPT09IE9iamVjdFByb3RvICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICFoYXMoT1BTeW1ib2xzLCBrZXkpKXJldHVybjsNCiAgdmFyIEQgPSBnT1BEKGl0LCBrZXkpOw0KICBpZihEICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICEoaGFzKGl0LCBISURERU4pICYmIGl0W0hJRERFTl1ba2V5XSkpRC5lbnVtZXJhYmxlID0gdHJ1ZTsNCiAgcmV0dXJuIEQ7DQp9Ow0KdmFyICRnZXRPd25Qcm9wZXJ0eU5hbWVzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCl7DQogIHZhciBuYW1lcyAgPSBnT1BOKHRvSU9iamVjdChpdCkpDQogICAgLCByZXN1bHQgPSBbXQ0KICAgICwgaSAgICAgID0gMA0KICAgICwga2V5Ow0KICB3aGlsZShuYW1lcy5sZW5ndGggPiBpKXsNCiAgICBpZighaGFzKEFsbFN5bWJvbHMsIGtleSA9IG5hbWVzW2krK10pICYmIGtleSAhPSBISURERU4gJiYga2V5ICE9IE1FVEEpcmVzdWx0LnB1c2goa2V5KTsNCiAgfSByZXR1cm4gcmVzdWx0Ow0KfTsNCnZhciAkZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGl0KXsNCiAgdmFyIElTX09QICA9IGl0ID09PSBPYmplY3RQcm90bw0KICAgICwgbmFtZXMgID0gZ09QTihJU19PUCA/IE9QU3ltYm9scyA6IHRvSU9iamVjdChpdCkpDQogICAgLCByZXN1bHQgPSBbXQ0KICAgICwgaSAgICAgID0gMA0KICAgICwga2V5Ow0KICB3aGlsZShuYW1lcy5sZW5ndGggPiBpKXsNCiAgICBpZihoYXMoQWxsU3ltYm9scywga2V5ID0gbmFtZXNbaSsrXSkgJiYgKElTX09QID8gaGFzKE9iamVjdFByb3RvLCBrZXkpIDogdHJ1ZSkpcmVzdWx0LnB1c2goQWxsU3ltYm9sc1trZXldKTsNCiAgfSByZXR1cm4gcmVzdWx0Ow0KfTsNCg0KLy8gMTkuNC4xLjEgU3ltYm9sKFtkZXNjcmlwdGlvbl0pDQppZighVVNFX05BVElWRSl7DQogICRTeW1ib2wgPSBmdW5jdGlvbiBTeW1ib2woKXsNCiAgICBpZih0aGlzIGluc3RhbmNlb2YgJFN5bWJvbCl0aHJvdyBUeXBlRXJyb3IoJ1N5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciEnKTsNCiAgICB2YXIgdGFnID0gdWlkKGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTsNCiAgICB2YXIgJHNldCA9IGZ1bmN0aW9uKHZhbHVlKXsNCiAgICAgIGlmKHRoaXMgPT09IE9iamVjdFByb3RvKSRzZXQuY2FsbChPUFN5bWJvbHMsIHZhbHVlKTsNCiAgICAgIGlmKGhhcyh0aGlzLCBISURERU4pICYmIGhhcyh0aGlzW0hJRERFTl0sIHRhZykpdGhpc1tISURERU5dW3RhZ10gPSBmYWxzZTsNCiAgICAgIHNldFN5bWJvbERlc2ModGhpcywgdGFnLCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7DQogICAgfTsNCiAgICBpZihERVNDUklQVE9SUyAmJiBzZXR0ZXIpc2V0U3ltYm9sRGVzYyhPYmplY3RQcm90bywgdGFnLCB7Y29uZmlndXJhYmxlOiB0cnVlLCBzZXQ6ICRzZXR9KTsNCiAgICByZXR1cm4gd3JhcCh0YWcpOw0KICB9Ow0KICByZWRlZmluZSgkU3ltYm9sW1BST1RPVFlQRV0sICd0b1N0cmluZycsIGZ1bmN0aW9uIHRvU3RyaW5nKCl7DQogICAgcmV0dXJuIHRoaXMuX2s7DQogIH0pOw0KDQogICRHT1BELmYgPSAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOw0KICAkRFAuZiAgID0gJGRlZmluZVByb3BlcnR5Ow0KICByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmYgPSBnT1BORXh0LmYgPSAkZ2V0T3duUHJvcGVydHlOYW1lczsNCiAgcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpLmYgID0gJHByb3BlcnR5SXNFbnVtZXJhYmxlOw0KICByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpLmYgPSAkZ2V0T3duUHJvcGVydHlTeW1ib2xzOw0KDQogIGlmKERFU0NSSVBUT1JTICYmICFyZXF1aXJlKCcuL19saWJyYXJ5Jykpew0KICAgIHJlZGVmaW5lKE9iamVjdFByb3RvLCAncHJvcGVydHlJc0VudW1lcmFibGUnLCAkcHJvcGVydHlJc0VudW1lcmFibGUsIHRydWUpOw0KICB9DQoNCiAgd2tzRXh0LmYgPSBmdW5jdGlvbihuYW1lKXsNCiAgICByZXR1cm4gd3JhcCh3a3MobmFtZSkpOw0KICB9DQp9DQoNCiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsIHtTeW1ib2w6ICRTeW1ib2x9KTsNCg0KZm9yKHZhciBzeW1ib2xzID0gKA0KICAvLyAxOS40LjIuMiwgMTkuNC4yLjMsIDE5LjQuMi40LCAxOS40LjIuNiwgMTkuNC4yLjgsIDE5LjQuMi45LCAxOS40LjIuMTAsIDE5LjQuMi4xMSwgMTkuNC4yLjEyLCAxOS40LjIuMTMsIDE5LjQuMi4xNA0KICAnaGFzSW5zdGFuY2UsaXNDb25jYXRTcHJlYWRhYmxlLGl0ZXJhdG9yLG1hdGNoLHJlcGxhY2Usc2VhcmNoLHNwZWNpZXMsc3BsaXQsdG9QcmltaXRpdmUsdG9TdHJpbmdUYWcsdW5zY29wYWJsZXMnDQopLnNwbGl0KCcsJyksIGkgPSAwOyBzeW1ib2xzLmxlbmd0aCA+IGk7ICl3a3Moc3ltYm9sc1tpKytdKTsNCg0KZm9yKHZhciBzeW1ib2xzID0gJGtleXMod2tzLnN0b3JlKSwgaSA9IDA7IHN5bWJvbHMubGVuZ3RoID4gaTsgKXdrc0RlZmluZShzeW1ib2xzW2krK10pOw0KDQokZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCAnU3ltYm9sJywgew0KICAvLyAxOS40LjIuMSBTeW1ib2wuZm9yKGtleSkNCiAgJ2Zvcic6IGZ1bmN0aW9uKGtleSl7DQogICAgcmV0dXJuIGhhcyhTeW1ib2xSZWdpc3RyeSwga2V5ICs9ICcnKQ0KICAgICAgPyBTeW1ib2xSZWdpc3RyeVtrZXldDQogICAgICA6IFN5bWJvbFJlZ2lzdHJ5W2tleV0gPSAkU3ltYm9sKGtleSk7DQogIH0sDQogIC8vIDE5LjQuMi41IFN5bWJvbC5rZXlGb3Ioc3ltKQ0KICBrZXlGb3I6IGZ1bmN0aW9uIGtleUZvcihrZXkpew0KICAgIGlmKGlzU3ltYm9sKGtleSkpcmV0dXJuIGtleU9mKFN5bWJvbFJlZ2lzdHJ5LCBrZXkpOw0KICAgIHRocm93IFR5cGVFcnJvcihrZXkgKyAnIGlzIG5vdCBhIHN5bWJvbCEnKTsNCiAgfSwNCiAgdXNlU2V0dGVyOiBmdW5jdGlvbigpeyBzZXR0ZXIgPSB0cnVlOyB9LA0KICB1c2VTaW1wbGU6IGZ1bmN0aW9uKCl7IHNldHRlciA9IGZhbHNlOyB9DQp9KTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgJ09iamVjdCcsIHsNCiAgLy8gMTkuMS4yLjIgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKQ0KICBjcmVhdGU6ICRjcmVhdGUsDQogIC8vIDE5LjEuMi40IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKQ0KICBkZWZpbmVQcm9wZXJ0eTogJGRlZmluZVByb3BlcnR5LA0KICAvLyAxOS4xLjIuMyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKQ0KICBkZWZpbmVQcm9wZXJ0aWVzOiAkZGVmaW5lUHJvcGVydGllcywNCiAgLy8gMTkuMS4yLjYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKQ0KICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsDQogIC8vIDE5LjEuMi43IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pDQogIGdldE93blByb3BlcnR5TmFtZXM6ICRnZXRPd25Qcm9wZXJ0eU5hbWVzLA0KICAvLyAxOS4xLjIuOCBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKE8pDQogIGdldE93blByb3BlcnR5U3ltYm9sczogJGdldE93blByb3BlcnR5U3ltYm9scw0KfSk7DQoNCi8vIDI0LjMuMiBKU09OLnN0cmluZ2lmeSh2YWx1ZSBbLCByZXBsYWNlciBbLCBzcGFjZV1dKQ0KJEpTT04gJiYgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoIVVTRV9OQVRJVkUgfHwgJGZhaWxzKGZ1bmN0aW9uKCl7DQogIHZhciBTID0gJFN5bWJvbCgpOw0KICAvLyBNUyBFZGdlIGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyB7fQ0KICAvLyBXZWJLaXQgY29udmVydHMgc3ltYm9sIHZhbHVlcyB0byBKU09OIGFzIG51bGwNCiAgLy8gVjggdGhyb3dzIG9uIGJveGVkIHN5bWJvbHMNCiAgcmV0dXJuIF9zdHJpbmdpZnkoW1NdKSAhPSAnW251bGxdJyB8fCBfc3RyaW5naWZ5KHthOiBTfSkgIT0gJ3t9JyB8fCBfc3RyaW5naWZ5KE9iamVjdChTKSkgIT0gJ3t9JzsNCn0pKSwgJ0pTT04nLCB7DQogIHN0cmluZ2lmeTogZnVuY3Rpb24gc3RyaW5naWZ5KGl0KXsNCiAgICBpZihpdCA9PT0gdW5kZWZpbmVkIHx8IGlzU3ltYm9sKGl0KSlyZXR1cm47IC8vIElFOCByZXR1cm5zIHN0cmluZyBvbiB1bmRlZmluZWQNCiAgICB2YXIgYXJncyA9IFtpdF0NCiAgICAgICwgaSAgICA9IDENCiAgICAgICwgcmVwbGFjZXIsICRyZXBsYWNlcjsNCiAgICB3aGlsZShhcmd1bWVudHMubGVuZ3RoID4gaSlhcmdzLnB1c2goYXJndW1lbnRzW2krK10pOw0KICAgIHJlcGxhY2VyID0gYXJnc1sxXTsNCiAgICBpZih0eXBlb2YgcmVwbGFjZXIgPT0gJ2Z1bmN0aW9uJykkcmVwbGFjZXIgPSByZXBsYWNlcjsNCiAgICBpZigkcmVwbGFjZXIgfHwgIWlzQXJyYXkocmVwbGFjZXIpKXJlcGxhY2VyID0gZnVuY3Rpb24oa2V5LCB2YWx1ZSl7DQogICAgICBpZigkcmVwbGFjZXIpdmFsdWUgPSAkcmVwbGFjZXIuY2FsbCh0aGlzLCBrZXksIHZhbHVlKTsNCiAgICAgIGlmKCFpc1N5bWJvbCh2YWx1ZSkpcmV0dXJuIHZhbHVlOw0KICAgIH07DQogICAgYXJnc1sxXSA9IHJlcGxhY2VyOw0KICAgIHJldHVybiBfc3RyaW5naWZ5LmFwcGx5KCRKU09OLCBhcmdzKTsNCiAgfQ0KfSk7DQoNCi8vIDE5LjQuMy40IFN5bWJvbC5wcm90b3R5cGVbQEB0b1ByaW1pdGl2ZV0oaGludCkNCiRTeW1ib2xbUFJPVE9UWVBFXVtUT19QUklNSVRJVkVdIHx8IHJlcXVpcmUoJy4vX2hpZGUnKSgkU3ltYm9sW1BST1RPVFlQRV0sIFRPX1BSSU1JVElWRSwgJFN5bWJvbFtQUk9UT1RZUEVdLnZhbHVlT2YpOw0KLy8gMTkuNC4zLjUgU3ltYm9sLnByb3RvdHlwZVtAQHRvU3RyaW5nVGFnXQ0Kc2V0VG9TdHJpbmdUYWcoJFN5bWJvbCwgJ1N5bWJvbCcpOw0KLy8gMjAuMi4xLjkgTWF0aFtAQHRvU3RyaW5nVGFnXQ0Kc2V0VG9TdHJpbmdUYWcoTWF0aCwgJ01hdGgnLCB0cnVlKTsNCi8vIDI0LjMuMyBKU09OW0BAdG9TdHJpbmdUYWddDQpzZXRUb1N0cmluZ1RhZyhnbG9iYWwuSlNPTiwgJ0pTT04nLCB0cnVlKTsNCn0seyIuL19hbi1vYmplY3QiOjEwOSwiLi9fZGVzY3JpcHRvcnMiOjExNiwiLi9fZW51bS1rZXlzIjoxMTksIi4vX2V4cG9ydCI6MTIwLCIuL19mYWlscyI6MTIxLCIuL19nbG9iYWwiOjEyMywiLi9faGFzIjoxMjQsIi4vX2hpZGUiOjEyNSwiLi9faXMtYXJyYXkiOjEzMSwiLi9fa2V5b2YiOjEzOSwiLi9fbGlicmFyeSI6MTQwLCIuL19tZXRhIjoxNDEsIi4vX29iamVjdC1jcmVhdGUiOjE0NCwiLi9fb2JqZWN0LWRwIjoxNDUsIi4vX29iamVjdC1nb3BkIjoxNDcsIi4vX29iamVjdC1nb3BuIjoxNDksIi4vX29iamVjdC1nb3BuLWV4dCI6MTQ4LCIuL19vYmplY3QtZ29wcyI6MTUwLCIuL19vYmplY3Qta2V5cyI6MTUzLCIuL19vYmplY3QtcGllIjoxNTQsIi4vX3Byb3BlcnR5LWRlc2MiOjE1NiwiLi9fcmVkZWZpbmUiOjE1OCwiLi9fc2V0LXRvLXN0cmluZy10YWciOjE2MSwiLi9fc2hhcmVkIjoxNjMsIi4vX3RvLWlvYmplY3QiOjE2OSwiLi9fdG8tcHJpbWl0aXZlIjoxNzIsIi4vX3VpZCI6MTczLCIuL193a3MiOjE3NiwiLi9fd2tzLWRlZmluZSI6MTc0LCIuL193a3MtZXh0IjoxNzV9XSwxODk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KcmVxdWlyZSgnLi9fd2tzLWRlZmluZScpKCdhc3luY0l0ZXJhdG9yJyk7DQp9LHsiLi9fd2tzLWRlZmluZSI6MTc0fV0sMTkwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKSgnb2JzZXJ2YWJsZScpOw0KfSx7Ii4vX3drcy1kZWZpbmUiOjE3NH1dLDE5MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpyZXF1aXJlKCcuL2VzNi5hcnJheS5pdGVyYXRvcicpOw0KdmFyIGdsb2JhbCAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKQ0KICAsIGhpZGUgICAgICAgICAgPSByZXF1aXJlKCcuL19oaWRlJykNCiAgLCBJdGVyYXRvcnMgICAgID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJykNCiAgLCBUT19TVFJJTkdfVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7DQoNCmZvcih2YXIgY29sbGVjdGlvbnMgPSBbJ05vZGVMaXN0JywgJ0RPTVRva2VuTGlzdCcsICdNZWRpYUxpc3QnLCAnU3R5bGVTaGVldExpc3QnLCAnQ1NTUnVsZUxpc3QnXSwgaSA9IDA7IGkgPCA1OyBpKyspew0KICB2YXIgTkFNRSAgICAgICA9IGNvbGxlY3Rpb25zW2ldDQogICAgLCBDb2xsZWN0aW9uID0gZ2xvYmFsW05BTUVdDQogICAgLCBwcm90byAgICAgID0gQ29sbGVjdGlvbiAmJiBDb2xsZWN0aW9uLnByb3RvdHlwZTsNCiAgaWYocHJvdG8gJiYgIXByb3RvW1RPX1NUUklOR19UQUddKWhpZGUocHJvdG8sIFRPX1NUUklOR19UQUcsIE5BTUUpOw0KICBJdGVyYXRvcnNbTkFNRV0gPSBJdGVyYXRvcnMuQXJyYXk7DQp9DQp9LHsiLi9fZ2xvYmFsIjoxMjMsIi4vX2hpZGUiOjEyNSwiLi9faXRlcmF0b3JzIjoxMzgsIi4vX3drcyI6MTc2LCIuL2VzNi5hcnJheS5pdGVyYXRvciI6MTc4fV0sMTkyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMDZdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7ImR1cCI6MTA2fV0sMTkzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTsNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQsIG1zZyl7DQogIGlmKHR5cGVvZiBpdCAhPSAnbnVtYmVyJyAmJiBjb2YoaXQpICE9ICdOdW1iZXInKXRocm93IFR5cGVFcnJvcihtc2cpOw0KICByZXR1cm4gK2l0Ow0KfTsNCn0seyIuL19jb2YiOjIwN31dLDE5NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyMi4xLjMuMzEgQXJyYXkucHJvdG90eXBlW0BAdW5zY29wYWJsZXNdDQp2YXIgVU5TQ09QQUJMRVMgPSByZXF1aXJlKCcuL193a3MnKSgndW5zY29wYWJsZXMnKQ0KICAsIEFycmF5UHJvdG8gID0gQXJyYXkucHJvdG90eXBlOw0KaWYoQXJyYXlQcm90b1tVTlNDT1BBQkxFU10gPT0gdW5kZWZpbmVkKXJlcXVpcmUoJy4vX2hpZGUnKShBcnJheVByb3RvLCBVTlNDT1BBQkxFUywge30pOw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihrZXkpew0KICBBcnJheVByb3RvW1VOU0NPUEFCTEVTXVtrZXldID0gdHJ1ZTsNCn07DQp9LHsiLi9faGlkZSI6MjI5LCIuL193a3MiOjMwNn1dLDE5NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTA4XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyJkdXAiOjEwOH1dLDE5NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTA5XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19pcy1vYmplY3QiOjIzOCwiZHVwIjoxMDl9XSwxOTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjIuMS4zLjMgQXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCwgZW5kID0gdGhpcy5sZW5ndGgpDQondXNlIHN0cmljdCc7DQp2YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKQ0KICAsIHRvSW5kZXggID0gcmVxdWlyZSgnLi9fdG8taW5kZXgnKQ0KICAsIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7DQoNCm1vZHVsZS5leHBvcnRzID0gW10uY29weVdpdGhpbiB8fCBmdW5jdGlvbiBjb3B5V2l0aGluKHRhcmdldC8qPSAwKi8sIHN0YXJ0Lyo9IDAsIGVuZCA9IEBsZW5ndGgqLyl7DQogIHZhciBPICAgICA9IHRvT2JqZWN0KHRoaXMpDQogICAgLCBsZW4gICA9IHRvTGVuZ3RoKE8ubGVuZ3RoKQ0KICAgICwgdG8gICAgPSB0b0luZGV4KHRhcmdldCwgbGVuKQ0KICAgICwgZnJvbSAgPSB0b0luZGV4KHN0YXJ0LCBsZW4pDQogICAgLCBlbmQgICA9IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkDQogICAgLCBjb3VudCA9IE1hdGgubWluKChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IHRvSW5kZXgoZW5kLCBsZW4pKSAtIGZyb20sIGxlbiAtIHRvKQ0KICAgICwgaW5jICAgPSAxOw0KICBpZihmcm9tIDwgdG8gJiYgdG8gPCBmcm9tICsgY291bnQpew0KICAgIGluYyAgPSAtMTsNCiAgICBmcm9tICs9IGNvdW50IC0gMTsNCiAgICB0byAgICs9IGNvdW50IC0gMTsNCiAgfQ0KICB3aGlsZShjb3VudC0tID4gMCl7DQogICAgaWYoZnJvbSBpbiBPKU9bdG9dID0gT1tmcm9tXTsNCiAgICBlbHNlIGRlbGV0ZSBPW3RvXTsNCiAgICB0byAgICs9IGluYzsNCiAgICBmcm9tICs9IGluYzsNCiAgfSByZXR1cm4gTzsNCn07DQp9LHsiLi9fdG8taW5kZXgiOjI5NCwiLi9fdG8tbGVuZ3RoIjoyOTcsIi4vX3RvLW9iamVjdCI6Mjk4fV0sMTk4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIyLjEuMy42IEFycmF5LnByb3RvdHlwZS5maWxsKHZhbHVlLCBzdGFydCA9IDAsIGVuZCA9IHRoaXMubGVuZ3RoKQ0KJ3VzZSBzdHJpY3QnOw0KdmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JykNCiAgLCB0b0luZGV4ICA9IHJlcXVpcmUoJy4vX3RvLWluZGV4JykNCiAgLCB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpOw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmaWxsKHZhbHVlIC8qLCBzdGFydCA9IDAsIGVuZCA9IEBsZW5ndGggKi8pew0KICB2YXIgTyAgICAgID0gdG9PYmplY3QodGhpcykNCiAgICAsIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKQ0KICAgICwgYUxlbiAgID0gYXJndW1lbnRzLmxlbmd0aA0KICAgICwgaW5kZXggID0gdG9JbmRleChhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgbGVuZ3RoKQ0KICAgICwgZW5kICAgID0gYUxlbiA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQNCiAgICAsIGVuZFBvcyA9IGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuZ3RoIDogdG9JbmRleChlbmQsIGxlbmd0aCk7DQogIHdoaWxlKGVuZFBvcyA+IGluZGV4KU9baW5kZXgrK10gPSB2YWx1ZTsNCiAgcmV0dXJuIE87DQp9Ow0KfSx7Ii4vX3RvLWluZGV4IjoyOTQsIi4vX3RvLWxlbmd0aCI6Mjk3LCIuL190by1vYmplY3QiOjI5OH1dLDE5OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTsNCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdGVyLCBJVEVSQVRPUil7DQogIHZhciByZXN1bHQgPSBbXTsNCiAgZm9yT2YoaXRlciwgZmFsc2UsIHJlc3VsdC5wdXNoLCByZXN1bHQsIElURVJBVE9SKTsNCiAgcmV0dXJuIHJlc3VsdDsNCn07DQoNCn0seyIuL19mb3Itb2YiOjIyNn1dLDIwMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTEwXVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL190by1pbmRleCI6Mjk0LCIuL190by1pb2JqZWN0IjoyOTYsIi4vX3RvLWxlbmd0aCI6Mjk3LCJkdXAiOjExMH1dLDIwMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAwIC0+IEFycmF5I2ZvckVhY2gNCi8vIDEgLT4gQXJyYXkjbWFwDQovLyAyIC0+IEFycmF5I2ZpbHRlcg0KLy8gMyAtPiBBcnJheSNzb21lDQovLyA0IC0+IEFycmF5I2V2ZXJ5DQovLyA1IC0+IEFycmF5I2ZpbmQNCi8vIDYgLT4gQXJyYXkjZmluZEluZGV4DQp2YXIgY3R4ICAgICAgPSByZXF1aXJlKCcuL19jdHgnKQ0KICAsIElPYmplY3QgID0gcmVxdWlyZSgnLi9faW9iamVjdCcpDQogICwgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKQ0KICAsIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJykNCiAgLCBhc2MgICAgICA9IHJlcXVpcmUoJy4vX2FycmF5LXNwZWNpZXMtY3JlYXRlJyk7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKFRZUEUsICRjcmVhdGUpew0KICB2YXIgSVNfTUFQICAgICAgICA9IFRZUEUgPT0gMQ0KICAgICwgSVNfRklMVEVSICAgICA9IFRZUEUgPT0gMg0KICAgICwgSVNfU09NRSAgICAgICA9IFRZUEUgPT0gMw0KICAgICwgSVNfRVZFUlkgICAgICA9IFRZUEUgPT0gNA0KICAgICwgSVNfRklORF9JTkRFWCA9IFRZUEUgPT0gNg0KICAgICwgTk9fSE9MRVMgICAgICA9IFRZUEUgPT0gNSB8fCBJU19GSU5EX0lOREVYDQogICAgLCBjcmVhdGUgICAgICAgID0gJGNyZWF0ZSB8fCBhc2M7DQogIHJldHVybiBmdW5jdGlvbigkdGhpcywgY2FsbGJhY2tmbiwgdGhhdCl7DQogICAgdmFyIE8gICAgICA9IHRvT2JqZWN0KCR0aGlzKQ0KICAgICAgLCBzZWxmICAgPSBJT2JqZWN0KE8pDQogICAgICAsIGYgICAgICA9IGN0eChjYWxsYmFja2ZuLCB0aGF0LCAzKQ0KICAgICAgLCBsZW5ndGggPSB0b0xlbmd0aChzZWxmLmxlbmd0aCkNCiAgICAgICwgaW5kZXggID0gMA0KICAgICAgLCByZXN1bHQgPSBJU19NQVAgPyBjcmVhdGUoJHRoaXMsIGxlbmd0aCkgOiBJU19GSUxURVIgPyBjcmVhdGUoJHRoaXMsIDApIDogdW5kZWZpbmVkDQogICAgICAsIHZhbCwgcmVzOw0KICAgIGZvcig7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspaWYoTk9fSE9MRVMgfHwgaW5kZXggaW4gc2VsZil7DQogICAgICB2YWwgPSBzZWxmW2luZGV4XTsNCiAgICAgIHJlcyA9IGYodmFsLCBpbmRleCwgTyk7DQogICAgICBpZihUWVBFKXsNCiAgICAgICAgaWYoSVNfTUFQKXJlc3VsdFtpbmRleF0gPSByZXM7ICAgICAgICAgICAgLy8gbWFwDQogICAgICAgIGVsc2UgaWYocmVzKXN3aXRjaChUWVBFKXsNCiAgICAgICAgICBjYXNlIDM6IHJldHVybiB0cnVlOyAgICAgICAgICAgICAgICAgICAgLy8gc29tZQ0KICAgICAgICAgIGNhc2UgNTogcmV0dXJuIHZhbDsgICAgICAgICAgICAgICAgICAgICAvLyBmaW5kDQogICAgICAgICAgY2FzZSA2OiByZXR1cm4gaW5kZXg7ICAgICAgICAgICAgICAgICAgIC8vIGZpbmRJbmRleA0KICAgICAgICAgIGNhc2UgMjogcmVzdWx0LnB1c2godmFsKTsgICAgICAgICAgICAgICAvLyBmaWx0ZXINCiAgICAgICAgfSBlbHNlIGlmKElTX0VWRVJZKXJldHVybiBmYWxzZTsgICAgICAgICAgLy8gZXZlcnkNCiAgICAgIH0NCiAgICB9DQogICAgcmV0dXJuIElTX0ZJTkRfSU5ERVggPyAtMSA6IElTX1NPTUUgfHwgSVNfRVZFUlkgPyBJU19FVkVSWSA6IHJlc3VsdDsNCiAgfTsNCn07DQp9LHsiLi9fYXJyYXktc3BlY2llcy1jcmVhdGUiOjIwNCwiLi9fY3R4IjoyMTQsIi4vX2lvYmplY3QiOjIzNCwiLi9fdG8tbGVuZ3RoIjoyOTcsIi4vX3RvLW9iamVjdCI6Mjk4fV0sMjAyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJykNCiAgLCB0b09iamVjdCAgPSByZXF1aXJlKCcuL190by1vYmplY3QnKQ0KICAsIElPYmplY3QgICA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKQ0KICAsIHRvTGVuZ3RoICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpOw0KDQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHRoYXQsIGNhbGxiYWNrZm4sIGFMZW4sIG1lbW8sIGlzUmlnaHQpew0KICBhRnVuY3Rpb24oY2FsbGJhY2tmbik7DQogIHZhciBPICAgICAgPSB0b09iamVjdCh0aGF0KQ0KICAgICwgc2VsZiAgID0gSU9iamVjdChPKQ0KICAgICwgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpDQogICAgLCBpbmRleCAgPSBpc1JpZ2h0ID8gbGVuZ3RoIC0gMSA6IDANCiAgICAsIGkgICAgICA9IGlzUmlnaHQgPyAtMSA6IDE7DQogIGlmKGFMZW4gPCAyKWZvcig7Oyl7DQogICAgaWYoaW5kZXggaW4gc2VsZil7DQogICAgICBtZW1vID0gc2VsZltpbmRleF07DQogICAgICBpbmRleCArPSBpOw0KICAgICAgYnJlYWs7DQogICAgfQ0KICAgIGluZGV4ICs9IGk7DQogICAgaWYoaXNSaWdodCA/IGluZGV4IDwgMCA6IGxlbmd0aCA8PSBpbmRleCl7DQogICAgICB0aHJvdyBUeXBlRXJyb3IoJ1JlZHVjZSBvZiBlbXB0eSBhcnJheSB3aXRoIG5vIGluaXRpYWwgdmFsdWUnKTsNCiAgICB9DQogIH0NCiAgZm9yKDtpc1JpZ2h0ID8gaW5kZXggPj0gMCA6IGxlbmd0aCA+IGluZGV4OyBpbmRleCArPSBpKWlmKGluZGV4IGluIHNlbGYpew0KICAgIG1lbW8gPSBjYWxsYmFja2ZuKG1lbW8sIHNlbGZbaW5kZXhdLCBpbmRleCwgTyk7DQogIH0NCiAgcmV0dXJuIG1lbW87DQp9Ow0KfSx7Ii4vX2EtZnVuY3Rpb24iOjE5MiwiLi9faW9iamVjdCI6MjM0LCIuL190by1sZW5ndGgiOjI5NywiLi9fdG8tb2JqZWN0IjoyOTh9XSwyMDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JykNCiAgLCBpc0FycmF5ICA9IHJlcXVpcmUoJy4vX2lzLWFycmF5JykNCiAgLCBTUEVDSUVTICA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob3JpZ2luYWwpew0KICB2YXIgQzsNCiAgaWYoaXNBcnJheShvcmlnaW5hbCkpew0KICAgIEMgPSBvcmlnaW5hbC5jb25zdHJ1Y3RvcjsNCiAgICAvLyBjcm9zcy1yZWFsbSBmYWxsYmFjaw0KICAgIGlmKHR5cGVvZiBDID09ICdmdW5jdGlvbicgJiYgKEMgPT09IEFycmF5IHx8IGlzQXJyYXkoQy5wcm90b3R5cGUpKSlDID0gdW5kZWZpbmVkOw0KICAgIGlmKGlzT2JqZWN0KEMpKXsNCiAgICAgIEMgPSBDW1NQRUNJRVNdOw0KICAgICAgaWYoQyA9PT0gbnVsbClDID0gdW5kZWZpbmVkOw0KICAgIH0NCiAgfSByZXR1cm4gQyA9PT0gdW5kZWZpbmVkID8gQXJyYXkgOiBDOw0KfTsNCn0seyIuL19pcy1hcnJheSI6MjM2LCIuL19pcy1vYmplY3QiOjIzOCwiLi9fd2tzIjozMDZ9XSwyMDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gOS40LjIuMyBBcnJheVNwZWNpZXNDcmVhdGUob3JpZ2luYWxBcnJheSwgbGVuZ3RoKQ0KdmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX2FycmF5LXNwZWNpZXMtY29uc3RydWN0b3InKTsNCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcmlnaW5hbCwgbGVuZ3RoKXsNCiAgcmV0dXJuIG5ldyAoc3BlY2llc0NvbnN0cnVjdG9yKG9yaWdpbmFsKSkobGVuZ3RoKTsNCn07DQp9LHsiLi9fYXJyYXktc3BlY2llcy1jb25zdHJ1Y3RvciI6MjAzfV0sMjA1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciBhRnVuY3Rpb24gID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpDQogICwgaXNPYmplY3QgICA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpDQogICwgaW52b2tlICAgICA9IHJlcXVpcmUoJy4vX2ludm9rZScpDQogICwgYXJyYXlTbGljZSA9IFtdLnNsaWNlDQogICwgZmFjdG9yaWVzICA9IHt9Ow0KDQp2YXIgY29uc3RydWN0ID0gZnVuY3Rpb24oRiwgbGVuLCBhcmdzKXsNCiAgaWYoIShsZW4gaW4gZmFjdG9yaWVzKSl7DQogICAgZm9yKHZhciBuID0gW10sIGkgPSAwOyBpIDwgbGVuOyBpKyspbltpXSA9ICdhWycgKyBpICsgJ10nOw0KICAgIGZhY3Rvcmllc1tsZW5dID0gRnVuY3Rpb24oJ0YsYScsICdyZXR1cm4gbmV3IEYoJyArIG4uam9pbignLCcpICsgJyknKTsNCiAgfSByZXR1cm4gZmFjdG9yaWVzW2xlbl0oRiwgYXJncyk7DQp9Ow0KDQptb2R1bGUuZXhwb3J0cyA9IEZ1bmN0aW9uLmJpbmQgfHwgZnVuY3Rpb24gYmluZCh0aGF0IC8qLCBhcmdzLi4uICovKXsNCiAgdmFyIGZuICAgICAgID0gYUZ1bmN0aW9uKHRoaXMpDQogICAgLCBwYXJ0QXJncyA9IGFycmF5U2xpY2UuY2FsbChhcmd1bWVudHMsIDEpOw0KICB2YXIgYm91bmQgPSBmdW5jdGlvbigvKiBhcmdzLi4uICovKXsNCiAgICB2YXIgYXJncyA9IHBhcnRBcmdzLmNvbmNhdChhcnJheVNsaWNlLmNhbGwoYXJndW1lbnRzKSk7DQogICAgcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBib3VuZCA/IGNvbnN0cnVjdChmbiwgYXJncy5sZW5ndGgsIGFyZ3MpIDogaW52b2tlKGZuLCBhcmdzLCB0aGF0KTsNCiAgfTsNCiAgaWYoaXNPYmplY3QoZm4ucHJvdG90eXBlKSlib3VuZC5wcm90b3R5cGUgPSBmbi5wcm90b3R5cGU7DQogIHJldHVybiBib3VuZDsNCn07DQp9LHsiLi9fYS1mdW5jdGlvbiI6MTkyLCIuL19pbnZva2UiOjIzMywiLi9faXMtb2JqZWN0IjoyMzh9XSwyMDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzExMV1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fY29mIjoyMDcsIi4vX3drcyI6MzA2LCJkdXAiOjExMX1dLDIwNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTEyXVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyJkdXAiOjExMn1dLDIwODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgZFAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mDQogICwgY3JlYXRlICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJykNCiAgLCBoaWRlICAgICAgICA9IHJlcXVpcmUoJy4vX2hpZGUnKQ0KICAsIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJykNCiAgLCBjdHggICAgICAgICA9IHJlcXVpcmUoJy4vX2N0eCcpDQogICwgYW5JbnN0YW5jZSAgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpDQogICwgZGVmaW5lZCAgICAgPSByZXF1aXJlKCcuL19kZWZpbmVkJykNCiAgLCBmb3JPZiAgICAgICA9IHJlcXVpcmUoJy4vX2Zvci1vZicpDQogICwgJGl0ZXJEZWZpbmUgPSByZXF1aXJlKCcuL19pdGVyLWRlZmluZScpDQogICwgc3RlcCAgICAgICAgPSByZXF1aXJlKCcuL19pdGVyLXN0ZXAnKQ0KICAsIHNldFNwZWNpZXMgID0gcmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKQ0KICAsIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKQ0KICAsIGZhc3RLZXkgICAgID0gcmVxdWlyZSgnLi9fbWV0YScpLmZhc3RLZXkNCiAgLCBTSVpFICAgICAgICA9IERFU0NSSVBUT1JTID8gJ19zJyA6ICdzaXplJzsNCg0KdmFyIGdldEVudHJ5ID0gZnVuY3Rpb24odGhhdCwga2V5KXsNCiAgLy8gZmFzdCBjYXNlDQogIHZhciBpbmRleCA9IGZhc3RLZXkoa2V5KSwgZW50cnk7DQogIGlmKGluZGV4ICE9PSAnRicpcmV0dXJuIHRoYXQuX2lbaW5kZXhdOw0KICAvLyBmcm96ZW4gb2JqZWN0IGNhc2UNCiAgZm9yKGVudHJ5ID0gdGhhdC5fZjsgZW50cnk7IGVudHJ5ID0gZW50cnkubil7DQogICAgaWYoZW50cnkuayA9PSBrZXkpcmV0dXJuIGVudHJ5Ow0KICB9DQp9Ow0KDQptb2R1bGUuZXhwb3J0cyA9IHsNCiAgZ2V0Q29uc3RydWN0b3I6IGZ1bmN0aW9uKHdyYXBwZXIsIE5BTUUsIElTX01BUCwgQURERVIpew0KICAgIHZhciBDID0gd3JhcHBlcihmdW5jdGlvbih0aGF0LCBpdGVyYWJsZSl7DQogICAgICBhbkluc3RhbmNlKHRoYXQsIEMsIE5BTUUsICdfaScpOw0KICAgICAgdGhhdC5faSA9IGNyZWF0ZShudWxsKTsgLy8gaW5kZXgNCiAgICAgIHRoYXQuX2YgPSB1bmRlZmluZWQ7ICAgIC8vIGZpcnN0IGVudHJ5DQogICAgICB0aGF0Ll9sID0gdW5kZWZpbmVkOyAgICAvLyBsYXN0IGVudHJ5DQogICAgICB0aGF0W1NJWkVdID0gMDsgICAgICAgICAvLyBzaXplDQogICAgICBpZihpdGVyYWJsZSAhPSB1bmRlZmluZWQpZm9yT2YoaXRlcmFibGUsIElTX01BUCwgdGhhdFtBRERFUl0sIHRoYXQpOw0KICAgIH0pOw0KICAgIHJlZGVmaW5lQWxsKEMucHJvdG90eXBlLCB7DQogICAgICAvLyAyMy4xLjMuMSBNYXAucHJvdG90eXBlLmNsZWFyKCkNCiAgICAgIC8vIDIzLjIuMy4yIFNldC5wcm90b3R5cGUuY2xlYXIoKQ0KICAgICAgY2xlYXI6IGZ1bmN0aW9uIGNsZWFyKCl7DQogICAgICAgIGZvcih2YXIgdGhhdCA9IHRoaXMsIGRhdGEgPSB0aGF0Ll9pLCBlbnRyeSA9IHRoYXQuX2Y7IGVudHJ5OyBlbnRyeSA9IGVudHJ5Lm4pew0KICAgICAgICAgIGVudHJ5LnIgPSB0cnVlOw0KICAgICAgICAgIGlmKGVudHJ5LnApZW50cnkucCA9IGVudHJ5LnAubiA9IHVuZGVmaW5lZDsNCiAgICAgICAgICBkZWxldGUgZGF0YVtlbnRyeS5pXTsNCiAgICAgICAgfQ0KICAgICAgICB0aGF0Ll9mID0gdGhhdC5fbCA9IHVuZGVmaW5lZDsNCiAgICAgICAgdGhhdFtTSVpFXSA9IDA7DQogICAgICB9LA0KICAgICAgLy8gMjMuMS4zLjMgTWFwLnByb3RvdHlwZS5kZWxldGUoa2V5KQ0KICAgICAgLy8gMjMuMi4zLjQgU2V0LnByb3RvdHlwZS5kZWxldGUodmFsdWUpDQogICAgICAnZGVsZXRlJzogZnVuY3Rpb24oa2V5KXsNCiAgICAgICAgdmFyIHRoYXQgID0gdGhpcw0KICAgICAgICAgICwgZW50cnkgPSBnZXRFbnRyeSh0aGF0LCBrZXkpOw0KICAgICAgICBpZihlbnRyeSl7DQogICAgICAgICAgdmFyIG5leHQgPSBlbnRyeS5uDQogICAgICAgICAgICAsIHByZXYgPSBlbnRyeS5wOw0KICAgICAgICAgIGRlbGV0ZSB0aGF0Ll9pW2VudHJ5LmldOw0KICAgICAgICAgIGVudHJ5LnIgPSB0cnVlOw0KICAgICAgICAgIGlmKHByZXYpcHJldi5uID0gbmV4dDsNCiAgICAgICAgICBpZihuZXh0KW5leHQucCA9IHByZXY7DQogICAgICAgICAgaWYodGhhdC5fZiA9PSBlbnRyeSl0aGF0Ll9mID0gbmV4dDsNCiAgICAgICAgICBpZih0aGF0Ll9sID09IGVudHJ5KXRoYXQuX2wgPSBwcmV2Ow0KICAgICAgICAgIHRoYXRbU0laRV0tLTsNCiAgICAgICAgfSByZXR1cm4gISFlbnRyeTsNCiAgICAgIH0sDQogICAgICAvLyAyMy4yLjMuNiBTZXQucHJvdG90eXBlLmZvckVhY2goY2FsbGJhY2tmbiwgdGhpc0FyZyA9IHVuZGVmaW5lZCkNCiAgICAgIC8vIDIzLjEuMy41IE1hcC5wcm90b3R5cGUuZm9yRWFjaChjYWxsYmFja2ZuLCB0aGlzQXJnID0gdW5kZWZpbmVkKQ0KICAgICAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja2ZuIC8qLCB0aGF0ID0gdW5kZWZpbmVkICovKXsNCiAgICAgICAgYW5JbnN0YW5jZSh0aGlzLCBDLCAnZm9yRWFjaCcpOw0KICAgICAgICB2YXIgZiA9IGN0eChjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgMykNCiAgICAgICAgICAsIGVudHJ5Ow0KICAgICAgICB3aGlsZShlbnRyeSA9IGVudHJ5ID8gZW50cnkubiA6IHRoaXMuX2Ypew0KICAgICAgICAgIGYoZW50cnkudiwgZW50cnkuaywgdGhpcyk7DQogICAgICAgICAgLy8gcmV2ZXJ0IHRvIHRoZSBsYXN0IGV4aXN0aW5nIGVudHJ5DQogICAgICAgICAgd2hpbGUoZW50cnkgJiYgZW50cnkucillbnRyeSA9IGVudHJ5LnA7DQogICAgICAgIH0NCiAgICAgIH0sDQogICAgICAvLyAyMy4xLjMuNyBNYXAucHJvdG90eXBlLmhhcyhrZXkpDQogICAgICAvLyAyMy4yLjMuNyBTZXQucHJvdG90eXBlLmhhcyh2YWx1ZSkNCiAgICAgIGhhczogZnVuY3Rpb24gaGFzKGtleSl7DQogICAgICAgIHJldHVybiAhIWdldEVudHJ5KHRoaXMsIGtleSk7DQogICAgICB9DQogICAgfSk7DQogICAgaWYoREVTQ1JJUFRPUlMpZFAoQy5wcm90b3R5cGUsICdzaXplJywgew0KICAgICAgZ2V0OiBmdW5jdGlvbigpew0KICAgICAgICByZXR1cm4gZGVmaW5lZCh0aGlzW1NJWkVdKTsNCiAgICAgIH0NCiAgICB9KTsNCiAgICByZXR1cm4gQzsNCiAgfSwNCiAgZGVmOiBmdW5jdGlvbih0aGF0LCBrZXksIHZhbHVlKXsNCiAgICB2YXIgZW50cnkgPSBnZXRFbnRyeSh0aGF0LCBrZXkpDQogICAgICAsIHByZXYsIGluZGV4Ow0KICAgIC8vIGNoYW5nZSBleGlzdGluZyBlbnRyeQ0KICAgIGlmKGVudHJ5KXsNCiAgICAgIGVudHJ5LnYgPSB2YWx1ZTsNCiAgICAvLyBjcmVhdGUgbmV3IGVudHJ5DQogICAgfSBlbHNlIHsNCiAgICAgIHRoYXQuX2wgPSBlbnRyeSA9IHsNCiAgICAgICAgaTogaW5kZXggPSBmYXN0S2V5KGtleSwgdHJ1ZSksIC8vIDwtIGluZGV4DQogICAgICAgIGs6IGtleSwgICAgICAgICAgICAgICAgICAgICAgICAvLyA8LSBrZXkNCiAgICAgICAgdjogdmFsdWUsICAgICAgICAgICAgICAgICAgICAgIC8vIDwtIHZhbHVlDQogICAgICAgIHA6IHByZXYgPSB0aGF0Ll9sLCAgICAgICAgICAgICAvLyA8LSBwcmV2aW91cyBlbnRyeQ0KICAgICAgICBuOiB1bmRlZmluZWQsICAgICAgICAgICAgICAgICAgLy8gPC0gbmV4dCBlbnRyeQ0KICAgICAgICByOiBmYWxzZSAgICAgICAgICAgICAgICAgICAgICAgLy8gPC0gcmVtb3ZlZA0KICAgICAgfTsNCiAgICAgIGlmKCF0aGF0Ll9mKXRoYXQuX2YgPSBlbnRyeTsNCiAgICAgIGlmKHByZXYpcHJldi5uID0gZW50cnk7DQogICAgICB0aGF0W1NJWkVdKys7DQogICAgICAvLyBhZGQgdG8gaW5kZXgNCiAgICAgIGlmKGluZGV4ICE9PSAnRicpdGhhdC5faVtpbmRleF0gPSBlbnRyeTsNCiAgICB9IHJldHVybiB0aGF0Ow0KICB9LA0KICBnZXRFbnRyeTogZ2V0RW50cnksDQogIHNldFN0cm9uZzogZnVuY3Rpb24oQywgTkFNRSwgSVNfTUFQKXsNCiAgICAvLyBhZGQgLmtleXMsIC52YWx1ZXMsIC5lbnRyaWVzLCBbQEBpdGVyYXRvcl0NCiAgICAvLyAyMy4xLjMuNCwgMjMuMS4zLjgsIDIzLjEuMy4xMSwgMjMuMS4zLjEyLCAyMy4yLjMuNSwgMjMuMi4zLjgsIDIzLjIuMy4xMCwgMjMuMi4zLjExDQogICAgJGl0ZXJEZWZpbmUoQywgTkFNRSwgZnVuY3Rpb24oaXRlcmF0ZWQsIGtpbmQpew0KICAgICAgdGhpcy5fdCA9IGl0ZXJhdGVkOyAgLy8gdGFyZ2V0DQogICAgICB0aGlzLl9rID0ga2luZDsgICAgICAvLyBraW5kDQogICAgICB0aGlzLl9sID0gdW5kZWZpbmVkOyAvLyBwcmV2aW91cw0KICAgIH0sIGZ1bmN0aW9uKCl7DQogICAgICB2YXIgdGhhdCAgPSB0aGlzDQogICAgICAgICwga2luZCAgPSB0aGF0Ll9rDQogICAgICAgICwgZW50cnkgPSB0aGF0Ll9sOw0KICAgICAgLy8gcmV2ZXJ0IHRvIHRoZSBsYXN0IGV4aXN0aW5nIGVudHJ5DQogICAgICB3aGlsZShlbnRyeSAmJiBlbnRyeS5yKWVudHJ5ID0gZW50cnkucDsNCiAgICAgIC8vIGdldCBuZXh0IGVudHJ5DQogICAgICBpZighdGhhdC5fdCB8fCAhKHRoYXQuX2wgPSBlbnRyeSA9IGVudHJ5ID8gZW50cnkubiA6IHRoYXQuX3QuX2YpKXsNCiAgICAgICAgLy8gb3IgZmluaXNoIHRoZSBpdGVyYXRpb24NCiAgICAgICAgdGhhdC5fdCA9IHVuZGVmaW5lZDsNCiAgICAgICAgcmV0dXJuIHN0ZXAoMSk7DQogICAgICB9DQogICAgICAvLyByZXR1cm4gc3RlcCBieSBraW5kDQogICAgICBpZihraW5kID09ICdrZXlzJyAgKXJldHVybiBzdGVwKDAsIGVudHJ5LmspOw0KICAgICAgaWYoa2luZCA9PSAndmFsdWVzJylyZXR1cm4gc3RlcCgwLCBlbnRyeS52KTsNCiAgICAgIHJldHVybiBzdGVwKDAsIFtlbnRyeS5rLCBlbnRyeS52XSk7DQogICAgfSwgSVNfTUFQID8gJ2VudHJpZXMnIDogJ3ZhbHVlcycgLCAhSVNfTUFQLCB0cnVlKTsNCg0KICAgIC8vIGFkZCBbQEBzcGVjaWVzXSwgMjMuMS4yLjIsIDIzLjIuMi4yDQogICAgc2V0U3BlY2llcyhOQU1FKTsNCiAgfQ0KfTsNCn0seyIuL19hbi1pbnN0YW5jZSI6MTk1LCIuL19jdHgiOjIxNCwiLi9fZGVmaW5lZCI6MjE2LCIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19mb3Itb2YiOjIyNiwiLi9faGlkZSI6MjI5LCIuL19pdGVyLWRlZmluZSI6MjQyLCIuL19pdGVyLXN0ZXAiOjI0NCwiLi9fbWV0YSI6MjUxLCIuL19vYmplY3QtY3JlYXRlIjoyNTUsIi4vX29iamVjdC1kcCI6MjU2LCIuL19yZWRlZmluZS1hbGwiOjI3NSwiLi9fc2V0LXNwZWNpZXMiOjI4MH1dLDIwOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBodHRwczovL2dpdGh1Yi5jb20vRGF2aWRCcnVhbnQvTWFwLVNldC5wcm90b3R5cGUudG9KU09ODQp2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKQ0KICAsIGZyb20gICAgPSByZXF1aXJlKCcuL19hcnJheS1mcm9tLWl0ZXJhYmxlJyk7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKE5BTUUpew0KICByZXR1cm4gZnVuY3Rpb24gdG9KU09OKCl7DQogICAgaWYoY2xhc3NvZih0aGlzKSAhPSBOQU1FKXRocm93IFR5cGVFcnJvcihOQU1FICsgIiN0b0pTT04gaXNuJ3QgZ2VuZXJpYyIpOw0KICAgIHJldHVybiBmcm9tKHRoaXMpOw0KICB9Ow0KfTsNCn0seyIuL19hcnJheS1mcm9tLWl0ZXJhYmxlIjoxOTksIi4vX2NsYXNzb2YiOjIwNn1dLDIxMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgcmVkZWZpbmVBbGwgICAgICAgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKQ0KICAsIGdldFdlYWsgICAgICAgICAgID0gcmVxdWlyZSgnLi9fbWV0YScpLmdldFdlYWsNCiAgLCBhbk9iamVjdCAgICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpDQogICwgaXNPYmplY3QgICAgICAgICAgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKQ0KICAsIGFuSW5zdGFuY2UgICAgICAgID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKQ0KICAsIGZvck9mICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fZm9yLW9mJykNCiAgLCBjcmVhdGVBcnJheU1ldGhvZCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKQ0KICAsICRoYXMgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9faGFzJykNCiAgLCBhcnJheUZpbmQgICAgICAgICA9IGNyZWF0ZUFycmF5TWV0aG9kKDUpDQogICwgYXJyYXlGaW5kSW5kZXggICAgPSBjcmVhdGVBcnJheU1ldGhvZCg2KQ0KICAsIGlkICAgICAgICAgICAgICAgID0gMDsNCg0KLy8gZmFsbGJhY2sgZm9yIHVuY2F1Z2h0IGZyb3plbiBrZXlzDQp2YXIgdW5jYXVnaHRGcm96ZW5TdG9yZSA9IGZ1bmN0aW9uKHRoYXQpew0KICByZXR1cm4gdGhhdC5fbCB8fCAodGhhdC5fbCA9IG5ldyBVbmNhdWdodEZyb3plblN0b3JlKTsNCn07DQp2YXIgVW5jYXVnaHRGcm96ZW5TdG9yZSA9IGZ1bmN0aW9uKCl7DQogIHRoaXMuYSA9IFtdOw0KfTsNCnZhciBmaW5kVW5jYXVnaHRGcm96ZW4gPSBmdW5jdGlvbihzdG9yZSwga2V5KXsNCiAgcmV0dXJuIGFycmF5RmluZChzdG9yZS5hLCBmdW5jdGlvbihpdCl7DQogICAgcmV0dXJuIGl0WzBdID09PSBrZXk7DQogIH0pOw0KfTsNClVuY2F1Z2h0RnJvemVuU3RvcmUucHJvdG90eXBlID0gew0KICBnZXQ6IGZ1bmN0aW9uKGtleSl7DQogICAgdmFyIGVudHJ5ID0gZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7DQogICAgaWYoZW50cnkpcmV0dXJuIGVudHJ5WzFdOw0KICB9LA0KICBoYXM6IGZ1bmN0aW9uKGtleSl7DQogICAgcmV0dXJuICEhZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7DQogIH0sDQogIHNldDogZnVuY3Rpb24oa2V5LCB2YWx1ZSl7DQogICAgdmFyIGVudHJ5ID0gZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7DQogICAgaWYoZW50cnkpZW50cnlbMV0gPSB2YWx1ZTsNCiAgICBlbHNlIHRoaXMuYS5wdXNoKFtrZXksIHZhbHVlXSk7DQogIH0sDQogICdkZWxldGUnOiBmdW5jdGlvbihrZXkpew0KICAgIHZhciBpbmRleCA9IGFycmF5RmluZEluZGV4KHRoaXMuYSwgZnVuY3Rpb24oaXQpew0KICAgICAgcmV0dXJuIGl0WzBdID09PSBrZXk7DQogICAgfSk7DQogICAgaWYofmluZGV4KXRoaXMuYS5zcGxpY2UoaW5kZXgsIDEpOw0KICAgIHJldHVybiAhIX5pbmRleDsNCiAgfQ0KfTsNCg0KbW9kdWxlLmV4cG9ydHMgPSB7DQogIGdldENvbnN0cnVjdG9yOiBmdW5jdGlvbih3cmFwcGVyLCBOQU1FLCBJU19NQVAsIEFEREVSKXsNCiAgICB2YXIgQyA9IHdyYXBwZXIoZnVuY3Rpb24odGhhdCwgaXRlcmFibGUpew0KICAgICAgYW5JbnN0YW5jZSh0aGF0LCBDLCBOQU1FLCAnX2knKTsNCiAgICAgIHRoYXQuX2kgPSBpZCsrOyAgICAgIC8vIGNvbGxlY3Rpb24gaWQNCiAgICAgIHRoYXQuX2wgPSB1bmRlZmluZWQ7IC8vIGxlYWsgc3RvcmUgZm9yIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RzDQogICAgICBpZihpdGVyYWJsZSAhPSB1bmRlZmluZWQpZm9yT2YoaXRlcmFibGUsIElTX01BUCwgdGhhdFtBRERFUl0sIHRoYXQpOw0KICAgIH0pOw0KICAgIHJlZGVmaW5lQWxsKEMucHJvdG90eXBlLCB7DQogICAgICAvLyAyMy4zLjMuMiBXZWFrTWFwLnByb3RvdHlwZS5kZWxldGUoa2V5KQ0KICAgICAgLy8gMjMuNC4zLjMgV2Vha1NldC5wcm90b3R5cGUuZGVsZXRlKHZhbHVlKQ0KICAgICAgJ2RlbGV0ZSc6IGZ1bmN0aW9uKGtleSl7DQogICAgICAgIGlmKCFpc09iamVjdChrZXkpKXJldHVybiBmYWxzZTsNCiAgICAgICAgdmFyIGRhdGEgPSBnZXRXZWFrKGtleSk7DQogICAgICAgIGlmKGRhdGEgPT09IHRydWUpcmV0dXJuIHVuY2F1Z2h0RnJvemVuU3RvcmUodGhpcylbJ2RlbGV0ZSddKGtleSk7DQogICAgICAgIHJldHVybiBkYXRhICYmICRoYXMoZGF0YSwgdGhpcy5faSkgJiYgZGVsZXRlIGRhdGFbdGhpcy5faV07DQogICAgICB9LA0KICAgICAgLy8gMjMuMy4zLjQgV2Vha01hcC5wcm90b3R5cGUuaGFzKGtleSkNCiAgICAgIC8vIDIzLjQuMy40IFdlYWtTZXQucHJvdG90eXBlLmhhcyh2YWx1ZSkNCiAgICAgIGhhczogZnVuY3Rpb24gaGFzKGtleSl7DQogICAgICAgIGlmKCFpc09iamVjdChrZXkpKXJldHVybiBmYWxzZTsNCiAgICAgICAgdmFyIGRhdGEgPSBnZXRXZWFrKGtleSk7DQogICAgICAgIGlmKGRhdGEgPT09IHRydWUpcmV0dXJuIHVuY2F1Z2h0RnJvemVuU3RvcmUodGhpcykuaGFzKGtleSk7DQogICAgICAgIHJldHVybiBkYXRhICYmICRoYXMoZGF0YSwgdGhpcy5faSk7DQogICAgICB9DQogICAgfSk7DQogICAgcmV0dXJuIEM7DQogIH0sDQogIGRlZjogZnVuY3Rpb24odGhhdCwga2V5LCB2YWx1ZSl7DQogICAgdmFyIGRhdGEgPSBnZXRXZWFrKGFuT2JqZWN0KGtleSksIHRydWUpOw0KICAgIGlmKGRhdGEgPT09IHRydWUpdW5jYXVnaHRGcm96ZW5TdG9yZSh0aGF0KS5zZXQoa2V5LCB2YWx1ZSk7DQogICAgZWxzZSBkYXRhW3RoYXQuX2ldID0gdmFsdWU7DQogICAgcmV0dXJuIHRoYXQ7DQogIH0sDQogIHVmc3RvcmU6IHVuY2F1Z2h0RnJvemVuU3RvcmUNCn07DQp9LHsiLi9fYW4taW5zdGFuY2UiOjE5NSwiLi9fYW4tb2JqZWN0IjoxOTYsIi4vX2FycmF5LW1ldGhvZHMiOjIwMSwiLi9fZm9yLW9mIjoyMjYsIi4vX2hhcyI6MjI4LCIuL19pcy1vYmplY3QiOjIzOCwiLi9fbWV0YSI6MjUxLCIuL19yZWRlZmluZS1hbGwiOjI3NX1dLDIxMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgZ2xvYmFsICAgICAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKQ0KICAsICRleHBvcnQgICAgICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCByZWRlZmluZSAgICAgICAgICA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJykNCiAgLCByZWRlZmluZUFsbCAgICAgICA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpDQogICwgbWV0YSAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19tZXRhJykNCiAgLCBmb3JPZiAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2Zvci1vZicpDQogICwgYW5JbnN0YW5jZSAgICAgICAgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpDQogICwgaXNPYmplY3QgICAgICAgICAgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKQ0KICAsIGZhaWxzICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fZmFpbHMnKQ0KICAsICRpdGVyRGV0ZWN0ICAgICAgID0gcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKQ0KICAsIHNldFRvU3RyaW5nVGFnICAgID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKQ0KICAsIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpOw0KDQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKE5BTUUsIHdyYXBwZXIsIG1ldGhvZHMsIGNvbW1vbiwgSVNfTUFQLCBJU19XRUFLKXsNCiAgdmFyIEJhc2UgID0gZ2xvYmFsW05BTUVdDQogICAgLCBDICAgICA9IEJhc2UNCiAgICAsIEFEREVSID0gSVNfTUFQID8gJ3NldCcgOiAnYWRkJw0KICAgICwgcHJvdG8gPSBDICYmIEMucHJvdG90eXBlDQogICAgLCBPICAgICA9IHt9Ow0KICB2YXIgZml4TWV0aG9kID0gZnVuY3Rpb24oS0VZKXsNCiAgICB2YXIgZm4gPSBwcm90b1tLRVldOw0KICAgIHJlZGVmaW5lKHByb3RvLCBLRVksDQogICAgICBLRVkgPT0gJ2RlbGV0ZScgPyBmdW5jdGlvbihhKXsNCiAgICAgICAgcmV0dXJuIElTX1dFQUsgJiYgIWlzT2JqZWN0KGEpID8gZmFsc2UgOiBmbi5jYWxsKHRoaXMsIGEgPT09IDAgPyAwIDogYSk7DQogICAgICB9IDogS0VZID09ICdoYXMnID8gZnVuY3Rpb24gaGFzKGEpew0KICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3QoYSkgPyBmYWxzZSA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTsNCiAgICAgIH0gOiBLRVkgPT0gJ2dldCcgPyBmdW5jdGlvbiBnZXQoYSl7DQogICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IHVuZGVmaW5lZCA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTsNCiAgICAgIH0gOiBLRVkgPT0gJ2FkZCcgPyBmdW5jdGlvbiBhZGQoYSl7IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTsgcmV0dXJuIHRoaXM7IH0NCiAgICAgICAgOiBmdW5jdGlvbiBzZXQoYSwgYil7IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhLCBiKTsgcmV0dXJuIHRoaXM7IH0NCiAgICApOw0KICB9Ow0KICBpZih0eXBlb2YgQyAhPSAnZnVuY3Rpb24nIHx8ICEoSVNfV0VBSyB8fCBwcm90by5mb3JFYWNoICYmICFmYWlscyhmdW5jdGlvbigpew0KICAgIG5ldyBDKCkuZW50cmllcygpLm5leHQoKTsNCiAgfSkpKXsNCiAgICAvLyBjcmVhdGUgY29sbGVjdGlvbiBjb25zdHJ1Y3Rvcg0KICAgIEMgPSBjb21tb24uZ2V0Q29uc3RydWN0b3Iod3JhcHBlciwgTkFNRSwgSVNfTUFQLCBBRERFUik7DQogICAgcmVkZWZpbmVBbGwoQy5wcm90b3R5cGUsIG1ldGhvZHMpOw0KICAgIG1ldGEuTkVFRCA9IHRydWU7DQogIH0gZWxzZSB7DQogICAgdmFyIGluc3RhbmNlICAgICAgICAgICAgID0gbmV3IEMNCiAgICAgIC8vIGVhcmx5IGltcGxlbWVudGF0aW9ucyBub3Qgc3VwcG9ydHMgY2hhaW5pbmcNCiAgICAgICwgSEFTTlRfQ0hBSU5JTkcgICAgICAgPSBpbnN0YW5jZVtBRERFUl0oSVNfV0VBSyA/IHt9IDogLTAsIDEpICE9IGluc3RhbmNlDQogICAgICAvLyBWOCB+ICBDaHJvbWl1bSA0MC0gd2Vhay1jb2xsZWN0aW9ucyB0aHJvd3Mgb24gcHJpbWl0aXZlcywgYnV0IHNob3VsZCByZXR1cm4gZmFsc2UNCiAgICAgICwgVEhST1dTX09OX1BSSU1JVElWRVMgPSBmYWlscyhmdW5jdGlvbigpeyBpbnN0YW5jZS5oYXMoMSk7IH0pDQogICAgICAvLyBtb3N0IGVhcmx5IGltcGxlbWVudGF0aW9ucyBkb2Vzbid0IHN1cHBvcnRzIGl0ZXJhYmxlcywgbW9zdCBtb2Rlcm4gLSBub3QgY2xvc2UgaXQgY29ycmVjdGx5DQogICAgICAsIEFDQ0VQVF9JVEVSQUJMRVMgICAgID0gJGl0ZXJEZXRlY3QoZnVuY3Rpb24oaXRlcil7IG5ldyBDKGl0ZXIpOyB9KSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldw0KICAgICAgLy8gZm9yIGVhcmx5IGltcGxlbWVudGF0aW9ucyAtMCBhbmQgKzAgbm90IHRoZSBzYW1lDQogICAgICAsIEJVR0dZX1pFUk8gPSAhSVNfV0VBSyAmJiBmYWlscyhmdW5jdGlvbigpew0KICAgICAgICAvLyBWOCB+IENocm9taXVtIDQyLSBmYWlscyBvbmx5IHdpdGggNSsgZWxlbWVudHMNCiAgICAgICAgdmFyICRpbnN0YW5jZSA9IG5ldyBDKCkNCiAgICAgICAgICAsIGluZGV4ICAgICA9IDU7DQogICAgICAgIHdoaWxlKGluZGV4LS0pJGluc3RhbmNlW0FEREVSXShpbmRleCwgaW5kZXgpOw0KICAgICAgICByZXR1cm4gISRpbnN0YW5jZS5oYXMoLTApOw0KICAgICAgfSk7DQogICAgaWYoIUFDQ0VQVF9JVEVSQUJMRVMpeyANCiAgICAgIEMgPSB3cmFwcGVyKGZ1bmN0aW9uKHRhcmdldCwgaXRlcmFibGUpew0KICAgICAgICBhbkluc3RhbmNlKHRhcmdldCwgQywgTkFNRSk7DQogICAgICAgIHZhciB0aGF0ID0gaW5oZXJpdElmUmVxdWlyZWQobmV3IEJhc2UsIHRhcmdldCwgQyk7DQogICAgICAgIGlmKGl0ZXJhYmxlICE9IHVuZGVmaW5lZClmb3JPZihpdGVyYWJsZSwgSVNfTUFQLCB0aGF0W0FEREVSXSwgdGhhdCk7DQogICAgICAgIHJldHVybiB0aGF0Ow0KICAgICAgfSk7DQogICAgICBDLnByb3RvdHlwZSA9IHByb3RvOw0KICAgICAgcHJvdG8uY29uc3RydWN0b3IgPSBDOw0KICAgIH0NCiAgICBpZihUSFJPV1NfT05fUFJJTUlUSVZFUyB8fCBCVUdHWV9aRVJPKXsNCiAgICAgIGZpeE1ldGhvZCgnZGVsZXRlJyk7DQogICAgICBmaXhNZXRob2QoJ2hhcycpOw0KICAgICAgSVNfTUFQICYmIGZpeE1ldGhvZCgnZ2V0Jyk7DQogICAgfQ0KICAgIGlmKEJVR0dZX1pFUk8gfHwgSEFTTlRfQ0hBSU5JTkcpZml4TWV0aG9kKEFEREVSKTsNCiAgICAvLyB3ZWFrIGNvbGxlY3Rpb25zIHNob3VsZCBub3QgY29udGFpbnMgLmNsZWFyIG1ldGhvZA0KICAgIGlmKElTX1dFQUsgJiYgcHJvdG8uY2xlYXIpZGVsZXRlIHByb3RvLmNsZWFyOw0KICB9DQoNCiAgc2V0VG9TdHJpbmdUYWcoQywgTkFNRSk7DQoNCiAgT1tOQU1FXSA9IEM7DQogICRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogKEMgIT0gQmFzZSksIE8pOw0KDQogIGlmKCFJU19XRUFLKWNvbW1vbi5zZXRTdHJvbmcoQywgTkFNRSwgSVNfTUFQKTsNCg0KICByZXR1cm4gQzsNCn07DQp9LHsiLi9fYW4taW5zdGFuY2UiOjE5NSwiLi9fZXhwb3J0IjoyMjEsIi4vX2ZhaWxzIjoyMjMsIi4vX2Zvci1vZiI6MjI2LCIuL19nbG9iYWwiOjIyNywiLi9faW5oZXJpdC1pZi1yZXF1aXJlZCI6MjMyLCIuL19pcy1vYmplY3QiOjIzOCwiLi9faXRlci1kZXRlY3QiOjI0MywiLi9fbWV0YSI6MjUxLCIuL19yZWRlZmluZSI6Mjc2LCIuL19yZWRlZmluZS1hbGwiOjI3NSwiLi9fc2V0LXRvLXN0cmluZy10YWciOjI4MX1dLDIxMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTEzXVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyJkdXAiOjExM31dLDIxMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgJGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykNCiAgLCBjcmVhdGVEZXNjICAgICAgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob2JqZWN0LCBpbmRleCwgdmFsdWUpew0KICBpZihpbmRleCBpbiBvYmplY3QpJGRlZmluZVByb3BlcnR5LmYob2JqZWN0LCBpbmRleCwgY3JlYXRlRGVzYygwLCB2YWx1ZSkpOw0KICBlbHNlIG9iamVjdFtpbmRleF0gPSB2YWx1ZTsNCn07DQp9LHsiLi9fb2JqZWN0LWRwIjoyNTYsIi4vX3Byb3BlcnR5LWRlc2MiOjI3NH1dLDIxNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTE0XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19hLWZ1bmN0aW9uIjoxOTIsImR1cCI6MTE0fV0sMjE1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciBhbk9iamVjdCAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpDQogICwgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKQ0KICAsIE5VTUJFUiAgICAgID0gJ251bWJlcic7DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaGludCl7DQogIGlmKGhpbnQgIT09ICdzdHJpbmcnICYmIGhpbnQgIT09IE5VTUJFUiAmJiBoaW50ICE9PSAnZGVmYXVsdCcpdGhyb3cgVHlwZUVycm9yKCdJbmNvcnJlY3QgaGludCcpOw0KICByZXR1cm4gdG9QcmltaXRpdmUoYW5PYmplY3QodGhpcyksIGhpbnQgIT0gTlVNQkVSKTsNCn07DQp9LHsiLi9fYW4tb2JqZWN0IjoxOTYsIi4vX3RvLXByaW1pdGl2ZSI6Mjk5fV0sMjE2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMTVdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7ImR1cCI6MTE1fV0sMjE3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMTZdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2ZhaWxzIjoyMjMsImR1cCI6MTE2fV0sMjE4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMTddWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2dsb2JhbCI6MjI3LCIuL19pcy1vYmplY3QiOjIzOCwiZHVwIjoxMTd9XSwyMTk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzExOF1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiZHVwIjoxMTh9XSwyMjA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzExOV1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fb2JqZWN0LWdvcHMiOjI2MiwiLi9fb2JqZWN0LWtleXMiOjI2NSwiLi9fb2JqZWN0LXBpZSI6MjY2LCJkdXAiOjExOX1dLDIyMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgZ2xvYmFsICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykNCiAgLCBjb3JlICAgICAgPSByZXF1aXJlKCcuL19jb3JlJykNCiAgLCBoaWRlICAgICAgPSByZXF1aXJlKCcuL19oaWRlJykNCiAgLCByZWRlZmluZSAgPSByZXF1aXJlKCcuL19yZWRlZmluZScpDQogICwgY3R4ICAgICAgID0gcmVxdWlyZSgnLi9fY3R4JykNCiAgLCBQUk9UT1RZUEUgPSAncHJvdG90eXBlJzsNCg0KdmFyICRleHBvcnQgPSBmdW5jdGlvbih0eXBlLCBuYW1lLCBzb3VyY2Upew0KICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRg0KICAgICwgSVNfR0xPQkFMID0gdHlwZSAmICRleHBvcnQuRw0KICAgICwgSVNfU1RBVElDID0gdHlwZSAmICRleHBvcnQuUw0KICAgICwgSVNfUFJPVE8gID0gdHlwZSAmICRleHBvcnQuUA0KICAgICwgSVNfQklORCAgID0gdHlwZSAmICRleHBvcnQuQg0KICAgICwgdGFyZ2V0ICAgID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIHx8IChnbG9iYWxbbmFtZV0gPSB7fSkgOiAoZ2xvYmFsW25hbWVdIHx8IHt9KVtQUk9UT1RZUEVdDQogICAgLCBleHBvcnRzICAgPSBJU19HTE9CQUwgPyBjb3JlIDogY29yZVtuYW1lXSB8fCAoY29yZVtuYW1lXSA9IHt9KQ0KICAgICwgZXhwUHJvdG8gID0gZXhwb3J0c1tQUk9UT1RZUEVdIHx8IChleHBvcnRzW1BST1RPVFlQRV0gPSB7fSkNCiAgICAsIGtleSwgb3duLCBvdXQsIGV4cDsNCiAgaWYoSVNfR0xPQkFMKXNvdXJjZSA9IG5hbWU7DQogIGZvcihrZXkgaW4gc291cmNlKXsNCiAgICAvLyBjb250YWlucyBpbiBuYXRpdmUNCiAgICBvd24gPSAhSVNfRk9SQ0VEICYmIHRhcmdldCAmJiB0YXJnZXRba2V5XSAhPT0gdW5kZWZpbmVkOw0KICAgIC8vIGV4cG9ydCBuYXRpdmUgb3IgcGFzc2VkDQogICAgb3V0ID0gKG93biA/IHRhcmdldCA6IHNvdXJjZSlba2V5XTsNCiAgICAvLyBiaW5kIHRpbWVycyB0byBnbG9iYWwgZm9yIGNhbGwgZnJvbSBleHBvcnQgY29udGV4dA0KICAgIGV4cCA9IElTX0JJTkQgJiYgb3duID8gY3R4KG91dCwgZ2xvYmFsKSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0Ow0KICAgIC8vIGV4dGVuZCBnbG9iYWwNCiAgICBpZih0YXJnZXQpcmVkZWZpbmUodGFyZ2V0LCBrZXksIG91dCwgdHlwZSAmICRleHBvcnQuVSk7DQogICAgLy8gZXhwb3J0DQogICAgaWYoZXhwb3J0c1trZXldICE9IG91dCloaWRlKGV4cG9ydHMsIGtleSwgZXhwKTsNCiAgICBpZihJU19QUk9UTyAmJiBleHBQcm90b1trZXldICE9IG91dClleHBQcm90b1trZXldID0gb3V0Ow0KICB9DQp9Ow0KZ2xvYmFsLmNvcmUgPSBjb3JlOw0KLy8gdHlwZSBiaXRtYXANCiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkDQokZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbA0KJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWMNCiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG8NCiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZA0KJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwDQokZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmUNCiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YCANCm1vZHVsZS5leHBvcnRzID0gJGV4cG9ydDsNCn0seyIuL19jb3JlIjoyMTIsIi4vX2N0eCI6MjE0LCIuL19nbG9iYWwiOjIyNywiLi9faGlkZSI6MjI5LCIuL19yZWRlZmluZSI6Mjc2fV0sMjIyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBNQVRDSCA9IHJlcXVpcmUoJy4vX3drcycpKCdtYXRjaCcpOw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihLRVkpew0KICB2YXIgcmUgPSAvLi87DQogIHRyeSB7DQogICAgJy8uLydbS0VZXShyZSk7DQogIH0gY2F0Y2goZSl7DQogICAgdHJ5IHsNCiAgICAgIHJlW01BVENIXSA9IGZhbHNlOw0KICAgICAgcmV0dXJuICEnLy4vJ1tLRVldKHJlKTsNCiAgICB9IGNhdGNoKGYpeyAvKiBlbXB0eSAqLyB9DQogIH0gcmV0dXJuIHRydWU7DQp9Ow0KfSx7Ii4vX3drcyI6MzA2fV0sMjIzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMjFdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7ImR1cCI6MTIxfV0sMjI0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciBoaWRlICAgICA9IHJlcXVpcmUoJy4vX2hpZGUnKQ0KICAsIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKQ0KICAsIGZhaWxzICAgID0gcmVxdWlyZSgnLi9fZmFpbHMnKQ0KICAsIGRlZmluZWQgID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpDQogICwgd2tzICAgICAgPSByZXF1aXJlKCcuL193a3MnKTsNCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihLRVksIGxlbmd0aCwgZXhlYyl7DQogIHZhciBTWU1CT0wgICA9IHdrcyhLRVkpDQogICAgLCBmbnMgICAgICA9IGV4ZWMoZGVmaW5lZCwgU1lNQk9MLCAnJ1tLRVldKQ0KICAgICwgc3RyZm4gICAgPSBmbnNbMF0NCiAgICAsIHJ4Zm4gICAgID0gZm5zWzFdOw0KICBpZihmYWlscyhmdW5jdGlvbigpew0KICAgIHZhciBPID0ge307DQogICAgT1tTWU1CT0xdID0gZnVuY3Rpb24oKXsgcmV0dXJuIDc7IH07DQogICAgcmV0dXJuICcnW0tFWV0oTykgIT0gNzsNCiAgfSkpew0KICAgIHJlZGVmaW5lKFN0cmluZy5wcm90b3R5cGUsIEtFWSwgc3RyZm4pOw0KICAgIGhpZGUoUmVnRXhwLnByb3RvdHlwZSwgU1lNQk9MLCBsZW5ndGggPT0gMg0KICAgICAgLy8gMjEuMi41LjggUmVnRXhwLnByb3RvdHlwZVtAQHJlcGxhY2VdKHN0cmluZywgcmVwbGFjZVZhbHVlKQ0KICAgICAgLy8gMjEuMi41LjExIFJlZ0V4cC5wcm90b3R5cGVbQEBzcGxpdF0oc3RyaW5nLCBsaW1pdCkNCiAgICAgID8gZnVuY3Rpb24oc3RyaW5nLCBhcmcpeyByZXR1cm4gcnhmbi5jYWxsKHN0cmluZywgdGhpcywgYXJnKTsgfQ0KICAgICAgLy8gMjEuMi41LjYgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXShzdHJpbmcpDQogICAgICAvLyAyMS4yLjUuOSBSZWdFeHAucHJvdG90eXBlW0BAc2VhcmNoXShzdHJpbmcpDQogICAgICA6IGZ1bmN0aW9uKHN0cmluZyl7IHJldHVybiByeGZuLmNhbGwoc3RyaW5nLCB0aGlzKTsgfQ0KICAgICk7DQogIH0NCn07DQp9LHsiLi9fZGVmaW5lZCI6MjE2LCIuL19mYWlscyI6MjIzLCIuL19oaWRlIjoyMjksIi4vX3JlZGVmaW5lIjoyNzYsIi4vX3drcyI6MzA2fV0sMjI1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCi8vIDIxLjIuNS4zIGdldCBSZWdFeHAucHJvdG90eXBlLmZsYWdzDQp2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTsNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKXsNCiAgdmFyIHRoYXQgICA9IGFuT2JqZWN0KHRoaXMpDQogICAgLCByZXN1bHQgPSAnJzsNCiAgaWYodGhhdC5nbG9iYWwpICAgICByZXN1bHQgKz0gJ2cnOw0KICBpZih0aGF0Lmlnbm9yZUNhc2UpIHJlc3VsdCArPSAnaSc7DQogIGlmKHRoYXQubXVsdGlsaW5lKSAgcmVzdWx0ICs9ICdtJzsNCiAgaWYodGhhdC51bmljb2RlKSAgICByZXN1bHQgKz0gJ3UnOw0KICBpZih0aGF0LnN0aWNreSkgICAgIHJlc3VsdCArPSAneSc7DQogIHJldHVybiByZXN1bHQ7DQp9Ow0KfSx7Ii4vX2FuLW9iamVjdCI6MTk2fV0sMjI2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMjJdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2FuLW9iamVjdCI6MTk2LCIuL19jdHgiOjIxNCwiLi9faXMtYXJyYXktaXRlciI6MjM1LCIuL19pdGVyLWNhbGwiOjI0MCwiLi9fdG8tbGVuZ3RoIjoyOTcsIi4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kIjozMDcsImR1cCI6MTIyfV0sMjI3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMjNdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7ImR1cCI6MTIzfV0sMjI4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMjRdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7ImR1cCI6MTI0fV0sMjI5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMjVdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2Rlc2NyaXB0b3JzIjoyMTcsIi4vX29iamVjdC1kcCI6MjU2LCIuL19wcm9wZXJ0eS1kZXNjIjoyNzQsImR1cCI6MTI1fV0sMjMwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMjZdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2dsb2JhbCI6MjI3LCJkdXAiOjEyNn1dLDIzMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTI3XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19kb20tY3JlYXRlIjoyMTgsIi4vX2ZhaWxzIjoyMjMsImR1cCI6MTI3fV0sMjMyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBpc09iamVjdCAgICAgICA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpDQogICwgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQ7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHRoYXQsIHRhcmdldCwgQyl7DQogIHZhciBQLCBTID0gdGFyZ2V0LmNvbnN0cnVjdG9yOw0KICBpZihTICE9PSBDICYmIHR5cGVvZiBTID09ICdmdW5jdGlvbicgJiYgKFAgPSBTLnByb3RvdHlwZSkgIT09IEMucHJvdG90eXBlICYmIGlzT2JqZWN0KFApICYmIHNldFByb3RvdHlwZU9mKXsNCiAgICBzZXRQcm90b3R5cGVPZih0aGF0LCBQKTsNCiAgfSByZXR1cm4gdGhhdDsNCn07DQp9LHsiLi9faXMtb2JqZWN0IjoyMzgsIi4vX3NldC1wcm90byI6Mjc5fV0sMjMzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMjhdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7ImR1cCI6MTI4fV0sMjM0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMjldWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2NvZiI6MjA3LCJkdXAiOjEyOX1dLDIzNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTMwXVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19pdGVyYXRvcnMiOjI0NSwiLi9fd2tzIjozMDYsImR1cCI6MTMwfV0sMjM2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMzFdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2NvZiI6MjA3LCJkdXAiOjEzMX1dLDIzNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyMC4xLjIuMyBOdW1iZXIuaXNJbnRlZ2VyKG51bWJlcikNCnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpDQogICwgZmxvb3IgICAgPSBNYXRoLmZsb29yOw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0ludGVnZXIoaXQpew0KICByZXR1cm4gIWlzT2JqZWN0KGl0KSAmJiBpc0Zpbml0ZShpdCkgJiYgZmxvb3IoaXQpID09PSBpdDsNCn07DQp9LHsiLi9faXMtb2JqZWN0IjoyMzh9XSwyMzg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzEzMl1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiZHVwIjoxMzJ9XSwyMzk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gNy4yLjggSXNSZWdFeHAoYXJndW1lbnQpDQp2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKQ0KICAsIGNvZiAgICAgID0gcmVxdWlyZSgnLi9fY29mJykNCiAgLCBNQVRDSCAgICA9IHJlcXVpcmUoJy4vX3drcycpKCdtYXRjaCcpOw0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7DQogIHZhciBpc1JlZ0V4cDsNCiAgcmV0dXJuIGlzT2JqZWN0KGl0KSAmJiAoKGlzUmVnRXhwID0gaXRbTUFUQ0hdKSAhPT0gdW5kZWZpbmVkID8gISFpc1JlZ0V4cCA6IGNvZihpdCkgPT0gJ1JlZ0V4cCcpOw0KfTsNCn0seyIuL19jb2YiOjIwNywiLi9faXMtb2JqZWN0IjoyMzgsIi4vX3drcyI6MzA2fV0sMjQwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMzNdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2FuLW9iamVjdCI6MTk2LCJkdXAiOjEzM31dLDI0MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTM0XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19oaWRlIjoyMjksIi4vX29iamVjdC1jcmVhdGUiOjI1NSwiLi9fcHJvcGVydHktZGVzYyI6Mjc0LCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6MjgxLCIuL193a3MiOjMwNiwiZHVwIjoxMzR9XSwyNDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzEzNV1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX2hhcyI6MjI4LCIuL19oaWRlIjoyMjksIi4vX2l0ZXItY3JlYXRlIjoyNDEsIi4vX2l0ZXJhdG9ycyI6MjQ1LCIuL19saWJyYXJ5IjoyNDcsIi4vX29iamVjdC1ncG8iOjI2MywiLi9fcmVkZWZpbmUiOjI3NiwiLi9fc2V0LXRvLXN0cmluZy10YWciOjI4MSwiLi9fd2tzIjozMDYsImR1cCI6MTM1fV0sMjQzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxMzZdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX3drcyI6MzA2LCJkdXAiOjEzNn1dLDI0NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTM3XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyJkdXAiOjEzN31dLDI0NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTM4XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyJkdXAiOjEzOH1dLDI0NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTM5XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19vYmplY3Qta2V5cyI6MjY1LCIuL190by1pb2JqZWN0IjoyOTYsImR1cCI6MTM5fV0sMjQ3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0gZmFsc2U7DQp9LHt9XSwyNDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjAuMi4yLjE0IE1hdGguZXhwbTEoeCkNCnZhciAkZXhwbTEgPSBNYXRoLmV4cG0xOw0KbW9kdWxlLmV4cG9ydHMgPSAoISRleHBtMQ0KICAvLyBPbGQgRkYgYnVnDQogIHx8ICRleHBtMSgxMCkgPiAyMjAyNS40NjU3OTQ4MDY3MTkgfHwgJGV4cG0xKDEwKSA8IDIyMDI1LjQ2NTc5NDgwNjcxNjUxNjgNCiAgLy8gVG9yIEJyb3dzZXIgYnVnDQogIHx8ICRleHBtMSgtMmUtMTcpICE9IC0yZS0xNw0KKSA/IGZ1bmN0aW9uIGV4cG0xKHgpew0KICByZXR1cm4gKHggPSAreCkgPT0gMCA/IHggOiB4ID4gLTFlLTYgJiYgeCA8IDFlLTYgPyB4ICsgeCAqIHggLyAyIDogTWF0aC5leHAoeCkgLSAxOw0KfSA6ICRleHBtMTsNCn0se31dLDI0OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyMC4yLjIuMjAgTWF0aC5sb2cxcCh4KQ0KbW9kdWxlLmV4cG9ydHMgPSBNYXRoLmxvZzFwIHx8IGZ1bmN0aW9uIGxvZzFwKHgpew0KICByZXR1cm4gKHggPSAreCkgPiAtMWUtOCAmJiB4IDwgMWUtOCA/IHggLSB4ICogeCAvIDIgOiBNYXRoLmxvZygxICsgeCk7DQp9Ow0KfSx7fV0sMjUwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIwLjIuMi4yOCBNYXRoLnNpZ24oeCkNCm1vZHVsZS5leHBvcnRzID0gTWF0aC5zaWduIHx8IGZ1bmN0aW9uIHNpZ24oeCl7DQogIHJldHVybiAoeCA9ICt4KSA9PSAwIHx8IHggIT0geCA/IHggOiB4IDwgMCA/IC0xIDogMTsNCn07DQp9LHt9XSwyNTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE0MV1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fZmFpbHMiOjIyMywiLi9faGFzIjoyMjgsIi4vX2lzLW9iamVjdCI6MjM4LCIuL19vYmplY3QtZHAiOjI1NiwiLi9fdWlkIjozMDMsImR1cCI6MTQxfV0sMjUyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBNYXAgICAgID0gcmVxdWlyZSgnLi9lczYubWFwJykNCiAgLCAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBzaGFyZWQgID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ21ldGFkYXRhJykNCiAgLCBzdG9yZSAgID0gc2hhcmVkLnN0b3JlIHx8IChzaGFyZWQuc3RvcmUgPSBuZXcgKHJlcXVpcmUoJy4vZXM2LndlYWstbWFwJykpKTsNCg0KdmFyIGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAgPSBmdW5jdGlvbih0YXJnZXQsIHRhcmdldEtleSwgY3JlYXRlKXsNCiAgdmFyIHRhcmdldE1ldGFkYXRhID0gc3RvcmUuZ2V0KHRhcmdldCk7DQogIGlmKCF0YXJnZXRNZXRhZGF0YSl7DQogICAgaWYoIWNyZWF0ZSlyZXR1cm4gdW5kZWZpbmVkOw0KICAgIHN0b3JlLnNldCh0YXJnZXQsIHRhcmdldE1ldGFkYXRhID0gbmV3IE1hcCk7DQogIH0NCiAgdmFyIGtleU1ldGFkYXRhID0gdGFyZ2V0TWV0YWRhdGEuZ2V0KHRhcmdldEtleSk7DQogIGlmKCFrZXlNZXRhZGF0YSl7DQogICAgaWYoIWNyZWF0ZSlyZXR1cm4gdW5kZWZpbmVkOw0KICAgIHRhcmdldE1ldGFkYXRhLnNldCh0YXJnZXRLZXksIGtleU1ldGFkYXRhID0gbmV3IE1hcCk7DQogIH0gcmV0dXJuIGtleU1ldGFkYXRhOw0KfTsNCnZhciBvcmRpbmFyeUhhc093bk1ldGFkYXRhID0gZnVuY3Rpb24oTWV0YWRhdGFLZXksIE8sIFApew0KICB2YXIgbWV0YWRhdGFNYXAgPSBnZXRPckNyZWF0ZU1ldGFkYXRhTWFwKE8sIFAsIGZhbHNlKTsNCiAgcmV0dXJuIG1ldGFkYXRhTWFwID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IG1ldGFkYXRhTWFwLmhhcyhNZXRhZGF0YUtleSk7DQp9Ow0KdmFyIG9yZGluYXJ5R2V0T3duTWV0YWRhdGEgPSBmdW5jdGlvbihNZXRhZGF0YUtleSwgTywgUCl7DQogIHZhciBtZXRhZGF0YU1hcCA9IGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAoTywgUCwgZmFsc2UpOw0KICByZXR1cm4gbWV0YWRhdGFNYXAgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IG1ldGFkYXRhTWFwLmdldChNZXRhZGF0YUtleSk7DQp9Ow0KdmFyIG9yZGluYXJ5RGVmaW5lT3duTWV0YWRhdGEgPSBmdW5jdGlvbihNZXRhZGF0YUtleSwgTWV0YWRhdGFWYWx1ZSwgTywgUCl7DQogIGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAoTywgUCwgdHJ1ZSkuc2V0KE1ldGFkYXRhS2V5LCBNZXRhZGF0YVZhbHVlKTsNCn07DQp2YXIgb3JkaW5hcnlPd25NZXRhZGF0YUtleXMgPSBmdW5jdGlvbih0YXJnZXQsIHRhcmdldEtleSl7DQogIHZhciBtZXRhZGF0YU1hcCA9IGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAodGFyZ2V0LCB0YXJnZXRLZXksIGZhbHNlKQ0KICAgICwga2V5cyAgICAgICAgPSBbXTsNCiAgaWYobWV0YWRhdGFNYXApbWV0YWRhdGFNYXAuZm9yRWFjaChmdW5jdGlvbihfLCBrZXkpeyBrZXlzLnB1c2goa2V5KTsgfSk7DQogIHJldHVybiBrZXlzOw0KfTsNCnZhciB0b01ldGFLZXkgPSBmdW5jdGlvbihpdCl7DQogIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiBpdCA9PSAnc3ltYm9sJyA/IGl0IDogU3RyaW5nKGl0KTsNCn07DQp2YXIgZXhwID0gZnVuY3Rpb24oTyl7DQogICRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIE8pOw0KfTsNCg0KbW9kdWxlLmV4cG9ydHMgPSB7DQogIHN0b3JlOiBzdG9yZSwNCiAgbWFwOiBnZXRPckNyZWF0ZU1ldGFkYXRhTWFwLA0KICBoYXM6IG9yZGluYXJ5SGFzT3duTWV0YWRhdGEsDQogIGdldDogb3JkaW5hcnlHZXRPd25NZXRhZGF0YSwNCiAgc2V0OiBvcmRpbmFyeURlZmluZU93bk1ldGFkYXRhLA0KICBrZXlzOiBvcmRpbmFyeU93bk1ldGFkYXRhS2V5cywNCiAga2V5OiB0b01ldGFLZXksDQogIGV4cDogZXhwDQp9Ow0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19zaGFyZWQiOjI4MywiLi9lczYubWFwIjozMzksIi4vZXM2LndlYWstbWFwIjo0NDV9XSwyNTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE0Ml1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fY29mIjoyMDcsIi4vX2dsb2JhbCI6MjI3LCIuL190YXNrIjoyOTMsImR1cCI6MTQyfV0sMjU0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxNDNdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2ZhaWxzIjoyMjMsIi4vX2lvYmplY3QiOjIzNCwiLi9fb2JqZWN0LWdvcHMiOjI2MiwiLi9fb2JqZWN0LWtleXMiOjI2NSwiLi9fb2JqZWN0LXBpZSI6MjY2LCIuL190by1vYmplY3QiOjI5OCwiZHVwIjoxNDN9XSwyNTU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE0NF1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fYW4tb2JqZWN0IjoxOTYsIi4vX2RvbS1jcmVhdGUiOjIxOCwiLi9fZW51bS1idWcta2V5cyI6MjE5LCIuL19odG1sIjoyMzAsIi4vX29iamVjdC1kcHMiOjI1NywiLi9fc2hhcmVkLWtleSI6MjgyLCJkdXAiOjE0NH1dLDI1NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTQ1XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19hbi1vYmplY3QiOjE5NiwiLi9fZGVzY3JpcHRvcnMiOjIxNywiLi9faWU4LWRvbS1kZWZpbmUiOjIzMSwiLi9fdG8tcHJpbWl0aXZlIjoyOTksImR1cCI6MTQ1fV0sMjU3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxNDZdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2FuLW9iamVjdCI6MTk2LCIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19vYmplY3QtZHAiOjI1NiwiLi9fb2JqZWN0LWtleXMiOjI2NSwiZHVwIjoxNDZ9XSwyNTg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gRm9yY2VkIHJlcGxhY2VtZW50IHByb3RvdHlwZSBhY2Nlc3NvcnMgbWV0aG9kcw0KbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyl8fCAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpew0KICB2YXIgSyA9IE1hdGgucmFuZG9tKCk7DQogIC8vIEluIEZGIHRocm93cyBvbmx5IGRlZmluZSBtZXRob2RzDQogIF9fZGVmaW5lU2V0dGVyX18uY2FsbChudWxsLCBLLCBmdW5jdGlvbigpeyAvKiBlbXB0eSAqL30pOw0KICBkZWxldGUgcmVxdWlyZSgnLi9fZ2xvYmFsJylbS107DQp9KTsNCn0seyIuL19mYWlscyI6MjIzLCIuL19nbG9iYWwiOjIyNywiLi9fbGlicmFyeSI6MjQ3fV0sMjU5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxNDddWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2Rlc2NyaXB0b3JzIjoyMTcsIi4vX2hhcyI6MjI4LCIuL19pZTgtZG9tLWRlZmluZSI6MjMxLCIuL19vYmplY3QtcGllIjoyNjYsIi4vX3Byb3BlcnR5LWRlc2MiOjI3NCwiLi9fdG8taW9iamVjdCI6Mjk2LCIuL190by1wcmltaXRpdmUiOjI5OSwiZHVwIjoxNDd9XSwyNjA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE0OF1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fb2JqZWN0LWdvcG4iOjI2MSwiLi9fdG8taW9iamVjdCI6Mjk2LCJkdXAiOjE0OH1dLDI2MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTQ5XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19lbnVtLWJ1Zy1rZXlzIjoyMTksIi4vX29iamVjdC1rZXlzLWludGVybmFsIjoyNjQsImR1cCI6MTQ5fV0sMjYyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxNTBdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7ImR1cCI6MTUwfV0sMjYzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxNTFdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2hhcyI6MjI4LCIuL19zaGFyZWQta2V5IjoyODIsIi4vX3RvLW9iamVjdCI6Mjk4LCJkdXAiOjE1MX1dLDI2NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTUyXVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19hcnJheS1pbmNsdWRlcyI6MjAwLCIuL19oYXMiOjIyOCwiLi9fc2hhcmVkLWtleSI6MjgyLCIuL190by1pb2JqZWN0IjoyOTYsImR1cCI6MTUyfV0sMjY1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxNTNdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2VudW0tYnVnLWtleXMiOjIxOSwiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiOjI2NCwiZHVwIjoxNTN9XSwyNjY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE1NF1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiZHVwIjoxNTR9XSwyNjc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE1NV1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fY29yZSI6MjEyLCIuL19leHBvcnQiOjIyMSwiLi9fZmFpbHMiOjIyMywiZHVwIjoxNTV9XSwyNjg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGdldEtleXMgICA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJykNCiAgLCB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JykNCiAgLCBpc0VudW0gICAgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJykuZjsNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXNFbnRyaWVzKXsNCiAgcmV0dXJuIGZ1bmN0aW9uKGl0KXsNCiAgICB2YXIgTyAgICAgID0gdG9JT2JqZWN0KGl0KQ0KICAgICAgLCBrZXlzICAgPSBnZXRLZXlzKE8pDQogICAgICAsIGxlbmd0aCA9IGtleXMubGVuZ3RoDQogICAgICAsIGkgICAgICA9IDANCiAgICAgICwgcmVzdWx0ID0gW10NCiAgICAgICwga2V5Ow0KICAgIHdoaWxlKGxlbmd0aCA+IGkpaWYoaXNFbnVtLmNhbGwoTywga2V5ID0ga2V5c1tpKytdKSl7DQogICAgICByZXN1bHQucHVzaChpc0VudHJpZXMgPyBba2V5LCBPW2tleV1dIDogT1trZXldKTsNCiAgICB9IHJldHVybiByZXN1bHQ7DQogIH07DQp9Ow0KfSx7Ii4vX29iamVjdC1rZXlzIjoyNjUsIi4vX29iamVjdC1waWUiOjI2NiwiLi9fdG8taW9iamVjdCI6Mjk2fV0sMjY5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIGFsbCBvYmplY3Qga2V5cywgaW5jbHVkZXMgbm9uLWVudW1lcmFibGUgYW5kIHN5bWJvbHMNCnZhciBnT1BOICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykNCiAgLCBnT1BTICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJykNCiAgLCBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpDQogICwgUmVmbGVjdCAgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5SZWZsZWN0Ow0KbW9kdWxlLmV4cG9ydHMgPSBSZWZsZWN0ICYmIFJlZmxlY3Qub3duS2V5cyB8fCBmdW5jdGlvbiBvd25LZXlzKGl0KXsNCiAgdmFyIGtleXMgICAgICAgPSBnT1BOLmYoYW5PYmplY3QoaXQpKQ0KICAgICwgZ2V0U3ltYm9scyA9IGdPUFMuZjsNCiAgcmV0dXJuIGdldFN5bWJvbHMgPyBrZXlzLmNvbmNhdChnZXRTeW1ib2xzKGl0KSkgOiBrZXlzOw0KfTsNCn0seyIuL19hbi1vYmplY3QiOjE5NiwiLi9fZ2xvYmFsIjoyMjcsIi4vX29iamVjdC1nb3BuIjoyNjEsIi4vX29iamVjdC1nb3BzIjoyNjJ9XSwyNzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyICRwYXJzZUZsb2F0ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykucGFyc2VGbG9hdA0KICAsICR0cmltICAgICAgID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltOw0KDQptb2R1bGUuZXhwb3J0cyA9IDEgLyAkcGFyc2VGbG9hdChyZXF1aXJlKCcuL19zdHJpbmctd3MnKSArICctMCcpICE9PSAtSW5maW5pdHkgPyBmdW5jdGlvbiBwYXJzZUZsb2F0KHN0cil7DQogIHZhciBzdHJpbmcgPSAkdHJpbShTdHJpbmcoc3RyKSwgMykNCiAgICAsIHJlc3VsdCA9ICRwYXJzZUZsb2F0KHN0cmluZyk7DQogIHJldHVybiByZXN1bHQgPT09IDAgJiYgc3RyaW5nLmNoYXJBdCgwKSA9PSAnLScgPyAtMCA6IHJlc3VsdDsNCn0gOiAkcGFyc2VGbG9hdDsNCn0seyIuL19nbG9iYWwiOjIyNywiLi9fc3RyaW5nLXRyaW0iOjI5MSwiLi9fc3RyaW5nLXdzIjoyOTJ9XSwyNzE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLnBhcnNlSW50DQogICwgJHRyaW0gICAgID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltDQogICwgd3MgICAgICAgID0gcmVxdWlyZSgnLi9fc3RyaW5nLXdzJykNCiAgLCBoZXggICAgICAgPSAvXltcLStdPzBbeFhdLzsNCg0KbW9kdWxlLmV4cG9ydHMgPSAkcGFyc2VJbnQod3MgKyAnMDgnKSAhPT0gOCB8fCAkcGFyc2VJbnQod3MgKyAnMHgxNicpICE9PSAyMiA/IGZ1bmN0aW9uIHBhcnNlSW50KHN0ciwgcmFkaXgpew0KICB2YXIgc3RyaW5nID0gJHRyaW0oU3RyaW5nKHN0ciksIDMpOw0KICByZXR1cm4gJHBhcnNlSW50KHN0cmluZywgKHJhZGl4ID4+PiAwKSB8fCAoaGV4LnRlc3Qoc3RyaW5nKSA/IDE2IDogMTApKTsNCn0gOiAkcGFyc2VJbnQ7DQp9LHsiLi9fZ2xvYmFsIjoyMjcsIi4vX3N0cmluZy10cmltIjoyOTEsIi4vX3N0cmluZy13cyI6MjkyfV0sMjcyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciBwYXRoICAgICAgPSByZXF1aXJlKCcuL19wYXRoJykNCiAgLCBpbnZva2UgICAgPSByZXF1aXJlKCcuL19pbnZva2UnKQ0KICAsIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTsNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oLyogLi4ucGFyZ3MgKi8pew0KICB2YXIgZm4gICAgID0gYUZ1bmN0aW9uKHRoaXMpDQogICAgLCBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoDQogICAgLCBwYXJncyAgPSBBcnJheShsZW5ndGgpDQogICAgLCBpICAgICAgPSAwDQogICAgLCBfICAgICAgPSBwYXRoLl8NCiAgICAsIGhvbGRlciA9IGZhbHNlOw0KICB3aGlsZShsZW5ndGggPiBpKWlmKChwYXJnc1tpXSA9IGFyZ3VtZW50c1tpKytdKSA9PT0gXylob2xkZXIgPSB0cnVlOw0KICByZXR1cm4gZnVuY3Rpb24oLyogLi4uYXJncyAqLyl7DQogICAgdmFyIHRoYXQgPSB0aGlzDQogICAgICAsIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoDQogICAgICAsIGogPSAwLCBrID0gMCwgYXJnczsNCiAgICBpZighaG9sZGVyICYmICFhTGVuKXJldHVybiBpbnZva2UoZm4sIHBhcmdzLCB0aGF0KTsNCiAgICBhcmdzID0gcGFyZ3Muc2xpY2UoKTsNCiAgICBpZihob2xkZXIpZm9yKDtsZW5ndGggPiBqOyBqKyspaWYoYXJnc1tqXSA9PT0gXylhcmdzW2pdID0gYXJndW1lbnRzW2srK107DQogICAgd2hpbGUoYUxlbiA+IGspYXJncy5wdXNoKGFyZ3VtZW50c1trKytdKTsNCiAgICByZXR1cm4gaW52b2tlKGZuLCBhcmdzLCB0aGF0KTsNCiAgfTsNCn07DQp9LHsiLi9fYS1mdW5jdGlvbiI6MTkyLCIuL19pbnZva2UiOjIzMywiLi9fcGF0aCI6MjczfV0sMjczOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7DQp9LHsiLi9fZ2xvYmFsIjoyMjd9XSwyNzQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE1Nl1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiZHVwIjoxNTZ9XSwyNzU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTsNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odGFyZ2V0LCBzcmMsIHNhZmUpew0KICBmb3IodmFyIGtleSBpbiBzcmMpcmVkZWZpbmUodGFyZ2V0LCBrZXksIHNyY1trZXldLCBzYWZlKTsNCiAgcmV0dXJuIHRhcmdldDsNCn07DQp9LHsiLi9fcmVkZWZpbmUiOjI3Nn1dLDI3NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgZ2xvYmFsICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykNCiAgLCBoaWRlICAgICAgPSByZXF1aXJlKCcuL19oaWRlJykNCiAgLCBoYXMgICAgICAgPSByZXF1aXJlKCcuL19oYXMnKQ0KICAsIFNSQyAgICAgICA9IHJlcXVpcmUoJy4vX3VpZCcpKCdzcmMnKQ0KICAsIFRPX1NUUklORyA9ICd0b1N0cmluZycNCiAgLCAkdG9TdHJpbmcgPSBGdW5jdGlvbltUT19TVFJJTkddDQogICwgVFBMICAgICAgID0gKCcnICsgJHRvU3RyaW5nKS5zcGxpdChUT19TVFJJTkcpOw0KDQpyZXF1aXJlKCcuL19jb3JlJykuaW5zcGVjdFNvdXJjZSA9IGZ1bmN0aW9uKGl0KXsNCiAgcmV0dXJuICR0b1N0cmluZy5jYWxsKGl0KTsNCn07DQoNCihtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKE8sIGtleSwgdmFsLCBzYWZlKXsNCiAgdmFyIGlzRnVuY3Rpb24gPSB0eXBlb2YgdmFsID09ICdmdW5jdGlvbic7DQogIGlmKGlzRnVuY3Rpb24paGFzKHZhbCwgJ25hbWUnKSB8fCBoaWRlKHZhbCwgJ25hbWUnLCBrZXkpOw0KICBpZihPW2tleV0gPT09IHZhbClyZXR1cm47DQogIGlmKGlzRnVuY3Rpb24paGFzKHZhbCwgU1JDKSB8fCBoaWRlKHZhbCwgU1JDLCBPW2tleV0gPyAnJyArIE9ba2V5XSA6IFRQTC5qb2luKFN0cmluZyhrZXkpKSk7DQogIGlmKE8gPT09IGdsb2JhbCl7DQogICAgT1trZXldID0gdmFsOw0KICB9IGVsc2Ugew0KICAgIGlmKCFzYWZlKXsNCiAgICAgIGRlbGV0ZSBPW2tleV07DQogICAgICBoaWRlKE8sIGtleSwgdmFsKTsNCiAgICB9IGVsc2Ugew0KICAgICAgaWYoT1trZXldKU9ba2V5XSA9IHZhbDsNCiAgICAgIGVsc2UgaGlkZShPLCBrZXksIHZhbCk7DQogICAgfQ0KICB9DQovLyBhZGQgZmFrZSBGdW5jdGlvbiN0b1N0cmluZyBmb3IgY29ycmVjdCB3b3JrIHdyYXBwZWQgbWV0aG9kcyAvIGNvbnN0cnVjdG9ycyB3aXRoIG1ldGhvZHMgbGlrZSBMb0Rhc2ggaXNOYXRpdmUNCn0pKEZ1bmN0aW9uLnByb3RvdHlwZSwgVE9fU1RSSU5HLCBmdW5jdGlvbiB0b1N0cmluZygpew0KICByZXR1cm4gdHlwZW9mIHRoaXMgPT0gJ2Z1bmN0aW9uJyAmJiB0aGlzW1NSQ10gfHwgJHRvU3RyaW5nLmNhbGwodGhpcyk7DQp9KTsNCn0seyIuL19jb3JlIjoyMTIsIi4vX2dsb2JhbCI6MjI3LCIuL19oYXMiOjIyOCwiLi9faGlkZSI6MjI5LCIuL191aWQiOjMwM31dLDI3NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHJlZ0V4cCwgcmVwbGFjZSl7DQogIHZhciByZXBsYWNlciA9IHJlcGxhY2UgPT09IE9iamVjdChyZXBsYWNlKSA/IGZ1bmN0aW9uKHBhcnQpew0KICAgIHJldHVybiByZXBsYWNlW3BhcnRdOw0KICB9IDogcmVwbGFjZTsNCiAgcmV0dXJuIGZ1bmN0aW9uKGl0KXsNCiAgICByZXR1cm4gU3RyaW5nKGl0KS5yZXBsYWNlKHJlZ0V4cCwgcmVwbGFjZXIpOw0KICB9Ow0KfTsNCn0se31dLDI3ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyA3LjIuOSBTYW1lVmFsdWUoeCwgeSkNCm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmlzIHx8IGZ1bmN0aW9uIGlzKHgsIHkpew0KICByZXR1cm4geCA9PT0geSA/IHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5IDogeCAhPSB4ICYmIHkgIT0geTsNCn07DQp9LHt9XSwyNzk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE1OV1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fYW4tb2JqZWN0IjoxOTYsIi4vX2N0eCI6MjE0LCIuL19pcy1vYmplY3QiOjIzOCwiLi9fb2JqZWN0LWdvcGQiOjI1OSwiZHVwIjoxNTl9XSwyODA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyIGdsb2JhbCAgICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykNCiAgLCBkUCAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpDQogICwgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpDQogICwgU1BFQ0lFUyAgICAgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpOw0KDQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKEtFWSl7DQogIHZhciBDID0gZ2xvYmFsW0tFWV07DQogIGlmKERFU0NSSVBUT1JTICYmIEMgJiYgIUNbU1BFQ0lFU10pZFAuZihDLCBTUEVDSUVTLCB7DQogICAgY29uZmlndXJhYmxlOiB0cnVlLA0KICAgIGdldDogZnVuY3Rpb24oKXsgcmV0dXJuIHRoaXM7IH0NCiAgfSk7DQp9Ow0KfSx7Ii4vX2Rlc2NyaXB0b3JzIjoyMTcsIi4vX2dsb2JhbCI6MjI3LCIuL19vYmplY3QtZHAiOjI1NiwiLi9fd2tzIjozMDZ9XSwyODE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE2MV1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9faGFzIjoyMjgsIi4vX29iamVjdC1kcCI6MjU2LCIuL193a3MiOjMwNiwiZHVwIjoxNjF9XSwyODI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE2Ml1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fc2hhcmVkIjoyODMsIi4vX3VpZCI6MzAzLCJkdXAiOjE2Mn1dLDI4MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTYzXVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19nbG9iYWwiOjIyNywiZHVwIjoxNjN9XSwyODQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE2NF1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fYS1mdW5jdGlvbiI6MTkyLCIuL19hbi1vYmplY3QiOjE5NiwiLi9fd2tzIjozMDYsImR1cCI6MTY0fV0sMjg1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obWV0aG9kLCBhcmcpew0KICByZXR1cm4gISFtZXRob2QgJiYgZmFpbHMoZnVuY3Rpb24oKXsNCiAgICBhcmcgPyBtZXRob2QuY2FsbChudWxsLCBmdW5jdGlvbigpe30sIDEpIDogbWV0aG9kLmNhbGwobnVsbCk7DQogIH0pOw0KfTsNCn0seyIuL19mYWlscyI6MjIzfV0sMjg2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxNjVdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2RlZmluZWQiOjIxNiwiLi9fdG8taW50ZWdlciI6Mjk1LCJkdXAiOjE2NX1dLDI4NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBoZWxwZXIgZm9yIFN0cmluZyN7c3RhcnRzV2l0aCwgZW5kc1dpdGgsIGluY2x1ZGVzfQ0KdmFyIGlzUmVnRXhwID0gcmVxdWlyZSgnLi9faXMtcmVnZXhwJykNCiAgLCBkZWZpbmVkICA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTsNCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih0aGF0LCBzZWFyY2hTdHJpbmcsIE5BTUUpew0KICBpZihpc1JlZ0V4cChzZWFyY2hTdHJpbmcpKXRocm93IFR5cGVFcnJvcignU3RyaW5nIycgKyBOQU1FICsgIiBkb2Vzbid0IGFjY2VwdCByZWdleCEiKTsNCiAgcmV0dXJuIFN0cmluZyhkZWZpbmVkKHRoYXQpKTsNCn07DQp9LHsiLi9fZGVmaW5lZCI6MjE2LCIuL19pcy1yZWdleHAiOjIzOX1dLDI4ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgZmFpbHMgICA9IHJlcXVpcmUoJy4vX2ZhaWxzJykNCiAgLCBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpDQogICwgcXVvdCAgICA9IC8iL2c7DQovLyBCLjIuMy4yLjEgQ3JlYXRlSFRNTChzdHJpbmcsIHRhZywgYXR0cmlidXRlLCB2YWx1ZSkNCnZhciBjcmVhdGVIVE1MID0gZnVuY3Rpb24oc3RyaW5nLCB0YWcsIGF0dHJpYnV0ZSwgdmFsdWUpIHsNCiAgdmFyIFMgID0gU3RyaW5nKGRlZmluZWQoc3RyaW5nKSkNCiAgICAsIHAxID0gJzwnICsgdGFnOw0KICBpZihhdHRyaWJ1dGUgIT09ICcnKXAxICs9ICcgJyArIGF0dHJpYnV0ZSArICc9IicgKyBTdHJpbmcodmFsdWUpLnJlcGxhY2UocXVvdCwgJyZxdW90OycpICsgJyInOw0KICByZXR1cm4gcDEgKyAnPicgKyBTICsgJzwvJyArIHRhZyArICc+JzsNCn07DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKE5BTUUsIGV4ZWMpew0KICB2YXIgTyA9IHt9Ow0KICBPW05BTUVdID0gZXhlYyhjcmVhdGVIVE1MKTsNCiAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBmYWlscyhmdW5jdGlvbigpew0KICAgIHZhciB0ZXN0ID0gJydbTkFNRV0oJyInKTsNCiAgICByZXR1cm4gdGVzdCAhPT0gdGVzdC50b0xvd2VyQ2FzZSgpIHx8IHRlc3Quc3BsaXQoJyInKS5sZW5ndGggPiAzOw0KICB9KSwgJ1N0cmluZycsIE8pOw0KfTsNCn0seyIuL19kZWZpbmVkIjoyMTYsIi4vX2V4cG9ydCI6MjIxLCIuL19mYWlscyI6MjIzfV0sMjg5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLXN0cmluZy1wYWQtc3RhcnQtZW5kDQp2YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKQ0KICAsIHJlcGVhdCAgID0gcmVxdWlyZSgnLi9fc3RyaW5nLXJlcGVhdCcpDQogICwgZGVmaW5lZCAgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odGhhdCwgbWF4TGVuZ3RoLCBmaWxsU3RyaW5nLCBsZWZ0KXsNCiAgdmFyIFMgICAgICAgICAgICA9IFN0cmluZyhkZWZpbmVkKHRoYXQpKQ0KICAgICwgc3RyaW5nTGVuZ3RoID0gUy5sZW5ndGgNCiAgICAsIGZpbGxTdHIgICAgICA9IGZpbGxTdHJpbmcgPT09IHVuZGVmaW5lZCA/ICcgJyA6IFN0cmluZyhmaWxsU3RyaW5nKQ0KICAgICwgaW50TWF4TGVuZ3RoID0gdG9MZW5ndGgobWF4TGVuZ3RoKTsNCiAgaWYoaW50TWF4TGVuZ3RoIDw9IHN0cmluZ0xlbmd0aCB8fCBmaWxsU3RyID09ICcnKXJldHVybiBTOw0KICB2YXIgZmlsbExlbiA9IGludE1heExlbmd0aCAtIHN0cmluZ0xlbmd0aA0KICAgICwgc3RyaW5nRmlsbGVyID0gcmVwZWF0LmNhbGwoZmlsbFN0ciwgTWF0aC5jZWlsKGZpbGxMZW4gLyBmaWxsU3RyLmxlbmd0aCkpOw0KICBpZihzdHJpbmdGaWxsZXIubGVuZ3RoID4gZmlsbExlbilzdHJpbmdGaWxsZXIgPSBzdHJpbmdGaWxsZXIuc2xpY2UoMCwgZmlsbExlbik7DQogIHJldHVybiBsZWZ0ID8gc3RyaW5nRmlsbGVyICsgUyA6IFMgKyBzdHJpbmdGaWxsZXI7DQp9Ow0KDQp9LHsiLi9fZGVmaW5lZCI6MjE2LCIuL19zdHJpbmctcmVwZWF0IjoyOTAsIi4vX3RvLWxlbmd0aCI6Mjk3fV0sMjkwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJykNCiAgLCBkZWZpbmVkICAgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmVwZWF0KGNvdW50KXsNCiAgdmFyIHN0ciA9IFN0cmluZyhkZWZpbmVkKHRoaXMpKQ0KICAgICwgcmVzID0gJycNCiAgICAsIG4gICA9IHRvSW50ZWdlcihjb3VudCk7DQogIGlmKG4gPCAwIHx8IG4gPT0gSW5maW5pdHkpdGhyb3cgUmFuZ2VFcnJvcigiQ291bnQgY2FuJ3QgYmUgbmVnYXRpdmUiKTsNCiAgZm9yKDtuID4gMDsgKG4gPj4+PSAxKSAmJiAoc3RyICs9IHN0cikpaWYobiAmIDEpcmVzICs9IHN0cjsNCiAgcmV0dXJuIHJlczsNCn07DQp9LHsiLi9fZGVmaW5lZCI6MjE2LCIuL190by1pbnRlZ2VyIjoyOTV9XSwyOTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJykNCiAgLCBmYWlscyAgID0gcmVxdWlyZSgnLi9fZmFpbHMnKQ0KICAsIHNwYWNlcyAgPSByZXF1aXJlKCcuL19zdHJpbmctd3MnKQ0KICAsIHNwYWNlICAgPSAnWycgKyBzcGFjZXMgKyAnXScNCiAgLCBub24gICAgID0gJ1x1MjAwYlx1MDA4NScNCiAgLCBsdHJpbSAgID0gUmVnRXhwKCdeJyArIHNwYWNlICsgc3BhY2UgKyAnKicpDQogICwgcnRyaW0gICA9IFJlZ0V4cChzcGFjZSArIHNwYWNlICsgJyokJyk7DQoNCnZhciBleHBvcnRlciA9IGZ1bmN0aW9uKEtFWSwgZXhlYywgQUxJQVMpew0KICB2YXIgZXhwICAgPSB7fTsNCiAgdmFyIEZPUkNFID0gZmFpbHMoZnVuY3Rpb24oKXsNCiAgICByZXR1cm4gISFzcGFjZXNbS0VZXSgpIHx8IG5vbltLRVldKCkgIT0gbm9uOw0KICB9KTsNCiAgdmFyIGZuID0gZXhwW0tFWV0gPSBGT1JDRSA/IGV4ZWModHJpbSkgOiBzcGFjZXNbS0VZXTsNCiAgaWYoQUxJQVMpZXhwW0FMSUFTXSA9IGZuOw0KICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIEZPUkNFLCAnU3RyaW5nJywgZXhwKTsNCn07DQoNCi8vIDEgLT4gU3RyaW5nI3RyaW1MZWZ0DQovLyAyIC0+IFN0cmluZyN0cmltUmlnaHQNCi8vIDMgLT4gU3RyaW5nI3RyaW0NCnZhciB0cmltID0gZXhwb3J0ZXIudHJpbSA9IGZ1bmN0aW9uKHN0cmluZywgVFlQRSl7DQogIHN0cmluZyA9IFN0cmluZyhkZWZpbmVkKHN0cmluZykpOw0KICBpZihUWVBFICYgMSlzdHJpbmcgPSBzdHJpbmcucmVwbGFjZShsdHJpbSwgJycpOw0KICBpZihUWVBFICYgMilzdHJpbmcgPSBzdHJpbmcucmVwbGFjZShydHJpbSwgJycpOw0KICByZXR1cm4gc3RyaW5nOw0KfTsNCg0KbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlcjsNCn0seyIuL19kZWZpbmVkIjoyMTYsIi4vX2V4cG9ydCI6MjIxLCIuL19mYWlscyI6MjIzLCIuL19zdHJpbmctd3MiOjI5Mn1dLDI5MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9ICdceDA5XHgwQVx4MEJceDBDXHgwRFx4MjBceEEwXHUxNjgwXHUxODBFXHUyMDAwXHUyMDAxXHUyMDAyXHUyMDAzJyArDQogICdcdTIwMDRcdTIwMDVcdTIwMDZcdTIwMDdcdTIwMDhcdTIwMDlcdTIwMEFcdTIwMkZcdTIwNUZcdTMwMDBcdTIwMjhcdTIwMjlcdUZFRkYnOw0KfSx7fV0sMjkzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxNjZdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2NvZiI6MjA3LCIuL19jdHgiOjIxNCwiLi9fZG9tLWNyZWF0ZSI6MjE4LCIuL19nbG9iYWwiOjIyNywiLi9faHRtbCI6MjMwLCIuL19pbnZva2UiOjIzMywiZHVwIjoxNjZ9XSwyOTQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE2N11bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fdG8taW50ZWdlciI6Mjk1LCJkdXAiOjE2N31dLDI5NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTY4XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyJkdXAiOjE2OH1dLDI5NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTY5XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19kZWZpbmVkIjoyMTYsIi4vX2lvYmplY3QiOjIzNCwiZHVwIjoxNjl9XSwyOTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE3MF1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fdG8taW50ZWdlciI6Mjk1LCJkdXAiOjE3MH1dLDI5ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTcxXVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19kZWZpbmVkIjoyMTYsImR1cCI6MTcxfV0sMjk5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxNzJdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2lzLW9iamVjdCI6MjM4LCJkdXAiOjE3Mn1dLDMwMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQppZihyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpKXsNCiAgdmFyIExJQlJBUlkgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19saWJyYXJ5JykNCiAgICAsIGdsb2JhbCAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKQ0KICAgICwgZmFpbHMgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2ZhaWxzJykNCiAgICAsICRleHBvcnQgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAgICwgJHR5cGVkICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX3R5cGVkJykNCiAgICAsICRidWZmZXIgICAgICAgICAgICAgPSByZXF1aXJlKCcuL190eXBlZC1idWZmZXInKQ0KICAgICwgY3R4ICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2N0eCcpDQogICAgLCBhbkluc3RhbmNlICAgICAgICAgID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKQ0KICAgICwgcHJvcGVydHlEZXNjICAgICAgICA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKQ0KICAgICwgaGlkZSAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hpZGUnKQ0KICAgICwgcmVkZWZpbmVBbGwgICAgICAgICA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpDQogICAgLCBpc0ludGVnZXIgICAgICAgICAgID0gcmVxdWlyZSgnLi9faXMtaW50ZWdlcicpDQogICAgLCB0b0ludGVnZXIgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpDQogICAgLCB0b0xlbmd0aCAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJykNCiAgICAsIHRvSW5kZXggICAgICAgICAgICAgPSByZXF1aXJlKCcuL190by1pbmRleCcpDQogICAgLCB0b1ByaW1pdGl2ZSAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJykNCiAgICAsIGhhcyAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19oYXMnKQ0KICAgICwgc2FtZSAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX3NhbWUtdmFsdWUnKQ0KICAgICwgY2xhc3NvZiAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKQ0KICAgICwgaXNPYmplY3QgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpDQogICAgLCB0b09iamVjdCAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JykNCiAgICAsIGlzQXJyYXlJdGVyICAgICAgICAgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJykNCiAgICAsIGNyZWF0ZSAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJykNCiAgICAsIGdldFByb3RvdHlwZU9mICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJykNCiAgICAsIGdPUE4gICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmYNCiAgICAsIGlzSXRlcmFibGUgICAgICAgICAgPSByZXF1aXJlKCcuL2NvcmUuaXMtaXRlcmFibGUnKQ0KICAgICwgZ2V0SXRlckZuICAgICAgICAgICA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJykNCiAgICAsIHVpZCAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL191aWQnKQ0KICAgICwgd2tzICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX3drcycpDQogICAgLCBjcmVhdGVBcnJheU1ldGhvZCAgID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpDQogICAgLCBjcmVhdGVBcnJheUluY2x1ZGVzID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKQ0KICAgICwgc3BlY2llc0NvbnN0cnVjdG9yICA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKQ0KICAgICwgQXJyYXlJdGVyYXRvcnMgICAgICA9IHJlcXVpcmUoJy4vZXM2LmFycmF5Lml0ZXJhdG9yJykNCiAgICAsIEl0ZXJhdG9ycyAgICAgICAgICAgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKQ0KICAgICwgJGl0ZXJEZXRlY3QgICAgICAgICA9IHJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0JykNCiAgICAsIHNldFNwZWNpZXMgICAgICAgICAgPSByZXF1aXJlKCcuL19zZXQtc3BlY2llcycpDQogICAgLCBhcnJheUZpbGwgICAgICAgICAgID0gcmVxdWlyZSgnLi9fYXJyYXktZmlsbCcpDQogICAgLCBhcnJheUNvcHlXaXRoaW4gICAgID0gcmVxdWlyZSgnLi9fYXJyYXktY29weS13aXRoaW4nKQ0KICAgICwgJERQICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpDQogICAgLCAkR09QRCAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKQ0KICAgICwgZFAgICAgICAgICAgICAgICAgICA9ICREUC5mDQogICAgLCBnT1BEICAgICAgICAgICAgICAgID0gJEdPUEQuZg0KICAgICwgUmFuZ2VFcnJvciAgICAgICAgICA9IGdsb2JhbC5SYW5nZUVycm9yDQogICAgLCBUeXBlRXJyb3IgICAgICAgICAgID0gZ2xvYmFsLlR5cGVFcnJvcg0KICAgICwgVWludDhBcnJheSAgICAgICAgICA9IGdsb2JhbC5VaW50OEFycmF5DQogICAgLCBBUlJBWV9CVUZGRVIgICAgICAgID0gJ0FycmF5QnVmZmVyJw0KICAgICwgU0hBUkVEX0JVRkZFUiAgICAgICA9ICdTaGFyZWQnICsgQVJSQVlfQlVGRkVSDQogICAgLCBCWVRFU19QRVJfRUxFTUVOVCAgID0gJ0JZVEVTX1BFUl9FTEVNRU5UJw0KICAgICwgUFJPVE9UWVBFICAgICAgICAgICA9ICdwcm90b3R5cGUnDQogICAgLCBBcnJheVByb3RvICAgICAgICAgID0gQXJyYXlbUFJPVE9UWVBFXQ0KICAgICwgJEFycmF5QnVmZmVyICAgICAgICA9ICRidWZmZXIuQXJyYXlCdWZmZXINCiAgICAsICREYXRhVmlldyAgICAgICAgICAgPSAkYnVmZmVyLkRhdGFWaWV3DQogICAgLCBhcnJheUZvckVhY2ggICAgICAgID0gY3JlYXRlQXJyYXlNZXRob2QoMCkNCiAgICAsIGFycmF5RmlsdGVyICAgICAgICAgPSBjcmVhdGVBcnJheU1ldGhvZCgyKQ0KICAgICwgYXJyYXlTb21lICAgICAgICAgICA9IGNyZWF0ZUFycmF5TWV0aG9kKDMpDQogICAgLCBhcnJheUV2ZXJ5ICAgICAgICAgID0gY3JlYXRlQXJyYXlNZXRob2QoNCkNCiAgICAsIGFycmF5RmluZCAgICAgICAgICAgPSBjcmVhdGVBcnJheU1ldGhvZCg1KQ0KICAgICwgYXJyYXlGaW5kSW5kZXggICAgICA9IGNyZWF0ZUFycmF5TWV0aG9kKDYpDQogICAgLCBhcnJheUluY2x1ZGVzICAgICAgID0gY3JlYXRlQXJyYXlJbmNsdWRlcyh0cnVlKQ0KICAgICwgYXJyYXlJbmRleE9mICAgICAgICA9IGNyZWF0ZUFycmF5SW5jbHVkZXMoZmFsc2UpDQogICAgLCBhcnJheVZhbHVlcyAgICAgICAgID0gQXJyYXlJdGVyYXRvcnMudmFsdWVzDQogICAgLCBhcnJheUtleXMgICAgICAgICAgID0gQXJyYXlJdGVyYXRvcnMua2V5cw0KICAgICwgYXJyYXlFbnRyaWVzICAgICAgICA9IEFycmF5SXRlcmF0b3JzLmVudHJpZXMNCiAgICAsIGFycmF5TGFzdEluZGV4T2YgICAgPSBBcnJheVByb3RvLmxhc3RJbmRleE9mDQogICAgLCBhcnJheVJlZHVjZSAgICAgICAgID0gQXJyYXlQcm90by5yZWR1Y2UNCiAgICAsIGFycmF5UmVkdWNlUmlnaHQgICAgPSBBcnJheVByb3RvLnJlZHVjZVJpZ2h0DQogICAgLCBhcnJheUpvaW4gICAgICAgICAgID0gQXJyYXlQcm90by5qb2luDQogICAgLCBhcnJheVNvcnQgICAgICAgICAgID0gQXJyYXlQcm90by5zb3J0DQogICAgLCBhcnJheVNsaWNlICAgICAgICAgID0gQXJyYXlQcm90by5zbGljZQ0KICAgICwgYXJyYXlUb1N0cmluZyAgICAgICA9IEFycmF5UHJvdG8udG9TdHJpbmcNCiAgICAsIGFycmF5VG9Mb2NhbGVTdHJpbmcgPSBBcnJheVByb3RvLnRvTG9jYWxlU3RyaW5nDQogICAgLCBJVEVSQVRPUiAgICAgICAgICAgID0gd2tzKCdpdGVyYXRvcicpDQogICAgLCBUQUcgICAgICAgICAgICAgICAgID0gd2tzKCd0b1N0cmluZ1RhZycpDQogICAgLCBUWVBFRF9DT05TVFJVQ1RPUiAgID0gdWlkKCd0eXBlZF9jb25zdHJ1Y3RvcicpDQogICAgLCBERUZfQ09OU1RSVUNUT1IgICAgID0gdWlkKCdkZWZfY29uc3RydWN0b3InKQ0KICAgICwgQUxMX0NPTlNUUlVDVE9SUyAgICA9ICR0eXBlZC5DT05TVFINCiAgICAsIFRZUEVEX0FSUkFZICAgICAgICAgPSAkdHlwZWQuVFlQRUQNCiAgICAsIFZJRVcgICAgICAgICAgICAgICAgPSAkdHlwZWQuVklFVw0KICAgICwgV1JPTkdfTEVOR1RIICAgICAgICA9ICdXcm9uZyBsZW5ndGghJzsNCg0KICB2YXIgJG1hcCA9IGNyZWF0ZUFycmF5TWV0aG9kKDEsIGZ1bmN0aW9uKE8sIGxlbmd0aCl7DQogICAgcmV0dXJuIGFsbG9jYXRlKHNwZWNpZXNDb25zdHJ1Y3RvcihPLCBPW0RFRl9DT05TVFJVQ1RPUl0pLCBsZW5ndGgpOw0KICB9KTsNCg0KICB2YXIgTElUVExFX0VORElBTiA9IGZhaWxzKGZ1bmN0aW9uKCl7DQogICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KG5ldyBVaW50MTZBcnJheShbMV0pLmJ1ZmZlcilbMF0gPT09IDE7DQogIH0pOw0KDQogIHZhciBGT1JDRURfU0VUID0gISFVaW50OEFycmF5ICYmICEhVWludDhBcnJheVtQUk9UT1RZUEVdLnNldCAmJiBmYWlscyhmdW5jdGlvbigpew0KICAgIG5ldyBVaW50OEFycmF5KDEpLnNldCh7fSk7DQogIH0pOw0KDQogIHZhciBzdHJpY3RUb0xlbmd0aCA9IGZ1bmN0aW9uKGl0LCBTQU1FKXsNCiAgICBpZihpdCA9PT0gdW5kZWZpbmVkKXRocm93IFR5cGVFcnJvcihXUk9OR19MRU5HVEgpOw0KICAgIHZhciBudW1iZXIgPSAraXQNCiAgICAgICwgbGVuZ3RoID0gdG9MZW5ndGgoaXQpOw0KICAgIGlmKFNBTUUgJiYgIXNhbWUobnVtYmVyLCBsZW5ndGgpKXRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTsNCiAgICByZXR1cm4gbGVuZ3RoOw0KICB9Ow0KDQogIHZhciB0b09mZnNldCA9IGZ1bmN0aW9uKGl0LCBCWVRFUyl7DQogICAgdmFyIG9mZnNldCA9IHRvSW50ZWdlcihpdCk7DQogICAgaWYob2Zmc2V0IDwgMCB8fCBvZmZzZXQgJSBCWVRFUyl0aHJvdyBSYW5nZUVycm9yKCdXcm9uZyBvZmZzZXQhJyk7DQogICAgcmV0dXJuIG9mZnNldDsNCiAgfTsNCg0KICB2YXIgdmFsaWRhdGUgPSBmdW5jdGlvbihpdCl7DQogICAgaWYoaXNPYmplY3QoaXQpICYmIFRZUEVEX0FSUkFZIGluIGl0KXJldHVybiBpdDsNCiAgICB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIHR5cGVkIGFycmF5IScpOw0KICB9Ow0KDQogIHZhciBhbGxvY2F0ZSA9IGZ1bmN0aW9uKEMsIGxlbmd0aCl7DQogICAgaWYoIShpc09iamVjdChDKSAmJiBUWVBFRF9DT05TVFJVQ1RPUiBpbiBDKSl7DQogICAgICB0aHJvdyBUeXBlRXJyb3IoJ0l0IGlzIG5vdCBhIHR5cGVkIGFycmF5IGNvbnN0cnVjdG9yIScpOw0KICAgIH0gcmV0dXJuIG5ldyBDKGxlbmd0aCk7DQogIH07DQoNCiAgdmFyIHNwZWNpZXNGcm9tTGlzdCA9IGZ1bmN0aW9uKE8sIGxpc3Qpew0KICAgIHJldHVybiBmcm9tTGlzdChzcGVjaWVzQ29uc3RydWN0b3IoTywgT1tERUZfQ09OU1RSVUNUT1JdKSwgbGlzdCk7DQogIH07DQoNCiAgdmFyIGZyb21MaXN0ID0gZnVuY3Rpb24oQywgbGlzdCl7DQogICAgdmFyIGluZGV4ICA9IDANCiAgICAgICwgbGVuZ3RoID0gbGlzdC5sZW5ndGgNCiAgICAgICwgcmVzdWx0ID0gYWxsb2NhdGUoQywgbGVuZ3RoKTsNCiAgICB3aGlsZShsZW5ndGggPiBpbmRleClyZXN1bHRbaW5kZXhdID0gbGlzdFtpbmRleCsrXTsNCiAgICByZXR1cm4gcmVzdWx0Ow0KICB9Ow0KDQogIHZhciBhZGRHZXR0ZXIgPSBmdW5jdGlvbihpdCwga2V5LCBpbnRlcm5hbCl7DQogICAgZFAoaXQsIGtleSwge2dldDogZnVuY3Rpb24oKXsgcmV0dXJuIHRoaXMuX2RbaW50ZXJuYWxdOyB9fSk7DQogIH07DQoNCiAgdmFyICRmcm9tID0gZnVuY3Rpb24gZnJvbShzb3VyY2UgLyosIG1hcGZuLCB0aGlzQXJnICovKXsNCiAgICB2YXIgTyAgICAgICA9IHRvT2JqZWN0KHNvdXJjZSkNCiAgICAgICwgYUxlbiAgICA9IGFyZ3VtZW50cy5sZW5ndGgNCiAgICAgICwgbWFwZm4gICA9IGFMZW4gPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkDQogICAgICAsIG1hcHBpbmcgPSBtYXBmbiAhPT0gdW5kZWZpbmVkDQogICAgICAsIGl0ZXJGbiAgPSBnZXRJdGVyRm4oTykNCiAgICAgICwgaSwgbGVuZ3RoLCB2YWx1ZXMsIHJlc3VsdCwgc3RlcCwgaXRlcmF0b3I7DQogICAgaWYoaXRlckZuICE9IHVuZGVmaW5lZCAmJiAhaXNBcnJheUl0ZXIoaXRlckZuKSl7DQogICAgICBmb3IoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChPKSwgdmFsdWVzID0gW10sIGkgPSAwOyAhKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7IGkrKyl7DQogICAgICAgIHZhbHVlcy5wdXNoKHN0ZXAudmFsdWUpOw0KICAgICAgfSBPID0gdmFsdWVzOw0KICAgIH0NCiAgICBpZihtYXBwaW5nICYmIGFMZW4gPiAyKW1hcGZuID0gY3R4KG1hcGZuLCBhcmd1bWVudHNbMl0sIDIpOw0KICAgIGZvcihpID0gMCwgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpLCByZXN1bHQgPSBhbGxvY2F0ZSh0aGlzLCBsZW5ndGgpOyBsZW5ndGggPiBpOyBpKyspew0KICAgICAgcmVzdWx0W2ldID0gbWFwcGluZyA/IG1hcGZuKE9baV0sIGkpIDogT1tpXTsNCiAgICB9DQogICAgcmV0dXJuIHJlc3VsdDsNCiAgfTsNCg0KICB2YXIgJG9mID0gZnVuY3Rpb24gb2YoLyouLi5pdGVtcyovKXsNCiAgICB2YXIgaW5kZXggID0gMA0KICAgICAgLCBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoDQogICAgICAsIHJlc3VsdCA9IGFsbG9jYXRlKHRoaXMsIGxlbmd0aCk7DQogICAgd2hpbGUobGVuZ3RoID4gaW5kZXgpcmVzdWx0W2luZGV4XSA9IGFyZ3VtZW50c1tpbmRleCsrXTsNCiAgICByZXR1cm4gcmVzdWx0Ow0KICB9Ow0KDQogIC8vIGlPUyBTYWZhcmkgNi54IGZhaWxzIGhlcmUNCiAgdmFyIFRPX0xPQ0FMRV9CVUcgPSAhIVVpbnQ4QXJyYXkgJiYgZmFpbHMoZnVuY3Rpb24oKXsgYXJyYXlUb0xvY2FsZVN0cmluZy5jYWxsKG5ldyBVaW50OEFycmF5KDEpKTsgfSk7DQoNCiAgdmFyICR0b0xvY2FsZVN0cmluZyA9IGZ1bmN0aW9uIHRvTG9jYWxlU3RyaW5nKCl7DQogICAgcmV0dXJuIGFycmF5VG9Mb2NhbGVTdHJpbmcuYXBwbHkoVE9fTE9DQUxFX0JVRyA/IGFycmF5U2xpY2UuY2FsbCh2YWxpZGF0ZSh0aGlzKSkgOiB2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTsNCiAgfTsNCg0KICB2YXIgcHJvdG8gPSB7DQogICAgY29weVdpdGhpbjogZnVuY3Rpb24gY29weVdpdGhpbih0YXJnZXQsIHN0YXJ0IC8qLCBlbmQgKi8pew0KICAgICAgcmV0dXJuIGFycmF5Q29weVdpdGhpbi5jYWxsKHZhbGlkYXRlKHRoaXMpLCB0YXJnZXQsIHN0YXJ0LCBhcmd1bWVudHMubGVuZ3RoID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZCk7DQogICAgfSwNCiAgICBldmVyeTogZnVuY3Rpb24gZXZlcnkoY2FsbGJhY2tmbiAvKiwgdGhpc0FyZyAqLyl7DQogICAgICByZXR1cm4gYXJyYXlFdmVyeSh2YWxpZGF0ZSh0aGlzKSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpOw0KICAgIH0sDQogICAgZmlsbDogZnVuY3Rpb24gZmlsbCh2YWx1ZSAvKiwgc3RhcnQsIGVuZCAqLyl7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnMNCiAgICAgIHJldHVybiBhcnJheUZpbGwuYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7DQogICAgfSwNCiAgICBmaWx0ZXI6IGZ1bmN0aW9uIGZpbHRlcihjYWxsYmFja2ZuIC8qLCB0aGlzQXJnICovKXsNCiAgICAgIHJldHVybiBzcGVjaWVzRnJvbUxpc3QodGhpcywgYXJyYXlGaWx0ZXIodmFsaWRhdGUodGhpcyksIGNhbGxiYWNrZm4sDQogICAgICAgIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKSk7DQogICAgfSwNCiAgICBmaW5kOiBmdW5jdGlvbiBmaW5kKHByZWRpY2F0ZSAvKiwgdGhpc0FyZyAqLyl7DQogICAgICByZXR1cm4gYXJyYXlGaW5kKHZhbGlkYXRlKHRoaXMpLCBwcmVkaWNhdGUsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTsNCiAgICB9LA0KICAgIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KHByZWRpY2F0ZSAvKiwgdGhpc0FyZyAqLyl7DQogICAgICByZXR1cm4gYXJyYXlGaW5kSW5kZXgodmFsaWRhdGUodGhpcyksIHByZWRpY2F0ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpOw0KICAgIH0sDQogICAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja2ZuIC8qLCB0aGlzQXJnICovKXsNCiAgICAgIGFycmF5Rm9yRWFjaCh2YWxpZGF0ZSh0aGlzKSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpOw0KICAgIH0sDQogICAgaW5kZXhPZjogZnVuY3Rpb24gaW5kZXhPZihzZWFyY2hFbGVtZW50IC8qLCBmcm9tSW5kZXggKi8pew0KICAgICAgcmV0dXJuIGFycmF5SW5kZXhPZih2YWxpZGF0ZSh0aGlzKSwgc2VhcmNoRWxlbWVudCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpOw0KICAgIH0sDQogICAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKHNlYXJjaEVsZW1lbnQgLyosIGZyb21JbmRleCAqLyl7DQogICAgICByZXR1cm4gYXJyYXlJbmNsdWRlcyh2YWxpZGF0ZSh0aGlzKSwgc2VhcmNoRWxlbWVudCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpOw0KICAgIH0sDQogICAgam9pbjogZnVuY3Rpb24gam9pbihzZXBhcmF0b3IpeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzDQogICAgICByZXR1cm4gYXJyYXlKb2luLmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpOw0KICAgIH0sDQogICAgbGFzdEluZGV4T2Y6IGZ1bmN0aW9uIGxhc3RJbmRleE9mKHNlYXJjaEVsZW1lbnQgLyosIGZyb21JbmRleCAqLyl7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnMNCiAgICAgIHJldHVybiBhcnJheUxhc3RJbmRleE9mLmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpOw0KICAgIH0sDQogICAgbWFwOiBmdW5jdGlvbiBtYXAobWFwZm4gLyosIHRoaXNBcmcgKi8pew0KICAgICAgcmV0dXJuICRtYXAodmFsaWRhdGUodGhpcyksIG1hcGZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7DQogICAgfSwNCiAgICByZWR1Y2U6IGZ1bmN0aW9uIHJlZHVjZShjYWxsYmFja2ZuIC8qLCBpbml0aWFsVmFsdWUgKi8peyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzDQogICAgICByZXR1cm4gYXJyYXlSZWR1Y2UuYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7DQogICAgfSwNCiAgICByZWR1Y2VSaWdodDogZnVuY3Rpb24gcmVkdWNlUmlnaHQoY2FsbGJhY2tmbiAvKiwgaW5pdGlhbFZhbHVlICovKXsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFycw0KICAgICAgcmV0dXJuIGFycmF5UmVkdWNlUmlnaHQuYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7DQogICAgfSwNCiAgICByZXZlcnNlOiBmdW5jdGlvbiByZXZlcnNlKCl7DQogICAgICB2YXIgdGhhdCAgID0gdGhpcw0KICAgICAgICAsIGxlbmd0aCA9IHZhbGlkYXRlKHRoYXQpLmxlbmd0aA0KICAgICAgICAsIG1pZGRsZSA9IE1hdGguZmxvb3IobGVuZ3RoIC8gMikNCiAgICAgICAgLCBpbmRleCAgPSAwDQogICAgICAgICwgdmFsdWU7DQogICAgICB3aGlsZShpbmRleCA8IG1pZGRsZSl7DQogICAgICAgIHZhbHVlICAgICAgICAgPSB0aGF0W2luZGV4XTsNCiAgICAgICAgdGhhdFtpbmRleCsrXSA9IHRoYXRbLS1sZW5ndGhdOw0KICAgICAgICB0aGF0W2xlbmd0aF0gID0gdmFsdWU7DQogICAgICB9IHJldHVybiB0aGF0Ow0KICAgIH0sDQogICAgc29tZTogZnVuY3Rpb24gc29tZShjYWxsYmFja2ZuIC8qLCB0aGlzQXJnICovKXsNCiAgICAgIHJldHVybiBhcnJheVNvbWUodmFsaWRhdGUodGhpcyksIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTsNCiAgICB9LA0KICAgIHNvcnQ6IGZ1bmN0aW9uIHNvcnQoY29tcGFyZWZuKXsNCiAgICAgIHJldHVybiBhcnJheVNvcnQuY2FsbCh2YWxpZGF0ZSh0aGlzKSwgY29tcGFyZWZuKTsNCiAgICB9LA0KICAgIHN1YmFycmF5OiBmdW5jdGlvbiBzdWJhcnJheShiZWdpbiwgZW5kKXsNCiAgICAgIHZhciBPICAgICAgPSB2YWxpZGF0ZSh0aGlzKQ0KICAgICAgICAsIGxlbmd0aCA9IE8ubGVuZ3RoDQogICAgICAgICwgJGJlZ2luID0gdG9JbmRleChiZWdpbiwgbGVuZ3RoKTsNCiAgICAgIHJldHVybiBuZXcgKHNwZWNpZXNDb25zdHJ1Y3RvcihPLCBPW0RFRl9DT05TVFJVQ1RPUl0pKSgNCiAgICAgICAgTy5idWZmZXIsDQogICAgICAgIE8uYnl0ZU9mZnNldCArICRiZWdpbiAqIE8uQllURVNfUEVSX0VMRU1FTlQsDQogICAgICAgIHRvTGVuZ3RoKChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbmd0aCA6IHRvSW5kZXgoZW5kLCBsZW5ndGgpKSAtICRiZWdpbikNCiAgICAgICk7DQogICAgfQ0KICB9Ow0KDQogIHZhciAkc2xpY2UgPSBmdW5jdGlvbiBzbGljZShzdGFydCwgZW5kKXsNCiAgICByZXR1cm4gc3BlY2llc0Zyb21MaXN0KHRoaXMsIGFycmF5U2xpY2UuY2FsbCh2YWxpZGF0ZSh0aGlzKSwgc3RhcnQsIGVuZCkpOw0KICB9Ow0KDQogIHZhciAkc2V0ID0gZnVuY3Rpb24gc2V0KGFycmF5TGlrZSAvKiwgb2Zmc2V0ICovKXsNCiAgICB2YWxpZGF0ZSh0aGlzKTsNCiAgICB2YXIgb2Zmc2V0ID0gdG9PZmZzZXQoYXJndW1lbnRzWzFdLCAxKQ0KICAgICAgLCBsZW5ndGggPSB0aGlzLmxlbmd0aA0KICAgICAgLCBzcmMgICAgPSB0b09iamVjdChhcnJheUxpa2UpDQogICAgICAsIGxlbiAgICA9IHRvTGVuZ3RoKHNyYy5sZW5ndGgpDQogICAgICAsIGluZGV4ICA9IDA7DQogICAgaWYobGVuICsgb2Zmc2V0ID4gbGVuZ3RoKXRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTsNCiAgICB3aGlsZShpbmRleCA8IGxlbil0aGlzW29mZnNldCArIGluZGV4XSA9IHNyY1tpbmRleCsrXTsNCiAgfTsNCg0KICB2YXIgJGl0ZXJhdG9ycyA9IHsNCiAgICBlbnRyaWVzOiBmdW5jdGlvbiBlbnRyaWVzKCl7DQogICAgICByZXR1cm4gYXJyYXlFbnRyaWVzLmNhbGwodmFsaWRhdGUodGhpcykpOw0KICAgIH0sDQogICAga2V5czogZnVuY3Rpb24ga2V5cygpew0KICAgICAgcmV0dXJuIGFycmF5S2V5cy5jYWxsKHZhbGlkYXRlKHRoaXMpKTsNCiAgICB9LA0KICAgIHZhbHVlczogZnVuY3Rpb24gdmFsdWVzKCl7DQogICAgICByZXR1cm4gYXJyYXlWYWx1ZXMuY2FsbCh2YWxpZGF0ZSh0aGlzKSk7DQogICAgfQ0KICB9Ow0KDQogIHZhciBpc1RBSW5kZXggPSBmdW5jdGlvbih0YXJnZXQsIGtleSl7DQogICAgcmV0dXJuIGlzT2JqZWN0KHRhcmdldCkNCiAgICAgICYmIHRhcmdldFtUWVBFRF9BUlJBWV0NCiAgICAgICYmIHR5cGVvZiBrZXkgIT0gJ3N5bWJvbCcNCiAgICAgICYmIGtleSBpbiB0YXJnZXQNCiAgICAgICYmIFN0cmluZygra2V5KSA9PSBTdHJpbmcoa2V5KTsNCiAgfTsNCiAgdmFyICRnZXREZXNjID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KXsNCiAgICByZXR1cm4gaXNUQUluZGV4KHRhcmdldCwga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSkNCiAgICAgID8gcHJvcGVydHlEZXNjKDIsIHRhcmdldFtrZXldKQ0KICAgICAgOiBnT1BEKHRhcmdldCwga2V5KTsNCiAgfTsNCiAgdmFyICRzZXREZXNjID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIGRlc2Mpew0KICAgIGlmKGlzVEFJbmRleCh0YXJnZXQsIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSkpDQogICAgICAmJiBpc09iamVjdChkZXNjKQ0KICAgICAgJiYgaGFzKGRlc2MsICd2YWx1ZScpDQogICAgICAmJiAhaGFzKGRlc2MsICdnZXQnKQ0KICAgICAgJiYgIWhhcyhkZXNjLCAnc2V0JykNCiAgICAgIC8vIFRPRE86IGFkZCB2YWxpZGF0aW9uIGRlc2NyaXB0b3Igdy9vIGNhbGxpbmcgYWNjZXNzb3JzDQogICAgICAmJiAhZGVzYy5jb25maWd1cmFibGUNCiAgICAgICYmICghaGFzKGRlc2MsICd3cml0YWJsZScpIHx8IGRlc2Mud3JpdGFibGUpDQogICAgICAmJiAoIWhhcyhkZXNjLCAnZW51bWVyYWJsZScpIHx8IGRlc2MuZW51bWVyYWJsZSkNCiAgICApew0KICAgICAgdGFyZ2V0W2tleV0gPSBkZXNjLnZhbHVlOw0KICAgICAgcmV0dXJuIHRhcmdldDsNCiAgICB9IGVsc2UgcmV0dXJuIGRQKHRhcmdldCwga2V5LCBkZXNjKTsNCiAgfTsNCg0KICBpZighQUxMX0NPTlNUUlVDVE9SUyl7DQogICAgJEdPUEQuZiA9ICRnZXREZXNjOw0KICAgICREUC5mICAgPSAkc2V0RGVzYzsNCiAgfQ0KDQogICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIUFMTF9DT05TVFJVQ1RPUlMsICdPYmplY3QnLCB7DQogICAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiAkZ2V0RGVzYywNCiAgICBkZWZpbmVQcm9wZXJ0eTogICAgICAgICAgICRzZXREZXNjDQogIH0pOw0KDQogIGlmKGZhaWxzKGZ1bmN0aW9uKCl7IGFycmF5VG9TdHJpbmcuY2FsbCh7fSk7IH0pKXsNCiAgICBhcnJheVRvU3RyaW5nID0gYXJyYXlUb0xvY2FsZVN0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCl7DQogICAgICByZXR1cm4gYXJyYXlKb2luLmNhbGwodGhpcyk7DQogICAgfQ0KICB9DQoNCiAgdmFyICRUeXBlZEFycmF5UHJvdG90eXBlJCA9IHJlZGVmaW5lQWxsKHt9LCBwcm90byk7DQogIHJlZGVmaW5lQWxsKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJGl0ZXJhdG9ycyk7DQogIGhpZGUoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCBJVEVSQVRPUiwgJGl0ZXJhdG9ycy52YWx1ZXMpOw0KICByZWRlZmluZUFsbCgkVHlwZWRBcnJheVByb3RvdHlwZSQsIHsNCiAgICBzbGljZTogICAgICAgICAgJHNsaWNlLA0KICAgIHNldDogICAgICAgICAgICAkc2V0LA0KICAgIGNvbnN0cnVjdG9yOiAgICBmdW5jdGlvbigpeyAvKiBub29wICovIH0sDQogICAgdG9TdHJpbmc6ICAgICAgIGFycmF5VG9TdHJpbmcsDQogICAgdG9Mb2NhbGVTdHJpbmc6ICR0b0xvY2FsZVN0cmluZw0KICB9KTsNCiAgYWRkR2V0dGVyKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJ2J1ZmZlcicsICdiJyk7DQogIGFkZEdldHRlcigkVHlwZWRBcnJheVByb3RvdHlwZSQsICdieXRlT2Zmc2V0JywgJ28nKTsNCiAgYWRkR2V0dGVyKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJ2J5dGVMZW5ndGgnLCAnbCcpOw0KICBhZGRHZXR0ZXIoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCAnbGVuZ3RoJywgJ2UnKTsNCiAgZFAoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCBUQUcsIHsNCiAgICBnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiB0aGlzW1RZUEVEX0FSUkFZXTsgfQ0KICB9KTsNCg0KICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKEtFWSwgQllURVMsIHdyYXBwZXIsIENMQU1QRUQpew0KICAgIENMQU1QRUQgPSAhIUNMQU1QRUQ7DQogICAgdmFyIE5BTUUgICAgICAgPSBLRVkgKyAoQ0xBTVBFRCA/ICdDbGFtcGVkJyA6ICcnKSArICdBcnJheScNCiAgICAgICwgSVNOVF9VSU5UOCA9IE5BTUUgIT0gJ1VpbnQ4QXJyYXknDQogICAgICAsIEdFVFRFUiAgICAgPSAnZ2V0JyArIEtFWQ0KICAgICAgLCBTRVRURVIgICAgID0gJ3NldCcgKyBLRVkNCiAgICAgICwgVHlwZWRBcnJheSA9IGdsb2JhbFtOQU1FXQ0KICAgICAgLCBCYXNlICAgICAgID0gVHlwZWRBcnJheSB8fCB7fQ0KICAgICAgLCBUQUMgICAgICAgID0gVHlwZWRBcnJheSAmJiBnZXRQcm90b3R5cGVPZihUeXBlZEFycmF5KQ0KICAgICAgLCBGT1JDRUQgICAgID0gIVR5cGVkQXJyYXkgfHwgISR0eXBlZC5BQlYNCiAgICAgICwgTyAgICAgICAgICA9IHt9DQogICAgICAsIFR5cGVkQXJyYXlQcm90b3R5cGUgPSBUeXBlZEFycmF5ICYmIFR5cGVkQXJyYXlbUFJPVE9UWVBFXTsNCiAgICB2YXIgZ2V0dGVyID0gZnVuY3Rpb24odGhhdCwgaW5kZXgpew0KICAgICAgdmFyIGRhdGEgPSB0aGF0Ll9kOw0KICAgICAgcmV0dXJuIGRhdGEudltHRVRURVJdKGluZGV4ICogQllURVMgKyBkYXRhLm8sIExJVFRMRV9FTkRJQU4pOw0KICAgIH07DQogICAgdmFyIHNldHRlciA9IGZ1bmN0aW9uKHRoYXQsIGluZGV4LCB2YWx1ZSl7DQogICAgICB2YXIgZGF0YSA9IHRoYXQuX2Q7DQogICAgICBpZihDTEFNUEVEKXZhbHVlID0gKHZhbHVlID0gTWF0aC5yb3VuZCh2YWx1ZSkpIDwgMCA/IDAgOiB2YWx1ZSA+IDB4ZmYgPyAweGZmIDogdmFsdWUgJiAweGZmOw0KICAgICAgZGF0YS52W1NFVFRFUl0oaW5kZXggKiBCWVRFUyArIGRhdGEubywgdmFsdWUsIExJVFRMRV9FTkRJQU4pOw0KICAgIH07DQogICAgdmFyIGFkZEVsZW1lbnQgPSBmdW5jdGlvbih0aGF0LCBpbmRleCl7DQogICAgICBkUCh0aGF0LCBpbmRleCwgew0KICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7DQogICAgICAgICAgcmV0dXJuIGdldHRlcih0aGlzLCBpbmRleCk7DQogICAgICAgIH0sDQogICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpew0KICAgICAgICAgIHJldHVybiBzZXR0ZXIodGhpcywgaW5kZXgsIHZhbHVlKTsNCiAgICAgICAgfSwNCiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZQ0KICAgICAgfSk7DQogICAgfTsNCiAgICBpZihGT1JDRUQpew0KICAgICAgVHlwZWRBcnJheSA9IHdyYXBwZXIoZnVuY3Rpb24odGhhdCwgZGF0YSwgJG9mZnNldCwgJGxlbmd0aCl7DQogICAgICAgIGFuSW5zdGFuY2UodGhhdCwgVHlwZWRBcnJheSwgTkFNRSwgJ19kJyk7DQogICAgICAgIHZhciBpbmRleCAgPSAwDQogICAgICAgICAgLCBvZmZzZXQgPSAwDQogICAgICAgICAgLCBidWZmZXIsIGJ5dGVMZW5ndGgsIGxlbmd0aCwga2xhc3M7DQogICAgICAgIGlmKCFpc09iamVjdChkYXRhKSl7DQogICAgICAgICAgbGVuZ3RoICAgICA9IHN0cmljdFRvTGVuZ3RoKGRhdGEsIHRydWUpDQogICAgICAgICAgYnl0ZUxlbmd0aCA9IGxlbmd0aCAqIEJZVEVTOw0KICAgICAgICAgIGJ1ZmZlciAgICAgPSBuZXcgJEFycmF5QnVmZmVyKGJ5dGVMZW5ndGgpOw0KICAgICAgICB9IGVsc2UgaWYoZGF0YSBpbnN0YW5jZW9mICRBcnJheUJ1ZmZlciB8fCAoa2xhc3MgPSBjbGFzc29mKGRhdGEpKSA9PSBBUlJBWV9CVUZGRVIgfHwga2xhc3MgPT0gU0hBUkVEX0JVRkZFUil7DQogICAgICAgICAgYnVmZmVyID0gZGF0YTsNCiAgICAgICAgICBvZmZzZXQgPSB0b09mZnNldCgkb2Zmc2V0LCBCWVRFUyk7DQogICAgICAgICAgdmFyICRsZW4gPSBkYXRhLmJ5dGVMZW5ndGg7DQogICAgICAgICAgaWYoJGxlbmd0aCA9PT0gdW5kZWZpbmVkKXsNCiAgICAgICAgICAgIGlmKCRsZW4gJSBCWVRFUyl0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7DQogICAgICAgICAgICBieXRlTGVuZ3RoID0gJGxlbiAtIG9mZnNldDsNCiAgICAgICAgICAgIGlmKGJ5dGVMZW5ndGggPCAwKXRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTsNCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgYnl0ZUxlbmd0aCA9IHRvTGVuZ3RoKCRsZW5ndGgpICogQllURVM7DQogICAgICAgICAgICBpZihieXRlTGVuZ3RoICsgb2Zmc2V0ID4gJGxlbil0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7DQogICAgICAgICAgfQ0KICAgICAgICAgIGxlbmd0aCA9IGJ5dGVMZW5ndGggLyBCWVRFUzsNCiAgICAgICAgfSBlbHNlIGlmKFRZUEVEX0FSUkFZIGluIGRhdGEpew0KICAgICAgICAgIHJldHVybiBmcm9tTGlzdChUeXBlZEFycmF5LCBkYXRhKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICByZXR1cm4gJGZyb20uY2FsbChUeXBlZEFycmF5LCBkYXRhKTsNCiAgICAgICAgfQ0KICAgICAgICBoaWRlKHRoYXQsICdfZCcsIHsNCiAgICAgICAgICBiOiBidWZmZXIsDQogICAgICAgICAgbzogb2Zmc2V0LA0KICAgICAgICAgIGw6IGJ5dGVMZW5ndGgsDQogICAgICAgICAgZTogbGVuZ3RoLA0KICAgICAgICAgIHY6IG5ldyAkRGF0YVZpZXcoYnVmZmVyKQ0KICAgICAgICB9KTsNCiAgICAgICAgd2hpbGUoaW5kZXggPCBsZW5ndGgpYWRkRWxlbWVudCh0aGF0LCBpbmRleCsrKTsNCiAgICAgIH0pOw0KICAgICAgVHlwZWRBcnJheVByb3RvdHlwZSA9IFR5cGVkQXJyYXlbUFJPVE9UWVBFXSA9IGNyZWF0ZSgkVHlwZWRBcnJheVByb3RvdHlwZSQpOw0KICAgICAgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCAnY29uc3RydWN0b3InLCBUeXBlZEFycmF5KTsNCiAgICB9IGVsc2UgaWYoISRpdGVyRGV0ZWN0KGZ1bmN0aW9uKGl0ZXIpew0KICAgICAgLy8gVjggd29ya3Mgd2l0aCBpdGVyYXRvcnMsIGJ1dCBmYWlscyBpbiBtYW55IG90aGVyIGNhc2VzDQogICAgICAvLyBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDU1Mg0KICAgICAgbmV3IFR5cGVkQXJyYXkobnVsbCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3DQogICAgICBuZXcgVHlwZWRBcnJheShpdGVyKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXcNCiAgICB9LCB0cnVlKSl7DQogICAgICBUeXBlZEFycmF5ID0gd3JhcHBlcihmdW5jdGlvbih0aGF0LCBkYXRhLCAkb2Zmc2V0LCAkbGVuZ3RoKXsNCiAgICAgICAgYW5JbnN0YW5jZSh0aGF0LCBUeXBlZEFycmF5LCBOQU1FKTsNCiAgICAgICAgdmFyIGtsYXNzOw0KICAgICAgICAvLyBgd3NgIG1vZHVsZSBidWcsIHRlbXBvcmFyaWx5IHJlbW92ZSB2YWxpZGF0aW9uIGxlbmd0aCBmb3IgVWludDhBcnJheQ0KICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vd2Vic29ja2V0cy93cy9wdWxsLzY0NQ0KICAgICAgICBpZighaXNPYmplY3QoZGF0YSkpcmV0dXJuIG5ldyBCYXNlKHN0cmljdFRvTGVuZ3RoKGRhdGEsIElTTlRfVUlOVDgpKTsNCiAgICAgICAgaWYoZGF0YSBpbnN0YW5jZW9mICRBcnJheUJ1ZmZlciB8fCAoa2xhc3MgPSBjbGFzc29mKGRhdGEpKSA9PSBBUlJBWV9CVUZGRVIgfHwga2xhc3MgPT0gU0hBUkVEX0JVRkZFUil7DQogICAgICAgICAgcmV0dXJuICRsZW5ndGggIT09IHVuZGVmaW5lZA0KICAgICAgICAgICAgPyBuZXcgQmFzZShkYXRhLCB0b09mZnNldCgkb2Zmc2V0LCBCWVRFUyksICRsZW5ndGgpDQogICAgICAgICAgICA6ICRvZmZzZXQgIT09IHVuZGVmaW5lZA0KICAgICAgICAgICAgICA/IG5ldyBCYXNlKGRhdGEsIHRvT2Zmc2V0KCRvZmZzZXQsIEJZVEVTKSkNCiAgICAgICAgICAgICAgOiBuZXcgQmFzZShkYXRhKTsNCiAgICAgICAgfQ0KICAgICAgICBpZihUWVBFRF9BUlJBWSBpbiBkYXRhKXJldHVybiBmcm9tTGlzdChUeXBlZEFycmF5LCBkYXRhKTsNCiAgICAgICAgcmV0dXJuICRmcm9tLmNhbGwoVHlwZWRBcnJheSwgZGF0YSk7DQogICAgICB9KTsNCiAgICAgIGFycmF5Rm9yRWFjaChUQUMgIT09IEZ1bmN0aW9uLnByb3RvdHlwZSA/IGdPUE4oQmFzZSkuY29uY2F0KGdPUE4oVEFDKSkgOiBnT1BOKEJhc2UpLCBmdW5jdGlvbihrZXkpew0KICAgICAgICBpZighKGtleSBpbiBUeXBlZEFycmF5KSloaWRlKFR5cGVkQXJyYXksIGtleSwgQmFzZVtrZXldKTsNCiAgICAgIH0pOw0KICAgICAgVHlwZWRBcnJheVtQUk9UT1RZUEVdID0gVHlwZWRBcnJheVByb3RvdHlwZTsNCiAgICAgIGlmKCFMSUJSQVJZKVR5cGVkQXJyYXlQcm90b3R5cGUuY29uc3RydWN0b3IgPSBUeXBlZEFycmF5Ow0KICAgIH0NCiAgICB2YXIgJG5hdGl2ZUl0ZXJhdG9yICAgPSBUeXBlZEFycmF5UHJvdG90eXBlW0lURVJBVE9SXQ0KICAgICAgLCBDT1JSRUNUX0lURVJfTkFNRSA9ICEhJG5hdGl2ZUl0ZXJhdG9yICYmICgkbmF0aXZlSXRlcmF0b3IubmFtZSA9PSAndmFsdWVzJyB8fCAkbmF0aXZlSXRlcmF0b3IubmFtZSA9PSB1bmRlZmluZWQpDQogICAgICAsICRpdGVyYXRvciAgICAgICAgID0gJGl0ZXJhdG9ycy52YWx1ZXM7DQogICAgaGlkZShUeXBlZEFycmF5LCBUWVBFRF9DT05TVFJVQ1RPUiwgdHJ1ZSk7DQogICAgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBUWVBFRF9BUlJBWSwgTkFNRSk7DQogICAgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBWSUVXLCB0cnVlKTsNCiAgICBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIERFRl9DT05TVFJVQ1RPUiwgVHlwZWRBcnJheSk7DQoNCiAgICBpZihDTEFNUEVEID8gbmV3IFR5cGVkQXJyYXkoMSlbVEFHXSAhPSBOQU1FIDogIShUQUcgaW4gVHlwZWRBcnJheVByb3RvdHlwZSkpew0KICAgICAgZFAoVHlwZWRBcnJheVByb3RvdHlwZSwgVEFHLCB7DQogICAgICAgIGdldDogZnVuY3Rpb24oKXsgcmV0dXJuIE5BTUU7IH0NCiAgICAgIH0pOw0KICAgIH0NCg0KICAgIE9bTkFNRV0gPSBUeXBlZEFycmF5Ow0KDQogICAgJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAoVHlwZWRBcnJheSAhPSBCYXNlKSwgTyk7DQoNCiAgICAkZXhwb3J0KCRleHBvcnQuUywgTkFNRSwgew0KICAgICAgQllURVNfUEVSX0VMRU1FTlQ6IEJZVEVTLA0KICAgICAgZnJvbTogJGZyb20sDQogICAgICBvZjogJG9mDQogICAgfSk7DQoNCiAgICBpZighKEJZVEVTX1BFUl9FTEVNRU5UIGluIFR5cGVkQXJyYXlQcm90b3R5cGUpKWhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgQllURVNfUEVSX0VMRU1FTlQsIEJZVEVTKTsNCg0KICAgICRleHBvcnQoJGV4cG9ydC5QLCBOQU1FLCBwcm90byk7DQoNCiAgICBzZXRTcGVjaWVzKE5BTUUpOw0KDQogICAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBGT1JDRURfU0VULCBOQU1FLCB7c2V0OiAkc2V0fSk7DQoNCiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFDT1JSRUNUX0lURVJfTkFNRSwgTkFNRSwgJGl0ZXJhdG9ycyk7DQoNCiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChUeXBlZEFycmF5UHJvdG90eXBlLnRvU3RyaW5nICE9IGFycmF5VG9TdHJpbmcpLCBOQU1FLCB7dG9TdHJpbmc6IGFycmF5VG9TdHJpbmd9KTsNCg0KICAgICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24oKXsNCiAgICAgIG5ldyBUeXBlZEFycmF5KDEpLnNsaWNlKCk7DQogICAgfSksIE5BTUUsIHtzbGljZTogJHNsaWNlfSk7DQoNCiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChmYWlscyhmdW5jdGlvbigpew0KICAgICAgcmV0dXJuIFsxLCAyXS50b0xvY2FsZVN0cmluZygpICE9IG5ldyBUeXBlZEFycmF5KFsxLCAyXSkudG9Mb2NhbGVTdHJpbmcoKQ0KICAgIH0pIHx8ICFmYWlscyhmdW5jdGlvbigpew0KICAgICAgVHlwZWRBcnJheVByb3RvdHlwZS50b0xvY2FsZVN0cmluZy5jYWxsKFsxLCAyXSk7DQogICAgfSkpLCBOQU1FLCB7dG9Mb2NhbGVTdHJpbmc6ICR0b0xvY2FsZVN0cmluZ30pOw0KDQogICAgSXRlcmF0b3JzW05BTUVdID0gQ09SUkVDVF9JVEVSX05BTUUgPyAkbmF0aXZlSXRlcmF0b3IgOiAkaXRlcmF0b3I7DQogICAgaWYoIUxJQlJBUlkgJiYgIUNPUlJFQ1RfSVRFUl9OQU1FKWhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgSVRFUkFUT1IsICRpdGVyYXRvcik7DQogIH07DQp9IGVsc2UgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpeyAvKiBlbXB0eSAqLyB9Ow0KfSx7Ii4vX2FuLWluc3RhbmNlIjoxOTUsIi4vX2FycmF5LWNvcHktd2l0aGluIjoxOTcsIi4vX2FycmF5LWZpbGwiOjE5OCwiLi9fYXJyYXktaW5jbHVkZXMiOjIwMCwiLi9fYXJyYXktbWV0aG9kcyI6MjAxLCIuL19jbGFzc29mIjoyMDYsIi4vX2N0eCI6MjE0LCIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19leHBvcnQiOjIyMSwiLi9fZmFpbHMiOjIyMywiLi9fZ2xvYmFsIjoyMjcsIi4vX2hhcyI6MjI4LCIuL19oaWRlIjoyMjksIi4vX2lzLWFycmF5LWl0ZXIiOjIzNSwiLi9faXMtaW50ZWdlciI6MjM3LCIuL19pcy1vYmplY3QiOjIzOCwiLi9faXRlci1kZXRlY3QiOjI0MywiLi9faXRlcmF0b3JzIjoyNDUsIi4vX2xpYnJhcnkiOjI0NywiLi9fb2JqZWN0LWNyZWF0ZSI6MjU1LCIuL19vYmplY3QtZHAiOjI1NiwiLi9fb2JqZWN0LWdvcGQiOjI1OSwiLi9fb2JqZWN0LWdvcG4iOjI2MSwiLi9fb2JqZWN0LWdwbyI6MjYzLCIuL19wcm9wZXJ0eS1kZXNjIjoyNzQsIi4vX3JlZGVmaW5lLWFsbCI6Mjc1LCIuL19zYW1lLXZhbHVlIjoyNzgsIi4vX3NldC1zcGVjaWVzIjoyODAsIi4vX3NwZWNpZXMtY29uc3RydWN0b3IiOjI4NCwiLi9fdG8taW5kZXgiOjI5NCwiLi9fdG8taW50ZWdlciI6Mjk1LCIuL190by1sZW5ndGgiOjI5NywiLi9fdG8tb2JqZWN0IjoyOTgsIi4vX3RvLXByaW1pdGl2ZSI6Mjk5LCIuL190eXBlZCI6MzAyLCIuL190eXBlZC1idWZmZXIiOjMwMSwiLi9fdWlkIjozMDMsIi4vX3drcyI6MzA2LCIuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCI6MzA3LCIuL2NvcmUuaXMtaXRlcmFibGUiOjMwOCwiLi9lczYuYXJyYXkuaXRlcmF0b3IiOjMyMH1dLDMwMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgZ2xvYmFsICAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKQ0KICAsIERFU0NSSVBUT1JTICAgID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKQ0KICAsIExJQlJBUlkgICAgICAgID0gcmVxdWlyZSgnLi9fbGlicmFyeScpDQogICwgJHR5cGVkICAgICAgICAgPSByZXF1aXJlKCcuL190eXBlZCcpDQogICwgaGlkZSAgICAgICAgICAgPSByZXF1aXJlKCcuL19oaWRlJykNCiAgLCByZWRlZmluZUFsbCAgICA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpDQogICwgZmFpbHMgICAgICAgICAgPSByZXF1aXJlKCcuL19mYWlscycpDQogICwgYW5JbnN0YW5jZSAgICAgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpDQogICwgdG9JbnRlZ2VyICAgICAgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJykNCiAgLCB0b0xlbmd0aCAgICAgICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpDQogICwgZ09QTiAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmYNCiAgLCBkUCAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmYNCiAgLCBhcnJheUZpbGwgICAgICA9IHJlcXVpcmUoJy4vX2FycmF5LWZpbGwnKQ0KICAsIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKQ0KICAsIEFSUkFZX0JVRkZFUiAgID0gJ0FycmF5QnVmZmVyJw0KICAsIERBVEFfVklFVyAgICAgID0gJ0RhdGFWaWV3Jw0KICAsIFBST1RPVFlQRSAgICAgID0gJ3Byb3RvdHlwZScNCiAgLCBXUk9OR19MRU5HVEggICA9ICdXcm9uZyBsZW5ndGghJw0KICAsIFdST05HX0lOREVYICAgID0gJ1dyb25nIGluZGV4IScNCiAgLCAkQXJyYXlCdWZmZXIgICA9IGdsb2JhbFtBUlJBWV9CVUZGRVJdDQogICwgJERhdGFWaWV3ICAgICAgPSBnbG9iYWxbREFUQV9WSUVXXQ0KICAsIE1hdGggICAgICAgICAgID0gZ2xvYmFsLk1hdGgNCiAgLCBwYXJzZUludCAgICAgICA9IGdsb2JhbC5wYXJzZUludA0KICAsIFJhbmdlRXJyb3IgICAgID0gZ2xvYmFsLlJhbmdlRXJyb3INCiAgLCBJbmZpbml0eSAgICAgICA9IGdsb2JhbC5JbmZpbml0eQ0KICAsIEJhc2VCdWZmZXIgICAgID0gJEFycmF5QnVmZmVyDQogICwgYWJzICAgICAgICAgICAgPSBNYXRoLmFicw0KICAsIHBvdyAgICAgICAgICAgID0gTWF0aC5wb3cNCiAgLCBtaW4gICAgICAgICAgICA9IE1hdGgubWluDQogICwgZmxvb3IgICAgICAgICAgPSBNYXRoLmZsb29yDQogICwgbG9nICAgICAgICAgICAgPSBNYXRoLmxvZw0KICAsIExOMiAgICAgICAgICAgID0gTWF0aC5MTjINCiAgLCBCVUZGRVIgICAgICAgICA9ICdidWZmZXInDQogICwgQllURV9MRU5HVEggICAgPSAnYnl0ZUxlbmd0aCcNCiAgLCBCWVRFX09GRlNFVCAgICA9ICdieXRlT2Zmc2V0Jw0KICAsICRCVUZGRVIgICAgICAgID0gREVTQ1JJUFRPUlMgPyAnX2InIDogQlVGRkVSDQogICwgJExFTkdUSCAgICAgICAgPSBERVNDUklQVE9SUyA/ICdfbCcgOiBCWVRFX0xFTkdUSA0KICAsICRPRkZTRVQgICAgICAgID0gREVTQ1JJUFRPUlMgPyAnX28nIDogQllURV9PRkZTRVQ7DQoNCi8vIElFRUU3NTQgY29udmVyc2lvbnMgYmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL2Zlcm9zcy9pZWVlNzU0DQp2YXIgcGFja0lFRUU3NTQgPSBmdW5jdGlvbih2YWx1ZSwgbUxlbiwgbkJ5dGVzKXsNCiAgdmFyIGJ1ZmZlciA9IEFycmF5KG5CeXRlcykNCiAgICAsIGVMZW4gICA9IG5CeXRlcyAqIDggLSBtTGVuIC0gMQ0KICAgICwgZU1heCAgID0gKDEgPDwgZUxlbikgLSAxDQogICAgLCBlQmlhcyAgPSBlTWF4ID4+IDENCiAgICAsIHJ0ICAgICA9IG1MZW4gPT09IDIzID8gcG93KDIsIC0yNCkgLSBwb3coMiwgLTc3KSA6IDANCiAgICAsIGkgICAgICA9IDANCiAgICAsIHMgICAgICA9IHZhbHVlIDwgMCB8fCB2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwID8gMSA6IDANCiAgICAsIGUsIG0sIGM7DQogIHZhbHVlID0gYWJzKHZhbHVlKQ0KICBpZih2YWx1ZSAhPSB2YWx1ZSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpew0KICAgIG0gPSB2YWx1ZSAhPSB2YWx1ZSA/IDEgOiAwOw0KICAgIGUgPSBlTWF4Ow0KICB9IGVsc2Ugew0KICAgIGUgPSBmbG9vcihsb2codmFsdWUpIC8gTE4yKTsNCiAgICBpZih2YWx1ZSAqIChjID0gcG93KDIsIC1lKSkgPCAxKXsNCiAgICAgIGUtLTsNCiAgICAgIGMgKj0gMjsNCiAgICB9DQogICAgaWYoZSArIGVCaWFzID49IDEpew0KICAgICAgdmFsdWUgKz0gcnQgLyBjOw0KICAgIH0gZWxzZSB7DQogICAgICB2YWx1ZSArPSBydCAqIHBvdygyLCAxIC0gZUJpYXMpOw0KICAgIH0NCiAgICBpZih2YWx1ZSAqIGMgPj0gMil7DQogICAgICBlKys7DQogICAgICBjIC89IDI7DQogICAgfQ0KICAgIGlmKGUgKyBlQmlhcyA+PSBlTWF4KXsNCiAgICAgIG0gPSAwOw0KICAgICAgZSA9IGVNYXg7DQogICAgfSBlbHNlIGlmKGUgKyBlQmlhcyA+PSAxKXsNCiAgICAgIG0gPSAodmFsdWUgKiBjIC0gMSkgKiBwb3coMiwgbUxlbik7DQogICAgICBlID0gZSArIGVCaWFzOw0KICAgIH0gZWxzZSB7DQogICAgICBtID0gdmFsdWUgKiBwb3coMiwgZUJpYXMgLSAxKSAqIHBvdygyLCBtTGVuKTsNCiAgICAgIGUgPSAwOw0KICAgIH0NCiAgfQ0KICBmb3IoOyBtTGVuID49IDg7IGJ1ZmZlcltpKytdID0gbSAmIDI1NSwgbSAvPSAyNTYsIG1MZW4gLT0gOCk7DQogIGUgPSBlIDw8IG1MZW4gfCBtOw0KICBlTGVuICs9IG1MZW47DQogIGZvcig7IGVMZW4gPiAwOyBidWZmZXJbaSsrXSA9IGUgJiAyNTUsIGUgLz0gMjU2LCBlTGVuIC09IDgpOw0KICBidWZmZXJbLS1pXSB8PSBzICogMTI4Ow0KICByZXR1cm4gYnVmZmVyOw0KfTsNCnZhciB1bnBhY2tJRUVFNzU0ID0gZnVuY3Rpb24oYnVmZmVyLCBtTGVuLCBuQnl0ZXMpew0KICB2YXIgZUxlbiAgPSBuQnl0ZXMgKiA4IC0gbUxlbiAtIDENCiAgICAsIGVNYXggID0gKDEgPDwgZUxlbikgLSAxDQogICAgLCBlQmlhcyA9IGVNYXggPj4gMQ0KICAgICwgbkJpdHMgPSBlTGVuIC0gNw0KICAgICwgaSAgICAgPSBuQnl0ZXMgLSAxDQogICAgLCBzICAgICA9IGJ1ZmZlcltpLS1dDQogICAgLCBlICAgICA9IHMgJiAxMjcNCiAgICAsIG07DQogIHMgPj49IDc7DQogIGZvcig7IG5CaXRzID4gMDsgZSA9IGUgKiAyNTYgKyBidWZmZXJbaV0sIGktLSwgbkJpdHMgLT0gOCk7DQogIG0gPSBlICYgKDEgPDwgLW5CaXRzKSAtIDE7DQogIGUgPj49IC1uQml0czsNCiAgbkJpdHMgKz0gbUxlbjsNCiAgZm9yKDsgbkJpdHMgPiAwOyBtID0gbSAqIDI1NiArIGJ1ZmZlcltpXSwgaS0tLCBuQml0cyAtPSA4KTsNCiAgaWYoZSA9PT0gMCl7DQogICAgZSA9IDEgLSBlQmlhczsNCiAgfSBlbHNlIGlmKGUgPT09IGVNYXgpew0KICAgIHJldHVybiBtID8gTmFOIDogcyA/IC1JbmZpbml0eSA6IEluZmluaXR5Ow0KICB9IGVsc2Ugew0KICAgIG0gPSBtICsgcG93KDIsIG1MZW4pOw0KICAgIGUgPSBlIC0gZUJpYXM7DQogIH0gcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBwb3coMiwgZSAtIG1MZW4pOw0KfTsNCg0KdmFyIHVucGFja0kzMiA9IGZ1bmN0aW9uKGJ5dGVzKXsNCiAgcmV0dXJuIGJ5dGVzWzNdIDw8IDI0IHwgYnl0ZXNbMl0gPDwgMTYgfCBieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMF07DQp9Ow0KdmFyIHBhY2tJOCA9IGZ1bmN0aW9uKGl0KXsNCiAgcmV0dXJuIFtpdCAmIDB4ZmZdOw0KfTsNCnZhciBwYWNrSTE2ID0gZnVuY3Rpb24oaXQpew0KICByZXR1cm4gW2l0ICYgMHhmZiwgaXQgPj4gOCAmIDB4ZmZdOw0KfTsNCnZhciBwYWNrSTMyID0gZnVuY3Rpb24oaXQpew0KICByZXR1cm4gW2l0ICYgMHhmZiwgaXQgPj4gOCAmIDB4ZmYsIGl0ID4+IDE2ICYgMHhmZiwgaXQgPj4gMjQgJiAweGZmXTsNCn07DQp2YXIgcGFja0Y2NCA9IGZ1bmN0aW9uKGl0KXsNCiAgcmV0dXJuIHBhY2tJRUVFNzU0KGl0LCA1MiwgOCk7DQp9Ow0KdmFyIHBhY2tGMzIgPSBmdW5jdGlvbihpdCl7DQogIHJldHVybiBwYWNrSUVFRTc1NChpdCwgMjMsIDQpOw0KfTsNCg0KdmFyIGFkZEdldHRlciA9IGZ1bmN0aW9uKEMsIGtleSwgaW50ZXJuYWwpew0KICBkUChDW1BST1RPVFlQRV0sIGtleSwge2dldDogZnVuY3Rpb24oKXsgcmV0dXJuIHRoaXNbaW50ZXJuYWxdOyB9fSk7DQp9Ow0KDQp2YXIgZ2V0ID0gZnVuY3Rpb24odmlldywgYnl0ZXMsIGluZGV4LCBpc0xpdHRsZUVuZGlhbil7DQogIHZhciBudW1JbmRleCA9ICtpbmRleA0KICAgICwgaW50SW5kZXggPSB0b0ludGVnZXIobnVtSW5kZXgpOw0KICBpZihudW1JbmRleCAhPSBpbnRJbmRleCB8fCBpbnRJbmRleCA8IDAgfHwgaW50SW5kZXggKyBieXRlcyA+IHZpZXdbJExFTkdUSF0pdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19JTkRFWCk7DQogIHZhciBzdG9yZSA9IHZpZXdbJEJVRkZFUl0uX2INCiAgICAsIHN0YXJ0ID0gaW50SW5kZXggKyB2aWV3WyRPRkZTRVRdDQogICAgLCBwYWNrICA9IHN0b3JlLnNsaWNlKHN0YXJ0LCBzdGFydCArIGJ5dGVzKTsNCiAgcmV0dXJuIGlzTGl0dGxlRW5kaWFuID8gcGFjayA6IHBhY2sucmV2ZXJzZSgpOw0KfTsNCnZhciBzZXQgPSBmdW5jdGlvbih2aWV3LCBieXRlcywgaW5kZXgsIGNvbnZlcnNpb24sIHZhbHVlLCBpc0xpdHRsZUVuZGlhbil7DQogIHZhciBudW1JbmRleCA9ICtpbmRleA0KICAgICwgaW50SW5kZXggPSB0b0ludGVnZXIobnVtSW5kZXgpOw0KICBpZihudW1JbmRleCAhPSBpbnRJbmRleCB8fCBpbnRJbmRleCA8IDAgfHwgaW50SW5kZXggKyBieXRlcyA+IHZpZXdbJExFTkdUSF0pdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19JTkRFWCk7DQogIHZhciBzdG9yZSA9IHZpZXdbJEJVRkZFUl0uX2INCiAgICAsIHN0YXJ0ID0gaW50SW5kZXggKyB2aWV3WyRPRkZTRVRdDQogICAgLCBwYWNrICA9IGNvbnZlcnNpb24oK3ZhbHVlKTsNCiAgZm9yKHZhciBpID0gMDsgaSA8IGJ5dGVzOyBpKyspc3RvcmVbc3RhcnQgKyBpXSA9IHBhY2tbaXNMaXR0bGVFbmRpYW4gPyBpIDogYnl0ZXMgLSBpIC0gMV07DQp9Ow0KDQp2YXIgdmFsaWRhdGVBcnJheUJ1ZmZlckFyZ3VtZW50cyA9IGZ1bmN0aW9uKHRoYXQsIGxlbmd0aCl7DQogIGFuSW5zdGFuY2UodGhhdCwgJEFycmF5QnVmZmVyLCBBUlJBWV9CVUZGRVIpOw0KICB2YXIgbnVtYmVyTGVuZ3RoID0gK2xlbmd0aA0KICAgICwgYnl0ZUxlbmd0aCAgID0gdG9MZW5ndGgobnVtYmVyTGVuZ3RoKTsNCiAgaWYobnVtYmVyTGVuZ3RoICE9IGJ5dGVMZW5ndGgpdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpOw0KICByZXR1cm4gYnl0ZUxlbmd0aDsNCn07DQoNCmlmKCEkdHlwZWQuQUJWKXsNCiAgJEFycmF5QnVmZmVyID0gZnVuY3Rpb24gQXJyYXlCdWZmZXIobGVuZ3RoKXsNCiAgICB2YXIgYnl0ZUxlbmd0aCA9IHZhbGlkYXRlQXJyYXlCdWZmZXJBcmd1bWVudHModGhpcywgbGVuZ3RoKTsNCiAgICB0aGlzLl9iICAgICAgID0gYXJyYXlGaWxsLmNhbGwoQXJyYXkoYnl0ZUxlbmd0aCksIDApOw0KICAgIHRoaXNbJExFTkdUSF0gPSBieXRlTGVuZ3RoOw0KICB9Ow0KDQogICREYXRhVmlldyA9IGZ1bmN0aW9uIERhdGFWaWV3KGJ1ZmZlciwgYnl0ZU9mZnNldCwgYnl0ZUxlbmd0aCl7DQogICAgYW5JbnN0YW5jZSh0aGlzLCAkRGF0YVZpZXcsIERBVEFfVklFVyk7DQogICAgYW5JbnN0YW5jZShidWZmZXIsICRBcnJheUJ1ZmZlciwgREFUQV9WSUVXKTsNCiAgICB2YXIgYnVmZmVyTGVuZ3RoID0gYnVmZmVyWyRMRU5HVEhdDQogICAgICAsIG9mZnNldCAgICAgICA9IHRvSW50ZWdlcihieXRlT2Zmc2V0KTsNCiAgICBpZihvZmZzZXQgPCAwIHx8IG9mZnNldCA+IGJ1ZmZlckxlbmd0aCl0aHJvdyBSYW5nZUVycm9yKCdXcm9uZyBvZmZzZXQhJyk7DQogICAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggPT09IHVuZGVmaW5lZCA/IGJ1ZmZlckxlbmd0aCAtIG9mZnNldCA6IHRvTGVuZ3RoKGJ5dGVMZW5ndGgpOw0KICAgIGlmKG9mZnNldCArIGJ5dGVMZW5ndGggPiBidWZmZXJMZW5ndGgpdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpOw0KICAgIHRoaXNbJEJVRkZFUl0gPSBidWZmZXI7DQogICAgdGhpc1skT0ZGU0VUXSA9IG9mZnNldDsNCiAgICB0aGlzWyRMRU5HVEhdID0gYnl0ZUxlbmd0aDsNCiAgfTsNCg0KICBpZihERVNDUklQVE9SUyl7DQogICAgYWRkR2V0dGVyKCRBcnJheUJ1ZmZlciwgQllURV9MRU5HVEgsICdfbCcpOw0KICAgIGFkZEdldHRlcigkRGF0YVZpZXcsIEJVRkZFUiwgJ19iJyk7DQogICAgYWRkR2V0dGVyKCREYXRhVmlldywgQllURV9MRU5HVEgsICdfbCcpOw0KICAgIGFkZEdldHRlcigkRGF0YVZpZXcsIEJZVEVfT0ZGU0VULCAnX28nKTsNCiAgfQ0KDQogIHJlZGVmaW5lQWxsKCREYXRhVmlld1tQUk9UT1RZUEVdLCB7DQogICAgZ2V0SW50ODogZnVuY3Rpb24gZ2V0SW50OChieXRlT2Zmc2V0KXsNCiAgICAgIHJldHVybiBnZXQodGhpcywgMSwgYnl0ZU9mZnNldClbMF0gPDwgMjQgPj4gMjQ7DQogICAgfSwNCiAgICBnZXRVaW50ODogZnVuY3Rpb24gZ2V0VWludDgoYnl0ZU9mZnNldCl7DQogICAgICByZXR1cm4gZ2V0KHRoaXMsIDEsIGJ5dGVPZmZzZXQpWzBdOw0KICAgIH0sDQogICAgZ2V0SW50MTY6IGZ1bmN0aW9uIGdldEludDE2KGJ5dGVPZmZzZXQgLyosIGxpdHRsZUVuZGlhbiAqLyl7DQogICAgICB2YXIgYnl0ZXMgPSBnZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKTsNCiAgICAgIHJldHVybiAoYnl0ZXNbMV0gPDwgOCB8IGJ5dGVzWzBdKSA8PCAxNiA+PiAxNjsNCiAgICB9LA0KICAgIGdldFVpbnQxNjogZnVuY3Rpb24gZ2V0VWludDE2KGJ5dGVPZmZzZXQgLyosIGxpdHRsZUVuZGlhbiAqLyl7DQogICAgICB2YXIgYnl0ZXMgPSBnZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKTsNCiAgICAgIHJldHVybiBieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMF07DQogICAgfSwNCiAgICBnZXRJbnQzMjogZnVuY3Rpb24gZ2V0SW50MzIoYnl0ZU9mZnNldCAvKiwgbGl0dGxlRW5kaWFuICovKXsNCiAgICAgIHJldHVybiB1bnBhY2tJMzIoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSkpOw0KICAgIH0sDQogICAgZ2V0VWludDMyOiBmdW5jdGlvbiBnZXRVaW50MzIoYnl0ZU9mZnNldCAvKiwgbGl0dGxlRW5kaWFuICovKXsNCiAgICAgIHJldHVybiB1bnBhY2tJMzIoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSkpID4+PiAwOw0KICAgIH0sDQogICAgZ2V0RmxvYXQzMjogZnVuY3Rpb24gZ2V0RmxvYXQzMihieXRlT2Zmc2V0IC8qLCBsaXR0bGVFbmRpYW4gKi8pew0KICAgICAgcmV0dXJuIHVucGFja0lFRUU3NTQoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSksIDIzLCA0KTsNCiAgICB9LA0KICAgIGdldEZsb2F0NjQ6IGZ1bmN0aW9uIGdldEZsb2F0NjQoYnl0ZU9mZnNldCAvKiwgbGl0dGxlRW5kaWFuICovKXsNCiAgICAgIHJldHVybiB1bnBhY2tJRUVFNzU0KGdldCh0aGlzLCA4LCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pLCA1MiwgOCk7DQogICAgfSwNCiAgICBzZXRJbnQ4OiBmdW5jdGlvbiBzZXRJbnQ4KGJ5dGVPZmZzZXQsIHZhbHVlKXsNCiAgICAgIHNldCh0aGlzLCAxLCBieXRlT2Zmc2V0LCBwYWNrSTgsIHZhbHVlKTsNCiAgICB9LA0KICAgIHNldFVpbnQ4OiBmdW5jdGlvbiBzZXRVaW50OChieXRlT2Zmc2V0LCB2YWx1ZSl7DQogICAgICBzZXQodGhpcywgMSwgYnl0ZU9mZnNldCwgcGFja0k4LCB2YWx1ZSk7DQogICAgfSwNCiAgICBzZXRJbnQxNjogZnVuY3Rpb24gc2V0SW50MTYoYnl0ZU9mZnNldCwgdmFsdWUgLyosIGxpdHRsZUVuZGlhbiAqLyl7DQogICAgICBzZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgcGFja0kxNiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7DQogICAgfSwNCiAgICBzZXRVaW50MTY6IGZ1bmN0aW9uIHNldFVpbnQxNihieXRlT2Zmc2V0LCB2YWx1ZSAvKiwgbGl0dGxlRW5kaWFuICovKXsNCiAgICAgIHNldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBwYWNrSTE2LCB2YWx1ZSwgYXJndW1lbnRzWzJdKTsNCiAgICB9LA0KICAgIHNldEludDMyOiBmdW5jdGlvbiBzZXRJbnQzMihieXRlT2Zmc2V0LCB2YWx1ZSAvKiwgbGl0dGxlRW5kaWFuICovKXsNCiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrSTMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTsNCiAgICB9LA0KICAgIHNldFVpbnQzMjogZnVuY3Rpb24gc2V0VWludDMyKGJ5dGVPZmZzZXQsIHZhbHVlIC8qLCBsaXR0bGVFbmRpYW4gKi8pew0KICAgICAgc2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIHBhY2tJMzIsIHZhbHVlLCBhcmd1bWVudHNbMl0pOw0KICAgIH0sDQogICAgc2V0RmxvYXQzMjogZnVuY3Rpb24gc2V0RmxvYXQzMihieXRlT2Zmc2V0LCB2YWx1ZSAvKiwgbGl0dGxlRW5kaWFuICovKXsNCiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrRjMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTsNCiAgICB9LA0KICAgIHNldEZsb2F0NjQ6IGZ1bmN0aW9uIHNldEZsb2F0NjQoYnl0ZU9mZnNldCwgdmFsdWUgLyosIGxpdHRsZUVuZGlhbiAqLyl7DQogICAgICBzZXQodGhpcywgOCwgYnl0ZU9mZnNldCwgcGFja0Y2NCwgdmFsdWUsIGFyZ3VtZW50c1syXSk7DQogICAgfQ0KICB9KTsNCn0gZWxzZSB7DQogIGlmKCFmYWlscyhmdW5jdGlvbigpew0KICAgIG5ldyAkQXJyYXlCdWZmZXI7ICAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldw0KICB9KSB8fCAhZmFpbHMoZnVuY3Rpb24oKXsNCiAgICBuZXcgJEFycmF5QnVmZmVyKC41KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXcNCiAgfSkpew0KICAgICRBcnJheUJ1ZmZlciA9IGZ1bmN0aW9uIEFycmF5QnVmZmVyKGxlbmd0aCl7DQogICAgICByZXR1cm4gbmV3IEJhc2VCdWZmZXIodmFsaWRhdGVBcnJheUJ1ZmZlckFyZ3VtZW50cyh0aGlzLCBsZW5ndGgpKTsNCiAgICB9Ow0KICAgIHZhciBBcnJheUJ1ZmZlclByb3RvID0gJEFycmF5QnVmZmVyW1BST1RPVFlQRV0gPSBCYXNlQnVmZmVyW1BST1RPVFlQRV07DQogICAgZm9yKHZhciBrZXlzID0gZ09QTihCYXNlQnVmZmVyKSwgaiA9IDAsIGtleTsga2V5cy5sZW5ndGggPiBqOyApew0KICAgICAgaWYoISgoa2V5ID0ga2V5c1tqKytdKSBpbiAkQXJyYXlCdWZmZXIpKWhpZGUoJEFycmF5QnVmZmVyLCBrZXksIEJhc2VCdWZmZXJba2V5XSk7DQogICAgfTsNCiAgICBpZighTElCUkFSWSlBcnJheUJ1ZmZlclByb3RvLmNvbnN0cnVjdG9yID0gJEFycmF5QnVmZmVyOw0KICB9DQogIC8vIGlPUyBTYWZhcmkgNy54IGJ1Zw0KICB2YXIgdmlldyA9IG5ldyAkRGF0YVZpZXcobmV3ICRBcnJheUJ1ZmZlcigyKSkNCiAgICAsICRzZXRJbnQ4ID0gJERhdGFWaWV3W1BST1RPVFlQRV0uc2V0SW50ODsNCiAgdmlldy5zZXRJbnQ4KDAsIDIxNDc0ODM2NDgpOw0KICB2aWV3LnNldEludDgoMSwgMjE0NzQ4MzY0OSk7DQogIGlmKHZpZXcuZ2V0SW50OCgwKSB8fCAhdmlldy5nZXRJbnQ4KDEpKXJlZGVmaW5lQWxsKCREYXRhVmlld1tQUk9UT1RZUEVdLCB7DQogICAgc2V0SW50ODogZnVuY3Rpb24gc2V0SW50OChieXRlT2Zmc2V0LCB2YWx1ZSl7DQogICAgICAkc2V0SW50OC5jYWxsKHRoaXMsIGJ5dGVPZmZzZXQsIHZhbHVlIDw8IDI0ID4+IDI0KTsNCiAgICB9LA0KICAgIHNldFVpbnQ4OiBmdW5jdGlvbiBzZXRVaW50OChieXRlT2Zmc2V0LCB2YWx1ZSl7DQogICAgICAkc2V0SW50OC5jYWxsKHRoaXMsIGJ5dGVPZmZzZXQsIHZhbHVlIDw8IDI0ID4+IDI0KTsNCiAgICB9DQogIH0sIHRydWUpOw0KfQ0Kc2V0VG9TdHJpbmdUYWcoJEFycmF5QnVmZmVyLCBBUlJBWV9CVUZGRVIpOw0Kc2V0VG9TdHJpbmdUYWcoJERhdGFWaWV3LCBEQVRBX1ZJRVcpOw0KaGlkZSgkRGF0YVZpZXdbUFJPVE9UWVBFXSwgJHR5cGVkLlZJRVcsIHRydWUpOw0KZXhwb3J0c1tBUlJBWV9CVUZGRVJdID0gJEFycmF5QnVmZmVyOw0KZXhwb3J0c1tEQVRBX1ZJRVddID0gJERhdGFWaWV3Ow0KfSx7Ii4vX2FuLWluc3RhbmNlIjoxOTUsIi4vX2FycmF5LWZpbGwiOjE5OCwiLi9fZGVzY3JpcHRvcnMiOjIxNywiLi9fZmFpbHMiOjIyMywiLi9fZ2xvYmFsIjoyMjcsIi4vX2hpZGUiOjIyOSwiLi9fbGlicmFyeSI6MjQ3LCIuL19vYmplY3QtZHAiOjI1NiwiLi9fb2JqZWN0LWdvcG4iOjI2MSwiLi9fcmVkZWZpbmUtYWxsIjoyNzUsIi4vX3NldC10by1zdHJpbmctdGFnIjoyODEsIi4vX3RvLWludGVnZXIiOjI5NSwiLi9fdG8tbGVuZ3RoIjoyOTcsIi4vX3R5cGVkIjozMDJ9XSwzMDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpDQogICwgaGlkZSAgID0gcmVxdWlyZSgnLi9faGlkZScpDQogICwgdWlkICAgID0gcmVxdWlyZSgnLi9fdWlkJykNCiAgLCBUWVBFRCAgPSB1aWQoJ3R5cGVkX2FycmF5JykNCiAgLCBWSUVXICAgPSB1aWQoJ3ZpZXcnKQ0KICAsIEFCViAgICA9ICEhKGdsb2JhbC5BcnJheUJ1ZmZlciAmJiBnbG9iYWwuRGF0YVZpZXcpDQogICwgQ09OU1RSID0gQUJWDQogICwgaSA9IDAsIGwgPSA5LCBUeXBlZDsNCg0KdmFyIFR5cGVkQXJyYXlDb25zdHJ1Y3RvcnMgPSAoDQogICdJbnQ4QXJyYXksVWludDhBcnJheSxVaW50OENsYW1wZWRBcnJheSxJbnQxNkFycmF5LFVpbnQxNkFycmF5LEludDMyQXJyYXksVWludDMyQXJyYXksRmxvYXQzMkFycmF5LEZsb2F0NjRBcnJheScNCikuc3BsaXQoJywnKTsNCg0Kd2hpbGUoaSA8IGwpew0KICBpZihUeXBlZCA9IGdsb2JhbFtUeXBlZEFycmF5Q29uc3RydWN0b3JzW2krK11dKXsNCiAgICBoaWRlKFR5cGVkLnByb3RvdHlwZSwgVFlQRUQsIHRydWUpOw0KICAgIGhpZGUoVHlwZWQucHJvdG90eXBlLCBWSUVXLCB0cnVlKTsNCiAgfSBlbHNlIENPTlNUUiA9IGZhbHNlOw0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IHsNCiAgQUJWOiAgICBBQlYsDQogIENPTlNUUjogQ09OU1RSLA0KICBUWVBFRDogIFRZUEVELA0KICBWSUVXOiAgIFZJRVcNCn07DQp9LHsiLi9fZ2xvYmFsIjoyMjcsIi4vX2hpZGUiOjIyOSwiLi9fdWlkIjozMDN9XSwzMDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE3M11bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiZHVwIjoxNzN9XSwzMDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE3NF1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fY29yZSI6MjEyLCIuL19nbG9iYWwiOjIyNywiLi9fbGlicmFyeSI6MjQ3LCIuL19vYmplY3QtZHAiOjI1NiwiLi9fd2tzLWV4dCI6MzA1LCJkdXAiOjE3NH1dLDMwNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTc1XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL193a3MiOjMwNiwiZHVwIjoxNzV9XSwzMDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE3Nl1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fZ2xvYmFsIjoyMjcsIi4vX3NoYXJlZCI6MjgzLCIuL191aWQiOjMwMywiZHVwIjoxNzZ9XSwzMDc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE3N11bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fY2xhc3NvZiI6MjA2LCIuL19jb3JlIjoyMTIsIi4vX2l0ZXJhdG9ycyI6MjQ1LCIuL193a3MiOjMwNiwiZHVwIjoxNzd9XSwzMDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGNsYXNzb2YgICA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKQ0KICAsIElURVJBVE9SICA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpDQogICwgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7DQptb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvcmUnKS5pc0l0ZXJhYmxlID0gZnVuY3Rpb24oaXQpew0KICB2YXIgTyA9IE9iamVjdChpdCk7DQogIHJldHVybiBPW0lURVJBVE9SXSAhPT0gdW5kZWZpbmVkDQogICAgfHwgJ0BAaXRlcmF0b3InIGluIE8NCiAgICB8fCBJdGVyYXRvcnMuaGFzT3duUHJvcGVydHkoY2xhc3NvZihPKSk7DQp9Ow0KfSx7Ii4vX2NsYXNzb2YiOjIwNiwiLi9fY29yZSI6MjEyLCIuL19pdGVyYXRvcnMiOjI0NSwiLi9fd2tzIjozMDZ9XSwzMDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gaHR0cHM6Ly9naXRodWIuY29tL2JlbmphbWluZ3IvUmV4RXhwLmVzY2FwZQ0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsICRyZSAgICAgPSByZXF1aXJlKCcuL19yZXBsYWNlcicpKC9bXFxeJCorPy4oKXxbXF17fV0vZywgJ1xcJCYnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdSZWdFeHAnLCB7ZXNjYXBlOiBmdW5jdGlvbiBlc2NhcGUoaXQpeyByZXR1cm4gJHJlKGl0KTsgfX0pOw0KDQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX3JlcGxhY2VyIjoyNzd9XSwzMTA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjIuMS4zLjMgQXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCwgZW5kID0gdGhpcy5sZW5ndGgpDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpOw0KDQokZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge2NvcHlXaXRoaW46IHJlcXVpcmUoJy4vX2FycmF5LWNvcHktd2l0aGluJyl9KTsNCg0KcmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2NvcHlXaXRoaW4nKTsNCn0seyIuL19hZGQtdG8tdW5zY29wYWJsZXMiOjE5NCwiLi9fYXJyYXktY29weS13aXRoaW4iOjE5NywiLi9fZXhwb3J0IjoyMjF9XSwzMTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsICRldmVyeSAgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoNCk7DQoNCiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5ldmVyeSwgdHJ1ZSksICdBcnJheScsIHsNCiAgLy8gMjIuMS4zLjUgLyAxNS40LjQuMTYgQXJyYXkucHJvdG90eXBlLmV2ZXJ5KGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pDQogIGV2ZXJ5OiBmdW5jdGlvbiBldmVyeShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLyl7DQogICAgcmV0dXJuICRldmVyeSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pOw0KICB9DQp9KTsNCn0seyIuL19hcnJheS1tZXRob2RzIjoyMDEsIi4vX2V4cG9ydCI6MjIxLCIuL19zdHJpY3QtbWV0aG9kIjoyODV9XSwzMTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjIuMS4zLjYgQXJyYXkucHJvdG90eXBlLmZpbGwodmFsdWUsIHN0YXJ0ID0gMCwgZW5kID0gdGhpcy5sZW5ndGgpDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpOw0KDQokZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge2ZpbGw6IHJlcXVpcmUoJy4vX2FycmF5LWZpbGwnKX0pOw0KDQpyZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKSgnZmlsbCcpOw0KfSx7Ii4vX2FkZC10by11bnNjb3BhYmxlcyI6MTk0LCIuL19hcnJheS1maWxsIjoxOTgsIi4vX2V4cG9ydCI6MjIxfV0sMzEzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCAkZmlsdGVyID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDIpOw0KDQokZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10uZmlsdGVyLCB0cnVlKSwgJ0FycmF5Jywgew0KICAvLyAyMi4xLjMuNyAvIDE1LjQuNC4yMCBBcnJheS5wcm90b3R5cGUuZmlsdGVyKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pDQogIGZpbHRlcjogZnVuY3Rpb24gZmlsdGVyKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKXsNCiAgICByZXR1cm4gJGZpbHRlcih0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pOw0KICB9DQp9KTsNCn0seyIuL19hcnJheS1tZXRob2RzIjoyMDEsIi4vX2V4cG9ydCI6MjIxLCIuL19zdHJpY3QtbWV0aG9kIjoyODV9XSwzMTQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KLy8gMjIuMS4zLjkgQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleChwcmVkaWNhdGUsIHRoaXNBcmcgPSB1bmRlZmluZWQpDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgJGZpbmQgICA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSg2KQ0KICAsIEtFWSAgICAgPSAnZmluZEluZGV4Jw0KICAsIGZvcmNlZCAgPSB0cnVlOw0KLy8gU2hvdWxkbid0IHNraXAgaG9sZXMNCmlmKEtFWSBpbiBbXSlBcnJheSgxKVtLRVldKGZ1bmN0aW9uKCl7IGZvcmNlZCA9IGZhbHNlOyB9KTsNCiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZm9yY2VkLCAnQXJyYXknLCB7DQogIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KGNhbGxiYWNrZm4vKiwgdGhhdCA9IHVuZGVmaW5lZCAqLyl7DQogICAgcmV0dXJuICRmaW5kKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTsNCiAgfQ0KfSk7DQpyZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKShLRVkpOw0KfSx7Ii4vX2FkZC10by11bnNjb3BhYmxlcyI6MTk0LCIuL19hcnJheS1tZXRob2RzIjoyMDEsIi4vX2V4cG9ydCI6MjIxfV0sMzE1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCi8vIDIyLjEuMy44IEFycmF5LnByb3RvdHlwZS5maW5kKHByZWRpY2F0ZSwgdGhpc0FyZyA9IHVuZGVmaW5lZCkNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCAkZmluZCAgID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDUpDQogICwgS0VZICAgICA9ICdmaW5kJw0KICAsIGZvcmNlZCAgPSB0cnVlOw0KLy8gU2hvdWxkbid0IHNraXAgaG9sZXMNCmlmKEtFWSBpbiBbXSlBcnJheSgxKVtLRVldKGZ1bmN0aW9uKCl7IGZvcmNlZCA9IGZhbHNlOyB9KTsNCiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZm9yY2VkLCAnQXJyYXknLCB7DQogIGZpbmQ6IGZ1bmN0aW9uIGZpbmQoY2FsbGJhY2tmbi8qLCB0aGF0ID0gdW5kZWZpbmVkICovKXsNCiAgICByZXR1cm4gJGZpbmQodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpOw0KICB9DQp9KTsNCnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKEtFWSk7DQp9LHsiLi9fYWRkLXRvLXVuc2NvcGFibGVzIjoxOTQsIi4vX2FycmF5LW1ldGhvZHMiOjIwMSwiLi9fZXhwb3J0IjoyMjF9XSwzMTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyICRleHBvcnQgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCAkZm9yRWFjaCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgwKQ0KICAsIFNUUklDVCAgID0gcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmZvckVhY2gsIHRydWUpOw0KDQokZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFTVFJJQ1QsICdBcnJheScsIHsNCiAgLy8gMjIuMS4zLjEwIC8gMTUuNC40LjE4IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pDQogIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pew0KICAgIHJldHVybiAkZm9yRWFjaCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pOw0KICB9DQp9KTsNCn0seyIuL19hcnJheS1tZXRob2RzIjoyMDEsIi4vX2V4cG9ydCI6MjIxLCIuL19zdHJpY3QtbWV0aG9kIjoyODV9XSwzMTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyIGN0eCAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fY3R4JykNCiAgLCAkZXhwb3J0ICAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgdG9PYmplY3QgICAgICAgPSByZXF1aXJlKCcuL190by1vYmplY3QnKQ0KICAsIGNhbGwgICAgICAgICAgID0gcmVxdWlyZSgnLi9faXRlci1jYWxsJykNCiAgLCBpc0FycmF5SXRlciAgICA9IHJlcXVpcmUoJy4vX2lzLWFycmF5LWl0ZXInKQ0KICAsIHRvTGVuZ3RoICAgICAgID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJykNCiAgLCBjcmVhdGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX2NyZWF0ZS1wcm9wZXJ0eScpDQogICwgZ2V0SXRlckZuICAgICAgPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpOw0KDQokZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpKGZ1bmN0aW9uKGl0ZXIpeyBBcnJheS5mcm9tKGl0ZXIpOyB9KSwgJ0FycmF5Jywgew0KICAvLyAyMi4xLjIuMSBBcnJheS5mcm9tKGFycmF5TGlrZSwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQpDQogIGZyb206IGZ1bmN0aW9uIGZyb20oYXJyYXlMaWtlLyosIG1hcGZuID0gdW5kZWZpbmVkLCB0aGlzQXJnID0gdW5kZWZpbmVkKi8pew0KICAgIHZhciBPICAgICAgID0gdG9PYmplY3QoYXJyYXlMaWtlKQ0KICAgICAgLCBDICAgICAgID0gdHlwZW9mIHRoaXMgPT0gJ2Z1bmN0aW9uJyA/IHRoaXMgOiBBcnJheQ0KICAgICAgLCBhTGVuICAgID0gYXJndW1lbnRzLmxlbmd0aA0KICAgICAgLCBtYXBmbiAgID0gYUxlbiA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQNCiAgICAgICwgbWFwcGluZyA9IG1hcGZuICE9PSB1bmRlZmluZWQNCiAgICAgICwgaW5kZXggICA9IDANCiAgICAgICwgaXRlckZuICA9IGdldEl0ZXJGbihPKQ0KICAgICAgLCBsZW5ndGgsIHJlc3VsdCwgc3RlcCwgaXRlcmF0b3I7DQogICAgaWYobWFwcGluZyltYXBmbiA9IGN0eChtYXBmbiwgYUxlbiA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQsIDIpOw0KICAgIC8vIGlmIG9iamVjdCBpc24ndCBpdGVyYWJsZSBvciBpdCdzIGFycmF5IHdpdGggZGVmYXVsdCBpdGVyYXRvciAtIHVzZSBzaW1wbGUgY2FzZQ0KICAgIGlmKGl0ZXJGbiAhPSB1bmRlZmluZWQgJiYgIShDID09IEFycmF5ICYmIGlzQXJyYXlJdGVyKGl0ZXJGbikpKXsNCiAgICAgIGZvcihpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKE8pLCByZXN1bHQgPSBuZXcgQzsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOyBpbmRleCsrKXsNCiAgICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgbWFwcGluZyA/IGNhbGwoaXRlcmF0b3IsIG1hcGZuLCBbc3RlcC52YWx1ZSwgaW5kZXhdLCB0cnVlKSA6IHN0ZXAudmFsdWUpOw0KICAgICAgfQ0KICAgIH0gZWxzZSB7DQogICAgICBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7DQogICAgICBmb3IocmVzdWx0ID0gbmV3IEMobGVuZ3RoKTsgbGVuZ3RoID4gaW5kZXg7IGluZGV4Kyspew0KICAgICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBtYXBwaW5nID8gbWFwZm4oT1tpbmRleF0sIGluZGV4KSA6IE9baW5kZXhdKTsNCiAgICAgIH0NCiAgICB9DQogICAgcmVzdWx0Lmxlbmd0aCA9IGluZGV4Ow0KICAgIHJldHVybiByZXN1bHQ7DQogIH0NCn0pOw0KDQp9LHsiLi9fY3JlYXRlLXByb3BlcnR5IjoyMTMsIi4vX2N0eCI6MjE0LCIuL19leHBvcnQiOjIyMSwiLi9faXMtYXJyYXktaXRlciI6MjM1LCIuL19pdGVyLWNhbGwiOjI0MCwiLi9faXRlci1kZXRlY3QiOjI0MywiLi9fdG8tbGVuZ3RoIjoyOTcsIi4vX3RvLW9iamVjdCI6Mjk4LCIuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCI6MzA3fV0sMzE4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciAkZXhwb3J0ICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCAkaW5kZXhPZiAgICAgID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKShmYWxzZSkNCiAgLCAkbmF0aXZlICAgICAgID0gW10uaW5kZXhPZg0KICAsIE5FR0FUSVZFX1pFUk8gPSAhISRuYXRpdmUgJiYgMSAvIFsxXS5pbmRleE9mKDEsIC0wKSA8IDA7DQoNCiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKE5FR0FUSVZFX1pFUk8gfHwgIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKSgkbmF0aXZlKSksICdBcnJheScsIHsNCiAgLy8gMjIuMS4zLjExIC8gMTUuNC40LjE0IEFycmF5LnByb3RvdHlwZS5pbmRleE9mKHNlYXJjaEVsZW1lbnQgWywgZnJvbUluZGV4XSkNCiAgaW5kZXhPZjogZnVuY3Rpb24gaW5kZXhPZihzZWFyY2hFbGVtZW50IC8qLCBmcm9tSW5kZXggPSAwICovKXsNCiAgICByZXR1cm4gTkVHQVRJVkVfWkVSTw0KICAgICAgLy8gY29udmVydCAtMCB0byArMA0KICAgICAgPyAkbmF0aXZlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgMA0KICAgICAgOiAkaW5kZXhPZih0aGlzLCBzZWFyY2hFbGVtZW50LCBhcmd1bWVudHNbMV0pOw0KICB9DQp9KTsNCn0seyIuL19hcnJheS1pbmNsdWRlcyI6MjAwLCIuL19leHBvcnQiOjIyMSwiLi9fc3RyaWN0LW1ldGhvZCI6Mjg1fV0sMzE5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIyLjEuMi4yIC8gMTUuNC4zLjIgQXJyYXkuaXNBcnJheShhcmcpDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ0FycmF5Jywge2lzQXJyYXk6IHJlcXVpcmUoJy4vX2lzLWFycmF5Jyl9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9faXMtYXJyYXkiOjIzNn1dLDMyMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTc4XVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19hZGQtdG8tdW5zY29wYWJsZXMiOjE5NCwiLi9faXRlci1kZWZpbmUiOjI0MiwiLi9faXRlci1zdGVwIjoyNDQsIi4vX2l0ZXJhdG9ycyI6MjQ1LCIuL190by1pb2JqZWN0IjoyOTYsImR1cCI6MTc4fV0sMzIxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCi8vIDIyLjEuMy4xMyBBcnJheS5wcm90b3R5cGUuam9pbihzZXBhcmF0b3IpDQp2YXIgJGV4cG9ydCAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JykNCiAgLCBhcnJheUpvaW4gPSBbXS5qb2luOw0KDQovLyBmYWxsYmFjayBmb3Igbm90IGFycmF5LWxpa2Ugc3RyaW5ncw0KJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAocmVxdWlyZSgnLi9faW9iamVjdCcpICE9IE9iamVjdCB8fCAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKGFycmF5Sm9pbikpLCAnQXJyYXknLCB7DQogIGpvaW46IGZ1bmN0aW9uIGpvaW4oc2VwYXJhdG9yKXsNCiAgICByZXR1cm4gYXJyYXlKb2luLmNhbGwodG9JT2JqZWN0KHRoaXMpLCBzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCA/ICcsJyA6IHNlcGFyYXRvcik7DQogIH0NCn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19pb2JqZWN0IjoyMzQsIi4vX3N0cmljdC1tZXRob2QiOjI4NSwiLi9fdG8taW9iamVjdCI6Mjk2fV0sMzIyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciAkZXhwb3J0ICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCB0b0lPYmplY3QgICAgID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpDQogICwgdG9JbnRlZ2VyICAgICA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKQ0KICAsIHRvTGVuZ3RoICAgICAgPSByZXF1aXJlKCcuL190by1sZW5ndGgnKQ0KICAsICRuYXRpdmUgICAgICAgPSBbXS5sYXN0SW5kZXhPZg0KICAsIE5FR0FUSVZFX1pFUk8gPSAhISRuYXRpdmUgJiYgMSAvIFsxXS5sYXN0SW5kZXhPZigxLCAtMCkgPCAwOw0KDQokZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChORUdBVElWRV9aRVJPIHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoJG5hdGl2ZSkpLCAnQXJyYXknLCB7DQogIC8vIDIyLjEuMy4xNCAvIDE1LjQuNC4xNSBBcnJheS5wcm90b3R5cGUubGFzdEluZGV4T2Yoc2VhcmNoRWxlbWVudCBbLCBmcm9tSW5kZXhdKQ0KICBsYXN0SW5kZXhPZjogZnVuY3Rpb24gbGFzdEluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiwgZnJvbUluZGV4ID0gQFsqLTFdICovKXsNCiAgICAvLyBjb252ZXJ0IC0wIHRvICswDQogICAgaWYoTkVHQVRJVkVfWkVSTylyZXR1cm4gJG5hdGl2ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IDA7DQogICAgdmFyIE8gICAgICA9IHRvSU9iamVjdCh0aGlzKQ0KICAgICAgLCBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCkNCiAgICAgICwgaW5kZXggID0gbGVuZ3RoIC0gMTsNCiAgICBpZihhcmd1bWVudHMubGVuZ3RoID4gMSlpbmRleCA9IE1hdGgubWluKGluZGV4LCB0b0ludGVnZXIoYXJndW1lbnRzWzFdKSk7DQogICAgaWYoaW5kZXggPCAwKWluZGV4ID0gbGVuZ3RoICsgaW5kZXg7DQogICAgZm9yKDtpbmRleCA+PSAwOyBpbmRleC0tKWlmKGluZGV4IGluIE8paWYoT1tpbmRleF0gPT09IHNlYXJjaEVsZW1lbnQpcmV0dXJuIGluZGV4IHx8IDA7DQogICAgcmV0dXJuIC0xOw0KICB9DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9fc3RyaWN0LW1ldGhvZCI6Mjg1LCIuL190by1pbnRlZ2VyIjoyOTUsIi4vX3RvLWlvYmplY3QiOjI5NiwiLi9fdG8tbGVuZ3RoIjoyOTd9XSwzMjM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsICRtYXAgICAgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMSk7DQoNCiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5tYXAsIHRydWUpLCAnQXJyYXknLCB7DQogIC8vIDIyLjEuMy4xNSAvIDE1LjQuNC4xOSBBcnJheS5wcm90b3R5cGUubWFwKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pDQogIG1hcDogZnVuY3Rpb24gbWFwKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKXsNCiAgICByZXR1cm4gJG1hcCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pOw0KICB9DQp9KTsNCn0seyIuL19hcnJheS1tZXRob2RzIjoyMDEsIi4vX2V4cG9ydCI6MjIxLCIuL19zdHJpY3QtbWV0aG9kIjoyODV9XSwzMjQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyICRleHBvcnQgICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBjcmVhdGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX2NyZWF0ZS1wcm9wZXJ0eScpOw0KDQovLyBXZWJLaXQgQXJyYXkub2YgaXNuJ3QgZ2VuZXJpYw0KJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7DQogIGZ1bmN0aW9uIEYoKXt9DQogIHJldHVybiAhKEFycmF5Lm9mLmNhbGwoRikgaW5zdGFuY2VvZiBGKTsNCn0pLCAnQXJyYXknLCB7DQogIC8vIDIyLjEuMi4zIEFycmF5Lm9mKCAuLi5pdGVtcykNCiAgb2Y6IGZ1bmN0aW9uIG9mKC8qIC4uLmFyZ3MgKi8pew0KICAgIHZhciBpbmRleCAgPSAwDQogICAgICAsIGFMZW4gICA9IGFyZ3VtZW50cy5sZW5ndGgNCiAgICAgICwgcmVzdWx0ID0gbmV3ICh0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5KShhTGVuKTsNCiAgICB3aGlsZShhTGVuID4gaW5kZXgpY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgYXJndW1lbnRzW2luZGV4KytdKTsNCiAgICByZXN1bHQubGVuZ3RoID0gYUxlbjsNCiAgICByZXR1cm4gcmVzdWx0Ow0KICB9DQp9KTsNCn0seyIuL19jcmVhdGUtcHJvcGVydHkiOjIxMywiLi9fZXhwb3J0IjoyMjEsIi4vX2ZhaWxzIjoyMjN9XSwzMjU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsICRyZWR1Y2UgPSByZXF1aXJlKCcuL19hcnJheS1yZWR1Y2UnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLnJlZHVjZVJpZ2h0LCB0cnVlKSwgJ0FycmF5Jywgew0KICAvLyAyMi4xLjMuMTkgLyAxNS40LjQuMjIgQXJyYXkucHJvdG90eXBlLnJlZHVjZVJpZ2h0KGNhbGxiYWNrZm4gWywgaW5pdGlhbFZhbHVlXSkNCiAgcmVkdWNlUmlnaHQ6IGZ1bmN0aW9uIHJlZHVjZVJpZ2h0KGNhbGxiYWNrZm4gLyogLCBpbml0aWFsVmFsdWUgKi8pew0KICAgIHJldHVybiAkcmVkdWNlKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3VtZW50c1sxXSwgdHJ1ZSk7DQogIH0NCn0pOw0KfSx7Ii4vX2FycmF5LXJlZHVjZSI6MjAyLCIuL19leHBvcnQiOjIyMSwiLi9fc3RyaWN0LW1ldGhvZCI6Mjg1fV0sMzI2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCAkcmVkdWNlID0gcmVxdWlyZSgnLi9fYXJyYXktcmVkdWNlJyk7DQoNCiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5yZWR1Y2UsIHRydWUpLCAnQXJyYXknLCB7DQogIC8vIDIyLjEuMy4xOCAvIDE1LjQuNC4yMSBBcnJheS5wcm90b3R5cGUucmVkdWNlKGNhbGxiYWNrZm4gWywgaW5pdGlhbFZhbHVlXSkNCiAgcmVkdWNlOiBmdW5jdGlvbiByZWR1Y2UoY2FsbGJhY2tmbiAvKiAsIGluaXRpYWxWYWx1ZSAqLyl7DQogICAgcmV0dXJuICRyZWR1Y2UodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCwgYXJndW1lbnRzWzFdLCBmYWxzZSk7DQogIH0NCn0pOw0KfSx7Ii4vX2FycmF5LXJlZHVjZSI6MjAyLCIuL19leHBvcnQiOjIyMSwiLi9fc3RyaWN0LW1ldGhvZCI6Mjg1fV0sMzI3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciAkZXhwb3J0ICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBodG1sICAgICAgID0gcmVxdWlyZSgnLi9faHRtbCcpDQogICwgY29mICAgICAgICA9IHJlcXVpcmUoJy4vX2NvZicpDQogICwgdG9JbmRleCAgICA9IHJlcXVpcmUoJy4vX3RvLWluZGV4JykNCiAgLCB0b0xlbmd0aCAgID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJykNCiAgLCBhcnJheVNsaWNlID0gW10uc2xpY2U7DQoNCi8vIGZhbGxiYWNrIGZvciBub3QgYXJyYXktbGlrZSBFUzMgc3RyaW5ncyBhbmQgRE9NIG9iamVjdHMNCiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpew0KICBpZihodG1sKWFycmF5U2xpY2UuY2FsbChodG1sKTsNCn0pLCAnQXJyYXknLCB7DQogIHNsaWNlOiBmdW5jdGlvbiBzbGljZShiZWdpbiwgZW5kKXsNCiAgICB2YXIgbGVuICAgPSB0b0xlbmd0aCh0aGlzLmxlbmd0aCkNCiAgICAgICwga2xhc3MgPSBjb2YodGhpcyk7DQogICAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyBsZW4gOiBlbmQ7DQogICAgaWYoa2xhc3MgPT0gJ0FycmF5JylyZXR1cm4gYXJyYXlTbGljZS5jYWxsKHRoaXMsIGJlZ2luLCBlbmQpOw0KICAgIHZhciBzdGFydCAgPSB0b0luZGV4KGJlZ2luLCBsZW4pDQogICAgICAsIHVwVG8gICA9IHRvSW5kZXgoZW5kLCBsZW4pDQogICAgICAsIHNpemUgICA9IHRvTGVuZ3RoKHVwVG8gLSBzdGFydCkNCiAgICAgICwgY2xvbmVkID0gQXJyYXkoc2l6ZSkNCiAgICAgICwgaSAgICAgID0gMDsNCiAgICBmb3IoOyBpIDwgc2l6ZTsgaSsrKWNsb25lZFtpXSA9IGtsYXNzID09ICdTdHJpbmcnDQogICAgICA/IHRoaXMuY2hhckF0KHN0YXJ0ICsgaSkNCiAgICAgIDogdGhpc1tzdGFydCArIGldOw0KICAgIHJldHVybiBjbG9uZWQ7DQogIH0NCn0pOw0KfSx7Ii4vX2NvZiI6MjA3LCIuL19leHBvcnQiOjIyMSwiLi9fZmFpbHMiOjIyMywiLi9faHRtbCI6MjMwLCIuL190by1pbmRleCI6Mjk0LCIuL190by1sZW5ndGgiOjI5N31dLDMyODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgJHNvbWUgICA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgzKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLnNvbWUsIHRydWUpLCAnQXJyYXknLCB7DQogIC8vIDIyLjEuMy4yMyAvIDE1LjQuNC4xNyBBcnJheS5wcm90b3R5cGUuc29tZShjYWxsYmFja2ZuIFssIHRoaXNBcmddKQ0KICBzb21lOiBmdW5jdGlvbiBzb21lKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKXsNCiAgICByZXR1cm4gJHNvbWUodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTsNCiAgfQ0KfSk7DQp9LHsiLi9fYXJyYXktbWV0aG9kcyI6MjAxLCIuL19leHBvcnQiOjIyMSwiLi9fc3RyaWN0LW1ldGhvZCI6Mjg1fV0sMzI5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciAkZXhwb3J0ICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKQ0KICAsIHRvT2JqZWN0ICA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpDQogICwgZmFpbHMgICAgID0gcmVxdWlyZSgnLi9fZmFpbHMnKQ0KICAsICRzb3J0ICAgICA9IFtdLnNvcnQNCiAgLCB0ZXN0ICAgICAgPSBbMSwgMiwgM107DQoNCiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKGZhaWxzKGZ1bmN0aW9uKCl7DQogIC8vIElFOC0NCiAgdGVzdC5zb3J0KHVuZGVmaW5lZCk7DQp9KSB8fCAhZmFpbHMoZnVuY3Rpb24oKXsNCiAgLy8gVjggYnVnDQogIHRlc3Quc29ydChudWxsKTsNCiAgLy8gT2xkIFdlYktpdA0KfSkgfHwgIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKSgkc29ydCkpLCAnQXJyYXknLCB7DQogIC8vIDIyLjEuMy4yNSBBcnJheS5wcm90b3R5cGUuc29ydChjb21wYXJlZm4pDQogIHNvcnQ6IGZ1bmN0aW9uIHNvcnQoY29tcGFyZWZuKXsNCiAgICByZXR1cm4gY29tcGFyZWZuID09PSB1bmRlZmluZWQNCiAgICAgID8gJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSkNCiAgICAgIDogJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSwgYUZ1bmN0aW9uKGNvbXBhcmVmbikpOw0KICB9DQp9KTsNCn0seyIuL19hLWZ1bmN0aW9uIjoxOTIsIi4vX2V4cG9ydCI6MjIxLCIuL19mYWlscyI6MjIzLCIuL19zdHJpY3QtbWV0aG9kIjoyODUsIi4vX3RvLW9iamVjdCI6Mjk4fV0sMzMwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoJ0FycmF5Jyk7DQp9LHsiLi9fc2V0LXNwZWNpZXMiOjI4MH1dLDMzMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyMC4zLjMuMSAvIDE1LjkuNC40IERhdGUubm93KCkNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7DQoNCiRleHBvcnQoJGV4cG9ydC5TLCAnRGF0ZScsIHtub3c6IGZ1bmN0aW9uKCl7IHJldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfX0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxfV0sMzMyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCi8vIDIwLjMuNC4zNiAvIDE1LjkuNS40MyBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZygpDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgZmFpbHMgICA9IHJlcXVpcmUoJy4vX2ZhaWxzJykNCiAgLCBnZXRUaW1lID0gRGF0ZS5wcm90b3R5cGUuZ2V0VGltZTsNCg0KdmFyIGx6ID0gZnVuY3Rpb24obnVtKXsNCiAgcmV0dXJuIG51bSA+IDkgPyBudW0gOiAnMCcgKyBudW07DQp9Ow0KDQovLyBQaGFudG9tSlMgLyBvbGQgV2ViS2l0IGhhcyBhIGJyb2tlbiBpbXBsZW1lbnRhdGlvbnMNCiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKGZhaWxzKGZ1bmN0aW9uKCl7DQogIHJldHVybiBuZXcgRGF0ZSgtNWUxMyAtIDEpLnRvSVNPU3RyaW5nKCkgIT0gJzAzODUtMDctMjVUMDc6MDY6MzkuOTk5Wic7DQp9KSB8fCAhZmFpbHMoZnVuY3Rpb24oKXsNCiAgbmV3IERhdGUoTmFOKS50b0lTT1N0cmluZygpOw0KfSkpLCAnRGF0ZScsIHsNCiAgdG9JU09TdHJpbmc6IGZ1bmN0aW9uIHRvSVNPU3RyaW5nKCl7DQogICAgaWYoIWlzRmluaXRlKGdldFRpbWUuY2FsbCh0aGlzKSkpdGhyb3cgUmFuZ2VFcnJvcignSW52YWxpZCB0aW1lIHZhbHVlJyk7DQogICAgdmFyIGQgPSB0aGlzDQogICAgICAsIHkgPSBkLmdldFVUQ0Z1bGxZZWFyKCkNCiAgICAgICwgbSA9IGQuZ2V0VVRDTWlsbGlzZWNvbmRzKCkNCiAgICAgICwgcyA9IHkgPCAwID8gJy0nIDogeSA+IDk5OTkgPyAnKycgOiAnJzsNCiAgICByZXR1cm4gcyArICgnMDAwMDAnICsgTWF0aC5hYnMoeSkpLnNsaWNlKHMgPyAtNiA6IC00KSArDQogICAgICAnLScgKyBseihkLmdldFVUQ01vbnRoKCkgKyAxKSArICctJyArIGx6KGQuZ2V0VVRDRGF0ZSgpKSArDQogICAgICAnVCcgKyBseihkLmdldFVUQ0hvdXJzKCkpICsgJzonICsgbHooZC5nZXRVVENNaW51dGVzKCkpICsNCiAgICAgICc6JyArIGx6KGQuZ2V0VVRDU2Vjb25kcygpKSArICcuJyArIChtID4gOTkgPyBtIDogJzAnICsgbHoobSkpICsgJ1onOw0KICB9DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9fZmFpbHMiOjIyM31dLDMzMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgJGV4cG9ydCAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIHRvT2JqZWN0ICAgID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JykNCiAgLCB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpOw0KDQokZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXsNCiAgcmV0dXJuIG5ldyBEYXRlKE5hTikudG9KU09OKCkgIT09IG51bGwgfHwgRGF0ZS5wcm90b3R5cGUudG9KU09OLmNhbGwoe3RvSVNPU3RyaW5nOiBmdW5jdGlvbigpeyByZXR1cm4gMTsgfX0pICE9PSAxOw0KfSksICdEYXRlJywgew0KICB0b0pTT046IGZ1bmN0aW9uIHRvSlNPTihrZXkpew0KICAgIHZhciBPICA9IHRvT2JqZWN0KHRoaXMpDQogICAgICAsIHB2ID0gdG9QcmltaXRpdmUoTyk7DQogICAgcmV0dXJuIHR5cGVvZiBwdiA9PSAnbnVtYmVyJyAmJiAhaXNGaW5pdGUocHYpID8gbnVsbCA6IE8udG9JU09TdHJpbmcoKTsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX2ZhaWxzIjoyMjMsIi4vX3RvLW9iamVjdCI6Mjk4LCIuL190by1wcmltaXRpdmUiOjI5OX1dLDMzNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgVE9fUFJJTUlUSVZFID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvUHJpbWl0aXZlJykNCiAgLCBwcm90byAgICAgICAgPSBEYXRlLnByb3RvdHlwZTsNCg0KaWYoIShUT19QUklNSVRJVkUgaW4gcHJvdG8pKXJlcXVpcmUoJy4vX2hpZGUnKShwcm90bywgVE9fUFJJTUlUSVZFLCByZXF1aXJlKCcuL19kYXRlLXRvLXByaW1pdGl2ZScpKTsNCn0seyIuL19kYXRlLXRvLXByaW1pdGl2ZSI6MjE1LCIuL19oaWRlIjoyMjksIi4vX3drcyI6MzA2fV0sMzM1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBEYXRlUHJvdG8gICAgPSBEYXRlLnByb3RvdHlwZQ0KICAsIElOVkFMSURfREFURSA9ICdJbnZhbGlkIERhdGUnDQogICwgVE9fU1RSSU5HICAgID0gJ3RvU3RyaW5nJw0KICAsICR0b1N0cmluZyAgICA9IERhdGVQcm90b1tUT19TVFJJTkddDQogICwgZ2V0VGltZSAgICAgID0gRGF0ZVByb3RvLmdldFRpbWU7DQppZihuZXcgRGF0ZShOYU4pICsgJycgIT0gSU5WQUxJRF9EQVRFKXsNCiAgcmVxdWlyZSgnLi9fcmVkZWZpbmUnKShEYXRlUHJvdG8sIFRPX1NUUklORywgZnVuY3Rpb24gdG9TdHJpbmcoKXsNCiAgICB2YXIgdmFsdWUgPSBnZXRUaW1lLmNhbGwodGhpcyk7DQogICAgcmV0dXJuIHZhbHVlID09PSB2YWx1ZSA/ICR0b1N0cmluZy5jYWxsKHRoaXMpIDogSU5WQUxJRF9EQVRFOw0KICB9KTsNCn0NCn0seyIuL19yZWRlZmluZSI6Mjc2fV0sMzM2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDE5LjIuMy4yIC8gMTUuMy40LjUgRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQodGhpc0FyZywgYXJncy4uLikNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7DQoNCiRleHBvcnQoJGV4cG9ydC5QLCAnRnVuY3Rpb24nLCB7YmluZDogcmVxdWlyZSgnLi9fYmluZCcpfSk7DQp9LHsiLi9fYmluZCI6MjA1LCIuL19leHBvcnQiOjIyMX1dLDMzNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgaXNPYmplY3QgICAgICAgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKQ0KICAsIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpDQogICwgSEFTX0lOU1RBTkNFICAgPSByZXF1aXJlKCcuL193a3MnKSgnaGFzSW5zdGFuY2UnKQ0KICAsIEZ1bmN0aW9uUHJvdG8gID0gRnVuY3Rpb24ucHJvdG90eXBlOw0KLy8gMTkuMi4zLjYgRnVuY3Rpb24ucHJvdG90eXBlW0BAaGFzSW5zdGFuY2VdKFYpDQppZighKEhBU19JTlNUQU5DRSBpbiBGdW5jdGlvblByb3RvKSlyZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mKEZ1bmN0aW9uUHJvdG8sIEhBU19JTlNUQU5DRSwge3ZhbHVlOiBmdW5jdGlvbihPKXsNCiAgaWYodHlwZW9mIHRoaXMgIT0gJ2Z1bmN0aW9uJyB8fCAhaXNPYmplY3QoTykpcmV0dXJuIGZhbHNlOw0KICBpZighaXNPYmplY3QodGhpcy5wcm90b3R5cGUpKXJldHVybiBPIGluc3RhbmNlb2YgdGhpczsNCiAgLy8gZm9yIGVudmlyb25tZW50IHcvbyBuYXRpdmUgYEBAaGFzSW5zdGFuY2VgIGxvZ2ljIGVub3VnaCBgaW5zdGFuY2VvZmAsIGJ1dCBhZGQgdGhpczoNCiAgd2hpbGUoTyA9IGdldFByb3RvdHlwZU9mKE8pKWlmKHRoaXMucHJvdG90eXBlID09PSBPKXJldHVybiB0cnVlOw0KICByZXR1cm4gZmFsc2U7DQp9fSk7DQp9LHsiLi9faXMtb2JqZWN0IjoyMzgsIi4vX29iamVjdC1kcCI6MjU2LCIuL19vYmplY3QtZ3BvIjoyNjMsIi4vX3drcyI6MzA2fV0sMzM4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBkUCAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZg0KICAsIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJykNCiAgLCBoYXMgICAgICAgID0gcmVxdWlyZSgnLi9faGFzJykNCiAgLCBGUHJvdG8gICAgID0gRnVuY3Rpb24ucHJvdG90eXBlDQogICwgbmFtZVJFICAgICA9IC9eXHMqZnVuY3Rpb24gKFteIChdKikvDQogICwgTkFNRSAgICAgICA9ICduYW1lJzsNCg0KdmFyIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGUgfHwgZnVuY3Rpb24oKXsNCiAgcmV0dXJuIHRydWU7DQp9Ow0KDQovLyAxOS4yLjQuMiBuYW1lDQpOQU1FIGluIEZQcm90byB8fCByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmIGRQKEZQcm90bywgTkFNRSwgew0KICBjb25maWd1cmFibGU6IHRydWUsDQogIGdldDogZnVuY3Rpb24oKXsNCiAgICB0cnkgew0KICAgICAgdmFyIHRoYXQgPSB0aGlzDQogICAgICAgICwgbmFtZSA9ICgnJyArIHRoYXQpLm1hdGNoKG5hbWVSRSlbMV07DQogICAgICBoYXModGhhdCwgTkFNRSkgfHwgIWlzRXh0ZW5zaWJsZSh0aGF0KSB8fCBkUCh0aGF0LCBOQU1FLCBjcmVhdGVEZXNjKDUsIG5hbWUpKTsNCiAgICAgIHJldHVybiBuYW1lOw0KICAgIH0gY2F0Y2goZSl7DQogICAgICByZXR1cm4gJyc7DQogICAgfQ0KICB9DQp9KTsNCn0seyIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19oYXMiOjIyOCwiLi9fb2JqZWN0LWRwIjoyNTYsIi4vX3Byb3BlcnR5LWRlc2MiOjI3NH1dLDMzOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgc3Ryb25nID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi1zdHJvbmcnKTsNCg0KLy8gMjMuMSBNYXAgT2JqZWN0cw0KbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoJ01hcCcsIGZ1bmN0aW9uKGdldCl7DQogIHJldHVybiBmdW5jdGlvbiBNYXAoKXsgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07DQp9LCB7DQogIC8vIDIzLjEuMy42IE1hcC5wcm90b3R5cGUuZ2V0KGtleSkNCiAgZ2V0OiBmdW5jdGlvbiBnZXQoa2V5KXsNCiAgICB2YXIgZW50cnkgPSBzdHJvbmcuZ2V0RW50cnkodGhpcywga2V5KTsNCiAgICByZXR1cm4gZW50cnkgJiYgZW50cnkudjsNCiAgfSwNCiAgLy8gMjMuMS4zLjkgTWFwLnByb3RvdHlwZS5zZXQoa2V5LCB2YWx1ZSkNCiAgc2V0OiBmdW5jdGlvbiBzZXQoa2V5LCB2YWx1ZSl7DQogICAgcmV0dXJuIHN0cm9uZy5kZWYodGhpcywga2V5ID09PSAwID8gMCA6IGtleSwgdmFsdWUpOw0KICB9DQp9LCBzdHJvbmcsIHRydWUpOw0KfSx7Ii4vX2NvbGxlY3Rpb24iOjIxMSwiLi9fY29sbGVjdGlvbi1zdHJvbmciOjIwOH1dLDM0MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyMC4yLjIuMyBNYXRoLmFjb3NoKHgpDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgbG9nMXAgICA9IHJlcXVpcmUoJy4vX21hdGgtbG9nMXAnKQ0KICAsIHNxcnQgICAgPSBNYXRoLnNxcnQNCiAgLCAkYWNvc2ggID0gTWF0aC5hY29zaDsNCg0KJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKCRhY29zaA0KICAvLyBWOCBidWc6IGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zNTA5DQogICYmIE1hdGguZmxvb3IoJGFjb3NoKE51bWJlci5NQVhfVkFMVUUpKSA9PSA3MTANCiAgLy8gVG9yIEJyb3dzZXIgYnVnOiBNYXRoLmFjb3NoKEluZmluaXR5KSAtPiBOYU4gDQogICYmICRhY29zaChJbmZpbml0eSkgPT0gSW5maW5pdHkNCiksICdNYXRoJywgew0KICBhY29zaDogZnVuY3Rpb24gYWNvc2goeCl7DQogICAgcmV0dXJuICh4ID0gK3gpIDwgMSA/IE5hTiA6IHggPiA5NDkwNjI2NS42MjQyNTE1Ng0KICAgICAgPyBNYXRoLmxvZyh4KSArIE1hdGguTE4yDQogICAgICA6IGxvZzFwKHggLSAxICsgc3FydCh4IC0gMSkgKiBzcXJ0KHggKyAxKSk7DQogIH0NCn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19tYXRoLWxvZzFwIjoyNDl9XSwzNDE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjAuMi4yLjUgTWF0aC5hc2luaCh4KQ0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsICRhc2luaCAgPSBNYXRoLmFzaW5oOw0KDQpmdW5jdGlvbiBhc2luaCh4KXsNCiAgcmV0dXJuICFpc0Zpbml0ZSh4ID0gK3gpIHx8IHggPT0gMCA/IHggOiB4IDwgMCA/IC1hc2luaCgteCkgOiBNYXRoLmxvZyh4ICsgTWF0aC5zcXJ0KHggKiB4ICsgMSkpOw0KfQ0KDQovLyBUb3IgQnJvd3NlciBidWc6IE1hdGguYXNpbmgoMCkgLT4gLTAgDQokZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGFzaW5oICYmIDEgLyAkYXNpbmgoMCkgPiAwKSwgJ01hdGgnLCB7YXNpbmg6IGFzaW5ofSk7DQp9LHsiLi9fZXhwb3J0IjoyMjF9XSwzNDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjAuMi4yLjcgTWF0aC5hdGFuaCh4KQ0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsICRhdGFuaCAgPSBNYXRoLmF0YW5oOw0KDQovLyBUb3IgQnJvd3NlciBidWc6IE1hdGguYXRhbmgoLTApIC0+IDAgDQokZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGF0YW5oICYmIDEgLyAkYXRhbmgoLTApIDwgMCksICdNYXRoJywgew0KICBhdGFuaDogZnVuY3Rpb24gYXRhbmgoeCl7DQogICAgcmV0dXJuICh4ID0gK3gpID09IDAgPyB4IDogTWF0aC5sb2coKDEgKyB4KSAvICgxIC0geCkpIC8gMjsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjF9XSwzNDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjAuMi4yLjkgTWF0aC5jYnJ0KHgpDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgc2lnbiAgICA9IHJlcXVpcmUoJy4vX21hdGgtc2lnbicpOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7DQogIGNicnQ6IGZ1bmN0aW9uIGNicnQoeCl7DQogICAgcmV0dXJuIHNpZ24oeCA9ICt4KSAqIE1hdGgucG93KE1hdGguYWJzKHgpLCAxIC8gMyk7DQogIH0NCn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19tYXRoLXNpZ24iOjI1MH1dLDM0NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyMC4yLjIuMTEgTWF0aC5jbHozMih4KQ0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgew0KICBjbHozMjogZnVuY3Rpb24gY2x6MzIoeCl7DQogICAgcmV0dXJuICh4ID4+Pj0gMCkgPyAzMSAtIE1hdGguZmxvb3IoTWF0aC5sb2coeCArIDAuNSkgKiBNYXRoLkxPRzJFKSA6IDMyOw0KICB9DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMX1dLDM0NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyMC4yLjIuMTIgTWF0aC5jb3NoKHgpDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgZXhwICAgICA9IE1hdGguZXhwOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7DQogIGNvc2g6IGZ1bmN0aW9uIGNvc2goeCl7DQogICAgcmV0dXJuIChleHAoeCA9ICt4KSArIGV4cCgteCkpIC8gMjsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjF9XSwzNDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjAuMi4yLjE0IE1hdGguZXhwbTEoeCkNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCAkZXhwbTEgID0gcmVxdWlyZSgnLi9fbWF0aC1leHBtMScpOw0KDQokZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICgkZXhwbTEgIT0gTWF0aC5leHBtMSksICdNYXRoJywge2V4cG0xOiAkZXhwbTF9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9fbWF0aC1leHBtMSI6MjQ4fV0sMzQ3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIwLjIuMi4xNiBNYXRoLmZyb3VuZCh4KQ0KdmFyICRleHBvcnQgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgc2lnbiAgICAgID0gcmVxdWlyZSgnLi9fbWF0aC1zaWduJykNCiAgLCBwb3cgICAgICAgPSBNYXRoLnBvdw0KICAsIEVQU0lMT04gICA9IHBvdygyLCAtNTIpDQogICwgRVBTSUxPTjMyID0gcG93KDIsIC0yMykNCiAgLCBNQVgzMiAgICAgPSBwb3coMiwgMTI3KSAqICgyIC0gRVBTSUxPTjMyKQ0KICAsIE1JTjMyICAgICA9IHBvdygyLCAtMTI2KTsNCg0KdmFyIHJvdW5kVGllc1RvRXZlbiA9IGZ1bmN0aW9uKG4pew0KICByZXR1cm4gbiArIDEgLyBFUFNJTE9OIC0gMSAvIEVQU0lMT047DQp9Ow0KDQoNCiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsNCiAgZnJvdW5kOiBmdW5jdGlvbiBmcm91bmQoeCl7DQogICAgdmFyICRhYnMgID0gTWF0aC5hYnMoeCkNCiAgICAgICwgJHNpZ24gPSBzaWduKHgpDQogICAgICAsIGEsIHJlc3VsdDsNCiAgICBpZigkYWJzIDwgTUlOMzIpcmV0dXJuICRzaWduICogcm91bmRUaWVzVG9FdmVuKCRhYnMgLyBNSU4zMiAvIEVQU0lMT04zMikgKiBNSU4zMiAqIEVQU0lMT04zMjsNCiAgICBhID0gKDEgKyBFUFNJTE9OMzIgLyBFUFNJTE9OKSAqICRhYnM7DQogICAgcmVzdWx0ID0gYSAtIChhIC0gJGFicyk7DQogICAgaWYocmVzdWx0ID4gTUFYMzIgfHwgcmVzdWx0ICE9IHJlc3VsdClyZXR1cm4gJHNpZ24gKiBJbmZpbml0eTsNCiAgICByZXR1cm4gJHNpZ24gKiByZXN1bHQ7DQogIH0NCn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19tYXRoLXNpZ24iOjI1MH1dLDM0ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyMC4yLjIuMTcgTWF0aC5oeXBvdChbdmFsdWUxWywgdmFsdWUyWywg4oCmIF1dXSkNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBhYnMgICAgID0gTWF0aC5hYnM7DQoNCiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsNCiAgaHlwb3Q6IGZ1bmN0aW9uIGh5cG90KHZhbHVlMSwgdmFsdWUyKXsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFycw0KICAgIHZhciBzdW0gID0gMA0KICAgICAgLCBpICAgID0gMA0KICAgICAgLCBhTGVuID0gYXJndW1lbnRzLmxlbmd0aA0KICAgICAgLCBsYXJnID0gMA0KICAgICAgLCBhcmcsIGRpdjsNCiAgICB3aGlsZShpIDwgYUxlbil7DQogICAgICBhcmcgPSBhYnMoYXJndW1lbnRzW2krK10pOw0KICAgICAgaWYobGFyZyA8IGFyZyl7DQogICAgICAgIGRpdiAgPSBsYXJnIC8gYXJnOw0KICAgICAgICBzdW0gID0gc3VtICogZGl2ICogZGl2ICsgMTsNCiAgICAgICAgbGFyZyA9IGFyZzsNCiAgICAgIH0gZWxzZSBpZihhcmcgPiAwKXsNCiAgICAgICAgZGl2ICA9IGFyZyAvIGxhcmc7DQogICAgICAgIHN1bSArPSBkaXYgKiBkaXY7DQogICAgICB9IGVsc2Ugc3VtICs9IGFyZzsNCiAgICB9DQogICAgcmV0dXJuIGxhcmcgPT09IEluZmluaXR5ID8gSW5maW5pdHkgOiBsYXJnICogTWF0aC5zcXJ0KHN1bSk7DQogIH0NCn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxfV0sMzQ5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIwLjIuMi4xOCBNYXRoLmltdWwoeCwgeSkNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCAkaW11bCAgID0gTWF0aC5pbXVsOw0KDQovLyBzb21lIFdlYktpdCB2ZXJzaW9ucyBmYWlscyB3aXRoIGJpZyBudW1iZXJzLCBzb21lIGhhcyB3cm9uZyBhcml0eQ0KJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7DQogIHJldHVybiAkaW11bCgweGZmZmZmZmZmLCA1KSAhPSAtNSB8fCAkaW11bC5sZW5ndGggIT0gMjsNCn0pLCAnTWF0aCcsIHsNCiAgaW11bDogZnVuY3Rpb24gaW11bCh4LCB5KXsNCiAgICB2YXIgVUlOVDE2ID0gMHhmZmZmDQogICAgICAsIHhuID0gK3gNCiAgICAgICwgeW4gPSAreQ0KICAgICAgLCB4bCA9IFVJTlQxNiAmIHhuDQogICAgICAsIHlsID0gVUlOVDE2ICYgeW47DQogICAgcmV0dXJuIDAgfCB4bCAqIHlsICsgKChVSU5UMTYgJiB4biA+Pj4gMTYpICogeWwgKyB4bCAqIChVSU5UMTYgJiB5biA+Pj4gMTYpIDw8IDE2ID4+PiAwKTsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX2ZhaWxzIjoyMjN9XSwzNTA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjAuMi4yLjIxIE1hdGgubG9nMTAoeCkNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7DQoNCiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsNCiAgbG9nMTA6IGZ1bmN0aW9uIGxvZzEwKHgpew0KICAgIHJldHVybiBNYXRoLmxvZyh4KSAvIE1hdGguTE4xMDsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjF9XSwzNTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjAuMi4yLjIwIE1hdGgubG9nMXAoeCkNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7DQoNCiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtsb2cxcDogcmVxdWlyZSgnLi9fbWF0aC1sb2cxcCcpfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX21hdGgtbG9nMXAiOjI0OX1dLDM1MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyMC4yLjIuMjIgTWF0aC5sb2cyKHgpDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7DQogIGxvZzI6IGZ1bmN0aW9uIGxvZzIoeCl7DQogICAgcmV0dXJuIE1hdGgubG9nKHgpIC8gTWF0aC5MTjI7DQogIH0NCn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxfV0sMzUzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIwLjIuMi4yOCBNYXRoLnNpZ24oeCkNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7DQoNCiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtzaWduOiByZXF1aXJlKCcuL19tYXRoLXNpZ24nKX0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19tYXRoLXNpZ24iOjI1MH1dLDM1NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyMC4yLjIuMzAgTWF0aC5zaW5oKHgpDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgZXhwbTEgICA9IHJlcXVpcmUoJy4vX21hdGgtZXhwbTEnKQ0KICAsIGV4cCAgICAgPSBNYXRoLmV4cDsNCg0KLy8gVjggbmVhciBDaHJvbWl1bSAzOCBoYXMgYSBwcm9ibGVtIHdpdGggdmVyeSBzbWFsbCBudW1iZXJzDQokZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXsNCiAgcmV0dXJuICFNYXRoLnNpbmgoLTJlLTE3KSAhPSAtMmUtMTc7DQp9KSwgJ01hdGgnLCB7DQogIHNpbmg6IGZ1bmN0aW9uIHNpbmgoeCl7DQogICAgcmV0dXJuIE1hdGguYWJzKHggPSAreCkgPCAxDQogICAgICA/IChleHBtMSh4KSAtIGV4cG0xKC14KSkgLyAyDQogICAgICA6IChleHAoeCAtIDEpIC0gZXhwKC14IC0gMSkpICogKE1hdGguRSAvIDIpOw0KICB9DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9fZmFpbHMiOjIyMywiLi9fbWF0aC1leHBtMSI6MjQ4fV0sMzU1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIwLjIuMi4zMyBNYXRoLnRhbmgoeCkNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBleHBtMSAgID0gcmVxdWlyZSgnLi9fbWF0aC1leHBtMScpDQogICwgZXhwICAgICA9IE1hdGguZXhwOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7DQogIHRhbmg6IGZ1bmN0aW9uIHRhbmgoeCl7DQogICAgdmFyIGEgPSBleHBtMSh4ID0gK3gpDQogICAgICAsIGIgPSBleHBtMSgteCk7DQogICAgcmV0dXJuIGEgPT0gSW5maW5pdHkgPyAxIDogYiA9PSBJbmZpbml0eSA/IC0xIDogKGEgLSBiKSAvIChleHAoeCkgKyBleHAoLXgpKTsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX21hdGgtZXhwbTEiOjI0OH1dLDM1NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyMC4yLjIuMzQgTWF0aC50cnVuYyh4KQ0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgew0KICB0cnVuYzogZnVuY3Rpb24gdHJ1bmMoaXQpew0KICAgIHJldHVybiAoaXQgPiAwID8gTWF0aC5mbG9vciA6IE1hdGguY2VpbCkoaXQpOw0KICB9DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMX1dLDM1NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgZ2xvYmFsICAgICAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKQ0KICAsIGhhcyAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9faGFzJykNCiAgLCBjb2YgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2NvZicpDQogICwgaW5oZXJpdElmUmVxdWlyZWQgPSByZXF1aXJlKCcuL19pbmhlcml0LWlmLXJlcXVpcmVkJykNCiAgLCB0b1ByaW1pdGl2ZSAgICAgICA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpDQogICwgZmFpbHMgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19mYWlscycpDQogICwgZ09QTiAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmYNCiAgLCBnT1BEICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZg0KICAsIGRQICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZg0KICAsICR0cmltICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltDQogICwgTlVNQkVSICAgICAgICAgICAgPSAnTnVtYmVyJw0KICAsICROdW1iZXIgICAgICAgICAgID0gZ2xvYmFsW05VTUJFUl0NCiAgLCBCYXNlICAgICAgICAgICAgICA9ICROdW1iZXINCiAgLCBwcm90byAgICAgICAgICAgICA9ICROdW1iZXIucHJvdG90eXBlDQogIC8vIE9wZXJhIH4xMiBoYXMgYnJva2VuIE9iamVjdCN0b1N0cmluZw0KICAsIEJST0tFTl9DT0YgICAgICAgID0gY29mKHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKShwcm90bykpID09IE5VTUJFUg0KICAsIFRSSU0gICAgICAgICAgICAgID0gJ3RyaW0nIGluIFN0cmluZy5wcm90b3R5cGU7DQoNCi8vIDcuMS4zIFRvTnVtYmVyKGFyZ3VtZW50KQ0KdmFyIHRvTnVtYmVyID0gZnVuY3Rpb24oYXJndW1lbnQpew0KICB2YXIgaXQgPSB0b1ByaW1pdGl2ZShhcmd1bWVudCwgZmFsc2UpOw0KICBpZih0eXBlb2YgaXQgPT0gJ3N0cmluZycgJiYgaXQubGVuZ3RoID4gMil7DQogICAgaXQgPSBUUklNID8gaXQudHJpbSgpIDogJHRyaW0oaXQsIDMpOw0KICAgIHZhciBmaXJzdCA9IGl0LmNoYXJDb2RlQXQoMCkNCiAgICAgICwgdGhpcmQsIHJhZGl4LCBtYXhDb2RlOw0KICAgIGlmKGZpcnN0ID09PSA0MyB8fCBmaXJzdCA9PT0gNDUpew0KICAgICAgdGhpcmQgPSBpdC5jaGFyQ29kZUF0KDIpOw0KICAgICAgaWYodGhpcmQgPT09IDg4IHx8IHRoaXJkID09PSAxMjApcmV0dXJuIE5hTjsgLy8gTnVtYmVyKCcrMHgxJykgc2hvdWxkIGJlIE5hTiwgb2xkIFY4IGZpeA0KICAgIH0gZWxzZSBpZihmaXJzdCA9PT0gNDgpew0KICAgICAgc3dpdGNoKGl0LmNoYXJDb2RlQXQoMSkpew0KICAgICAgICBjYXNlIDY2IDogY2FzZSA5OCAgOiByYWRpeCA9IDI7IG1heENvZGUgPSA0OTsgYnJlYWs7IC8vIGZhc3QgZXF1YWwgL14wYlswMV0rJC9pDQogICAgICAgIGNhc2UgNzkgOiBjYXNlIDExMSA6IHJhZGl4ID0gODsgbWF4Q29kZSA9IDU1OyBicmVhazsgLy8gZmFzdCBlcXVhbCAvXjBvWzAtN10rJC9pDQogICAgICAgIGRlZmF1bHQgOiByZXR1cm4gK2l0Ow0KICAgICAgfQ0KICAgICAgZm9yKHZhciBkaWdpdHMgPSBpdC5zbGljZSgyKSwgaSA9IDAsIGwgPSBkaWdpdHMubGVuZ3RoLCBjb2RlOyBpIDwgbDsgaSsrKXsNCiAgICAgICAgY29kZSA9IGRpZ2l0cy5jaGFyQ29kZUF0KGkpOw0KICAgICAgICAvLyBwYXJzZUludCBwYXJzZXMgYSBzdHJpbmcgdG8gYSBmaXJzdCB1bmF2YWlsYWJsZSBzeW1ib2wNCiAgICAgICAgLy8gYnV0IFRvTnVtYmVyIHNob3VsZCByZXR1cm4gTmFOIGlmIGEgc3RyaW5nIGNvbnRhaW5zIHVuYXZhaWxhYmxlIHN5bWJvbHMNCiAgICAgICAgaWYoY29kZSA8IDQ4IHx8IGNvZGUgPiBtYXhDb2RlKXJldHVybiBOYU47DQogICAgICB9IHJldHVybiBwYXJzZUludChkaWdpdHMsIHJhZGl4KTsNCiAgICB9DQogIH0gcmV0dXJuICtpdDsNCn07DQoNCmlmKCEkTnVtYmVyKCcgMG8xJykgfHwgISROdW1iZXIoJzBiMScpIHx8ICROdW1iZXIoJysweDEnKSl7DQogICROdW1iZXIgPSBmdW5jdGlvbiBOdW1iZXIodmFsdWUpew0KICAgIHZhciBpdCA9IGFyZ3VtZW50cy5sZW5ndGggPCAxID8gMCA6IHZhbHVlDQogICAgICAsIHRoYXQgPSB0aGlzOw0KICAgIHJldHVybiB0aGF0IGluc3RhbmNlb2YgJE51bWJlcg0KICAgICAgLy8gY2hlY2sgb24gMS4uY29uc3RydWN0b3IoZm9vKSBjYXNlDQogICAgICAmJiAoQlJPS0VOX0NPRiA/IGZhaWxzKGZ1bmN0aW9uKCl7IHByb3RvLnZhbHVlT2YuY2FsbCh0aGF0KTsgfSkgOiBjb2YodGhhdCkgIT0gTlVNQkVSKQ0KICAgICAgICA/IGluaGVyaXRJZlJlcXVpcmVkKG5ldyBCYXNlKHRvTnVtYmVyKGl0KSksIHRoYXQsICROdW1iZXIpIDogdG9OdW1iZXIoaXQpOw0KICB9Ow0KICBmb3IodmFyIGtleXMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QTihCYXNlKSA6ICgNCiAgICAvLyBFUzM6DQogICAgJ01BWF9WQUxVRSxNSU5fVkFMVUUsTmFOLE5FR0FUSVZFX0lORklOSVRZLFBPU0lUSVZFX0lORklOSVRZLCcgKw0KICAgIC8vIEVTNiAoaW4gY2FzZSwgaWYgbW9kdWxlcyB3aXRoIEVTNiBOdW1iZXIgc3RhdGljcyByZXF1aXJlZCBiZWZvcmUpOg0KICAgICdFUFNJTE9OLGlzRmluaXRlLGlzSW50ZWdlcixpc05hTixpc1NhZmVJbnRlZ2VyLE1BWF9TQUZFX0lOVEVHRVIsJyArDQogICAgJ01JTl9TQUZFX0lOVEVHRVIscGFyc2VGbG9hdCxwYXJzZUludCxpc0ludGVnZXInDQogICkuc3BsaXQoJywnKSwgaiA9IDAsIGtleTsga2V5cy5sZW5ndGggPiBqOyBqKyspew0KICAgIGlmKGhhcyhCYXNlLCBrZXkgPSBrZXlzW2pdKSAmJiAhaGFzKCROdW1iZXIsIGtleSkpew0KICAgICAgZFAoJE51bWJlciwga2V5LCBnT1BEKEJhc2UsIGtleSkpOw0KICAgIH0NCiAgfQ0KICAkTnVtYmVyLnByb3RvdHlwZSA9IHByb3RvOw0KICBwcm90by5jb25zdHJ1Y3RvciA9ICROdW1iZXI7DQogIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoZ2xvYmFsLCBOVU1CRVIsICROdW1iZXIpOw0KfQ0KfSx7Ii4vX2NvZiI6MjA3LCIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19mYWlscyI6MjIzLCIuL19nbG9iYWwiOjIyNywiLi9faGFzIjoyMjgsIi4vX2luaGVyaXQtaWYtcmVxdWlyZWQiOjIzMiwiLi9fb2JqZWN0LWNyZWF0ZSI6MjU1LCIuL19vYmplY3QtZHAiOjI1NiwiLi9fb2JqZWN0LWdvcGQiOjI1OSwiLi9fb2JqZWN0LWdvcG4iOjI2MSwiLi9fcmVkZWZpbmUiOjI3NiwiLi9fc3RyaW5nLXRyaW0iOjI5MSwiLi9fdG8tcHJpbWl0aXZlIjoyOTl9XSwzNTg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjAuMS4yLjEgTnVtYmVyLkVQU0lMT04NCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7DQoNCiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywge0VQU0lMT046IE1hdGgucG93KDIsIC01Mil9KTsNCn0seyIuL19leHBvcnQiOjIyMX1dLDM1OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyMC4xLjIuMiBOdW1iZXIuaXNGaW5pdGUobnVtYmVyKQ0KdmFyICRleHBvcnQgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgX2lzRmluaXRlID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuaXNGaW5pdGU7DQoNCiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywgew0KICBpc0Zpbml0ZTogZnVuY3Rpb24gaXNGaW5pdGUoaXQpew0KICAgIHJldHVybiB0eXBlb2YgaXQgPT0gJ251bWJlcicgJiYgX2lzRmluaXRlKGl0KTsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX2dsb2JhbCI6MjI3fV0sMzYwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIwLjEuMi4zIE51bWJlci5pc0ludGVnZXIobnVtYmVyKQ0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7aXNJbnRlZ2VyOiByZXF1aXJlKCcuL19pcy1pbnRlZ2VyJyl9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9faXMtaW50ZWdlciI6MjM3fV0sMzYxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIwLjEuMi40IE51bWJlci5pc05hTihudW1iZXIpDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHsNCiAgaXNOYU46IGZ1bmN0aW9uIGlzTmFOKG51bWJlcil7DQogICAgcmV0dXJuIG51bWJlciAhPSBudW1iZXI7DQogIH0NCn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxfV0sMzYyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIwLjEuMi41IE51bWJlci5pc1NhZmVJbnRlZ2VyKG51bWJlcikNCnZhciAkZXhwb3J0ICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIGlzSW50ZWdlciA9IHJlcXVpcmUoJy4vX2lzLWludGVnZXInKQ0KICAsIGFicyAgICAgICA9IE1hdGguYWJzOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHsNCiAgaXNTYWZlSW50ZWdlcjogZnVuY3Rpb24gaXNTYWZlSW50ZWdlcihudW1iZXIpew0KICAgIHJldHVybiBpc0ludGVnZXIobnVtYmVyKSAmJiBhYnMobnVtYmVyKSA8PSAweDFmZmZmZmZmZmZmZmZmOw0KICB9DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9faXMtaW50ZWdlciI6MjM3fV0sMzYzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIwLjEuMi42IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtNQVhfU0FGRV9JTlRFR0VSOiAweDFmZmZmZmZmZmZmZmZmfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjF9XSwzNjQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjAuMS4yLjEwIE51bWJlci5NSU5fU0FGRV9JTlRFR0VSDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtNSU5fU0FGRV9JTlRFR0VSOiAtMHgxZmZmZmZmZmZmZmZmZn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxfV0sMzY1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciAkZXhwb3J0ICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgJHBhcnNlRmxvYXQgPSByZXF1aXJlKCcuL19wYXJzZS1mbG9hdCcpOw0KLy8gMjAuMS4yLjEyIE51bWJlci5wYXJzZUZsb2F0KHN0cmluZykNCiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKE51bWJlci5wYXJzZUZsb2F0ICE9ICRwYXJzZUZsb2F0KSwgJ051bWJlcicsIHtwYXJzZUZsb2F0OiAkcGFyc2VGbG9hdH0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19wYXJzZS1mbG9hdCI6MjcwfV0sMzY2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciAkZXhwb3J0ICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX3BhcnNlLWludCcpOw0KLy8gMjAuMS4yLjEzIE51bWJlci5wYXJzZUludChzdHJpbmcsIHJhZGl4KQ0KJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoTnVtYmVyLnBhcnNlSW50ICE9ICRwYXJzZUludCksICdOdW1iZXInLCB7cGFyc2VJbnQ6ICRwYXJzZUludH0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19wYXJzZS1pbnQiOjI3MX1dLDM2NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgJGV4cG9ydCAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBhbkluc3RhbmNlICAgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpDQogICwgdG9JbnRlZ2VyICAgID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpDQogICwgYU51bWJlclZhbHVlID0gcmVxdWlyZSgnLi9fYS1udW1iZXItdmFsdWUnKQ0KICAsIHJlcGVhdCAgICAgICA9IHJlcXVpcmUoJy4vX3N0cmluZy1yZXBlYXQnKQ0KICAsICR0b0ZpeGVkICAgICA9IDEuLnRvRml4ZWQNCiAgLCBmbG9vciAgICAgICAgPSBNYXRoLmZsb29yDQogICwgZGF0YSAgICAgICAgID0gWzAsIDAsIDAsIDAsIDAsIDBdDQogICwgRVJST1IgICAgICAgID0gJ051bWJlci50b0ZpeGVkOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEnDQogICwgWkVSTyAgICAgICAgID0gJzAnOw0KDQp2YXIgbXVsdGlwbHkgPSBmdW5jdGlvbihuLCBjKXsNCiAgdmFyIGkgID0gLTENCiAgICAsIGMyID0gYzsNCiAgd2hpbGUoKytpIDwgNil7DQogICAgYzIgKz0gbiAqIGRhdGFbaV07DQogICAgZGF0YVtpXSA9IGMyICUgMWU3Ow0KICAgIGMyID0gZmxvb3IoYzIgLyAxZTcpOw0KICB9DQp9Ow0KdmFyIGRpdmlkZSA9IGZ1bmN0aW9uKG4pew0KICB2YXIgaSA9IDYNCiAgICAsIGMgPSAwOw0KICB3aGlsZSgtLWkgPj0gMCl7DQogICAgYyArPSBkYXRhW2ldOw0KICAgIGRhdGFbaV0gPSBmbG9vcihjIC8gbik7DQogICAgYyA9IChjICUgbikgKiAxZTc7DQogIH0NCn07DQp2YXIgbnVtVG9TdHJpbmcgPSBmdW5jdGlvbigpew0KICB2YXIgaSA9IDYNCiAgICAsIHMgPSAnJzsNCiAgd2hpbGUoLS1pID49IDApew0KICAgIGlmKHMgIT09ICcnIHx8IGkgPT09IDAgfHwgZGF0YVtpXSAhPT0gMCl7DQogICAgICB2YXIgdCA9IFN0cmluZyhkYXRhW2ldKTsNCiAgICAgIHMgPSBzID09PSAnJyA/IHQgOiBzICsgcmVwZWF0LmNhbGwoWkVSTywgNyAtIHQubGVuZ3RoKSArIHQ7DQogICAgfQ0KICB9IHJldHVybiBzOw0KfTsNCnZhciBwb3cgPSBmdW5jdGlvbih4LCBuLCBhY2Mpew0KICByZXR1cm4gbiA9PT0gMCA/IGFjYyA6IG4gJSAyID09PSAxID8gcG93KHgsIG4gLSAxLCBhY2MgKiB4KSA6IHBvdyh4ICogeCwgbiAvIDIsIGFjYyk7DQp9Ow0KdmFyIGxvZyA9IGZ1bmN0aW9uKHgpew0KICB2YXIgbiAgPSAwDQogICAgLCB4MiA9IHg7DQogIHdoaWxlKHgyID49IDQwOTYpew0KICAgIG4gKz0gMTI7DQogICAgeDIgLz0gNDA5NjsNCiAgfQ0KICB3aGlsZSh4MiA+PSAyKXsNCiAgICBuICArPSAxOw0KICAgIHgyIC89IDI7DQogIH0gcmV0dXJuIG47DQp9Ow0KDQokZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICghISR0b0ZpeGVkICYmICgNCiAgMC4wMDAwOC50b0ZpeGVkKDMpICE9PSAnMC4wMDAnIHx8DQogIDAuOS50b0ZpeGVkKDApICE9PSAnMScgfHwNCiAgMS4yNTUudG9GaXhlZCgyKSAhPT0gJzEuMjUnIHx8DQogIDEwMDAwMDAwMDAwMDAwMDAxMjguLnRvRml4ZWQoMCkgIT09ICcxMDAwMDAwMDAwMDAwMDAwMTI4Jw0KKSB8fCAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpew0KICAvLyBWOCB+IEFuZHJvaWQgNC4zLQ0KICAkdG9GaXhlZC5jYWxsKHt9KTsNCn0pKSwgJ051bWJlcicsIHsNCiAgdG9GaXhlZDogZnVuY3Rpb24gdG9GaXhlZChmcmFjdGlvbkRpZ2l0cyl7DQogICAgdmFyIHggPSBhTnVtYmVyVmFsdWUodGhpcywgRVJST1IpDQogICAgICAsIGYgPSB0b0ludGVnZXIoZnJhY3Rpb25EaWdpdHMpDQogICAgICAsIHMgPSAnJw0KICAgICAgLCBtID0gWkVSTw0KICAgICAgLCBlLCB6LCBqLCBrOw0KICAgIGlmKGYgPCAwIHx8IGYgPiAyMCl0aHJvdyBSYW5nZUVycm9yKEVSUk9SKTsNCiAgICBpZih4ICE9IHgpcmV0dXJuICdOYU4nOw0KICAgIGlmKHggPD0gLTFlMjEgfHwgeCA+PSAxZTIxKXJldHVybiBTdHJpbmcoeCk7DQogICAgaWYoeCA8IDApew0KICAgICAgcyA9ICctJzsNCiAgICAgIHggPSAteDsNCiAgICB9DQogICAgaWYoeCA+IDFlLTIxKXsNCiAgICAgIGUgPSBsb2coeCAqIHBvdygyLCA2OSwgMSkpIC0gNjk7DQogICAgICB6ID0gZSA8IDAgPyB4ICogcG93KDIsIC1lLCAxKSA6IHggLyBwb3coMiwgZSwgMSk7DQogICAgICB6ICo9IDB4MTAwMDAwMDAwMDAwMDA7DQogICAgICBlID0gNTIgLSBlOw0KICAgICAgaWYoZSA+IDApew0KICAgICAgICBtdWx0aXBseSgwLCB6KTsNCiAgICAgICAgaiA9IGY7DQogICAgICAgIHdoaWxlKGogPj0gNyl7DQogICAgICAgICAgbXVsdGlwbHkoMWU3LCAwKTsNCiAgICAgICAgICBqIC09IDc7DQogICAgICAgIH0NCiAgICAgICAgbXVsdGlwbHkocG93KDEwLCBqLCAxKSwgMCk7DQogICAgICAgIGogPSBlIC0gMTsNCiAgICAgICAgd2hpbGUoaiA+PSAyMyl7DQogICAgICAgICAgZGl2aWRlKDEgPDwgMjMpOw0KICAgICAgICAgIGogLT0gMjM7DQogICAgICAgIH0NCiAgICAgICAgZGl2aWRlKDEgPDwgaik7DQogICAgICAgIG11bHRpcGx5KDEsIDEpOw0KICAgICAgICBkaXZpZGUoMik7DQogICAgICAgIG0gPSBudW1Ub1N0cmluZygpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgbXVsdGlwbHkoMCwgeik7DQogICAgICAgIG11bHRpcGx5KDEgPDwgLWUsIDApOw0KICAgICAgICBtID0gbnVtVG9TdHJpbmcoKSArIHJlcGVhdC5jYWxsKFpFUk8sIGYpOw0KICAgICAgfQ0KICAgIH0NCiAgICBpZihmID4gMCl7DQogICAgICBrID0gbS5sZW5ndGg7DQogICAgICBtID0gcyArIChrIDw9IGYgPyAnMC4nICsgcmVwZWF0LmNhbGwoWkVSTywgZiAtIGspICsgbSA6IG0uc2xpY2UoMCwgayAtIGYpICsgJy4nICsgbS5zbGljZShrIC0gZikpOw0KICAgIH0gZWxzZSB7DQogICAgICBtID0gcyArIG07DQogICAgfSByZXR1cm4gbTsNCiAgfQ0KfSk7DQp9LHsiLi9fYS1udW1iZXItdmFsdWUiOjE5MywiLi9fYW4taW5zdGFuY2UiOjE5NSwiLi9fZXhwb3J0IjoyMjEsIi4vX2ZhaWxzIjoyMjMsIi4vX3N0cmluZy1yZXBlYXQiOjI5MCwiLi9fdG8taW50ZWdlciI6Mjk1fV0sMzY4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciAkZXhwb3J0ICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsICRmYWlscyAgICAgICA9IHJlcXVpcmUoJy4vX2ZhaWxzJykNCiAgLCBhTnVtYmVyVmFsdWUgPSByZXF1aXJlKCcuL19hLW51bWJlci12YWx1ZScpDQogICwgJHRvUHJlY2lzaW9uID0gMS4udG9QcmVjaXNpb247DQoNCiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKCRmYWlscyhmdW5jdGlvbigpew0KICAvLyBJRTctDQogIHJldHVybiAkdG9QcmVjaXNpb24uY2FsbCgxLCB1bmRlZmluZWQpICE9PSAnMSc7DQp9KSB8fCAhJGZhaWxzKGZ1bmN0aW9uKCl7DQogIC8vIFY4IH4gQW5kcm9pZCA0LjMtDQogICR0b1ByZWNpc2lvbi5jYWxsKHt9KTsNCn0pKSwgJ051bWJlcicsIHsNCiAgdG9QcmVjaXNpb246IGZ1bmN0aW9uIHRvUHJlY2lzaW9uKHByZWNpc2lvbil7DQogICAgdmFyIHRoYXQgPSBhTnVtYmVyVmFsdWUodGhpcywgJ051bWJlciN0b1ByZWNpc2lvbjogaW5jb3JyZWN0IGludm9jYXRpb24hJyk7DQogICAgcmV0dXJuIHByZWNpc2lvbiA9PT0gdW5kZWZpbmVkID8gJHRvUHJlY2lzaW9uLmNhbGwodGhhdCkgOiAkdG9QcmVjaXNpb24uY2FsbCh0aGF0LCBwcmVjaXNpb24pOyANCiAgfQ0KfSk7DQp9LHsiLi9fYS1udW1iZXItdmFsdWUiOjE5MywiLi9fZXhwb3J0IjoyMjEsIi4vX2ZhaWxzIjoyMjN9XSwzNjk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE3OV1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX29iamVjdC1hc3NpZ24iOjI1NCwiZHVwIjoxNzl9XSwzNzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE4MF1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX29iamVjdC1jcmVhdGUiOjI1NSwiZHVwIjoxODB9XSwzNzE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCi8vIDE5LjEuMi4zIC8gMTUuMi4zLjcgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcykNCiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyksICdPYmplY3QnLCB7ZGVmaW5lUHJvcGVydGllczogcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpfSk7DQp9LHsiLi9fZGVzY3JpcHRvcnMiOjIxNywiLi9fZXhwb3J0IjoyMjEsIi4vX29iamVjdC1kcHMiOjI1N31dLDM3MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQphcmd1bWVudHNbNF1bMTgxXVswXS5hcHBseShleHBvcnRzLGFyZ3VtZW50cykNCn0seyIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19leHBvcnQiOjIyMSwiLi9fb2JqZWN0LWRwIjoyNTYsImR1cCI6MTgxfV0sMzczOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDE5LjEuMi41IE9iamVjdC5mcmVlemUoTykNCnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpDQogICwgbWV0YSAgICAgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7DQoNCnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZnJlZXplJywgZnVuY3Rpb24oJGZyZWV6ZSl7DQogIHJldHVybiBmdW5jdGlvbiBmcmVlemUoaXQpew0KICAgIHJldHVybiAkZnJlZXplICYmIGlzT2JqZWN0KGl0KSA/ICRmcmVlemUobWV0YShpdCkpIDogaXQ7DQogIH07DQp9KTsNCn0seyIuL19pcy1vYmplY3QiOjIzOCwiLi9fbWV0YSI6MjUxLCIuL19vYmplY3Qtc2FwIjoyNjd9XSwzNzQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMTkuMS4yLjYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKQ0KdmFyIHRvSU9iamVjdCAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JykNCiAgLCAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKS5mOw0KDQpyZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2dldE93blByb3BlcnR5RGVzY3JpcHRvcicsIGZ1bmN0aW9uKCl7DQogIHJldHVybiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSl7DQogICAgcmV0dXJuICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodG9JT2JqZWN0KGl0KSwga2V5KTsNCiAgfTsNCn0pOw0KfSx7Ii4vX29iamVjdC1nb3BkIjoyNTksIi4vX29iamVjdC1zYXAiOjI2NywiLi9fdG8taW9iamVjdCI6Mjk2fV0sMzc1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDE5LjEuMi43IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pDQpyZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2dldE93blByb3BlcnR5TmFtZXMnLCBmdW5jdGlvbigpew0KICByZXR1cm4gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4tZXh0JykuZjsNCn0pOw0KfSx7Ii4vX29iamVjdC1nb3BuLWV4dCI6MjYwLCIuL19vYmplY3Qtc2FwIjoyNjd9XSwzNzY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE4Ml1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fb2JqZWN0LWdwbyI6MjYzLCIuL19vYmplY3Qtc2FwIjoyNjcsIi4vX3RvLW9iamVjdCI6Mjk4LCJkdXAiOjE4Mn1dLDM3NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAxOS4xLjIuMTEgT2JqZWN0LmlzRXh0ZW5zaWJsZShPKQ0KdmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7DQoNCnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnaXNFeHRlbnNpYmxlJywgZnVuY3Rpb24oJGlzRXh0ZW5zaWJsZSl7DQogIHJldHVybiBmdW5jdGlvbiBpc0V4dGVuc2libGUoaXQpew0KICAgIHJldHVybiBpc09iamVjdChpdCkgPyAkaXNFeHRlbnNpYmxlID8gJGlzRXh0ZW5zaWJsZShpdCkgOiB0cnVlIDogZmFsc2U7DQogIH07DQp9KTsNCn0seyIuL19pcy1vYmplY3QiOjIzOCwiLi9fb2JqZWN0LXNhcCI6MjY3fV0sMzc4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDE5LjEuMi4xMiBPYmplY3QuaXNGcm96ZW4oTykNCnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpOw0KDQpyZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzRnJvemVuJywgZnVuY3Rpb24oJGlzRnJvemVuKXsNCiAgcmV0dXJuIGZ1bmN0aW9uIGlzRnJvemVuKGl0KXsNCiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzRnJvemVuID8gJGlzRnJvemVuKGl0KSA6IGZhbHNlIDogdHJ1ZTsNCiAgfTsNCn0pOw0KfSx7Ii4vX2lzLW9iamVjdCI6MjM4LCIuL19vYmplY3Qtc2FwIjoyNjd9XSwzNzk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMTkuMS4yLjEzIE9iamVjdC5pc1NlYWxlZChPKQ0KdmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7DQoNCnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnaXNTZWFsZWQnLCBmdW5jdGlvbigkaXNTZWFsZWQpew0KICByZXR1cm4gZnVuY3Rpb24gaXNTZWFsZWQoaXQpew0KICAgIHJldHVybiBpc09iamVjdChpdCkgPyAkaXNTZWFsZWQgPyAkaXNTZWFsZWQoaXQpIDogZmFsc2UgOiB0cnVlOw0KICB9Ow0KfSk7DQp9LHsiLi9faXMtb2JqZWN0IjoyMzgsIi4vX29iamVjdC1zYXAiOjI2N31dLDM4MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAxOS4xLjMuMTAgT2JqZWN0LmlzKHZhbHVlMSwgdmFsdWUyKQ0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge2lzOiByZXF1aXJlKCcuL19zYW1lLXZhbHVlJyl9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9fc2FtZS12YWx1ZSI6Mjc4fV0sMzgxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxODNdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX29iamVjdC1rZXlzIjoyNjUsIi4vX29iamVjdC1zYXAiOjI2NywiLi9fdG8tb2JqZWN0IjoyOTgsImR1cCI6MTgzfV0sMzgyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDE5LjEuMi4xNSBPYmplY3QucHJldmVudEV4dGVuc2lvbnMoTykNCnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpDQogICwgbWV0YSAgICAgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7DQoNCnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgncHJldmVudEV4dGVuc2lvbnMnLCBmdW5jdGlvbigkcHJldmVudEV4dGVuc2lvbnMpew0KICByZXR1cm4gZnVuY3Rpb24gcHJldmVudEV4dGVuc2lvbnMoaXQpew0KICAgIHJldHVybiAkcHJldmVudEV4dGVuc2lvbnMgJiYgaXNPYmplY3QoaXQpID8gJHByZXZlbnRFeHRlbnNpb25zKG1ldGEoaXQpKSA6IGl0Ow0KICB9Ow0KfSk7DQp9LHsiLi9faXMtb2JqZWN0IjoyMzgsIi4vX21ldGEiOjI1MSwiLi9fb2JqZWN0LXNhcCI6MjY3fV0sMzgzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDE5LjEuMi4xNyBPYmplY3Quc2VhbChPKQ0KdmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JykNCiAgLCBtZXRhICAgICA9IHJlcXVpcmUoJy4vX21ldGEnKS5vbkZyZWV6ZTsNCg0KcmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdzZWFsJywgZnVuY3Rpb24oJHNlYWwpew0KICByZXR1cm4gZnVuY3Rpb24gc2VhbChpdCl7DQogICAgcmV0dXJuICRzZWFsICYmIGlzT2JqZWN0KGl0KSA/ICRzZWFsKG1ldGEoaXQpKSA6IGl0Ow0KICB9Ow0KfSk7DQp9LHsiLi9faXMtb2JqZWN0IjoyMzgsIi4vX21ldGEiOjI1MSwiLi9fb2JqZWN0LXNhcCI6MjY3fV0sMzg0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxODRdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19zZXQtcHJvdG8iOjI3OSwiZHVwIjoxODR9XSwzODU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KLy8gMTkuMS4zLjYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZygpDQp2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKQ0KICAsIHRlc3QgICAgPSB7fTsNCnRlc3RbcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyldID0gJ3onOw0KaWYodGVzdCArICcnICE9ICdbb2JqZWN0IHpdJyl7DQogIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoT2JqZWN0LnByb3RvdHlwZSwgJ3RvU3RyaW5nJywgZnVuY3Rpb24gdG9TdHJpbmcoKXsNCiAgICByZXR1cm4gJ1tvYmplY3QgJyArIGNsYXNzb2YodGhpcykgKyAnXSc7DQogIH0sIHRydWUpOw0KfQ0KfSx7Ii4vX2NsYXNzb2YiOjIwNiwiLi9fcmVkZWZpbmUiOjI3NiwiLi9fd2tzIjozMDZ9XSwzODY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyICRleHBvcnQgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCAkcGFyc2VGbG9hdCA9IHJlcXVpcmUoJy4vX3BhcnNlLWZsb2F0Jyk7DQovLyAxOC4yLjQgcGFyc2VGbG9hdChzdHJpbmcpDQokZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuRiAqIChwYXJzZUZsb2F0ICE9ICRwYXJzZUZsb2F0KSwge3BhcnNlRmxvYXQ6ICRwYXJzZUZsb2F0fSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX3BhcnNlLWZsb2F0IjoyNzB9XSwzODc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyICRleHBvcnQgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgJHBhcnNlSW50ID0gcmVxdWlyZSgnLi9fcGFyc2UtaW50Jyk7DQovLyAxOC4yLjUgcGFyc2VJbnQoc3RyaW5nLCByYWRpeCkNCiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5GICogKHBhcnNlSW50ICE9ICRwYXJzZUludCksIHtwYXJzZUludDogJHBhcnNlSW50fSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX3BhcnNlLWludCI6MjcxfV0sMzg4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxODZdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2EtZnVuY3Rpb24iOjE5MiwiLi9fYW4taW5zdGFuY2UiOjE5NSwiLi9fYW4tb2JqZWN0IjoxOTYsIi4vX2NsYXNzb2YiOjIwNiwiLi9fY29yZSI6MjEyLCIuL19jdHgiOjIxNCwiLi9fZXhwb3J0IjoyMjEsIi4vX2Zvci1vZiI6MjI2LCIuL19nbG9iYWwiOjIyNywiLi9faXMtb2JqZWN0IjoyMzgsIi4vX2l0ZXItZGV0ZWN0IjoyNDMsIi4vX2xpYnJhcnkiOjI0NywiLi9fbWljcm90YXNrIjoyNTMsIi4vX3JlZGVmaW5lLWFsbCI6Mjc1LCIuL19zZXQtcHJvdG8iOjI3OSwiLi9fc2V0LXNwZWNpZXMiOjI4MCwiLi9fc2V0LXRvLXN0cmluZy10YWciOjI4MSwiLi9fc3BlY2llcy1jb25zdHJ1Y3RvciI6Mjg0LCIuL190YXNrIjoyOTMsIi4vX3drcyI6MzA2LCJkdXAiOjE4Nn1dLDM4OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyNi4xLjEgUmVmbGVjdC5hcHBseSh0YXJnZXQsIHRoaXNBcmd1bWVudCwgYXJndW1lbnRzTGlzdCkNCnZhciAkZXhwb3J0ICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKQ0KICAsIGFuT2JqZWN0ICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpDQogICwgX2FwcGx5ICAgID0gRnVuY3Rpb24uYXBwbHk7DQoNCiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHsNCiAgYXBwbHk6IGZ1bmN0aW9uIGFwcGx5KHRhcmdldCwgdGhpc0FyZ3VtZW50LCBhcmd1bWVudHNMaXN0KXsNCiAgICByZXR1cm4gX2FwcGx5LmNhbGwoYUZ1bmN0aW9uKHRhcmdldCksIHRoaXNBcmd1bWVudCwgYW5PYmplY3QoYXJndW1lbnRzTGlzdCkpOw0KICB9DQp9KTsNCn0seyIuL19hLWZ1bmN0aW9uIjoxOTIsIi4vX2FuLW9iamVjdCI6MTk2LCIuL19leHBvcnQiOjIyMX1dLDM5MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyNi4xLjIgUmVmbGVjdC5jb25zdHJ1Y3QodGFyZ2V0LCBhcmd1bWVudHNMaXN0IFssIG5ld1RhcmdldF0pDQp2YXIgJGV4cG9ydCAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBjcmVhdGUgICAgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJykNCiAgLCBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJykNCiAgLCBhbk9iamVjdCAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKQ0KICAsIGlzT2JqZWN0ICA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpDQogICwgYmluZCAgICAgID0gcmVxdWlyZSgnLi9fYmluZCcpOw0KDQovLyBNUyBFZGdlIHN1cHBvcnRzIG9ubHkgMiBhcmd1bWVudHMNCi8vIEZGIE5pZ2h0bHkgc2V0cyB0aGlyZCBhcmd1bWVudCBhcyBgbmV3LnRhcmdldGAsIGJ1dCBkb2VzIG5vdCBjcmVhdGUgYHRoaXNgIGZyb20gaXQNCiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpew0KICBmdW5jdGlvbiBGKCl7fQ0KICByZXR1cm4gIShSZWZsZWN0LmNvbnN0cnVjdChmdW5jdGlvbigpe30sIFtdLCBGKSBpbnN0YW5jZW9mIEYpOw0KfSksICdSZWZsZWN0Jywgew0KICBjb25zdHJ1Y3Q6IGZ1bmN0aW9uIGNvbnN0cnVjdChUYXJnZXQsIGFyZ3MgLyosIG5ld1RhcmdldCovKXsNCiAgICBhRnVuY3Rpb24oVGFyZ2V0KTsNCiAgICBhbk9iamVjdChhcmdzKTsNCiAgICB2YXIgbmV3VGFyZ2V0ID0gYXJndW1lbnRzLmxlbmd0aCA8IDMgPyBUYXJnZXQgOiBhRnVuY3Rpb24oYXJndW1lbnRzWzJdKTsNCiAgICBpZihUYXJnZXQgPT0gbmV3VGFyZ2V0KXsNCiAgICAgIC8vIHcvbyBhbHRlcmVkIG5ld1RhcmdldCwgb3B0aW1pemF0aW9uIGZvciAwLTQgYXJndW1lbnRzDQogICAgICBzd2l0Y2goYXJncy5sZW5ndGgpew0KICAgICAgICBjYXNlIDA6IHJldHVybiBuZXcgVGFyZ2V0Ow0KICAgICAgICBjYXNlIDE6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0pOw0KICAgICAgICBjYXNlIDI6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0pOw0KICAgICAgICBjYXNlIDM6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pOw0KICAgICAgICBjYXNlIDQ6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pOw0KICAgICAgfQ0KICAgICAgLy8gdy9vIGFsdGVyZWQgbmV3VGFyZ2V0LCBsb3Qgb2YgYXJndW1lbnRzIGNhc2UNCiAgICAgIHZhciAkYXJncyA9IFtudWxsXTsNCiAgICAgICRhcmdzLnB1c2guYXBwbHkoJGFyZ3MsIGFyZ3MpOw0KICAgICAgcmV0dXJuIG5ldyAoYmluZC5hcHBseShUYXJnZXQsICRhcmdzKSk7DQogICAgfQ0KICAgIC8vIHdpdGggYWx0ZXJlZCBuZXdUYXJnZXQsIG5vdCBzdXBwb3J0IGJ1aWx0LWluIGNvbnN0cnVjdG9ycw0KICAgIHZhciBwcm90byAgICA9IG5ld1RhcmdldC5wcm90b3R5cGUNCiAgICAgICwgaW5zdGFuY2UgPSBjcmVhdGUoaXNPYmplY3QocHJvdG8pID8gcHJvdG8gOiBPYmplY3QucHJvdG90eXBlKQ0KICAgICAgLCByZXN1bHQgICA9IEZ1bmN0aW9uLmFwcGx5LmNhbGwoVGFyZ2V0LCBpbnN0YW5jZSwgYXJncyk7DQogICAgcmV0dXJuIGlzT2JqZWN0KHJlc3VsdCkgPyByZXN1bHQgOiBpbnN0YW5jZTsNCiAgfQ0KfSk7DQp9LHsiLi9fYS1mdW5jdGlvbiI6MTkyLCIuL19hbi1vYmplY3QiOjE5NiwiLi9fYmluZCI6MjA1LCIuL19leHBvcnQiOjIyMSwiLi9fZmFpbHMiOjIyMywiLi9faXMtb2JqZWN0IjoyMzgsIi4vX29iamVjdC1jcmVhdGUiOjI1NX1dLDM5MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyNi4xLjMgUmVmbGVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5LCBhdHRyaWJ1dGVzKQ0KdmFyIGRQICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykNCiAgLCAkZXhwb3J0ICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgYW5PYmplY3QgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKQ0KICAsIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7DQoNCi8vIE1TIEVkZ2UgaGFzIGJyb2tlbiBSZWZsZWN0LmRlZmluZVByb3BlcnR5IC0gdGhyb3dpbmcgaW5zdGVhZCBvZiByZXR1cm5pbmcgZmFsc2UNCiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpew0KICBSZWZsZWN0LmRlZmluZVByb3BlcnR5KGRQLmYoe30sIDEsIHt2YWx1ZTogMX0pLCAxLCB7dmFsdWU6IDJ9KTsNCn0pLCAnUmVmbGVjdCcsIHsNCiAgZGVmaW5lUHJvcGVydHk6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHlLZXksIGF0dHJpYnV0ZXMpew0KICAgIGFuT2JqZWN0KHRhcmdldCk7DQogICAgcHJvcGVydHlLZXkgPSB0b1ByaW1pdGl2ZShwcm9wZXJ0eUtleSwgdHJ1ZSk7DQogICAgYW5PYmplY3QoYXR0cmlidXRlcyk7DQogICAgdHJ5IHsNCiAgICAgIGRQLmYodGFyZ2V0LCBwcm9wZXJ0eUtleSwgYXR0cmlidXRlcyk7DQogICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9IGNhdGNoKGUpew0KICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCiAgfQ0KfSk7DQp9LHsiLi9fYW4tb2JqZWN0IjoxOTYsIi4vX2V4cG9ydCI6MjIxLCIuL19mYWlscyI6MjIzLCIuL19vYmplY3QtZHAiOjI1NiwiLi9fdG8tcHJpbWl0aXZlIjoyOTl9XSwzOTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjYuMS40IFJlZmxlY3QuZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSkNCnZhciAkZXhwb3J0ICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgZ09QRCAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmYNCiAgLCBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7DQogIGRlbGV0ZVByb3BlcnR5OiBmdW5jdGlvbiBkZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5KXsNCiAgICB2YXIgZGVzYyA9IGdPUEQoYW5PYmplY3QodGFyZ2V0KSwgcHJvcGVydHlLZXkpOw0KICAgIHJldHVybiBkZXNjICYmICFkZXNjLmNvbmZpZ3VyYWJsZSA/IGZhbHNlIDogZGVsZXRlIHRhcmdldFtwcm9wZXJ0eUtleV07DQogIH0NCn0pOw0KfSx7Ii4vX2FuLW9iamVjdCI6MTk2LCIuL19leHBvcnQiOjIyMSwiLi9fb2JqZWN0LWdvcGQiOjI1OX1dLDM5MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQovLyAyNi4xLjUgUmVmbGVjdC5lbnVtZXJhdGUodGFyZ2V0KQ0KdmFyICRleHBvcnQgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpOw0KdmFyIEVudW1lcmF0ZSA9IGZ1bmN0aW9uKGl0ZXJhdGVkKXsNCiAgdGhpcy5fdCA9IGFuT2JqZWN0KGl0ZXJhdGVkKTsgLy8gdGFyZ2V0DQogIHRoaXMuX2kgPSAwOyAgICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXgNCiAgdmFyIGtleXMgPSB0aGlzLl9rID0gW10gICAgICAgLy8ga2V5cw0KICAgICwga2V5Ow0KICBmb3Ioa2V5IGluIGl0ZXJhdGVkKWtleXMucHVzaChrZXkpOw0KfTsNCnJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJykoRW51bWVyYXRlLCAnT2JqZWN0JywgZnVuY3Rpb24oKXsNCiAgdmFyIHRoYXQgPSB0aGlzDQogICAgLCBrZXlzID0gdGhhdC5faw0KICAgICwga2V5Ow0KICBkbyB7DQogICAgaWYodGhhdC5faSA+PSBrZXlzLmxlbmd0aClyZXR1cm4ge3ZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWV9Ow0KICB9IHdoaWxlKCEoKGtleSA9IGtleXNbdGhhdC5faSsrXSkgaW4gdGhhdC5fdCkpOw0KICByZXR1cm4ge3ZhbHVlOiBrZXksIGRvbmU6IGZhbHNlfTsNCn0pOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7DQogIGVudW1lcmF0ZTogZnVuY3Rpb24gZW51bWVyYXRlKHRhcmdldCl7DQogICAgcmV0dXJuIG5ldyBFbnVtZXJhdGUodGFyZ2V0KTsNCiAgfQ0KfSk7DQp9LHsiLi9fYW4tb2JqZWN0IjoxOTYsIi4vX2V4cG9ydCI6MjIxLCIuL19pdGVyLWNyZWF0ZSI6MjQxfV0sMzk0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDI2LjEuNyBSZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5S2V5KQ0KdmFyIGdPUEQgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKQ0KICAsICRleHBvcnQgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7DQogIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwgcHJvcGVydHlLZXkpew0KICAgIHJldHVybiBnT1BELmYoYW5PYmplY3QodGFyZ2V0KSwgcHJvcGVydHlLZXkpOw0KICB9DQp9KTsNCn0seyIuL19hbi1vYmplY3QiOjE5NiwiLi9fZXhwb3J0IjoyMjEsIi4vX29iamVjdC1nb3BkIjoyNTl9XSwzOTU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjYuMS44IFJlZmxlY3QuZ2V0UHJvdG90eXBlT2YodGFyZ2V0KQ0KdmFyICRleHBvcnQgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBnZXRQcm90byA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKQ0KICAsIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7DQoNCiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHsNCiAgZ2V0UHJvdG90eXBlT2Y6IGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKHRhcmdldCl7DQogICAgcmV0dXJuIGdldFByb3RvKGFuT2JqZWN0KHRhcmdldCkpOw0KICB9DQp9KTsNCn0seyIuL19hbi1vYmplY3QiOjE5NiwiLi9fZXhwb3J0IjoyMjEsIi4vX29iamVjdC1ncG8iOjI2M31dLDM5NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyNi4xLjYgUmVmbGVjdC5nZXQodGFyZ2V0LCBwcm9wZXJ0eUtleSBbLCByZWNlaXZlcl0pDQp2YXIgZ09QRCAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpDQogICwgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJykNCiAgLCBoYXMgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpDQogICwgJGV4cG9ydCAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIGlzT2JqZWN0ICAgICAgID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JykNCiAgLCBhbk9iamVjdCAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpOw0KDQpmdW5jdGlvbiBnZXQodGFyZ2V0LCBwcm9wZXJ0eUtleS8qLCByZWNlaXZlciovKXsNCiAgdmFyIHJlY2VpdmVyID0gYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB0YXJnZXQgOiBhcmd1bWVudHNbMl0NCiAgICAsIGRlc2MsIHByb3RvOw0KICBpZihhbk9iamVjdCh0YXJnZXQpID09PSByZWNlaXZlcilyZXR1cm4gdGFyZ2V0W3Byb3BlcnR5S2V5XTsNCiAgaWYoZGVzYyA9IGdPUEQuZih0YXJnZXQsIHByb3BlcnR5S2V5KSlyZXR1cm4gaGFzKGRlc2MsICd2YWx1ZScpDQogICAgPyBkZXNjLnZhbHVlDQogICAgOiBkZXNjLmdldCAhPT0gdW5kZWZpbmVkDQogICAgICA/IGRlc2MuZ2V0LmNhbGwocmVjZWl2ZXIpDQogICAgICA6IHVuZGVmaW5lZDsNCiAgaWYoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSlyZXR1cm4gZ2V0KHByb3RvLCBwcm9wZXJ0eUtleSwgcmVjZWl2ZXIpOw0KfQ0KDQokZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7Z2V0OiBnZXR9KTsNCn0seyIuL19hbi1vYmplY3QiOjE5NiwiLi9fZXhwb3J0IjoyMjEsIi4vX2hhcyI6MjI4LCIuL19pcy1vYmplY3QiOjIzOCwiLi9fb2JqZWN0LWdvcGQiOjI1OSwiLi9fb2JqZWN0LWdwbyI6MjYzfV0sMzk3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDI2LjEuOSBSZWZsZWN0Lmhhcyh0YXJnZXQsIHByb3BlcnR5S2V5KQ0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywgew0KICBoYXM6IGZ1bmN0aW9uIGhhcyh0YXJnZXQsIHByb3BlcnR5S2V5KXsNCiAgICByZXR1cm4gcHJvcGVydHlLZXkgaW4gdGFyZ2V0Ow0KICB9DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMX1dLDM5ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyNi4xLjEwIFJlZmxlY3QuaXNFeHRlbnNpYmxlKHRhcmdldCkNCnZhciAkZXhwb3J0ICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBhbk9iamVjdCAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JykNCiAgLCAkaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywgew0KICBpc0V4dGVuc2libGU6IGZ1bmN0aW9uIGlzRXh0ZW5zaWJsZSh0YXJnZXQpew0KICAgIGFuT2JqZWN0KHRhcmdldCk7DQogICAgcmV0dXJuICRpc0V4dGVuc2libGUgPyAkaXNFeHRlbnNpYmxlKHRhcmdldCkgOiB0cnVlOw0KICB9DQp9KTsNCn0seyIuL19hbi1vYmplY3QiOjE5NiwiLi9fZXhwb3J0IjoyMjF9XSwzOTk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjYuMS4xMSBSZWZsZWN0Lm93bktleXModGFyZ2V0KQ0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge293bktleXM6IHJlcXVpcmUoJy4vX293bi1rZXlzJyl9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9fb3duLWtleXMiOjI2OX1dLDQwMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyNi4xLjEyIFJlZmxlY3QucHJldmVudEV4dGVuc2lvbnModGFyZ2V0KQ0KdmFyICRleHBvcnQgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgYW5PYmplY3QgICAgICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JykNCiAgLCAkcHJldmVudEV4dGVuc2lvbnMgPSBPYmplY3QucHJldmVudEV4dGVuc2lvbnM7DQoNCiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHsNCiAgcHJldmVudEV4dGVuc2lvbnM6IGZ1bmN0aW9uIHByZXZlbnRFeHRlbnNpb25zKHRhcmdldCl7DQogICAgYW5PYmplY3QodGFyZ2V0KTsNCiAgICB0cnkgew0KICAgICAgaWYoJHByZXZlbnRFeHRlbnNpb25zKSRwcmV2ZW50RXh0ZW5zaW9ucyh0YXJnZXQpOw0KICAgICAgcmV0dXJuIHRydWU7DQogICAgfSBjYXRjaChlKXsNCiAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9DQogIH0NCn0pOw0KfSx7Ii4vX2FuLW9iamVjdCI6MTk2LCIuL19leHBvcnQiOjIyMX1dLDQwMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyAyNi4xLjE0IFJlZmxlY3Quc2V0UHJvdG90eXBlT2YodGFyZ2V0LCBwcm90bykNCnZhciAkZXhwb3J0ICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgc2V0UHJvdG8gPSByZXF1aXJlKCcuL19zZXQtcHJvdG8nKTsNCg0KaWYoc2V0UHJvdG8pJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywgew0KICBzZXRQcm90b3R5cGVPZjogZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YodGFyZ2V0LCBwcm90byl7DQogICAgc2V0UHJvdG8uY2hlY2sodGFyZ2V0LCBwcm90byk7DQogICAgdHJ5IHsNCiAgICAgIHNldFByb3RvLnNldCh0YXJnZXQsIHByb3RvKTsNCiAgICAgIHJldHVybiB0cnVlOw0KICAgIH0gY2F0Y2goZSl7DQogICAgICByZXR1cm4gZmFsc2U7DQogICAgfQ0KICB9DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9fc2V0LXByb3RvIjoyNzl9XSw0MDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjYuMS4xMyBSZWZsZWN0LnNldCh0YXJnZXQsIHByb3BlcnR5S2V5LCBWIFssIHJlY2VpdmVyXSkNCnZhciBkUCAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpDQogICwgZ09QRCAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpDQogICwgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJykNCiAgLCBoYXMgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpDQogICwgJGV4cG9ydCAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIGNyZWF0ZURlc2MgICAgID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpDQogICwgYW5PYmplY3QgICAgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKQ0KICAsIGlzT2JqZWN0ICAgICAgID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7DQoNCmZ1bmN0aW9uIHNldCh0YXJnZXQsIHByb3BlcnR5S2V5LCBWLyosIHJlY2VpdmVyKi8pew0KICB2YXIgcmVjZWl2ZXIgPSBhcmd1bWVudHMubGVuZ3RoIDwgNCA/IHRhcmdldCA6IGFyZ3VtZW50c1szXQ0KICAgICwgb3duRGVzYyAgPSBnT1BELmYoYW5PYmplY3QodGFyZ2V0KSwgcHJvcGVydHlLZXkpDQogICAgLCBleGlzdGluZ0Rlc2NyaXB0b3IsIHByb3RvOw0KICBpZighb3duRGVzYyl7DQogICAgaWYoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSl7DQogICAgICByZXR1cm4gc2V0KHByb3RvLCBwcm9wZXJ0eUtleSwgViwgcmVjZWl2ZXIpOw0KICAgIH0NCiAgICBvd25EZXNjID0gY3JlYXRlRGVzYygwKTsNCiAgfQ0KICBpZihoYXMob3duRGVzYywgJ3ZhbHVlJykpew0KICAgIGlmKG93bkRlc2Mud3JpdGFibGUgPT09IGZhbHNlIHx8ICFpc09iamVjdChyZWNlaXZlcikpcmV0dXJuIGZhbHNlOw0KICAgIGV4aXN0aW5nRGVzY3JpcHRvciA9IGdPUEQuZihyZWNlaXZlciwgcHJvcGVydHlLZXkpIHx8IGNyZWF0ZURlc2MoMCk7DQogICAgZXhpc3RpbmdEZXNjcmlwdG9yLnZhbHVlID0gVjsNCiAgICBkUC5mKHJlY2VpdmVyLCBwcm9wZXJ0eUtleSwgZXhpc3RpbmdEZXNjcmlwdG9yKTsNCiAgICByZXR1cm4gdHJ1ZTsNCiAgfQ0KICByZXR1cm4gb3duRGVzYy5zZXQgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogKG93bkRlc2Muc2V0LmNhbGwocmVjZWl2ZXIsIFYpLCB0cnVlKTsNCn0NCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge3NldDogc2V0fSk7DQp9LHsiLi9fYW4tb2JqZWN0IjoxOTYsIi4vX2V4cG9ydCI6MjIxLCIuL19oYXMiOjIyOCwiLi9faXMtb2JqZWN0IjoyMzgsIi4vX29iamVjdC1kcCI6MjU2LCIuL19vYmplY3QtZ29wZCI6MjU5LCIuL19vYmplY3QtZ3BvIjoyNjMsIi4vX3Byb3BlcnR5LWRlc2MiOjI3NH1dLDQwMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgZ2xvYmFsICAgICAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKQ0KICAsIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpDQogICwgZFAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mDQogICwgZ09QTiAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmYNCiAgLCBpc1JlZ0V4cCAgICAgICAgICA9IHJlcXVpcmUoJy4vX2lzLXJlZ2V4cCcpDQogICwgJGZsYWdzICAgICAgICAgICAgPSByZXF1aXJlKCcuL19mbGFncycpDQogICwgJFJlZ0V4cCAgICAgICAgICAgPSBnbG9iYWwuUmVnRXhwDQogICwgQmFzZSAgICAgICAgICAgICAgPSAkUmVnRXhwDQogICwgcHJvdG8gICAgICAgICAgICAgPSAkUmVnRXhwLnByb3RvdHlwZQ0KICAsIHJlMSAgICAgICAgICAgICAgID0gL2EvZw0KICAsIHJlMiAgICAgICAgICAgICAgID0gL2EvZw0KICAvLyAibmV3IiBjcmVhdGVzIGEgbmV3IG9iamVjdCwgb2xkIHdlYmtpdCBidWdneSBoZXJlDQogICwgQ09SUkVDVF9ORVcgICAgICAgPSBuZXcgJFJlZ0V4cChyZTEpICE9PSByZTE7DQoNCmlmKHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgKCFDT1JSRUNUX05FVyB8fCByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7DQogIHJlMltyZXF1aXJlKCcuL193a3MnKSgnbWF0Y2gnKV0gPSBmYWxzZTsNCiAgLy8gUmVnRXhwIGNvbnN0cnVjdG9yIGNhbiBhbHRlciBmbGFncyBhbmQgSXNSZWdFeHAgd29ya3MgY29ycmVjdCB3aXRoIEBAbWF0Y2gNCiAgcmV0dXJuICRSZWdFeHAocmUxKSAhPSByZTEgfHwgJFJlZ0V4cChyZTIpID09IHJlMiB8fCAkUmVnRXhwKHJlMSwgJ2knKSAhPSAnL2EvaSc7DQp9KSkpew0KICAkUmVnRXhwID0gZnVuY3Rpb24gUmVnRXhwKHAsIGYpew0KICAgIHZhciB0aVJFID0gdGhpcyBpbnN0YW5jZW9mICRSZWdFeHANCiAgICAgICwgcGlSRSA9IGlzUmVnRXhwKHApDQogICAgICAsIGZpVSAgPSBmID09PSB1bmRlZmluZWQ7DQogICAgcmV0dXJuICF0aVJFICYmIHBpUkUgJiYgcC5jb25zdHJ1Y3RvciA9PT0gJFJlZ0V4cCAmJiBmaVUgPyBwDQogICAgICA6IGluaGVyaXRJZlJlcXVpcmVkKENPUlJFQ1RfTkVXDQogICAgICAgID8gbmV3IEJhc2UocGlSRSAmJiAhZmlVID8gcC5zb3VyY2UgOiBwLCBmKQ0KICAgICAgICA6IEJhc2UoKHBpUkUgPSBwIGluc3RhbmNlb2YgJFJlZ0V4cCkgPyBwLnNvdXJjZSA6IHAsIHBpUkUgJiYgZmlVID8gJGZsYWdzLmNhbGwocCkgOiBmKQ0KICAgICAgLCB0aVJFID8gdGhpcyA6IHByb3RvLCAkUmVnRXhwKTsNCiAgfTsNCiAgdmFyIHByb3h5ID0gZnVuY3Rpb24oa2V5KXsNCiAgICBrZXkgaW4gJFJlZ0V4cCB8fCBkUCgkUmVnRXhwLCBrZXksIHsNCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwNCiAgICAgIGdldDogZnVuY3Rpb24oKXsgcmV0dXJuIEJhc2Vba2V5XTsgfSwNCiAgICAgIHNldDogZnVuY3Rpb24oaXQpeyBCYXNlW2tleV0gPSBpdDsgfQ0KICAgIH0pOw0KICB9Ow0KICBmb3IodmFyIGtleXMgPSBnT1BOKEJhc2UpLCBpID0gMDsga2V5cy5sZW5ndGggPiBpOyApcHJveHkoa2V5c1tpKytdKTsNCiAgcHJvdG8uY29uc3RydWN0b3IgPSAkUmVnRXhwOw0KICAkUmVnRXhwLnByb3RvdHlwZSA9IHByb3RvOw0KICByZXF1aXJlKCcuL19yZWRlZmluZScpKGdsb2JhbCwgJ1JlZ0V4cCcsICRSZWdFeHApOw0KfQ0KDQpyZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKCdSZWdFeHAnKTsNCn0seyIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19mYWlscyI6MjIzLCIuL19mbGFncyI6MjI1LCIuL19nbG9iYWwiOjIyNywiLi9faW5oZXJpdC1pZi1yZXF1aXJlZCI6MjMyLCIuL19pcy1yZWdleHAiOjIzOSwiLi9fb2JqZWN0LWRwIjoyNTYsIi4vX29iamVjdC1nb3BuIjoyNjEsIi4vX3JlZGVmaW5lIjoyNzYsIi4vX3NldC1zcGVjaWVzIjoyODAsIi4vX3drcyI6MzA2fV0sNDA0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIxLjIuNS4zIGdldCBSZWdFeHAucHJvdG90eXBlLmZsYWdzKCkNCmlmKHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgLy4vZy5mbGFncyAhPSAnZycpcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZihSZWdFeHAucHJvdG90eXBlLCAnZmxhZ3MnLCB7DQogIGNvbmZpZ3VyYWJsZTogdHJ1ZSwNCiAgZ2V0OiByZXF1aXJlKCcuL19mbGFncycpDQp9KTsNCn0seyIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19mbGFncyI6MjI1LCIuL19vYmplY3QtZHAiOjI1Nn1dLDQwNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBAQG1hdGNoIGxvZ2ljDQpyZXF1aXJlKCcuL19maXgtcmUtd2tzJykoJ21hdGNoJywgMSwgZnVuY3Rpb24oZGVmaW5lZCwgTUFUQ0gsICRtYXRjaCl7DQogIC8vIDIxLjEuMy4xMSBTdHJpbmcucHJvdG90eXBlLm1hdGNoKHJlZ2V4cCkNCiAgcmV0dXJuIFtmdW5jdGlvbiBtYXRjaChyZWdleHApew0KICAgICd1c2Ugc3RyaWN0JzsNCiAgICB2YXIgTyAgPSBkZWZpbmVkKHRoaXMpDQogICAgICAsIGZuID0gcmVnZXhwID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHJlZ2V4cFtNQVRDSF07DQogICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbTUFUQ0hdKFN0cmluZyhPKSk7DQogIH0sICRtYXRjaF07DQp9KTsNCn0seyIuL19maXgtcmUtd2tzIjoyMjR9XSw0MDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gQEByZXBsYWNlIGxvZ2ljDQpyZXF1aXJlKCcuL19maXgtcmUtd2tzJykoJ3JlcGxhY2UnLCAyLCBmdW5jdGlvbihkZWZpbmVkLCBSRVBMQUNFLCAkcmVwbGFjZSl7DQogIC8vIDIxLjEuMy4xNCBTdHJpbmcucHJvdG90eXBlLnJlcGxhY2Uoc2VhcmNoVmFsdWUsIHJlcGxhY2VWYWx1ZSkNCiAgcmV0dXJuIFtmdW5jdGlvbiByZXBsYWNlKHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpew0KICAgICd1c2Ugc3RyaWN0JzsNCiAgICB2YXIgTyAgPSBkZWZpbmVkKHRoaXMpDQogICAgICAsIGZuID0gc2VhcmNoVmFsdWUgPT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogc2VhcmNoVmFsdWVbUkVQTEFDRV07DQogICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQNCiAgICAgID8gZm4uY2FsbChzZWFyY2hWYWx1ZSwgTywgcmVwbGFjZVZhbHVlKQ0KICAgICAgOiAkcmVwbGFjZS5jYWxsKFN0cmluZyhPKSwgc2VhcmNoVmFsdWUsIHJlcGxhY2VWYWx1ZSk7DQogIH0sICRyZXBsYWNlXTsNCn0pOw0KfSx7Ii4vX2ZpeC1yZS13a3MiOjIyNH1dLDQwNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBAQHNlYXJjaCBsb2dpYw0KcmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdzZWFyY2gnLCAxLCBmdW5jdGlvbihkZWZpbmVkLCBTRUFSQ0gsICRzZWFyY2gpew0KICAvLyAyMS4xLjMuMTUgU3RyaW5nLnByb3RvdHlwZS5zZWFyY2gocmVnZXhwKQ0KICByZXR1cm4gW2Z1bmN0aW9uIHNlYXJjaChyZWdleHApew0KICAgICd1c2Ugc3RyaWN0JzsNCiAgICB2YXIgTyAgPSBkZWZpbmVkKHRoaXMpDQogICAgICAsIGZuID0gcmVnZXhwID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHJlZ2V4cFtTRUFSQ0hdOw0KICAgIHJldHVybiBmbiAhPT0gdW5kZWZpbmVkID8gZm4uY2FsbChyZWdleHAsIE8pIDogbmV3IFJlZ0V4cChyZWdleHApW1NFQVJDSF0oU3RyaW5nKE8pKTsNCiAgfSwgJHNlYXJjaF07DQp9KTsNCn0seyIuL19maXgtcmUtd2tzIjoyMjR9XSw0MDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gQEBzcGxpdCBsb2dpYw0KcmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdzcGxpdCcsIDIsIGZ1bmN0aW9uKGRlZmluZWQsIFNQTElULCAkc3BsaXQpew0KICAndXNlIHN0cmljdCc7DQogIHZhciBpc1JlZ0V4cCAgID0gcmVxdWlyZSgnLi9faXMtcmVnZXhwJykNCiAgICAsIF9zcGxpdCAgICAgPSAkc3BsaXQNCiAgICAsICRwdXNoICAgICAgPSBbXS5wdXNoDQogICAgLCAkU1BMSVQgICAgID0gJ3NwbGl0Jw0KICAgICwgTEVOR1RIICAgICA9ICdsZW5ndGgnDQogICAgLCBMQVNUX0lOREVYID0gJ2xhc3RJbmRleCc7DQogIGlmKA0KICAgICdhYmJjJ1skU1BMSVRdKC8oYikqLylbMV0gPT0gJ2MnIHx8DQogICAgJ3Rlc3QnWyRTUExJVF0oLyg/OikvLCAtMSlbTEVOR1RIXSAhPSA0IHx8DQogICAgJ2FiJ1skU1BMSVRdKC8oPzphYikqLylbTEVOR1RIXSAhPSAyIHx8DQogICAgJy4nWyRTUExJVF0oLyguPykoLj8pLylbTEVOR1RIXSAhPSA0IHx8DQogICAgJy4nWyRTUExJVF0oLygpKCkvKVtMRU5HVEhdID4gMSB8fA0KICAgICcnWyRTUExJVF0oLy4/LylbTEVOR1RIXQ0KICApew0KICAgIHZhciBOUENHID0gLygpPz8vLmV4ZWMoJycpWzFdID09PSB1bmRlZmluZWQ7IC8vIG5vbnBhcnRpY2lwYXRpbmcgY2FwdHVyaW5nIGdyb3VwDQogICAgLy8gYmFzZWQgb24gZXM1LXNoaW0gaW1wbGVtZW50YXRpb24sIG5lZWQgdG8gcmV3b3JrIGl0DQogICAgJHNwbGl0ID0gZnVuY3Rpb24oc2VwYXJhdG9yLCBsaW1pdCl7DQogICAgICB2YXIgc3RyaW5nID0gU3RyaW5nKHRoaXMpOw0KICAgICAgaWYoc2VwYXJhdG9yID09PSB1bmRlZmluZWQgJiYgbGltaXQgPT09IDApcmV0dXJuIFtdOw0KICAgICAgLy8gSWYgYHNlcGFyYXRvcmAgaXMgbm90IGEgcmVnZXgsIHVzZSBuYXRpdmUgc3BsaXQNCiAgICAgIGlmKCFpc1JlZ0V4cChzZXBhcmF0b3IpKXJldHVybiBfc3BsaXQuY2FsbChzdHJpbmcsIHNlcGFyYXRvciwgbGltaXQpOw0KICAgICAgdmFyIG91dHB1dCA9IFtdOw0KICAgICAgdmFyIGZsYWdzID0gKHNlcGFyYXRvci5pZ25vcmVDYXNlID8gJ2knIDogJycpICsNCiAgICAgICAgICAgICAgICAgIChzZXBhcmF0b3IubXVsdGlsaW5lID8gJ20nIDogJycpICsNCiAgICAgICAgICAgICAgICAgIChzZXBhcmF0b3IudW5pY29kZSA/ICd1JyA6ICcnKSArDQogICAgICAgICAgICAgICAgICAoc2VwYXJhdG9yLnN0aWNreSA/ICd5JyA6ICcnKTsNCiAgICAgIHZhciBsYXN0TGFzdEluZGV4ID0gMDsNCiAgICAgIHZhciBzcGxpdExpbWl0ID0gbGltaXQgPT09IHVuZGVmaW5lZCA/IDQyOTQ5NjcyOTUgOiBsaW1pdCA+Pj4gMDsNCiAgICAgIC8vIE1ha2UgYGdsb2JhbGAgYW5kIGF2b2lkIGBsYXN0SW5kZXhgIGlzc3VlcyBieSB3b3JraW5nIHdpdGggYSBjb3B5DQogICAgICB2YXIgc2VwYXJhdG9yQ29weSA9IG5ldyBSZWdFeHAoc2VwYXJhdG9yLnNvdXJjZSwgZmxhZ3MgKyAnZycpOw0KICAgICAgdmFyIHNlcGFyYXRvcjIsIG1hdGNoLCBsYXN0SW5kZXgsIGxhc3RMZW5ndGgsIGk7DQogICAgICAvLyBEb2Vzbid0IG5lZWQgZmxhZ3MgZ3ksIGJ1dCB0aGV5IGRvbid0IGh1cnQNCiAgICAgIGlmKCFOUENHKXNlcGFyYXRvcjIgPSBuZXcgUmVnRXhwKCdeJyArIHNlcGFyYXRvckNvcHkuc291cmNlICsgJyQoPyFcXHMpJywgZmxhZ3MpOw0KICAgICAgd2hpbGUobWF0Y2ggPSBzZXBhcmF0b3JDb3B5LmV4ZWMoc3RyaW5nKSl7DQogICAgICAgIC8vIGBzZXBhcmF0b3JDb3B5Lmxhc3RJbmRleGAgaXMgbm90IHJlbGlhYmxlIGNyb3NzLWJyb3dzZXINCiAgICAgICAgbGFzdEluZGV4ID0gbWF0Y2guaW5kZXggKyBtYXRjaFswXVtMRU5HVEhdOw0KICAgICAgICBpZihsYXN0SW5kZXggPiBsYXN0TGFzdEluZGV4KXsNCiAgICAgICAgICBvdXRwdXQucHVzaChzdHJpbmcuc2xpY2UobGFzdExhc3RJbmRleCwgbWF0Y2guaW5kZXgpKTsNCiAgICAgICAgICAvLyBGaXggYnJvd3NlcnMgd2hvc2UgYGV4ZWNgIG1ldGhvZHMgZG9uJ3QgY29uc2lzdGVudGx5IHJldHVybiBgdW5kZWZpbmVkYCBmb3IgTlBDRw0KICAgICAgICAgIGlmKCFOUENHICYmIG1hdGNoW0xFTkdUSF0gPiAxKW1hdGNoWzBdLnJlcGxhY2Uoc2VwYXJhdG9yMiwgZnVuY3Rpb24oKXsNCiAgICAgICAgICAgIGZvcihpID0gMTsgaSA8IGFyZ3VtZW50c1tMRU5HVEhdIC0gMjsgaSsrKWlmKGFyZ3VtZW50c1tpXSA9PT0gdW5kZWZpbmVkKW1hdGNoW2ldID0gdW5kZWZpbmVkOw0KICAgICAgICAgIH0pOw0KICAgICAgICAgIGlmKG1hdGNoW0xFTkdUSF0gPiAxICYmIG1hdGNoLmluZGV4IDwgc3RyaW5nW0xFTkdUSF0pJHB1c2guYXBwbHkob3V0cHV0LCBtYXRjaC5zbGljZSgxKSk7DQogICAgICAgICAgbGFzdExlbmd0aCA9IG1hdGNoWzBdW0xFTkdUSF07DQogICAgICAgICAgbGFzdExhc3RJbmRleCA9IGxhc3RJbmRleDsNCiAgICAgICAgICBpZihvdXRwdXRbTEVOR1RIXSA+PSBzcGxpdExpbWl0KWJyZWFrOw0KICAgICAgICB9DQogICAgICAgIGlmKHNlcGFyYXRvckNvcHlbTEFTVF9JTkRFWF0gPT09IG1hdGNoLmluZGV4KXNlcGFyYXRvckNvcHlbTEFTVF9JTkRFWF0rKzsgLy8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcA0KICAgICAgfQ0KICAgICAgaWYobGFzdExhc3RJbmRleCA9PT0gc3RyaW5nW0xFTkdUSF0pew0KICAgICAgICBpZihsYXN0TGVuZ3RoIHx8ICFzZXBhcmF0b3JDb3B5LnRlc3QoJycpKW91dHB1dC5wdXNoKCcnKTsNCiAgICAgIH0gZWxzZSBvdXRwdXQucHVzaChzdHJpbmcuc2xpY2UobGFzdExhc3RJbmRleCkpOw0KICAgICAgcmV0dXJuIG91dHB1dFtMRU5HVEhdID4gc3BsaXRMaW1pdCA/IG91dHB1dC5zbGljZSgwLCBzcGxpdExpbWl0KSA6IG91dHB1dDsNCiAgICB9Ow0KICAvLyBDaGFrcmEsIFY4DQogIH0gZWxzZSBpZignMCdbJFNQTElUXSh1bmRlZmluZWQsIDApW0xFTkdUSF0pew0KICAgICRzcGxpdCA9IGZ1bmN0aW9uKHNlcGFyYXRvciwgbGltaXQpew0KICAgICAgcmV0dXJuIHNlcGFyYXRvciA9PT0gdW5kZWZpbmVkICYmIGxpbWl0ID09PSAwID8gW10gOiBfc3BsaXQuY2FsbCh0aGlzLCBzZXBhcmF0b3IsIGxpbWl0KTsNCiAgICB9Ow0KICB9DQogIC8vIDIxLjEuMy4xNyBTdHJpbmcucHJvdG90eXBlLnNwbGl0KHNlcGFyYXRvciwgbGltaXQpDQogIHJldHVybiBbZnVuY3Rpb24gc3BsaXQoc2VwYXJhdG9yLCBsaW1pdCl7DQogICAgdmFyIE8gID0gZGVmaW5lZCh0aGlzKQ0KICAgICAgLCBmbiA9IHNlcGFyYXRvciA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBzZXBhcmF0b3JbU1BMSVRdOw0KICAgIHJldHVybiBmbiAhPT0gdW5kZWZpbmVkID8gZm4uY2FsbChzZXBhcmF0b3IsIE8sIGxpbWl0KSA6ICRzcGxpdC5jYWxsKFN0cmluZyhPKSwgc2VwYXJhdG9yLCBsaW1pdCk7DQogIH0sICRzcGxpdF07DQp9KTsNCn0seyIuL19maXgtcmUtd2tzIjoyMjQsIi4vX2lzLXJlZ2V4cCI6MjM5fV0sNDA5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnJlcXVpcmUoJy4vZXM2LnJlZ2V4cC5mbGFncycpOw0KdmFyIGFuT2JqZWN0ICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JykNCiAgLCAkZmxhZ3MgICAgICA9IHJlcXVpcmUoJy4vX2ZsYWdzJykNCiAgLCBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykNCiAgLCBUT19TVFJJTkcgICA9ICd0b1N0cmluZycNCiAgLCAkdG9TdHJpbmcgICA9IC8uL1tUT19TVFJJTkddOw0KDQp2YXIgZGVmaW5lID0gZnVuY3Rpb24oZm4pew0KICByZXF1aXJlKCcuL19yZWRlZmluZScpKFJlZ0V4cC5wcm90b3R5cGUsIFRPX1NUUklORywgZm4sIHRydWUpOw0KfTsNCg0KLy8gMjEuMi41LjE0IFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcoKQ0KaWYocmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpeyByZXR1cm4gJHRvU3RyaW5nLmNhbGwoe3NvdXJjZTogJ2EnLCBmbGFnczogJ2InfSkgIT0gJy9hL2InOyB9KSl7DQogIGRlZmluZShmdW5jdGlvbiB0b1N0cmluZygpew0KICAgIHZhciBSID0gYW5PYmplY3QodGhpcyk7DQogICAgcmV0dXJuICcvJy5jb25jYXQoUi5zb3VyY2UsICcvJywNCiAgICAgICdmbGFncycgaW4gUiA/IFIuZmxhZ3MgOiAhREVTQ1JJUFRPUlMgJiYgUiBpbnN0YW5jZW9mIFJlZ0V4cCA/ICRmbGFncy5jYWxsKFIpIDogdW5kZWZpbmVkKTsNCiAgfSk7DQovLyBGRjQ0LSBSZWdFeHAjdG9TdHJpbmcgaGFzIGEgd3JvbmcgbmFtZQ0KfSBlbHNlIGlmKCR0b1N0cmluZy5uYW1lICE9IFRPX1NUUklORyl7DQogIGRlZmluZShmdW5jdGlvbiB0b1N0cmluZygpew0KICAgIHJldHVybiAkdG9TdHJpbmcuY2FsbCh0aGlzKTsNCiAgfSk7DQp9DQp9LHsiLi9fYW4tb2JqZWN0IjoxOTYsIi4vX2Rlc2NyaXB0b3JzIjoyMTcsIi4vX2ZhaWxzIjoyMjMsIi4vX2ZsYWdzIjoyMjUsIi4vX3JlZGVmaW5lIjoyNzYsIi4vZXM2LnJlZ2V4cC5mbGFncyI6NDA0fV0sNDEwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciBzdHJvbmcgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXN0cm9uZycpOw0KDQovLyAyMy4yIFNldCBPYmplY3RzDQptb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24nKSgnU2V0JywgZnVuY3Rpb24oZ2V0KXsNCiAgcmV0dXJuIGZ1bmN0aW9uIFNldCgpeyByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTsgfTsNCn0sIHsNCiAgLy8gMjMuMi4zLjEgU2V0LnByb3RvdHlwZS5hZGQodmFsdWUpDQogIGFkZDogZnVuY3Rpb24gYWRkKHZhbHVlKXsNCiAgICByZXR1cm4gc3Ryb25nLmRlZih0aGlzLCB2YWx1ZSA9IHZhbHVlID09PSAwID8gMCA6IHZhbHVlLCB2YWx1ZSk7DQogIH0NCn0sIHN0cm9uZyk7DQp9LHsiLi9fY29sbGVjdGlvbiI6MjExLCIuL19jb2xsZWN0aW9uLXN0cm9uZyI6MjA4fV0sNDExOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCi8vIEIuMi4zLjIgU3RyaW5nLnByb3RvdHlwZS5hbmNob3IobmFtZSkNCnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2FuY2hvcicsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpew0KICByZXR1cm4gZnVuY3Rpb24gYW5jaG9yKG5hbWUpew0KICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdhJywgJ25hbWUnLCBuYW1lKTsNCiAgfQ0KfSk7DQp9LHsiLi9fc3RyaW5nLWh0bWwiOjI4OH1dLDQxMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQovLyBCLjIuMy4zIFN0cmluZy5wcm90b3R5cGUuYmlnKCkNCnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2JpZycsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpew0KICByZXR1cm4gZnVuY3Rpb24gYmlnKCl7DQogICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2JpZycsICcnLCAnJyk7DQogIH0NCn0pOw0KfSx7Ii4vX3N0cmluZy1odG1sIjoyODh9XSw0MTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KLy8gQi4yLjMuNCBTdHJpbmcucHJvdG90eXBlLmJsaW5rKCkNCnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2JsaW5rJywgZnVuY3Rpb24oY3JlYXRlSFRNTCl7DQogIHJldHVybiBmdW5jdGlvbiBibGluaygpew0KICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdibGluaycsICcnLCAnJyk7DQogIH0NCn0pOw0KfSx7Ii4vX3N0cmluZy1odG1sIjoyODh9XSw0MTQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KLy8gQi4yLjMuNSBTdHJpbmcucHJvdG90eXBlLmJvbGQoKQ0KcmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnYm9sZCcsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpew0KICByZXR1cm4gZnVuY3Rpb24gYm9sZCgpew0KICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdiJywgJycsICcnKTsNCiAgfQ0KfSk7DQp9LHsiLi9fc3RyaW5nLWh0bWwiOjI4OH1dLDQxNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgJGF0ICAgICA9IHJlcXVpcmUoJy4vX3N0cmluZy1hdCcpKGZhbHNlKTsNCiRleHBvcnQoJGV4cG9ydC5QLCAnU3RyaW5nJywgew0KICAvLyAyMS4xLjMuMyBTdHJpbmcucHJvdG90eXBlLmNvZGVQb2ludEF0KHBvcykNCiAgY29kZVBvaW50QXQ6IGZ1bmN0aW9uIGNvZGVQb2ludEF0KHBvcyl7DQogICAgcmV0dXJuICRhdCh0aGlzLCBwb3MpOw0KICB9DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9fc3RyaW5nLWF0IjoyODZ9XSw0MTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjEuMS4zLjYgU3RyaW5nLnByb3RvdHlwZS5lbmRzV2l0aChzZWFyY2hTdHJpbmcgWywgZW5kUG9zaXRpb25dKQ0KJ3VzZSBzdHJpY3QnOw0KdmFyICRleHBvcnQgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgdG9MZW5ndGggID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJykNCiAgLCBjb250ZXh0ICAgPSByZXF1aXJlKCcuL19zdHJpbmctY29udGV4dCcpDQogICwgRU5EU19XSVRIID0gJ2VuZHNXaXRoJw0KICAsICRlbmRzV2l0aCA9ICcnW0VORFNfV0lUSF07DQoNCiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMtaXMtcmVnZXhwJykoRU5EU19XSVRIKSwgJ1N0cmluZycsIHsNCiAgZW5kc1dpdGg6IGZ1bmN0aW9uIGVuZHNXaXRoKHNlYXJjaFN0cmluZyAvKiwgZW5kUG9zaXRpb24gPSBAbGVuZ3RoICovKXsNCiAgICB2YXIgdGhhdCA9IGNvbnRleHQodGhpcywgc2VhcmNoU3RyaW5nLCBFTkRTX1dJVEgpDQogICAgICAsIGVuZFBvc2l0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQNCiAgICAgICwgbGVuICAgID0gdG9MZW5ndGgodGhhdC5sZW5ndGgpDQogICAgICAsIGVuZCAgICA9IGVuZFBvc2l0aW9uID09PSB1bmRlZmluZWQgPyBsZW4gOiBNYXRoLm1pbih0b0xlbmd0aChlbmRQb3NpdGlvbiksIGxlbikNCiAgICAgICwgc2VhcmNoID0gU3RyaW5nKHNlYXJjaFN0cmluZyk7DQogICAgcmV0dXJuICRlbmRzV2l0aA0KICAgICAgPyAkZW5kc1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGVuZCkNCiAgICAgIDogdGhhdC5zbGljZShlbmQgLSBzZWFyY2gubGVuZ3RoLCBlbmQpID09PSBzZWFyY2g7DQogIH0NCn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19mYWlscy1pcy1yZWdleHAiOjIyMiwiLi9fc3RyaW5nLWNvbnRleHQiOjI4NywiLi9fdG8tbGVuZ3RoIjoyOTd9XSw0MTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KLy8gQi4yLjMuNiBTdHJpbmcucHJvdG90eXBlLmZpeGVkKCkNCnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2ZpeGVkJywgZnVuY3Rpb24oY3JlYXRlSFRNTCl7DQogIHJldHVybiBmdW5jdGlvbiBmaXhlZCgpew0KICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICd0dCcsICcnLCAnJyk7DQogIH0NCn0pOw0KfSx7Ii4vX3N0cmluZy1odG1sIjoyODh9XSw0MTg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KLy8gQi4yLjMuNyBTdHJpbmcucHJvdG90eXBlLmZvbnRjb2xvcihjb2xvcikNCnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2ZvbnRjb2xvcicsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpew0KICByZXR1cm4gZnVuY3Rpb24gZm9udGNvbG9yKGNvbG9yKXsNCiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnZm9udCcsICdjb2xvcicsIGNvbG9yKTsNCiAgfQ0KfSk7DQp9LHsiLi9fc3RyaW5nLWh0bWwiOjI4OH1dLDQxOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQovLyBCLjIuMy44IFN0cmluZy5wcm90b3R5cGUuZm9udHNpemUoc2l6ZSkNCnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2ZvbnRzaXplJywgZnVuY3Rpb24oY3JlYXRlSFRNTCl7DQogIHJldHVybiBmdW5jdGlvbiBmb250c2l6ZShzaXplKXsNCiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnZm9udCcsICdzaXplJywgc2l6ZSk7DQogIH0NCn0pOw0KfSx7Ii4vX3N0cmluZy1odG1sIjoyODh9XSw0MjA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyICRleHBvcnQgICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCB0b0luZGV4ICAgICAgICA9IHJlcXVpcmUoJy4vX3RvLWluZGV4JykNCiAgLCBmcm9tQ2hhckNvZGUgICA9IFN0cmluZy5mcm9tQ2hhckNvZGUNCiAgLCAkZnJvbUNvZGVQb2ludCA9IFN0cmluZy5mcm9tQ29kZVBvaW50Ow0KDQovLyBsZW5ndGggc2hvdWxkIGJlIDEsIG9sZCBGRiBwcm9ibGVtDQokZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICghISRmcm9tQ29kZVBvaW50ICYmICRmcm9tQ29kZVBvaW50Lmxlbmd0aCAhPSAxKSwgJ1N0cmluZycsIHsNCiAgLy8gMjEuMS4yLjIgU3RyaW5nLmZyb21Db2RlUG9pbnQoLi4uY29kZVBvaW50cykNCiAgZnJvbUNvZGVQb2ludDogZnVuY3Rpb24gZnJvbUNvZGVQb2ludCh4KXsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFycw0KICAgIHZhciByZXMgID0gW10NCiAgICAgICwgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGgNCiAgICAgICwgaSAgICA9IDANCiAgICAgICwgY29kZTsNCiAgICB3aGlsZShhTGVuID4gaSl7DQogICAgICBjb2RlID0gK2FyZ3VtZW50c1tpKytdOw0KICAgICAgaWYodG9JbmRleChjb2RlLCAweDEwZmZmZikgIT09IGNvZGUpdGhyb3cgUmFuZ2VFcnJvcihjb2RlICsgJyBpcyBub3QgYSB2YWxpZCBjb2RlIHBvaW50Jyk7DQogICAgICByZXMucHVzaChjb2RlIDwgMHgxMDAwMA0KICAgICAgICA/IGZyb21DaGFyQ29kZShjb2RlKQ0KICAgICAgICA6IGZyb21DaGFyQ29kZSgoKGNvZGUgLT0gMHgxMDAwMCkgPj4gMTApICsgMHhkODAwLCBjb2RlICUgMHg0MDAgKyAweGRjMDApDQogICAgICApOw0KICAgIH0gcmV0dXJuIHJlcy5qb2luKCcnKTsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX3RvLWluZGV4IjoyOTR9XSw0MjE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gMjEuMS4zLjcgU3RyaW5nLnByb3RvdHlwZS5pbmNsdWRlcyhzZWFyY2hTdHJpbmcsIHBvc2l0aW9uID0gMCkNCid1c2Ugc3RyaWN0JzsNCnZhciAkZXhwb3J0ICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgY29udGV4dCAgPSByZXF1aXJlKCcuL19zdHJpbmctY29udGV4dCcpDQogICwgSU5DTFVERVMgPSAnaW5jbHVkZXMnOw0KDQokZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzLWlzLXJlZ2V4cCcpKElOQ0xVREVTKSwgJ1N0cmluZycsIHsNCiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKHNlYXJjaFN0cmluZyAvKiwgcG9zaXRpb24gPSAwICovKXsNCiAgICByZXR1cm4gISF+Y29udGV4dCh0aGlzLCBzZWFyY2hTdHJpbmcsIElOQ0xVREVTKQ0KICAgICAgLmluZGV4T2Yoc2VhcmNoU3RyaW5nLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7DQogIH0NCn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19mYWlscy1pcy1yZWdleHAiOjIyMiwiLi9fc3RyaW5nLWNvbnRleHQiOjI4N31dLDQyMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQovLyBCLjIuMy45IFN0cmluZy5wcm90b3R5cGUuaXRhbGljcygpDQpyZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdpdGFsaWNzJywgZnVuY3Rpb24oY3JlYXRlSFRNTCl7DQogIHJldHVybiBmdW5jdGlvbiBpdGFsaWNzKCl7DQogICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2knLCAnJywgJycpOw0KICB9DQp9KTsNCn0seyIuL19zdHJpbmctaHRtbCI6Mjg4fV0sNDIzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxODddWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2l0ZXItZGVmaW5lIjoyNDIsIi4vX3N0cmluZy1hdCI6Mjg2LCJkdXAiOjE4N31dLDQyNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQovLyBCLjIuMy4xMCBTdHJpbmcucHJvdG90eXBlLmxpbmsodXJsKQ0KcmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnbGluaycsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpew0KICByZXR1cm4gZnVuY3Rpb24gbGluayh1cmwpew0KICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdhJywgJ2hyZWYnLCB1cmwpOw0KICB9DQp9KTsNCn0seyIuL19zdHJpbmctaHRtbCI6Mjg4fV0sNDI1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciAkZXhwb3J0ICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKQ0KICAsIHRvTGVuZ3RoICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ1N0cmluZycsIHsNCiAgLy8gMjEuMS4yLjQgU3RyaW5nLnJhdyhjYWxsU2l0ZSwgLi4uc3Vic3RpdHV0aW9ucykNCiAgcmF3OiBmdW5jdGlvbiByYXcoY2FsbFNpdGUpew0KICAgIHZhciB0cGwgID0gdG9JT2JqZWN0KGNhbGxTaXRlLnJhdykNCiAgICAgICwgbGVuICA9IHRvTGVuZ3RoKHRwbC5sZW5ndGgpDQogICAgICAsIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoDQogICAgICAsIHJlcyAgPSBbXQ0KICAgICAgLCBpICAgID0gMDsNCiAgICB3aGlsZShsZW4gPiBpKXsNCiAgICAgIHJlcy5wdXNoKFN0cmluZyh0cGxbaSsrXSkpOw0KICAgICAgaWYoaSA8IGFMZW4pcmVzLnB1c2goU3RyaW5nKGFyZ3VtZW50c1tpXSkpOw0KICAgIH0gcmV0dXJuIHJlcy5qb2luKCcnKTsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX3RvLWlvYmplY3QiOjI5NiwiLi9fdG8tbGVuZ3RoIjoyOTd9XSw0MjY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7DQogIC8vIDIxLjEuMy4xMyBTdHJpbmcucHJvdG90eXBlLnJlcGVhdChjb3VudCkNCiAgcmVwZWF0OiByZXF1aXJlKCcuL19zdHJpbmctcmVwZWF0JykNCn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19zdHJpbmctcmVwZWF0IjoyOTB9XSw0Mjc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KLy8gQi4yLjMuMTEgU3RyaW5nLnByb3RvdHlwZS5zbWFsbCgpDQpyZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdzbWFsbCcsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpew0KICByZXR1cm4gZnVuY3Rpb24gc21hbGwoKXsNCiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc21hbGwnLCAnJywgJycpOw0KICB9DQp9KTsNCn0seyIuL19zdHJpbmctaHRtbCI6Mjg4fV0sNDI4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIDIxLjEuMy4xOCBTdHJpbmcucHJvdG90eXBlLnN0YXJ0c1dpdGgoc2VhcmNoU3RyaW5nIFssIHBvc2l0aW9uIF0pDQondXNlIHN0cmljdCc7DQp2YXIgJGV4cG9ydCAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIHRvTGVuZ3RoICAgID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJykNCiAgLCBjb250ZXh0ICAgICA9IHJlcXVpcmUoJy4vX3N0cmluZy1jb250ZXh0JykNCiAgLCBTVEFSVFNfV0lUSCA9ICdzdGFydHNXaXRoJw0KICAsICRzdGFydHNXaXRoID0gJydbU1RBUlRTX1dJVEhdOw0KDQokZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzLWlzLXJlZ2V4cCcpKFNUQVJUU19XSVRIKSwgJ1N0cmluZycsIHsNCiAgc3RhcnRzV2l0aDogZnVuY3Rpb24gc3RhcnRzV2l0aChzZWFyY2hTdHJpbmcgLyosIHBvc2l0aW9uID0gMCAqLyl7DQogICAgdmFyIHRoYXQgICA9IGNvbnRleHQodGhpcywgc2VhcmNoU3RyaW5nLCBTVEFSVFNfV0lUSCkNCiAgICAgICwgaW5kZXggID0gdG9MZW5ndGgoTWF0aC5taW4oYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIHRoYXQubGVuZ3RoKSkNCiAgICAgICwgc2VhcmNoID0gU3RyaW5nKHNlYXJjaFN0cmluZyk7DQogICAgcmV0dXJuICRzdGFydHNXaXRoDQogICAgICA/ICRzdGFydHNXaXRoLmNhbGwodGhhdCwgc2VhcmNoLCBpbmRleCkNCiAgICAgIDogdGhhdC5zbGljZShpbmRleCwgaW5kZXggKyBzZWFyY2gubGVuZ3RoKSA9PT0gc2VhcmNoOw0KICB9DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9fZmFpbHMtaXMtcmVnZXhwIjoyMjIsIi4vX3N0cmluZy1jb250ZXh0IjoyODcsIi4vX3RvLWxlbmd0aCI6Mjk3fV0sNDI5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCi8vIEIuMi4zLjEyIFN0cmluZy5wcm90b3R5cGUuc3RyaWtlKCkNCnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ3N0cmlrZScsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpew0KICByZXR1cm4gZnVuY3Rpb24gc3RyaWtlKCl7DQogICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3N0cmlrZScsICcnLCAnJyk7DQogIH0NCn0pOw0KfSx7Ii4vX3N0cmluZy1odG1sIjoyODh9XSw0MzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KLy8gQi4yLjMuMTMgU3RyaW5nLnByb3RvdHlwZS5zdWIoKQ0KcmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3ViJywgZnVuY3Rpb24oY3JlYXRlSFRNTCl7DQogIHJldHVybiBmdW5jdGlvbiBzdWIoKXsNCiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3ViJywgJycsICcnKTsNCiAgfQ0KfSk7DQp9LHsiLi9fc3RyaW5nLWh0bWwiOjI4OH1dLDQzMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQovLyBCLjIuMy4xNCBTdHJpbmcucHJvdG90eXBlLnN1cCgpDQpyZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdzdXAnLCBmdW5jdGlvbihjcmVhdGVIVE1MKXsNCiAgcmV0dXJuIGZ1bmN0aW9uIHN1cCgpew0KICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdzdXAnLCAnJywgJycpOw0KICB9DQp9KTsNCn0seyIuL19zdHJpbmctaHRtbCI6Mjg4fV0sNDMyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCi8vIDIxLjEuMy4yNSBTdHJpbmcucHJvdG90eXBlLnRyaW0oKQ0KcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKSgndHJpbScsIGZ1bmN0aW9uKCR0cmltKXsNCiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW0oKXsNCiAgICByZXR1cm4gJHRyaW0odGhpcywgMyk7DQogIH07DQp9KTsNCn0seyIuL19zdHJpbmctdHJpbSI6MjkxfV0sNDMzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxODhdWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX2FuLW9iamVjdCI6MTk2LCIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19lbnVtLWtleXMiOjIyMCwiLi9fZXhwb3J0IjoyMjEsIi4vX2ZhaWxzIjoyMjMsIi4vX2dsb2JhbCI6MjI3LCIuL19oYXMiOjIyOCwiLi9faGlkZSI6MjI5LCIuL19pcy1hcnJheSI6MjM2LCIuL19rZXlvZiI6MjQ2LCIuL19saWJyYXJ5IjoyNDcsIi4vX21ldGEiOjI1MSwiLi9fb2JqZWN0LWNyZWF0ZSI6MjU1LCIuL19vYmplY3QtZHAiOjI1NiwiLi9fb2JqZWN0LWdvcGQiOjI1OSwiLi9fb2JqZWN0LWdvcG4iOjI2MSwiLi9fb2JqZWN0LWdvcG4tZXh0IjoyNjAsIi4vX29iamVjdC1nb3BzIjoyNjIsIi4vX29iamVjdC1rZXlzIjoyNjUsIi4vX29iamVjdC1waWUiOjI2NiwiLi9fcHJvcGVydHktZGVzYyI6Mjc0LCIuL19yZWRlZmluZSI6Mjc2LCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6MjgxLCIuL19zaGFyZWQiOjI4MywiLi9fdG8taW9iamVjdCI6Mjk2LCIuL190by1wcmltaXRpdmUiOjI5OSwiLi9fdWlkIjozMDMsIi4vX3drcyI6MzA2LCIuL193a3MtZGVmaW5lIjozMDQsIi4vX3drcy1leHQiOjMwNSwiZHVwIjoxODh9XSw0MzQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyICRleHBvcnQgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgJHR5cGVkICAgICAgID0gcmVxdWlyZSgnLi9fdHlwZWQnKQ0KICAsIGJ1ZmZlciAgICAgICA9IHJlcXVpcmUoJy4vX3R5cGVkLWJ1ZmZlcicpDQogICwgYW5PYmplY3QgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JykNCiAgLCB0b0luZGV4ICAgICAgPSByZXF1aXJlKCcuL190by1pbmRleCcpDQogICwgdG9MZW5ndGggICAgID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJykNCiAgLCBpc09iamVjdCAgICAgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKQ0KICAsIFRZUEVEX0FSUkFZICA9IHJlcXVpcmUoJy4vX3drcycpKCd0eXBlZF9hcnJheScpDQogICwgQXJyYXlCdWZmZXIgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuQXJyYXlCdWZmZXINCiAgLCBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJykNCiAgLCAkQXJyYXlCdWZmZXIgPSBidWZmZXIuQXJyYXlCdWZmZXINCiAgLCAkRGF0YVZpZXcgICAgPSBidWZmZXIuRGF0YVZpZXcNCiAgLCAkaXNWaWV3ICAgICAgPSAkdHlwZWQuQUJWICYmIEFycmF5QnVmZmVyLmlzVmlldw0KICAsICRzbGljZSAgICAgICA9ICRBcnJheUJ1ZmZlci5wcm90b3R5cGUuc2xpY2UNCiAgLCBWSUVXICAgICAgICAgPSAkdHlwZWQuVklFVw0KICAsIEFSUkFZX0JVRkZFUiA9ICdBcnJheUJ1ZmZlcic7DQoNCiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogKEFycmF5QnVmZmVyICE9PSAkQXJyYXlCdWZmZXIpLCB7QXJyYXlCdWZmZXI6ICRBcnJheUJ1ZmZlcn0pOw0KDQokZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEkdHlwZWQuQ09OU1RSLCBBUlJBWV9CVUZGRVIsIHsNCiAgLy8gMjQuMS4zLjEgQXJyYXlCdWZmZXIuaXNWaWV3KGFyZykNCiAgaXNWaWV3OiBmdW5jdGlvbiBpc1ZpZXcoaXQpew0KICAgIHJldHVybiAkaXNWaWV3ICYmICRpc1ZpZXcoaXQpIHx8IGlzT2JqZWN0KGl0KSAmJiBWSUVXIGluIGl0Ow0KICB9DQp9KTsNCg0KJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LlUgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7DQogIHJldHVybiAhbmV3ICRBcnJheUJ1ZmZlcigyKS5zbGljZSgxLCB1bmRlZmluZWQpLmJ5dGVMZW5ndGg7DQp9KSwgQVJSQVlfQlVGRkVSLCB7DQogIC8vIDI0LjEuNC4zIEFycmF5QnVmZmVyLnByb3RvdHlwZS5zbGljZShzdGFydCwgZW5kKQ0KICBzbGljZTogZnVuY3Rpb24gc2xpY2Uoc3RhcnQsIGVuZCl7DQogICAgaWYoJHNsaWNlICE9PSB1bmRlZmluZWQgJiYgZW5kID09PSB1bmRlZmluZWQpcmV0dXJuICRzbGljZS5jYWxsKGFuT2JqZWN0KHRoaXMpLCBzdGFydCk7IC8vIEZGIGZpeA0KICAgIHZhciBsZW4gICAgPSBhbk9iamVjdCh0aGlzKS5ieXRlTGVuZ3RoDQogICAgICAsIGZpcnN0ICA9IHRvSW5kZXgoc3RhcnQsIGxlbikNCiAgICAgICwgZmluYWwgID0gdG9JbmRleChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IGVuZCwgbGVuKQ0KICAgICAgLCByZXN1bHQgPSBuZXcgKHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCAkQXJyYXlCdWZmZXIpKSh0b0xlbmd0aChmaW5hbCAtIGZpcnN0KSkNCiAgICAgICwgdmlld1MgID0gbmV3ICREYXRhVmlldyh0aGlzKQ0KICAgICAgLCB2aWV3VCAgPSBuZXcgJERhdGFWaWV3KHJlc3VsdCkNCiAgICAgICwgaW5kZXggID0gMDsNCiAgICB3aGlsZShmaXJzdCA8IGZpbmFsKXsNCiAgICAgIHZpZXdULnNldFVpbnQ4KGluZGV4KyssIHZpZXdTLmdldFVpbnQ4KGZpcnN0KyspKTsNCiAgICB9IHJldHVybiByZXN1bHQ7DQogIH0NCn0pOw0KDQpyZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKEFSUkFZX0JVRkZFUik7DQp9LHsiLi9fYW4tb2JqZWN0IjoxOTYsIi4vX2V4cG9ydCI6MjIxLCIuL19mYWlscyI6MjIzLCIuL19nbG9iYWwiOjIyNywiLi9faXMtb2JqZWN0IjoyMzgsIi4vX3NldC1zcGVjaWVzIjoyODAsIi4vX3NwZWNpZXMtY29uc3RydWN0b3IiOjI4NCwiLi9fdG8taW5kZXgiOjI5NCwiLi9fdG8tbGVuZ3RoIjoyOTcsIi4vX3R5cGVkIjozMDIsIi4vX3R5cGVkLWJ1ZmZlciI6MzAxLCIuL193a3MiOjMwNn1dLDQzNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpOw0KJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fdHlwZWQnKS5BQlYsIHsNCiAgRGF0YVZpZXc6IHJlcXVpcmUoJy4vX3R5cGVkLWJ1ZmZlcicpLkRhdGFWaWV3DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMSwiLi9fdHlwZWQiOjMwMiwiLi9fdHlwZWQtYnVmZmVyIjozMDF9XSw0MzY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KcmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnRmxvYXQzMicsIDQsIGZ1bmN0aW9uKGluaXQpew0KICByZXR1cm4gZnVuY3Rpb24gRmxvYXQzMkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCl7DQogICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTsNCiAgfTsNCn0pOw0KfSx7Ii4vX3R5cGVkLWFycmF5IjozMDB9XSw0Mzc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KcmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnRmxvYXQ2NCcsIDgsIGZ1bmN0aW9uKGluaXQpew0KICByZXR1cm4gZnVuY3Rpb24gRmxvYXQ2NEFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCl7DQogICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTsNCiAgfTsNCn0pOw0KfSx7Ii4vX3R5cGVkLWFycmF5IjozMDB9XSw0Mzg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KcmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnSW50MTYnLCAyLCBmdW5jdGlvbihpbml0KXsNCiAgcmV0dXJuIGZ1bmN0aW9uIEludDE2QXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKXsNCiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpOw0KICB9Ow0KfSk7DQp9LHsiLi9fdHlwZWQtYXJyYXkiOjMwMH1dLDQzOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQzMicsIDQsIGZ1bmN0aW9uKGluaXQpew0KICByZXR1cm4gZnVuY3Rpb24gSW50MzJBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpew0KICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7DQogIH07DQp9KTsNCn0seyIuL190eXBlZC1hcnJheSI6MzAwfV0sNDQwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ0ludDgnLCAxLCBmdW5jdGlvbihpbml0KXsNCiAgcmV0dXJuIGZ1bmN0aW9uIEludDhBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpew0KICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7DQogIH07DQp9KTsNCn0seyIuL190eXBlZC1hcnJheSI6MzAwfV0sNDQxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQxNicsIDIsIGZ1bmN0aW9uKGluaXQpew0KICByZXR1cm4gZnVuY3Rpb24gVWludDE2QXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKXsNCiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpOw0KICB9Ow0KfSk7DQp9LHsiLi9fdHlwZWQtYXJyYXkiOjMwMH1dLDQ0MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdVaW50MzInLCA0LCBmdW5jdGlvbihpbml0KXsNCiAgcmV0dXJuIGZ1bmN0aW9uIFVpbnQzMkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCl7DQogICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTsNCiAgfTsNCn0pOw0KfSx7Ii4vX3R5cGVkLWFycmF5IjozMDB9XSw0NDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KcmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnVWludDgnLCAxLCBmdW5jdGlvbihpbml0KXsNCiAgcmV0dXJuIGZ1bmN0aW9uIFVpbnQ4QXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKXsNCiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpOw0KICB9Ow0KfSk7DQp9LHsiLi9fdHlwZWQtYXJyYXkiOjMwMH1dLDQ0NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdVaW50OCcsIDEsIGZ1bmN0aW9uKGluaXQpew0KICByZXR1cm4gZnVuY3Rpb24gVWludDhDbGFtcGVkQXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKXsNCiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpOw0KICB9Ow0KfSwgdHJ1ZSk7DQp9LHsiLi9fdHlwZWQtYXJyYXkiOjMwMH1dLDQ0NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgZWFjaCAgICAgICAgID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDApDQogICwgcmVkZWZpbmUgICAgID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKQ0KICAsIG1ldGEgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGEnKQ0KICAsIGFzc2lnbiAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1hc3NpZ24nKQ0KICAsIHdlYWsgICAgICAgICA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24td2VhaycpDQogICwgaXNPYmplY3QgICAgID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JykNCiAgLCBoYXMgICAgICAgICAgPSByZXF1aXJlKCcuL19oYXMnKQ0KICAsIGdldFdlYWsgICAgICA9IG1ldGEuZ2V0V2Vhaw0KICAsIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGUNCiAgLCB1bmNhdWdodEZyb3plblN0b3JlID0gd2Vhay51ZnN0b3JlDQogICwgdG1wICAgICAgICAgID0ge30NCiAgLCBJbnRlcm5hbE1hcDsNCg0KdmFyIHdyYXBwZXIgPSBmdW5jdGlvbihnZXQpew0KICByZXR1cm4gZnVuY3Rpb24gV2Vha01hcCgpew0KICAgIHJldHVybiBnZXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpOw0KICB9Ow0KfTsNCg0KdmFyIG1ldGhvZHMgPSB7DQogIC8vIDIzLjMuMy4zIFdlYWtNYXAucHJvdG90eXBlLmdldChrZXkpDQogIGdldDogZnVuY3Rpb24gZ2V0KGtleSl7DQogICAgaWYoaXNPYmplY3Qoa2V5KSl7DQogICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTsNCiAgICAgIGlmKGRhdGEgPT09IHRydWUpcmV0dXJuIHVuY2F1Z2h0RnJvemVuU3RvcmUodGhpcykuZ2V0KGtleSk7DQogICAgICByZXR1cm4gZGF0YSA/IGRhdGFbdGhpcy5faV0gOiB1bmRlZmluZWQ7DQogICAgfQ0KICB9LA0KICAvLyAyMy4zLjMuNSBXZWFrTWFwLnByb3RvdHlwZS5zZXQoa2V5LCB2YWx1ZSkNCiAgc2V0OiBmdW5jdGlvbiBzZXQoa2V5LCB2YWx1ZSl7DQogICAgcmV0dXJuIHdlYWsuZGVmKHRoaXMsIGtleSwgdmFsdWUpOw0KICB9DQp9Ow0KDQovLyAyMy4zIFdlYWtNYXAgT2JqZWN0cw0KdmFyICRXZWFrTWFwID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoJ1dlYWtNYXAnLCB3cmFwcGVyLCBtZXRob2RzLCB3ZWFrLCB0cnVlLCB0cnVlKTsNCg0KLy8gSUUxMSBXZWFrTWFwIGZyb3plbiBrZXlzIGZpeA0KaWYobmV3ICRXZWFrTWFwKCkuc2V0KChPYmplY3QuZnJlZXplIHx8IE9iamVjdCkodG1wKSwgNykuZ2V0KHRtcCkgIT0gNyl7DQogIEludGVybmFsTWFwID0gd2Vhay5nZXRDb25zdHJ1Y3Rvcih3cmFwcGVyKTsNCiAgYXNzaWduKEludGVybmFsTWFwLnByb3RvdHlwZSwgbWV0aG9kcyk7DQogIG1ldGEuTkVFRCA9IHRydWU7DQogIGVhY2goWydkZWxldGUnLCAnaGFzJywgJ2dldCcsICdzZXQnXSwgZnVuY3Rpb24oa2V5KXsNCiAgICB2YXIgcHJvdG8gID0gJFdlYWtNYXAucHJvdG90eXBlDQogICAgICAsIG1ldGhvZCA9IHByb3RvW2tleV07DQogICAgcmVkZWZpbmUocHJvdG8sIGtleSwgZnVuY3Rpb24oYSwgYil7DQogICAgICAvLyBzdG9yZSBmcm96ZW4gb2JqZWN0cyBvbiBpbnRlcm5hbCB3ZWFrbWFwIHNoaW0NCiAgICAgIGlmKGlzT2JqZWN0KGEpICYmICFpc0V4dGVuc2libGUoYSkpew0KICAgICAgICBpZighdGhpcy5fZil0aGlzLl9mID0gbmV3IEludGVybmFsTWFwOw0KICAgICAgICB2YXIgcmVzdWx0ID0gdGhpcy5fZltrZXldKGEsIGIpOw0KICAgICAgICByZXR1cm4ga2V5ID09ICdzZXQnID8gdGhpcyA6IHJlc3VsdDsNCiAgICAgIC8vIHN0b3JlIGFsbCB0aGUgcmVzdCBvbiBuYXRpdmUgd2Vha21hcA0KICAgICAgfSByZXR1cm4gbWV0aG9kLmNhbGwodGhpcywgYSwgYik7DQogICAgfSk7DQogIH0pOw0KfQ0KfSx7Ii4vX2FycmF5LW1ldGhvZHMiOjIwMSwiLi9fY29sbGVjdGlvbiI6MjExLCIuL19jb2xsZWN0aW9uLXdlYWsiOjIxMCwiLi9faGFzIjoyMjgsIi4vX2lzLW9iamVjdCI6MjM4LCIuL19tZXRhIjoyNTEsIi4vX29iamVjdC1hc3NpZ24iOjI1NCwiLi9fcmVkZWZpbmUiOjI3Nn1dLDQ0NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQp2YXIgd2VhayA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24td2VhaycpOw0KDQovLyAyMy40IFdlYWtTZXQgT2JqZWN0cw0KcmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKCdXZWFrU2V0JywgZnVuY3Rpb24oZ2V0KXsNCiAgcmV0dXJuIGZ1bmN0aW9uIFdlYWtTZXQoKXsgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07DQp9LCB7DQogIC8vIDIzLjQuMy4xIFdlYWtTZXQucHJvdG90eXBlLmFkZCh2YWx1ZSkNCiAgYWRkOiBmdW5jdGlvbiBhZGQodmFsdWUpew0KICAgIHJldHVybiB3ZWFrLmRlZih0aGlzLCB2YWx1ZSwgdHJ1ZSk7DQogIH0NCn0sIHdlYWssIGZhbHNlLCB0cnVlKTsNCn0seyIuL19jb2xsZWN0aW9uIjoyMTEsIi4vX2NvbGxlY3Rpb24td2VhayI6MjEwfV0sNDQ3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L0FycmF5LnByb3RvdHlwZS5pbmNsdWRlcw0KdmFyICRleHBvcnQgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgJGluY2x1ZGVzID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKSh0cnVlKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlAsICdBcnJheScsIHsNCiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKGVsIC8qLCBmcm9tSW5kZXggPSAwICovKXsNCiAgICByZXR1cm4gJGluY2x1ZGVzKHRoaXMsIGVsLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7DQogIH0NCn0pOw0KDQpyZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKSgnaW5jbHVkZXMnKTsNCn0seyIuL19hZGQtdG8tdW5zY29wYWJsZXMiOjE5NCwiLi9fYXJyYXktaW5jbHVkZXMiOjIwMCwiLi9fZXhwb3J0IjoyMjF9XSw0NDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gaHR0cHM6Ly9naXRodWIuY29tL3J3YWxkcm9uL3RjMzktbm90ZXMvYmxvYi9tYXN0ZXIvZXM2LzIwMTQtMDkvc2VwdC0yNS5tZCM1MTAtZ2xvYmFsYXNhcC1mb3ItZW5xdWV1aW5nLWEtbWljcm90YXNrDQp2YXIgJGV4cG9ydCAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCBtaWNyb3Rhc2sgPSByZXF1aXJlKCcuL19taWNyb3Rhc2snKSgpDQogICwgcHJvY2VzcyAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykucHJvY2Vzcw0KICAsIGlzTm9kZSAgICA9IHJlcXVpcmUoJy4vX2NvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJzsNCg0KJGV4cG9ydCgkZXhwb3J0LkcsIHsNCiAgYXNhcDogZnVuY3Rpb24gYXNhcChmbil7DQogICAgdmFyIGRvbWFpbiA9IGlzTm9kZSAmJiBwcm9jZXNzLmRvbWFpbjsNCiAgICBtaWNyb3Rhc2soZG9tYWluID8gZG9tYWluLmJpbmQoZm4pIDogZm4pOw0KICB9DQp9KTsNCn0seyIuL19jb2YiOjIwNywiLi9fZXhwb3J0IjoyMjEsIi4vX2dsb2JhbCI6MjI3LCIuL19taWNyb3Rhc2siOjI1M31dLDQ0OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBodHRwczovL2dpdGh1Yi5jb20vbGpoYXJiL3Byb3Bvc2FsLWlzLWVycm9yDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgY29mICAgICA9IHJlcXVpcmUoJy4vX2NvZicpOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ0Vycm9yJywgew0KICBpc0Vycm9yOiBmdW5jdGlvbiBpc0Vycm9yKGl0KXsNCiAgICByZXR1cm4gY29mKGl0KSA9PT0gJ0Vycm9yJzsNCiAgfQ0KfSk7DQp9LHsiLi9fY29mIjoyMDcsIi4vX2V4cG9ydCI6MjIxfV0sNDUwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9EYXZpZEJydWFudC9NYXAtU2V0LnByb3RvdHlwZS50b0pTT04NCnZhciAkZXhwb3J0ICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpOw0KDQokZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuUiwgJ01hcCcsIHt0b0pTT046IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24tdG8tanNvbicpKCdNYXAnKX0pOw0KfSx7Ii4vX2NvbGxlY3Rpb24tdG8tanNvbiI6MjA5LCIuL19leHBvcnQiOjIyMX1dLDQ1MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9CcmVuZGFuRWljaC80Mjk0ZDVjMjEyYTZkMjI1NDcwMw0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgew0KICBpYWRkaDogZnVuY3Rpb24gaWFkZGgoeDAsIHgxLCB5MCwgeTEpew0KICAgIHZhciAkeDAgPSB4MCA+Pj4gMA0KICAgICAgLCAkeDEgPSB4MSA+Pj4gMA0KICAgICAgLCAkeTAgPSB5MCA+Pj4gMDsNCiAgICByZXR1cm4gJHgxICsgKHkxID4+PiAwKSArICgoJHgwICYgJHkwIHwgKCR4MCB8ICR5MCkgJiB+KCR4MCArICR5MCA+Pj4gMCkpID4+PiAzMSkgfCAwOw0KICB9DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMX1dLDQ1MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9CcmVuZGFuRWljaC80Mjk0ZDVjMjEyYTZkMjI1NDcwMw0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgew0KICBpbXVsaDogZnVuY3Rpb24gaW11bGgodSwgdil7DQogICAgdmFyIFVJTlQxNiA9IDB4ZmZmZg0KICAgICAgLCAkdSA9ICt1DQogICAgICAsICR2ID0gK3YNCiAgICAgICwgdTAgPSAkdSAmIFVJTlQxNg0KICAgICAgLCB2MCA9ICR2ICYgVUlOVDE2DQogICAgICAsIHUxID0gJHUgPj4gMTYNCiAgICAgICwgdjEgPSAkdiA+PiAxNg0KICAgICAgLCB0ICA9ICh1MSAqIHYwID4+PiAwKSArICh1MCAqIHYwID4+PiAxNik7DQogICAgcmV0dXJuIHUxICogdjEgKyAodCA+PiAxNikgKyAoKHUwICogdjEgPj4+IDApICsgKHQgJiBVSU5UMTYpID4+IDE2KTsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjF9XSw0NTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vQnJlbmRhbkVpY2gvNDI5NGQ1YzIxMmE2ZDIyNTQ3MDMNCnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7DQoNCiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsNCiAgaXN1Ymg6IGZ1bmN0aW9uIGlzdWJoKHgwLCB4MSwgeTAsIHkxKXsNCiAgICB2YXIgJHgwID0geDAgPj4+IDANCiAgICAgICwgJHgxID0geDEgPj4+IDANCiAgICAgICwgJHkwID0geTAgPj4+IDA7DQogICAgcmV0dXJuICR4MSAtICh5MSA+Pj4gMCkgLSAoKH4keDAgJiAkeTAgfCB+KCR4MCBeICR5MCkgJiAkeDAgLSAkeTAgPj4+IDApID4+PiAzMSkgfCAwOw0KICB9DQp9KTsNCn0seyIuL19leHBvcnQiOjIyMX1dLDQ1NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9CcmVuZGFuRWljaC80Mjk0ZDVjMjEyYTZkMjI1NDcwMw0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgew0KICB1bXVsaDogZnVuY3Rpb24gdW11bGgodSwgdil7DQogICAgdmFyIFVJTlQxNiA9IDB4ZmZmZg0KICAgICAgLCAkdSA9ICt1DQogICAgICAsICR2ID0gK3YNCiAgICAgICwgdTAgPSAkdSAmIFVJTlQxNg0KICAgICAgLCB2MCA9ICR2ICYgVUlOVDE2DQogICAgICAsIHUxID0gJHUgPj4+IDE2DQogICAgICAsIHYxID0gJHYgPj4+IDE2DQogICAgICAsIHQgID0gKHUxICogdjAgPj4+IDApICsgKHUwICogdjAgPj4+IDE2KTsNCiAgICByZXR1cm4gdTEgKiB2MSArICh0ID4+PiAxNikgKyAoKHUwICogdjEgPj4+IDApICsgKHQgJiBVSU5UMTYpID4+PiAxNik7DQogIH0NCn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxfV0sNDU1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciAkZXhwb3J0ICAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIHRvT2JqZWN0ICAgICAgICA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpDQogICwgYUZ1bmN0aW9uICAgICAgID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpDQogICwgJGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7DQoNCi8vIEIuMi4yLjIgT2JqZWN0LnByb3RvdHlwZS5fX2RlZmluZUdldHRlcl9fKFAsIGdldHRlcikNCnJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgJGV4cG9ydCgkZXhwb3J0LlAgKyByZXF1aXJlKCcuL19vYmplY3QtZm9yY2VkLXBhbScpLCAnT2JqZWN0Jywgew0KICBfX2RlZmluZUdldHRlcl9fOiBmdW5jdGlvbiBfX2RlZmluZUdldHRlcl9fKFAsIGdldHRlcil7DQogICAgJGRlZmluZVByb3BlcnR5LmYodG9PYmplY3QodGhpcyksIFAsIHtnZXQ6IGFGdW5jdGlvbihnZXR0ZXIpLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWV9KTsNCiAgfQ0KfSk7DQp9LHsiLi9fYS1mdW5jdGlvbiI6MTkyLCIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19leHBvcnQiOjIyMSwiLi9fb2JqZWN0LWRwIjoyNTYsIi4vX29iamVjdC1mb3JjZWQtcGFtIjoyNTgsIi4vX3RvLW9iamVjdCI6Mjk4fV0sNDU2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCnZhciAkZXhwb3J0ICAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIHRvT2JqZWN0ICAgICAgICA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpDQogICwgYUZ1bmN0aW9uICAgICAgID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpDQogICwgJGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7DQoNCi8vIEIuMi4yLjMgT2JqZWN0LnByb3RvdHlwZS5fX2RlZmluZVNldHRlcl9fKFAsIHNldHRlcikNCnJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgJGV4cG9ydCgkZXhwb3J0LlAgKyByZXF1aXJlKCcuL19vYmplY3QtZm9yY2VkLXBhbScpLCAnT2JqZWN0Jywgew0KICBfX2RlZmluZVNldHRlcl9fOiBmdW5jdGlvbiBfX2RlZmluZVNldHRlcl9fKFAsIHNldHRlcil7DQogICAgJGRlZmluZVByb3BlcnR5LmYodG9PYmplY3QodGhpcyksIFAsIHtzZXQ6IGFGdW5jdGlvbihzZXR0ZXIpLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWV9KTsNCiAgfQ0KfSk7DQp9LHsiLi9fYS1mdW5jdGlvbiI6MTkyLCIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19leHBvcnQiOjIyMSwiLi9fb2JqZWN0LWRwIjoyNTYsIi4vX29iamVjdC1mb3JjZWQtcGFtIjoyNTgsIi4vX3RvLW9iamVjdCI6Mjk4fV0sNDU3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLW9iamVjdC12YWx1ZXMtZW50cmllcw0KdmFyICRleHBvcnQgID0gcmVxdWlyZSgnLi9fZXhwb3J0JykNCiAgLCAkZW50cmllcyA9IHJlcXVpcmUoJy4vX29iamVjdC10by1hcnJheScpKHRydWUpOw0KDQokZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHsNCiAgZW50cmllczogZnVuY3Rpb24gZW50cmllcyhpdCl7DQogICAgcmV0dXJuICRlbnRyaWVzKGl0KTsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX29iamVjdC10by1hcnJheSI6MjY4fV0sNDU4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLW9iamVjdC1nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3JzDQp2YXIgJGV4cG9ydCAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIG93bktleXMgICAgICAgID0gcmVxdWlyZSgnLi9fb3duLWtleXMnKQ0KICAsIHRvSU9iamVjdCAgICAgID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpDQogICwgZ09QRCAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpDQogICwgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7DQogIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnM6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob2JqZWN0KXsNCiAgICB2YXIgTyAgICAgICA9IHRvSU9iamVjdChvYmplY3QpDQogICAgICAsIGdldERlc2MgPSBnT1BELmYNCiAgICAgICwga2V5cyAgICA9IG93bktleXMoTykNCiAgICAgICwgcmVzdWx0ICA9IHt9DQogICAgICAsIGkgICAgICAgPSAwDQogICAgICAsIGtleSwgRDsNCiAgICB3aGlsZShrZXlzLmxlbmd0aCA+IGkpY3JlYXRlUHJvcGVydHkocmVzdWx0LCBrZXkgPSBrZXlzW2krK10sIGdldERlc2MoTywga2V5KSk7DQogICAgcmV0dXJuIHJlc3VsdDsNCiAgfQ0KfSk7DQp9LHsiLi9fY3JlYXRlLXByb3BlcnR5IjoyMTMsIi4vX2V4cG9ydCI6MjIxLCIuL19vYmplY3QtZ29wZCI6MjU5LCIuL19vd24ta2V5cyI6MjY5LCIuL190by1pb2JqZWN0IjoyOTZ9XSw0NTk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyICRleHBvcnQgICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgdG9PYmplY3QgICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JykNCiAgLCB0b1ByaW1pdGl2ZSAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKQ0KICAsIGdldFByb3RvdHlwZU9mICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKQ0KICAsIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjsNCg0KLy8gQi4yLjIuNCBPYmplY3QucHJvdG90eXBlLl9fbG9va3VwR2V0dGVyX18oUCkNCnJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgJGV4cG9ydCgkZXhwb3J0LlAgKyByZXF1aXJlKCcuL19vYmplY3QtZm9yY2VkLXBhbScpLCAnT2JqZWN0Jywgew0KICBfX2xvb2t1cEdldHRlcl9fOiBmdW5jdGlvbiBfX2xvb2t1cEdldHRlcl9fKFApew0KICAgIHZhciBPID0gdG9PYmplY3QodGhpcykNCiAgICAgICwgSyA9IHRvUHJpbWl0aXZlKFAsIHRydWUpDQogICAgICAsIEQ7DQogICAgZG8gew0KICAgICAgaWYoRCA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBLKSlyZXR1cm4gRC5nZXQ7DQogICAgfSB3aGlsZShPID0gZ2V0UHJvdG90eXBlT2YoTykpOw0KICB9DQp9KTsNCn0seyIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19leHBvcnQiOjIyMSwiLi9fb2JqZWN0LWZvcmNlZC1wYW0iOjI1OCwiLi9fb2JqZWN0LWdvcGQiOjI1OSwiLi9fb2JqZWN0LWdwbyI6MjYzLCIuL190by1vYmplY3QiOjI5OCwiLi9fdG8tcHJpbWl0aXZlIjoyOTl9XSw0NjA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KdmFyICRleHBvcnQgICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgdG9PYmplY3QgICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JykNCiAgLCB0b1ByaW1pdGl2ZSAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKQ0KICAsIGdldFByb3RvdHlwZU9mICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKQ0KICAsIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjsNCg0KLy8gQi4yLjIuNSBPYmplY3QucHJvdG90eXBlLl9fbG9va3VwU2V0dGVyX18oUCkNCnJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgJGV4cG9ydCgkZXhwb3J0LlAgKyByZXF1aXJlKCcuL19vYmplY3QtZm9yY2VkLXBhbScpLCAnT2JqZWN0Jywgew0KICBfX2xvb2t1cFNldHRlcl9fOiBmdW5jdGlvbiBfX2xvb2t1cFNldHRlcl9fKFApew0KICAgIHZhciBPID0gdG9PYmplY3QodGhpcykNCiAgICAgICwgSyA9IHRvUHJpbWl0aXZlKFAsIHRydWUpDQogICAgICAsIEQ7DQogICAgZG8gew0KICAgICAgaWYoRCA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBLKSlyZXR1cm4gRC5zZXQ7DQogICAgfSB3aGlsZShPID0gZ2V0UHJvdG90eXBlT2YoTykpOw0KICB9DQp9KTsNCn0seyIuL19kZXNjcmlwdG9ycyI6MjE3LCIuL19leHBvcnQiOjIyMSwiLi9fb2JqZWN0LWZvcmNlZC1wYW0iOjI1OCwiLi9fb2JqZWN0LWdvcGQiOjI1OSwiLi9fb2JqZWN0LWdwbyI6MjYzLCIuL190by1vYmplY3QiOjI5OCwiLi9fdG8tcHJpbWl0aXZlIjoyOTl9XSw0NjE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LXZhbHVlcy1lbnRyaWVzDQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgJHZhbHVlcyA9IHJlcXVpcmUoJy4vX29iamVjdC10by1hcnJheScpKGZhbHNlKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7DQogIHZhbHVlczogZnVuY3Rpb24gdmFsdWVzKGl0KXsNCiAgICByZXR1cm4gJHZhbHVlcyhpdCk7DQogIH0NCn0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19vYmplY3QtdG8tYXJyYXkiOjI2OH1dLDQ2MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQovLyBodHRwczovL2dpdGh1Yi5jb20vemVucGFyc2luZy9lcy1vYnNlcnZhYmxlDQp2YXIgJGV4cG9ydCAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsIGdsb2JhbCAgICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykNCiAgLCBjb3JlICAgICAgICA9IHJlcXVpcmUoJy4vX2NvcmUnKQ0KICAsIG1pY3JvdGFzayAgID0gcmVxdWlyZSgnLi9fbWljcm90YXNrJykoKQ0KICAsIE9CU0VSVkFCTEUgID0gcmVxdWlyZSgnLi9fd2tzJykoJ29ic2VydmFibGUnKQ0KICAsIGFGdW5jdGlvbiAgID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpDQogICwgYW5PYmplY3QgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKQ0KICAsIGFuSW5zdGFuY2UgID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKQ0KICAsIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJykNCiAgLCBoaWRlICAgICAgICA9IHJlcXVpcmUoJy4vX2hpZGUnKQ0KICAsIGZvck9mICAgICAgID0gcmVxdWlyZSgnLi9fZm9yLW9mJykNCiAgLCBSRVRVUk4gICAgICA9IGZvck9mLlJFVFVSTjsNCg0KdmFyIGdldE1ldGhvZCA9IGZ1bmN0aW9uKGZuKXsNCiAgcmV0dXJuIGZuID09IG51bGwgPyB1bmRlZmluZWQgOiBhRnVuY3Rpb24oZm4pOw0KfTsNCg0KdmFyIGNsZWFudXBTdWJzY3JpcHRpb24gPSBmdW5jdGlvbihzdWJzY3JpcHRpb24pew0KICB2YXIgY2xlYW51cCA9IHN1YnNjcmlwdGlvbi5fYzsNCiAgaWYoY2xlYW51cCl7DQogICAgc3Vic2NyaXB0aW9uLl9jID0gdW5kZWZpbmVkOw0KICAgIGNsZWFudXAoKTsNCiAgfQ0KfTsNCg0KdmFyIHN1YnNjcmlwdGlvbkNsb3NlZCA9IGZ1bmN0aW9uKHN1YnNjcmlwdGlvbil7DQogIHJldHVybiBzdWJzY3JpcHRpb24uX28gPT09IHVuZGVmaW5lZDsNCn07DQoNCnZhciBjbG9zZVN1YnNjcmlwdGlvbiA9IGZ1bmN0aW9uKHN1YnNjcmlwdGlvbil7DQogIGlmKCFzdWJzY3JpcHRpb25DbG9zZWQoc3Vic2NyaXB0aW9uKSl7DQogICAgc3Vic2NyaXB0aW9uLl9vID0gdW5kZWZpbmVkOw0KICAgIGNsZWFudXBTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uKTsNCiAgfQ0KfTsNCg0KdmFyIFN1YnNjcmlwdGlvbiA9IGZ1bmN0aW9uKG9ic2VydmVyLCBzdWJzY3JpYmVyKXsNCiAgYW5PYmplY3Qob2JzZXJ2ZXIpOw0KICB0aGlzLl9jID0gdW5kZWZpbmVkOw0KICB0aGlzLl9vID0gb2JzZXJ2ZXI7DQogIG9ic2VydmVyID0gbmV3IFN1YnNjcmlwdGlvbk9ic2VydmVyKHRoaXMpOw0KICB0cnkgew0KICAgIHZhciBjbGVhbnVwICAgICAgPSBzdWJzY3JpYmVyKG9ic2VydmVyKQ0KICAgICAgLCBzdWJzY3JpcHRpb24gPSBjbGVhbnVwOw0KICAgIGlmKGNsZWFudXAgIT0gbnVsbCl7DQogICAgICBpZih0eXBlb2YgY2xlYW51cC51bnN1YnNjcmliZSA9PT0gJ2Z1bmN0aW9uJyljbGVhbnVwID0gZnVuY3Rpb24oKXsgc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7IH07DQogICAgICBlbHNlIGFGdW5jdGlvbihjbGVhbnVwKTsNCiAgICAgIHRoaXMuX2MgPSBjbGVhbnVwOw0KICAgIH0NCiAgfSBjYXRjaChlKXsNCiAgICBvYnNlcnZlci5lcnJvcihlKTsNCiAgICByZXR1cm47DQogIH0gaWYoc3Vic2NyaXB0aW9uQ2xvc2VkKHRoaXMpKWNsZWFudXBTdWJzY3JpcHRpb24odGhpcyk7DQp9Ow0KDQpTdWJzY3JpcHRpb24ucHJvdG90eXBlID0gcmVkZWZpbmVBbGwoe30sIHsNCiAgdW5zdWJzY3JpYmU6IGZ1bmN0aW9uIHVuc3Vic2NyaWJlKCl7IGNsb3NlU3Vic2NyaXB0aW9uKHRoaXMpOyB9DQp9KTsNCg0KdmFyIFN1YnNjcmlwdGlvbk9ic2VydmVyID0gZnVuY3Rpb24oc3Vic2NyaXB0aW9uKXsNCiAgdGhpcy5fcyA9IHN1YnNjcmlwdGlvbjsNCn07DQoNClN1YnNjcmlwdGlvbk9ic2VydmVyLnByb3RvdHlwZSA9IHJlZGVmaW5lQWxsKHt9LCB7DQogIG5leHQ6IGZ1bmN0aW9uIG5leHQodmFsdWUpew0KICAgIHZhciBzdWJzY3JpcHRpb24gPSB0aGlzLl9zOw0KICAgIGlmKCFzdWJzY3JpcHRpb25DbG9zZWQoc3Vic2NyaXB0aW9uKSl7DQogICAgICB2YXIgb2JzZXJ2ZXIgPSBzdWJzY3JpcHRpb24uX287DQogICAgICB0cnkgew0KICAgICAgICB2YXIgbSA9IGdldE1ldGhvZChvYnNlcnZlci5uZXh0KTsNCiAgICAgICAgaWYobSlyZXR1cm4gbS5jYWxsKG9ic2VydmVyLCB2YWx1ZSk7DQogICAgICB9IGNhdGNoKGUpew0KICAgICAgICB0cnkgew0KICAgICAgICAgIGNsb3NlU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7DQogICAgICAgIH0gZmluYWxseSB7DQogICAgICAgICAgdGhyb3cgZTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgZXJyb3I6IGZ1bmN0aW9uIGVycm9yKHZhbHVlKXsNCiAgICB2YXIgc3Vic2NyaXB0aW9uID0gdGhpcy5fczsNCiAgICBpZihzdWJzY3JpcHRpb25DbG9zZWQoc3Vic2NyaXB0aW9uKSl0aHJvdyB2YWx1ZTsNCiAgICB2YXIgb2JzZXJ2ZXIgPSBzdWJzY3JpcHRpb24uX287DQogICAgc3Vic2NyaXB0aW9uLl9vID0gdW5kZWZpbmVkOw0KICAgIHRyeSB7DQogICAgICB2YXIgbSA9IGdldE1ldGhvZChvYnNlcnZlci5lcnJvcik7DQogICAgICBpZighbSl0aHJvdyB2YWx1ZTsNCiAgICAgIHZhbHVlID0gbS5jYWxsKG9ic2VydmVyLCB2YWx1ZSk7DQogICAgfSBjYXRjaChlKXsNCiAgICAgIHRyeSB7DQogICAgICAgIGNsZWFudXBTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uKTsNCiAgICAgIH0gZmluYWxseSB7DQogICAgICAgIHRocm93IGU7DQogICAgICB9DQogICAgfSBjbGVhbnVwU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7DQogICAgcmV0dXJuIHZhbHVlOw0KICB9LA0KICBjb21wbGV0ZTogZnVuY3Rpb24gY29tcGxldGUodmFsdWUpew0KICAgIHZhciBzdWJzY3JpcHRpb24gPSB0aGlzLl9zOw0KICAgIGlmKCFzdWJzY3JpcHRpb25DbG9zZWQoc3Vic2NyaXB0aW9uKSl7DQogICAgICB2YXIgb2JzZXJ2ZXIgPSBzdWJzY3JpcHRpb24uX287DQogICAgICBzdWJzY3JpcHRpb24uX28gPSB1bmRlZmluZWQ7DQogICAgICB0cnkgew0KICAgICAgICB2YXIgbSA9IGdldE1ldGhvZChvYnNlcnZlci5jb21wbGV0ZSk7DQogICAgICAgIHZhbHVlID0gbSA/IG0uY2FsbChvYnNlcnZlciwgdmFsdWUpIDogdW5kZWZpbmVkOw0KICAgICAgfSBjYXRjaChlKXsNCiAgICAgICAgdHJ5IHsNCiAgICAgICAgICBjbGVhbnVwU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7DQogICAgICAgIH0gZmluYWxseSB7DQogICAgICAgICAgdGhyb3cgZTsNCiAgICAgICAgfQ0KICAgICAgfSBjbGVhbnVwU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7DQogICAgICByZXR1cm4gdmFsdWU7DQogICAgfQ0KICB9DQp9KTsNCg0KdmFyICRPYnNlcnZhYmxlID0gZnVuY3Rpb24gT2JzZXJ2YWJsZShzdWJzY3JpYmVyKXsNCiAgYW5JbnN0YW5jZSh0aGlzLCAkT2JzZXJ2YWJsZSwgJ09ic2VydmFibGUnLCAnX2YnKS5fZiA9IGFGdW5jdGlvbihzdWJzY3JpYmVyKTsNCn07DQoNCnJlZGVmaW5lQWxsKCRPYnNlcnZhYmxlLnByb3RvdHlwZSwgew0KICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShvYnNlcnZlcil7DQogICAgcmV0dXJuIG5ldyBTdWJzY3JpcHRpb24ob2JzZXJ2ZXIsIHRoaXMuX2YpOw0KICB9LA0KICBmb3JFYWNoOiBmdW5jdGlvbiBmb3JFYWNoKGZuKXsNCiAgICB2YXIgdGhhdCA9IHRoaXM7DQogICAgcmV0dXJuIG5ldyAoY29yZS5Qcm9taXNlIHx8IGdsb2JhbC5Qcm9taXNlKShmdW5jdGlvbihyZXNvbHZlLCByZWplY3Qpew0KICAgICAgYUZ1bmN0aW9uKGZuKTsNCiAgICAgIHZhciBzdWJzY3JpcHRpb24gPSB0aGF0LnN1YnNjcmliZSh7DQogICAgICAgIG5leHQgOiBmdW5jdGlvbih2YWx1ZSl7DQogICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgIHJldHVybiBmbih2YWx1ZSk7DQogICAgICAgICAgfSBjYXRjaChlKXsNCiAgICAgICAgICAgIHJlamVjdChlKTsNCiAgICAgICAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpOw0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgZXJyb3I6IHJlamVjdCwNCiAgICAgICAgY29tcGxldGU6IHJlc29sdmUNCiAgICAgIH0pOw0KICAgIH0pOw0KICB9DQp9KTsNCg0KcmVkZWZpbmVBbGwoJE9ic2VydmFibGUsIHsNCiAgZnJvbTogZnVuY3Rpb24gZnJvbSh4KXsNCiAgICB2YXIgQyA9IHR5cGVvZiB0aGlzID09PSAnZnVuY3Rpb24nID8gdGhpcyA6ICRPYnNlcnZhYmxlOw0KICAgIHZhciBtZXRob2QgPSBnZXRNZXRob2QoYW5PYmplY3QoeClbT0JTRVJWQUJMRV0pOw0KICAgIGlmKG1ldGhvZCl7DQogICAgICB2YXIgb2JzZXJ2YWJsZSA9IGFuT2JqZWN0KG1ldGhvZC5jYWxsKHgpKTsNCiAgICAgIHJldHVybiBvYnNlcnZhYmxlLmNvbnN0cnVjdG9yID09PSBDID8gb2JzZXJ2YWJsZSA6IG5ldyBDKGZ1bmN0aW9uKG9ic2VydmVyKXsNCiAgICAgICAgcmV0dXJuIG9ic2VydmFibGUuc3Vic2NyaWJlKG9ic2VydmVyKTsNCiAgICAgIH0pOw0KICAgIH0NCiAgICByZXR1cm4gbmV3IEMoZnVuY3Rpb24ob2JzZXJ2ZXIpew0KICAgICAgdmFyIGRvbmUgPSBmYWxzZTsNCiAgICAgIG1pY3JvdGFzayhmdW5jdGlvbigpew0KICAgICAgICBpZighZG9uZSl7DQogICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgIGlmKGZvck9mKHgsIGZhbHNlLCBmdW5jdGlvbihpdCl7DQogICAgICAgICAgICAgIG9ic2VydmVyLm5leHQoaXQpOw0KICAgICAgICAgICAgICBpZihkb25lKXJldHVybiBSRVRVUk47DQogICAgICAgICAgICB9KSA9PT0gUkVUVVJOKXJldHVybjsNCiAgICAgICAgICB9IGNhdGNoKGUpew0KICAgICAgICAgICAgaWYoZG9uZSl0aHJvdyBlOw0KICAgICAgICAgICAgb2JzZXJ2ZXIuZXJyb3IoZSk7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgfSBvYnNlcnZlci5jb21wbGV0ZSgpOw0KICAgICAgICB9DQogICAgICB9KTsNCiAgICAgIHJldHVybiBmdW5jdGlvbigpeyBkb25lID0gdHJ1ZTsgfTsNCiAgICB9KTsNCiAgfSwNCiAgb2Y6IGZ1bmN0aW9uIG9mKCl7DQogICAgZm9yKHZhciBpID0gMCwgbCA9IGFyZ3VtZW50cy5sZW5ndGgsIGl0ZW1zID0gQXJyYXkobCk7IGkgPCBsOylpdGVtc1tpXSA9IGFyZ3VtZW50c1tpKytdOw0KICAgIHJldHVybiBuZXcgKHR5cGVvZiB0aGlzID09PSAnZnVuY3Rpb24nID8gdGhpcyA6ICRPYnNlcnZhYmxlKShmdW5jdGlvbihvYnNlcnZlcil7DQogICAgICB2YXIgZG9uZSA9IGZhbHNlOw0KICAgICAgbWljcm90YXNrKGZ1bmN0aW9uKCl7DQogICAgICAgIGlmKCFkb25lKXsNCiAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyArK2kpew0KICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dChpdGVtc1tpXSk7DQogICAgICAgICAgICBpZihkb25lKXJldHVybjsNCiAgICAgICAgICB9IG9ic2VydmVyLmNvbXBsZXRlKCk7DQogICAgICAgIH0NCiAgICAgIH0pOw0KICAgICAgcmV0dXJuIGZ1bmN0aW9uKCl7IGRvbmUgPSB0cnVlOyB9Ow0KICAgIH0pOw0KICB9DQp9KTsNCg0KaGlkZSgkT2JzZXJ2YWJsZS5wcm90b3R5cGUsIE9CU0VSVkFCTEUsIGZ1bmN0aW9uKCl7IHJldHVybiB0aGlzOyB9KTsNCg0KJGV4cG9ydCgkZXhwb3J0LkcsIHtPYnNlcnZhYmxlOiAkT2JzZXJ2YWJsZX0pOw0KDQpyZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKCdPYnNlcnZhYmxlJyk7DQp9LHsiLi9fYS1mdW5jdGlvbiI6MTkyLCIuL19hbi1pbnN0YW5jZSI6MTk1LCIuL19hbi1vYmplY3QiOjE5NiwiLi9fY29yZSI6MjEyLCIuL19leHBvcnQiOjIyMSwiLi9fZm9yLW9mIjoyMjYsIi4vX2dsb2JhbCI6MjI3LCIuL19oaWRlIjoyMjksIi4vX21pY3JvdGFzayI6MjUzLCIuL19yZWRlZmluZS1hbGwiOjI3NSwiLi9fc2V0LXNwZWNpZXMiOjI4MCwiLi9fd2tzIjozMDZ9XSw0NjM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIG1ldGFkYXRhICAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19tZXRhZGF0YScpDQogICwgYW5PYmplY3QgICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpDQogICwgdG9NZXRhS2V5ICAgICAgICAgICAgICAgICA9IG1ldGFkYXRhLmtleQ0KICAsIG9yZGluYXJ5RGVmaW5lT3duTWV0YWRhdGEgPSBtZXRhZGF0YS5zZXQ7DQoNCm1ldGFkYXRhLmV4cCh7ZGVmaW5lTWV0YWRhdGE6IGZ1bmN0aW9uIGRlZmluZU1ldGFkYXRhKG1ldGFkYXRhS2V5LCBtZXRhZGF0YVZhbHVlLCB0YXJnZXQsIHRhcmdldEtleSl7DQogIG9yZGluYXJ5RGVmaW5lT3duTWV0YWRhdGEobWV0YWRhdGFLZXksIG1ldGFkYXRhVmFsdWUsIGFuT2JqZWN0KHRhcmdldCksIHRvTWV0YUtleSh0YXJnZXRLZXkpKTsNCn19KTsNCn0seyIuL19hbi1vYmplY3QiOjE5NiwiLi9fbWV0YWRhdGEiOjI1Mn1dLDQ2NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgbWV0YWRhdGEgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJykNCiAgLCBhbk9iamVjdCAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JykNCiAgLCB0b01ldGFLZXkgICAgICAgICAgICAgID0gbWV0YWRhdGEua2V5DQogICwgZ2V0T3JDcmVhdGVNZXRhZGF0YU1hcCA9IG1ldGFkYXRhLm1hcA0KICAsIHN0b3JlICAgICAgICAgICAgICAgICAgPSBtZXRhZGF0YS5zdG9yZTsNCg0KbWV0YWRhdGEuZXhwKHtkZWxldGVNZXRhZGF0YTogZnVuY3Rpb24gZGVsZXRlTWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCAvKiwgdGFyZ2V0S2V5ICovKXsNCiAgdmFyIHRhcmdldEtleSAgID0gYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzJdKQ0KICAgICwgbWV0YWRhdGFNYXAgPSBnZXRPckNyZWF0ZU1ldGFkYXRhTWFwKGFuT2JqZWN0KHRhcmdldCksIHRhcmdldEtleSwgZmFsc2UpOw0KICBpZihtZXRhZGF0YU1hcCA9PT0gdW5kZWZpbmVkIHx8ICFtZXRhZGF0YU1hcFsnZGVsZXRlJ10obWV0YWRhdGFLZXkpKXJldHVybiBmYWxzZTsNCiAgaWYobWV0YWRhdGFNYXAuc2l6ZSlyZXR1cm4gdHJ1ZTsNCiAgdmFyIHRhcmdldE1ldGFkYXRhID0gc3RvcmUuZ2V0KHRhcmdldCk7DQogIHRhcmdldE1ldGFkYXRhWydkZWxldGUnXSh0YXJnZXRLZXkpOw0KICByZXR1cm4gISF0YXJnZXRNZXRhZGF0YS5zaXplIHx8IHN0b3JlWydkZWxldGUnXSh0YXJnZXQpOw0KfX0pOw0KfSx7Ii4vX2FuLW9iamVjdCI6MTk2LCIuL19tZXRhZGF0YSI6MjUyfV0sNDY1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBTZXQgICAgICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vZXM2LnNldCcpDQogICwgZnJvbSAgICAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19hcnJheS1mcm9tLWl0ZXJhYmxlJykNCiAgLCBtZXRhZGF0YSAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJykNCiAgLCBhbk9iamVjdCAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpDQogICwgZ2V0UHJvdG90eXBlT2YgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJykNCiAgLCBvcmRpbmFyeU93bk1ldGFkYXRhS2V5cyA9IG1ldGFkYXRhLmtleXMNCiAgLCB0b01ldGFLZXkgICAgICAgICAgICAgICA9IG1ldGFkYXRhLmtleTsNCg0KdmFyIG9yZGluYXJ5TWV0YWRhdGFLZXlzID0gZnVuY3Rpb24oTywgUCl7DQogIHZhciBvS2V5cyAgPSBvcmRpbmFyeU93bk1ldGFkYXRhS2V5cyhPLCBQKQ0KICAgICwgcGFyZW50ID0gZ2V0UHJvdG90eXBlT2YoTyk7DQogIGlmKHBhcmVudCA9PT0gbnVsbClyZXR1cm4gb0tleXM7DQogIHZhciBwS2V5cyAgPSBvcmRpbmFyeU1ldGFkYXRhS2V5cyhwYXJlbnQsIFApOw0KICByZXR1cm4gcEtleXMubGVuZ3RoID8gb0tleXMubGVuZ3RoID8gZnJvbShuZXcgU2V0KG9LZXlzLmNvbmNhdChwS2V5cykpKSA6IHBLZXlzIDogb0tleXM7DQp9Ow0KDQptZXRhZGF0YS5leHAoe2dldE1ldGFkYXRhS2V5czogZnVuY3Rpb24gZ2V0TWV0YWRhdGFLZXlzKHRhcmdldCAvKiwgdGFyZ2V0S2V5ICovKXsNCiAgcmV0dXJuIG9yZGluYXJ5TWV0YWRhdGFLZXlzKGFuT2JqZWN0KHRhcmdldCksIGFyZ3VtZW50cy5sZW5ndGggPCAyID8gdW5kZWZpbmVkIDogdG9NZXRhS2V5KGFyZ3VtZW50c1sxXSkpOw0KfX0pOw0KfSx7Ii4vX2FuLW9iamVjdCI6MTk2LCIuL19hcnJheS1mcm9tLWl0ZXJhYmxlIjoxOTksIi4vX21ldGFkYXRhIjoyNTIsIi4vX29iamVjdC1ncG8iOjI2MywiLi9lczYuc2V0Ijo0MTB9XSw0NjY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIG1ldGFkYXRhICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19tZXRhZGF0YScpDQogICwgYW5PYmplY3QgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpDQogICwgZ2V0UHJvdG90eXBlT2YgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKQ0KICAsIG9yZGluYXJ5SGFzT3duTWV0YWRhdGEgPSBtZXRhZGF0YS5oYXMNCiAgLCBvcmRpbmFyeUdldE93bk1ldGFkYXRhID0gbWV0YWRhdGEuZ2V0DQogICwgdG9NZXRhS2V5ICAgICAgICAgICAgICA9IG1ldGFkYXRhLmtleTsNCg0KdmFyIG9yZGluYXJ5R2V0TWV0YWRhdGEgPSBmdW5jdGlvbihNZXRhZGF0YUtleSwgTywgUCl7DQogIHZhciBoYXNPd24gPSBvcmRpbmFyeUhhc093bk1ldGFkYXRhKE1ldGFkYXRhS2V5LCBPLCBQKTsNCiAgaWYoaGFzT3duKXJldHVybiBvcmRpbmFyeUdldE93bk1ldGFkYXRhKE1ldGFkYXRhS2V5LCBPLCBQKTsNCiAgdmFyIHBhcmVudCA9IGdldFByb3RvdHlwZU9mKE8pOw0KICByZXR1cm4gcGFyZW50ICE9PSBudWxsID8gb3JkaW5hcnlHZXRNZXRhZGF0YShNZXRhZGF0YUtleSwgcGFyZW50LCBQKSA6IHVuZGVmaW5lZDsNCn07DQoNCm1ldGFkYXRhLmV4cCh7Z2V0TWV0YWRhdGE6IGZ1bmN0aW9uIGdldE1ldGFkYXRhKG1ldGFkYXRhS2V5LCB0YXJnZXQgLyosIHRhcmdldEtleSAqLyl7DQogIHJldHVybiBvcmRpbmFyeUdldE1ldGFkYXRhKG1ldGFkYXRhS2V5LCBhbk9iamVjdCh0YXJnZXQpLCBhcmd1bWVudHMubGVuZ3RoIDwgMyA/IHVuZGVmaW5lZCA6IHRvTWV0YUtleShhcmd1bWVudHNbMl0pKTsNCn19KTsNCn0seyIuL19hbi1vYmplY3QiOjE5NiwiLi9fbWV0YWRhdGEiOjI1MiwiLi9fb2JqZWN0LWdwbyI6MjYzfV0sNDY3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBtZXRhZGF0YSAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJykNCiAgLCBhbk9iamVjdCAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpDQogICwgb3JkaW5hcnlPd25NZXRhZGF0YUtleXMgPSBtZXRhZGF0YS5rZXlzDQogICwgdG9NZXRhS2V5ICAgICAgICAgICAgICAgPSBtZXRhZGF0YS5rZXk7DQoNCm1ldGFkYXRhLmV4cCh7Z2V0T3duTWV0YWRhdGFLZXlzOiBmdW5jdGlvbiBnZXRPd25NZXRhZGF0YUtleXModGFyZ2V0IC8qLCB0YXJnZXRLZXkgKi8pew0KICByZXR1cm4gb3JkaW5hcnlPd25NZXRhZGF0YUtleXMoYW5PYmplY3QodGFyZ2V0KSwgYXJndW1lbnRzLmxlbmd0aCA8IDIgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzFdKSk7DQp9fSk7DQp9LHsiLi9fYW4tb2JqZWN0IjoxOTYsIi4vX21ldGFkYXRhIjoyNTJ9XSw0Njg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIG1ldGFkYXRhICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19tZXRhZGF0YScpDQogICwgYW5PYmplY3QgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpDQogICwgb3JkaW5hcnlHZXRPd25NZXRhZGF0YSA9IG1ldGFkYXRhLmdldA0KICAsIHRvTWV0YUtleSAgICAgICAgICAgICAgPSBtZXRhZGF0YS5rZXk7DQoNCm1ldGFkYXRhLmV4cCh7Z2V0T3duTWV0YWRhdGE6IGZ1bmN0aW9uIGdldE93bk1ldGFkYXRhKG1ldGFkYXRhS2V5LCB0YXJnZXQgLyosIHRhcmdldEtleSAqLyl7DQogIHJldHVybiBvcmRpbmFyeUdldE93bk1ldGFkYXRhKG1ldGFkYXRhS2V5LCBhbk9iamVjdCh0YXJnZXQpDQogICAgLCBhcmd1bWVudHMubGVuZ3RoIDwgMyA/IHVuZGVmaW5lZCA6IHRvTWV0YUtleShhcmd1bWVudHNbMl0pKTsNCn19KTsNCn0seyIuL19hbi1vYmplY3QiOjE5NiwiLi9fbWV0YWRhdGEiOjI1Mn1dLDQ2OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgbWV0YWRhdGEgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJykNCiAgLCBhbk9iamVjdCAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JykNCiAgLCBnZXRQcm90b3R5cGVPZiAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpDQogICwgb3JkaW5hcnlIYXNPd25NZXRhZGF0YSA9IG1ldGFkYXRhLmhhcw0KICAsIHRvTWV0YUtleSAgICAgICAgICAgICAgPSBtZXRhZGF0YS5rZXk7DQoNCnZhciBvcmRpbmFyeUhhc01ldGFkYXRhID0gZnVuY3Rpb24oTWV0YWRhdGFLZXksIE8sIFApew0KICB2YXIgaGFzT3duID0gb3JkaW5hcnlIYXNPd25NZXRhZGF0YShNZXRhZGF0YUtleSwgTywgUCk7DQogIGlmKGhhc093bilyZXR1cm4gdHJ1ZTsNCiAgdmFyIHBhcmVudCA9IGdldFByb3RvdHlwZU9mKE8pOw0KICByZXR1cm4gcGFyZW50ICE9PSBudWxsID8gb3JkaW5hcnlIYXNNZXRhZGF0YShNZXRhZGF0YUtleSwgcGFyZW50LCBQKSA6IGZhbHNlOw0KfTsNCg0KbWV0YWRhdGEuZXhwKHtoYXNNZXRhZGF0YTogZnVuY3Rpb24gaGFzTWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCAvKiwgdGFyZ2V0S2V5ICovKXsNCiAgcmV0dXJuIG9yZGluYXJ5SGFzTWV0YWRhdGEobWV0YWRhdGFLZXksIGFuT2JqZWN0KHRhcmdldCksIGFyZ3VtZW50cy5sZW5ndGggPCAzID8gdW5kZWZpbmVkIDogdG9NZXRhS2V5KGFyZ3VtZW50c1syXSkpOw0KfX0pOw0KfSx7Ii4vX2FuLW9iamVjdCI6MTk2LCIuL19tZXRhZGF0YSI6MjUyLCIuL19vYmplY3QtZ3BvIjoyNjN9XSw0NzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIG1ldGFkYXRhICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19tZXRhZGF0YScpDQogICwgYW5PYmplY3QgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpDQogICwgb3JkaW5hcnlIYXNPd25NZXRhZGF0YSA9IG1ldGFkYXRhLmhhcw0KICAsIHRvTWV0YUtleSAgICAgICAgICAgICAgPSBtZXRhZGF0YS5rZXk7DQoNCm1ldGFkYXRhLmV4cCh7aGFzT3duTWV0YWRhdGE6IGZ1bmN0aW9uIGhhc093bk1ldGFkYXRhKG1ldGFkYXRhS2V5LCB0YXJnZXQgLyosIHRhcmdldEtleSAqLyl7DQogIHJldHVybiBvcmRpbmFyeUhhc093bk1ldGFkYXRhKG1ldGFkYXRhS2V5LCBhbk9iamVjdCh0YXJnZXQpDQogICAgLCBhcmd1bWVudHMubGVuZ3RoIDwgMyA/IHVuZGVmaW5lZCA6IHRvTWV0YUtleShhcmd1bWVudHNbMl0pKTsNCn19KTsNCn0seyIuL19hbi1vYmplY3QiOjE5NiwiLi9fbWV0YWRhdGEiOjI1Mn1dLDQ3MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgbWV0YWRhdGEgICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJykNCiAgLCBhbk9iamVjdCAgICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JykNCiAgLCBhRnVuY3Rpb24gICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpDQogICwgdG9NZXRhS2V5ICAgICAgICAgICAgICAgICA9IG1ldGFkYXRhLmtleQ0KICAsIG9yZGluYXJ5RGVmaW5lT3duTWV0YWRhdGEgPSBtZXRhZGF0YS5zZXQ7DQoNCm1ldGFkYXRhLmV4cCh7bWV0YWRhdGE6IGZ1bmN0aW9uIG1ldGFkYXRhKG1ldGFkYXRhS2V5LCBtZXRhZGF0YVZhbHVlKXsNCiAgcmV0dXJuIGZ1bmN0aW9uIGRlY29yYXRvcih0YXJnZXQsIHRhcmdldEtleSl7DQogICAgb3JkaW5hcnlEZWZpbmVPd25NZXRhZGF0YSgNCiAgICAgIG1ldGFkYXRhS2V5LCBtZXRhZGF0YVZhbHVlLA0KICAgICAgKHRhcmdldEtleSAhPT0gdW5kZWZpbmVkID8gYW5PYmplY3QgOiBhRnVuY3Rpb24pKHRhcmdldCksDQogICAgICB0b01ldGFLZXkodGFyZ2V0S2V5KQ0KICAgICk7DQogIH07DQp9fSk7DQp9LHsiLi9fYS1mdW5jdGlvbiI6MTkyLCIuL19hbi1vYmplY3QiOjE5NiwiLi9fbWV0YWRhdGEiOjI1Mn1dLDQ3MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBodHRwczovL2dpdGh1Yi5jb20vRGF2aWRCcnVhbnQvTWFwLVNldC5wcm90b3R5cGUudG9KU09ODQp2YXIgJGV4cG9ydCAgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LlIsICdTZXQnLCB7dG9KU09OOiByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXRvLWpzb24nKSgnU2V0Jyl9KTsNCn0seyIuL19jb2xsZWN0aW9uLXRvLWpzb24iOjIwOSwiLi9fZXhwb3J0IjoyMjF9XSw0NzM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KLy8gaHR0cHM6Ly9naXRodWIuY29tL21hdGhpYXNieW5lbnMvU3RyaW5nLnByb3RvdHlwZS5hdA0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsICRhdCAgICAgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7DQogIGF0OiBmdW5jdGlvbiBhdChwb3Mpew0KICAgIHJldHVybiAkYXQodGhpcywgcG9zKTsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX3N0cmluZy1hdCI6Mjg2fV0sNDc0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vU3RyaW5nLnByb3RvdHlwZS5tYXRjaEFsbC8NCnZhciAkZXhwb3J0ICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgZGVmaW5lZCAgICAgPSByZXF1aXJlKCcuL19kZWZpbmVkJykNCiAgLCB0b0xlbmd0aCAgICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpDQogICwgaXNSZWdFeHAgICAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKQ0KICAsIGdldEZsYWdzICAgID0gcmVxdWlyZSgnLi9fZmxhZ3MnKQ0KICAsIFJlZ0V4cFByb3RvID0gUmVnRXhwLnByb3RvdHlwZTsNCg0KdmFyICRSZWdFeHBTdHJpbmdJdGVyYXRvciA9IGZ1bmN0aW9uKHJlZ2V4cCwgc3RyaW5nKXsNCiAgdGhpcy5fciA9IHJlZ2V4cDsNCiAgdGhpcy5fcyA9IHN0cmluZzsNCn07DQoNCnJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJykoJFJlZ0V4cFN0cmluZ0l0ZXJhdG9yLCAnUmVnRXhwIFN0cmluZycsIGZ1bmN0aW9uIG5leHQoKXsNCiAgdmFyIG1hdGNoID0gdGhpcy5fci5leGVjKHRoaXMuX3MpOw0KICByZXR1cm4ge3ZhbHVlOiBtYXRjaCwgZG9uZTogbWF0Y2ggPT09IG51bGx9Ow0KfSk7DQoNCiRleHBvcnQoJGV4cG9ydC5QLCAnU3RyaW5nJywgew0KICBtYXRjaEFsbDogZnVuY3Rpb24gbWF0Y2hBbGwocmVnZXhwKXsNCiAgICBkZWZpbmVkKHRoaXMpOw0KICAgIGlmKCFpc1JlZ0V4cChyZWdleHApKXRocm93IFR5cGVFcnJvcihyZWdleHAgKyAnIGlzIG5vdCBhIHJlZ2V4cCEnKTsNCiAgICB2YXIgUyAgICAgPSBTdHJpbmcodGhpcykNCiAgICAgICwgZmxhZ3MgPSAnZmxhZ3MnIGluIFJlZ0V4cFByb3RvID8gU3RyaW5nKHJlZ2V4cC5mbGFncykgOiBnZXRGbGFncy5jYWxsKHJlZ2V4cCkNCiAgICAgICwgcnggICAgPSBuZXcgUmVnRXhwKHJlZ2V4cC5zb3VyY2UsIH5mbGFncy5pbmRleE9mKCdnJykgPyBmbGFncyA6ICdnJyArIGZsYWdzKTsNCiAgICByeC5sYXN0SW5kZXggPSB0b0xlbmd0aChyZWdleHAubGFzdEluZGV4KTsNCiAgICByZXR1cm4gbmV3ICRSZWdFeHBTdHJpbmdJdGVyYXRvcihyeCwgUyk7DQogIH0NCn0pOw0KfSx7Ii4vX2RlZmluZWQiOjIxNiwiLi9fZXhwb3J0IjoyMjEsIi4vX2ZsYWdzIjoyMjUsIi4vX2lzLXJlZ2V4cCI6MjM5LCIuL19pdGVyLWNyZWF0ZSI6MjQxLCIuL190by1sZW5ndGgiOjI5N31dLDQ3NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQovLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1zdHJpbmctcGFkLXN0YXJ0LWVuZA0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsICRwYWQgICAgPSByZXF1aXJlKCcuL19zdHJpbmctcGFkJyk7DQoNCiRleHBvcnQoJGV4cG9ydC5QLCAnU3RyaW5nJywgew0KICBwYWRFbmQ6IGZ1bmN0aW9uIHBhZEVuZChtYXhMZW5ndGggLyosIGZpbGxTdHJpbmcgPSAnICcgKi8pew0KICAgIHJldHVybiAkcGFkKHRoaXMsIG1heExlbmd0aCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIGZhbHNlKTsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX3N0cmluZy1wYWQiOjI4OX1dLDQ3NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQovLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1zdHJpbmctcGFkLXN0YXJ0LWVuZA0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKQ0KICAsICRwYWQgICAgPSByZXF1aXJlKCcuL19zdHJpbmctcGFkJyk7DQoNCiRleHBvcnQoJGV4cG9ydC5QLCAnU3RyaW5nJywgew0KICBwYWRTdGFydDogZnVuY3Rpb24gcGFkU3RhcnQobWF4TGVuZ3RoIC8qLCBmaWxsU3RyaW5nID0gJyAnICovKXsNCiAgICByZXR1cm4gJHBhZCh0aGlzLCBtYXhMZW5ndGgsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCB0cnVlKTsNCiAgfQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX3N0cmluZy1wYWQiOjI4OX1dLDQ3NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQovLyBodHRwczovL2dpdGh1Yi5jb20vc2VibWFya2JhZ2UvZWNtYXNjcmlwdC1zdHJpbmctbGVmdC1yaWdodC10cmltDQpyZXF1aXJlKCcuL19zdHJpbmctdHJpbScpKCd0cmltTGVmdCcsIGZ1bmN0aW9uKCR0cmltKXsNCiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW1MZWZ0KCl7DQogICAgcmV0dXJuICR0cmltKHRoaXMsIDEpOw0KICB9Ow0KfSwgJ3RyaW1TdGFydCcpOw0KfSx7Ii4vX3N0cmluZy10cmltIjoyOTF9XSw0Nzg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KLy8gaHR0cHM6Ly9naXRodWIuY29tL3NlYm1hcmtiYWdlL2VjbWFzY3JpcHQtc3RyaW5nLWxlZnQtcmlnaHQtdHJpbQ0KcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKSgndHJpbVJpZ2h0JywgZnVuY3Rpb24oJHRyaW0pew0KICByZXR1cm4gZnVuY3Rpb24gdHJpbVJpZ2h0KCl7DQogICAgcmV0dXJuICR0cmltKHRoaXMsIDIpOw0KICB9Ow0KfSwgJ3RyaW1FbmQnKTsNCn0seyIuL19zdHJpbmctdHJpbSI6MjkxfV0sNDc5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmFyZ3VtZW50c1s0XVsxODldWzBdLmFwcGx5KGV4cG9ydHMsYXJndW1lbnRzKQ0KfSx7Ii4vX3drcy1kZWZpbmUiOjMwNCwiZHVwIjoxODl9XSw0ODA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KYXJndW1lbnRzWzRdWzE5MF1bMF0uYXBwbHkoZXhwb3J0cyxhcmd1bWVudHMpDQp9LHsiLi9fd2tzLWRlZmluZSI6MzA0LCJkdXAiOjE5MH1dLDQ4MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBodHRwczovL2dpdGh1Yi5jb20vbGpoYXJiL3Byb3Bvc2FsLWdsb2JhbA0KdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTsNCg0KJGV4cG9ydCgkZXhwb3J0LlMsICdTeXN0ZW0nLCB7Z2xvYmFsOiByZXF1aXJlKCcuL19nbG9iYWwnKX0pOw0KfSx7Ii4vX2V4cG9ydCI6MjIxLCIuL19nbG9iYWwiOjIyN31dLDQ4MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgJGl0ZXJhdG9ycyAgICA9IHJlcXVpcmUoJy4vZXM2LmFycmF5Lml0ZXJhdG9yJykNCiAgLCByZWRlZmluZSAgICAgID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKQ0KICAsIGdsb2JhbCAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKQ0KICAsIGhpZGUgICAgICAgICAgPSByZXF1aXJlKCcuL19oaWRlJykNCiAgLCBJdGVyYXRvcnMgICAgID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJykNCiAgLCB3a3MgICAgICAgICAgID0gcmVxdWlyZSgnLi9fd2tzJykNCiAgLCBJVEVSQVRPUiAgICAgID0gd2tzKCdpdGVyYXRvcicpDQogICwgVE9fU1RSSU5HX1RBRyA9IHdrcygndG9TdHJpbmdUYWcnKQ0KICAsIEFycmF5VmFsdWVzICAgPSBJdGVyYXRvcnMuQXJyYXk7DQoNCmZvcih2YXIgY29sbGVjdGlvbnMgPSBbJ05vZGVMaXN0JywgJ0RPTVRva2VuTGlzdCcsICdNZWRpYUxpc3QnLCAnU3R5bGVTaGVldExpc3QnLCAnQ1NTUnVsZUxpc3QnXSwgaSA9IDA7IGkgPCA1OyBpKyspew0KICB2YXIgTkFNRSAgICAgICA9IGNvbGxlY3Rpb25zW2ldDQogICAgLCBDb2xsZWN0aW9uID0gZ2xvYmFsW05BTUVdDQogICAgLCBwcm90byAgICAgID0gQ29sbGVjdGlvbiAmJiBDb2xsZWN0aW9uLnByb3RvdHlwZQ0KICAgICwga2V5Ow0KICBpZihwcm90byl7DQogICAgaWYoIXByb3RvW0lURVJBVE9SXSloaWRlKHByb3RvLCBJVEVSQVRPUiwgQXJyYXlWYWx1ZXMpOw0KICAgIGlmKCFwcm90b1tUT19TVFJJTkdfVEFHXSloaWRlKHByb3RvLCBUT19TVFJJTkdfVEFHLCBOQU1FKTsNCiAgICBJdGVyYXRvcnNbTkFNRV0gPSBBcnJheVZhbHVlczsNCiAgICBmb3Ioa2V5IGluICRpdGVyYXRvcnMpaWYoIXByb3RvW2tleV0pcmVkZWZpbmUocHJvdG8sIGtleSwgJGl0ZXJhdG9yc1trZXldLCB0cnVlKTsNCiAgfQ0KfQ0KfSx7Ii4vX2dsb2JhbCI6MjI3LCIuL19oaWRlIjoyMjksIi4vX2l0ZXJhdG9ycyI6MjQ1LCIuL19yZWRlZmluZSI6Mjc2LCIuL193a3MiOjMwNiwiLi9lczYuYXJyYXkuaXRlcmF0b3IiOjMyMH1dLDQ4MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgJHRhc2sgICA9IHJlcXVpcmUoJy4vX3Rhc2snKTsNCiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5CLCB7DQogIHNldEltbWVkaWF0ZTogICAkdGFzay5zZXQsDQogIGNsZWFySW1tZWRpYXRlOiAkdGFzay5jbGVhcg0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX3Rhc2siOjI5M31dLDQ4NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBpZTktIHNldFRpbWVvdXQgJiBzZXRJbnRlcnZhbCBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgZml4DQp2YXIgZ2xvYmFsICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpDQogICwgJGV4cG9ydCAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpDQogICwgaW52b2tlICAgICA9IHJlcXVpcmUoJy4vX2ludm9rZScpDQogICwgcGFydGlhbCAgICA9IHJlcXVpcmUoJy4vX3BhcnRpYWwnKQ0KICAsIG5hdmlnYXRvciAgPSBnbG9iYWwubmF2aWdhdG9yDQogICwgTVNJRSAgICAgICA9ICEhbmF2aWdhdG9yICYmIC9NU0lFIC5cLi8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTsgLy8gPC0gZGlydHkgaWU5LSBjaGVjaw0KdmFyIHdyYXAgPSBmdW5jdGlvbihzZXQpew0KICByZXR1cm4gTVNJRSA/IGZ1bmN0aW9uKGZuLCB0aW1lIC8qLCAuLi5hcmdzICovKXsNCiAgICByZXR1cm4gc2V0KGludm9rZSgNCiAgICAgIHBhcnRpYWwsDQogICAgICBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMiksDQogICAgICB0eXBlb2YgZm4gPT0gJ2Z1bmN0aW9uJyA/IGZuIDogRnVuY3Rpb24oZm4pDQogICAgKSwgdGltZSk7DQogIH0gOiBzZXQ7DQp9Ow0KJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LkIgKyAkZXhwb3J0LkYgKiBNU0lFLCB7DQogIHNldFRpbWVvdXQ6ICB3cmFwKGdsb2JhbC5zZXRUaW1lb3V0KSwNCiAgc2V0SW50ZXJ2YWw6IHdyYXAoZ2xvYmFsLnNldEludGVydmFsKQ0KfSk7DQp9LHsiLi9fZXhwb3J0IjoyMjEsIi4vX2dsb2JhbCI6MjI3LCIuL19pbnZva2UiOjIzMywiLi9fcGFydGlhbCI6MjcyfV0sNDg1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3ltYm9sJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnRpZXMnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZicpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cycpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcycpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuZnJlZXplJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5zZWFsJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5wcmV2ZW50LWV4dGVuc2lvbnMnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmlzLWZyb3plbicpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuaXMtc2VhbGVkJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5pcy1leHRlbnNpYmxlJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24nKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmlzJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuZnVuY3Rpb24uYmluZCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5mdW5jdGlvbi5uYW1lJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmhhcy1pbnN0YW5jZScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5wYXJzZS1pbnQnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucGFyc2UtZmxvYXQnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci50by1maXhlZCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIudG8tcHJlY2lzaW9uJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5lcHNpbG9uJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5pcy1maW5pdGUnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubnVtYmVyLmlzLWludGVnZXInKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubnVtYmVyLmlzLW5hbicpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIuaXMtc2FmZS1pbnRlZ2VyJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5tYXgtc2FmZS1pbnRlZ2VyJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5taW4tc2FmZS1pbnRlZ2VyJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5wYXJzZS1mbG9hdCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtaW50Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguYWNvc2gnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5hc2luaCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmF0YW5oJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguY2JydCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmNsejMyJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguY29zaCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmV4cG0xJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguZnJvdW5kJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguaHlwb3QnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5pbXVsJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGgubG9nMTAnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5sb2cxcCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzInKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5zaWduJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguc2luaCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLnRhbmgnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC50cnVuYycpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuZnJvbS1jb2RlLXBvaW50Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5yYXcnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLnRyaW0nKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5jb2RlLXBvaW50LWF0Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5lbmRzLXdpdGgnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmluY2x1ZGVzJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5yZXBlYXQnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLnN0YXJ0cy13aXRoJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5hbmNob3InKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmJpZycpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuYmxpbmsnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmJvbGQnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmZpeGVkJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5mb250Y29sb3InKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmZvbnRzaXplJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5pdGFsaWNzJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5saW5rJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5zbWFsbCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3RyaWtlJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5zdWInKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLnN1cCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5kYXRlLm5vdycpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5kYXRlLnRvLWpzb24nKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuZGF0ZS50by1pc28tc3RyaW5nJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LmRhdGUudG8tc3RyaW5nJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LmRhdGUudG8tcHJpbWl0aXZlJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmlzLWFycmF5Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmZyb20nKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkub2YnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuam9pbicpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5zbGljZScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5zb3J0Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmZvci1lYWNoJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5Lm1hcCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5maWx0ZXInKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuc29tZScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5ldmVyeScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlLXJpZ2h0Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmluZGV4LW9mJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5Lmxhc3QtaW5kZXgtb2YnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuY29weS13aXRoaW4nKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuZmlsbCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5maW5kJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmZpbmQtaW5kZXgnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuc3BlY2llcycpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5pdGVyYXRvcicpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWdleHAuY29uc3RydWN0b3InKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLnRvLXN0cmluZycpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWdleHAuZmxhZ3MnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLm1hdGNoJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZ2V4cC5yZXBsYWNlJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZ2V4cC5zZWFyY2gnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLnNwbGl0Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnByb21pc2UnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWFwJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnNldCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi53ZWFrLW1hcCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi53ZWFrLXNldCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi50eXBlZC5hcnJheS1idWZmZXInKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQuZGF0YS12aWV3Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnR5cGVkLmludDgtYXJyYXknKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXknKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQudWludDgtY2xhbXBlZC1hcnJheScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi50eXBlZC5pbnQxNi1hcnJheScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi50eXBlZC51aW50MTYtYXJyYXknKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQuaW50MzItYXJyYXknKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQudWludDMyLWFycmF5Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnR5cGVkLmZsb2F0MzItYXJyYXknKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQuZmxvYXQ2NC1hcnJheScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmFwcGx5Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuY29uc3RydWN0Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZGVmaW5lLXByb3BlcnR5Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZGVsZXRlLXByb3BlcnR5Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZW51bWVyYXRlJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LXByb3RvdHlwZS1vZicpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmhhcycpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmlzLWV4dGVuc2libGUnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVmbGVjdC5vd24ta2V5cycpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnByZXZlbnQtZXh0ZW5zaW9ucycpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldC1wcm90b3R5cGUtb2YnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuYXJyYXkuaW5jbHVkZXMnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuc3RyaW5nLmF0Jyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtc3RhcnQnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuc3RyaW5nLnBhZC1lbmQnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuc3RyaW5nLnRyaW0tbGVmdCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zdHJpbmcudHJpbS1yaWdodCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zdHJpbmcubWF0Y2gtYWxsJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvcicpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycycpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5vYmplY3QudmFsdWVzJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm9iamVjdC5lbnRyaWVzJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm9iamVjdC5kZWZpbmUtZ2V0dGVyJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm9iamVjdC5kZWZpbmUtc2V0dGVyJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm9iamVjdC5sb29rdXAtZ2V0dGVyJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm9iamVjdC5sb29rdXAtc2V0dGVyJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm1hcC50by1qc29uJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3LnNldC50by1qc29uJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN5c3RlbS5nbG9iYWwnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuZXJyb3IuaXMtZXJyb3InKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWF0aC5pYWRkaCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXRoLmlzdWJoJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm1hdGguaW11bGgnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWF0aC51bXVsaCcpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmRlZmluZS1tZXRhZGF0YScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmRlbGV0ZS1tZXRhZGF0YScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1tZXRhZGF0YScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1tZXRhZGF0YS1rZXlzJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3LnJlZmxlY3QuZ2V0LW93bi1tZXRhZGF0YScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1vd24tbWV0YWRhdGEta2V5cycpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0Lmhhcy1tZXRhZGF0YScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0Lmhhcy1vd24tbWV0YWRhdGEnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy9lczcucmVmbGVjdC5tZXRhZGF0YScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5hc2FwJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm9ic2VydmFibGUnKTsNCnJlcXVpcmUoJy4vbW9kdWxlcy93ZWIudGltZXJzJyk7DQpyZXF1aXJlKCcuL21vZHVsZXMvd2ViLmltbWVkaWF0ZScpOw0KcmVxdWlyZSgnLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUnKTsNCm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9tb2R1bGVzL19jb3JlJyk7DQp9LHsiLi9tb2R1bGVzL19jb3JlIjoyMTIsIi4vbW9kdWxlcy9lczYuYXJyYXkuY29weS13aXRoaW4iOjMxMCwiLi9tb2R1bGVzL2VzNi5hcnJheS5ldmVyeSI6MzExLCIuL21vZHVsZXMvZXM2LmFycmF5LmZpbGwiOjMxMiwiLi9tb2R1bGVzL2VzNi5hcnJheS5maWx0ZXIiOjMxMywiLi9tb2R1bGVzL2VzNi5hcnJheS5maW5kIjozMTUsIi4vbW9kdWxlcy9lczYuYXJyYXkuZmluZC1pbmRleCI6MzE0LCIuL21vZHVsZXMvZXM2LmFycmF5LmZvci1lYWNoIjozMTYsIi4vbW9kdWxlcy9lczYuYXJyYXkuZnJvbSI6MzE3LCIuL21vZHVsZXMvZXM2LmFycmF5LmluZGV4LW9mIjozMTgsIi4vbW9kdWxlcy9lczYuYXJyYXkuaXMtYXJyYXkiOjMxOSwiLi9tb2R1bGVzL2VzNi5hcnJheS5pdGVyYXRvciI6MzIwLCIuL21vZHVsZXMvZXM2LmFycmF5LmpvaW4iOjMyMSwiLi9tb2R1bGVzL2VzNi5hcnJheS5sYXN0LWluZGV4LW9mIjozMjIsIi4vbW9kdWxlcy9lczYuYXJyYXkubWFwIjozMjMsIi4vbW9kdWxlcy9lczYuYXJyYXkub2YiOjMyNCwiLi9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UiOjMyNiwiLi9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UtcmlnaHQiOjMyNSwiLi9tb2R1bGVzL2VzNi5hcnJheS5zbGljZSI6MzI3LCIuL21vZHVsZXMvZXM2LmFycmF5LnNvbWUiOjMyOCwiLi9tb2R1bGVzL2VzNi5hcnJheS5zb3J0IjozMjksIi4vbW9kdWxlcy9lczYuYXJyYXkuc3BlY2llcyI6MzMwLCIuL21vZHVsZXMvZXM2LmRhdGUubm93IjozMzEsIi4vbW9kdWxlcy9lczYuZGF0ZS50by1pc28tc3RyaW5nIjozMzIsIi4vbW9kdWxlcy9lczYuZGF0ZS50by1qc29uIjozMzMsIi4vbW9kdWxlcy9lczYuZGF0ZS50by1wcmltaXRpdmUiOjMzNCwiLi9tb2R1bGVzL2VzNi5kYXRlLnRvLXN0cmluZyI6MzM1LCIuL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmJpbmQiOjMzNiwiLi9tb2R1bGVzL2VzNi5mdW5jdGlvbi5oYXMtaW5zdGFuY2UiOjMzNywiLi9tb2R1bGVzL2VzNi5mdW5jdGlvbi5uYW1lIjozMzgsIi4vbW9kdWxlcy9lczYubWFwIjozMzksIi4vbW9kdWxlcy9lczYubWF0aC5hY29zaCI6MzQwLCIuL21vZHVsZXMvZXM2Lm1hdGguYXNpbmgiOjM0MSwiLi9tb2R1bGVzL2VzNi5tYXRoLmF0YW5oIjozNDIsIi4vbW9kdWxlcy9lczYubWF0aC5jYnJ0IjozNDMsIi4vbW9kdWxlcy9lczYubWF0aC5jbHozMiI6MzQ0LCIuL21vZHVsZXMvZXM2Lm1hdGguY29zaCI6MzQ1LCIuL21vZHVsZXMvZXM2Lm1hdGguZXhwbTEiOjM0NiwiLi9tb2R1bGVzL2VzNi5tYXRoLmZyb3VuZCI6MzQ3LCIuL21vZHVsZXMvZXM2Lm1hdGguaHlwb3QiOjM0OCwiLi9tb2R1bGVzL2VzNi5tYXRoLmltdWwiOjM0OSwiLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzEwIjozNTAsIi4vbW9kdWxlcy9lczYubWF0aC5sb2cxcCI6MzUxLCIuL21vZHVsZXMvZXM2Lm1hdGgubG9nMiI6MzUyLCIuL21vZHVsZXMvZXM2Lm1hdGguc2lnbiI6MzUzLCIuL21vZHVsZXMvZXM2Lm1hdGguc2luaCI6MzU0LCIuL21vZHVsZXMvZXM2Lm1hdGgudGFuaCI6MzU1LCIuL21vZHVsZXMvZXM2Lm1hdGgudHJ1bmMiOjM1NiwiLi9tb2R1bGVzL2VzNi5udW1iZXIuY29uc3RydWN0b3IiOjM1NywiLi9tb2R1bGVzL2VzNi5udW1iZXIuZXBzaWxvbiI6MzU4LCIuL21vZHVsZXMvZXM2Lm51bWJlci5pcy1maW5pdGUiOjM1OSwiLi9tb2R1bGVzL2VzNi5udW1iZXIuaXMtaW50ZWdlciI6MzYwLCIuL21vZHVsZXMvZXM2Lm51bWJlci5pcy1uYW4iOjM2MSwiLi9tb2R1bGVzL2VzNi5udW1iZXIuaXMtc2FmZS1pbnRlZ2VyIjozNjIsIi4vbW9kdWxlcy9lczYubnVtYmVyLm1heC1zYWZlLWludGVnZXIiOjM2MywiLi9tb2R1bGVzL2VzNi5udW1iZXIubWluLXNhZmUtaW50ZWdlciI6MzY0LCIuL21vZHVsZXMvZXM2Lm51bWJlci5wYXJzZS1mbG9hdCI6MzY1LCIuL21vZHVsZXMvZXM2Lm51bWJlci5wYXJzZS1pbnQiOjM2NiwiLi9tb2R1bGVzL2VzNi5udW1iZXIudG8tZml4ZWQiOjM2NywiLi9tb2R1bGVzL2VzNi5udW1iZXIudG8tcHJlY2lzaW9uIjozNjgsIi4vbW9kdWxlcy9lczYub2JqZWN0LmFzc2lnbiI6MzY5LCIuL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUiOjM3MCwiLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnRpZXMiOjM3MSwiLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5IjozNzIsIi4vbW9kdWxlcy9lczYub2JqZWN0LmZyZWV6ZSI6MzczLCIuL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOjM3NCwiLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcyI6Mzc1LCIuL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mIjozNzYsIi4vbW9kdWxlcy9lczYub2JqZWN0LmlzIjozODAsIi4vbW9kdWxlcy9lczYub2JqZWN0LmlzLWV4dGVuc2libGUiOjM3NywiLi9tb2R1bGVzL2VzNi5vYmplY3QuaXMtZnJvemVuIjozNzgsIi4vbW9kdWxlcy9lczYub2JqZWN0LmlzLXNlYWxlZCI6Mzc5LCIuL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIjozODEsIi4vbW9kdWxlcy9lczYub2JqZWN0LnByZXZlbnQtZXh0ZW5zaW9ucyI6MzgyLCIuL21vZHVsZXMvZXM2Lm9iamVjdC5zZWFsIjozODMsIi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YiOjM4NCwiLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIjozODUsIi4vbW9kdWxlcy9lczYucGFyc2UtZmxvYXQiOjM4NiwiLi9tb2R1bGVzL2VzNi5wYXJzZS1pbnQiOjM4NywiLi9tb2R1bGVzL2VzNi5wcm9taXNlIjozODgsIi4vbW9kdWxlcy9lczYucmVmbGVjdC5hcHBseSI6Mzg5LCIuL21vZHVsZXMvZXM2LnJlZmxlY3QuY29uc3RydWN0IjozOTAsIi4vbW9kdWxlcy9lczYucmVmbGVjdC5kZWZpbmUtcHJvcGVydHkiOjM5MSwiLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmRlbGV0ZS1wcm9wZXJ0eSI6MzkyLCIuL21vZHVsZXMvZXM2LnJlZmxlY3QuZW51bWVyYXRlIjozOTMsIi4vbW9kdWxlcy9lczYucmVmbGVjdC5nZXQiOjM5NiwiLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI6Mzk0LCIuL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LXByb3RvdHlwZS1vZiI6Mzk1LCIuL21vZHVsZXMvZXM2LnJlZmxlY3QuaGFzIjozOTcsIi4vbW9kdWxlcy9lczYucmVmbGVjdC5pcy1leHRlbnNpYmxlIjozOTgsIi4vbW9kdWxlcy9lczYucmVmbGVjdC5vd24ta2V5cyI6Mzk5LCIuL21vZHVsZXMvZXM2LnJlZmxlY3QucHJldmVudC1leHRlbnNpb25zIjo0MDAsIi4vbW9kdWxlcy9lczYucmVmbGVjdC5zZXQiOjQwMiwiLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldC1wcm90b3R5cGUtb2YiOjQwMSwiLi9tb2R1bGVzL2VzNi5yZWdleHAuY29uc3RydWN0b3IiOjQwMywiLi9tb2R1bGVzL2VzNi5yZWdleHAuZmxhZ3MiOjQwNCwiLi9tb2R1bGVzL2VzNi5yZWdleHAubWF0Y2giOjQwNSwiLi9tb2R1bGVzL2VzNi5yZWdleHAucmVwbGFjZSI6NDA2LCIuL21vZHVsZXMvZXM2LnJlZ2V4cC5zZWFyY2giOjQwNywiLi9tb2R1bGVzL2VzNi5yZWdleHAuc3BsaXQiOjQwOCwiLi9tb2R1bGVzL2VzNi5yZWdleHAudG8tc3RyaW5nIjo0MDksIi4vbW9kdWxlcy9lczYuc2V0Ijo0MTAsIi4vbW9kdWxlcy9lczYuc3RyaW5nLmFuY2hvciI6NDExLCIuL21vZHVsZXMvZXM2LnN0cmluZy5iaWciOjQxMiwiLi9tb2R1bGVzL2VzNi5zdHJpbmcuYmxpbmsiOjQxMywiLi9tb2R1bGVzL2VzNi5zdHJpbmcuYm9sZCI6NDE0LCIuL21vZHVsZXMvZXM2LnN0cmluZy5jb2RlLXBvaW50LWF0Ijo0MTUsIi4vbW9kdWxlcy9lczYuc3RyaW5nLmVuZHMtd2l0aCI6NDE2LCIuL21vZHVsZXMvZXM2LnN0cmluZy5maXhlZCI6NDE3LCIuL21vZHVsZXMvZXM2LnN0cmluZy5mb250Y29sb3IiOjQxOCwiLi9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udHNpemUiOjQxOSwiLi9tb2R1bGVzL2VzNi5zdHJpbmcuZnJvbS1jb2RlLXBvaW50Ijo0MjAsIi4vbW9kdWxlcy9lczYuc3RyaW5nLmluY2x1ZGVzIjo0MjEsIi4vbW9kdWxlcy9lczYuc3RyaW5nLml0YWxpY3MiOjQyMiwiLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiOjQyMywiLi9tb2R1bGVzL2VzNi5zdHJpbmcubGluayI6NDI0LCIuL21vZHVsZXMvZXM2LnN0cmluZy5yYXciOjQyNSwiLi9tb2R1bGVzL2VzNi5zdHJpbmcucmVwZWF0Ijo0MjYsIi4vbW9kdWxlcy9lczYuc3RyaW5nLnNtYWxsIjo0MjcsIi4vbW9kdWxlcy9lczYuc3RyaW5nLnN0YXJ0cy13aXRoIjo0MjgsIi4vbW9kdWxlcy9lczYuc3RyaW5nLnN0cmlrZSI6NDI5LCIuL21vZHVsZXMvZXM2LnN0cmluZy5zdWIiOjQzMCwiLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3VwIjo0MzEsIi4vbW9kdWxlcy9lczYuc3RyaW5nLnRyaW0iOjQzMiwiLi9tb2R1bGVzL2VzNi5zeW1ib2wiOjQzMywiLi9tb2R1bGVzL2VzNi50eXBlZC5hcnJheS1idWZmZXIiOjQzNCwiLi9tb2R1bGVzL2VzNi50eXBlZC5kYXRhLXZpZXciOjQzNSwiLi9tb2R1bGVzL2VzNi50eXBlZC5mbG9hdDMyLWFycmF5Ijo0MzYsIi4vbW9kdWxlcy9lczYudHlwZWQuZmxvYXQ2NC1hcnJheSI6NDM3LCIuL21vZHVsZXMvZXM2LnR5cGVkLmludDE2LWFycmF5Ijo0MzgsIi4vbW9kdWxlcy9lczYudHlwZWQuaW50MzItYXJyYXkiOjQzOSwiLi9tb2R1bGVzL2VzNi50eXBlZC5pbnQ4LWFycmF5Ijo0NDAsIi4vbW9kdWxlcy9lczYudHlwZWQudWludDE2LWFycmF5Ijo0NDEsIi4vbW9kdWxlcy9lczYudHlwZWQudWludDMyLWFycmF5Ijo0NDIsIi4vbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXkiOjQ0MywiLi9tb2R1bGVzL2VzNi50eXBlZC51aW50OC1jbGFtcGVkLWFycmF5Ijo0NDQsIi4vbW9kdWxlcy9lczYud2Vhay1tYXAiOjQ0NSwiLi9tb2R1bGVzL2VzNi53ZWFrLXNldCI6NDQ2LCIuL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzIjo0NDcsIi4vbW9kdWxlcy9lczcuYXNhcCI6NDQ4LCIuL21vZHVsZXMvZXM3LmVycm9yLmlzLWVycm9yIjo0NDksIi4vbW9kdWxlcy9lczcubWFwLnRvLWpzb24iOjQ1MCwiLi9tb2R1bGVzL2VzNy5tYXRoLmlhZGRoIjo0NTEsIi4vbW9kdWxlcy9lczcubWF0aC5pbXVsaCI6NDUyLCIuL21vZHVsZXMvZXM3Lm1hdGguaXN1YmgiOjQ1MywiLi9tb2R1bGVzL2VzNy5tYXRoLnVtdWxoIjo0NTQsIi4vbW9kdWxlcy9lczcub2JqZWN0LmRlZmluZS1nZXR0ZXIiOjQ1NSwiLi9tb2R1bGVzL2VzNy5vYmplY3QuZGVmaW5lLXNldHRlciI6NDU2LCIuL21vZHVsZXMvZXM3Lm9iamVjdC5lbnRyaWVzIjo0NTcsIi4vbW9kdWxlcy9lczcub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOjQ1OCwiLi9tb2R1bGVzL2VzNy5vYmplY3QubG9va3VwLWdldHRlciI6NDU5LCIuL21vZHVsZXMvZXM3Lm9iamVjdC5sb29rdXAtc2V0dGVyIjo0NjAsIi4vbW9kdWxlcy9lczcub2JqZWN0LnZhbHVlcyI6NDYxLCIuL21vZHVsZXMvZXM3Lm9ic2VydmFibGUiOjQ2MiwiLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmRlZmluZS1tZXRhZGF0YSI6NDYzLCIuL21vZHVsZXMvZXM3LnJlZmxlY3QuZGVsZXRlLW1ldGFkYXRhIjo0NjQsIi4vbW9kdWxlcy9lczcucmVmbGVjdC5nZXQtbWV0YWRhdGEiOjQ2NiwiLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1tZXRhZGF0YS1rZXlzIjo0NjUsIi4vbW9kdWxlcy9lczcucmVmbGVjdC5nZXQtb3duLW1ldGFkYXRhIjo0NjgsIi4vbW9kdWxlcy9lczcucmVmbGVjdC5nZXQtb3duLW1ldGFkYXRhLWtleXMiOjQ2NywiLi9tb2R1bGVzL2VzNy5yZWZsZWN0Lmhhcy1tZXRhZGF0YSI6NDY5LCIuL21vZHVsZXMvZXM3LnJlZmxlY3QuaGFzLW93bi1tZXRhZGF0YSI6NDcwLCIuL21vZHVsZXMvZXM3LnJlZmxlY3QubWV0YWRhdGEiOjQ3MSwiLi9tb2R1bGVzL2VzNy5zZXQudG8tanNvbiI6NDcyLCIuL21vZHVsZXMvZXM3LnN0cmluZy5hdCI6NDczLCIuL21vZHVsZXMvZXM3LnN0cmluZy5tYXRjaC1hbGwiOjQ3NCwiLi9tb2R1bGVzL2VzNy5zdHJpbmcucGFkLWVuZCI6NDc1LCIuL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtc3RhcnQiOjQ3NiwiLi9tb2R1bGVzL2VzNy5zdHJpbmcudHJpbS1sZWZ0Ijo0NzcsIi4vbW9kdWxlcy9lczcuc3RyaW5nLnRyaW0tcmlnaHQiOjQ3OCwiLi9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IiOjQ3OSwiLi9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZSI6NDgwLCIuL21vZHVsZXMvZXM3LnN5c3RlbS5nbG9iYWwiOjQ4MSwiLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOjQ4MiwiLi9tb2R1bGVzL3dlYi5pbW1lZGlhdGUiOjQ4MywiLi9tb2R1bGVzL3dlYi50aW1lcnMiOjQ4NH1dLDQ4NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQovLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy4NCi8vDQovLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYQ0KLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZQ0KLy8gIlNvZnR3YXJlIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZw0KLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLA0KLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdA0KLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlDQovLyBmb2xsb3dpbmcgY29uZGl0aW9uczoNCi8vDQovLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZA0KLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuDQovLw0KLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MNCi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YNCi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4NCi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLA0KLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SDQovLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFDQovLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLg0KDQovLyBOT1RFOiBUaGVzZSB0eXBlIGNoZWNraW5nIGZ1bmN0aW9ucyBpbnRlbnRpb25hbGx5IGRvbid0IHVzZSBgaW5zdGFuY2VvZmANCi8vIGJlY2F1c2UgaXQgaXMgZnJhZ2lsZSBhbmQgY2FuIGJlIGVhc2lseSBmYWtlZCB3aXRoIGBPYmplY3QuY3JlYXRlKClgLg0KDQpmdW5jdGlvbiBpc0FycmF5KGFyZykgew0KICBpZiAoQXJyYXkuaXNBcnJheSkgew0KICAgIHJldHVybiBBcnJheS5pc0FycmF5KGFyZyk7DQogIH0NCiAgcmV0dXJuIG9iamVjdFRvU3RyaW5nKGFyZykgPT09ICdbb2JqZWN0IEFycmF5XSc7DQp9DQpleHBvcnRzLmlzQXJyYXkgPSBpc0FycmF5Ow0KDQpmdW5jdGlvbiBpc0Jvb2xlYW4oYXJnKSB7DQogIHJldHVybiB0eXBlb2YgYXJnID09PSAnYm9vbGVhbic7DQp9DQpleHBvcnRzLmlzQm9vbGVhbiA9IGlzQm9vbGVhbjsNCg0KZnVuY3Rpb24gaXNOdWxsKGFyZykgew0KICByZXR1cm4gYXJnID09PSBudWxsOw0KfQ0KZXhwb3J0cy5pc051bGwgPSBpc051bGw7DQoNCmZ1bmN0aW9uIGlzTnVsbE9yVW5kZWZpbmVkKGFyZykgew0KICByZXR1cm4gYXJnID09IG51bGw7DQp9DQpleHBvcnRzLmlzTnVsbE9yVW5kZWZpbmVkID0gaXNOdWxsT3JVbmRlZmluZWQ7DQoNCmZ1bmN0aW9uIGlzTnVtYmVyKGFyZykgew0KICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ251bWJlcic7DQp9DQpleHBvcnRzLmlzTnVtYmVyID0gaXNOdW1iZXI7DQoNCmZ1bmN0aW9uIGlzU3RyaW5nKGFyZykgew0KICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ3N0cmluZyc7DQp9DQpleHBvcnRzLmlzU3RyaW5nID0gaXNTdHJpbmc7DQoNCmZ1bmN0aW9uIGlzU3ltYm9sKGFyZykgew0KICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ3N5bWJvbCc7DQp9DQpleHBvcnRzLmlzU3ltYm9sID0gaXNTeW1ib2w7DQoNCmZ1bmN0aW9uIGlzVW5kZWZpbmVkKGFyZykgew0KICByZXR1cm4gYXJnID09PSB2b2lkIDA7DQp9DQpleHBvcnRzLmlzVW5kZWZpbmVkID0gaXNVbmRlZmluZWQ7DQoNCmZ1bmN0aW9uIGlzUmVnRXhwKHJlKSB7DQogIHJldHVybiBvYmplY3RUb1N0cmluZyhyZSkgPT09ICdbb2JqZWN0IFJlZ0V4cF0nOw0KfQ0KZXhwb3J0cy5pc1JlZ0V4cCA9IGlzUmVnRXhwOw0KDQpmdW5jdGlvbiBpc09iamVjdChhcmcpIHsNCiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdvYmplY3QnICYmIGFyZyAhPT0gbnVsbDsNCn0NCmV4cG9ydHMuaXNPYmplY3QgPSBpc09iamVjdDsNCg0KZnVuY3Rpb24gaXNEYXRlKGQpIHsNCiAgcmV0dXJuIG9iamVjdFRvU3RyaW5nKGQpID09PSAnW29iamVjdCBEYXRlXSc7DQp9DQpleHBvcnRzLmlzRGF0ZSA9IGlzRGF0ZTsNCg0KZnVuY3Rpb24gaXNFcnJvcihlKSB7DQogIHJldHVybiAob2JqZWN0VG9TdHJpbmcoZSkgPT09ICdbb2JqZWN0IEVycm9yXScgfHwgZSBpbnN0YW5jZW9mIEVycm9yKTsNCn0NCmV4cG9ydHMuaXNFcnJvciA9IGlzRXJyb3I7DQoNCmZ1bmN0aW9uIGlzRnVuY3Rpb24oYXJnKSB7DQogIHJldHVybiB0eXBlb2YgYXJnID09PSAnZnVuY3Rpb24nOw0KfQ0KZXhwb3J0cy5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjsNCg0KZnVuY3Rpb24gaXNQcmltaXRpdmUoYXJnKSB7DQogIHJldHVybiBhcmcgPT09IG51bGwgfHwNCiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdib29sZWFuJyB8fA0KICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ251bWJlcicgfHwNCiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnIHx8DQogICAgICAgICB0eXBlb2YgYXJnID09PSAnc3ltYm9sJyB8fCAgLy8gRVM2IHN5bWJvbA0KICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3VuZGVmaW5lZCc7DQp9DQpleHBvcnRzLmlzUHJpbWl0aXZlID0gaXNQcmltaXRpdmU7DQoNCmV4cG9ydHMuaXNCdWZmZXIgPSBCdWZmZXIuaXNCdWZmZXI7DQoNCmZ1bmN0aW9uIG9iamVjdFRvU3RyaW5nKG8pIHsNCiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKTsNCn0NCg0KfSkuY2FsbCh0aGlzLHsiaXNCdWZmZXIiOnJlcXVpcmUoIi4uLy4uL2lzLWJ1ZmZlci9pbmRleC5qcyIpfSkNCn0seyIuLi8uLi9pcy1idWZmZXIvaW5kZXguanMiOjUzOH1dLDQ4NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQp2YXIgZWxsaXB0aWMgPSByZXF1aXJlKCdlbGxpcHRpYycpOw0KdmFyIEJOID0gcmVxdWlyZSgnYm4uanMnKTsNCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVFQ0RIKGN1cnZlKSB7DQoJcmV0dXJuIG5ldyBFQ0RIKGN1cnZlKTsNCn07DQoNCnZhciBhbGlhc2VzID0gew0KCXNlY3AyNTZrMTogew0KCQluYW1lOiAnc2VjcDI1NmsxJywNCgkJYnl0ZUxlbmd0aDogMzINCgl9LA0KCXNlY3AyMjRyMTogew0KCQluYW1lOiAncDIyNCcsDQoJCWJ5dGVMZW5ndGg6IDI4DQoJfSwNCglwcmltZTI1NnYxOiB7DQoJCW5hbWU6ICdwMjU2JywNCgkJYnl0ZUxlbmd0aDogMzINCgl9LA0KCXByaW1lMTkydjE6IHsNCgkJbmFtZTogJ3AxOTInLA0KCQlieXRlTGVuZ3RoOiAyNA0KCX0sDQoJZWQyNTUxOTogew0KCQluYW1lOiAnZWQyNTUxOScsDQoJCWJ5dGVMZW5ndGg6IDMyDQoJfSwNCglzZWNwMzg0cjE6IHsNCgkJbmFtZTogJ3AzODQnLA0KCQlieXRlTGVuZ3RoOiA0OA0KCX0sDQoJc2VjcDUyMXIxOiB7DQoJCW5hbWU6ICdwNTIxJywNCgkJYnl0ZUxlbmd0aDogNjYNCgl9DQp9Ow0KDQphbGlhc2VzLnAyMjQgPSBhbGlhc2VzLnNlY3AyMjRyMTsNCmFsaWFzZXMucDI1NiA9IGFsaWFzZXMuc2VjcDI1NnIxID0gYWxpYXNlcy5wcmltZTI1NnYxOw0KYWxpYXNlcy5wMTkyID0gYWxpYXNlcy5zZWNwMTkycjEgPSBhbGlhc2VzLnByaW1lMTkydjE7DQphbGlhc2VzLnAzODQgPSBhbGlhc2VzLnNlY3AzODRyMTsNCmFsaWFzZXMucDUyMSA9IGFsaWFzZXMuc2VjcDUyMXIxOw0KDQpmdW5jdGlvbiBFQ0RIKGN1cnZlKSB7DQoJdGhpcy5jdXJ2ZVR5cGUgPSBhbGlhc2VzW2N1cnZlXTsNCglpZiAoIXRoaXMuY3VydmVUeXBlICkgew0KCQl0aGlzLmN1cnZlVHlwZSA9IHsNCgkJCW5hbWU6IGN1cnZlDQoJCX07DQoJfQ0KCXRoaXMuY3VydmUgPSBuZXcgZWxsaXB0aWMuZWModGhpcy5jdXJ2ZVR5cGUubmFtZSk7DQoJdGhpcy5rZXlzID0gdm9pZCAwOw0KfQ0KDQpFQ0RILnByb3RvdHlwZS5nZW5lcmF0ZUtleXMgPSBmdW5jdGlvbiAoZW5jLCBmb3JtYXQpIHsNCgl0aGlzLmtleXMgPSB0aGlzLmN1cnZlLmdlbktleVBhaXIoKTsNCglyZXR1cm4gdGhpcy5nZXRQdWJsaWNLZXkoZW5jLCBmb3JtYXQpOw0KfTsNCg0KRUNESC5wcm90b3R5cGUuY29tcHV0ZVNlY3JldCA9IGZ1bmN0aW9uIChvdGhlciwgaW5lbmMsIGVuYykgew0KCWluZW5jID0gaW5lbmMgfHwgJ3V0ZjgnOw0KCWlmICghQnVmZmVyLmlzQnVmZmVyKG90aGVyKSkgew0KCQlvdGhlciA9IG5ldyBCdWZmZXIob3RoZXIsIGluZW5jKTsNCgl9DQoJdmFyIG90aGVyUHViID0gdGhpcy5jdXJ2ZS5rZXlGcm9tUHVibGljKG90aGVyKS5nZXRQdWJsaWMoKTsNCgl2YXIgb3V0ID0gb3RoZXJQdWIubXVsKHRoaXMua2V5cy5nZXRQcml2YXRlKCkpLmdldFgoKTsNCglyZXR1cm4gZm9ybWF0UmV0dXJuVmFsdWUob3V0LCBlbmMsIHRoaXMuY3VydmVUeXBlLmJ5dGVMZW5ndGgpOw0KfTsNCg0KRUNESC5wcm90b3R5cGUuZ2V0UHVibGljS2V5ID0gZnVuY3Rpb24gKGVuYywgZm9ybWF0KSB7DQoJdmFyIGtleSA9IHRoaXMua2V5cy5nZXRQdWJsaWMoZm9ybWF0ID09PSAnY29tcHJlc3NlZCcsIHRydWUpOw0KCWlmIChmb3JtYXQgPT09ICdoeWJyaWQnKSB7DQoJCWlmIChrZXlba2V5Lmxlbmd0aCAtIDFdICUgMikgew0KCQkJa2V5WzBdID0gNzsNCgkJfSBlbHNlIHsNCgkJCWtleSBbMF0gPSA2Ow0KCQl9DQoJfQ0KCXJldHVybiBmb3JtYXRSZXR1cm5WYWx1ZShrZXksIGVuYyk7DQp9Ow0KDQpFQ0RILnByb3RvdHlwZS5nZXRQcml2YXRlS2V5ID0gZnVuY3Rpb24gKGVuYykgew0KCXJldHVybiBmb3JtYXRSZXR1cm5WYWx1ZSh0aGlzLmtleXMuZ2V0UHJpdmF0ZSgpLCBlbmMpOw0KfTsNCg0KRUNESC5wcm90b3R5cGUuc2V0UHVibGljS2V5ID0gZnVuY3Rpb24gKHB1YiwgZW5jKSB7DQoJZW5jID0gZW5jIHx8ICd1dGY4JzsNCglpZiAoIUJ1ZmZlci5pc0J1ZmZlcihwdWIpKSB7DQoJCXB1YiA9IG5ldyBCdWZmZXIocHViLCBlbmMpOw0KCX0NCgl0aGlzLmtleXMuX2ltcG9ydFB1YmxpYyhwdWIpOw0KCXJldHVybiB0aGlzOw0KfTsNCg0KRUNESC5wcm90b3R5cGUuc2V0UHJpdmF0ZUtleSA9IGZ1bmN0aW9uIChwcml2LCBlbmMpIHsNCgllbmMgPSBlbmMgfHwgJ3V0ZjgnOw0KCWlmICghQnVmZmVyLmlzQnVmZmVyKHByaXYpKSB7DQoJCXByaXYgPSBuZXcgQnVmZmVyKHByaXYsIGVuYyk7DQoJfQ0KCXZhciBfcHJpdiA9IG5ldyBCTihwcml2KTsNCglfcHJpdiA9IF9wcml2LnRvU3RyaW5nKDE2KTsNCgl0aGlzLmtleXMuX2ltcG9ydFByaXZhdGUoX3ByaXYpOw0KCXJldHVybiB0aGlzOw0KfTsNCg0KZnVuY3Rpb24gZm9ybWF0UmV0dXJuVmFsdWUoYm4sIGVuYywgbGVuKSB7DQoJaWYgKCFBcnJheS5pc0FycmF5KGJuKSkgew0KCQlibiA9IGJuLnRvQXJyYXkoKTsNCgl9DQoJdmFyIGJ1ZiA9IG5ldyBCdWZmZXIoYm4pOw0KCWlmIChsZW4gJiYgYnVmLmxlbmd0aCA8IGxlbikgew0KCQl2YXIgemVyb3MgPSBuZXcgQnVmZmVyKGxlbiAtIGJ1Zi5sZW5ndGgpOw0KCQl6ZXJvcy5maWxsKDApOw0KCQlidWYgPSBCdWZmZXIuY29uY2F0KFt6ZXJvcywgYnVmXSk7DQoJfQ0KCWlmICghZW5jKSB7DQoJCXJldHVybiBidWY7DQoJfSBlbHNlIHsNCgkJcmV0dXJuIGJ1Zi50b1N0cmluZyhlbmMpOw0KCX0NCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJibi5qcyI6NTksImJ1ZmZlciI6OTMsImVsbGlwdGljIjo1MDh9XSw0ODg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KJ3VzZSBzdHJpY3QnOw0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKQ0KdmFyIG1kNSA9IHJlcXVpcmUoJy4vbWQ1JykNCnZhciBybWQxNjAgPSByZXF1aXJlKCdyaXBlbWQxNjAnKQ0KdmFyIHNoYSA9IHJlcXVpcmUoJ3NoYS5qcycpDQoNCnZhciBCYXNlID0gcmVxdWlyZSgnY2lwaGVyLWJhc2UnKQ0KDQpmdW5jdGlvbiBIYXNoTm9Db25zdHJ1Y3RvcihoYXNoKSB7DQogIEJhc2UuY2FsbCh0aGlzLCAnZGlnZXN0JykNCg0KICB0aGlzLl9oYXNoID0gaGFzaA0KICB0aGlzLmJ1ZmZlcnMgPSBbXQ0KfQ0KDQppbmhlcml0cyhIYXNoTm9Db25zdHJ1Y3RvciwgQmFzZSkNCg0KSGFzaE5vQ29uc3RydWN0b3IucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoZGF0YSkgew0KICB0aGlzLmJ1ZmZlcnMucHVzaChkYXRhKQ0KfQ0KDQpIYXNoTm9Db25zdHJ1Y3Rvci5wcm90b3R5cGUuX2ZpbmFsID0gZnVuY3Rpb24gKCkgew0KICB2YXIgYnVmID0gQnVmZmVyLmNvbmNhdCh0aGlzLmJ1ZmZlcnMpDQogIHZhciByID0gdGhpcy5faGFzaChidWYpDQogIHRoaXMuYnVmZmVycyA9IG51bGwNCg0KICByZXR1cm4gcg0KfQ0KDQpmdW5jdGlvbiBIYXNoKGhhc2gpIHsNCiAgQmFzZS5jYWxsKHRoaXMsICdkaWdlc3QnKQ0KDQogIHRoaXMuX2hhc2ggPSBoYXNoDQp9DQoNCmluaGVyaXRzKEhhc2gsIEJhc2UpDQoNCkhhc2gucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoZGF0YSkgew0KICB0aGlzLl9oYXNoLnVwZGF0ZShkYXRhKQ0KfQ0KDQpIYXNoLnByb3RvdHlwZS5fZmluYWwgPSBmdW5jdGlvbiAoKSB7DQogIHJldHVybiB0aGlzLl9oYXNoLmRpZ2VzdCgpDQp9DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlSGFzaCAoYWxnKSB7DQogIGFsZyA9IGFsZy50b0xvd2VyQ2FzZSgpDQogIGlmICgnbWQ1JyA9PT0gYWxnKSByZXR1cm4gbmV3IEhhc2hOb0NvbnN0cnVjdG9yKG1kNSkNCiAgaWYgKCdybWQxNjAnID09PSBhbGcgfHwgJ3JpcGVtZDE2MCcgPT09IGFsZykgcmV0dXJuIG5ldyBIYXNoTm9Db25zdHJ1Y3RvcihybWQxNjApDQoNCiAgcmV0dXJuIG5ldyBIYXNoKHNoYShhbGcpKQ0KfQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vbWQ1Ijo0OTAsImJ1ZmZlciI6OTMsImNpcGhlci1iYXNlIjo5NCwiaW5oZXJpdHMiOjUzNywicmlwZW1kMTYwIjo1NjksInNoYS5qcyI6NTcyfV0sNDg5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCid1c2Ugc3RyaWN0JzsNCnZhciBpbnRTaXplID0gNDsNCnZhciB6ZXJvQnVmZmVyID0gbmV3IEJ1ZmZlcihpbnRTaXplKTsgemVyb0J1ZmZlci5maWxsKDApOw0KdmFyIGNocnN6ID0gODsNCg0KZnVuY3Rpb24gdG9BcnJheShidWYsIGJpZ0VuZGlhbikgew0KICBpZiAoKGJ1Zi5sZW5ndGggJSBpbnRTaXplKSAhPT0gMCkgew0KICAgIHZhciBsZW4gPSBidWYubGVuZ3RoICsgKGludFNpemUgLSAoYnVmLmxlbmd0aCAlIGludFNpemUpKTsNCiAgICBidWYgPSBCdWZmZXIuY29uY2F0KFtidWYsIHplcm9CdWZmZXJdLCBsZW4pOw0KICB9DQoNCiAgdmFyIGFyciA9IFtdOw0KICB2YXIgZm4gPSBiaWdFbmRpYW4gPyBidWYucmVhZEludDMyQkUgOiBidWYucmVhZEludDMyTEU7DQogIGZvciAodmFyIGkgPSAwOyBpIDwgYnVmLmxlbmd0aDsgaSArPSBpbnRTaXplKSB7DQogICAgYXJyLnB1c2goZm4uY2FsbChidWYsIGkpKTsNCiAgfQ0KICByZXR1cm4gYXJyOw0KfQ0KDQpmdW5jdGlvbiB0b0J1ZmZlcihhcnIsIHNpemUsIGJpZ0VuZGlhbikgew0KICB2YXIgYnVmID0gbmV3IEJ1ZmZlcihzaXplKTsNCiAgdmFyIGZuID0gYmlnRW5kaWFuID8gYnVmLndyaXRlSW50MzJCRSA6IGJ1Zi53cml0ZUludDMyTEU7DQogIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7DQogICAgZm4uY2FsbChidWYsIGFycltpXSwgaSAqIDQsIHRydWUpOw0KICB9DQogIHJldHVybiBidWY7DQp9DQoNCmZ1bmN0aW9uIGhhc2goYnVmLCBmbiwgaGFzaFNpemUsIGJpZ0VuZGlhbikgew0KICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihidWYpKSBidWYgPSBuZXcgQnVmZmVyKGJ1Zik7DQogIHZhciBhcnIgPSBmbih0b0FycmF5KGJ1ZiwgYmlnRW5kaWFuKSwgYnVmLmxlbmd0aCAqIGNocnN6KTsNCiAgcmV0dXJuIHRvQnVmZmVyKGFyciwgaGFzaFNpemUsIGJpZ0VuZGlhbik7DQp9DQpleHBvcnRzLmhhc2ggPSBoYXNoOw0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJidWZmZXIiOjkzfV0sNDkwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCi8qDQogKiBBIEphdmFTY3JpcHQgaW1wbGVtZW50YXRpb24gb2YgdGhlIFJTQSBEYXRhIFNlY3VyaXR5LCBJbmMuIE1ENSBNZXNzYWdlDQogKiBEaWdlc3QgQWxnb3JpdGhtLCBhcyBkZWZpbmVkIGluIFJGQyAxMzIxLg0KICogVmVyc2lvbiAyLjEgQ29weXJpZ2h0IChDKSBQYXVsIEpvaG5zdG9uIDE5OTkgLSAyMDAyLg0KICogT3RoZXIgY29udHJpYnV0b3JzOiBHcmVnIEhvbHQsIEFuZHJldyBLZXBlcnQsIFlkbmFyLCBMb3N0aW5ldA0KICogRGlzdHJpYnV0ZWQgdW5kZXIgdGhlIEJTRCBMaWNlbnNlDQogKiBTZWUgaHR0cDovL3BhamhvbWUub3JnLnVrL2NyeXB0L21kNSBmb3IgbW9yZSBpbmZvLg0KICovDQoNCnZhciBoZWxwZXJzID0gcmVxdWlyZSgnLi9oZWxwZXJzJyk7DQoNCi8qDQogKiBDYWxjdWxhdGUgdGhlIE1ENSBvZiBhbiBhcnJheSBvZiBsaXR0bGUtZW5kaWFuIHdvcmRzLCBhbmQgYSBiaXQgbGVuZ3RoDQogKi8NCmZ1bmN0aW9uIGNvcmVfbWQ1KHgsIGxlbikNCnsNCiAgLyogYXBwZW5kIHBhZGRpbmcgKi8NCiAgeFtsZW4gPj4gNV0gfD0gMHg4MCA8PCAoKGxlbikgJSAzMik7DQogIHhbKCgobGVuICsgNjQpID4+PiA5KSA8PCA0KSArIDE0XSA9IGxlbjsNCg0KICB2YXIgYSA9ICAxNzMyNTg0MTkzOw0KICB2YXIgYiA9IC0yNzE3MzM4Nzk7DQogIHZhciBjID0gLTE3MzI1ODQxOTQ7DQogIHZhciBkID0gIDI3MTczMzg3ODsNCg0KICBmb3IodmFyIGkgPSAwOyBpIDwgeC5sZW5ndGg7IGkgKz0gMTYpDQogIHsNCiAgICB2YXIgb2xkYSA9IGE7DQogICAgdmFyIG9sZGIgPSBiOw0KICAgIHZhciBvbGRjID0gYzsNCiAgICB2YXIgb2xkZCA9IGQ7DQoNCiAgICBhID0gbWQ1X2ZmKGEsIGIsIGMsIGQsIHhbaSsgMF0sIDcgLCAtNjgwODc2OTM2KTsNCiAgICBkID0gbWQ1X2ZmKGQsIGEsIGIsIGMsIHhbaSsgMV0sIDEyLCAtMzg5NTY0NTg2KTsNCiAgICBjID0gbWQ1X2ZmKGMsIGQsIGEsIGIsIHhbaSsgMl0sIDE3LCAgNjA2MTA1ODE5KTsNCiAgICBiID0gbWQ1X2ZmKGIsIGMsIGQsIGEsIHhbaSsgM10sIDIyLCAtMTA0NDUyNTMzMCk7DQogICAgYSA9IG1kNV9mZihhLCBiLCBjLCBkLCB4W2krIDRdLCA3ICwgLTE3NjQxODg5Nyk7DQogICAgZCA9IG1kNV9mZihkLCBhLCBiLCBjLCB4W2krIDVdLCAxMiwgIDEyMDAwODA0MjYpOw0KICAgIGMgPSBtZDVfZmYoYywgZCwgYSwgYiwgeFtpKyA2XSwgMTcsIC0xNDczMjMxMzQxKTsNCiAgICBiID0gbWQ1X2ZmKGIsIGMsIGQsIGEsIHhbaSsgN10sIDIyLCAtNDU3MDU5ODMpOw0KICAgIGEgPSBtZDVfZmYoYSwgYiwgYywgZCwgeFtpKyA4XSwgNyAsICAxNzcwMDM1NDE2KTsNCiAgICBkID0gbWQ1X2ZmKGQsIGEsIGIsIGMsIHhbaSsgOV0sIDEyLCAtMTk1ODQxNDQxNyk7DQogICAgYyA9IG1kNV9mZihjLCBkLCBhLCBiLCB4W2krMTBdLCAxNywgLTQyMDYzKTsNCiAgICBiID0gbWQ1X2ZmKGIsIGMsIGQsIGEsIHhbaSsxMV0sIDIyLCAtMTk5MDQwNDE2Mik7DQogICAgYSA9IG1kNV9mZihhLCBiLCBjLCBkLCB4W2krMTJdLCA3ICwgIDE4MDQ2MDM2ODIpOw0KICAgIGQgPSBtZDVfZmYoZCwgYSwgYiwgYywgeFtpKzEzXSwgMTIsIC00MDM0MTEwMSk7DQogICAgYyA9IG1kNV9mZihjLCBkLCBhLCBiLCB4W2krMTRdLCAxNywgLTE1MDIwMDIyOTApOw0KICAgIGIgPSBtZDVfZmYoYiwgYywgZCwgYSwgeFtpKzE1XSwgMjIsICAxMjM2NTM1MzI5KTsNCg0KICAgIGEgPSBtZDVfZ2coYSwgYiwgYywgZCwgeFtpKyAxXSwgNSAsIC0xNjU3OTY1MTApOw0KICAgIGQgPSBtZDVfZ2coZCwgYSwgYiwgYywgeFtpKyA2XSwgOSAsIC0xMDY5NTAxNjMyKTsNCiAgICBjID0gbWQ1X2dnKGMsIGQsIGEsIGIsIHhbaSsxMV0sIDE0LCAgNjQzNzE3NzEzKTsNCiAgICBiID0gbWQ1X2dnKGIsIGMsIGQsIGEsIHhbaSsgMF0sIDIwLCAtMzczODk3MzAyKTsNCiAgICBhID0gbWQ1X2dnKGEsIGIsIGMsIGQsIHhbaSsgNV0sIDUgLCAtNzAxNTU4NjkxKTsNCiAgICBkID0gbWQ1X2dnKGQsIGEsIGIsIGMsIHhbaSsxMF0sIDkgLCAgMzgwMTYwODMpOw0KICAgIGMgPSBtZDVfZ2coYywgZCwgYSwgYiwgeFtpKzE1XSwgMTQsIC02NjA0NzgzMzUpOw0KICAgIGIgPSBtZDVfZ2coYiwgYywgZCwgYSwgeFtpKyA0XSwgMjAsIC00MDU1Mzc4NDgpOw0KICAgIGEgPSBtZDVfZ2coYSwgYiwgYywgZCwgeFtpKyA5XSwgNSAsICA1Njg0NDY0MzgpOw0KICAgIGQgPSBtZDVfZ2coZCwgYSwgYiwgYywgeFtpKzE0XSwgOSAsIC0xMDE5ODAzNjkwKTsNCiAgICBjID0gbWQ1X2dnKGMsIGQsIGEsIGIsIHhbaSsgM10sIDE0LCAtMTg3MzYzOTYxKTsNCiAgICBiID0gbWQ1X2dnKGIsIGMsIGQsIGEsIHhbaSsgOF0sIDIwLCAgMTE2MzUzMTUwMSk7DQogICAgYSA9IG1kNV9nZyhhLCBiLCBjLCBkLCB4W2krMTNdLCA1ICwgLTE0NDQ2ODE0NjcpOw0KICAgIGQgPSBtZDVfZ2coZCwgYSwgYiwgYywgeFtpKyAyXSwgOSAsIC01MTQwMzc4NCk7DQogICAgYyA9IG1kNV9nZyhjLCBkLCBhLCBiLCB4W2krIDddLCAxNCwgIDE3MzUzMjg0NzMpOw0KICAgIGIgPSBtZDVfZ2coYiwgYywgZCwgYSwgeFtpKzEyXSwgMjAsIC0xOTI2NjA3NzM0KTsNCg0KICAgIGEgPSBtZDVfaGgoYSwgYiwgYywgZCwgeFtpKyA1XSwgNCAsIC0zNzg1NTgpOw0KICAgIGQgPSBtZDVfaGgoZCwgYSwgYiwgYywgeFtpKyA4XSwgMTEsIC0yMDIyNTc0NDYzKTsNCiAgICBjID0gbWQ1X2hoKGMsIGQsIGEsIGIsIHhbaSsxMV0sIDE2LCAgMTgzOTAzMDU2Mik7DQogICAgYiA9IG1kNV9oaChiLCBjLCBkLCBhLCB4W2krMTRdLCAyMywgLTM1MzA5NTU2KTsNCiAgICBhID0gbWQ1X2hoKGEsIGIsIGMsIGQsIHhbaSsgMV0sIDQgLCAtMTUzMDk5MjA2MCk7DQogICAgZCA9IG1kNV9oaChkLCBhLCBiLCBjLCB4W2krIDRdLCAxMSwgIDEyNzI4OTMzNTMpOw0KICAgIGMgPSBtZDVfaGgoYywgZCwgYSwgYiwgeFtpKyA3XSwgMTYsIC0xNTU0OTc2MzIpOw0KICAgIGIgPSBtZDVfaGgoYiwgYywgZCwgYSwgeFtpKzEwXSwgMjMsIC0xMDk0NzMwNjQwKTsNCiAgICBhID0gbWQ1X2hoKGEsIGIsIGMsIGQsIHhbaSsxM10sIDQgLCAgNjgxMjc5MTc0KTsNCiAgICBkID0gbWQ1X2hoKGQsIGEsIGIsIGMsIHhbaSsgMF0sIDExLCAtMzU4NTM3MjIyKTsNCiAgICBjID0gbWQ1X2hoKGMsIGQsIGEsIGIsIHhbaSsgM10sIDE2LCAtNzIyNTIxOTc5KTsNCiAgICBiID0gbWQ1X2hoKGIsIGMsIGQsIGEsIHhbaSsgNl0sIDIzLCAgNzYwMjkxODkpOw0KICAgIGEgPSBtZDVfaGgoYSwgYiwgYywgZCwgeFtpKyA5XSwgNCAsIC02NDAzNjQ0ODcpOw0KICAgIGQgPSBtZDVfaGgoZCwgYSwgYiwgYywgeFtpKzEyXSwgMTEsIC00MjE4MTU4MzUpOw0KICAgIGMgPSBtZDVfaGgoYywgZCwgYSwgYiwgeFtpKzE1XSwgMTYsICA1MzA3NDI1MjApOw0KICAgIGIgPSBtZDVfaGgoYiwgYywgZCwgYSwgeFtpKyAyXSwgMjMsIC05OTUzMzg2NTEpOw0KDQogICAgYSA9IG1kNV9paShhLCBiLCBjLCBkLCB4W2krIDBdLCA2ICwgLTE5ODYzMDg0NCk7DQogICAgZCA9IG1kNV9paShkLCBhLCBiLCBjLCB4W2krIDddLCAxMCwgIDExMjY4OTE0MTUpOw0KICAgIGMgPSBtZDVfaWkoYywgZCwgYSwgYiwgeFtpKzE0XSwgMTUsIC0xNDE2MzU0OTA1KTsNCiAgICBiID0gbWQ1X2lpKGIsIGMsIGQsIGEsIHhbaSsgNV0sIDIxLCAtNTc0MzQwNTUpOw0KICAgIGEgPSBtZDVfaWkoYSwgYiwgYywgZCwgeFtpKzEyXSwgNiAsICAxNzAwNDg1NTcxKTsNCiAgICBkID0gbWQ1X2lpKGQsIGEsIGIsIGMsIHhbaSsgM10sIDEwLCAtMTg5NDk4NjYwNik7DQogICAgYyA9IG1kNV9paShjLCBkLCBhLCBiLCB4W2krMTBdLCAxNSwgLTEwNTE1MjMpOw0KICAgIGIgPSBtZDVfaWkoYiwgYywgZCwgYSwgeFtpKyAxXSwgMjEsIC0yMDU0OTIyNzk5KTsNCiAgICBhID0gbWQ1X2lpKGEsIGIsIGMsIGQsIHhbaSsgOF0sIDYgLCAgMTg3MzMxMzM1OSk7DQogICAgZCA9IG1kNV9paShkLCBhLCBiLCBjLCB4W2krMTVdLCAxMCwgLTMwNjExNzQ0KTsNCiAgICBjID0gbWQ1X2lpKGMsIGQsIGEsIGIsIHhbaSsgNl0sIDE1LCAtMTU2MDE5ODM4MCk7DQogICAgYiA9IG1kNV9paShiLCBjLCBkLCBhLCB4W2krMTNdLCAyMSwgIDEzMDkxNTE2NDkpOw0KICAgIGEgPSBtZDVfaWkoYSwgYiwgYywgZCwgeFtpKyA0XSwgNiAsIC0xNDU1MjMwNzApOw0KICAgIGQgPSBtZDVfaWkoZCwgYSwgYiwgYywgeFtpKzExXSwgMTAsIC0xMTIwMjEwMzc5KTsNCiAgICBjID0gbWQ1X2lpKGMsIGQsIGEsIGIsIHhbaSsgMl0sIDE1LCAgNzE4Nzg3MjU5KTsNCiAgICBiID0gbWQ1X2lpKGIsIGMsIGQsIGEsIHhbaSsgOV0sIDIxLCAtMzQzNDg1NTUxKTsNCg0KICAgIGEgPSBzYWZlX2FkZChhLCBvbGRhKTsNCiAgICBiID0gc2FmZV9hZGQoYiwgb2xkYik7DQogICAgYyA9IHNhZmVfYWRkKGMsIG9sZGMpOw0KICAgIGQgPSBzYWZlX2FkZChkLCBvbGRkKTsNCiAgfQ0KICByZXR1cm4gQXJyYXkoYSwgYiwgYywgZCk7DQoNCn0NCg0KLyoNCiAqIFRoZXNlIGZ1bmN0aW9ucyBpbXBsZW1lbnQgdGhlIGZvdXIgYmFzaWMgb3BlcmF0aW9ucyB0aGUgYWxnb3JpdGhtIHVzZXMuDQogKi8NCmZ1bmN0aW9uIG1kNV9jbW4ocSwgYSwgYiwgeCwgcywgdCkNCnsNCiAgcmV0dXJuIHNhZmVfYWRkKGJpdF9yb2woc2FmZV9hZGQoc2FmZV9hZGQoYSwgcSksIHNhZmVfYWRkKHgsIHQpKSwgcyksYik7DQp9DQpmdW5jdGlvbiBtZDVfZmYoYSwgYiwgYywgZCwgeCwgcywgdCkNCnsNCiAgcmV0dXJuIG1kNV9jbW4oKGIgJiBjKSB8ICgofmIpICYgZCksIGEsIGIsIHgsIHMsIHQpOw0KfQ0KZnVuY3Rpb24gbWQ1X2dnKGEsIGIsIGMsIGQsIHgsIHMsIHQpDQp7DQogIHJldHVybiBtZDVfY21uKChiICYgZCkgfCAoYyAmICh+ZCkpLCBhLCBiLCB4LCBzLCB0KTsNCn0NCmZ1bmN0aW9uIG1kNV9oaChhLCBiLCBjLCBkLCB4LCBzLCB0KQ0Kew0KICByZXR1cm4gbWQ1X2NtbihiIF4gYyBeIGQsIGEsIGIsIHgsIHMsIHQpOw0KfQ0KZnVuY3Rpb24gbWQ1X2lpKGEsIGIsIGMsIGQsIHgsIHMsIHQpDQp7DQogIHJldHVybiBtZDVfY21uKGMgXiAoYiB8ICh+ZCkpLCBhLCBiLCB4LCBzLCB0KTsNCn0NCg0KLyoNCiAqIEFkZCBpbnRlZ2Vycywgd3JhcHBpbmcgYXQgMl4zMi4gVGhpcyB1c2VzIDE2LWJpdCBvcGVyYXRpb25zIGludGVybmFsbHkNCiAqIHRvIHdvcmsgYXJvdW5kIGJ1Z3MgaW4gc29tZSBKUyBpbnRlcnByZXRlcnMuDQogKi8NCmZ1bmN0aW9uIHNhZmVfYWRkKHgsIHkpDQp7DQogIHZhciBsc3cgPSAoeCAmIDB4RkZGRikgKyAoeSAmIDB4RkZGRik7DQogIHZhciBtc3cgPSAoeCA+PiAxNikgKyAoeSA+PiAxNikgKyAobHN3ID4+IDE2KTsNCiAgcmV0dXJuIChtc3cgPDwgMTYpIHwgKGxzdyAmIDB4RkZGRik7DQp9DQoNCi8qDQogKiBCaXR3aXNlIHJvdGF0ZSBhIDMyLWJpdCBudW1iZXIgdG8gdGhlIGxlZnQuDQogKi8NCmZ1bmN0aW9uIGJpdF9yb2wobnVtLCBjbnQpDQp7DQogIHJldHVybiAobnVtIDw8IGNudCkgfCAobnVtID4+PiAoMzIgLSBjbnQpKTsNCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtZDUoYnVmKSB7DQogIHJldHVybiBoZWxwZXJzLmhhc2goYnVmLCBjb3JlX21kNSwgMTYpOw0KfTsNCn0seyIuL2hlbHBlcnMiOjQ4OX1dLDQ5MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQondXNlIHN0cmljdCc7DQp2YXIgY3JlYXRlSGFzaCA9IHJlcXVpcmUoJ2NyZWF0ZS1oYXNoL2Jyb3dzZXInKTsNCnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJykNCg0KdmFyIFRyYW5zZm9ybSA9IHJlcXVpcmUoJ3N0cmVhbScpLlRyYW5zZm9ybQ0KDQp2YXIgWkVST1MgPSBuZXcgQnVmZmVyKDEyOCkNClpFUk9TLmZpbGwoMCkNCg0KZnVuY3Rpb24gSG1hYyhhbGcsIGtleSkgew0KICBUcmFuc2Zvcm0uY2FsbCh0aGlzKQ0KICBhbGcgPSBhbGcudG9Mb3dlckNhc2UoKQ0KICBpZiAodHlwZW9mIGtleSA9PT0gJ3N0cmluZycpIHsNCiAgICBrZXkgPSBuZXcgQnVmZmVyKGtleSkNCiAgfQ0KDQogIHZhciBibG9ja3NpemUgPSAoYWxnID09PSAnc2hhNTEyJyB8fCBhbGcgPT09ICdzaGEzODQnKSA/IDEyOCA6IDY0DQoNCiAgdGhpcy5fYWxnID0gYWxnDQogIHRoaXMuX2tleSA9IGtleQ0KDQogIGlmIChrZXkubGVuZ3RoID4gYmxvY2tzaXplKSB7DQogICAga2V5ID0gY3JlYXRlSGFzaChhbGcpLnVwZGF0ZShrZXkpLmRpZ2VzdCgpDQoNCiAgfSBlbHNlIGlmIChrZXkubGVuZ3RoIDwgYmxvY2tzaXplKSB7DQogICAga2V5ID0gQnVmZmVyLmNvbmNhdChba2V5LCBaRVJPU10sIGJsb2Nrc2l6ZSkNCiAgfQ0KDQogIHZhciBpcGFkID0gdGhpcy5faXBhZCA9IG5ldyBCdWZmZXIoYmxvY2tzaXplKQ0KICB2YXIgb3BhZCA9IHRoaXMuX29wYWQgPSBuZXcgQnVmZmVyKGJsb2Nrc2l6ZSkNCg0KICBmb3IgKHZhciBpID0gMDsgaSA8IGJsb2Nrc2l6ZTsgaSsrKSB7DQogICAgaXBhZFtpXSA9IGtleVtpXSBeIDB4MzYNCiAgICBvcGFkW2ldID0ga2V5W2ldIF4gMHg1Qw0KICB9DQoNCiAgdGhpcy5faGFzaCA9IGNyZWF0ZUhhc2goYWxnKS51cGRhdGUoaXBhZCkNCn0NCg0KaW5oZXJpdHMoSG1hYywgVHJhbnNmb3JtKQ0KDQpIbWFjLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoZGF0YSwgZW5jKSB7DQogIHRoaXMuX2hhc2gudXBkYXRlKGRhdGEsIGVuYykNCg0KICByZXR1cm4gdGhpcw0KfQ0KDQpIbWFjLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24gKGRhdGEsIF8sIG5leHQpIHsNCiAgdGhpcy5faGFzaC51cGRhdGUoZGF0YSkNCg0KICBuZXh0KCkNCn0NCg0KSG1hYy5wcm90b3R5cGUuX2ZsdXNoID0gZnVuY3Rpb24gKG5leHQpIHsNCiAgdGhpcy5wdXNoKHRoaXMuZGlnZXN0KCkpDQoNCiAgbmV4dCgpDQp9DQoNCkhtYWMucHJvdG90eXBlLmRpZ2VzdCA9IGZ1bmN0aW9uIChlbmMpIHsNCiAgdmFyIGggPSB0aGlzLl9oYXNoLmRpZ2VzdCgpDQoNCiAgcmV0dXJuIGNyZWF0ZUhhc2godGhpcy5fYWxnKS51cGRhdGUodGhpcy5fb3BhZCkudXBkYXRlKGgpLmRpZ2VzdChlbmMpDQp9DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlSG1hYyhhbGcsIGtleSkgew0KICByZXR1cm4gbmV3IEhtYWMoYWxnLCBrZXkpDQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiYnVmZmVyIjo5MywiY3JlYXRlLWhhc2gvYnJvd3NlciI6NDg4LCJpbmhlcml0cyI6NTM3LCJzdHJlYW0iOjU4MH1dLDQ5MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCcNCg0KZXhwb3J0cy5yYW5kb21CeXRlcyA9IGV4cG9ydHMucm5nID0gZXhwb3J0cy5wc2V1ZG9SYW5kb21CeXRlcyA9IGV4cG9ydHMucHJuZyA9IHJlcXVpcmUoJ3JhbmRvbWJ5dGVzJykNCmV4cG9ydHMuY3JlYXRlSGFzaCA9IGV4cG9ydHMuSGFzaCA9IHJlcXVpcmUoJ2NyZWF0ZS1oYXNoJykNCmV4cG9ydHMuY3JlYXRlSG1hYyA9IGV4cG9ydHMuSG1hYyA9IHJlcXVpcmUoJ2NyZWF0ZS1obWFjJykNCg0KdmFyIGhhc2hlcyA9IFsnc2hhMScsICdzaGEyMjQnLCAnc2hhMjU2JywgJ3NoYTM4NCcsICdzaGE1MTInLCAnbWQ1JywgJ3JtZDE2MCddLmNvbmNhdChPYmplY3Qua2V5cyhyZXF1aXJlKCdicm93c2VyaWZ5LXNpZ24vYWxnb3MnKSkpDQpleHBvcnRzLmdldEhhc2hlcyA9IGZ1bmN0aW9uICgpIHsNCiAgcmV0dXJuIGhhc2hlcw0KfQ0KDQp2YXIgcCA9IHJlcXVpcmUoJ3Bia2RmMicpDQpleHBvcnRzLnBia2RmMiA9IHAucGJrZGYyDQpleHBvcnRzLnBia2RmMlN5bmMgPSBwLnBia2RmMlN5bmMNCg0KdmFyIGFlcyA9IHJlcXVpcmUoJ2Jyb3dzZXJpZnktY2lwaGVyJykNCjtbDQogICdDaXBoZXInLA0KICAnY3JlYXRlQ2lwaGVyJywNCiAgJ0NpcGhlcml2JywNCiAgJ2NyZWF0ZUNpcGhlcml2JywNCiAgJ0RlY2lwaGVyJywNCiAgJ2NyZWF0ZURlY2lwaGVyJywNCiAgJ0RlY2lwaGVyaXYnLA0KICAnY3JlYXRlRGVjaXBoZXJpdicsDQogICdnZXRDaXBoZXJzJywNCiAgJ2xpc3RDaXBoZXJzJw0KXS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsNCiAgZXhwb3J0c1trZXldID0gYWVzW2tleV0NCn0pDQoNCnZhciBkaCA9IHJlcXVpcmUoJ2RpZmZpZS1oZWxsbWFuJykNCjtbDQogICdEaWZmaWVIZWxsbWFuR3JvdXAnLA0KICAnY3JlYXRlRGlmZmllSGVsbG1hbkdyb3VwJywNCiAgJ2dldERpZmZpZUhlbGxtYW4nLA0KICAnY3JlYXRlRGlmZmllSGVsbG1hbicsDQogICdEaWZmaWVIZWxsbWFuJw0KXS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsNCiAgZXhwb3J0c1trZXldID0gZGhba2V5XQ0KfSkNCg0KdmFyIHNpZ24gPSByZXF1aXJlKCdicm93c2VyaWZ5LXNpZ24nKQ0KO1sNCiAgJ2NyZWF0ZVNpZ24nLA0KICAnU2lnbicsDQogICdjcmVhdGVWZXJpZnknLA0KICAnVmVyaWZ5Jw0KXS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsNCiAgZXhwb3J0c1trZXldID0gc2lnbltrZXldDQp9KQ0KDQpleHBvcnRzLmNyZWF0ZUVDREggPSByZXF1aXJlKCdjcmVhdGUtZWNkaCcpDQoNCnZhciBwdWJsaWNFbmNyeXB0ID0gcmVxdWlyZSgncHVibGljLWVuY3J5cHQnKQ0KDQo7Ww0KICAncHVibGljRW5jcnlwdCcsDQogICdwcml2YXRlRW5jcnlwdCcsDQogICdwdWJsaWNEZWNyeXB0JywNCiAgJ3ByaXZhdGVEZWNyeXB0Jw0KXS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsNCiAgZXhwb3J0c1trZXldID0gcHVibGljRW5jcnlwdFtrZXldDQp9KQ0KDQovLyB0aGUgbGVhc3QgSSBjYW4gZG8gaXMgbWFrZSBlcnJvciBtZXNzYWdlcyBmb3IgdGhlIHJlc3Qgb2YgdGhlIG5vZGUuanMvY3J5cHRvIGFwaS4NCjtbDQogICdjcmVhdGVDcmVkZW50aWFscycNCl0uZm9yRWFjaChmdW5jdGlvbiAobmFtZSkgew0KICBleHBvcnRzW25hbWVdID0gZnVuY3Rpb24gKCkgew0KICAgIHRocm93IG5ldyBFcnJvcihbDQogICAgICAnc29ycnksICcgKyBuYW1lICsgJyBpcyBub3QgaW1wbGVtZW50ZWQgeWV0JywNCiAgICAgICd3ZSBhY2NlcHQgcHVsbCByZXF1ZXN0cycsDQogICAgICAnaHR0cHM6Ly9naXRodWIuY29tL2NyeXB0by1icm93c2VyaWZ5L2NyeXB0by1icm93c2VyaWZ5Jw0KICAgIF0uam9pbignXG4nKSkNCiAgfQ0KfSkNCg0KfSx7ImJyb3dzZXJpZnktY2lwaGVyIjo3NywiYnJvd3NlcmlmeS1zaWduIjo4MiwiYnJvd3NlcmlmeS1zaWduL2FsZ29zIjo4MSwiY3JlYXRlLWVjZGgiOjQ4NywiY3JlYXRlLWhhc2giOjQ4OCwiY3JlYXRlLWhtYWMiOjQ5MSwiZGlmZmllLWhlbGxtYW4iOjQ5OSwicGJrZGYyIjo1NDksInB1YmxpYy1lbmNyeXB0Ijo1NTIsInJhbmRvbWJ5dGVzIjo1NTh9XSw0OTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQpleHBvcnRzLnV0aWxzID0gcmVxdWlyZSgnLi9kZXMvdXRpbHMnKTsNCmV4cG9ydHMuQ2lwaGVyID0gcmVxdWlyZSgnLi9kZXMvY2lwaGVyJyk7DQpleHBvcnRzLkRFUyA9IHJlcXVpcmUoJy4vZGVzL2RlcycpOw0KZXhwb3J0cy5DQkMgPSByZXF1aXJlKCcuL2Rlcy9jYmMnKTsNCmV4cG9ydHMuRURFID0gcmVxdWlyZSgnLi9kZXMvZWRlJyk7DQoNCn0seyIuL2Rlcy9jYmMiOjQ5NCwiLi9kZXMvY2lwaGVyIjo0OTUsIi4vZGVzL2RlcyI6NDk2LCIuL2Rlcy9lZGUiOjQ5NywiLi9kZXMvdXRpbHMiOjQ5OH1dLDQ5NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQoNCnZhciBhc3NlcnQgPSByZXF1aXJlKCdtaW5pbWFsaXN0aWMtYXNzZXJ0Jyk7DQp2YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpOw0KDQp2YXIgcHJvdG8gPSB7fTsNCg0KZnVuY3Rpb24gQ0JDU3RhdGUoaXYpIHsNCiAgYXNzZXJ0LmVxdWFsKGl2Lmxlbmd0aCwgOCwgJ0ludmFsaWQgSVYgbGVuZ3RoJyk7DQoNCiAgdGhpcy5pdiA9IG5ldyBBcnJheSg4KTsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLml2Lmxlbmd0aDsgaSsrKQ0KICAgIHRoaXMuaXZbaV0gPSBpdltpXTsNCn0NCg0KZnVuY3Rpb24gaW5zdGFudGlhdGUoQmFzZSkgew0KICBmdW5jdGlvbiBDQkMob3B0aW9ucykgew0KICAgIEJhc2UuY2FsbCh0aGlzLCBvcHRpb25zKTsNCiAgICB0aGlzLl9jYmNJbml0KCk7DQogIH0NCiAgaW5oZXJpdHMoQ0JDLCBCYXNlKTsNCg0KICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHByb3RvKTsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7DQogICAgdmFyIGtleSA9IGtleXNbaV07DQogICAgQ0JDLnByb3RvdHlwZVtrZXldID0gcHJvdG9ba2V5XTsNCiAgfQ0KDQogIENCQy5jcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUob3B0aW9ucykgew0KICAgIHJldHVybiBuZXcgQ0JDKG9wdGlvbnMpOw0KICB9Ow0KDQogIHJldHVybiBDQkM7DQp9DQoNCmV4cG9ydHMuaW5zdGFudGlhdGUgPSBpbnN0YW50aWF0ZTsNCg0KcHJvdG8uX2NiY0luaXQgPSBmdW5jdGlvbiBfY2JjSW5pdCgpIHsNCiAgdmFyIHN0YXRlID0gbmV3IENCQ1N0YXRlKHRoaXMub3B0aW9ucy5pdik7DQogIHRoaXMuX2NiY1N0YXRlID0gc3RhdGU7DQp9Ow0KDQpwcm90by5fdXBkYXRlID0gZnVuY3Rpb24gX3VwZGF0ZShpbnAsIGluT2ZmLCBvdXQsIG91dE9mZikgew0KICB2YXIgc3RhdGUgPSB0aGlzLl9jYmNTdGF0ZTsNCiAgdmFyIHN1cGVyUHJvdG8gPSB0aGlzLmNvbnN0cnVjdG9yLnN1cGVyXy5wcm90b3R5cGU7DQoNCiAgdmFyIGl2ID0gc3RhdGUuaXY7DQogIGlmICh0aGlzLnR5cGUgPT09ICdlbmNyeXB0Jykgew0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ibG9ja1NpemU7IGkrKykNCiAgICAgIGl2W2ldIF49IGlucFtpbk9mZiArIGldOw0KDQogICAgc3VwZXJQcm90by5fdXBkYXRlLmNhbGwodGhpcywgaXYsIDAsIG91dCwgb3V0T2ZmKTsNCg0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ibG9ja1NpemU7IGkrKykNCiAgICAgIGl2W2ldID0gb3V0W291dE9mZiArIGldOw0KICB9IGVsc2Ugew0KICAgIHN1cGVyUHJvdG8uX3VwZGF0ZS5jYWxsKHRoaXMsIGlucCwgaW5PZmYsIG91dCwgb3V0T2ZmKTsNCg0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ibG9ja1NpemU7IGkrKykNCiAgICAgIG91dFtvdXRPZmYgKyBpXSBePSBpdltpXTsNCg0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ibG9ja1NpemU7IGkrKykNCiAgICAgIGl2W2ldID0gaW5wW2luT2ZmICsgaV07DQogIH0NCn07DQoNCn0seyJpbmhlcml0cyI6NTM3LCJtaW5pbWFsaXN0aWMtYXNzZXJ0Ijo1NDJ9XSw0OTU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQp2YXIgYXNzZXJ0ID0gcmVxdWlyZSgnbWluaW1hbGlzdGljLWFzc2VydCcpOw0KDQpmdW5jdGlvbiBDaXBoZXIob3B0aW9ucykgew0KICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zOw0KDQogIHRoaXMudHlwZSA9IHRoaXMub3B0aW9ucy50eXBlOw0KICB0aGlzLmJsb2NrU2l6ZSA9IDg7DQogIHRoaXMuX2luaXQoKTsNCg0KICB0aGlzLmJ1ZmZlciA9IG5ldyBBcnJheSh0aGlzLmJsb2NrU2l6ZSk7DQogIHRoaXMuYnVmZmVyT2ZmID0gMDsNCn0NCm1vZHVsZS5leHBvcnRzID0gQ2lwaGVyOw0KDQpDaXBoZXIucHJvdG90eXBlLl9pbml0ID0gZnVuY3Rpb24gX2luaXQoKSB7DQogIC8vIE1pZ2h0IGJlIG92ZXJyaWRlZA0KfTsNCg0KQ2lwaGVyLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiB1cGRhdGUoZGF0YSkgew0KICBpZiAoZGF0YS5sZW5ndGggPT09IDApDQogICAgcmV0dXJuIFtdOw0KDQogIGlmICh0aGlzLnR5cGUgPT09ICdkZWNyeXB0JykNCiAgICByZXR1cm4gdGhpcy5fdXBkYXRlRGVjcnlwdChkYXRhKTsNCiAgZWxzZQ0KICAgIHJldHVybiB0aGlzLl91cGRhdGVFbmNyeXB0KGRhdGEpOw0KfTsNCg0KQ2lwaGVyLnByb3RvdHlwZS5fYnVmZmVyID0gZnVuY3Rpb24gX2J1ZmZlcihkYXRhLCBvZmYpIHsNCiAgLy8gQXBwZW5kIGRhdGEgdG8gYnVmZmVyDQogIHZhciBtaW4gPSBNYXRoLm1pbih0aGlzLmJ1ZmZlci5sZW5ndGggLSB0aGlzLmJ1ZmZlck9mZiwgZGF0YS5sZW5ndGggLSBvZmYpOw0KICBmb3IgKHZhciBpID0gMDsgaSA8IG1pbjsgaSsrKQ0KICAgIHRoaXMuYnVmZmVyW3RoaXMuYnVmZmVyT2ZmICsgaV0gPSBkYXRhW29mZiArIGldOw0KICB0aGlzLmJ1ZmZlck9mZiArPSBtaW47DQoNCiAgLy8gU2hpZnQgbmV4dA0KICByZXR1cm4gbWluOw0KfTsNCg0KQ2lwaGVyLnByb3RvdHlwZS5fZmx1c2hCdWZmZXIgPSBmdW5jdGlvbiBfZmx1c2hCdWZmZXIob3V0LCBvZmYpIHsNCiAgdGhpcy5fdXBkYXRlKHRoaXMuYnVmZmVyLCAwLCBvdXQsIG9mZik7DQogIHRoaXMuYnVmZmVyT2ZmID0gMDsNCiAgcmV0dXJuIHRoaXMuYmxvY2tTaXplOw0KfTsNCg0KQ2lwaGVyLnByb3RvdHlwZS5fdXBkYXRlRW5jcnlwdCA9IGZ1bmN0aW9uIF91cGRhdGVFbmNyeXB0KGRhdGEpIHsNCiAgdmFyIGlucHV0T2ZmID0gMDsNCiAgdmFyIG91dHB1dE9mZiA9IDA7DQoNCiAgdmFyIGNvdW50ID0gKCh0aGlzLmJ1ZmZlck9mZiArIGRhdGEubGVuZ3RoKSAvIHRoaXMuYmxvY2tTaXplKSB8IDA7DQogIHZhciBvdXQgPSBuZXcgQXJyYXkoY291bnQgKiB0aGlzLmJsb2NrU2l6ZSk7DQoNCiAgaWYgKHRoaXMuYnVmZmVyT2ZmICE9PSAwKSB7DQogICAgaW5wdXRPZmYgKz0gdGhpcy5fYnVmZmVyKGRhdGEsIGlucHV0T2ZmKTsNCg0KICAgIGlmICh0aGlzLmJ1ZmZlck9mZiA9PT0gdGhpcy5idWZmZXIubGVuZ3RoKQ0KICAgICAgb3V0cHV0T2ZmICs9IHRoaXMuX2ZsdXNoQnVmZmVyKG91dCwgb3V0cHV0T2ZmKTsNCiAgfQ0KDQogIC8vIFdyaXRlIGJsb2Nrcw0KICB2YXIgbWF4ID0gZGF0YS5sZW5ndGggLSAoKGRhdGEubGVuZ3RoIC0gaW5wdXRPZmYpICUgdGhpcy5ibG9ja1NpemUpOw0KICBmb3IgKDsgaW5wdXRPZmYgPCBtYXg7IGlucHV0T2ZmICs9IHRoaXMuYmxvY2tTaXplKSB7DQogICAgdGhpcy5fdXBkYXRlKGRhdGEsIGlucHV0T2ZmLCBvdXQsIG91dHB1dE9mZik7DQogICAgb3V0cHV0T2ZmICs9IHRoaXMuYmxvY2tTaXplOw0KICB9DQoNCiAgLy8gUXVldWUgcmVzdA0KICBmb3IgKDsgaW5wdXRPZmYgPCBkYXRhLmxlbmd0aDsgaW5wdXRPZmYrKywgdGhpcy5idWZmZXJPZmYrKykNCiAgICB0aGlzLmJ1ZmZlclt0aGlzLmJ1ZmZlck9mZl0gPSBkYXRhW2lucHV0T2ZmXTsNCg0KICByZXR1cm4gb3V0Ow0KfTsNCg0KQ2lwaGVyLnByb3RvdHlwZS5fdXBkYXRlRGVjcnlwdCA9IGZ1bmN0aW9uIF91cGRhdGVEZWNyeXB0KGRhdGEpIHsNCiAgdmFyIGlucHV0T2ZmID0gMDsNCiAgdmFyIG91dHB1dE9mZiA9IDA7DQoNCiAgdmFyIGNvdW50ID0gTWF0aC5jZWlsKCh0aGlzLmJ1ZmZlck9mZiArIGRhdGEubGVuZ3RoKSAvIHRoaXMuYmxvY2tTaXplKSAtIDE7DQogIHZhciBvdXQgPSBuZXcgQXJyYXkoY291bnQgKiB0aGlzLmJsb2NrU2l6ZSk7DQoNCiAgLy8gVE9ETyhpbmR1dG55KTogb3B0aW1pemUgaXQsIHRoaXMgaXMgZmFyIGZyb20gb3B0aW1hbA0KICBmb3IgKDsgY291bnQgPiAwOyBjb3VudC0tKSB7DQogICAgaW5wdXRPZmYgKz0gdGhpcy5fYnVmZmVyKGRhdGEsIGlucHV0T2ZmKTsNCiAgICBvdXRwdXRPZmYgKz0gdGhpcy5fZmx1c2hCdWZmZXIob3V0LCBvdXRwdXRPZmYpOw0KICB9DQoNCiAgLy8gQnVmZmVyIHJlc3Qgb2YgdGhlIGlucHV0DQogIGlucHV0T2ZmICs9IHRoaXMuX2J1ZmZlcihkYXRhLCBpbnB1dE9mZik7DQoNCiAgcmV0dXJuIG91dDsNCn07DQoNCkNpcGhlci5wcm90b3R5cGUuZmluYWwgPSBmdW5jdGlvbiBmaW5hbChidWZmZXIpIHsNCiAgdmFyIGZpcnN0Ow0KICBpZiAoYnVmZmVyKQ0KICAgIGZpcnN0ID0gdGhpcy51cGRhdGUoYnVmZmVyKTsNCg0KICB2YXIgbGFzdDsNCiAgaWYgKHRoaXMudHlwZSA9PT0gJ2VuY3J5cHQnKQ0KICAgIGxhc3QgPSB0aGlzLl9maW5hbEVuY3J5cHQoKTsNCiAgZWxzZQ0KICAgIGxhc3QgPSB0aGlzLl9maW5hbERlY3J5cHQoKTsNCg0KICBpZiAoZmlyc3QpDQogICAgcmV0dXJuIGZpcnN0LmNvbmNhdChsYXN0KTsNCiAgZWxzZQ0KICAgIHJldHVybiBsYXN0Ow0KfTsNCg0KQ2lwaGVyLnByb3RvdHlwZS5fcGFkID0gZnVuY3Rpb24gX3BhZChidWZmZXIsIG9mZikgew0KICBpZiAob2ZmID09PSAwKQ0KICAgIHJldHVybiBmYWxzZTsNCg0KICB3aGlsZSAob2ZmIDwgYnVmZmVyLmxlbmd0aCkNCiAgICBidWZmZXJbb2ZmKytdID0gMDsNCg0KICByZXR1cm4gdHJ1ZTsNCn07DQoNCkNpcGhlci5wcm90b3R5cGUuX2ZpbmFsRW5jcnlwdCA9IGZ1bmN0aW9uIF9maW5hbEVuY3J5cHQoKSB7DQogIGlmICghdGhpcy5fcGFkKHRoaXMuYnVmZmVyLCB0aGlzLmJ1ZmZlck9mZikpDQogICAgcmV0dXJuIFtdOw0KDQogIHZhciBvdXQgPSBuZXcgQXJyYXkodGhpcy5ibG9ja1NpemUpOw0KICB0aGlzLl91cGRhdGUodGhpcy5idWZmZXIsIDAsIG91dCwgMCk7DQogIHJldHVybiBvdXQ7DQp9Ow0KDQpDaXBoZXIucHJvdG90eXBlLl91bnBhZCA9IGZ1bmN0aW9uIF91bnBhZChidWZmZXIpIHsNCiAgcmV0dXJuIGJ1ZmZlcjsNCn07DQoNCkNpcGhlci5wcm90b3R5cGUuX2ZpbmFsRGVjcnlwdCA9IGZ1bmN0aW9uIF9maW5hbERlY3J5cHQoKSB7DQogIGFzc2VydC5lcXVhbCh0aGlzLmJ1ZmZlck9mZiwgdGhpcy5ibG9ja1NpemUsICdOb3QgZW5vdWdoIGRhdGEgdG8gZGVjcnlwdCcpOw0KICB2YXIgb3V0ID0gbmV3IEFycmF5KHRoaXMuYmxvY2tTaXplKTsNCiAgdGhpcy5fZmx1c2hCdWZmZXIob3V0LCAwKTsNCg0KICByZXR1cm4gdGhpcy5fdW5wYWQob3V0KTsNCn07DQoNCn0seyJtaW5pbWFsaXN0aWMtYXNzZXJ0Ijo1NDJ9XSw0OTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQp2YXIgYXNzZXJ0ID0gcmVxdWlyZSgnbWluaW1hbGlzdGljLWFzc2VydCcpOw0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTsNCg0KdmFyIGRlcyA9IHJlcXVpcmUoJy4uL2RlcycpOw0KdmFyIHV0aWxzID0gZGVzLnV0aWxzOw0KdmFyIENpcGhlciA9IGRlcy5DaXBoZXI7DQoNCmZ1bmN0aW9uIERFU1N0YXRlKCkgew0KICB0aGlzLnRtcCA9IG5ldyBBcnJheSgyKTsNCiAgdGhpcy5rZXlzID0gbnVsbDsNCn0NCg0KZnVuY3Rpb24gREVTKG9wdGlvbnMpIHsNCiAgQ2lwaGVyLmNhbGwodGhpcywgb3B0aW9ucyk7DQoNCiAgdmFyIHN0YXRlID0gbmV3IERFU1N0YXRlKCk7DQogIHRoaXMuX2Rlc1N0YXRlID0gc3RhdGU7DQoNCiAgdGhpcy5kZXJpdmVLZXlzKHN0YXRlLCBvcHRpb25zLmtleSk7DQp9DQppbmhlcml0cyhERVMsIENpcGhlcik7DQptb2R1bGUuZXhwb3J0cyA9IERFUzsNCg0KREVTLmNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShvcHRpb25zKSB7DQogIHJldHVybiBuZXcgREVTKG9wdGlvbnMpOw0KfTsNCg0KdmFyIHNoaWZ0VGFibGUgPSBbDQogIDEsIDEsIDIsIDIsIDIsIDIsIDIsIDIsDQogIDEsIDIsIDIsIDIsIDIsIDIsIDIsIDENCl07DQoNCkRFUy5wcm90b3R5cGUuZGVyaXZlS2V5cyA9IGZ1bmN0aW9uIGRlcml2ZUtleXMoc3RhdGUsIGtleSkgew0KICBzdGF0ZS5rZXlzID0gbmV3IEFycmF5KDE2ICogMik7DQoNCiAgYXNzZXJ0LmVxdWFsKGtleS5sZW5ndGgsIHRoaXMuYmxvY2tTaXplLCAnSW52YWxpZCBrZXkgbGVuZ3RoJyk7DQoNCiAgdmFyIGtMID0gdXRpbHMucmVhZFVJbnQzMkJFKGtleSwgMCk7DQogIHZhciBrUiA9IHV0aWxzLnJlYWRVSW50MzJCRShrZXksIDQpOw0KDQogIHV0aWxzLnBjMShrTCwga1IsIHN0YXRlLnRtcCwgMCk7DQogIGtMID0gc3RhdGUudG1wWzBdOw0KICBrUiA9IHN0YXRlLnRtcFsxXTsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGF0ZS5rZXlzLmxlbmd0aDsgaSArPSAyKSB7DQogICAgdmFyIHNoaWZ0ID0gc2hpZnRUYWJsZVtpID4+PiAxXTsNCiAgICBrTCA9IHV0aWxzLnIyOHNobChrTCwgc2hpZnQpOw0KICAgIGtSID0gdXRpbHMucjI4c2hsKGtSLCBzaGlmdCk7DQogICAgdXRpbHMucGMyKGtMLCBrUiwgc3RhdGUua2V5cywgaSk7DQogIH0NCn07DQoNCkRFUy5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uIF91cGRhdGUoaW5wLCBpbk9mZiwgb3V0LCBvdXRPZmYpIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fZGVzU3RhdGU7DQoNCiAgdmFyIGwgPSB1dGlscy5yZWFkVUludDMyQkUoaW5wLCBpbk9mZik7DQogIHZhciByID0gdXRpbHMucmVhZFVJbnQzMkJFKGlucCwgaW5PZmYgKyA0KTsNCg0KICAvLyBJbml0aWFsIFBlcm11dGF0aW9uDQogIHV0aWxzLmlwKGwsIHIsIHN0YXRlLnRtcCwgMCk7DQogIGwgPSBzdGF0ZS50bXBbMF07DQogIHIgPSBzdGF0ZS50bXBbMV07DQoNCiAgaWYgKHRoaXMudHlwZSA9PT0gJ2VuY3J5cHQnKQ0KICAgIHRoaXMuX2VuY3J5cHQoc3RhdGUsIGwsIHIsIHN0YXRlLnRtcCwgMCk7DQogIGVsc2UNCiAgICB0aGlzLl9kZWNyeXB0KHN0YXRlLCBsLCByLCBzdGF0ZS50bXAsIDApOw0KDQogIGwgPSBzdGF0ZS50bXBbMF07DQogIHIgPSBzdGF0ZS50bXBbMV07DQoNCiAgdXRpbHMud3JpdGVVSW50MzJCRShvdXQsIGwsIG91dE9mZik7DQogIHV0aWxzLndyaXRlVUludDMyQkUob3V0LCByLCBvdXRPZmYgKyA0KTsNCn07DQoNCkRFUy5wcm90b3R5cGUuX3BhZCA9IGZ1bmN0aW9uIF9wYWQoYnVmZmVyLCBvZmYpIHsNCiAgdmFyIHZhbHVlID0gYnVmZmVyLmxlbmd0aCAtIG9mZjsNCiAgZm9yICh2YXIgaSA9IG9mZjsgaSA8IGJ1ZmZlci5sZW5ndGg7IGkrKykNCiAgICBidWZmZXJbaV0gPSB2YWx1ZTsNCg0KICByZXR1cm4gdHJ1ZTsNCn07DQoNCkRFUy5wcm90b3R5cGUuX3VucGFkID0gZnVuY3Rpb24gX3VucGFkKGJ1ZmZlcikgew0KICB2YXIgcGFkID0gYnVmZmVyW2J1ZmZlci5sZW5ndGggLSAxXTsNCiAgZm9yICh2YXIgaSA9IGJ1ZmZlci5sZW5ndGggLSBwYWQ7IGkgPCBidWZmZXIubGVuZ3RoOyBpKyspDQogICAgYXNzZXJ0LmVxdWFsKGJ1ZmZlcltpXSwgcGFkKTsNCg0KICByZXR1cm4gYnVmZmVyLnNsaWNlKDAsIGJ1ZmZlci5sZW5ndGggLSBwYWQpOw0KfTsNCg0KREVTLnByb3RvdHlwZS5fZW5jcnlwdCA9IGZ1bmN0aW9uIF9lbmNyeXB0KHN0YXRlLCBsU3RhcnQsIHJTdGFydCwgb3V0LCBvZmYpIHsNCiAgdmFyIGwgPSBsU3RhcnQ7DQogIHZhciByID0gclN0YXJ0Ow0KDQogIC8vIEFwcGx5IGYoKSB4MTYgdGltZXMNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGF0ZS5rZXlzLmxlbmd0aDsgaSArPSAyKSB7DQogICAgdmFyIGtleUwgPSBzdGF0ZS5rZXlzW2ldOw0KICAgIHZhciBrZXlSID0gc3RhdGUua2V5c1tpICsgMV07DQoNCiAgICAvLyBmKHIsIGspDQogICAgdXRpbHMuZXhwYW5kKHIsIHN0YXRlLnRtcCwgMCk7DQoNCiAgICBrZXlMIF49IHN0YXRlLnRtcFswXTsNCiAgICBrZXlSIF49IHN0YXRlLnRtcFsxXTsNCiAgICB2YXIgcyA9IHV0aWxzLnN1YnN0aXR1dGUoa2V5TCwga2V5Uik7DQogICAgdmFyIGYgPSB1dGlscy5wZXJtdXRlKHMpOw0KDQogICAgdmFyIHQgPSByOw0KICAgIHIgPSAobCBeIGYpID4+PiAwOw0KICAgIGwgPSB0Ow0KICB9DQoNCiAgLy8gUmV2ZXJzZSBJbml0aWFsIFBlcm11dGF0aW9uDQogIHV0aWxzLnJpcChyLCBsLCBvdXQsIG9mZik7DQp9Ow0KDQpERVMucHJvdG90eXBlLl9kZWNyeXB0ID0gZnVuY3Rpb24gX2RlY3J5cHQoc3RhdGUsIGxTdGFydCwgclN0YXJ0LCBvdXQsIG9mZikgew0KICB2YXIgbCA9IHJTdGFydDsNCiAgdmFyIHIgPSBsU3RhcnQ7DQoNCiAgLy8gQXBwbHkgZigpIHgxNiB0aW1lcw0KICBmb3IgKHZhciBpID0gc3RhdGUua2V5cy5sZW5ndGggLSAyOyBpID49IDA7IGkgLT0gMikgew0KICAgIHZhciBrZXlMID0gc3RhdGUua2V5c1tpXTsNCiAgICB2YXIga2V5UiA9IHN0YXRlLmtleXNbaSArIDFdOw0KDQogICAgLy8gZihyLCBrKQ0KICAgIHV0aWxzLmV4cGFuZChsLCBzdGF0ZS50bXAsIDApOw0KDQogICAga2V5TCBePSBzdGF0ZS50bXBbMF07DQogICAga2V5UiBePSBzdGF0ZS50bXBbMV07DQogICAgdmFyIHMgPSB1dGlscy5zdWJzdGl0dXRlKGtleUwsIGtleVIpOw0KICAgIHZhciBmID0gdXRpbHMucGVybXV0ZShzKTsNCg0KICAgIHZhciB0ID0gbDsNCiAgICBsID0gKHIgXiBmKSA+Pj4gMDsNCiAgICByID0gdDsNCiAgfQ0KDQogIC8vIFJldmVyc2UgSW5pdGlhbCBQZXJtdXRhdGlvbg0KICB1dGlscy5yaXAobCwgciwgb3V0LCBvZmYpOw0KfTsNCg0KfSx7Ii4uL2RlcyI6NDkzLCJpbmhlcml0cyI6NTM3LCJtaW5pbWFsaXN0aWMtYXNzZXJ0Ijo1NDJ9XSw0OTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQp2YXIgYXNzZXJ0ID0gcmVxdWlyZSgnbWluaW1hbGlzdGljLWFzc2VydCcpOw0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTsNCg0KdmFyIGRlcyA9IHJlcXVpcmUoJy4uL2RlcycpOw0KdmFyIENpcGhlciA9IGRlcy5DaXBoZXI7DQp2YXIgREVTID0gZGVzLkRFUzsNCg0KZnVuY3Rpb24gRURFU3RhdGUodHlwZSwga2V5KSB7DQogIGFzc2VydC5lcXVhbChrZXkubGVuZ3RoLCAyNCwgJ0ludmFsaWQga2V5IGxlbmd0aCcpOw0KDQogIHZhciBrMSA9IGtleS5zbGljZSgwLCA4KTsNCiAgdmFyIGsyID0ga2V5LnNsaWNlKDgsIDE2KTsNCiAgdmFyIGszID0ga2V5LnNsaWNlKDE2LCAyNCk7DQoNCiAgaWYgKHR5cGUgPT09ICdlbmNyeXB0Jykgew0KICAgIHRoaXMuY2lwaGVycyA9IFsNCiAgICAgIERFUy5jcmVhdGUoeyB0eXBlOiAnZW5jcnlwdCcsIGtleTogazEgfSksDQogICAgICBERVMuY3JlYXRlKHsgdHlwZTogJ2RlY3J5cHQnLCBrZXk6IGsyIH0pLA0KICAgICAgREVTLmNyZWF0ZSh7IHR5cGU6ICdlbmNyeXB0Jywga2V5OiBrMyB9KQ0KICAgIF07DQogIH0gZWxzZSB7DQogICAgdGhpcy5jaXBoZXJzID0gWw0KICAgICAgREVTLmNyZWF0ZSh7IHR5cGU6ICdkZWNyeXB0Jywga2V5OiBrMyB9KSwNCiAgICAgIERFUy5jcmVhdGUoeyB0eXBlOiAnZW5jcnlwdCcsIGtleTogazIgfSksDQogICAgICBERVMuY3JlYXRlKHsgdHlwZTogJ2RlY3J5cHQnLCBrZXk6IGsxIH0pDQogICAgXTsNCiAgfQ0KfQ0KDQpmdW5jdGlvbiBFREUob3B0aW9ucykgew0KICBDaXBoZXIuY2FsbCh0aGlzLCBvcHRpb25zKTsNCg0KICB2YXIgc3RhdGUgPSBuZXcgRURFU3RhdGUodGhpcy50eXBlLCB0aGlzLm9wdGlvbnMua2V5KTsNCiAgdGhpcy5fZWRlU3RhdGUgPSBzdGF0ZTsNCn0NCmluaGVyaXRzKEVERSwgQ2lwaGVyKTsNCg0KbW9kdWxlLmV4cG9ydHMgPSBFREU7DQoNCkVERS5jcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUob3B0aW9ucykgew0KICByZXR1cm4gbmV3IEVERShvcHRpb25zKTsNCn07DQoNCkVERS5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uIF91cGRhdGUoaW5wLCBpbk9mZiwgb3V0LCBvdXRPZmYpIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fZWRlU3RhdGU7DQoNCiAgc3RhdGUuY2lwaGVyc1swXS5fdXBkYXRlKGlucCwgaW5PZmYsIG91dCwgb3V0T2ZmKTsNCiAgc3RhdGUuY2lwaGVyc1sxXS5fdXBkYXRlKG91dCwgb3V0T2ZmLCBvdXQsIG91dE9mZik7DQogIHN0YXRlLmNpcGhlcnNbMl0uX3VwZGF0ZShvdXQsIG91dE9mZiwgb3V0LCBvdXRPZmYpOw0KfTsNCg0KRURFLnByb3RvdHlwZS5fcGFkID0gREVTLnByb3RvdHlwZS5fcGFkOw0KRURFLnByb3RvdHlwZS5fdW5wYWQgPSBERVMucHJvdG90eXBlLl91bnBhZDsNCg0KfSx7Ii4uL2RlcyI6NDkzLCJpbmhlcml0cyI6NTM3LCJtaW5pbWFsaXN0aWMtYXNzZXJ0Ijo1NDJ9XSw0OTg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQpleHBvcnRzLnJlYWRVSW50MzJCRSA9IGZ1bmN0aW9uIHJlYWRVSW50MzJCRShieXRlcywgb2ZmKSB7DQogIHZhciByZXMgPSAgKGJ5dGVzWzAgKyBvZmZdIDw8IDI0KSB8DQogICAgICAgICAgICAgKGJ5dGVzWzEgKyBvZmZdIDw8IDE2KSB8DQogICAgICAgICAgICAgKGJ5dGVzWzIgKyBvZmZdIDw8IDgpIHwNCiAgICAgICAgICAgICBieXRlc1szICsgb2ZmXTsNCiAgcmV0dXJuIHJlcyA+Pj4gMDsNCn07DQoNCmV4cG9ydHMud3JpdGVVSW50MzJCRSA9IGZ1bmN0aW9uIHdyaXRlVUludDMyQkUoYnl0ZXMsIHZhbHVlLCBvZmYpIHsNCiAgYnl0ZXNbMCArIG9mZl0gPSB2YWx1ZSA+Pj4gMjQ7DQogIGJ5dGVzWzEgKyBvZmZdID0gKHZhbHVlID4+PiAxNikgJiAweGZmOw0KICBieXRlc1syICsgb2ZmXSA9ICh2YWx1ZSA+Pj4gOCkgJiAweGZmOw0KICBieXRlc1szICsgb2ZmXSA9IHZhbHVlICYgMHhmZjsNCn07DQoNCmV4cG9ydHMuaXAgPSBmdW5jdGlvbiBpcChpbkwsIGluUiwgb3V0LCBvZmYpIHsNCiAgdmFyIG91dEwgPSAwOw0KICB2YXIgb3V0UiA9IDA7DQoNCiAgZm9yICh2YXIgaSA9IDY7IGkgPj0gMDsgaSAtPSAyKSB7DQogICAgZm9yICh2YXIgaiA9IDA7IGogPD0gMjQ7IGogKz0gOCkgew0KICAgICAgb3V0TCA8PD0gMTsNCiAgICAgIG91dEwgfD0gKGluUiA+Pj4gKGogKyBpKSkgJiAxOw0KICAgIH0NCiAgICBmb3IgKHZhciBqID0gMDsgaiA8PSAyNDsgaiArPSA4KSB7DQogICAgICBvdXRMIDw8PSAxOw0KICAgICAgb3V0TCB8PSAoaW5MID4+PiAoaiArIGkpKSAmIDE7DQogICAgfQ0KICB9DQoNCiAgZm9yICh2YXIgaSA9IDY7IGkgPj0gMDsgaSAtPSAyKSB7DQogICAgZm9yICh2YXIgaiA9IDE7IGogPD0gMjU7IGogKz0gOCkgew0KICAgICAgb3V0UiA8PD0gMTsNCiAgICAgIG91dFIgfD0gKGluUiA+Pj4gKGogKyBpKSkgJiAxOw0KICAgIH0NCiAgICBmb3IgKHZhciBqID0gMTsgaiA8PSAyNTsgaiArPSA4KSB7DQogICAgICBvdXRSIDw8PSAxOw0KICAgICAgb3V0UiB8PSAoaW5MID4+PiAoaiArIGkpKSAmIDE7DQogICAgfQ0KICB9DQoNCiAgb3V0W29mZiArIDBdID0gb3V0TCA+Pj4gMDsNCiAgb3V0W29mZiArIDFdID0gb3V0UiA+Pj4gMDsNCn07DQoNCmV4cG9ydHMucmlwID0gZnVuY3Rpb24gcmlwKGluTCwgaW5SLCBvdXQsIG9mZikgew0KICB2YXIgb3V0TCA9IDA7DQogIHZhciBvdXRSID0gMDsNCg0KICBmb3IgKHZhciBpID0gMDsgaSA8IDQ7IGkrKykgew0KICAgIGZvciAodmFyIGogPSAyNDsgaiA+PSAwOyBqIC09IDgpIHsNCiAgICAgIG91dEwgPDw9IDE7DQogICAgICBvdXRMIHw9IChpblIgPj4+IChqICsgaSkpICYgMTsNCiAgICAgIG91dEwgPDw9IDE7DQogICAgICBvdXRMIHw9IChpbkwgPj4+IChqICsgaSkpICYgMTsNCiAgICB9DQogIH0NCiAgZm9yICh2YXIgaSA9IDQ7IGkgPCA4OyBpKyspIHsNCiAgICBmb3IgKHZhciBqID0gMjQ7IGogPj0gMDsgaiAtPSA4KSB7DQogICAgICBvdXRSIDw8PSAxOw0KICAgICAgb3V0UiB8PSAoaW5SID4+PiAoaiArIGkpKSAmIDE7DQogICAgICBvdXRSIDw8PSAxOw0KICAgICAgb3V0UiB8PSAoaW5MID4+PiAoaiArIGkpKSAmIDE7DQogICAgfQ0KICB9DQoNCiAgb3V0W29mZiArIDBdID0gb3V0TCA+Pj4gMDsNCiAgb3V0W29mZiArIDFdID0gb3V0UiA+Pj4gMDsNCn07DQoNCmV4cG9ydHMucGMxID0gZnVuY3Rpb24gcGMxKGluTCwgaW5SLCBvdXQsIG9mZikgew0KICB2YXIgb3V0TCA9IDA7DQogIHZhciBvdXRSID0gMDsNCg0KICAvLyA3LCAxNSwgMjMsIDMxLCAzOSwgNDcsIDU1LCA2Mw0KICAvLyA2LCAxNCwgMjIsIDMwLCAzOSwgNDcsIDU1LCA2Mw0KICAvLyA1LCAxMywgMjEsIDI5LCAzOSwgNDcsIDU1LCA2Mw0KICAvLyA0LCAxMiwgMjAsIDI4DQogIGZvciAodmFyIGkgPSA3OyBpID49IDU7IGktLSkgew0KICAgIGZvciAodmFyIGogPSAwOyBqIDw9IDI0OyBqICs9IDgpIHsNCiAgICAgIG91dEwgPDw9IDE7DQogICAgICBvdXRMIHw9IChpblIgPj4gKGogKyBpKSkgJiAxOw0KICAgIH0NCiAgICBmb3IgKHZhciBqID0gMDsgaiA8PSAyNDsgaiArPSA4KSB7DQogICAgICBvdXRMIDw8PSAxOw0KICAgICAgb3V0TCB8PSAoaW5MID4+IChqICsgaSkpICYgMTsNCiAgICB9DQogIH0NCiAgZm9yICh2YXIgaiA9IDA7IGogPD0gMjQ7IGogKz0gOCkgew0KICAgIG91dEwgPDw9IDE7DQogICAgb3V0TCB8PSAoaW5SID4+IChqICsgaSkpICYgMTsNCiAgfQ0KDQogIC8vIDEsIDksIDE3LCAyNSwgMzMsIDQxLCA0OSwgNTcNCiAgLy8gMiwgMTAsIDE4LCAyNiwgMzQsIDQyLCA1MCwgNTgNCiAgLy8gMywgMTEsIDE5LCAyNywgMzUsIDQzLCA1MSwgNTkNCiAgLy8gMzYsIDQ0LCA1MiwgNjANCiAgZm9yICh2YXIgaSA9IDE7IGkgPD0gMzsgaSsrKSB7DQogICAgZm9yICh2YXIgaiA9IDA7IGogPD0gMjQ7IGogKz0gOCkgew0KICAgICAgb3V0UiA8PD0gMTsNCiAgICAgIG91dFIgfD0gKGluUiA+PiAoaiArIGkpKSAmIDE7DQogICAgfQ0KICAgIGZvciAodmFyIGogPSAwOyBqIDw9IDI0OyBqICs9IDgpIHsNCiAgICAgIG91dFIgPDw9IDE7DQogICAgICBvdXRSIHw9IChpbkwgPj4gKGogKyBpKSkgJiAxOw0KICAgIH0NCiAgfQ0KICBmb3IgKHZhciBqID0gMDsgaiA8PSAyNDsgaiArPSA4KSB7DQogICAgb3V0UiA8PD0gMTsNCiAgICBvdXRSIHw9IChpbkwgPj4gKGogKyBpKSkgJiAxOw0KICB9DQoNCiAgb3V0W29mZiArIDBdID0gb3V0TCA+Pj4gMDsNCiAgb3V0W29mZiArIDFdID0gb3V0UiA+Pj4gMDsNCn07DQoNCmV4cG9ydHMucjI4c2hsID0gZnVuY3Rpb24gcjI4c2hsKG51bSwgc2hpZnQpIHsNCiAgcmV0dXJuICgobnVtIDw8IHNoaWZ0KSAmIDB4ZmZmZmZmZikgfCAobnVtID4+PiAoMjggLSBzaGlmdCkpOw0KfTsNCg0KdmFyIHBjMnRhYmxlID0gWw0KICAvLyBpbkwgPT4gb3V0TA0KICAxNCwgMTEsIDE3LCA0LCAyNywgMjMsIDI1LCAwLA0KICAxMywgMjIsIDcsIDE4LCA1LCA5LCAxNiwgMjQsDQogIDIsIDIwLCAxMiwgMjEsIDEsIDgsIDE1LCAyNiwNCg0KICAvLyBpblIgPT4gb3V0Ug0KICAxNSwgNCwgMjUsIDE5LCA5LCAxLCAyNiwgMTYsDQogIDUsIDExLCAyMywgOCwgMTIsIDcsIDE3LCAwLA0KICAyMiwgMywgMTAsIDE0LCA2LCAyMCwgMjcsIDI0DQpdOw0KDQpleHBvcnRzLnBjMiA9IGZ1bmN0aW9uIHBjMihpbkwsIGluUiwgb3V0LCBvZmYpIHsNCiAgdmFyIG91dEwgPSAwOw0KICB2YXIgb3V0UiA9IDA7DQoNCiAgdmFyIGxlbiA9IHBjMnRhYmxlLmxlbmd0aCA+Pj4gMTsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykgew0KICAgIG91dEwgPDw9IDE7DQogICAgb3V0TCB8PSAoaW5MID4+PiBwYzJ0YWJsZVtpXSkgJiAweDE7DQogIH0NCiAgZm9yICh2YXIgaSA9IGxlbjsgaSA8IHBjMnRhYmxlLmxlbmd0aDsgaSsrKSB7DQogICAgb3V0UiA8PD0gMTsNCiAgICBvdXRSIHw9IChpblIgPj4+IHBjMnRhYmxlW2ldKSAmIDB4MTsNCiAgfQ0KDQogIG91dFtvZmYgKyAwXSA9IG91dEwgPj4+IDA7DQogIG91dFtvZmYgKyAxXSA9IG91dFIgPj4+IDA7DQp9Ow0KDQpleHBvcnRzLmV4cGFuZCA9IGZ1bmN0aW9uIGV4cGFuZChyLCBvdXQsIG9mZikgew0KICB2YXIgb3V0TCA9IDA7DQogIHZhciBvdXRSID0gMDsNCg0KICBvdXRMID0gKChyICYgMSkgPDwgNSkgfCAociA+Pj4gMjcpOw0KICBmb3IgKHZhciBpID0gMjM7IGkgPj0gMTU7IGkgLT0gNCkgew0KICAgIG91dEwgPDw9IDY7DQogICAgb3V0TCB8PSAociA+Pj4gaSkgJiAweDNmOw0KICB9DQogIGZvciAodmFyIGkgPSAxMTsgaSA+PSAzOyBpIC09IDQpIHsNCiAgICBvdXRSIHw9IChyID4+PiBpKSAmIDB4M2Y7DQogICAgb3V0UiA8PD0gNjsNCiAgfQ0KICBvdXRSIHw9ICgociAmIDB4MWYpIDw8IDEpIHwgKHIgPj4+IDMxKTsNCg0KICBvdXRbb2ZmICsgMF0gPSBvdXRMID4+PiAwOw0KICBvdXRbb2ZmICsgMV0gPSBvdXRSID4+PiAwOw0KfTsNCg0KdmFyIHNUYWJsZSA9IFsNCiAgMTQsIDAsIDQsIDE1LCAxMywgNywgMSwgNCwgMiwgMTQsIDE1LCAyLCAxMSwgMTMsIDgsIDEsDQogIDMsIDEwLCAxMCwgNiwgNiwgMTIsIDEyLCAxMSwgNSwgOSwgOSwgNSwgMCwgMywgNywgOCwNCiAgNCwgMTUsIDEsIDEyLCAxNCwgOCwgOCwgMiwgMTMsIDQsIDYsIDksIDIsIDEsIDExLCA3LA0KICAxNSwgNSwgMTIsIDExLCA5LCAzLCA3LCAxNCwgMywgMTAsIDEwLCAwLCA1LCA2LCAwLCAxMywNCg0KICAxNSwgMywgMSwgMTMsIDgsIDQsIDE0LCA3LCA2LCAxNSwgMTEsIDIsIDMsIDgsIDQsIDE0LA0KICA5LCAxMiwgNywgMCwgMiwgMSwgMTMsIDEwLCAxMiwgNiwgMCwgOSwgNSwgMTEsIDEwLCA1LA0KICAwLCAxMywgMTQsIDgsIDcsIDEwLCAxMSwgMSwgMTAsIDMsIDQsIDE1LCAxMywgNCwgMSwgMiwNCiAgNSwgMTEsIDgsIDYsIDEyLCA3LCA2LCAxMiwgOSwgMCwgMywgNSwgMiwgMTQsIDE1LCA5LA0KDQogIDEwLCAxMywgMCwgNywgOSwgMCwgMTQsIDksIDYsIDMsIDMsIDQsIDE1LCA2LCA1LCAxMCwNCiAgMSwgMiwgMTMsIDgsIDEyLCA1LCA3LCAxNCwgMTEsIDEyLCA0LCAxMSwgMiwgMTUsIDgsIDEsDQogIDEzLCAxLCA2LCAxMCwgNCwgMTMsIDksIDAsIDgsIDYsIDE1LCA5LCAzLCA4LCAwLCA3LA0KICAxMSwgNCwgMSwgMTUsIDIsIDE0LCAxMiwgMywgNSwgMTEsIDEwLCA1LCAxNCwgMiwgNywgMTIsDQoNCiAgNywgMTMsIDEzLCA4LCAxNCwgMTEsIDMsIDUsIDAsIDYsIDYsIDE1LCA5LCAwLCAxMCwgMywNCiAgMSwgNCwgMiwgNywgOCwgMiwgNSwgMTIsIDExLCAxLCAxMiwgMTAsIDQsIDE0LCAxNSwgOSwNCiAgMTAsIDMsIDYsIDE1LCA5LCAwLCAwLCA2LCAxMiwgMTAsIDExLCAxLCA3LCAxMywgMTMsIDgsDQogIDE1LCA5LCAxLCA0LCAzLCA1LCAxNCwgMTEsIDUsIDEyLCAyLCA3LCA4LCAyLCA0LCAxNCwNCg0KICAyLCAxNCwgMTIsIDExLCA0LCAyLCAxLCAxMiwgNywgNCwgMTAsIDcsIDExLCAxMywgNiwgMSwNCiAgOCwgNSwgNSwgMCwgMywgMTUsIDE1LCAxMCwgMTMsIDMsIDAsIDksIDE0LCA4LCA5LCA2LA0KICA0LCAxMSwgMiwgOCwgMSwgMTIsIDExLCA3LCAxMCwgMSwgMTMsIDE0LCA3LCAyLCA4LCAxMywNCiAgMTUsIDYsIDksIDE1LCAxMiwgMCwgNSwgOSwgNiwgMTAsIDMsIDQsIDAsIDUsIDE0LCAzLA0KDQogIDEyLCAxMCwgMSwgMTUsIDEwLCA0LCAxNSwgMiwgOSwgNywgMiwgMTIsIDYsIDksIDgsIDUsDQogIDAsIDYsIDEzLCAxLCAzLCAxMywgNCwgMTQsIDE0LCAwLCA3LCAxMSwgNSwgMywgMTEsIDgsDQogIDksIDQsIDE0LCAzLCAxNSwgMiwgNSwgMTIsIDIsIDksIDgsIDUsIDEyLCAxNSwgMywgMTAsDQogIDcsIDExLCAwLCAxNCwgNCwgMSwgMTAsIDcsIDEsIDYsIDEzLCAwLCAxMSwgOCwgNiwgMTMsDQoNCiAgNCwgMTMsIDExLCAwLCAyLCAxMSwgMTQsIDcsIDE1LCA0LCAwLCA5LCA4LCAxLCAxMywgMTAsDQogIDMsIDE0LCAxMiwgMywgOSwgNSwgNywgMTIsIDUsIDIsIDEwLCAxNSwgNiwgOCwgMSwgNiwNCiAgMSwgNiwgNCwgMTEsIDExLCAxMywgMTMsIDgsIDEyLCAxLCAzLCA0LCA3LCAxMCwgMTQsIDcsDQogIDEwLCA5LCAxNSwgNSwgNiwgMCwgOCwgMTUsIDAsIDE0LCA1LCAyLCA5LCAzLCAyLCAxMiwNCg0KICAxMywgMSwgMiwgMTUsIDgsIDEzLCA0LCA4LCA2LCAxMCwgMTUsIDMsIDExLCA3LCAxLCA0LA0KICAxMCwgMTIsIDksIDUsIDMsIDYsIDE0LCAxMSwgNSwgMCwgMCwgMTQsIDEyLCA5LCA3LCAyLA0KICA3LCAyLCAxMSwgMSwgNCwgMTQsIDEsIDcsIDksIDQsIDEyLCAxMCwgMTQsIDgsIDIsIDEzLA0KICAwLCAxNSwgNiwgMTIsIDEwLCA5LCAxMywgMCwgMTUsIDMsIDMsIDUsIDUsIDYsIDgsIDExDQpdOw0KDQpleHBvcnRzLnN1YnN0aXR1dGUgPSBmdW5jdGlvbiBzdWJzdGl0dXRlKGluTCwgaW5SKSB7DQogIHZhciBvdXQgPSAwOw0KICBmb3IgKHZhciBpID0gMDsgaSA8IDQ7IGkrKykgew0KICAgIHZhciBiID0gKGluTCA+Pj4gKDE4IC0gaSAqIDYpKSAmIDB4M2Y7DQogICAgdmFyIHNiID0gc1RhYmxlW2kgKiAweDQwICsgYl07DQoNCiAgICBvdXQgPDw9IDQ7DQogICAgb3V0IHw9IHNiOw0KICB9DQogIGZvciAodmFyIGkgPSAwOyBpIDwgNDsgaSsrKSB7DQogICAgdmFyIGIgPSAoaW5SID4+PiAoMTggLSBpICogNikpICYgMHgzZjsNCiAgICB2YXIgc2IgPSBzVGFibGVbNCAqIDB4NDAgKyBpICogMHg0MCArIGJdOw0KDQogICAgb3V0IDw8PSA0Ow0KICAgIG91dCB8PSBzYjsNCiAgfQ0KICByZXR1cm4gb3V0ID4+PiAwOw0KfTsNCg0KdmFyIHBlcm11dGVUYWJsZSA9IFsNCiAgMTYsIDI1LCAxMiwgMTEsIDMsIDIwLCA0LCAxNSwgMzEsIDE3LCA5LCA2LCAyNywgMTQsIDEsIDIyLA0KICAzMCwgMjQsIDgsIDE4LCAwLCA1LCAyOSwgMjMsIDEzLCAxOSwgMiwgMjYsIDEwLCAyMSwgMjgsIDcNCl07DQoNCmV4cG9ydHMucGVybXV0ZSA9IGZ1bmN0aW9uIHBlcm11dGUobnVtKSB7DQogIHZhciBvdXQgPSAwOw0KICBmb3IgKHZhciBpID0gMDsgaSA8IHBlcm11dGVUYWJsZS5sZW5ndGg7IGkrKykgew0KICAgIG91dCA8PD0gMTsNCiAgICBvdXQgfD0gKG51bSA+Pj4gcGVybXV0ZVRhYmxlW2ldKSAmIDB4MTsNCiAgfQ0KICByZXR1cm4gb3V0ID4+PiAwOw0KfTsNCg0KZXhwb3J0cy5wYWRTcGxpdCA9IGZ1bmN0aW9uIHBhZFNwbGl0KG51bSwgc2l6ZSwgZ3JvdXApIHsNCiAgdmFyIHN0ciA9IG51bS50b1N0cmluZygyKTsNCiAgd2hpbGUgKHN0ci5sZW5ndGggPCBzaXplKQ0KICAgIHN0ciA9ICcwJyArIHN0cjsNCg0KICB2YXIgb3V0ID0gW107DQogIGZvciAodmFyIGkgPSAwOyBpIDwgc2l6ZTsgaSArPSBncm91cCkNCiAgICBvdXQucHVzaChzdHIuc2xpY2UoaSwgaSArIGdyb3VwKSk7DQogIHJldHVybiBvdXQuam9pbignICcpOw0KfTsNCg0KfSx7fV0sNDk5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCnZhciBnZW5lcmF0ZVByaW1lID0gcmVxdWlyZSgnLi9saWIvZ2VuZXJhdGVQcmltZScpDQp2YXIgcHJpbWVzID0gcmVxdWlyZSgnLi9saWIvcHJpbWVzLmpzb24nKQ0KDQp2YXIgREggPSByZXF1aXJlKCcuL2xpYi9kaCcpDQoNCmZ1bmN0aW9uIGdldERpZmZpZUhlbGxtYW4gKG1vZCkgew0KICB2YXIgcHJpbWUgPSBuZXcgQnVmZmVyKHByaW1lc1ttb2RdLnByaW1lLCAnaGV4JykNCiAgdmFyIGdlbiA9IG5ldyBCdWZmZXIocHJpbWVzW21vZF0uZ2VuLCAnaGV4JykNCg0KICByZXR1cm4gbmV3IERIKHByaW1lLCBnZW4pDQp9DQoNCnZhciBFTkNPRElOR1MgPSB7DQogICdiaW5hcnknOiB0cnVlLCAnaGV4JzogdHJ1ZSwgJ2Jhc2U2NCc6IHRydWUNCn0NCg0KZnVuY3Rpb24gY3JlYXRlRGlmZmllSGVsbG1hbiAocHJpbWUsIGVuYywgZ2VuZXJhdG9yLCBnZW5jKSB7DQogIGlmIChCdWZmZXIuaXNCdWZmZXIoZW5jKSB8fCBFTkNPRElOR1NbZW5jXSA9PT0gdW5kZWZpbmVkKSB7DQogICAgcmV0dXJuIGNyZWF0ZURpZmZpZUhlbGxtYW4ocHJpbWUsICdiaW5hcnknLCBlbmMsIGdlbmVyYXRvcikNCiAgfQ0KDQogIGVuYyA9IGVuYyB8fCAnYmluYXJ5Jw0KICBnZW5jID0gZ2VuYyB8fCAnYmluYXJ5Jw0KICBnZW5lcmF0b3IgPSBnZW5lcmF0b3IgfHwgbmV3IEJ1ZmZlcihbMl0pDQoNCiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoZ2VuZXJhdG9yKSkgew0KICAgIGdlbmVyYXRvciA9IG5ldyBCdWZmZXIoZ2VuZXJhdG9yLCBnZW5jKQ0KICB9DQoNCiAgaWYgKHR5cGVvZiBwcmltZSA9PT0gJ251bWJlcicpIHsNCiAgICByZXR1cm4gbmV3IERIKGdlbmVyYXRlUHJpbWUocHJpbWUsIGdlbmVyYXRvciksIGdlbmVyYXRvciwgdHJ1ZSkNCiAgfQ0KDQogIGlmICghQnVmZmVyLmlzQnVmZmVyKHByaW1lKSkgew0KICAgIHByaW1lID0gbmV3IEJ1ZmZlcihwcmltZSwgZW5jKQ0KICB9DQoNCiAgcmV0dXJuIG5ldyBESChwcmltZSwgZ2VuZXJhdG9yLCB0cnVlKQ0KfQ0KDQpleHBvcnRzLkRpZmZpZUhlbGxtYW5Hcm91cCA9IGV4cG9ydHMuY3JlYXRlRGlmZmllSGVsbG1hbkdyb3VwID0gZXhwb3J0cy5nZXREaWZmaWVIZWxsbWFuID0gZ2V0RGlmZmllSGVsbG1hbg0KZXhwb3J0cy5jcmVhdGVEaWZmaWVIZWxsbWFuID0gZXhwb3J0cy5EaWZmaWVIZWxsbWFuID0gY3JlYXRlRGlmZmllSGVsbG1hbg0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vbGliL2RoIjo1MDAsIi4vbGliL2dlbmVyYXRlUHJpbWUiOjUwMSwiLi9saWIvcHJpbWVzLmpzb24iOjUwMiwiYnVmZmVyIjo5M31dLDUwMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQp2YXIgQk4gPSByZXF1aXJlKCdibi5qcycpOw0KdmFyIE1pbGxlclJhYmluID0gcmVxdWlyZSgnbWlsbGVyLXJhYmluJyk7DQp2YXIgbWlsbGVyUmFiaW4gPSBuZXcgTWlsbGVyUmFiaW4oKTsNCnZhciBUV0VOVFlGT1VSID0gbmV3IEJOKDI0KTsNCnZhciBFTEVWRU4gPSBuZXcgQk4oMTEpOw0KdmFyIFRFTiA9IG5ldyBCTigxMCk7DQp2YXIgVEhSRUUgPSBuZXcgQk4oMyk7DQp2YXIgU0VWRU4gPSBuZXcgQk4oNyk7DQp2YXIgcHJpbWVzID0gcmVxdWlyZSgnLi9nZW5lcmF0ZVByaW1lJyk7DQp2YXIgcmFuZG9tQnl0ZXMgPSByZXF1aXJlKCdyYW5kb21ieXRlcycpOw0KbW9kdWxlLmV4cG9ydHMgPSBESDsNCg0KZnVuY3Rpb24gc2V0UHVibGljS2V5KHB1YiwgZW5jKSB7DQogIGVuYyA9IGVuYyB8fCAndXRmOCc7DQogIGlmICghQnVmZmVyLmlzQnVmZmVyKHB1YikpIHsNCiAgICBwdWIgPSBuZXcgQnVmZmVyKHB1YiwgZW5jKTsNCiAgfQ0KICB0aGlzLl9wdWIgPSBuZXcgQk4ocHViKTsNCiAgcmV0dXJuIHRoaXM7DQp9DQoNCmZ1bmN0aW9uIHNldFByaXZhdGVLZXkocHJpdiwgZW5jKSB7DQogIGVuYyA9IGVuYyB8fCAndXRmOCc7DQogIGlmICghQnVmZmVyLmlzQnVmZmVyKHByaXYpKSB7DQogICAgcHJpdiA9IG5ldyBCdWZmZXIocHJpdiwgZW5jKTsNCiAgfQ0KICB0aGlzLl9wcml2ID0gbmV3IEJOKHByaXYpOw0KICByZXR1cm4gdGhpczsNCn0NCg0KdmFyIHByaW1lQ2FjaGUgPSB7fTsNCmZ1bmN0aW9uIGNoZWNrUHJpbWUocHJpbWUsIGdlbmVyYXRvcikgew0KICB2YXIgZ2VuID0gZ2VuZXJhdG9yLnRvU3RyaW5nKCdoZXgnKTsNCiAgdmFyIGhleCA9IFtnZW4sIHByaW1lLnRvU3RyaW5nKDE2KV0uam9pbignXycpOw0KICBpZiAoaGV4IGluIHByaW1lQ2FjaGUpIHsNCiAgICByZXR1cm4gcHJpbWVDYWNoZVtoZXhdOw0KICB9DQogIHZhciBlcnJvciA9IDA7DQoNCiAgaWYgKHByaW1lLmlzRXZlbigpIHx8DQogICAgIXByaW1lcy5zaW1wbGVTaWV2ZSB8fA0KICAgICFwcmltZXMuZmVybWF0VGVzdChwcmltZSkgfHwNCiAgICAhbWlsbGVyUmFiaW4udGVzdChwcmltZSkpIHsNCiAgICAvL25vdCBhIHByaW1lIHNvICsxDQogICAgZXJyb3IgKz0gMTsNCg0KICAgIGlmIChnZW4gPT09ICcwMicgfHwgZ2VuID09PSAnMDUnKSB7DQogICAgICAvLyB3ZSdkIGJlIGFibGUgdG8gY2hlY2sgdGhlIGdlbmVyYXRvcg0KICAgICAgLy8gaXQgd291bGQgZmFpbCBzbyArOA0KICAgICAgZXJyb3IgKz0gODsNCiAgICB9IGVsc2Ugew0KICAgICAgLy93ZSB3b3VsZG4ndCBiZSBhYmxlIHRvIHRlc3QgdGhlIGdlbmVyYXRvcg0KICAgICAgLy8gc28gKzQNCiAgICAgIGVycm9yICs9IDQ7DQogICAgfQ0KICAgIHByaW1lQ2FjaGVbaGV4XSA9IGVycm9yOw0KICAgIHJldHVybiBlcnJvcjsNCiAgfQ0KICBpZiAoIW1pbGxlclJhYmluLnRlc3QocHJpbWUuc2hybigxKSkpIHsNCiAgICAvL25vdCBhIHNhZmUgcHJpbWUNCiAgICBlcnJvciArPSAyOw0KICB9DQogIHZhciByZW07DQogIHN3aXRjaCAoZ2VuKSB7DQogICAgY2FzZSAnMDInOg0KICAgICAgaWYgKHByaW1lLm1vZChUV0VOVFlGT1VSKS5jbXAoRUxFVkVOKSkgew0KICAgICAgICAvLyB1bnN1aWRhYmxlIGdlbmVyYXRvcg0KICAgICAgICBlcnJvciArPSA4Ow0KICAgICAgfQ0KICAgICAgYnJlYWs7DQogICAgY2FzZSAnMDUnOg0KICAgICAgcmVtID0gcHJpbWUubW9kKFRFTik7DQogICAgICBpZiAocmVtLmNtcChUSFJFRSkgJiYgcmVtLmNtcChTRVZFTikpIHsNCiAgICAgICAgLy8gcHJpbWUgbW9kIDEwIG5lZWRzIHRvIGVxdWFsIDMgb3IgNw0KICAgICAgICBlcnJvciArPSA4Ow0KICAgICAgfQ0KICAgICAgYnJlYWs7DQogICAgZGVmYXVsdDoNCiAgICAgIGVycm9yICs9IDQ7DQogIH0NCiAgcHJpbWVDYWNoZVtoZXhdID0gZXJyb3I7DQogIHJldHVybiBlcnJvcjsNCn0NCg0KZnVuY3Rpb24gREgocHJpbWUsIGdlbmVyYXRvciwgbWFsbGVhYmxlKSB7DQogIHRoaXMuc2V0R2VuZXJhdG9yKGdlbmVyYXRvcik7DQogIHRoaXMuX19wcmltZSA9IG5ldyBCTihwcmltZSk7DQogIHRoaXMuX3ByaW1lID0gQk4ubW9udCh0aGlzLl9fcHJpbWUpOw0KICB0aGlzLl9wcmltZUxlbiA9IHByaW1lLmxlbmd0aDsNCiAgdGhpcy5fcHViID0gdW5kZWZpbmVkOw0KICB0aGlzLl9wcml2ID0gdW5kZWZpbmVkOw0KICB0aGlzLl9wcmltZUNvZGUgPSB1bmRlZmluZWQ7DQogIGlmIChtYWxsZWFibGUpIHsNCiAgICB0aGlzLnNldFB1YmxpY0tleSA9IHNldFB1YmxpY0tleTsNCiAgICB0aGlzLnNldFByaXZhdGVLZXkgPSBzZXRQcml2YXRlS2V5Ow0KICB9IGVsc2Ugew0KICAgIHRoaXMuX3ByaW1lQ29kZSA9IDg7DQogIH0NCn0NCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShESC5wcm90b3R5cGUsICd2ZXJpZnlFcnJvcicsIHsNCiAgZW51bWVyYWJsZTogdHJ1ZSwNCiAgZ2V0OiBmdW5jdGlvbiAoKSB7DQogICAgaWYgKHR5cGVvZiB0aGlzLl9wcmltZUNvZGUgIT09ICdudW1iZXInKSB7DQogICAgICB0aGlzLl9wcmltZUNvZGUgPSBjaGVja1ByaW1lKHRoaXMuX19wcmltZSwgdGhpcy5fX2dlbik7DQogICAgfQ0KICAgIHJldHVybiB0aGlzLl9wcmltZUNvZGU7DQogIH0NCn0pOw0KREgucHJvdG90eXBlLmdlbmVyYXRlS2V5cyA9IGZ1bmN0aW9uICgpIHsNCiAgaWYgKCF0aGlzLl9wcml2KSB7DQogICAgdGhpcy5fcHJpdiA9IG5ldyBCTihyYW5kb21CeXRlcyh0aGlzLl9wcmltZUxlbikpOw0KICB9DQogIHRoaXMuX3B1YiA9IHRoaXMuX2dlbi50b1JlZCh0aGlzLl9wcmltZSkucmVkUG93KHRoaXMuX3ByaXYpLmZyb21SZWQoKTsNCiAgcmV0dXJuIHRoaXMuZ2V0UHVibGljS2V5KCk7DQp9Ow0KDQpESC5wcm90b3R5cGUuY29tcHV0ZVNlY3JldCA9IGZ1bmN0aW9uIChvdGhlcikgew0KICBvdGhlciA9IG5ldyBCTihvdGhlcik7DQogIG90aGVyID0gb3RoZXIudG9SZWQodGhpcy5fcHJpbWUpOw0KICB2YXIgc2VjcmV0ID0gb3RoZXIucmVkUG93KHRoaXMuX3ByaXYpLmZyb21SZWQoKTsNCiAgdmFyIG91dCA9IG5ldyBCdWZmZXIoc2VjcmV0LnRvQXJyYXkoKSk7DQogIHZhciBwcmltZSA9IHRoaXMuZ2V0UHJpbWUoKTsNCiAgaWYgKG91dC5sZW5ndGggPCBwcmltZS5sZW5ndGgpIHsNCiAgICB2YXIgZnJvbnQgPSBuZXcgQnVmZmVyKHByaW1lLmxlbmd0aCAtIG91dC5sZW5ndGgpOw0KICAgIGZyb250LmZpbGwoMCk7DQogICAgb3V0ID0gQnVmZmVyLmNvbmNhdChbZnJvbnQsIG91dF0pOw0KICB9DQogIHJldHVybiBvdXQ7DQp9Ow0KDQpESC5wcm90b3R5cGUuZ2V0UHVibGljS2V5ID0gZnVuY3Rpb24gZ2V0UHVibGljS2V5KGVuYykgew0KICByZXR1cm4gZm9ybWF0UmV0dXJuVmFsdWUodGhpcy5fcHViLCBlbmMpOw0KfTsNCg0KREgucHJvdG90eXBlLmdldFByaXZhdGVLZXkgPSBmdW5jdGlvbiBnZXRQcml2YXRlS2V5KGVuYykgew0KICByZXR1cm4gZm9ybWF0UmV0dXJuVmFsdWUodGhpcy5fcHJpdiwgZW5jKTsNCn07DQoNCkRILnByb3RvdHlwZS5nZXRQcmltZSA9IGZ1bmN0aW9uIChlbmMpIHsNCiAgcmV0dXJuIGZvcm1hdFJldHVyblZhbHVlKHRoaXMuX19wcmltZSwgZW5jKTsNCn07DQoNCkRILnByb3RvdHlwZS5nZXRHZW5lcmF0b3IgPSBmdW5jdGlvbiAoZW5jKSB7DQogIHJldHVybiBmb3JtYXRSZXR1cm5WYWx1ZSh0aGlzLl9nZW4sIGVuYyk7DQp9Ow0KDQpESC5wcm90b3R5cGUuc2V0R2VuZXJhdG9yID0gZnVuY3Rpb24gKGdlbiwgZW5jKSB7DQogIGVuYyA9IGVuYyB8fCAndXRmOCc7DQogIGlmICghQnVmZmVyLmlzQnVmZmVyKGdlbikpIHsNCiAgICBnZW4gPSBuZXcgQnVmZmVyKGdlbiwgZW5jKTsNCiAgfQ0KICB0aGlzLl9fZ2VuID0gZ2VuOw0KICB0aGlzLl9nZW4gPSBuZXcgQk4oZ2VuKTsNCiAgcmV0dXJuIHRoaXM7DQp9Ow0KDQpmdW5jdGlvbiBmb3JtYXRSZXR1cm5WYWx1ZShibiwgZW5jKSB7DQogIHZhciBidWYgPSBuZXcgQnVmZmVyKGJuLnRvQXJyYXkoKSk7DQogIGlmICghZW5jKSB7DQogICAgcmV0dXJuIGJ1ZjsNCiAgfSBlbHNlIHsNCiAgICByZXR1cm4gYnVmLnRvU3RyaW5nKGVuYyk7DQogIH0NCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyIuL2dlbmVyYXRlUHJpbWUiOjUwMSwiYm4uanMiOjU5LCJidWZmZXIiOjkzLCJtaWxsZXItcmFiaW4iOjU0MSwicmFuZG9tYnl0ZXMiOjU1OH1dLDUwMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgcmFuZG9tQnl0ZXMgPSByZXF1aXJlKCdyYW5kb21ieXRlcycpOw0KbW9kdWxlLmV4cG9ydHMgPSBmaW5kUHJpbWU7DQpmaW5kUHJpbWUuc2ltcGxlU2lldmUgPSBzaW1wbGVTaWV2ZTsNCmZpbmRQcmltZS5mZXJtYXRUZXN0ID0gZmVybWF0VGVzdDsNCnZhciBCTiA9IHJlcXVpcmUoJ2JuLmpzJyk7DQp2YXIgVFdFTlRZRk9VUiA9IG5ldyBCTigyNCk7DQp2YXIgTWlsbGVyUmFiaW4gPSByZXF1aXJlKCdtaWxsZXItcmFiaW4nKTsNCnZhciBtaWxsZXJSYWJpbiA9IG5ldyBNaWxsZXJSYWJpbigpOw0KdmFyIE9ORSA9IG5ldyBCTigxKTsNCnZhciBUV08gPSBuZXcgQk4oMik7DQp2YXIgRklWRSA9IG5ldyBCTig1KTsNCnZhciBTSVhURUVOID0gbmV3IEJOKDE2KTsNCnZhciBFSUdIVCA9IG5ldyBCTig4KTsNCnZhciBURU4gPSBuZXcgQk4oMTApOw0KdmFyIFRIUkVFID0gbmV3IEJOKDMpOw0KdmFyIFNFVkVOID0gbmV3IEJOKDcpOw0KdmFyIEVMRVZFTiA9IG5ldyBCTigxMSk7DQp2YXIgRk9VUiA9IG5ldyBCTig0KTsNCnZhciBUV0VMVkUgPSBuZXcgQk4oMTIpOw0KdmFyIHByaW1lcyA9IG51bGw7DQoNCmZ1bmN0aW9uIF9nZXRQcmltZXMoKSB7DQogIGlmIChwcmltZXMgIT09IG51bGwpDQogICAgcmV0dXJuIHByaW1lczsNCg0KICB2YXIgbGltaXQgPSAweDEwMDAwMDsNCiAgdmFyIHJlcyA9IFtdOw0KICByZXNbMF0gPSAyOw0KICBmb3IgKHZhciBpID0gMSwgayA9IDM7IGsgPCBsaW1pdDsgayArPSAyKSB7DQogICAgdmFyIHNxcnQgPSBNYXRoLmNlaWwoTWF0aC5zcXJ0KGspKTsNCiAgICBmb3IgKHZhciBqID0gMDsgaiA8IGkgJiYgcmVzW2pdIDw9IHNxcnQ7IGorKykNCiAgICAgIGlmIChrICUgcmVzW2pdID09PSAwKQ0KICAgICAgICBicmVhazsNCg0KICAgIGlmIChpICE9PSBqICYmIHJlc1tqXSA8PSBzcXJ0KQ0KICAgICAgY29udGludWU7DQoNCiAgICByZXNbaSsrXSA9IGs7DQogIH0NCiAgcHJpbWVzID0gcmVzOw0KICByZXR1cm4gcmVzOw0KfQ0KDQpmdW5jdGlvbiBzaW1wbGVTaWV2ZShwKSB7DQogIHZhciBwcmltZXMgPSBfZ2V0UHJpbWVzKCk7DQoNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcmltZXMubGVuZ3RoOyBpKyspDQogICAgaWYgKHAubW9kbihwcmltZXNbaV0pID09PSAwKSB7DQogICAgICBpZiAocC5jbXBuKHByaW1lc1tpXSkgPT09IDApIHsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICB9IGVsc2Ugew0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICB9DQogICAgfQ0KDQogIHJldHVybiB0cnVlOw0KfQ0KDQpmdW5jdGlvbiBmZXJtYXRUZXN0KHApIHsNCiAgdmFyIHJlZCA9IEJOLm1vbnQocCk7DQogIHJldHVybiBUV08udG9SZWQocmVkKS5yZWRQb3cocC5zdWJuKDEpKS5mcm9tUmVkKCkuY21wbigxKSA9PT0gMDsNCn0NCg0KZnVuY3Rpb24gZmluZFByaW1lKGJpdHMsIGdlbikgew0KICBpZiAoYml0cyA8IDE2KSB7DQogICAgLy8gdGhpcyBpcyB3aGF0IG9wZW5zc2wgZG9lcw0KICAgIGlmIChnZW4gPT09IDIgfHwgZ2VuID09PSA1KSB7DQogICAgICByZXR1cm4gbmV3IEJOKFsweDhjLCAweDdiXSk7DQogICAgfSBlbHNlIHsNCiAgICAgIHJldHVybiBuZXcgQk4oWzB4OGMsIDB4MjddKTsNCiAgICB9DQogIH0NCiAgZ2VuID0gbmV3IEJOKGdlbik7DQoNCiAgdmFyIG51bSwgbjI7DQoNCiAgd2hpbGUgKHRydWUpIHsNCiAgICBudW0gPSBuZXcgQk4ocmFuZG9tQnl0ZXMoTWF0aC5jZWlsKGJpdHMgLyA4KSkpOw0KICAgIHdoaWxlIChudW0uYml0TGVuZ3RoKCkgPiBiaXRzKSB7DQogICAgICBudW0uaXNocm4oMSk7DQogICAgfQ0KICAgIGlmIChudW0uaXNFdmVuKCkpIHsNCiAgICAgIG51bS5pYWRkKE9ORSk7DQogICAgfQ0KICAgIGlmICghbnVtLnRlc3RuKDEpKSB7DQogICAgICBudW0uaWFkZChUV08pOw0KICAgIH0NCiAgICBpZiAoIWdlbi5jbXAoVFdPKSkgew0KICAgICAgd2hpbGUgKG51bS5tb2QoVFdFTlRZRk9VUikuY21wKEVMRVZFTikpIHsNCiAgICAgICAgbnVtLmlhZGQoRk9VUik7DQogICAgICB9DQogICAgfSBlbHNlIGlmICghZ2VuLmNtcChGSVZFKSkgew0KICAgICAgd2hpbGUgKG51bS5tb2QoVEVOKS5jbXAoVEhSRUUpKSB7DQogICAgICAgIG51bS5pYWRkKEZPVVIpOw0KICAgICAgfQ0KICAgIH0NCiAgICBuMiA9IG51bS5zaHJuKDEpOw0KICAgIGlmIChzaW1wbGVTaWV2ZShuMikgJiYgc2ltcGxlU2lldmUobnVtKSAmJg0KICAgICAgZmVybWF0VGVzdChuMikgJiYgZmVybWF0VGVzdChudW0pICYmDQogICAgICBtaWxsZXJSYWJpbi50ZXN0KG4yKSAmJiBtaWxsZXJSYWJpbi50ZXN0KG51bSkpIHsNCiAgICAgIHJldHVybiBudW07DQogICAgfQ0KICB9DQoNCn0NCg0KfSx7ImJuLmpzIjo1OSwibWlsbGVyLXJhYmluIjo1NDEsInJhbmRvbWJ5dGVzIjo1NTh9XSw1MDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHM9ew0KICAgICJtb2RwMSI6IHsNCiAgICAgICAgImdlbiI6ICIwMiIsDQogICAgICAgICJwcmltZSI6ICJmZmZmZmZmZmZmZmZmZmZmYzkwZmRhYTIyMTY4YzIzNGM0YzY2MjhiODBkYzFjZDEyOTAyNGUwODhhNjdjYzc0MDIwYmJlYTYzYjEzOWIyMjUxNGEwODc5OGUzNDA0ZGRlZjk1MTliM2NkM2E0MzFiMzAyYjBhNmRmMjVmMTQzNzRmZTEzNTZkNmQ1MWMyNDVlNDg1YjU3NjYyNWU3ZWM2ZjQ0YzQyZTlhNjNhMzYyMGZmZmZmZmZmZmZmZmZmZmYiDQogICAgfSwNCiAgICAibW9kcDIiOiB7DQogICAgICAgICJnZW4iOiAiMDIiLA0KICAgICAgICAicHJpbWUiOiAiZmZmZmZmZmZmZmZmZmZmZmM5MGZkYWEyMjE2OGMyMzRjNGM2NjI4YjgwZGMxY2QxMjkwMjRlMDg4YTY3Y2M3NDAyMGJiZWE2M2IxMzliMjI1MTRhMDg3OThlMzQwNGRkZWY5NTE5YjNjZDNhNDMxYjMwMmIwYTZkZjI1ZjE0Mzc0ZmUxMzU2ZDZkNTFjMjQ1ZTQ4NWI1NzY2MjVlN2VjNmY0NGM0MmU5YTYzN2VkNmIwYmZmNWNiNmY0MDZiN2VkZWUzODZiZmI1YTg5OWZhNWFlOWYyNDExN2M0YjFmZTY0OTI4NjY1MWVjZTY1MzgxZmZmZmZmZmZmZmZmZmZmZiINCiAgICB9LA0KICAgICJtb2RwNSI6IHsNCiAgICAgICAgImdlbiI6ICIwMiIsDQogICAgICAgICJwcmltZSI6ICJmZmZmZmZmZmZmZmZmZmZmYzkwZmRhYTIyMTY4YzIzNGM0YzY2MjhiODBkYzFjZDEyOTAyNGUwODhhNjdjYzc0MDIwYmJlYTYzYjEzOWIyMjUxNGEwODc5OGUzNDA0ZGRlZjk1MTliM2NkM2E0MzFiMzAyYjBhNmRmMjVmMTQzNzRmZTEzNTZkNmQ1MWMyNDVlNDg1YjU3NjYyNWU3ZWM2ZjQ0YzQyZTlhNjM3ZWQ2YjBiZmY1Y2I2ZjQwNmI3ZWRlZTM4NmJmYjVhODk5ZmE1YWU5ZjI0MTE3YzRiMWZlNjQ5Mjg2NjUxZWNlNDViM2RjMjAwN2NiOGExNjNiZjA1OThkYTQ4MzYxYzU1ZDM5YTY5MTYzZmE4ZmQyNGNmNWY4MzY1NWQyM2RjYTNhZDk2MWM2MmYzNTYyMDg1NTJiYjllZDUyOTA3NzA5Njk2NmQ2NzBjMzU0ZTRhYmM5ODA0ZjE3NDZjMDhjYTIzNzMyN2ZmZmZmZmZmZmZmZmZmZmYiDQogICAgfSwNCiAgICAibW9kcDE0Ijogew0KICAgICAgICAiZ2VuIjogIjAyIiwNCiAgICAgICAgInByaW1lIjogImZmZmZmZmZmZmZmZmZmZmZjOTBmZGFhMjIxNjhjMjM0YzRjNjYyOGI4MGRjMWNkMTI5MDI0ZTA4OGE2N2NjNzQwMjBiYmVhNjNiMTM5YjIyNTE0YTA4Nzk4ZTM0MDRkZGVmOTUxOWIzY2QzYTQzMWIzMDJiMGE2ZGYyNWYxNDM3NGZlMTM1NmQ2ZDUxYzI0NWU0ODViNTc2NjI1ZTdlYzZmNDRjNDJlOWE2MzdlZDZiMGJmZjVjYjZmNDA2YjdlZGVlMzg2YmZiNWE4OTlmYTVhZTlmMjQxMTdjNGIxZmU2NDkyODY2NTFlY2U0NWIzZGMyMDA3Y2I4YTE2M2JmMDU5OGRhNDgzNjFjNTVkMzlhNjkxNjNmYThmZDI0Y2Y1ZjgzNjU1ZDIzZGNhM2FkOTYxYzYyZjM1NjIwODU1MmJiOWVkNTI5MDc3MDk2OTY2ZDY3MGMzNTRlNGFiYzk4MDRmMTc0NmMwOGNhMTgyMTdjMzI5MDVlNDYyZTM2Y2UzYmUzOWU3NzJjMTgwZTg2MDM5YjI3ODNhMmVjMDdhMjhmYjVjNTVkZjA2ZjRjNTJjOWRlMmJjYmY2OTU1ODE3MTgzOTk1NDk3Y2VhOTU2YWU1MTVkMjI2MTg5OGZhMDUxMDE1NzI4ZTVhOGFhY2FhNjhmZmZmZmZmZmZmZmZmZmZmIg0KICAgIH0sDQogICAgIm1vZHAxNSI6IHsNCiAgICAgICAgImdlbiI6ICIwMiIsDQogICAgICAgICJwcmltZSI6ICJmZmZmZmZmZmZmZmZmZmZmYzkwZmRhYTIyMTY4YzIzNGM0YzY2MjhiODBkYzFjZDEyOTAyNGUwODhhNjdjYzc0MDIwYmJlYTYzYjEzOWIyMjUxNGEwODc5OGUzNDA0ZGRlZjk1MTliM2NkM2E0MzFiMzAyYjBhNmRmMjVmMTQzNzRmZTEzNTZkNmQ1MWMyNDVlNDg1YjU3NjYyNWU3ZWM2ZjQ0YzQyZTlhNjM3ZWQ2YjBiZmY1Y2I2ZjQwNmI3ZWRlZTM4NmJmYjVhODk5ZmE1YWU5ZjI0MTE3YzRiMWZlNjQ5Mjg2NjUxZWNlNDViM2RjMjAwN2NiOGExNjNiZjA1OThkYTQ4MzYxYzU1ZDM5YTY5MTYzZmE4ZmQyNGNmNWY4MzY1NWQyM2RjYTNhZDk2MWM2MmYzNTYyMDg1NTJiYjllZDUyOTA3NzA5Njk2NmQ2NzBjMzU0ZTRhYmM5ODA0ZjE3NDZjMDhjYTE4MjE3YzMyOTA1ZTQ2MmUzNmNlM2JlMzllNzcyYzE4MGU4NjAzOWIyNzgzYTJlYzA3YTI4ZmI1YzU1ZGYwNmY0YzUyYzlkZTJiY2JmNjk1NTgxNzE4Mzk5NTQ5N2NlYTk1NmFlNTE1ZDIyNjE4OThmYTA1MTAxNTcyOGU1YThhYWFjNDJkYWQzMzE3MGQwNDUwN2EzM2E4NTUyMWFiZGYxY2JhNjRlY2ZiODUwNDU4ZGJlZjBhOGFlYTcxNTc1ZDA2MGM3ZGIzOTcwZjg1YTZlMWU0YzdhYmY1YWU4Y2RiMDkzM2Q3MWU4Yzk0ZTA0YTI1NjE5ZGNlZTNkMjI2MWFkMmVlNmJmMTJmZmEwNmQ5OGEwODY0ZDg3NjAyNzMzZWM4NmE2NDUyMWYyYjE4MTc3YjIwMGNiYmUxMTc1NzdhNjE1ZDZjNzcwOTg4YzBiYWQ5NDZlMjA4ZTI0ZmEwNzRlNWFiMzE0M2RiNWJmY2UwZmQxMDhlNGI4MmQxMjBhOTNhZDJjYWZmZmZmZmZmZmZmZmZmZmYiDQogICAgfSwNCiAgICAibW9kcDE2Ijogew0KICAgICAgICAiZ2VuIjogIjAyIiwNCiAgICAgICAgInByaW1lIjogImZmZmZmZmZmZmZmZmZmZmZjOTBmZGFhMjIxNjhjMjM0YzRjNjYyOGI4MGRjMWNkMTI5MDI0ZTA4OGE2N2NjNzQwMjBiYmVhNjNiMTM5YjIyNTE0YTA4Nzk4ZTM0MDRkZGVmOTUxOWIzY2QzYTQzMWIzMDJiMGE2ZGYyNWYxNDM3NGZlMTM1NmQ2ZDUxYzI0NWU0ODViNTc2NjI1ZTdlYzZmNDRjNDJlOWE2MzdlZDZiMGJmZjVjYjZmNDA2YjdlZGVlMzg2YmZiNWE4OTlmYTVhZTlmMjQxMTdjNGIxZmU2NDkyODY2NTFlY2U0NWIzZGMyMDA3Y2I4YTE2M2JmMDU5OGRhNDgzNjFjNTVkMzlhNjkxNjNmYThmZDI0Y2Y1ZjgzNjU1ZDIzZGNhM2FkOTYxYzYyZjM1NjIwODU1MmJiOWVkNTI5MDc3MDk2OTY2ZDY3MGMzNTRlNGFiYzk4MDRmMTc0NmMwOGNhMTgyMTdjMzI5MDVlNDYyZTM2Y2UzYmUzOWU3NzJjMTgwZTg2MDM5YjI3ODNhMmVjMDdhMjhmYjVjNTVkZjA2ZjRjNTJjOWRlMmJjYmY2OTU1ODE3MTgzOTk1NDk3Y2VhOTU2YWU1MTVkMjI2MTg5OGZhMDUxMDE1NzI4ZTVhOGFhYWM0MmRhZDMzMTcwZDA0NTA3YTMzYTg1NTIxYWJkZjFjYmE2NGVjZmI4NTA0NThkYmVmMGE4YWVhNzE1NzVkMDYwYzdkYjM5NzBmODVhNmUxZTRjN2FiZjVhZThjZGIwOTMzZDcxZThjOTRlMDRhMjU2MTlkY2VlM2QyMjYxYWQyZWU2YmYxMmZmYTA2ZDk4YTA4NjRkODc2MDI3MzNlYzg2YTY0NTIxZjJiMTgxNzdiMjAwY2JiZTExNzU3N2E2MTVkNmM3NzA5ODhjMGJhZDk0NmUyMDhlMjRmYTA3NGU1YWIzMTQzZGI1YmZjZTBmZDEwOGU0YjgyZDEyMGE5MjEwODAxMWE3MjNjMTJhNzg3ZTZkNzg4NzE5YTEwYmRiYTViMjY5OWMzMjcxODZhZjRlMjNjMWE5NDY4MzRiNjE1MGJkYTI1ODNlOWNhMmFkNDRjZThkYmJiYzJkYjA0ZGU4ZWY5MmU4ZWZjMTQxZmJlY2FhNjI4N2M1OTQ3NGU2YmMwNWQ5OWIyOTY0ZmEwOTBjM2EyMjMzYmExODY1MTViZTdlZDFmNjEyOTcwY2VlMmQ3YWZiODFiZGQ3NjIxNzA0ODFjZDAwNjkxMjdkNWIwNWFhOTkzYjRlYTk4OGQ4ZmRkYzE4NmZmYjdkYzkwYTZjMDhmNGRmNDM1YzkzNDA2MzE5OWZmZmZmZmZmZmZmZmZmZmYiDQogICAgfSwNCiAgICAibW9kcDE3Ijogew0KICAgICAgICAiZ2VuIjogIjAyIiwNCiAgICAgICAgInByaW1lIjogImZmZmZmZmZmZmZmZmZmZmZjOTBmZGFhMjIxNjhjMjM0YzRjNjYyOGI4MGRjMWNkMTI5MDI0ZTA4OGE2N2NjNzQwMjBiYmVhNjNiMTM5YjIyNTE0YTA4Nzk4ZTM0MDRkZGVmOTUxOWIzY2QzYTQzMWIzMDJiMGE2ZGYyNWYxNDM3NGZlMTM1NmQ2ZDUxYzI0NWU0ODViNTc2NjI1ZTdlYzZmNDRjNDJlOWE2MzdlZDZiMGJmZjVjYjZmNDA2YjdlZGVlMzg2YmZiNWE4OTlmYTVhZTlmMjQxMTdjNGIxZmU2NDkyODY2NTFlY2U0NWIzZGMyMDA3Y2I4YTE2M2JmMDU5OGRhNDgzNjFjNTVkMzlhNjkxNjNmYThmZDI0Y2Y1ZjgzNjU1ZDIzZGNhM2FkOTYxYzYyZjM1NjIwODU1MmJiOWVkNTI5MDc3MDk2OTY2ZDY3MGMzNTRlNGFiYzk4MDRmMTc0NmMwOGNhMTgyMTdjMzI5MDVlNDYyZTM2Y2UzYmUzOWU3NzJjMTgwZTg2MDM5YjI3ODNhMmVjMDdhMjhmYjVjNTVkZjA2ZjRjNTJjOWRlMmJjYmY2OTU1ODE3MTgzOTk1NDk3Y2VhOTU2YWU1MTVkMjI2MTg5OGZhMDUxMDE1NzI4ZTVhOGFhYWM0MmRhZDMzMTcwZDA0NTA3YTMzYTg1NTIxYWJkZjFjYmE2NGVjZmI4NTA0NThkYmVmMGE4YWVhNzE1NzVkMDYwYzdkYjM5NzBmODVhNmUxZTRjN2FiZjVhZThjZGIwOTMzZDcxZThjOTRlMDRhMjU2MTlkY2VlM2QyMjYxYWQyZWU2YmYxMmZmYTA2ZDk4YTA4NjRkODc2MDI3MzNlYzg2YTY0NTIxZjJiMTgxNzdiMjAwY2JiZTExNzU3N2E2MTVkNmM3NzA5ODhjMGJhZDk0NmUyMDhlMjRmYTA3NGU1YWIzMTQzZGI1YmZjZTBmZDEwOGU0YjgyZDEyMGE5MjEwODAxMWE3MjNjMTJhNzg3ZTZkNzg4NzE5YTEwYmRiYTViMjY5OWMzMjcxODZhZjRlMjNjMWE5NDY4MzRiNjE1MGJkYTI1ODNlOWNhMmFkNDRjZThkYmJiYzJkYjA0ZGU4ZWY5MmU4ZWZjMTQxZmJlY2FhNjI4N2M1OTQ3NGU2YmMwNWQ5OWIyOTY0ZmEwOTBjM2EyMjMzYmExODY1MTViZTdlZDFmNjEyOTcwY2VlMmQ3YWZiODFiZGQ3NjIxNzA0ODFjZDAwNjkxMjdkNWIwNWFhOTkzYjRlYTk4OGQ4ZmRkYzE4NmZmYjdkYzkwYTZjMDhmNGRmNDM1YzkzNDAyODQ5MjM2YzNmYWI0ZDI3YzcwMjZjMWQ0ZGNiMjYwMjY0NmRlYzk3NTFlNzYzZGJhMzdiZGY4ZmY5NDA2YWQ5ZTUzMGVlNWRiMzgyZjQxMzAwMWFlYjA2YTUzZWQ5MDI3ZDgzMTE3OTcyN2IwODY1YTg5MThkYTNlZGJlYmNmOWIxNGVkNDRjZTZjYmFjZWQ0YmIxYmRiN2YxNDQ3ZTZjYzI1NGIzMzIwNTE1MTJiZDdhZjQyNmZiOGY0MDEzNzhjZDJiZjU5ODNjYTAxYzY0YjkyZWNmMDMyZWExNWQxNzIxZDAzZjQ4MmQ3Y2U2ZTc0ZmVmNmQ1NWU3MDJmNDY5ODBjODJiNWE4NDAzMTkwMGIxYzllNTllN2M5N2ZiZWM3ZThmMzIzYTk3YTdlMzZjYzg4YmUwZjFkNDViN2ZmNTg1YWM1NGJkNDA3YjIyYjQxNTRhYWNjOGY2ZDdlYmY0OGUxZDgxNGNjNWVkMjBmODAzN2UwYTc5NzE1ZWVmMjliZTMyODA2YTFkNThiYjdjNWRhNzZmNTUwYWEzZDhhMWZiZmYwZWIxOWNjYjFhMzEzZDU1Y2RhNTZjOWVjMmVmMjk2MzIzODdmZThkNzZlM2MwNDY4MDQzZThmNjYzZjQ4NjBlZTEyYmYyZDViMGI3NDc0ZDZlNjk0ZjkxZTZkY2M0MDI0ZmZmZmZmZmZmZmZmZmZmZiINCiAgICB9LA0KICAgICJtb2RwMTgiOiB7DQogICAgICAgICJnZW4iOiAiMDIiLA0KICAgICAgICAicHJpbWUiOiAiZmZmZmZmZmZmZmZmZmZmZmM5MGZkYWEyMjE2OGMyMzRjNGM2NjI4YjgwZGMxY2QxMjkwMjRlMDg4YTY3Y2M3NDAyMGJiZWE2M2IxMzliMjI1MTRhMDg3OThlMzQwNGRkZWY5NTE5YjNjZDNhNDMxYjMwMmIwYTZkZjI1ZjE0Mzc0ZmUxMzU2ZDZkNTFjMjQ1ZTQ4NWI1NzY2MjVlN2VjNmY0NGM0MmU5YTYzN2VkNmIwYmZmNWNiNmY0MDZiN2VkZWUzODZiZmI1YTg5OWZhNWFlOWYyNDExN2M0YjFmZTY0OTI4NjY1MWVjZTQ1YjNkYzIwMDdjYjhhMTYzYmYwNTk4ZGE0ODM2MWM1NWQzOWE2OTE2M2ZhOGZkMjRjZjVmODM2NTVkMjNkY2EzYWQ5NjFjNjJmMzU2MjA4NTUyYmI5ZWQ1MjkwNzcwOTY5NjZkNjcwYzM1NGU0YWJjOTgwNGYxNzQ2YzA4Y2ExODIxN2MzMjkwNWU0NjJlMzZjZTNiZTM5ZTc3MmMxODBlODYwMzliMjc4M2EyZWMwN2EyOGZiNWM1NWRmMDZmNGM1MmM5ZGUyYmNiZjY5NTU4MTcxODM5OTU0OTdjZWE5NTZhZTUxNWQyMjYxODk4ZmEwNTEwMTU3MjhlNWE4YWFhYzQyZGFkMzMxNzBkMDQ1MDdhMzNhODU1MjFhYmRmMWNiYTY0ZWNmYjg1MDQ1OGRiZWYwYThhZWE3MTU3NWQwNjBjN2RiMzk3MGY4NWE2ZTFlNGM3YWJmNWFlOGNkYjA5MzNkNzFlOGM5NGUwNGEyNTYxOWRjZWUzZDIyNjFhZDJlZTZiZjEyZmZhMDZkOThhMDg2NGQ4NzYwMjczM2VjODZhNjQ1MjFmMmIxODE3N2IyMDBjYmJlMTE3NTc3YTYxNWQ2Yzc3MDk4OGMwYmFkOTQ2ZTIwOGUyNGZhMDc0ZTVhYjMxNDNkYjViZmNlMGZkMTA4ZTRiODJkMTIwYTkyMTA4MDExYTcyM2MxMmE3ODdlNmQ3ODg3MTlhMTBiZGJhNWIyNjk5YzMyNzE4NmFmNGUyM2MxYTk0NjgzNGI2MTUwYmRhMjU4M2U5Y2EyYWQ0NGNlOGRiYmJjMmRiMDRkZThlZjkyZThlZmMxNDFmYmVjYWE2Mjg3YzU5NDc0ZTZiYzA1ZDk5YjI5NjRmYTA5MGMzYTIyMzNiYTE4NjUxNWJlN2VkMWY2MTI5NzBjZWUyZDdhZmI4MWJkZDc2MjE3MDQ4MWNkMDA2OTEyN2Q1YjA1YWE5OTNiNGVhOTg4ZDhmZGRjMTg2ZmZiN2RjOTBhNmMwOGY0ZGY0MzVjOTM0MDI4NDkyMzZjM2ZhYjRkMjdjNzAyNmMxZDRkY2IyNjAyNjQ2ZGVjOTc1MWU3NjNkYmEzN2JkZjhmZjk0MDZhZDllNTMwZWU1ZGIzODJmNDEzMDAxYWViMDZhNTNlZDkwMjdkODMxMTc5NzI3YjA4NjVhODkxOGRhM2VkYmViY2Y5YjE0ZWQ0NGNlNmNiYWNlZDRiYjFiZGI3ZjE0NDdlNmNjMjU0YjMzMjA1MTUxMmJkN2FmNDI2ZmI4ZjQwMTM3OGNkMmJmNTk4M2NhMDFjNjRiOTJlY2YwMzJlYTE1ZDE3MjFkMDNmNDgyZDdjZTZlNzRmZWY2ZDU1ZTcwMmY0Njk4MGM4MmI1YTg0MDMxOTAwYjFjOWU1OWU3Yzk3ZmJlYzdlOGYzMjNhOTdhN2UzNmNjODhiZTBmMWQ0NWI3ZmY1ODVhYzU0YmQ0MDdiMjJiNDE1NGFhY2M4ZjZkN2ViZjQ4ZTFkODE0Y2M1ZWQyMGY4MDM3ZTBhNzk3MTVlZWYyOWJlMzI4MDZhMWQ1OGJiN2M1ZGE3NmY1NTBhYTNkOGExZmJmZjBlYjE5Y2NiMWEzMTNkNTVjZGE1NmM5ZWMyZWYyOTYzMjM4N2ZlOGQ3NmUzYzA0NjgwNDNlOGY2NjNmNDg2MGVlMTJiZjJkNWIwYjc0NzRkNmU2OTRmOTFlNmRiZTExNTk3NGEzOTI2ZjEyZmVlNWU0Mzg3NzdjYjZhOTMyZGY4Y2Q4YmVjNGQwNzNiOTMxYmEzYmM4MzJiNjhkOWRkMzAwNzQxZmE3YmY4YWZjNDdlZDI1NzZmNjkzNmJhNDI0NjYzYWFiNjM5YzVhZTRmNTY4MzQyM2I0NzQyYmYxYzk3ODIzOGYxNmNiZTM5ZDY1MmRlM2ZkYjhiZWZjODQ4YWQ5MjIyMjJlMDRhNDAzN2MwNzEzZWI1N2E4MWEyM2YwYzczNDczZmM2NDZjZWEzMDZiNGJjYmM4ODYyZjgzODVkZGZhOWQ0YjdmYTJjMDg3ZTg3OTY4MzMwM2VkNWJkZDNhMDYyYjNjZjViM2EyNzhhNjZkMmExM2Y4M2Y0NGY4MmRkZjMxMGVlMDc0YWI2YTM2NDU5N2U4OTlhMDI1NWRjMTY0ZjMxY2M1MDg0Njg1MWRmOWFiNDgxOTVkZWQ3ZWExYjFkNTEwYmQ3ZWU3NGQ3M2ZhZjM2YmMzMWVjZmEyNjgzNTkwNDZmNGViODc5ZjkyNDAwOTQzOGI0ODFjNmNkNzg4OWEwMDJlZDVlZTM4MmJjOTE5MGRhNmZjMDI2ZTQ3OTU1OGU0NDc1Njc3ZTlhYTllMzA1MGUyNzY1Njk0ZGZjODFmNTZlODgwYjk2ZTcxNjBjOTgwZGQ5OGVkZDNkZmZmZmZmZmZmZmZmZmZmZmYiDQogICAgfQ0KfQ0KfSx7fV0sNTAzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKQ0KdmFyIEJpZ0ludGVnZXIgPSByZXF1aXJlKCdiaWdpJykNCg0KdmFyIFBvaW50ID0gcmVxdWlyZSgnLi9wb2ludCcpDQoNCmZ1bmN0aW9uIEN1cnZlKHAsIGEsIGIsIEd4LCBHeSwgbiwgaCkgew0KICB0aGlzLnAgPSBwDQogIHRoaXMuYSA9IGENCiAgdGhpcy5iID0gYg0KICB0aGlzLkcgPSBQb2ludC5mcm9tQWZmaW5lKHRoaXMsIEd4LCBHeSkNCiAgdGhpcy5uID0gbg0KICB0aGlzLmggPSBoDQoNCiAgdGhpcy5pbmZpbml0eSA9IG5ldyBQb2ludCh0aGlzLCBudWxsLCBudWxsLCBCaWdJbnRlZ2VyLlpFUk8pDQoNCiAgLy8gcmVzdWx0IGNhY2hpbmcNCiAgdGhpcy5wT3ZlckZvdXIgPSBwLmFkZChCaWdJbnRlZ2VyLk9ORSkuc2hpZnRSaWdodCgyKQ0KfQ0KDQpDdXJ2ZS5wcm90b3R5cGUucG9pbnRGcm9tWCA9IGZ1bmN0aW9uKGlzT2RkLCB4KSB7DQogIHZhciBhbHBoYSA9IHgucG93KDMpLmFkZCh0aGlzLmEubXVsdGlwbHkoeCkpLmFkZCh0aGlzLmIpLm1vZCh0aGlzLnApDQogIHZhciBiZXRhID0gYWxwaGEubW9kUG93KHRoaXMucE92ZXJGb3VyLCB0aGlzLnApIC8vIFhYWDogbm90IGNvbXBhdGlibGUgd2l0aCBhbGwgY3VydmVzDQoNCiAgdmFyIHkgPSBiZXRhDQogIGlmIChiZXRhLmlzRXZlbigpIF4gIWlzT2RkKSB7DQogICAgeSA9IHRoaXMucC5zdWJ0cmFjdCh5KSAvLyAteSAlIHANCiAgfQ0KDQogIHJldHVybiBQb2ludC5mcm9tQWZmaW5lKHRoaXMsIHgsIHkpDQp9DQoNCkN1cnZlLnByb3RvdHlwZS5pc0luZmluaXR5ID0gZnVuY3Rpb24oUSkgew0KICBpZiAoUSA9PT0gdGhpcy5pbmZpbml0eSkgcmV0dXJuIHRydWUNCg0KICByZXR1cm4gUS56LnNpZ251bSgpID09PSAwICYmIFEueS5zaWdudW0oKSAhPT0gMA0KfQ0KDQpDdXJ2ZS5wcm90b3R5cGUuaXNPbkN1cnZlID0gZnVuY3Rpb24oUSkgew0KICBpZiAodGhpcy5pc0luZmluaXR5KFEpKSByZXR1cm4gdHJ1ZQ0KDQogIHZhciB4ID0gUS5hZmZpbmVYDQogIHZhciB5ID0gUS5hZmZpbmVZDQogIHZhciBhID0gdGhpcy5hDQogIHZhciBiID0gdGhpcy5iDQogIHZhciBwID0gdGhpcy5wDQoNCiAgLy8gQ2hlY2sgdGhhdCB4USBhbmQgeVEgYXJlIGludGVnZXJzIGluIHRoZSBpbnRlcnZhbCBbMCwgcCAtIDFdDQogIGlmICh4LnNpZ251bSgpIDwgMCB8fCB4LmNvbXBhcmVUbyhwKSA+PSAwKSByZXR1cm4gZmFsc2UNCiAgaWYgKHkuc2lnbnVtKCkgPCAwIHx8IHkuY29tcGFyZVRvKHApID49IDApIHJldHVybiBmYWxzZQ0KDQogIC8vIGFuZCBjaGVjayB0aGF0IHleMiA9IHheMyArIGF4ICsgYiAobW9kIHApDQogIHZhciBsaHMgPSB5LnNxdWFyZSgpLm1vZChwKQ0KICB2YXIgcmhzID0geC5wb3coMykuYWRkKGEubXVsdGlwbHkoeCkpLmFkZChiKS5tb2QocCkNCiAgcmV0dXJuIGxocy5lcXVhbHMocmhzKQ0KfQ0KDQovKioNCiAqIFZhbGlkYXRlIGFuIGVsbGlwdGljIGN1cnZlIHBvaW50Lg0KICoNCiAqIFNlZSBTRUMgMSwgc2VjdGlvbiAzLjIuMi4xOiBFbGxpcHRpYyBDdXJ2ZSBQdWJsaWMgS2V5IFZhbGlkYXRpb24gUHJpbWl0aXZlDQogKi8NCkN1cnZlLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uKFEpIHsNCiAgLy8gQ2hlY2sgUSAhPSBPDQogIGFzc2VydCghdGhpcy5pc0luZmluaXR5KFEpLCAnUG9pbnQgaXMgYXQgaW5maW5pdHknKQ0KICBhc3NlcnQodGhpcy5pc09uQ3VydmUoUSksICdQb2ludCBpcyBub3Qgb24gdGhlIGN1cnZlJykNCg0KICAvLyBDaGVjayBuUSA9IE8gKHdoZXJlIFEgaXMgYSBzY2FsYXIgbXVsdGlwbGUgb2YgRykNCiAgdmFyIG5RID0gUS5tdWx0aXBseSh0aGlzLm4pDQogIGFzc2VydCh0aGlzLmlzSW5maW5pdHkoblEpLCAnUG9pbnQgaXMgbm90IGEgc2NhbGFyIG11bHRpcGxlIG9mIEcnKQ0KDQogIHJldHVybiB0cnVlDQp9DQoNCm1vZHVsZS5leHBvcnRzID0gQ3VydmUNCg0KfSx7Ii4vcG9pbnQiOjUwNywiYXNzZXJ0IjoxNSwiYmlnaSI6Mzd9XSw1MDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHM9ew0KICAic2VjcDEyOHIxIjogew0KICAgICJwIjogImZmZmZmZmZkZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmIiwNCiAgICAiYSI6ICJmZmZmZmZmZGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYyIsDQogICAgImIiOiAiZTg3NTc5YzExMDc5ZjQzZGQ4MjQ5OTNjMmNlZTVlZDMiLA0KICAgICJuIjogImZmZmZmZmZlMDAwMDAwMDA3NWEzMGQxYjkwMzhhMTE1IiwNCiAgICAiaCI6ICIwMSIsDQogICAgIkd4IjogIjE2MWZmNzUyOGI4OTliMmQwYzI4NjA3Y2E1MmM1Yjg2IiwNCiAgICAiR3kiOiAiY2Y1YWM4Mzk1YmFmZWIxM2MwMmRhMjkyZGRlZDdhODMiDQogIH0sDQogICJzZWNwMTYwazEiOiB7DQogICAgInAiOiAiZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmVmZmZmYWM3MyIsDQogICAgImEiOiAiMDAiLA0KICAgICJiIjogIjA3IiwNCiAgICAibiI6ICIwMTAwMDAwMDAwMDAwMDAwMDAwMDAxYjhmYTE2ZGZhYjlhY2ExNmI2YjMiLA0KICAgICJoIjogIjAxIiwNCiAgICAiR3giOiAiM2I0YzM4MmNlMzdhYTE5MmE0MDE5ZTc2MzAzNmY0ZjVkZDRkN2ViYiIsDQogICAgIkd5IjogIjkzOGNmOTM1MzE4ZmRjZWQ2YmMyODI4NjUzMTczM2MzZjAzYzRmZWUiDQogIH0sDQogICJzZWNwMTYwcjEiOiB7DQogICAgInAiOiAiZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmY3ZmZmZmZmZiIsDQogICAgImEiOiAiZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmY3ZmZmZmZmYyIsDQogICAgImIiOiAiMWM5N2JlZmM1NGJkN2E4YjY1YWNmODlmODFkNGQ0YWRjNTY1ZmE0NSIsDQogICAgIm4iOiAiMDEwMDAwMDAwMDAwMDAwMDAwMDAwMWY0YzhmOTI3YWVkM2NhNzUyMjU3IiwNCiAgICAiaCI6ICIwMSIsDQogICAgIkd4IjogIjRhOTZiNTY4OGVmNTczMjg0NjY0Njk4OTY4YzM4YmI5MTNjYmZjODIiLA0KICAgICJHeSI6ICIyM2E2Mjg1NTMxNjg5NDdkNTlkY2M5MTIwNDIzNTEzNzdhYzVmYjMyIg0KICB9LA0KICAic2VjcDE5MmsxIjogew0KICAgICJwIjogImZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmVmZmZmZWUzNyIsDQogICAgImEiOiAiMDAiLA0KICAgICJiIjogIjAzIiwNCiAgICAibiI6ICJmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmUyNmYyZmMxNzBmNjk0NjZhNzRkZWZkOGQiLA0KICAgICJoIjogIjAxIiwNCiAgICAiR3giOiAiZGI0ZmYxMGVjMDU3ZTlhZTI2YjA3ZDAyODBiN2Y0MzQxZGE1ZDFiMWVhZTA2YzdkIiwNCiAgICAiR3kiOiAiOWIyZjJmNmQ5YzU2MjhhNzg0NDE2M2QwMTViZTg2MzQ0MDgyYWE4OGQ5NWUyZjlkIg0KICB9LA0KICAic2VjcDE5MnIxIjogew0KICAgICJwIjogImZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZlZmZmZmZmZmZmZmZmZmZmZiIsDQogICAgImEiOiAiZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmVmZmZmZmZmZmZmZmZmZmZjIiwNCiAgICAiYiI6ICI2NDIxMDUxOWU1OWM4MGU3MGZhN2U5YWI3MjI0MzA0OWZlYjhkZWVjYzE0NmI5YjEiLA0KICAgICJuIjogImZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjk5ZGVmODM2MTQ2YmM5YjFiNGQyMjgzMSIsDQogICAgImgiOiAiMDEiLA0KICAgICJHeCI6ICIxODhkYTgwZWIwMzA5MGY2N2NiZjIwZWI0M2ExODgwMGY0ZmYwYWZkODJmZjEwMTIiLA0KICAgICJHeSI6ICIwNzE5MmI5NWZmYzhkYTc4NjMxMDExZWQ2YjI0Y2RkNTczZjk3N2ExMWU3OTQ4MTEiDQogIH0sDQogICJzZWNwMjU2azEiOiB7DQogICAgInAiOiAiZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmVmZmZmZmMyZiIsDQogICAgImEiOiAiMDAiLA0KICAgICJiIjogIjA3IiwNCiAgICAibiI6ICJmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZWJhYWVkY2U2YWY0OGEwM2JiZmQyNWU4Y2QwMzY0MTQxIiwNCiAgICAiaCI6ICIwMSIsDQogICAgIkd4IjogIjc5YmU2NjdlZjlkY2JiYWM1NWEwNjI5NWNlODcwYjA3MDI5YmZjZGIyZGNlMjhkOTU5ZjI4MTViMTZmODE3OTgiLA0KICAgICJHeSI6ICI0ODNhZGE3NzI2YTNjNDY1NWRhNGZiZmMwZTExMDhhOGZkMTdiNDQ4YTY4NTU0MTk5YzQ3ZDA4ZmZiMTBkNGI4Ig0KICB9LA0KICAic2VjcDI1NnIxIjogew0KICAgICJwIjogImZmZmZmZmZmMDAwMDAwMDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYiLA0KICAgICJhIjogImZmZmZmZmZmMDAwMDAwMDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmMiLA0KICAgICJiIjogIjVhYzYzNWQ4YWEzYTkzZTdiM2ViYmQ1NTc2OTg4NmJjNjUxZDA2YjBjYzUzYjBmNjNiY2UzYzNlMjdkMjYwNGIiLA0KICAgICJuIjogImZmZmZmZmZmMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmYmNlNmZhYWRhNzE3OWU4NGYzYjljYWMyZmM2MzI1NTEiLA0KICAgICJoIjogIjAxIiwNCiAgICAiR3giOiAiNmIxN2QxZjJlMTJjNDI0N2Y4YmNlNmU1NjNhNDQwZjI3NzAzN2Q4MTJkZWIzM2EwZjRhMTM5NDVkODk4YzI5NiIsDQogICAgIkd5IjogIjRmZTM0MmUyZmUxYTdmOWI4ZWU3ZWI0YTdjMGY5ZTE2MmJjZTMzNTc2YjMxNWVjZWNiYjY0MDY4MzdiZjUxZjUiDQogIH0NCn0NCg0KfSx7fV0sNTA1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBQb2ludCA9IHJlcXVpcmUoJy4vcG9pbnQnKQ0KdmFyIEN1cnZlID0gcmVxdWlyZSgnLi9jdXJ2ZScpDQoNCnZhciBnZXRDdXJ2ZUJ5TmFtZSA9IHJlcXVpcmUoJy4vbmFtZXMnKQ0KDQptb2R1bGUuZXhwb3J0cyA9IHsNCiAgQ3VydmU6IEN1cnZlLA0KICBQb2ludDogUG9pbnQsDQogIGdldEN1cnZlQnlOYW1lOiBnZXRDdXJ2ZUJ5TmFtZQ0KfQ0KDQp9LHsiLi9jdXJ2ZSI6NTAzLCIuL25hbWVzIjo1MDYsIi4vcG9pbnQiOjUwN31dLDUwNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgQmlnSW50ZWdlciA9IHJlcXVpcmUoJ2JpZ2knKQ0KDQp2YXIgY3VydmVzID0gcmVxdWlyZSgnLi9jdXJ2ZXMnKQ0KdmFyIEN1cnZlID0gcmVxdWlyZSgnLi9jdXJ2ZScpDQoNCmZ1bmN0aW9uIGdldEN1cnZlQnlOYW1lKG5hbWUpIHsNCiAgdmFyIGN1cnZlID0gY3VydmVzW25hbWVdDQogIGlmICghY3VydmUpIHJldHVybiBudWxsDQoNCiAgdmFyIHAgPSBuZXcgQmlnSW50ZWdlcihjdXJ2ZS5wLCAxNikNCiAgdmFyIGEgPSBuZXcgQmlnSW50ZWdlcihjdXJ2ZS5hLCAxNikNCiAgdmFyIGIgPSBuZXcgQmlnSW50ZWdlcihjdXJ2ZS5iLCAxNikNCiAgdmFyIG4gPSBuZXcgQmlnSW50ZWdlcihjdXJ2ZS5uLCAxNikNCiAgdmFyIGggPSBuZXcgQmlnSW50ZWdlcihjdXJ2ZS5oLCAxNikNCiAgdmFyIEd4ID0gbmV3IEJpZ0ludGVnZXIoY3VydmUuR3gsIDE2KQ0KICB2YXIgR3kgPSBuZXcgQmlnSW50ZWdlcihjdXJ2ZS5HeSwgMTYpDQoNCiAgcmV0dXJuIG5ldyBDdXJ2ZShwLCBhLCBiLCBHeCwgR3ksIG4sIGgpDQp9DQoNCm1vZHVsZS5leHBvcnRzID0gZ2V0Q3VydmVCeU5hbWUNCg0KfSx7Ii4vY3VydmUiOjUwMywiLi9jdXJ2ZXMiOjUwNCwiYmlnaSI6Mzd9XSw1MDc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpDQp2YXIgQmlnSW50ZWdlciA9IHJlcXVpcmUoJ2JpZ2knKQ0KDQp2YXIgVEhSRUUgPSBCaWdJbnRlZ2VyLnZhbHVlT2YoMykNCg0KZnVuY3Rpb24gUG9pbnQoY3VydmUsIHgsIHksIHopIHsNCiAgYXNzZXJ0Lm5vdFN0cmljdEVxdWFsKHosIHVuZGVmaW5lZCwgJ01pc3NpbmcgWiBjb29yZGluYXRlJykNCg0KICB0aGlzLmN1cnZlID0gY3VydmUNCiAgdGhpcy54ID0geA0KICB0aGlzLnkgPSB5DQogIHRoaXMueiA9IHoNCiAgdGhpcy5fekludiA9IG51bGwNCg0KICB0aGlzLmNvbXByZXNzZWQgPSB0cnVlDQp9DQoNCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShQb2ludC5wcm90b3R5cGUsICd6SW52Jywgew0KICBnZXQ6IGZ1bmN0aW9uKCkgew0KICAgIGlmICh0aGlzLl96SW52ID09PSBudWxsKSB7DQogICAgICB0aGlzLl96SW52ID0gdGhpcy56Lm1vZEludmVyc2UodGhpcy5jdXJ2ZS5wKQ0KICAgIH0NCg0KICAgIHJldHVybiB0aGlzLl96SW52DQogIH0NCn0pDQoNCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShQb2ludC5wcm90b3R5cGUsICdhZmZpbmVYJywgew0KICBnZXQ6IGZ1bmN0aW9uKCkgew0KICAgIHJldHVybiB0aGlzLngubXVsdGlwbHkodGhpcy56SW52KS5tb2QodGhpcy5jdXJ2ZS5wKQ0KICB9DQp9KQ0KDQpPYmplY3QuZGVmaW5lUHJvcGVydHkoUG9pbnQucHJvdG90eXBlLCAnYWZmaW5lWScsIHsNCiAgZ2V0OiBmdW5jdGlvbigpIHsNCiAgICByZXR1cm4gdGhpcy55Lm11bHRpcGx5KHRoaXMuekludikubW9kKHRoaXMuY3VydmUucCkNCiAgfQ0KfSkNCg0KUG9pbnQuZnJvbUFmZmluZSA9IGZ1bmN0aW9uKGN1cnZlLCB4LCB5KSB7DQogIHJldHVybiBuZXcgUG9pbnQoY3VydmUsIHgsIHksIEJpZ0ludGVnZXIuT05FKQ0KfQ0KDQpQb2ludC5wcm90b3R5cGUuZXF1YWxzID0gZnVuY3Rpb24ob3RoZXIpIHsNCiAgaWYgKG90aGVyID09PSB0aGlzKSByZXR1cm4gdHJ1ZQ0KICBpZiAodGhpcy5jdXJ2ZS5pc0luZmluaXR5KHRoaXMpKSByZXR1cm4gdGhpcy5jdXJ2ZS5pc0luZmluaXR5KG90aGVyKQ0KICBpZiAodGhpcy5jdXJ2ZS5pc0luZmluaXR5KG90aGVyKSkgcmV0dXJuIHRoaXMuY3VydmUuaXNJbmZpbml0eSh0aGlzKQ0KDQogIC8vIHUgPSBZMiAqIFoxIC0gWTEgKiBaMg0KICB2YXIgdSA9IG90aGVyLnkubXVsdGlwbHkodGhpcy56KS5zdWJ0cmFjdCh0aGlzLnkubXVsdGlwbHkob3RoZXIueikpLm1vZCh0aGlzLmN1cnZlLnApDQoNCiAgaWYgKHUuc2lnbnVtKCkgIT09IDApIHJldHVybiBmYWxzZQ0KDQogIC8vIHYgPSBYMiAqIFoxIC0gWDEgKiBaMg0KICB2YXIgdiA9IG90aGVyLngubXVsdGlwbHkodGhpcy56KS5zdWJ0cmFjdCh0aGlzLngubXVsdGlwbHkob3RoZXIueikpLm1vZCh0aGlzLmN1cnZlLnApDQoNCiAgcmV0dXJuIHYuc2lnbnVtKCkgPT09IDANCn0NCg0KUG9pbnQucHJvdG90eXBlLm5lZ2F0ZSA9IGZ1bmN0aW9uKCkgew0KICB2YXIgeSA9IHRoaXMuY3VydmUucC5zdWJ0cmFjdCh0aGlzLnkpDQoNCiAgcmV0dXJuIG5ldyBQb2ludCh0aGlzLmN1cnZlLCB0aGlzLngsIHksIHRoaXMueikNCn0NCg0KUG9pbnQucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uKGIpIHsNCiAgaWYgKHRoaXMuY3VydmUuaXNJbmZpbml0eSh0aGlzKSkgcmV0dXJuIGINCiAgaWYgKHRoaXMuY3VydmUuaXNJbmZpbml0eShiKSkgcmV0dXJuIHRoaXMNCg0KICB2YXIgeDEgPSB0aGlzLngNCiAgdmFyIHkxID0gdGhpcy55DQogIHZhciB4MiA9IGIueA0KICB2YXIgeTIgPSBiLnkNCg0KICAvLyB1ID0gWTIgKiBaMSAtIFkxICogWjINCiAgdmFyIHUgPSB5Mi5tdWx0aXBseSh0aGlzLnopLnN1YnRyYWN0KHkxLm11bHRpcGx5KGIueikpLm1vZCh0aGlzLmN1cnZlLnApDQogIC8vIHYgPSBYMiAqIFoxIC0gWDEgKiBaMg0KICB2YXIgdiA9IHgyLm11bHRpcGx5KHRoaXMueikuc3VidHJhY3QoeDEubXVsdGlwbHkoYi56KSkubW9kKHRoaXMuY3VydmUucCkNCg0KICBpZiAodi5zaWdudW0oKSA9PT0gMCkgew0KICAgIGlmICh1LnNpZ251bSgpID09PSAwKSB7DQogICAgICByZXR1cm4gdGhpcy50d2ljZSgpIC8vIHRoaXMgPT0gYiwgc28gZG91YmxlDQogICAgfQ0KDQogICAgcmV0dXJuIHRoaXMuY3VydmUuaW5maW5pdHkgLy8gdGhpcyA9IC1iLCBzbyBpbmZpbml0eQ0KICB9DQoNCiAgdmFyIHYyID0gdi5zcXVhcmUoKQ0KICB2YXIgdjMgPSB2Mi5tdWx0aXBseSh2KQ0KICB2YXIgeDF2MiA9IHgxLm11bHRpcGx5KHYyKQ0KICB2YXIgenUyID0gdS5zcXVhcmUoKS5tdWx0aXBseSh0aGlzLnopDQoNCiAgLy8geDMgPSB2ICogKHoyICogKHoxICogdV4yIC0gMiAqIHgxICogdl4yKSAtIHZeMykNCiAgdmFyIHgzID0genUyLnN1YnRyYWN0KHgxdjIuc2hpZnRMZWZ0KDEpKS5tdWx0aXBseShiLnopLnN1YnRyYWN0KHYzKS5tdWx0aXBseSh2KS5tb2QodGhpcy5jdXJ2ZS5wKQ0KICAvLyB5MyA9IHoyICogKDMgKiB4MSAqIHUgKiB2XjIgLSB5MSAqIHZeMyAtIHoxICogdV4zKSArIHUgKiB2XjMNCiAgdmFyIHkzID0geDF2Mi5tdWx0aXBseShUSFJFRSkubXVsdGlwbHkodSkuc3VidHJhY3QoeTEubXVsdGlwbHkodjMpKS5zdWJ0cmFjdCh6dTIubXVsdGlwbHkodSkpLm11bHRpcGx5KGIueikuYWRkKHUubXVsdGlwbHkodjMpKS5tb2QodGhpcy5jdXJ2ZS5wKQ0KICAvLyB6MyA9IHZeMyAqIHoxICogejINCiAgdmFyIHozID0gdjMubXVsdGlwbHkodGhpcy56KS5tdWx0aXBseShiLnopLm1vZCh0aGlzLmN1cnZlLnApDQoNCiAgcmV0dXJuIG5ldyBQb2ludCh0aGlzLmN1cnZlLCB4MywgeTMsIHozKQ0KfQ0KDQpQb2ludC5wcm90b3R5cGUudHdpY2UgPSBmdW5jdGlvbigpIHsNCiAgaWYgKHRoaXMuY3VydmUuaXNJbmZpbml0eSh0aGlzKSkgcmV0dXJuIHRoaXMNCiAgaWYgKHRoaXMueS5zaWdudW0oKSA9PT0gMCkgcmV0dXJuIHRoaXMuY3VydmUuaW5maW5pdHkNCg0KICB2YXIgeDEgPSB0aGlzLngNCiAgdmFyIHkxID0gdGhpcy55DQoNCiAgdmFyIHkxejEgPSB5MS5tdWx0aXBseSh0aGlzLnopDQogIHZhciB5MXNxejEgPSB5MXoxLm11bHRpcGx5KHkxKS5tb2QodGhpcy5jdXJ2ZS5wKQ0KICB2YXIgYSA9IHRoaXMuY3VydmUuYQ0KDQogIC8vIHcgPSAzICogeDFeMiArIGEgKiB6MV4yDQogIHZhciB3ID0geDEuc3F1YXJlKCkubXVsdGlwbHkoVEhSRUUpDQoNCiAgaWYgKGEuc2lnbnVtKCkgIT09IDApIHsNCiAgICB3ID0gdy5hZGQodGhpcy56LnNxdWFyZSgpLm11bHRpcGx5KGEpKQ0KICB9DQoNCiAgdyA9IHcubW9kKHRoaXMuY3VydmUucCkNCiAgLy8geDMgPSAyICogeTEgKiB6MSAqICh3XjIgLSA4ICogeDEgKiB5MV4yICogejEpDQogIHZhciB4MyA9IHcuc3F1YXJlKCkuc3VidHJhY3QoeDEuc2hpZnRMZWZ0KDMpLm11bHRpcGx5KHkxc3F6MSkpLnNoaWZ0TGVmdCgxKS5tdWx0aXBseSh5MXoxKS5tb2QodGhpcy5jdXJ2ZS5wKQ0KICAvLyB5MyA9IDQgKiB5MV4yICogejEgKiAoMyAqIHcgKiB4MSAtIDIgKiB5MV4yICogejEpIC0gd14zDQogIHZhciB5MyA9IHcubXVsdGlwbHkoVEhSRUUpLm11bHRpcGx5KHgxKS5zdWJ0cmFjdCh5MXNxejEuc2hpZnRMZWZ0KDEpKS5zaGlmdExlZnQoMikubXVsdGlwbHkoeTFzcXoxKS5zdWJ0cmFjdCh3LnBvdygzKSkubW9kKHRoaXMuY3VydmUucCkNCiAgLy8gejMgPSA4ICogKHkxICogejEpXjMNCiAgdmFyIHozID0geTF6MS5wb3coMykuc2hpZnRMZWZ0KDMpLm1vZCh0aGlzLmN1cnZlLnApDQoNCiAgcmV0dXJuIG5ldyBQb2ludCh0aGlzLmN1cnZlLCB4MywgeTMsIHozKQ0KfQ0KDQovLyBTaW1wbGUgTkFGIChOb24tQWRqYWNlbnQgRm9ybSkgbXVsdGlwbGljYXRpb24gYWxnb3JpdGhtDQovLyBUT0RPOiBtb2R1bGFyaXplIHRoZSBtdWx0aXBsaWNhdGlvbiBhbGdvcml0aG0NClBvaW50LnByb3RvdHlwZS5tdWx0aXBseSA9IGZ1bmN0aW9uKGspIHsNCiAgaWYgKHRoaXMuY3VydmUuaXNJbmZpbml0eSh0aGlzKSkgcmV0dXJuIHRoaXMNCiAgaWYgKGsuc2lnbnVtKCkgPT09IDApIHJldHVybiB0aGlzLmN1cnZlLmluZmluaXR5DQoNCiAgdmFyIGUgPSBrDQogIHZhciBoID0gZS5tdWx0aXBseShUSFJFRSkNCg0KICB2YXIgbmVnID0gdGhpcy5uZWdhdGUoKQ0KICB2YXIgUiA9IHRoaXMNCg0KICBmb3IgKHZhciBpID0gaC5iaXRMZW5ndGgoKSAtIDI7IGkgPiAwOyAtLWkpIHsNCiAgICB2YXIgaEJpdCA9IGgudGVzdEJpdChpKQ0KICAgIHZhciBlQml0ID0gZS50ZXN0Qml0KGkpDQoNCiAgICBSID0gUi50d2ljZSgpDQoNCiAgICBpZiAoaEJpdCAhPT0gZUJpdCkgew0KICAgICAgUiA9IFIuYWRkKGhCaXQgPyB0aGlzIDogbmVnKQ0KICAgIH0NCiAgfQ0KDQogIHJldHVybiBSDQp9DQoNCi8vIENvbXB1dGUgdGhpcypqICsgeCprIChzaW11bHRhbmVvdXMgbXVsdGlwbGljYXRpb24pDQpQb2ludC5wcm90b3R5cGUubXVsdGlwbHlUd28gPSBmdW5jdGlvbihqLCB4LCBrKSB7DQogIHZhciBpID0gTWF0aC5tYXgoai5iaXRMZW5ndGgoKSwgay5iaXRMZW5ndGgoKSkgLSAxDQogIHZhciBSID0gdGhpcy5jdXJ2ZS5pbmZpbml0eQ0KICB2YXIgYm90aCA9IHRoaXMuYWRkKHgpDQoNCiAgd2hpbGUgKGkgPj0gMCkgew0KICAgIHZhciBqQml0ID0gai50ZXN0Qml0KGkpDQogICAgdmFyIGtCaXQgPSBrLnRlc3RCaXQoaSkNCg0KICAgIFIgPSBSLnR3aWNlKCkNCg0KICAgIGlmIChqQml0KSB7DQogICAgICBpZiAoa0JpdCkgew0KICAgICAgICBSID0gUi5hZGQoYm90aCkNCg0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgUiA9IFIuYWRkKHRoaXMpDQogICAgICB9DQoNCiAgICB9IGVsc2UgaWYgKGtCaXQpIHsNCiAgICAgIFIgPSBSLmFkZCh4KQ0KICAgIH0NCiAgICAtLWkNCiAgfQ0KDQogIHJldHVybiBSDQp9DQoNClBvaW50LnByb3RvdHlwZS5nZXRFbmNvZGVkID0gZnVuY3Rpb24oY29tcHJlc3NlZCkgew0KICBpZiAoY29tcHJlc3NlZCA9PSB1bmRlZmluZWQpIGNvbXByZXNzZWQgPSB0aGlzLmNvbXByZXNzZWQNCiAgaWYgKHRoaXMuY3VydmUuaXNJbmZpbml0eSh0aGlzKSkgcmV0dXJuIG5ldyBCdWZmZXIoJzAwJywgJ2hleCcpIC8vIEluZmluaXR5IHBvaW50IGVuY29kZWQgaXMgc2ltcGx5ICcwMCcNCg0KICB2YXIgeCA9IHRoaXMuYWZmaW5lWA0KICB2YXIgeSA9IHRoaXMuYWZmaW5lWQ0KDQogIHZhciBidWZmZXINCg0KICAvLyBEZXRlcm1pbmUgc2l6ZSBvZiBxIGluIGJ5dGVzDQogIHZhciBieXRlTGVuZ3RoID0gTWF0aC5mbG9vcigodGhpcy5jdXJ2ZS5wLmJpdExlbmd0aCgpICsgNykgLyA4KQ0KDQogIC8vIDB4MDIvMHgwMyB8IFgNCiAgaWYgKGNvbXByZXNzZWQpIHsNCiAgICBidWZmZXIgPSBuZXcgQnVmZmVyKDEgKyBieXRlTGVuZ3RoKQ0KICAgIGJ1ZmZlci53cml0ZVVJbnQ4KHkuaXNFdmVuKCkgPyAweDAyIDogMHgwMywgMCkNCg0KICAvLyAweDA0IHwgWCB8IFkNCiAgfSBlbHNlIHsNCiAgICBidWZmZXIgPSBuZXcgQnVmZmVyKDEgKyBieXRlTGVuZ3RoICsgYnl0ZUxlbmd0aCkNCiAgICBidWZmZXIud3JpdGVVSW50OCgweDA0LCAwKQ0KDQogICAgeS50b0J1ZmZlcihieXRlTGVuZ3RoKS5jb3B5KGJ1ZmZlciwgMSArIGJ5dGVMZW5ndGgpDQogIH0NCg0KICB4LnRvQnVmZmVyKGJ5dGVMZW5ndGgpLmNvcHkoYnVmZmVyLCAxKQ0KDQogIHJldHVybiBidWZmZXINCn0NCg0KUG9pbnQuZGVjb2RlRnJvbSA9IGZ1bmN0aW9uKGN1cnZlLCBidWZmZXIpIHsNCiAgdmFyIHR5cGUgPSBidWZmZXIucmVhZFVJbnQ4KDApDQogIHZhciBjb21wcmVzc2VkID0gKHR5cGUgIT09IDQpDQoNCiAgdmFyIGJ5dGVMZW5ndGggPSBNYXRoLmZsb29yKChjdXJ2ZS5wLmJpdExlbmd0aCgpICsgNykgLyA4KQ0KICB2YXIgeCA9IEJpZ0ludGVnZXIuZnJvbUJ1ZmZlcihidWZmZXIuc2xpY2UoMSwgMSArIGJ5dGVMZW5ndGgpKQ0KDQogIHZhciBRDQogIGlmIChjb21wcmVzc2VkKSB7DQogICAgYXNzZXJ0LmVxdWFsKGJ1ZmZlci5sZW5ndGgsIGJ5dGVMZW5ndGggKyAxLCAnSW52YWxpZCBzZXF1ZW5jZSBsZW5ndGgnKQ0KICAgIGFzc2VydCh0eXBlID09PSAweDAyIHx8IHR5cGUgPT09IDB4MDMsICdJbnZhbGlkIHNlcXVlbmNlIHRhZycpDQoNCiAgICB2YXIgaXNPZGQgPSAodHlwZSA9PT0gMHgwMykNCiAgICBRID0gY3VydmUucG9pbnRGcm9tWChpc09kZCwgeCkNCg0KICB9IGVsc2Ugew0KICAgIGFzc2VydC5lcXVhbChidWZmZXIubGVuZ3RoLCAxICsgYnl0ZUxlbmd0aCArIGJ5dGVMZW5ndGgsICdJbnZhbGlkIHNlcXVlbmNlIGxlbmd0aCcpDQoNCiAgICB2YXIgeSA9IEJpZ0ludGVnZXIuZnJvbUJ1ZmZlcihidWZmZXIuc2xpY2UoMSArIGJ5dGVMZW5ndGgpKQ0KICAgIFEgPSBQb2ludC5mcm9tQWZmaW5lKGN1cnZlLCB4LCB5KQ0KICB9DQoNCiAgUS5jb21wcmVzc2VkID0gY29tcHJlc3NlZA0KICByZXR1cm4gUQ0KfQ0KDQpQb2ludC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7DQogIGlmICh0aGlzLmN1cnZlLmlzSW5maW5pdHkodGhpcykpIHJldHVybiAnKElORklOSVRZKScNCg0KICByZXR1cm4gJygnICsgdGhpcy5hZmZpbmVYLnRvU3RyaW5nKCkgKyAnLCcgKyB0aGlzLmFmZmluZVkudG9TdHJpbmcoKSArICcpJw0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IFBvaW50DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiYXNzZXJ0IjoxNSwiYmlnaSI6MzcsImJ1ZmZlciI6OTN9XSw1MDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQp2YXIgZWxsaXB0aWMgPSBleHBvcnRzOw0KDQplbGxpcHRpYy52ZXJzaW9uID0gcmVxdWlyZSgnLi4vcGFja2FnZS5qc29uJykudmVyc2lvbjsNCmVsbGlwdGljLnV0aWxzID0gcmVxdWlyZSgnLi9lbGxpcHRpYy91dGlscycpOw0KZWxsaXB0aWMucmFuZCA9IHJlcXVpcmUoJ2Jyb3JhbmQnKTsNCmVsbGlwdGljLmhtYWNEUkJHID0gcmVxdWlyZSgnLi9lbGxpcHRpYy9obWFjLWRyYmcnKTsNCmVsbGlwdGljLmN1cnZlID0gcmVxdWlyZSgnLi9lbGxpcHRpYy9jdXJ2ZScpOw0KZWxsaXB0aWMuY3VydmVzID0gcmVxdWlyZSgnLi9lbGxpcHRpYy9jdXJ2ZXMnKTsNCg0KLy8gUHJvdG9jb2xzDQplbGxpcHRpYy5lYyA9IHJlcXVpcmUoJy4vZWxsaXB0aWMvZWMnKTsNCmVsbGlwdGljLmVkZHNhID0gcmVxdWlyZSgnLi9lbGxpcHRpYy9lZGRzYScpOw0KDQp9LHsiLi4vcGFja2FnZS5qc29uIjo1MjQsIi4vZWxsaXB0aWMvY3VydmUiOjUxMSwiLi9lbGxpcHRpYy9jdXJ2ZXMiOjUxNCwiLi9lbGxpcHRpYy9lYyI6NTE1LCIuL2VsbGlwdGljL2VkZHNhIjo1MTgsIi4vZWxsaXB0aWMvaG1hYy1kcmJnIjo1MjEsIi4vZWxsaXB0aWMvdXRpbHMiOjUyMywiYnJvcmFuZCI6NjB9XSw1MDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQp2YXIgQk4gPSByZXF1aXJlKCdibi5qcycpOw0KdmFyIGVsbGlwdGljID0gcmVxdWlyZSgnLi4vLi4vZWxsaXB0aWMnKTsNCnZhciB1dGlscyA9IGVsbGlwdGljLnV0aWxzOw0KdmFyIGdldE5BRiA9IHV0aWxzLmdldE5BRjsNCnZhciBnZXRKU0YgPSB1dGlscy5nZXRKU0Y7DQp2YXIgYXNzZXJ0ID0gdXRpbHMuYXNzZXJ0Ow0KDQpmdW5jdGlvbiBCYXNlQ3VydmUodHlwZSwgY29uZikgew0KICB0aGlzLnR5cGUgPSB0eXBlOw0KICB0aGlzLnAgPSBuZXcgQk4oY29uZi5wLCAxNik7DQoNCiAgLy8gVXNlIE1vbnRnb21lcnksIHdoZW4gdGhlcmUgaXMgbm8gZmFzdCByZWR1Y3Rpb24gZm9yIHRoZSBwcmltZQ0KICB0aGlzLnJlZCA9IGNvbmYucHJpbWUgPyBCTi5yZWQoY29uZi5wcmltZSkgOiBCTi5tb250KHRoaXMucCk7DQoNCiAgLy8gVXNlZnVsIGZvciBtYW55IGN1cnZlcw0KICB0aGlzLnplcm8gPSBuZXcgQk4oMCkudG9SZWQodGhpcy5yZWQpOw0KICB0aGlzLm9uZSA9IG5ldyBCTigxKS50b1JlZCh0aGlzLnJlZCk7DQogIHRoaXMudHdvID0gbmV3IEJOKDIpLnRvUmVkKHRoaXMucmVkKTsNCg0KICAvLyBDdXJ2ZSBjb25maWd1cmF0aW9uLCBvcHRpb25hbA0KICB0aGlzLm4gPSBjb25mLm4gJiYgbmV3IEJOKGNvbmYubiwgMTYpOw0KICB0aGlzLmcgPSBjb25mLmcgJiYgdGhpcy5wb2ludEZyb21KU09OKGNvbmYuZywgY29uZi5nUmVkKTsNCg0KICAvLyBUZW1wb3JhcnkgYXJyYXlzDQogIHRoaXMuX3duYWZUMSA9IG5ldyBBcnJheSg0KTsNCiAgdGhpcy5fd25hZlQyID0gbmV3IEFycmF5KDQpOw0KICB0aGlzLl93bmFmVDMgPSBuZXcgQXJyYXkoNCk7DQogIHRoaXMuX3duYWZUNCA9IG5ldyBBcnJheSg0KTsNCn0NCm1vZHVsZS5leHBvcnRzID0gQmFzZUN1cnZlOw0KDQpCYXNlQ3VydmUucHJvdG90eXBlLnBvaW50ID0gZnVuY3Rpb24gcG9pbnQoKSB7DQogIHRocm93IG5ldyBFcnJvcignTm90IGltcGxlbWVudGVkJyk7DQp9Ow0KDQpCYXNlQ3VydmUucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gdmFsaWRhdGUoKSB7DQogIHRocm93IG5ldyBFcnJvcignTm90IGltcGxlbWVudGVkJyk7DQp9Ow0KDQpCYXNlQ3VydmUucHJvdG90eXBlLl9maXhlZE5hZk11bCA9IGZ1bmN0aW9uIF9maXhlZE5hZk11bChwLCBrKSB7DQogIGFzc2VydChwLnByZWNvbXB1dGVkKTsNCiAgdmFyIGRvdWJsZXMgPSBwLl9nZXREb3VibGVzKCk7DQoNCiAgdmFyIG5hZiA9IGdldE5BRihrLCAxKTsNCiAgdmFyIEkgPSAoMSA8PCAoZG91Ymxlcy5zdGVwICsgMSkpIC0gKGRvdWJsZXMuc3RlcCAlIDIgPT09IDAgPyAyIDogMSk7DQogIEkgLz0gMzsNCg0KICAvLyBUcmFuc2xhdGUgaW50byBtb3JlIHdpbmRvd2VkIGZvcm0NCiAgdmFyIHJlcHIgPSBbXTsNCiAgZm9yICh2YXIgaiA9IDA7IGogPCBuYWYubGVuZ3RoOyBqICs9IGRvdWJsZXMuc3RlcCkgew0KICAgIHZhciBuYWZXID0gMDsNCiAgICBmb3IgKHZhciBrID0gaiArIGRvdWJsZXMuc3RlcCAtIDE7IGsgPj0gajsgay0tKQ0KICAgICAgbmFmVyA9IChuYWZXIDw8IDEpICsgbmFmW2tdOw0KICAgIHJlcHIucHVzaChuYWZXKTsNCiAgfQ0KDQogIHZhciBhID0gdGhpcy5qcG9pbnQobnVsbCwgbnVsbCwgbnVsbCk7DQogIHZhciBiID0gdGhpcy5qcG9pbnQobnVsbCwgbnVsbCwgbnVsbCk7DQogIGZvciAodmFyIGkgPSBJOyBpID4gMDsgaS0tKSB7DQogICAgZm9yICh2YXIgaiA9IDA7IGogPCByZXByLmxlbmd0aDsgaisrKSB7DQogICAgICB2YXIgbmFmVyA9IHJlcHJbal07DQogICAgICBpZiAobmFmVyA9PT0gaSkNCiAgICAgICAgYiA9IGIubWl4ZWRBZGQoZG91Ymxlcy5wb2ludHNbal0pOw0KICAgICAgZWxzZSBpZiAobmFmVyA9PT0gLWkpDQogICAgICAgIGIgPSBiLm1peGVkQWRkKGRvdWJsZXMucG9pbnRzW2pdLm5lZygpKTsNCiAgICB9DQogICAgYSA9IGEuYWRkKGIpOw0KICB9DQogIHJldHVybiBhLnRvUCgpOw0KfTsNCg0KQmFzZUN1cnZlLnByb3RvdHlwZS5fd25hZk11bCA9IGZ1bmN0aW9uIF93bmFmTXVsKHAsIGspIHsNCiAgdmFyIHcgPSA0Ow0KDQogIC8vIFByZWNvbXB1dGUgd2luZG93DQogIHZhciBuYWZQb2ludHMgPSBwLl9nZXROQUZQb2ludHModyk7DQogIHcgPSBuYWZQb2ludHMud25kOw0KICB2YXIgd25kID0gbmFmUG9pbnRzLnBvaW50czsNCg0KICAvLyBHZXQgTkFGIGZvcm0NCiAgdmFyIG5hZiA9IGdldE5BRihrLCB3KTsNCg0KICAvLyBBZGQgYHRoaXNgKihOKzEpIGZvciBldmVyeSB3LU5BRiBpbmRleA0KICB2YXIgYWNjID0gdGhpcy5qcG9pbnQobnVsbCwgbnVsbCwgbnVsbCk7DQogIGZvciAodmFyIGkgPSBuYWYubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHsNCiAgICAvLyBDb3VudCB6ZXJvZXMNCiAgICBmb3IgKHZhciBrID0gMDsgaSA+PSAwICYmIG5hZltpXSA9PT0gMDsgaS0tKQ0KICAgICAgaysrOw0KICAgIGlmIChpID49IDApDQogICAgICBrKys7DQogICAgYWNjID0gYWNjLmRibHAoayk7DQoNCiAgICBpZiAoaSA8IDApDQogICAgICBicmVhazsNCiAgICB2YXIgeiA9IG5hZltpXTsNCiAgICBhc3NlcnQoeiAhPT0gMCk7DQogICAgaWYgKHAudHlwZSA9PT0gJ2FmZmluZScpIHsNCiAgICAgIC8vIEogKy0gUA0KICAgICAgaWYgKHogPiAwKQ0KICAgICAgICBhY2MgPSBhY2MubWl4ZWRBZGQod25kWyh6IC0gMSkgPj4gMV0pOw0KICAgICAgZWxzZQ0KICAgICAgICBhY2MgPSBhY2MubWl4ZWRBZGQod25kWygteiAtIDEpID4+IDFdLm5lZygpKTsNCiAgICB9IGVsc2Ugew0KICAgICAgLy8gSiArLSBKDQogICAgICBpZiAoeiA+IDApDQogICAgICAgIGFjYyA9IGFjYy5hZGQod25kWyh6IC0gMSkgPj4gMV0pOw0KICAgICAgZWxzZQ0KICAgICAgICBhY2MgPSBhY2MuYWRkKHduZFsoLXogLSAxKSA+PiAxXS5uZWcoKSk7DQogICAgfQ0KICB9DQogIHJldHVybiBwLnR5cGUgPT09ICdhZmZpbmUnID8gYWNjLnRvUCgpIDogYWNjOw0KfTsNCg0KQmFzZUN1cnZlLnByb3RvdHlwZS5fd25hZk11bEFkZCA9IGZ1bmN0aW9uIF93bmFmTXVsQWRkKGRlZlcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZWZmcywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZW4pIHsNCiAgdmFyIHduZFdpZHRoID0gdGhpcy5fd25hZlQxOw0KICB2YXIgd25kID0gdGhpcy5fd25hZlQyOw0KICB2YXIgbmFmID0gdGhpcy5fd25hZlQzOw0KDQogIC8vIEZpbGwgYWxsIGFycmF5cw0KICB2YXIgbWF4ID0gMDsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykgew0KICAgIHZhciBwID0gcG9pbnRzW2ldOw0KICAgIHZhciBuYWZQb2ludHMgPSBwLl9nZXROQUZQb2ludHMoZGVmVyk7DQogICAgd25kV2lkdGhbaV0gPSBuYWZQb2ludHMud25kOw0KICAgIHduZFtpXSA9IG5hZlBvaW50cy5wb2ludHM7DQogIH0NCg0KICAvLyBDb21iIHNtYWxsIHdpbmRvdyBOQUZzDQogIGZvciAodmFyIGkgPSBsZW4gLSAxOyBpID49IDE7IGkgLT0gMikgew0KICAgIHZhciBhID0gaSAtIDE7DQogICAgdmFyIGIgPSBpOw0KICAgIGlmICh3bmRXaWR0aFthXSAhPT0gMSB8fCB3bmRXaWR0aFtiXSAhPT0gMSkgew0KICAgICAgbmFmW2FdID0gZ2V0TkFGKGNvZWZmc1thXSwgd25kV2lkdGhbYV0pOw0KICAgICAgbmFmW2JdID0gZ2V0TkFGKGNvZWZmc1tiXSwgd25kV2lkdGhbYl0pOw0KICAgICAgbWF4ID0gTWF0aC5tYXgobmFmW2FdLmxlbmd0aCwgbWF4KTsNCiAgICAgIG1heCA9IE1hdGgubWF4KG5hZltiXS5sZW5ndGgsIG1heCk7DQogICAgICBjb250aW51ZTsNCiAgICB9DQoNCiAgICB2YXIgY29tYiA9IFsNCiAgICAgIHBvaW50c1thXSwgLyogMSAqLw0KICAgICAgbnVsbCwgLyogMyAqLw0KICAgICAgbnVsbCwgLyogNSAqLw0KICAgICAgcG9pbnRzW2JdIC8qIDcgKi8NCiAgICBdOw0KDQogICAgLy8gVHJ5IHRvIGF2b2lkIFByb2plY3RpdmUgcG9pbnRzLCBpZiBwb3NzaWJsZQ0KICAgIGlmIChwb2ludHNbYV0ueS5jbXAocG9pbnRzW2JdLnkpID09PSAwKSB7DQogICAgICBjb21iWzFdID0gcG9pbnRzW2FdLmFkZChwb2ludHNbYl0pOw0KICAgICAgY29tYlsyXSA9IHBvaW50c1thXS50b0ooKS5taXhlZEFkZChwb2ludHNbYl0ubmVnKCkpOw0KICAgIH0gZWxzZSBpZiAocG9pbnRzW2FdLnkuY21wKHBvaW50c1tiXS55LnJlZE5lZygpKSA9PT0gMCkgew0KICAgICAgY29tYlsxXSA9IHBvaW50c1thXS50b0ooKS5taXhlZEFkZChwb2ludHNbYl0pOw0KICAgICAgY29tYlsyXSA9IHBvaW50c1thXS5hZGQocG9pbnRzW2JdLm5lZygpKTsNCiAgICB9IGVsc2Ugew0KICAgICAgY29tYlsxXSA9IHBvaW50c1thXS50b0ooKS5taXhlZEFkZChwb2ludHNbYl0pOw0KICAgICAgY29tYlsyXSA9IHBvaW50c1thXS50b0ooKS5taXhlZEFkZChwb2ludHNbYl0ubmVnKCkpOw0KICAgIH0NCg0KICAgIHZhciBpbmRleCA9IFsNCiAgICAgIC0zLCAvKiAtMSAtMSAqLw0KICAgICAgLTEsIC8qIC0xIDAgKi8NCiAgICAgIC01LCAvKiAtMSAxICovDQogICAgICAtNywgLyogMCAtMSAqLw0KICAgICAgMCwgLyogMCAwICovDQogICAgICA3LCAvKiAwIDEgKi8NCiAgICAgIDUsIC8qIDEgLTEgKi8NCiAgICAgIDEsIC8qIDEgMCAqLw0KICAgICAgMyAgLyogMSAxICovDQogICAgXTsNCg0KICAgIHZhciBqc2YgPSBnZXRKU0YoY29lZmZzW2FdLCBjb2VmZnNbYl0pOw0KICAgIG1heCA9IE1hdGgubWF4KGpzZlswXS5sZW5ndGgsIG1heCk7DQogICAgbmFmW2FdID0gbmV3IEFycmF5KG1heCk7DQogICAgbmFmW2JdID0gbmV3IEFycmF5KG1heCk7DQogICAgZm9yICh2YXIgaiA9IDA7IGogPCBtYXg7IGorKykgew0KICAgICAgdmFyIGphID0ganNmWzBdW2pdIHwgMDsNCiAgICAgIHZhciBqYiA9IGpzZlsxXVtqXSB8IDA7DQoNCiAgICAgIG5hZlthXVtqXSA9IGluZGV4WyhqYSArIDEpICogMyArIChqYiArIDEpXTsNCiAgICAgIG5hZltiXVtqXSA9IDA7DQogICAgICB3bmRbYV0gPSBjb21iOw0KICAgIH0NCiAgfQ0KDQogIHZhciBhY2MgPSB0aGlzLmpwb2ludChudWxsLCBudWxsLCBudWxsKTsNCiAgdmFyIHRtcCA9IHRoaXMuX3duYWZUNDsNCiAgZm9yICh2YXIgaSA9IG1heDsgaSA+PSAwOyBpLS0pIHsNCiAgICB2YXIgayA9IDA7DQoNCiAgICB3aGlsZSAoaSA+PSAwKSB7DQogICAgICB2YXIgemVybyA9IHRydWU7DQogICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGxlbjsgaisrKSB7DQogICAgICAgIHRtcFtqXSA9IG5hZltqXVtpXSB8IDA7DQogICAgICAgIGlmICh0bXBbal0gIT09IDApDQogICAgICAgICAgemVybyA9IGZhbHNlOw0KICAgICAgfQ0KICAgICAgaWYgKCF6ZXJvKQ0KICAgICAgICBicmVhazsNCiAgICAgIGsrKzsNCiAgICAgIGktLTsNCiAgICB9DQogICAgaWYgKGkgPj0gMCkNCiAgICAgIGsrKzsNCiAgICBhY2MgPSBhY2MuZGJscChrKTsNCiAgICBpZiAoaSA8IDApDQogICAgICBicmVhazsNCg0KICAgIGZvciAodmFyIGogPSAwOyBqIDwgbGVuOyBqKyspIHsNCiAgICAgIHZhciB6ID0gdG1wW2pdOw0KICAgICAgdmFyIHA7DQogICAgICBpZiAoeiA9PT0gMCkNCiAgICAgICAgY29udGludWU7DQogICAgICBlbHNlIGlmICh6ID4gMCkNCiAgICAgICAgcCA9IHduZFtqXVsoeiAtIDEpID4+IDFdOw0KICAgICAgZWxzZSBpZiAoeiA8IDApDQogICAgICAgIHAgPSB3bmRbal1bKC16IC0gMSkgPj4gMV0ubmVnKCk7DQoNCiAgICAgIGlmIChwLnR5cGUgPT09ICdhZmZpbmUnKQ0KICAgICAgICBhY2MgPSBhY2MubWl4ZWRBZGQocCk7DQogICAgICBlbHNlDQogICAgICAgIGFjYyA9IGFjYy5hZGQocCk7DQogICAgfQ0KICB9DQogIC8vIFplcm9pZnkgcmVmZXJlbmNlcw0KICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKQ0KICAgIHduZFtpXSA9IG51bGw7DQogIHJldHVybiBhY2MudG9QKCk7DQp9Ow0KDQpmdW5jdGlvbiBCYXNlUG9pbnQoY3VydmUsIHR5cGUpIHsNCiAgdGhpcy5jdXJ2ZSA9IGN1cnZlOw0KICB0aGlzLnR5cGUgPSB0eXBlOw0KICB0aGlzLnByZWNvbXB1dGVkID0gbnVsbDsNCn0NCkJhc2VDdXJ2ZS5CYXNlUG9pbnQgPSBCYXNlUG9pbnQ7DQoNCkJhc2VQb2ludC5wcm90b3R5cGUuZXEgPSBmdW5jdGlvbiBlcSgvKm90aGVyKi8pIHsNCiAgdGhyb3cgbmV3IEVycm9yKCdOb3QgaW1wbGVtZW50ZWQnKTsNCn07DQoNCkJhc2VQb2ludC5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiB2YWxpZGF0ZSgpIHsNCiAgcmV0dXJuIHRoaXMuY3VydmUudmFsaWRhdGUodGhpcyk7DQp9Ow0KDQpCYXNlQ3VydmUucHJvdG90eXBlLmRlY29kZVBvaW50ID0gZnVuY3Rpb24gZGVjb2RlUG9pbnQoYnl0ZXMsIGVuYykgew0KICBieXRlcyA9IHV0aWxzLnRvQXJyYXkoYnl0ZXMsIGVuYyk7DQoNCiAgdmFyIGxlbiA9IHRoaXMucC5ieXRlTGVuZ3RoKCk7DQogIGlmIChieXRlc1swXSA9PT0gMHgwNCAmJiBieXRlcy5sZW5ndGggLSAxID09PSAyICogbGVuKSB7DQogICAgcmV0dXJuIHRoaXMucG9pbnQoYnl0ZXMuc2xpY2UoMSwgMSArIGxlbiksDQogICAgICAgICAgICAgICAgICAgICAgYnl0ZXMuc2xpY2UoMSArIGxlbiwgMSArIDIgKiBsZW4pKTsNCiAgfSBlbHNlIGlmICgoYnl0ZXNbMF0gPT09IDB4MDIgfHwgYnl0ZXNbMF0gPT09IDB4MDMpICYmDQogICAgICAgICAgICAgIGJ5dGVzLmxlbmd0aCAtIDEgPT09IGxlbikgew0KICAgIHJldHVybiB0aGlzLnBvaW50RnJvbVgoYnl0ZXMuc2xpY2UoMSwgMSArIGxlbiksIGJ5dGVzWzBdID09PSAweDAzKTsNCiAgfQ0KICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gcG9pbnQgZm9ybWF0Jyk7DQp9Ow0KDQpCYXNlUG9pbnQucHJvdG90eXBlLmVuY29kZUNvbXByZXNzZWQgPSBmdW5jdGlvbiBlbmNvZGVDb21wcmVzc2VkKGVuYykgew0KICByZXR1cm4gdGhpcy5lbmNvZGUoZW5jLCB0cnVlKTsNCn07DQoNCkJhc2VQb2ludC5wcm90b3R5cGUuX2VuY29kZSA9IGZ1bmN0aW9uIF9lbmNvZGUoY29tcGFjdCkgew0KICB2YXIgbGVuID0gdGhpcy5jdXJ2ZS5wLmJ5dGVMZW5ndGgoKTsNCiAgdmFyIHggPSB0aGlzLmdldFgoKS50b0FycmF5KCdiZScsIGxlbik7DQoNCiAgaWYgKGNvbXBhY3QpDQogICAgcmV0dXJuIFsgdGhpcy5nZXRZKCkuaXNFdmVuKCkgPyAweDAyIDogMHgwMyBdLmNvbmNhdCh4KTsNCg0KICByZXR1cm4gWyAweDA0IF0uY29uY2F0KHgsIHRoaXMuZ2V0WSgpLnRvQXJyYXkoJ2JlJywgbGVuKSkgOw0KfTsNCg0KQmFzZVBvaW50LnByb3RvdHlwZS5lbmNvZGUgPSBmdW5jdGlvbiBlbmNvZGUoZW5jLCBjb21wYWN0KSB7DQogIHJldHVybiB1dGlscy5lbmNvZGUodGhpcy5fZW5jb2RlKGNvbXBhY3QpLCBlbmMpOw0KfTsNCg0KQmFzZVBvaW50LnByb3RvdHlwZS5wcmVjb21wdXRlID0gZnVuY3Rpb24gcHJlY29tcHV0ZShwb3dlcikgew0KICBpZiAodGhpcy5wcmVjb21wdXRlZCkNCiAgICByZXR1cm4gdGhpczsNCg0KICB2YXIgcHJlY29tcHV0ZWQgPSB7DQogICAgZG91YmxlczogbnVsbCwNCiAgICBuYWY6IG51bGwsDQogICAgYmV0YTogbnVsbA0KICB9Ow0KICBwcmVjb21wdXRlZC5uYWYgPSB0aGlzLl9nZXROQUZQb2ludHMoOCk7DQogIHByZWNvbXB1dGVkLmRvdWJsZXMgPSB0aGlzLl9nZXREb3VibGVzKDQsIHBvd2VyKTsNCiAgcHJlY29tcHV0ZWQuYmV0YSA9IHRoaXMuX2dldEJldGEoKTsNCiAgdGhpcy5wcmVjb21wdXRlZCA9IHByZWNvbXB1dGVkOw0KDQogIHJldHVybiB0aGlzOw0KfTsNCg0KQmFzZVBvaW50LnByb3RvdHlwZS5faGFzRG91YmxlcyA9IGZ1bmN0aW9uIF9oYXNEb3VibGVzKGspIHsNCiAgaWYgKCF0aGlzLnByZWNvbXB1dGVkKQ0KICAgIHJldHVybiBmYWxzZTsNCg0KICB2YXIgZG91YmxlcyA9IHRoaXMucHJlY29tcHV0ZWQuZG91YmxlczsNCiAgaWYgKCFkb3VibGVzKQ0KICAgIHJldHVybiBmYWxzZTsNCg0KICByZXR1cm4gZG91Ymxlcy5wb2ludHMubGVuZ3RoID49IE1hdGguY2VpbCgoay5iaXRMZW5ndGgoKSArIDEpIC8gZG91Ymxlcy5zdGVwKTsNCn07DQoNCkJhc2VQb2ludC5wcm90b3R5cGUuX2dldERvdWJsZXMgPSBmdW5jdGlvbiBfZ2V0RG91YmxlcyhzdGVwLCBwb3dlcikgew0KICBpZiAodGhpcy5wcmVjb21wdXRlZCAmJiB0aGlzLnByZWNvbXB1dGVkLmRvdWJsZXMpDQogICAgcmV0dXJuIHRoaXMucHJlY29tcHV0ZWQuZG91YmxlczsNCg0KICB2YXIgZG91YmxlcyA9IFsgdGhpcyBdOw0KICB2YXIgYWNjID0gdGhpczsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwb3dlcjsgaSArPSBzdGVwKSB7DQogICAgZm9yICh2YXIgaiA9IDA7IGogPCBzdGVwOyBqKyspDQogICAgICBhY2MgPSBhY2MuZGJsKCk7DQogICAgZG91Ymxlcy5wdXNoKGFjYyk7DQogIH0NCiAgcmV0dXJuIHsNCiAgICBzdGVwOiBzdGVwLA0KICAgIHBvaW50czogZG91Ymxlcw0KICB9Ow0KfTsNCg0KQmFzZVBvaW50LnByb3RvdHlwZS5fZ2V0TkFGUG9pbnRzID0gZnVuY3Rpb24gX2dldE5BRlBvaW50cyh3bmQpIHsNCiAgaWYgKHRoaXMucHJlY29tcHV0ZWQgJiYgdGhpcy5wcmVjb21wdXRlZC5uYWYpDQogICAgcmV0dXJuIHRoaXMucHJlY29tcHV0ZWQubmFmOw0KDQogIHZhciByZXMgPSBbIHRoaXMgXTsNCiAgdmFyIG1heCA9ICgxIDw8IHduZCkgLSAxOw0KICB2YXIgZGJsID0gbWF4ID09PSAxID8gbnVsbCA6IHRoaXMuZGJsKCk7DQogIGZvciAodmFyIGkgPSAxOyBpIDwgbWF4OyBpKyspDQogICAgcmVzW2ldID0gcmVzW2kgLSAxXS5hZGQoZGJsKTsNCiAgcmV0dXJuIHsNCiAgICB3bmQ6IHduZCwNCiAgICBwb2ludHM6IHJlcw0KICB9Ow0KfTsNCg0KQmFzZVBvaW50LnByb3RvdHlwZS5fZ2V0QmV0YSA9IGZ1bmN0aW9uIF9nZXRCZXRhKCkgew0KICByZXR1cm4gbnVsbDsNCn07DQoNCkJhc2VQb2ludC5wcm90b3R5cGUuZGJscCA9IGZ1bmN0aW9uIGRibHAoaykgew0KICB2YXIgciA9IHRoaXM7DQogIGZvciAodmFyIGkgPSAwOyBpIDwgazsgaSsrKQ0KICAgIHIgPSByLmRibCgpOw0KICByZXR1cm4gcjsNCn07DQoNCn0seyIuLi8uLi9lbGxpcHRpYyI6NTA4LCJibi5qcyI6NTl9XSw1MTA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQp2YXIgY3VydmUgPSByZXF1aXJlKCcuLi9jdXJ2ZScpOw0KdmFyIGVsbGlwdGljID0gcmVxdWlyZSgnLi4vLi4vZWxsaXB0aWMnKTsNCnZhciBCTiA9IHJlcXVpcmUoJ2JuLmpzJyk7DQp2YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpOw0KdmFyIEJhc2UgPSBjdXJ2ZS5iYXNlOw0KDQp2YXIgYXNzZXJ0ID0gZWxsaXB0aWMudXRpbHMuYXNzZXJ0Ow0KDQpmdW5jdGlvbiBFZHdhcmRzQ3VydmUoY29uZikgew0KICAvLyBOT1RFOiBJbXBvcnRhbnQgYXMgd2UgYXJlIGNyZWF0aW5nIHBvaW50IGluIEJhc2UuY2FsbCgpDQogIHRoaXMudHdpc3RlZCA9IChjb25mLmEgfCAwKSAhPT0gMTsNCiAgdGhpcy5tT25lQSA9IHRoaXMudHdpc3RlZCAmJiAoY29uZi5hIHwgMCkgPT09IC0xOw0KICB0aGlzLmV4dGVuZGVkID0gdGhpcy5tT25lQTsNCg0KICBCYXNlLmNhbGwodGhpcywgJ2Vkd2FyZHMnLCBjb25mKTsNCg0KICB0aGlzLmEgPSBuZXcgQk4oY29uZi5hLCAxNikudW1vZCh0aGlzLnJlZC5tKTsNCiAgdGhpcy5hID0gdGhpcy5hLnRvUmVkKHRoaXMucmVkKTsNCiAgdGhpcy5jID0gbmV3IEJOKGNvbmYuYywgMTYpLnRvUmVkKHRoaXMucmVkKTsNCiAgdGhpcy5jMiA9IHRoaXMuYy5yZWRTcXIoKTsNCiAgdGhpcy5kID0gbmV3IEJOKGNvbmYuZCwgMTYpLnRvUmVkKHRoaXMucmVkKTsNCiAgdGhpcy5kZCA9IHRoaXMuZC5yZWRBZGQodGhpcy5kKTsNCg0KICBhc3NlcnQoIXRoaXMudHdpc3RlZCB8fCB0aGlzLmMuZnJvbVJlZCgpLmNtcG4oMSkgPT09IDApOw0KICB0aGlzLm9uZUMgPSAoY29uZi5jIHwgMCkgPT09IDE7DQp9DQppbmhlcml0cyhFZHdhcmRzQ3VydmUsIEJhc2UpOw0KbW9kdWxlLmV4cG9ydHMgPSBFZHdhcmRzQ3VydmU7DQoNCkVkd2FyZHNDdXJ2ZS5wcm90b3R5cGUuX211bEEgPSBmdW5jdGlvbiBfbXVsQShudW0pIHsNCiAgaWYgKHRoaXMubU9uZUEpDQogICAgcmV0dXJuIG51bS5yZWROZWcoKTsNCiAgZWxzZQ0KICAgIHJldHVybiB0aGlzLmEucmVkTXVsKG51bSk7DQp9Ow0KDQpFZHdhcmRzQ3VydmUucHJvdG90eXBlLl9tdWxDID0gZnVuY3Rpb24gX211bEMobnVtKSB7DQogIGlmICh0aGlzLm9uZUMpDQogICAgcmV0dXJuIG51bTsNCiAgZWxzZQ0KICAgIHJldHVybiB0aGlzLmMucmVkTXVsKG51bSk7DQp9Ow0KDQovLyBKdXN0IGZvciBjb21wYXRpYmlsaXR5IHdpdGggU2hvcnQgY3VydmUNCkVkd2FyZHNDdXJ2ZS5wcm90b3R5cGUuanBvaW50ID0gZnVuY3Rpb24ganBvaW50KHgsIHksIHosIHQpIHsNCiAgcmV0dXJuIHRoaXMucG9pbnQoeCwgeSwgeiwgdCk7DQp9Ow0KDQpFZHdhcmRzQ3VydmUucHJvdG90eXBlLnBvaW50RnJvbVggPSBmdW5jdGlvbiBwb2ludEZyb21YKHgsIG9kZCkgew0KICB4ID0gbmV3IEJOKHgsIDE2KTsNCiAgaWYgKCF4LnJlZCkNCiAgICB4ID0geC50b1JlZCh0aGlzLnJlZCk7DQoNCiAgdmFyIHgyID0geC5yZWRTcXIoKTsNCiAgdmFyIHJocyA9IHRoaXMuYzIucmVkU3ViKHRoaXMuYS5yZWRNdWwoeDIpKTsNCiAgdmFyIGxocyA9IHRoaXMub25lLnJlZFN1Yih0aGlzLmMyLnJlZE11bCh0aGlzLmQpLnJlZE11bCh4MikpOw0KDQogIHZhciB5MiA9IHJocy5yZWRNdWwobGhzLnJlZEludm0oKSk7DQogIHZhciB5ID0geTIucmVkU3FydCgpOw0KICBpZiAoeS5yZWRTcXIoKS5yZWRTdWIoeTIpLmNtcCh0aGlzLnplcm8pICE9PSAwKQ0KICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBwb2ludCcpOw0KDQogIHZhciBpc09kZCA9IHkuZnJvbVJlZCgpLmlzT2RkKCk7DQogIGlmIChvZGQgJiYgIWlzT2RkIHx8ICFvZGQgJiYgaXNPZGQpDQogICAgeSA9IHkucmVkTmVnKCk7DQoNCiAgcmV0dXJuIHRoaXMucG9pbnQoeCwgeSk7DQp9Ow0KDQpFZHdhcmRzQ3VydmUucHJvdG90eXBlLnBvaW50RnJvbVkgPSBmdW5jdGlvbiBwb2ludEZyb21ZKHksIG9kZCkgew0KICB5ID0gbmV3IEJOKHksIDE2KTsNCiAgaWYgKCF5LnJlZCkNCiAgICB5ID0geS50b1JlZCh0aGlzLnJlZCk7DQoNCiAgLy8geF4yID0gKHleMiAtIDEpIC8gKGQgeV4yICsgMSkNCiAgdmFyIHkyID0geS5yZWRTcXIoKTsNCiAgdmFyIGxocyA9IHkyLnJlZFN1Yih0aGlzLm9uZSk7DQogIHZhciByaHMgPSB5Mi5yZWRNdWwodGhpcy5kKS5yZWRBZGQodGhpcy5vbmUpOw0KICB2YXIgeDIgPSBsaHMucmVkTXVsKHJocy5yZWRJbnZtKCkpOw0KDQogIGlmICh4Mi5jbXAodGhpcy56ZXJvKSA9PT0gMCkgew0KICAgIGlmIChvZGQpDQogICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgcG9pbnQnKTsNCiAgICBlbHNlDQogICAgICByZXR1cm4gdGhpcy5wb2ludCh0aGlzLnplcm8sIHkpOw0KICB9DQoNCiAgdmFyIHggPSB4Mi5yZWRTcXJ0KCk7DQogIGlmICh4LnJlZFNxcigpLnJlZFN1Yih4MikuY21wKHRoaXMuemVybykgIT09IDApDQogICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHBvaW50Jyk7DQoNCiAgaWYgKHguaXNPZGQoKSAhPT0gb2RkKQ0KICAgIHggPSB4LnJlZE5lZygpOw0KDQogIHJldHVybiB0aGlzLnBvaW50KHgsIHkpOw0KfTsNCg0KRWR3YXJkc0N1cnZlLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIHZhbGlkYXRlKHBvaW50KSB7DQogIGlmIChwb2ludC5pc0luZmluaXR5KCkpDQogICAgcmV0dXJuIHRydWU7DQoNCiAgLy8gQ3VydmU6IEEgKiBYXjIgKyBZXjIgPSBDXjIgKiAoMSArIEQgKiBYXjIgKiBZXjIpDQogIHBvaW50Lm5vcm1hbGl6ZSgpOw0KDQogIHZhciB4MiA9IHBvaW50LngucmVkU3FyKCk7DQogIHZhciB5MiA9IHBvaW50LnkucmVkU3FyKCk7DQogIHZhciBsaHMgPSB4Mi5yZWRNdWwodGhpcy5hKS5yZWRBZGQoeTIpOw0KICB2YXIgcmhzID0gdGhpcy5jMi5yZWRNdWwodGhpcy5vbmUucmVkQWRkKHRoaXMuZC5yZWRNdWwoeDIpLnJlZE11bCh5MikpKTsNCg0KICByZXR1cm4gbGhzLmNtcChyaHMpID09PSAwOw0KfTsNCg0KZnVuY3Rpb24gUG9pbnQoY3VydmUsIHgsIHksIHosIHQpIHsNCiAgQmFzZS5CYXNlUG9pbnQuY2FsbCh0aGlzLCBjdXJ2ZSwgJ3Byb2plY3RpdmUnKTsNCiAgaWYgKHggPT09IG51bGwgJiYgeSA9PT0gbnVsbCAmJiB6ID09PSBudWxsKSB7DQogICAgdGhpcy54ID0gdGhpcy5jdXJ2ZS56ZXJvOw0KICAgIHRoaXMueSA9IHRoaXMuY3VydmUub25lOw0KICAgIHRoaXMueiA9IHRoaXMuY3VydmUub25lOw0KICAgIHRoaXMudCA9IHRoaXMuY3VydmUuemVybzsNCiAgICB0aGlzLnpPbmUgPSB0cnVlOw0KICB9IGVsc2Ugew0KICAgIHRoaXMueCA9IG5ldyBCTih4LCAxNik7DQogICAgdGhpcy55ID0gbmV3IEJOKHksIDE2KTsNCiAgICB0aGlzLnogPSB6ID8gbmV3IEJOKHosIDE2KSA6IHRoaXMuY3VydmUub25lOw0KICAgIHRoaXMudCA9IHQgJiYgbmV3IEJOKHQsIDE2KTsNCiAgICBpZiAoIXRoaXMueC5yZWQpDQogICAgICB0aGlzLnggPSB0aGlzLngudG9SZWQodGhpcy5jdXJ2ZS5yZWQpOw0KICAgIGlmICghdGhpcy55LnJlZCkNCiAgICAgIHRoaXMueSA9IHRoaXMueS50b1JlZCh0aGlzLmN1cnZlLnJlZCk7DQogICAgaWYgKCF0aGlzLnoucmVkKQ0KICAgICAgdGhpcy56ID0gdGhpcy56LnRvUmVkKHRoaXMuY3VydmUucmVkKTsNCiAgICBpZiAodGhpcy50ICYmICF0aGlzLnQucmVkKQ0KICAgICAgdGhpcy50ID0gdGhpcy50LnRvUmVkKHRoaXMuY3VydmUucmVkKTsNCiAgICB0aGlzLnpPbmUgPSB0aGlzLnogPT09IHRoaXMuY3VydmUub25lOw0KDQogICAgLy8gVXNlIGV4dGVuZGVkIGNvb3JkaW5hdGVzDQogICAgaWYgKHRoaXMuY3VydmUuZXh0ZW5kZWQgJiYgIXRoaXMudCkgew0KICAgICAgdGhpcy50ID0gdGhpcy54LnJlZE11bCh0aGlzLnkpOw0KICAgICAgaWYgKCF0aGlzLnpPbmUpDQogICAgICAgIHRoaXMudCA9IHRoaXMudC5yZWRNdWwodGhpcy56LnJlZEludm0oKSk7DQogICAgfQ0KICB9DQp9DQppbmhlcml0cyhQb2ludCwgQmFzZS5CYXNlUG9pbnQpOw0KDQpFZHdhcmRzQ3VydmUucHJvdG90eXBlLnBvaW50RnJvbUpTT04gPSBmdW5jdGlvbiBwb2ludEZyb21KU09OKG9iaikgew0KICByZXR1cm4gUG9pbnQuZnJvbUpTT04odGhpcywgb2JqKTsNCn07DQoNCkVkd2FyZHNDdXJ2ZS5wcm90b3R5cGUucG9pbnQgPSBmdW5jdGlvbiBwb2ludCh4LCB5LCB6LCB0KSB7DQogIHJldHVybiBuZXcgUG9pbnQodGhpcywgeCwgeSwgeiwgdCk7DQp9Ow0KDQpQb2ludC5mcm9tSlNPTiA9IGZ1bmN0aW9uIGZyb21KU09OKGN1cnZlLCBvYmopIHsNCiAgcmV0dXJuIG5ldyBQb2ludChjdXJ2ZSwgb2JqWzBdLCBvYmpbMV0sIG9ialsyXSk7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuaW5zcGVjdCA9IGZ1bmN0aW9uIGluc3BlY3QoKSB7DQogIGlmICh0aGlzLmlzSW5maW5pdHkoKSkNCiAgICByZXR1cm4gJzxFQyBQb2ludCBJbmZpbml0eT4nOw0KICByZXR1cm4gJzxFQyBQb2ludCB4OiAnICsgdGhpcy54LmZyb21SZWQoKS50b1N0cmluZygxNiwgMikgKw0KICAgICAgJyB5OiAnICsgdGhpcy55LmZyb21SZWQoKS50b1N0cmluZygxNiwgMikgKw0KICAgICAgJyB6OiAnICsgdGhpcy56LmZyb21SZWQoKS50b1N0cmluZygxNiwgMikgKyAnPic7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuaXNJbmZpbml0eSA9IGZ1bmN0aW9uIGlzSW5maW5pdHkoKSB7DQogIC8vIFhYWCBUaGlzIGNvZGUgYXNzdW1lcyB0aGF0IHplcm8gaXMgYWx3YXlzIHplcm8gaW4gcmVkDQogIHJldHVybiB0aGlzLnguY21wbigwKSA9PT0gMCAmJg0KICAgICAgICAgdGhpcy55LmNtcCh0aGlzLnopID09PSAwOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLl9leHREYmwgPSBmdW5jdGlvbiBfZXh0RGJsKCkgew0KICAvLyBoeXBlcmVsbGlwdGljLm9yZy9FRkQvZzFwL2F1dG8tdHdpc3RlZC1leHRlbmRlZC0xLmh0bWwNCiAgLy8gICAgICNkb3VibGluZy1kYmwtMjAwOC1od2NkDQogIC8vIDRNICsgNFMNCg0KICAvLyBBID0gWDFeMg0KICB2YXIgYSA9IHRoaXMueC5yZWRTcXIoKTsNCiAgLy8gQiA9IFkxXjINCiAgdmFyIGIgPSB0aGlzLnkucmVkU3FyKCk7DQogIC8vIEMgPSAyICogWjFeMg0KICB2YXIgYyA9IHRoaXMuei5yZWRTcXIoKTsNCiAgYyA9IGMucmVkSUFkZChjKTsNCiAgLy8gRCA9IGEgKiBBDQogIHZhciBkID0gdGhpcy5jdXJ2ZS5fbXVsQShhKTsNCiAgLy8gRSA9IChYMSArIFkxKV4yIC0gQSAtIEINCiAgdmFyIGUgPSB0aGlzLngucmVkQWRkKHRoaXMueSkucmVkU3FyKCkucmVkSVN1YihhKS5yZWRJU3ViKGIpOw0KICAvLyBHID0gRCArIEINCiAgdmFyIGcgPSBkLnJlZEFkZChiKTsNCiAgLy8gRiA9IEcgLSBDDQogIHZhciBmID0gZy5yZWRTdWIoYyk7DQogIC8vIEggPSBEIC0gQg0KICB2YXIgaCA9IGQucmVkU3ViKGIpOw0KICAvLyBYMyA9IEUgKiBGDQogIHZhciBueCA9IGUucmVkTXVsKGYpOw0KICAvLyBZMyA9IEcgKiBIDQogIHZhciBueSA9IGcucmVkTXVsKGgpOw0KICAvLyBUMyA9IEUgKiBIDQogIHZhciBudCA9IGUucmVkTXVsKGgpOw0KICAvLyBaMyA9IEYgKiBHDQogIHZhciBueiA9IGYucmVkTXVsKGcpOw0KICByZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChueCwgbnksIG56LCBudCk7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuX3Byb2pEYmwgPSBmdW5jdGlvbiBfcHJvakRibCgpIHsNCiAgLy8gaHlwZXJlbGxpcHRpYy5vcmcvRUZEL2cxcC9hdXRvLXR3aXN0ZWQtcHJvamVjdGl2ZS5odG1sDQogIC8vICAgICAjZG91YmxpbmctZGJsLTIwMDgtYmJqbHANCiAgLy8gICAgICNkb3VibGluZy1kYmwtMjAwNy1ibA0KICAvLyBhbmQgb3RoZXJzDQogIC8vIEdlbmVyYWxseSAzTSArIDRTIG9yIDJNICsgNFMNCg0KICAvLyBCID0gKFgxICsgWTEpXjINCiAgdmFyIGIgPSB0aGlzLngucmVkQWRkKHRoaXMueSkucmVkU3FyKCk7DQogIC8vIEMgPSBYMV4yDQogIHZhciBjID0gdGhpcy54LnJlZFNxcigpOw0KICAvLyBEID0gWTFeMg0KICB2YXIgZCA9IHRoaXMueS5yZWRTcXIoKTsNCg0KICB2YXIgbng7DQogIHZhciBueTsNCiAgdmFyIG56Ow0KICBpZiAodGhpcy5jdXJ2ZS50d2lzdGVkKSB7DQogICAgLy8gRSA9IGEgKiBDDQogICAgdmFyIGUgPSB0aGlzLmN1cnZlLl9tdWxBKGMpOw0KICAgIC8vIEYgPSBFICsgRA0KICAgIHZhciBmID0gZS5yZWRBZGQoZCk7DQogICAgaWYgKHRoaXMuek9uZSkgew0KICAgICAgLy8gWDMgPSAoQiAtIEMgLSBEKSAqIChGIC0gMikNCiAgICAgIG54ID0gYi5yZWRTdWIoYykucmVkU3ViKGQpLnJlZE11bChmLnJlZFN1Yih0aGlzLmN1cnZlLnR3bykpOw0KICAgICAgLy8gWTMgPSBGICogKEUgLSBEKQ0KICAgICAgbnkgPSBmLnJlZE11bChlLnJlZFN1YihkKSk7DQogICAgICAvLyBaMyA9IEZeMiAtIDIgKiBGDQogICAgICBueiA9IGYucmVkU3FyKCkucmVkU3ViKGYpLnJlZFN1YihmKTsNCiAgICB9IGVsc2Ugew0KICAgICAgLy8gSCA9IFoxXjINCiAgICAgIHZhciBoID0gdGhpcy56LnJlZFNxcigpOw0KICAgICAgLy8gSiA9IEYgLSAyICogSA0KICAgICAgdmFyIGogPSBmLnJlZFN1YihoKS5yZWRJU3ViKGgpOw0KICAgICAgLy8gWDMgPSAoQi1DLUQpKkoNCiAgICAgIG54ID0gYi5yZWRTdWIoYykucmVkSVN1YihkKS5yZWRNdWwoaik7DQogICAgICAvLyBZMyA9IEYgKiAoRSAtIEQpDQogICAgICBueSA9IGYucmVkTXVsKGUucmVkU3ViKGQpKTsNCiAgICAgIC8vIFozID0gRiAqIEoNCiAgICAgIG56ID0gZi5yZWRNdWwoaik7DQogICAgfQ0KICB9IGVsc2Ugew0KICAgIC8vIEUgPSBDICsgRA0KICAgIHZhciBlID0gYy5yZWRBZGQoZCk7DQogICAgLy8gSCA9IChjICogWjEpXjINCiAgICB2YXIgaCA9IHRoaXMuY3VydmUuX211bEModGhpcy5jLnJlZE11bCh0aGlzLnopKS5yZWRTcXIoKTsNCiAgICAvLyBKID0gRSAtIDIgKiBIDQogICAgdmFyIGogPSBlLnJlZFN1YihoKS5yZWRTdWIoaCk7DQogICAgLy8gWDMgPSBjICogKEIgLSBFKSAqIEoNCiAgICBueCA9IHRoaXMuY3VydmUuX211bEMoYi5yZWRJU3ViKGUpKS5yZWRNdWwoaik7DQogICAgLy8gWTMgPSBjICogRSAqIChDIC0gRCkNCiAgICBueSA9IHRoaXMuY3VydmUuX211bEMoZSkucmVkTXVsKGMucmVkSVN1YihkKSk7DQogICAgLy8gWjMgPSBFICogSg0KICAgIG56ID0gZS5yZWRNdWwoaik7DQogIH0NCiAgcmV0dXJuIHRoaXMuY3VydmUucG9pbnQobngsIG55LCBueik7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuZGJsID0gZnVuY3Rpb24gZGJsKCkgew0KICBpZiAodGhpcy5pc0luZmluaXR5KCkpDQogICAgcmV0dXJuIHRoaXM7DQoNCiAgLy8gRG91YmxlIGluIGV4dGVuZGVkIGNvb3JkaW5hdGVzDQogIGlmICh0aGlzLmN1cnZlLmV4dGVuZGVkKQ0KICAgIHJldHVybiB0aGlzLl9leHREYmwoKTsNCiAgZWxzZQ0KICAgIHJldHVybiB0aGlzLl9wcm9qRGJsKCk7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuX2V4dEFkZCA9IGZ1bmN0aW9uIF9leHRBZGQocCkgew0KICAvLyBoeXBlcmVsbGlwdGljLm9yZy9FRkQvZzFwL2F1dG8tdHdpc3RlZC1leHRlbmRlZC0xLmh0bWwNCiAgLy8gICAgICNhZGRpdGlvbi1hZGQtMjAwOC1od2NkLTMNCiAgLy8gOE0NCg0KICAvLyBBID0gKFkxIC0gWDEpICogKFkyIC0gWDIpDQogIHZhciBhID0gdGhpcy55LnJlZFN1Yih0aGlzLngpLnJlZE11bChwLnkucmVkU3ViKHAueCkpOw0KICAvLyBCID0gKFkxICsgWDEpICogKFkyICsgWDIpDQogIHZhciBiID0gdGhpcy55LnJlZEFkZCh0aGlzLngpLnJlZE11bChwLnkucmVkQWRkKHAueCkpOw0KICAvLyBDID0gVDEgKiBrICogVDINCiAgdmFyIGMgPSB0aGlzLnQucmVkTXVsKHRoaXMuY3VydmUuZGQpLnJlZE11bChwLnQpOw0KICAvLyBEID0gWjEgKiAyICogWjINCiAgdmFyIGQgPSB0aGlzLnoucmVkTXVsKHAuei5yZWRBZGQocC56KSk7DQogIC8vIEUgPSBCIC0gQQ0KICB2YXIgZSA9IGIucmVkU3ViKGEpOw0KICAvLyBGID0gRCAtIEMNCiAgdmFyIGYgPSBkLnJlZFN1YihjKTsNCiAgLy8gRyA9IEQgKyBDDQogIHZhciBnID0gZC5yZWRBZGQoYyk7DQogIC8vIEggPSBCICsgQQ0KICB2YXIgaCA9IGIucmVkQWRkKGEpOw0KICAvLyBYMyA9IEUgKiBGDQogIHZhciBueCA9IGUucmVkTXVsKGYpOw0KICAvLyBZMyA9IEcgKiBIDQogIHZhciBueSA9IGcucmVkTXVsKGgpOw0KICAvLyBUMyA9IEUgKiBIDQogIHZhciBudCA9IGUucmVkTXVsKGgpOw0KICAvLyBaMyA9IEYgKiBHDQogIHZhciBueiA9IGYucmVkTXVsKGcpOw0KICByZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChueCwgbnksIG56LCBudCk7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuX3Byb2pBZGQgPSBmdW5jdGlvbiBfcHJvakFkZChwKSB7DQogIC8vIGh5cGVyZWxsaXB0aWMub3JnL0VGRC9nMXAvYXV0by10d2lzdGVkLXByb2plY3RpdmUuaHRtbA0KICAvLyAgICAgI2FkZGl0aW9uLWFkZC0yMDA4LWJiamxwDQogIC8vICAgICAjYWRkaXRpb24tYWRkLTIwMDctYmwNCiAgLy8gMTBNICsgMVMNCg0KICAvLyBBID0gWjEgKiBaMg0KICB2YXIgYSA9IHRoaXMuei5yZWRNdWwocC56KTsNCiAgLy8gQiA9IEFeMg0KICB2YXIgYiA9IGEucmVkU3FyKCk7DQogIC8vIEMgPSBYMSAqIFgyDQogIHZhciBjID0gdGhpcy54LnJlZE11bChwLngpOw0KICAvLyBEID0gWTEgKiBZMg0KICB2YXIgZCA9IHRoaXMueS5yZWRNdWwocC55KTsNCiAgLy8gRSA9IGQgKiBDICogRA0KICB2YXIgZSA9IHRoaXMuY3VydmUuZC5yZWRNdWwoYykucmVkTXVsKGQpOw0KICAvLyBGID0gQiAtIEUNCiAgdmFyIGYgPSBiLnJlZFN1YihlKTsNCiAgLy8gRyA9IEIgKyBFDQogIHZhciBnID0gYi5yZWRBZGQoZSk7DQogIC8vIFgzID0gQSAqIEYgKiAoKFgxICsgWTEpICogKFgyICsgWTIpIC0gQyAtIEQpDQogIHZhciB0bXAgPSB0aGlzLngucmVkQWRkKHRoaXMueSkucmVkTXVsKHAueC5yZWRBZGQocC55KSkucmVkSVN1YihjKS5yZWRJU3ViKGQpOw0KICB2YXIgbnggPSBhLnJlZE11bChmKS5yZWRNdWwodG1wKTsNCiAgdmFyIG55Ow0KICB2YXIgbno7DQogIGlmICh0aGlzLmN1cnZlLnR3aXN0ZWQpIHsNCiAgICAvLyBZMyA9IEEgKiBHICogKEQgLSBhICogQykNCiAgICBueSA9IGEucmVkTXVsKGcpLnJlZE11bChkLnJlZFN1Yih0aGlzLmN1cnZlLl9tdWxBKGMpKSk7DQogICAgLy8gWjMgPSBGICogRw0KICAgIG56ID0gZi5yZWRNdWwoZyk7DQogIH0gZWxzZSB7DQogICAgLy8gWTMgPSBBICogRyAqIChEIC0gQykNCiAgICBueSA9IGEucmVkTXVsKGcpLnJlZE11bChkLnJlZFN1YihjKSk7DQogICAgLy8gWjMgPSBjICogRiAqIEcNCiAgICBueiA9IHRoaXMuY3VydmUuX211bEMoZikucmVkTXVsKGcpOw0KICB9DQogIHJldHVybiB0aGlzLmN1cnZlLnBvaW50KG54LCBueSwgbnopOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIGFkZChwKSB7DQogIGlmICh0aGlzLmlzSW5maW5pdHkoKSkNCiAgICByZXR1cm4gcDsNCiAgaWYgKHAuaXNJbmZpbml0eSgpKQ0KICAgIHJldHVybiB0aGlzOw0KDQogIGlmICh0aGlzLmN1cnZlLmV4dGVuZGVkKQ0KICAgIHJldHVybiB0aGlzLl9leHRBZGQocCk7DQogIGVsc2UNCiAgICByZXR1cm4gdGhpcy5fcHJvakFkZChwKTsNCn07DQoNClBvaW50LnByb3RvdHlwZS5tdWwgPSBmdW5jdGlvbiBtdWwoaykgew0KICBpZiAodGhpcy5faGFzRG91YmxlcyhrKSkNCiAgICByZXR1cm4gdGhpcy5jdXJ2ZS5fZml4ZWROYWZNdWwodGhpcywgayk7DQogIGVsc2UNCiAgICByZXR1cm4gdGhpcy5jdXJ2ZS5fd25hZk11bCh0aGlzLCBrKTsNCn07DQoNClBvaW50LnByb3RvdHlwZS5tdWxBZGQgPSBmdW5jdGlvbiBtdWxBZGQoazEsIHAsIGsyKSB7DQogIHJldHVybiB0aGlzLmN1cnZlLl93bmFmTXVsQWRkKDEsIFsgdGhpcywgcCBdLCBbIGsxLCBrMiBdLCAyKTsNCn07DQoNClBvaW50LnByb3RvdHlwZS5ub3JtYWxpemUgPSBmdW5jdGlvbiBub3JtYWxpemUoKSB7DQogIGlmICh0aGlzLnpPbmUpDQogICAgcmV0dXJuIHRoaXM7DQoNCiAgLy8gTm9ybWFsaXplIGNvb3JkaW5hdGVzDQogIHZhciB6aSA9IHRoaXMuei5yZWRJbnZtKCk7DQogIHRoaXMueCA9IHRoaXMueC5yZWRNdWwoemkpOw0KICB0aGlzLnkgPSB0aGlzLnkucmVkTXVsKHppKTsNCiAgaWYgKHRoaXMudCkNCiAgICB0aGlzLnQgPSB0aGlzLnQucmVkTXVsKHppKTsNCiAgdGhpcy56ID0gdGhpcy5jdXJ2ZS5vbmU7DQogIHRoaXMuek9uZSA9IHRydWU7DQogIHJldHVybiB0aGlzOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLm5lZyA9IGZ1bmN0aW9uIG5lZygpIHsNCiAgcmV0dXJuIHRoaXMuY3VydmUucG9pbnQodGhpcy54LnJlZE5lZygpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnksDQogICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMueiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50ICYmIHRoaXMudC5yZWROZWcoKSk7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuZ2V0WCA9IGZ1bmN0aW9uIGdldFgoKSB7DQogIHRoaXMubm9ybWFsaXplKCk7DQogIHJldHVybiB0aGlzLnguZnJvbVJlZCgpOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLmdldFkgPSBmdW5jdGlvbiBnZXRZKCkgew0KICB0aGlzLm5vcm1hbGl6ZSgpOw0KICByZXR1cm4gdGhpcy55LmZyb21SZWQoKTsNCn07DQoNClBvaW50LnByb3RvdHlwZS5lcSA9IGZ1bmN0aW9uIGVxKG90aGVyKSB7DQogIHJldHVybiB0aGlzID09PSBvdGhlciB8fA0KICAgICAgICAgdGhpcy5nZXRYKCkuY21wKG90aGVyLmdldFgoKSkgPT09IDAgJiYNCiAgICAgICAgIHRoaXMuZ2V0WSgpLmNtcChvdGhlci5nZXRZKCkpID09PSAwOw0KfTsNCg0KLy8gQ29tcGF0aWJpbGl0eSB3aXRoIEJhc2VDdXJ2ZQ0KUG9pbnQucHJvdG90eXBlLnRvUCA9IFBvaW50LnByb3RvdHlwZS5ub3JtYWxpemU7DQpQb2ludC5wcm90b3R5cGUubWl4ZWRBZGQgPSBQb2ludC5wcm90b3R5cGUuYWRkOw0KDQp9LHsiLi4vLi4vZWxsaXB0aWMiOjUwOCwiLi4vY3VydmUiOjUxMSwiYm4uanMiOjU5LCJpbmhlcml0cyI6NTM3fV0sNTExOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCg0KdmFyIGN1cnZlID0gZXhwb3J0czsNCg0KY3VydmUuYmFzZSA9IHJlcXVpcmUoJy4vYmFzZScpOw0KY3VydmUuc2hvcnQgPSByZXF1aXJlKCcuL3Nob3J0Jyk7DQpjdXJ2ZS5tb250ID0gcmVxdWlyZSgnLi9tb250Jyk7DQpjdXJ2ZS5lZHdhcmRzID0gcmVxdWlyZSgnLi9lZHdhcmRzJyk7DQoNCn0seyIuL2Jhc2UiOjUwOSwiLi9lZHdhcmRzIjo1MTAsIi4vbW9udCI6NTEyLCIuL3Nob3J0Ijo1MTN9XSw1MTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQp2YXIgY3VydmUgPSByZXF1aXJlKCcuLi9jdXJ2ZScpOw0KdmFyIEJOID0gcmVxdWlyZSgnYm4uanMnKTsNCnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7DQp2YXIgQmFzZSA9IGN1cnZlLmJhc2U7DQoNCnZhciBlbGxpcHRpYyA9IHJlcXVpcmUoJy4uLy4uL2VsbGlwdGljJyk7DQp2YXIgdXRpbHMgPSBlbGxpcHRpYy51dGlsczsNCg0KZnVuY3Rpb24gTW9udEN1cnZlKGNvbmYpIHsNCiAgQmFzZS5jYWxsKHRoaXMsICdtb250JywgY29uZik7DQoNCiAgdGhpcy5hID0gbmV3IEJOKGNvbmYuYSwgMTYpLnRvUmVkKHRoaXMucmVkKTsNCiAgdGhpcy5iID0gbmV3IEJOKGNvbmYuYiwgMTYpLnRvUmVkKHRoaXMucmVkKTsNCiAgdGhpcy5pNCA9IG5ldyBCTig0KS50b1JlZCh0aGlzLnJlZCkucmVkSW52bSgpOw0KICB0aGlzLnR3byA9IG5ldyBCTigyKS50b1JlZCh0aGlzLnJlZCk7DQogIHRoaXMuYTI0ID0gdGhpcy5pNC5yZWRNdWwodGhpcy5hLnJlZEFkZCh0aGlzLnR3bykpOw0KfQ0KaW5oZXJpdHMoTW9udEN1cnZlLCBCYXNlKTsNCm1vZHVsZS5leHBvcnRzID0gTW9udEN1cnZlOw0KDQpNb250Q3VydmUucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gdmFsaWRhdGUocG9pbnQpIHsNCiAgdmFyIHggPSBwb2ludC5ub3JtYWxpemUoKS54Ow0KICB2YXIgeDIgPSB4LnJlZFNxcigpOw0KICB2YXIgcmhzID0geDIucmVkTXVsKHgpLnJlZEFkZCh4Mi5yZWRNdWwodGhpcy5hKSkucmVkQWRkKHgpOw0KICB2YXIgeSA9IHJocy5yZWRTcXJ0KCk7DQoNCiAgcmV0dXJuIHkucmVkU3FyKCkuY21wKHJocykgPT09IDA7DQp9Ow0KDQpmdW5jdGlvbiBQb2ludChjdXJ2ZSwgeCwgeikgew0KICBCYXNlLkJhc2VQb2ludC5jYWxsKHRoaXMsIGN1cnZlLCAncHJvamVjdGl2ZScpOw0KICBpZiAoeCA9PT0gbnVsbCAmJiB6ID09PSBudWxsKSB7DQogICAgdGhpcy54ID0gdGhpcy5jdXJ2ZS5vbmU7DQogICAgdGhpcy56ID0gdGhpcy5jdXJ2ZS56ZXJvOw0KICB9IGVsc2Ugew0KICAgIHRoaXMueCA9IG5ldyBCTih4LCAxNik7DQogICAgdGhpcy56ID0gbmV3IEJOKHosIDE2KTsNCiAgICBpZiAoIXRoaXMueC5yZWQpDQogICAgICB0aGlzLnggPSB0aGlzLngudG9SZWQodGhpcy5jdXJ2ZS5yZWQpOw0KICAgIGlmICghdGhpcy56LnJlZCkNCiAgICAgIHRoaXMueiA9IHRoaXMuei50b1JlZCh0aGlzLmN1cnZlLnJlZCk7DQogIH0NCn0NCmluaGVyaXRzKFBvaW50LCBCYXNlLkJhc2VQb2ludCk7DQoNCk1vbnRDdXJ2ZS5wcm90b3R5cGUuZGVjb2RlUG9pbnQgPSBmdW5jdGlvbiBkZWNvZGVQb2ludChieXRlcywgZW5jKSB7DQogIHJldHVybiB0aGlzLnBvaW50KHV0aWxzLnRvQXJyYXkoYnl0ZXMsIGVuYyksIDEpOw0KfTsNCg0KTW9udEN1cnZlLnByb3RvdHlwZS5wb2ludCA9IGZ1bmN0aW9uIHBvaW50KHgsIHopIHsNCiAgcmV0dXJuIG5ldyBQb2ludCh0aGlzLCB4LCB6KTsNCn07DQoNCk1vbnRDdXJ2ZS5wcm90b3R5cGUucG9pbnRGcm9tSlNPTiA9IGZ1bmN0aW9uIHBvaW50RnJvbUpTT04ob2JqKSB7DQogIHJldHVybiBQb2ludC5mcm9tSlNPTih0aGlzLCBvYmopOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLnByZWNvbXB1dGUgPSBmdW5jdGlvbiBwcmVjb21wdXRlKCkgew0KICAvLyBOby1vcA0KfTsNCg0KUG9pbnQucHJvdG90eXBlLl9lbmNvZGUgPSBmdW5jdGlvbiBfZW5jb2RlKCkgew0KICByZXR1cm4gdGhpcy5nZXRYKCkudG9BcnJheSgnYmUnLCB0aGlzLmN1cnZlLnAuYnl0ZUxlbmd0aCgpKTsNCn07DQoNClBvaW50LmZyb21KU09OID0gZnVuY3Rpb24gZnJvbUpTT04oY3VydmUsIG9iaikgew0KICByZXR1cm4gbmV3IFBvaW50KGN1cnZlLCBvYmpbMF0sIG9ialsxXSB8fCBjdXJ2ZS5vbmUpOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLmluc3BlY3QgPSBmdW5jdGlvbiBpbnNwZWN0KCkgew0KICBpZiAodGhpcy5pc0luZmluaXR5KCkpDQogICAgcmV0dXJuICc8RUMgUG9pbnQgSW5maW5pdHk+JzsNCiAgcmV0dXJuICc8RUMgUG9pbnQgeDogJyArIHRoaXMueC5mcm9tUmVkKCkudG9TdHJpbmcoMTYsIDIpICsNCiAgICAgICcgejogJyArIHRoaXMuei5mcm9tUmVkKCkudG9TdHJpbmcoMTYsIDIpICsgJz4nOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLmlzSW5maW5pdHkgPSBmdW5jdGlvbiBpc0luZmluaXR5KCkgew0KICAvLyBYWFggVGhpcyBjb2RlIGFzc3VtZXMgdGhhdCB6ZXJvIGlzIGFsd2F5cyB6ZXJvIGluIHJlZA0KICByZXR1cm4gdGhpcy56LmNtcG4oMCkgPT09IDA7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuZGJsID0gZnVuY3Rpb24gZGJsKCkgew0KICAvLyBodHRwOi8vaHlwZXJlbGxpcHRpYy5vcmcvRUZEL2cxcC9hdXRvLW1vbnRnb20teHouaHRtbCNkb3VibGluZy1kYmwtMTk4Ny1tLTMNCiAgLy8gMk0gKyAyUyArIDRBDQoNCiAgLy8gQSA9IFgxICsgWjENCiAgdmFyIGEgPSB0aGlzLngucmVkQWRkKHRoaXMueik7DQogIC8vIEFBID0gQV4yDQogIHZhciBhYSA9IGEucmVkU3FyKCk7DQogIC8vIEIgPSBYMSAtIFoxDQogIHZhciBiID0gdGhpcy54LnJlZFN1Yih0aGlzLnopOw0KICAvLyBCQiA9IEJeMg0KICB2YXIgYmIgPSBiLnJlZFNxcigpOw0KICAvLyBDID0gQUEgLSBCQg0KICB2YXIgYyA9IGFhLnJlZFN1YihiYik7DQogIC8vIFgzID0gQUEgKiBCQg0KICB2YXIgbnggPSBhYS5yZWRNdWwoYmIpOw0KICAvLyBaMyA9IEMgKiAoQkIgKyBBMjQgKiBDKQ0KICB2YXIgbnogPSBjLnJlZE11bChiYi5yZWRBZGQodGhpcy5jdXJ2ZS5hMjQucmVkTXVsKGMpKSk7DQogIHJldHVybiB0aGlzLmN1cnZlLnBvaW50KG54LCBueik7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gYWRkKCkgew0KICB0aHJvdyBuZXcgRXJyb3IoJ05vdCBzdXBwb3J0ZWQgb24gTW9udGdvbWVyeSBjdXJ2ZScpOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLmRpZmZBZGQgPSBmdW5jdGlvbiBkaWZmQWRkKHAsIGRpZmYpIHsNCiAgLy8gaHR0cDovL2h5cGVyZWxsaXB0aWMub3JnL0VGRC9nMXAvYXV0by1tb250Z29tLXh6Lmh0bWwjZGlmZmFkZC1kYWRkLTE5ODctbS0zDQogIC8vIDRNICsgMlMgKyA2QQ0KDQogIC8vIEEgPSBYMiArIFoyDQogIHZhciBhID0gdGhpcy54LnJlZEFkZCh0aGlzLnopOw0KICAvLyBCID0gWDIgLSBaMg0KICB2YXIgYiA9IHRoaXMueC5yZWRTdWIodGhpcy56KTsNCiAgLy8gQyA9IFgzICsgWjMNCiAgdmFyIGMgPSBwLngucmVkQWRkKHAueik7DQogIC8vIEQgPSBYMyAtIFozDQogIHZhciBkID0gcC54LnJlZFN1YihwLnopOw0KICAvLyBEQSA9IEQgKiBBDQogIHZhciBkYSA9IGQucmVkTXVsKGEpOw0KICAvLyBDQiA9IEMgKiBCDQogIHZhciBjYiA9IGMucmVkTXVsKGIpOw0KICAvLyBYNSA9IFoxICogKERBICsgQ0IpXjINCiAgdmFyIG54ID0gZGlmZi56LnJlZE11bChkYS5yZWRBZGQoY2IpLnJlZFNxcigpKTsNCiAgLy8gWjUgPSBYMSAqIChEQSAtIENCKV4yDQogIHZhciBueiA9IGRpZmYueC5yZWRNdWwoZGEucmVkSVN1YihjYikucmVkU3FyKCkpOw0KICByZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChueCwgbnopOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLm11bCA9IGZ1bmN0aW9uIG11bChrKSB7DQogIHZhciB0ID0gay5jbG9uZSgpOw0KICB2YXIgYSA9IHRoaXM7IC8vIChOIC8gMikgKiBRICsgUQ0KICB2YXIgYiA9IHRoaXMuY3VydmUucG9pbnQobnVsbCwgbnVsbCk7IC8vIChOIC8gMikgKiBRDQogIHZhciBjID0gdGhpczsgLy8gUQ0KDQogIGZvciAodmFyIGJpdHMgPSBbXTsgdC5jbXBuKDApICE9PSAwOyB0Lml1c2hybigxKSkNCiAgICBiaXRzLnB1c2godC5hbmRsbigxKSk7DQoNCiAgZm9yICh2YXIgaSA9IGJpdHMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHsNCiAgICBpZiAoYml0c1tpXSA9PT0gMCkgew0KICAgICAgLy8gTiAqIFEgKyBRID0gKChOIC8gMikgKiBRICsgUSkpICsgKE4gLyAyKSAqIFENCiAgICAgIGEgPSBhLmRpZmZBZGQoYiwgYyk7DQogICAgICAvLyBOICogUSA9IDIgKiAoKE4gLyAyKSAqIFEgKyBRKSkNCiAgICAgIGIgPSBiLmRibCgpOw0KICAgIH0gZWxzZSB7DQogICAgICAvLyBOICogUSA9ICgoTiAvIDIpICogUSArIFEpICsgKChOIC8gMikgKiBRKQ0KICAgICAgYiA9IGEuZGlmZkFkZChiLCBjKTsNCiAgICAgIC8vIE4gKiBRICsgUSA9IDIgKiAoKE4gLyAyKSAqIFEgKyBRKQ0KICAgICAgYSA9IGEuZGJsKCk7DQogICAgfQ0KICB9DQogIHJldHVybiBiOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLm11bEFkZCA9IGZ1bmN0aW9uIG11bEFkZCgpIHsNCiAgdGhyb3cgbmV3IEVycm9yKCdOb3Qgc3VwcG9ydGVkIG9uIE1vbnRnb21lcnkgY3VydmUnKTsNCn07DQoNClBvaW50LnByb3RvdHlwZS5lcSA9IGZ1bmN0aW9uIGVxKG90aGVyKSB7DQogIHJldHVybiB0aGlzLmdldFgoKS5jbXAob3RoZXIuZ2V0WCgpKSA9PT0gMDsNCn07DQoNClBvaW50LnByb3RvdHlwZS5ub3JtYWxpemUgPSBmdW5jdGlvbiBub3JtYWxpemUoKSB7DQogIHRoaXMueCA9IHRoaXMueC5yZWRNdWwodGhpcy56LnJlZEludm0oKSk7DQogIHRoaXMueiA9IHRoaXMuY3VydmUub25lOw0KICByZXR1cm4gdGhpczsNCn07DQoNClBvaW50LnByb3RvdHlwZS5nZXRYID0gZnVuY3Rpb24gZ2V0WCgpIHsNCiAgLy8gTm9ybWFsaXplIGNvb3JkaW5hdGVzDQogIHRoaXMubm9ybWFsaXplKCk7DQoNCiAgcmV0dXJuIHRoaXMueC5mcm9tUmVkKCk7DQp9Ow0KDQp9LHsiLi4vLi4vZWxsaXB0aWMiOjUwOCwiLi4vY3VydmUiOjUxMSwiYm4uanMiOjU5LCJpbmhlcml0cyI6NTM3fV0sNTEzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCg0KdmFyIGN1cnZlID0gcmVxdWlyZSgnLi4vY3VydmUnKTsNCnZhciBlbGxpcHRpYyA9IHJlcXVpcmUoJy4uLy4uL2VsbGlwdGljJyk7DQp2YXIgQk4gPSByZXF1aXJlKCdibi5qcycpOw0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTsNCnZhciBCYXNlID0gY3VydmUuYmFzZTsNCg0KdmFyIGFzc2VydCA9IGVsbGlwdGljLnV0aWxzLmFzc2VydDsNCg0KZnVuY3Rpb24gU2hvcnRDdXJ2ZShjb25mKSB7DQogIEJhc2UuY2FsbCh0aGlzLCAnc2hvcnQnLCBjb25mKTsNCg0KICB0aGlzLmEgPSBuZXcgQk4oY29uZi5hLCAxNikudG9SZWQodGhpcy5yZWQpOw0KICB0aGlzLmIgPSBuZXcgQk4oY29uZi5iLCAxNikudG9SZWQodGhpcy5yZWQpOw0KICB0aGlzLnRpbnYgPSB0aGlzLnR3by5yZWRJbnZtKCk7DQoNCiAgdGhpcy56ZXJvQSA9IHRoaXMuYS5mcm9tUmVkKCkuY21wbigwKSA9PT0gMDsNCiAgdGhpcy50aHJlZUEgPSB0aGlzLmEuZnJvbVJlZCgpLnN1Yih0aGlzLnApLmNtcG4oLTMpID09PSAwOw0KDQogIC8vIElmIHRoZSBjdXJ2ZSBpcyBlbmRvbW9ycGhpYywgcHJlY2FsY3VsYXRlIGJldGEgYW5kIGxhbWJkYQ0KICB0aGlzLmVuZG8gPSB0aGlzLl9nZXRFbmRvbW9ycGhpc20oY29uZik7DQogIHRoaXMuX2VuZG9XbmFmVDEgPSBuZXcgQXJyYXkoNCk7DQogIHRoaXMuX2VuZG9XbmFmVDIgPSBuZXcgQXJyYXkoNCk7DQp9DQppbmhlcml0cyhTaG9ydEN1cnZlLCBCYXNlKTsNCm1vZHVsZS5leHBvcnRzID0gU2hvcnRDdXJ2ZTsNCg0KU2hvcnRDdXJ2ZS5wcm90b3R5cGUuX2dldEVuZG9tb3JwaGlzbSA9IGZ1bmN0aW9uIF9nZXRFbmRvbW9ycGhpc20oY29uZikgew0KICAvLyBObyBlZmZpY2llbnQgZW5kb21vcnBoaXNtDQogIGlmICghdGhpcy56ZXJvQSB8fCAhdGhpcy5nIHx8ICF0aGlzLm4gfHwgdGhpcy5wLm1vZG4oMykgIT09IDEpDQogICAgcmV0dXJuOw0KDQogIC8vIENvbXB1dGUgYmV0YSBhbmQgbGFtYmRhLCB0aGF0IGxhbWJkYSAqIFAgPSAoYmV0YSAqIFB4OyBQeSkNCiAgdmFyIGJldGE7DQogIHZhciBsYW1iZGE7DQogIGlmIChjb25mLmJldGEpIHsNCiAgICBiZXRhID0gbmV3IEJOKGNvbmYuYmV0YSwgMTYpLnRvUmVkKHRoaXMucmVkKTsNCiAgfSBlbHNlIHsNCiAgICB2YXIgYmV0YXMgPSB0aGlzLl9nZXRFbmRvUm9vdHModGhpcy5wKTsNCiAgICAvLyBDaG9vc2UgdGhlIHNtYWxsZXN0IGJldGENCiAgICBiZXRhID0gYmV0YXNbMF0uY21wKGJldGFzWzFdKSA8IDAgPyBiZXRhc1swXSA6IGJldGFzWzFdOw0KICAgIGJldGEgPSBiZXRhLnRvUmVkKHRoaXMucmVkKTsNCiAgfQ0KICBpZiAoY29uZi5sYW1iZGEpIHsNCiAgICBsYW1iZGEgPSBuZXcgQk4oY29uZi5sYW1iZGEsIDE2KTsNCiAgfSBlbHNlIHsNCiAgICAvLyBDaG9vc2UgdGhlIGxhbWJkYSB0aGF0IGlzIG1hdGNoaW5nIHNlbGVjdGVkIGJldGENCiAgICB2YXIgbGFtYmRhcyA9IHRoaXMuX2dldEVuZG9Sb290cyh0aGlzLm4pOw0KICAgIGlmICh0aGlzLmcubXVsKGxhbWJkYXNbMF0pLnguY21wKHRoaXMuZy54LnJlZE11bChiZXRhKSkgPT09IDApIHsNCiAgICAgIGxhbWJkYSA9IGxhbWJkYXNbMF07DQogICAgfSBlbHNlIHsNCiAgICAgIGxhbWJkYSA9IGxhbWJkYXNbMV07DQogICAgICBhc3NlcnQodGhpcy5nLm11bChsYW1iZGEpLnguY21wKHRoaXMuZy54LnJlZE11bChiZXRhKSkgPT09IDApOw0KICAgIH0NCiAgfQ0KDQogIC8vIEdldCBiYXNpcyB2ZWN0b3JzLCB1c2VkIGZvciBiYWxhbmNlZCBsZW5ndGgtdHdvIHJlcHJlc2VudGF0aW9uDQogIHZhciBiYXNpczsNCiAgaWYgKGNvbmYuYmFzaXMpIHsNCiAgICBiYXNpcyA9IGNvbmYuYmFzaXMubWFwKGZ1bmN0aW9uKHZlYykgew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgYTogbmV3IEJOKHZlYy5hLCAxNiksDQogICAgICAgIGI6IG5ldyBCTih2ZWMuYiwgMTYpDQogICAgICB9Ow0KICAgIH0pOw0KICB9IGVsc2Ugew0KICAgIGJhc2lzID0gdGhpcy5fZ2V0RW5kb0Jhc2lzKGxhbWJkYSk7DQogIH0NCg0KICByZXR1cm4gew0KICAgIGJldGE6IGJldGEsDQogICAgbGFtYmRhOiBsYW1iZGEsDQogICAgYmFzaXM6IGJhc2lzDQogIH07DQp9Ow0KDQpTaG9ydEN1cnZlLnByb3RvdHlwZS5fZ2V0RW5kb1Jvb3RzID0gZnVuY3Rpb24gX2dldEVuZG9Sb290cyhudW0pIHsNCiAgLy8gRmluZCByb290cyBvZiBmb3IgeF4yICsgeCArIDEgaW4gRg0KICAvLyBSb290ID0gKC0xICstIFNxcnQoLTMpKSAvIDINCiAgLy8NCiAgdmFyIHJlZCA9IG51bSA9PT0gdGhpcy5wID8gdGhpcy5yZWQgOiBCTi5tb250KG51bSk7DQogIHZhciB0aW52ID0gbmV3IEJOKDIpLnRvUmVkKHJlZCkucmVkSW52bSgpOw0KICB2YXIgbnRpbnYgPSB0aW52LnJlZE5lZygpOw0KDQogIHZhciBzID0gbmV3IEJOKDMpLnRvUmVkKHJlZCkucmVkTmVnKCkucmVkU3FydCgpLnJlZE11bCh0aW52KTsNCg0KICB2YXIgbDEgPSBudGludi5yZWRBZGQocykuZnJvbVJlZCgpOw0KICB2YXIgbDIgPSBudGludi5yZWRTdWIocykuZnJvbVJlZCgpOw0KICByZXR1cm4gWyBsMSwgbDIgXTsNCn07DQoNClNob3J0Q3VydmUucHJvdG90eXBlLl9nZXRFbmRvQmFzaXMgPSBmdW5jdGlvbiBfZ2V0RW5kb0Jhc2lzKGxhbWJkYSkgew0KICAvLyBhcHJ4U3FydCA+PSBzcXJ0KHRoaXMubikNCiAgdmFyIGFwcnhTcXJ0ID0gdGhpcy5uLnVzaHJuKE1hdGguZmxvb3IodGhpcy5uLmJpdExlbmd0aCgpIC8gMikpOw0KDQogIC8vIDMuNzQNCiAgLy8gUnVuIEVHQ0QsIHVudGlsIHIoTCArIDEpIDwgYXByeFNxcnQNCiAgdmFyIHUgPSBsYW1iZGE7DQogIHZhciB2ID0gdGhpcy5uLmNsb25lKCk7DQogIHZhciB4MSA9IG5ldyBCTigxKTsNCiAgdmFyIHkxID0gbmV3IEJOKDApOw0KICB2YXIgeDIgPSBuZXcgQk4oMCk7DQogIHZhciB5MiA9IG5ldyBCTigxKTsNCg0KICAvLyBOT1RFOiBhbGwgdmVjdG9ycyBhcmUgcm9vdHMgb2Y6IGEgKyBiICogbGFtYmRhID0gMCAobW9kIG4pDQogIHZhciBhMDsNCiAgdmFyIGIwOw0KICAvLyBGaXJzdCB2ZWN0b3INCiAgdmFyIGExOw0KICB2YXIgYjE7DQogIC8vIFNlY29uZCB2ZWN0b3INCiAgdmFyIGEyOw0KICB2YXIgYjI7DQoNCiAgdmFyIHByZXZSOw0KICB2YXIgaSA9IDA7DQogIHZhciByOw0KICB2YXIgeDsNCiAgd2hpbGUgKHUuY21wbigwKSAhPT0gMCkgew0KICAgIHZhciBxID0gdi5kaXYodSk7DQogICAgciA9IHYuc3ViKHEubXVsKHUpKTsNCiAgICB4ID0geDIuc3ViKHEubXVsKHgxKSk7DQogICAgdmFyIHkgPSB5Mi5zdWIocS5tdWwoeTEpKTsNCg0KICAgIGlmICghYTEgJiYgci5jbXAoYXByeFNxcnQpIDwgMCkgew0KICAgICAgYTAgPSBwcmV2Ui5uZWcoKTsNCiAgICAgIGIwID0geDE7DQogICAgICBhMSA9IHIubmVnKCk7DQogICAgICBiMSA9IHg7DQogICAgfSBlbHNlIGlmIChhMSAmJiArK2kgPT09IDIpIHsNCiAgICAgIGJyZWFrOw0KICAgIH0NCiAgICBwcmV2UiA9IHI7DQoNCiAgICB2ID0gdTsNCiAgICB1ID0gcjsNCiAgICB4MiA9IHgxOw0KICAgIHgxID0geDsNCiAgICB5MiA9IHkxOw0KICAgIHkxID0geTsNCiAgfQ0KICBhMiA9IHIubmVnKCk7DQogIGIyID0geDsNCg0KICB2YXIgbGVuMSA9IGExLnNxcigpLmFkZChiMS5zcXIoKSk7DQogIHZhciBsZW4yID0gYTIuc3FyKCkuYWRkKGIyLnNxcigpKTsNCiAgaWYgKGxlbjIuY21wKGxlbjEpID49IDApIHsNCiAgICBhMiA9IGEwOw0KICAgIGIyID0gYjA7DQogIH0NCg0KICAvLyBOb3JtYWxpemUgc2lnbnMNCiAgaWYgKGExLm5lZ2F0aXZlKSB7DQogICAgYTEgPSBhMS5uZWcoKTsNCiAgICBiMSA9IGIxLm5lZygpOw0KICB9DQogIGlmIChhMi5uZWdhdGl2ZSkgew0KICAgIGEyID0gYTIubmVnKCk7DQogICAgYjIgPSBiMi5uZWcoKTsNCiAgfQ0KDQogIHJldHVybiBbDQogICAgeyBhOiBhMSwgYjogYjEgfSwNCiAgICB7IGE6IGEyLCBiOiBiMiB9DQogIF07DQp9Ow0KDQpTaG9ydEN1cnZlLnByb3RvdHlwZS5fZW5kb1NwbGl0ID0gZnVuY3Rpb24gX2VuZG9TcGxpdChrKSB7DQogIHZhciBiYXNpcyA9IHRoaXMuZW5kby5iYXNpczsNCiAgdmFyIHYxID0gYmFzaXNbMF07DQogIHZhciB2MiA9IGJhc2lzWzFdOw0KDQogIHZhciBjMSA9IHYyLmIubXVsKGspLmRpdlJvdW5kKHRoaXMubik7DQogIHZhciBjMiA9IHYxLmIubmVnKCkubXVsKGspLmRpdlJvdW5kKHRoaXMubik7DQoNCiAgdmFyIHAxID0gYzEubXVsKHYxLmEpOw0KICB2YXIgcDIgPSBjMi5tdWwodjIuYSk7DQogIHZhciBxMSA9IGMxLm11bCh2MS5iKTsNCiAgdmFyIHEyID0gYzIubXVsKHYyLmIpOw0KDQogIC8vIENhbGN1bGF0ZSBhbnN3ZXINCiAgdmFyIGsxID0gay5zdWIocDEpLnN1YihwMik7DQogIHZhciBrMiA9IHExLmFkZChxMikubmVnKCk7DQogIHJldHVybiB7IGsxOiBrMSwgazI6IGsyIH07DQp9Ow0KDQpTaG9ydEN1cnZlLnByb3RvdHlwZS5wb2ludEZyb21YID0gZnVuY3Rpb24gcG9pbnRGcm9tWCh4LCBvZGQpIHsNCiAgeCA9IG5ldyBCTih4LCAxNik7DQogIGlmICgheC5yZWQpDQogICAgeCA9IHgudG9SZWQodGhpcy5yZWQpOw0KDQogIHZhciB5MiA9IHgucmVkU3FyKCkucmVkTXVsKHgpLnJlZElBZGQoeC5yZWRNdWwodGhpcy5hKSkucmVkSUFkZCh0aGlzLmIpOw0KICB2YXIgeSA9IHkyLnJlZFNxcnQoKTsNCiAgaWYgKHkucmVkU3FyKCkucmVkU3ViKHkyKS5jbXAodGhpcy56ZXJvKSAhPT0gMCkNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgcG9pbnQnKTsNCg0KICAvLyBYWFggSXMgdGhlcmUgYW55IHdheSB0byB0ZWxsIGlmIHRoZSBudW1iZXIgaXMgb2RkIHdpdGhvdXQgY29udmVydGluZyBpdA0KICAvLyB0byBub24tcmVkIGZvcm0/DQogIHZhciBpc09kZCA9IHkuZnJvbVJlZCgpLmlzT2RkKCk7DQogIGlmIChvZGQgJiYgIWlzT2RkIHx8ICFvZGQgJiYgaXNPZGQpDQogICAgeSA9IHkucmVkTmVnKCk7DQoNCiAgcmV0dXJuIHRoaXMucG9pbnQoeCwgeSk7DQp9Ow0KDQpTaG9ydEN1cnZlLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIHZhbGlkYXRlKHBvaW50KSB7DQogIGlmIChwb2ludC5pbmYpDQogICAgcmV0dXJuIHRydWU7DQoNCiAgdmFyIHggPSBwb2ludC54Ow0KICB2YXIgeSA9IHBvaW50Lnk7DQoNCiAgdmFyIGF4ID0gdGhpcy5hLnJlZE11bCh4KTsNCiAgdmFyIHJocyA9IHgucmVkU3FyKCkucmVkTXVsKHgpLnJlZElBZGQoYXgpLnJlZElBZGQodGhpcy5iKTsNCiAgcmV0dXJuIHkucmVkU3FyKCkucmVkSVN1YihyaHMpLmNtcG4oMCkgPT09IDA7DQp9Ow0KDQpTaG9ydEN1cnZlLnByb3RvdHlwZS5fZW5kb1duYWZNdWxBZGQgPQ0KICAgIGZ1bmN0aW9uIF9lbmRvV25hZk11bEFkZChwb2ludHMsIGNvZWZmcykgew0KICB2YXIgbnBvaW50cyA9IHRoaXMuX2VuZG9XbmFmVDE7DQogIHZhciBuY29lZmZzID0gdGhpcy5fZW5kb1duYWZUMjsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwb2ludHMubGVuZ3RoOyBpKyspIHsNCiAgICB2YXIgc3BsaXQgPSB0aGlzLl9lbmRvU3BsaXQoY29lZmZzW2ldKTsNCiAgICB2YXIgcCA9IHBvaW50c1tpXTsNCiAgICB2YXIgYmV0YSA9IHAuX2dldEJldGEoKTsNCg0KICAgIGlmIChzcGxpdC5rMS5uZWdhdGl2ZSkgew0KICAgICAgc3BsaXQuazEuaW5lZygpOw0KICAgICAgcCA9IHAubmVnKHRydWUpOw0KICAgIH0NCiAgICBpZiAoc3BsaXQuazIubmVnYXRpdmUpIHsNCiAgICAgIHNwbGl0LmsyLmluZWcoKTsNCiAgICAgIGJldGEgPSBiZXRhLm5lZyh0cnVlKTsNCiAgICB9DQoNCiAgICBucG9pbnRzW2kgKiAyXSA9IHA7DQogICAgbnBvaW50c1tpICogMiArIDFdID0gYmV0YTsNCiAgICBuY29lZmZzW2kgKiAyXSA9IHNwbGl0LmsxOw0KICAgIG5jb2VmZnNbaSAqIDIgKyAxXSA9IHNwbGl0LmsyOw0KICB9DQogIHZhciByZXMgPSB0aGlzLl93bmFmTXVsQWRkKDEsIG5wb2ludHMsIG5jb2VmZnMsIGkgKiAyKTsNCg0KICAvLyBDbGVhbi11cCByZWZlcmVuY2VzIHRvIHBvaW50cyBhbmQgY29lZmZpY2llbnRzDQogIGZvciAodmFyIGogPSAwOyBqIDwgaSAqIDI7IGorKykgew0KICAgIG5wb2ludHNbal0gPSBudWxsOw0KICAgIG5jb2VmZnNbal0gPSBudWxsOw0KICB9DQogIHJldHVybiByZXM7DQp9Ow0KDQpmdW5jdGlvbiBQb2ludChjdXJ2ZSwgeCwgeSwgaXNSZWQpIHsNCiAgQmFzZS5CYXNlUG9pbnQuY2FsbCh0aGlzLCBjdXJ2ZSwgJ2FmZmluZScpOw0KICBpZiAoeCA9PT0gbnVsbCAmJiB5ID09PSBudWxsKSB7DQogICAgdGhpcy54ID0gbnVsbDsNCiAgICB0aGlzLnkgPSBudWxsOw0KICAgIHRoaXMuaW5mID0gdHJ1ZTsNCiAgfSBlbHNlIHsNCiAgICB0aGlzLnggPSBuZXcgQk4oeCwgMTYpOw0KICAgIHRoaXMueSA9IG5ldyBCTih5LCAxNik7DQogICAgLy8gRm9yY2UgcmVkZ29tZXJ5IHJlcHJlc2VudGF0aW9uIHdoZW4gbG9hZGluZyBmcm9tIEpTT04NCiAgICBpZiAoaXNSZWQpIHsNCiAgICAgIHRoaXMueC5mb3JjZVJlZCh0aGlzLmN1cnZlLnJlZCk7DQogICAgICB0aGlzLnkuZm9yY2VSZWQodGhpcy5jdXJ2ZS5yZWQpOw0KICAgIH0NCiAgICBpZiAoIXRoaXMueC5yZWQpDQogICAgICB0aGlzLnggPSB0aGlzLngudG9SZWQodGhpcy5jdXJ2ZS5yZWQpOw0KICAgIGlmICghdGhpcy55LnJlZCkNCiAgICAgIHRoaXMueSA9IHRoaXMueS50b1JlZCh0aGlzLmN1cnZlLnJlZCk7DQogICAgdGhpcy5pbmYgPSBmYWxzZTsNCiAgfQ0KfQ0KaW5oZXJpdHMoUG9pbnQsIEJhc2UuQmFzZVBvaW50KTsNCg0KU2hvcnRDdXJ2ZS5wcm90b3R5cGUucG9pbnQgPSBmdW5jdGlvbiBwb2ludCh4LCB5LCBpc1JlZCkgew0KICByZXR1cm4gbmV3IFBvaW50KHRoaXMsIHgsIHksIGlzUmVkKTsNCn07DQoNClNob3J0Q3VydmUucHJvdG90eXBlLnBvaW50RnJvbUpTT04gPSBmdW5jdGlvbiBwb2ludEZyb21KU09OKG9iaiwgcmVkKSB7DQogIHJldHVybiBQb2ludC5mcm9tSlNPTih0aGlzLCBvYmosIHJlZCk7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuX2dldEJldGEgPSBmdW5jdGlvbiBfZ2V0QmV0YSgpIHsNCiAgaWYgKCF0aGlzLmN1cnZlLmVuZG8pDQogICAgcmV0dXJuOw0KDQogIHZhciBwcmUgPSB0aGlzLnByZWNvbXB1dGVkOw0KICBpZiAocHJlICYmIHByZS5iZXRhKQ0KICAgIHJldHVybiBwcmUuYmV0YTsNCg0KICB2YXIgYmV0YSA9IHRoaXMuY3VydmUucG9pbnQodGhpcy54LnJlZE11bCh0aGlzLmN1cnZlLmVuZG8uYmV0YSksIHRoaXMueSk7DQogIGlmIChwcmUpIHsNCiAgICB2YXIgY3VydmUgPSB0aGlzLmN1cnZlOw0KICAgIHZhciBlbmRvTXVsID0gZnVuY3Rpb24ocCkgew0KICAgICAgcmV0dXJuIGN1cnZlLnBvaW50KHAueC5yZWRNdWwoY3VydmUuZW5kby5iZXRhKSwgcC55KTsNCiAgICB9Ow0KICAgIHByZS5iZXRhID0gYmV0YTsNCiAgICBiZXRhLnByZWNvbXB1dGVkID0gew0KICAgICAgYmV0YTogbnVsbCwNCiAgICAgIG5hZjogcHJlLm5hZiAmJiB7DQogICAgICAgIHduZDogcHJlLm5hZi53bmQsDQogICAgICAgIHBvaW50czogcHJlLm5hZi5wb2ludHMubWFwKGVuZG9NdWwpDQogICAgICB9LA0KICAgICAgZG91YmxlczogcHJlLmRvdWJsZXMgJiYgew0KICAgICAgICBzdGVwOiBwcmUuZG91Ymxlcy5zdGVwLA0KICAgICAgICBwb2ludHM6IHByZS5kb3VibGVzLnBvaW50cy5tYXAoZW5kb011bCkNCiAgICAgIH0NCiAgICB9Ow0KICB9DQogIHJldHVybiBiZXRhOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uIHRvSlNPTigpIHsNCiAgaWYgKCF0aGlzLnByZWNvbXB1dGVkKQ0KICAgIHJldHVybiBbIHRoaXMueCwgdGhpcy55IF07DQoNCiAgcmV0dXJuIFsgdGhpcy54LCB0aGlzLnksIHRoaXMucHJlY29tcHV0ZWQgJiYgew0KICAgIGRvdWJsZXM6IHRoaXMucHJlY29tcHV0ZWQuZG91YmxlcyAmJiB7DQogICAgICBzdGVwOiB0aGlzLnByZWNvbXB1dGVkLmRvdWJsZXMuc3RlcCwNCiAgICAgIHBvaW50czogdGhpcy5wcmVjb21wdXRlZC5kb3VibGVzLnBvaW50cy5zbGljZSgxKQ0KICAgIH0sDQogICAgbmFmOiB0aGlzLnByZWNvbXB1dGVkLm5hZiAmJiB7DQogICAgICB3bmQ6IHRoaXMucHJlY29tcHV0ZWQubmFmLnduZCwNCiAgICAgIHBvaW50czogdGhpcy5wcmVjb21wdXRlZC5uYWYucG9pbnRzLnNsaWNlKDEpDQogICAgfQ0KICB9IF07DQp9Ow0KDQpQb2ludC5mcm9tSlNPTiA9IGZ1bmN0aW9uIGZyb21KU09OKGN1cnZlLCBvYmosIHJlZCkgew0KICBpZiAodHlwZW9mIG9iaiA9PT0gJ3N0cmluZycpDQogICAgb2JqID0gSlNPTi5wYXJzZShvYmopOw0KICB2YXIgcmVzID0gY3VydmUucG9pbnQob2JqWzBdLCBvYmpbMV0sIHJlZCk7DQogIGlmICghb2JqWzJdKQ0KICAgIHJldHVybiByZXM7DQoNCiAgZnVuY3Rpb24gb2JqMnBvaW50KG9iaikgew0KICAgIHJldHVybiBjdXJ2ZS5wb2ludChvYmpbMF0sIG9ialsxXSwgcmVkKTsNCiAgfQ0KDQogIHZhciBwcmUgPSBvYmpbMl07DQogIHJlcy5wcmVjb21wdXRlZCA9IHsNCiAgICBiZXRhOiBudWxsLA0KICAgIGRvdWJsZXM6IHByZS5kb3VibGVzICYmIHsNCiAgICAgIHN0ZXA6IHByZS5kb3VibGVzLnN0ZXAsDQogICAgICBwb2ludHM6IFsgcmVzIF0uY29uY2F0KHByZS5kb3VibGVzLnBvaW50cy5tYXAob2JqMnBvaW50KSkNCiAgICB9LA0KICAgIG5hZjogcHJlLm5hZiAmJiB7DQogICAgICB3bmQ6IHByZS5uYWYud25kLA0KICAgICAgcG9pbnRzOiBbIHJlcyBdLmNvbmNhdChwcmUubmFmLnBvaW50cy5tYXAob2JqMnBvaW50KSkNCiAgICB9DQogIH07DQogIHJldHVybiByZXM7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuaW5zcGVjdCA9IGZ1bmN0aW9uIGluc3BlY3QoKSB7DQogIGlmICh0aGlzLmlzSW5maW5pdHkoKSkNCiAgICByZXR1cm4gJzxFQyBQb2ludCBJbmZpbml0eT4nOw0KICByZXR1cm4gJzxFQyBQb2ludCB4OiAnICsgdGhpcy54LmZyb21SZWQoKS50b1N0cmluZygxNiwgMikgKw0KICAgICAgJyB5OiAnICsgdGhpcy55LmZyb21SZWQoKS50b1N0cmluZygxNiwgMikgKyAnPic7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuaXNJbmZpbml0eSA9IGZ1bmN0aW9uIGlzSW5maW5pdHkoKSB7DQogIHJldHVybiB0aGlzLmluZjsNCn07DQoNClBvaW50LnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiBhZGQocCkgew0KICAvLyBPICsgUCA9IFANCiAgaWYgKHRoaXMuaW5mKQ0KICAgIHJldHVybiBwOw0KDQogIC8vIFAgKyBPID0gUA0KICBpZiAocC5pbmYpDQogICAgcmV0dXJuIHRoaXM7DQoNCiAgLy8gUCArIFAgPSAyUA0KICBpZiAodGhpcy5lcShwKSkNCiAgICByZXR1cm4gdGhpcy5kYmwoKTsNCg0KICAvLyBQICsgKC1QKSA9IE8NCiAgaWYgKHRoaXMubmVnKCkuZXEocCkpDQogICAgcmV0dXJuIHRoaXMuY3VydmUucG9pbnQobnVsbCwgbnVsbCk7DQoNCiAgLy8gUCArIFEgPSBPDQogIGlmICh0aGlzLnguY21wKHAueCkgPT09IDApDQogICAgcmV0dXJuIHRoaXMuY3VydmUucG9pbnQobnVsbCwgbnVsbCk7DQoNCiAgdmFyIGMgPSB0aGlzLnkucmVkU3ViKHAueSk7DQogIGlmIChjLmNtcG4oMCkgIT09IDApDQogICAgYyA9IGMucmVkTXVsKHRoaXMueC5yZWRTdWIocC54KS5yZWRJbnZtKCkpOw0KICB2YXIgbnggPSBjLnJlZFNxcigpLnJlZElTdWIodGhpcy54KS5yZWRJU3ViKHAueCk7DQogIHZhciBueSA9IGMucmVkTXVsKHRoaXMueC5yZWRTdWIobngpKS5yZWRJU3ViKHRoaXMueSk7DQogIHJldHVybiB0aGlzLmN1cnZlLnBvaW50KG54LCBueSk7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuZGJsID0gZnVuY3Rpb24gZGJsKCkgew0KICBpZiAodGhpcy5pbmYpDQogICAgcmV0dXJuIHRoaXM7DQoNCiAgLy8gMlAgPSBPDQogIHZhciB5czEgPSB0aGlzLnkucmVkQWRkKHRoaXMueSk7DQogIGlmICh5czEuY21wbigwKSA9PT0gMCkNCiAgICByZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChudWxsLCBudWxsKTsNCg0KICB2YXIgYSA9IHRoaXMuY3VydmUuYTsNCg0KICB2YXIgeDIgPSB0aGlzLngucmVkU3FyKCk7DQogIHZhciBkeWludiA9IHlzMS5yZWRJbnZtKCk7DQogIHZhciBjID0geDIucmVkQWRkKHgyKS5yZWRJQWRkKHgyKS5yZWRJQWRkKGEpLnJlZE11bChkeWludik7DQoNCiAgdmFyIG54ID0gYy5yZWRTcXIoKS5yZWRJU3ViKHRoaXMueC5yZWRBZGQodGhpcy54KSk7DQogIHZhciBueSA9IGMucmVkTXVsKHRoaXMueC5yZWRTdWIobngpKS5yZWRJU3ViKHRoaXMueSk7DQogIHJldHVybiB0aGlzLmN1cnZlLnBvaW50KG54LCBueSk7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuZ2V0WCA9IGZ1bmN0aW9uIGdldFgoKSB7DQogIHJldHVybiB0aGlzLnguZnJvbVJlZCgpOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLmdldFkgPSBmdW5jdGlvbiBnZXRZKCkgew0KICByZXR1cm4gdGhpcy55LmZyb21SZWQoKTsNCn07DQoNClBvaW50LnByb3RvdHlwZS5tdWwgPSBmdW5jdGlvbiBtdWwoaykgew0KICBrID0gbmV3IEJOKGssIDE2KTsNCg0KICBpZiAodGhpcy5faGFzRG91YmxlcyhrKSkNCiAgICByZXR1cm4gdGhpcy5jdXJ2ZS5fZml4ZWROYWZNdWwodGhpcywgayk7DQogIGVsc2UgaWYgKHRoaXMuY3VydmUuZW5kbykNCiAgICByZXR1cm4gdGhpcy5jdXJ2ZS5fZW5kb1duYWZNdWxBZGQoWyB0aGlzIF0sIFsgayBdKTsNCiAgZWxzZQ0KICAgIHJldHVybiB0aGlzLmN1cnZlLl93bmFmTXVsKHRoaXMsIGspOw0KfTsNCg0KUG9pbnQucHJvdG90eXBlLm11bEFkZCA9IGZ1bmN0aW9uIG11bEFkZChrMSwgcDIsIGsyKSB7DQogIHZhciBwb2ludHMgPSBbIHRoaXMsIHAyIF07DQogIHZhciBjb2VmZnMgPSBbIGsxLCBrMiBdOw0KICBpZiAodGhpcy5jdXJ2ZS5lbmRvKQ0KICAgIHJldHVybiB0aGlzLmN1cnZlLl9lbmRvV25hZk11bEFkZChwb2ludHMsIGNvZWZmcyk7DQogIGVsc2UNCiAgICByZXR1cm4gdGhpcy5jdXJ2ZS5fd25hZk11bEFkZCgxLCBwb2ludHMsIGNvZWZmcywgMik7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUuZXEgPSBmdW5jdGlvbiBlcShwKSB7DQogIHJldHVybiB0aGlzID09PSBwIHx8DQogICAgICAgICB0aGlzLmluZiA9PT0gcC5pbmYgJiYNCiAgICAgICAgICAgICAodGhpcy5pbmYgfHwgdGhpcy54LmNtcChwLngpID09PSAwICYmIHRoaXMueS5jbXAocC55KSA9PT0gMCk7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUubmVnID0gZnVuY3Rpb24gbmVnKF9wcmVjb21wdXRlKSB7DQogIGlmICh0aGlzLmluZikNCiAgICByZXR1cm4gdGhpczsNCg0KICB2YXIgcmVzID0gdGhpcy5jdXJ2ZS5wb2ludCh0aGlzLngsIHRoaXMueS5yZWROZWcoKSk7DQogIGlmIChfcHJlY29tcHV0ZSAmJiB0aGlzLnByZWNvbXB1dGVkKSB7DQogICAgdmFyIHByZSA9IHRoaXMucHJlY29tcHV0ZWQ7DQogICAgdmFyIG5lZ2F0ZSA9IGZ1bmN0aW9uKHApIHsNCiAgICAgIHJldHVybiBwLm5lZygpOw0KICAgIH07DQogICAgcmVzLnByZWNvbXB1dGVkID0gew0KICAgICAgbmFmOiBwcmUubmFmICYmIHsNCiAgICAgICAgd25kOiBwcmUubmFmLnduZCwNCiAgICAgICAgcG9pbnRzOiBwcmUubmFmLnBvaW50cy5tYXAobmVnYXRlKQ0KICAgICAgfSwNCiAgICAgIGRvdWJsZXM6IHByZS5kb3VibGVzICYmIHsNCiAgICAgICAgc3RlcDogcHJlLmRvdWJsZXMuc3RlcCwNCiAgICAgICAgcG9pbnRzOiBwcmUuZG91Ymxlcy5wb2ludHMubWFwKG5lZ2F0ZSkNCiAgICAgIH0NCiAgICB9Ow0KICB9DQogIHJldHVybiByZXM7DQp9Ow0KDQpQb2ludC5wcm90b3R5cGUudG9KID0gZnVuY3Rpb24gdG9KKCkgew0KICBpZiAodGhpcy5pbmYpDQogICAgcmV0dXJuIHRoaXMuY3VydmUuanBvaW50KG51bGwsIG51bGwsIG51bGwpOw0KDQogIHZhciByZXMgPSB0aGlzLmN1cnZlLmpwb2ludCh0aGlzLngsIHRoaXMueSwgdGhpcy5jdXJ2ZS5vbmUpOw0KICByZXR1cm4gcmVzOw0KfTsNCg0KZnVuY3Rpb24gSlBvaW50KGN1cnZlLCB4LCB5LCB6KSB7DQogIEJhc2UuQmFzZVBvaW50LmNhbGwodGhpcywgY3VydmUsICdqYWNvYmlhbicpOw0KICBpZiAoeCA9PT0gbnVsbCAmJiB5ID09PSBudWxsICYmIHogPT09IG51bGwpIHsNCiAgICB0aGlzLnggPSB0aGlzLmN1cnZlLm9uZTsNCiAgICB0aGlzLnkgPSB0aGlzLmN1cnZlLm9uZTsNCiAgICB0aGlzLnogPSBuZXcgQk4oMCk7DQogIH0gZWxzZSB7DQogICAgdGhpcy54ID0gbmV3IEJOKHgsIDE2KTsNCiAgICB0aGlzLnkgPSBuZXcgQk4oeSwgMTYpOw0KICAgIHRoaXMueiA9IG5ldyBCTih6LCAxNik7DQogIH0NCiAgaWYgKCF0aGlzLngucmVkKQ0KICAgIHRoaXMueCA9IHRoaXMueC50b1JlZCh0aGlzLmN1cnZlLnJlZCk7DQogIGlmICghdGhpcy55LnJlZCkNCiAgICB0aGlzLnkgPSB0aGlzLnkudG9SZWQodGhpcy5jdXJ2ZS5yZWQpOw0KICBpZiAoIXRoaXMuei5yZWQpDQogICAgdGhpcy56ID0gdGhpcy56LnRvUmVkKHRoaXMuY3VydmUucmVkKTsNCg0KICB0aGlzLnpPbmUgPSB0aGlzLnogPT09IHRoaXMuY3VydmUub25lOw0KfQ0KaW5oZXJpdHMoSlBvaW50LCBCYXNlLkJhc2VQb2ludCk7DQoNClNob3J0Q3VydmUucHJvdG90eXBlLmpwb2ludCA9IGZ1bmN0aW9uIGpwb2ludCh4LCB5LCB6KSB7DQogIHJldHVybiBuZXcgSlBvaW50KHRoaXMsIHgsIHksIHopOw0KfTsNCg0KSlBvaW50LnByb3RvdHlwZS50b1AgPSBmdW5jdGlvbiB0b1AoKSB7DQogIGlmICh0aGlzLmlzSW5maW5pdHkoKSkNCiAgICByZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChudWxsLCBudWxsKTsNCg0KICB2YXIgemludiA9IHRoaXMuei5yZWRJbnZtKCk7DQogIHZhciB6aW52MiA9IHppbnYucmVkU3FyKCk7DQogIHZhciBheCA9IHRoaXMueC5yZWRNdWwoemludjIpOw0KICB2YXIgYXkgPSB0aGlzLnkucmVkTXVsKHppbnYyKS5yZWRNdWwoemludik7DQoNCiAgcmV0dXJuIHRoaXMuY3VydmUucG9pbnQoYXgsIGF5KTsNCn07DQoNCkpQb2ludC5wcm90b3R5cGUubmVnID0gZnVuY3Rpb24gbmVnKCkgew0KICByZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQodGhpcy54LCB0aGlzLnkucmVkTmVnKCksIHRoaXMueik7DQp9Ow0KDQpKUG9pbnQucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIGFkZChwKSB7DQogIC8vIE8gKyBQID0gUA0KICBpZiAodGhpcy5pc0luZmluaXR5KCkpDQogICAgcmV0dXJuIHA7DQoNCiAgLy8gUCArIE8gPSBQDQogIGlmIChwLmlzSW5maW5pdHkoKSkNCiAgICByZXR1cm4gdGhpczsNCg0KICAvLyAxMk0gKyA0UyArIDdBDQogIHZhciBwejIgPSBwLnoucmVkU3FyKCk7DQogIHZhciB6MiA9IHRoaXMuei5yZWRTcXIoKTsNCiAgdmFyIHUxID0gdGhpcy54LnJlZE11bChwejIpOw0KICB2YXIgdTIgPSBwLngucmVkTXVsKHoyKTsNCiAgdmFyIHMxID0gdGhpcy55LnJlZE11bChwejIucmVkTXVsKHAueikpOw0KICB2YXIgczIgPSBwLnkucmVkTXVsKHoyLnJlZE11bCh0aGlzLnopKTsNCg0KICB2YXIgaCA9IHUxLnJlZFN1Yih1Mik7DQogIHZhciByID0gczEucmVkU3ViKHMyKTsNCiAgaWYgKGguY21wbigwKSA9PT0gMCkgew0KICAgIGlmIChyLmNtcG4oMCkgIT09IDApDQogICAgICByZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQobnVsbCwgbnVsbCwgbnVsbCk7DQogICAgZWxzZQ0KICAgICAgcmV0dXJuIHRoaXMuZGJsKCk7DQogIH0NCg0KICB2YXIgaDIgPSBoLnJlZFNxcigpOw0KICB2YXIgaDMgPSBoMi5yZWRNdWwoaCk7DQogIHZhciB2ID0gdTEucmVkTXVsKGgyKTsNCg0KICB2YXIgbnggPSByLnJlZFNxcigpLnJlZElBZGQoaDMpLnJlZElTdWIodikucmVkSVN1Yih2KTsNCiAgdmFyIG55ID0gci5yZWRNdWwodi5yZWRJU3ViKG54KSkucmVkSVN1YihzMS5yZWRNdWwoaDMpKTsNCiAgdmFyIG56ID0gdGhpcy56LnJlZE11bChwLnopLnJlZE11bChoKTsNCg0KICByZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQobngsIG55LCBueik7DQp9Ow0KDQpKUG9pbnQucHJvdG90eXBlLm1peGVkQWRkID0gZnVuY3Rpb24gbWl4ZWRBZGQocCkgew0KICAvLyBPICsgUCA9IFANCiAgaWYgKHRoaXMuaXNJbmZpbml0eSgpKQ0KICAgIHJldHVybiBwLnRvSigpOw0KDQogIC8vIFAgKyBPID0gUA0KICBpZiAocC5pc0luZmluaXR5KCkpDQogICAgcmV0dXJuIHRoaXM7DQoNCiAgLy8gOE0gKyAzUyArIDdBDQogIHZhciB6MiA9IHRoaXMuei5yZWRTcXIoKTsNCiAgdmFyIHUxID0gdGhpcy54Ow0KICB2YXIgdTIgPSBwLngucmVkTXVsKHoyKTsNCiAgdmFyIHMxID0gdGhpcy55Ow0KICB2YXIgczIgPSBwLnkucmVkTXVsKHoyKS5yZWRNdWwodGhpcy56KTsNCg0KICB2YXIgaCA9IHUxLnJlZFN1Yih1Mik7DQogIHZhciByID0gczEucmVkU3ViKHMyKTsNCiAgaWYgKGguY21wbigwKSA9PT0gMCkgew0KICAgIGlmIChyLmNtcG4oMCkgIT09IDApDQogICAgICByZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQobnVsbCwgbnVsbCwgbnVsbCk7DQogICAgZWxzZQ0KICAgICAgcmV0dXJuIHRoaXMuZGJsKCk7DQogIH0NCg0KICB2YXIgaDIgPSBoLnJlZFNxcigpOw0KICB2YXIgaDMgPSBoMi5yZWRNdWwoaCk7DQogIHZhciB2ID0gdTEucmVkTXVsKGgyKTsNCg0KICB2YXIgbnggPSByLnJlZFNxcigpLnJlZElBZGQoaDMpLnJlZElTdWIodikucmVkSVN1Yih2KTsNCiAgdmFyIG55ID0gci5yZWRNdWwodi5yZWRJU3ViKG54KSkucmVkSVN1YihzMS5yZWRNdWwoaDMpKTsNCiAgdmFyIG56ID0gdGhpcy56LnJlZE11bChoKTsNCg0KICByZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQobngsIG55LCBueik7DQp9Ow0KDQpKUG9pbnQucHJvdG90eXBlLmRibHAgPSBmdW5jdGlvbiBkYmxwKHBvdykgew0KICBpZiAocG93ID09PSAwKQ0KICAgIHJldHVybiB0aGlzOw0KICBpZiAodGhpcy5pc0luZmluaXR5KCkpDQogICAgcmV0dXJuIHRoaXM7DQogIGlmICghcG93KQ0KICAgIHJldHVybiB0aGlzLmRibCgpOw0KDQogIGlmICh0aGlzLmN1cnZlLnplcm9BIHx8IHRoaXMuY3VydmUudGhyZWVBKSB7DQogICAgdmFyIHIgPSB0aGlzOw0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcG93OyBpKyspDQogICAgICByID0gci5kYmwoKTsNCiAgICByZXR1cm4gcjsNCiAgfQ0KDQogIC8vIDFNICsgMlMgKyAxQSArIE4gKiAoNFMgKyA1TSArIDhBKQ0KICAvLyBOID0gMSA9PiA2TSArIDZTICsgOUENCiAgdmFyIGEgPSB0aGlzLmN1cnZlLmE7DQogIHZhciB0aW52ID0gdGhpcy5jdXJ2ZS50aW52Ow0KDQogIHZhciBqeCA9IHRoaXMueDsNCiAgdmFyIGp5ID0gdGhpcy55Ow0KICB2YXIganogPSB0aGlzLno7DQogIHZhciBqejQgPSBqei5yZWRTcXIoKS5yZWRTcXIoKTsNCg0KICAvLyBSZXVzZSByZXN1bHRzDQogIHZhciBqeWQgPSBqeS5yZWRBZGQoankpOw0KICBmb3IgKHZhciBpID0gMDsgaSA8IHBvdzsgaSsrKSB7DQogICAgdmFyIGp4MiA9IGp4LnJlZFNxcigpOw0KICAgIHZhciBqeWQyID0ganlkLnJlZFNxcigpOw0KICAgIHZhciBqeWQ0ID0ganlkMi5yZWRTcXIoKTsNCiAgICB2YXIgYyA9IGp4Mi5yZWRBZGQoangyKS5yZWRJQWRkKGp4MikucmVkSUFkZChhLnJlZE11bChqejQpKTsNCg0KICAgIHZhciB0MSA9IGp4LnJlZE11bChqeWQyKTsNCiAgICB2YXIgbnggPSBjLnJlZFNxcigpLnJlZElTdWIodDEucmVkQWRkKHQxKSk7DQogICAgdmFyIHQyID0gdDEucmVkSVN1YihueCk7DQogICAgdmFyIGRueSA9IGMucmVkTXVsKHQyKTsNCiAgICBkbnkgPSBkbnkucmVkSUFkZChkbnkpLnJlZElTdWIoanlkNCk7DQogICAgdmFyIG56ID0ganlkLnJlZE11bChqeik7DQogICAgaWYgKGkgKyAxIDwgcG93KQ0KICAgICAgano0ID0gano0LnJlZE11bChqeWQ0KTsNCg0KICAgIGp4ID0gbng7DQogICAganogPSBuejsNCiAgICBqeWQgPSBkbnk7DQogIH0NCg0KICByZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQoangsIGp5ZC5yZWRNdWwodGludiksIGp6KTsNCn07DQoNCkpQb2ludC5wcm90b3R5cGUuZGJsID0gZnVuY3Rpb24gZGJsKCkgew0KICBpZiAodGhpcy5pc0luZmluaXR5KCkpDQogICAgcmV0dXJuIHRoaXM7DQoNCiAgaWYgKHRoaXMuY3VydmUuemVyb0EpDQogICAgcmV0dXJuIHRoaXMuX3plcm9EYmwoKTsNCiAgZWxzZSBpZiAodGhpcy5jdXJ2ZS50aHJlZUEpDQogICAgcmV0dXJuIHRoaXMuX3RocmVlRGJsKCk7DQogIGVsc2UNCiAgICByZXR1cm4gdGhpcy5fZGJsKCk7DQp9Ow0KDQpKUG9pbnQucHJvdG90eXBlLl96ZXJvRGJsID0gZnVuY3Rpb24gX3plcm9EYmwoKSB7DQogIHZhciBueDsNCiAgdmFyIG55Ow0KICB2YXIgbno7DQogIC8vIFogPSAxDQogIGlmICh0aGlzLnpPbmUpIHsNCiAgICAvLyBoeXBlcmVsbGlwdGljLm9yZy9FRkQvZzFwL2F1dG8tc2hvcnR3LWphY29iaWFuLTAuaHRtbA0KICAgIC8vICAgICAjZG91YmxpbmctbWRibC0yMDA3LWJsDQogICAgLy8gMU0gKyA1UyArIDE0QQ0KDQogICAgLy8gWFggPSBYMV4yDQogICAgdmFyIHh4ID0gdGhpcy54LnJlZFNxcigpOw0KICAgIC8vIFlZID0gWTFeMg0KICAgIHZhciB5eSA9IHRoaXMueS5yZWRTcXIoKTsNCiAgICAvLyBZWVlZID0gWVleMg0KICAgIHZhciB5eXl5ID0geXkucmVkU3FyKCk7DQogICAgLy8gUyA9IDIgKiAoKFgxICsgWVkpXjIgLSBYWCAtIFlZWVkpDQogICAgdmFyIHMgPSB0aGlzLngucmVkQWRkKHl5KS5yZWRTcXIoKS5yZWRJU3ViKHh4KS5yZWRJU3ViKHl5eXkpOw0KICAgIHMgPSBzLnJlZElBZGQocyk7DQogICAgLy8gTSA9IDMgKiBYWCArIGE7IGEgPSAwDQogICAgdmFyIG0gPSB4eC5yZWRBZGQoeHgpLnJlZElBZGQoeHgpOw0KICAgIC8vIFQgPSBNIF4gMiAtIDIqUw0KICAgIHZhciB0ID0gbS5yZWRTcXIoKS5yZWRJU3ViKHMpLnJlZElTdWIocyk7DQoNCiAgICAvLyA4ICogWVlZWQ0KICAgIHZhciB5eXl5OCA9IHl5eXkucmVkSUFkZCh5eXl5KTsNCiAgICB5eXl5OCA9IHl5eXk4LnJlZElBZGQoeXl5eTgpOw0KICAgIHl5eXk4ID0geXl5eTgucmVkSUFkZCh5eXl5OCk7DQoNCiAgICAvLyBYMyA9IFQNCiAgICBueCA9IHQ7DQogICAgLy8gWTMgPSBNICogKFMgLSBUKSAtIDggKiBZWVlZDQogICAgbnkgPSBtLnJlZE11bChzLnJlZElTdWIodCkpLnJlZElTdWIoeXl5eTgpOw0KICAgIC8vIFozID0gMipZMQ0KICAgIG56ID0gdGhpcy55LnJlZEFkZCh0aGlzLnkpOw0KICB9IGVsc2Ugew0KICAgIC8vIGh5cGVyZWxsaXB0aWMub3JnL0VGRC9nMXAvYXV0by1zaG9ydHctamFjb2JpYW4tMC5odG1sDQogICAgLy8gICAgICNkb3VibGluZy1kYmwtMjAwOS1sDQogICAgLy8gMk0gKyA1UyArIDEzQQ0KDQogICAgLy8gQSA9IFgxXjINCiAgICB2YXIgYSA9IHRoaXMueC5yZWRTcXIoKTsNCiAgICAvLyBCID0gWTFeMg0KICAgIHZhciBiID0gdGhpcy55LnJlZFNxcigpOw0KICAgIC8vIEMgPSBCXjINCiAgICB2YXIgYyA9IGIucmVkU3FyKCk7DQogICAgLy8gRCA9IDIgKiAoKFgxICsgQileMiAtIEEgLSBDKQ0KICAgIHZhciBkID0gdGhpcy54LnJlZEFkZChiKS5yZWRTcXIoKS5yZWRJU3ViKGEpLnJlZElTdWIoYyk7DQogICAgZCA9IGQucmVkSUFkZChkKTsNCiAgICAvLyBFID0gMyAqIEENCiAgICB2YXIgZSA9IGEucmVkQWRkKGEpLnJlZElBZGQoYSk7DQogICAgLy8gRiA9IEVeMg0KICAgIHZhciBmID0gZS5yZWRTcXIoKTsNCg0KICAgIC8vIDggKiBDDQogICAgdmFyIGM4ID0gYy5yZWRJQWRkKGMpOw0KICAgIGM4ID0gYzgucmVkSUFkZChjOCk7DQogICAgYzggPSBjOC5yZWRJQWRkKGM4KTsNCg0KICAgIC8vIFgzID0gRiAtIDIgKiBEDQogICAgbnggPSBmLnJlZElTdWIoZCkucmVkSVN1YihkKTsNCiAgICAvLyBZMyA9IEUgKiAoRCAtIFgzKSAtIDggKiBDDQogICAgbnkgPSBlLnJlZE11bChkLnJlZElTdWIobngpKS5yZWRJU3ViKGM4KTsNCiAgICAvLyBaMyA9IDIgKiBZMSAqIFoxDQogICAgbnogPSB0aGlzLnkucmVkTXVsKHRoaXMueik7DQogICAgbnogPSBuei5yZWRJQWRkKG56KTsNCiAgfQ0KDQogIHJldHVybiB0aGlzLmN1cnZlLmpwb2ludChueCwgbnksIG56KTsNCn07DQoNCkpQb2ludC5wcm90b3R5cGUuX3RocmVlRGJsID0gZnVuY3Rpb24gX3RocmVlRGJsKCkgew0KICB2YXIgbng7DQogIHZhciBueTsNCiAgdmFyIG56Ow0KICAvLyBaID0gMQ0KICBpZiAodGhpcy56T25lKSB7DQogICAgLy8gaHlwZXJlbGxpcHRpYy5vcmcvRUZEL2cxcC9hdXRvLXNob3J0dy1qYWNvYmlhbi0zLmh0bWwNCiAgICAvLyAgICAgI2RvdWJsaW5nLW1kYmwtMjAwNy1ibA0KICAgIC8vIDFNICsgNVMgKyAxNUENCg0KICAgIC8vIFhYID0gWDFeMg0KICAgIHZhciB4eCA9IHRoaXMueC5yZWRTcXIoKTsNCiAgICAvLyBZWSA9IFkxXjINCiAgICB2YXIgeXkgPSB0aGlzLnkucmVkU3FyKCk7DQogICAgLy8gWVlZWSA9IFlZXjINCiAgICB2YXIgeXl5eSA9IHl5LnJlZFNxcigpOw0KICAgIC8vIFMgPSAyICogKChYMSArIFlZKV4yIC0gWFggLSBZWVlZKQ0KICAgIHZhciBzID0gdGhpcy54LnJlZEFkZCh5eSkucmVkU3FyKCkucmVkSVN1Yih4eCkucmVkSVN1Yih5eXl5KTsNCiAgICBzID0gcy5yZWRJQWRkKHMpOw0KICAgIC8vIE0gPSAzICogWFggKyBhDQogICAgdmFyIG0gPSB4eC5yZWRBZGQoeHgpLnJlZElBZGQoeHgpLnJlZElBZGQodGhpcy5jdXJ2ZS5hKTsNCiAgICAvLyBUID0gTV4yIC0gMiAqIFMNCiAgICB2YXIgdCA9IG0ucmVkU3FyKCkucmVkSVN1YihzKS5yZWRJU3ViKHMpOw0KICAgIC8vIFgzID0gVA0KICAgIG54ID0gdDsNCiAgICAvLyBZMyA9IE0gKiAoUyAtIFQpIC0gOCAqIFlZWVkNCiAgICB2YXIgeXl5eTggPSB5eXl5LnJlZElBZGQoeXl5eSk7DQogICAgeXl5eTggPSB5eXl5OC5yZWRJQWRkKHl5eXk4KTsNCiAgICB5eXl5OCA9IHl5eXk4LnJlZElBZGQoeXl5eTgpOw0KICAgIG55ID0gbS5yZWRNdWwocy5yZWRJU3ViKHQpKS5yZWRJU3ViKHl5eXk4KTsNCiAgICAvLyBaMyA9IDIgKiBZMQ0KICAgIG56ID0gdGhpcy55LnJlZEFkZCh0aGlzLnkpOw0KICB9IGVsc2Ugew0KICAgIC8vIGh5cGVyZWxsaXB0aWMub3JnL0VGRC9nMXAvYXV0by1zaG9ydHctamFjb2JpYW4tMy5odG1sI2RvdWJsaW5nLWRibC0yMDAxLWINCiAgICAvLyAzTSArIDVTDQoNCiAgICAvLyBkZWx0YSA9IFoxXjINCiAgICB2YXIgZGVsdGEgPSB0aGlzLnoucmVkU3FyKCk7DQogICAgLy8gZ2FtbWEgPSBZMV4yDQogICAgdmFyIGdhbW1hID0gdGhpcy55LnJlZFNxcigpOw0KICAgIC8vIGJldGEgPSBYMSAqIGdhbW1hDQogICAgdmFyIGJldGEgPSB0aGlzLngucmVkTXVsKGdhbW1hKTsNCiAgICAvLyBhbHBoYSA9IDMgKiAoWDEgLSBkZWx0YSkgKiAoWDEgKyBkZWx0YSkNCiAgICB2YXIgYWxwaGEgPSB0aGlzLngucmVkU3ViKGRlbHRhKS5yZWRNdWwodGhpcy54LnJlZEFkZChkZWx0YSkpOw0KICAgIGFscGhhID0gYWxwaGEucmVkQWRkKGFscGhhKS5yZWRJQWRkKGFscGhhKTsNCiAgICAvLyBYMyA9IGFscGhhXjIgLSA4ICogYmV0YQ0KICAgIHZhciBiZXRhNCA9IGJldGEucmVkSUFkZChiZXRhKTsNCiAgICBiZXRhNCA9IGJldGE0LnJlZElBZGQoYmV0YTQpOw0KICAgIHZhciBiZXRhOCA9IGJldGE0LnJlZEFkZChiZXRhNCk7DQogICAgbnggPSBhbHBoYS5yZWRTcXIoKS5yZWRJU3ViKGJldGE4KTsNCiAgICAvLyBaMyA9IChZMSArIFoxKV4yIC0gZ2FtbWEgLSBkZWx0YQ0KICAgIG56ID0gdGhpcy55LnJlZEFkZCh0aGlzLnopLnJlZFNxcigpLnJlZElTdWIoZ2FtbWEpLnJlZElTdWIoZGVsdGEpOw0KICAgIC8vIFkzID0gYWxwaGEgKiAoNCAqIGJldGEgLSBYMykgLSA4ICogZ2FtbWFeMg0KICAgIHZhciBnZ2FtbWE4ID0gZ2FtbWEucmVkU3FyKCk7DQogICAgZ2dhbW1hOCA9IGdnYW1tYTgucmVkSUFkZChnZ2FtbWE4KTsNCiAgICBnZ2FtbWE4ID0gZ2dhbW1hOC5yZWRJQWRkKGdnYW1tYTgpOw0KICAgIGdnYW1tYTggPSBnZ2FtbWE4LnJlZElBZGQoZ2dhbW1hOCk7DQogICAgbnkgPSBhbHBoYS5yZWRNdWwoYmV0YTQucmVkSVN1YihueCkpLnJlZElTdWIoZ2dhbW1hOCk7DQogIH0NCg0KICByZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQobngsIG55LCBueik7DQp9Ow0KDQpKUG9pbnQucHJvdG90eXBlLl9kYmwgPSBmdW5jdGlvbiBfZGJsKCkgew0KICB2YXIgYSA9IHRoaXMuY3VydmUuYTsNCg0KICAvLyA0TSArIDZTICsgMTBBDQogIHZhciBqeCA9IHRoaXMueDsNCiAgdmFyIGp5ID0gdGhpcy55Ow0KICB2YXIganogPSB0aGlzLno7DQogIHZhciBqejQgPSBqei5yZWRTcXIoKS5yZWRTcXIoKTsNCg0KICB2YXIgangyID0gangucmVkU3FyKCk7DQogIHZhciBqeTIgPSBqeS5yZWRTcXIoKTsNCg0KICB2YXIgYyA9IGp4Mi5yZWRBZGQoangyKS5yZWRJQWRkKGp4MikucmVkSUFkZChhLnJlZE11bChqejQpKTsNCg0KICB2YXIganhkNCA9IGp4LnJlZEFkZChqeCk7DQogIGp4ZDQgPSBqeGQ0LnJlZElBZGQoanhkNCk7DQogIHZhciB0MSA9IGp4ZDQucmVkTXVsKGp5Mik7DQogIHZhciBueCA9IGMucmVkU3FyKCkucmVkSVN1Yih0MS5yZWRBZGQodDEpKTsNCiAgdmFyIHQyID0gdDEucmVkSVN1YihueCk7DQoNCiAgdmFyIGp5ZDggPSBqeTIucmVkU3FyKCk7DQogIGp5ZDggPSBqeWQ4LnJlZElBZGQoanlkOCk7DQogIGp5ZDggPSBqeWQ4LnJlZElBZGQoanlkOCk7DQogIGp5ZDggPSBqeWQ4LnJlZElBZGQoanlkOCk7DQogIHZhciBueSA9IGMucmVkTXVsKHQyKS5yZWRJU3ViKGp5ZDgpOw0KICB2YXIgbnogPSBqeS5yZWRBZGQoankpLnJlZE11bChqeik7DQoNCiAgcmV0dXJuIHRoaXMuY3VydmUuanBvaW50KG54LCBueSwgbnopOw0KfTsNCg0KSlBvaW50LnByb3RvdHlwZS50cnBsID0gZnVuY3Rpb24gdHJwbCgpIHsNCiAgaWYgKCF0aGlzLmN1cnZlLnplcm9BKQ0KICAgIHJldHVybiB0aGlzLmRibCgpLmFkZCh0aGlzKTsNCg0KICAvLyBoeXBlcmVsbGlwdGljLm9yZy9FRkQvZzFwL2F1dG8tc2hvcnR3LWphY29iaWFuLTAuaHRtbCN0cmlwbGluZy10cGwtMjAwNy1ibA0KICAvLyA1TSArIDEwUyArIC4uLg0KDQogIC8vIFhYID0gWDFeMg0KICB2YXIgeHggPSB0aGlzLngucmVkU3FyKCk7DQogIC8vIFlZID0gWTFeMg0KICB2YXIgeXkgPSB0aGlzLnkucmVkU3FyKCk7DQogIC8vIFpaID0gWjFeMg0KICB2YXIgenogPSB0aGlzLnoucmVkU3FyKCk7DQogIC8vIFlZWVkgPSBZWV4yDQogIHZhciB5eXl5ID0geXkucmVkU3FyKCk7DQogIC8vIE0gPSAzICogWFggKyBhICogWloyOyBhID0gMA0KICB2YXIgbSA9IHh4LnJlZEFkZCh4eCkucmVkSUFkZCh4eCk7DQogIC8vIE1NID0gTV4yDQogIHZhciBtbSA9IG0ucmVkU3FyKCk7DQogIC8vIEUgPSA2ICogKChYMSArIFlZKV4yIC0gWFggLSBZWVlZKSAtIE1NDQogIHZhciBlID0gdGhpcy54LnJlZEFkZCh5eSkucmVkU3FyKCkucmVkSVN1Yih4eCkucmVkSVN1Yih5eXl5KTsNCiAgZSA9IGUucmVkSUFkZChlKTsNCiAgZSA9IGUucmVkQWRkKGUpLnJlZElBZGQoZSk7DQogIGUgPSBlLnJlZElTdWIobW0pOw0KICAvLyBFRSA9IEVeMg0KICB2YXIgZWUgPSBlLnJlZFNxcigpOw0KICAvLyBUID0gMTYqWVlZWQ0KICB2YXIgdCA9IHl5eXkucmVkSUFkZCh5eXl5KTsNCiAgdCA9IHQucmVkSUFkZCh0KTsNCiAgdCA9IHQucmVkSUFkZCh0KTsNCiAgdCA9IHQucmVkSUFkZCh0KTsNCiAgLy8gVSA9IChNICsgRSleMiAtIE1NIC0gRUUgLSBUDQogIHZhciB1ID0gbS5yZWRJQWRkKGUpLnJlZFNxcigpLnJlZElTdWIobW0pLnJlZElTdWIoZWUpLnJlZElTdWIodCk7DQogIC8vIFgzID0gNCAqIChYMSAqIEVFIC0gNCAqIFlZICogVSkNCiAgdmFyIHl5dTQgPSB5eS5yZWRNdWwodSk7DQogIHl5dTQgPSB5eXU0LnJlZElBZGQoeXl1NCk7DQogIHl5dTQgPSB5eXU0LnJlZElBZGQoeXl1NCk7DQogIHZhciBueCA9IHRoaXMueC5yZWRNdWwoZWUpLnJlZElTdWIoeXl1NCk7DQogIG54ID0gbngucmVkSUFkZChueCk7DQogIG54ID0gbngucmVkSUFkZChueCk7DQogIC8vIFkzID0gOCAqIFkxICogKFUgKiAoVCAtIFUpIC0gRSAqIEVFKQ0KICB2YXIgbnkgPSB0aGlzLnkucmVkTXVsKHUucmVkTXVsKHQucmVkSVN1Yih1KSkucmVkSVN1YihlLnJlZE11bChlZSkpKTsNCiAgbnkgPSBueS5yZWRJQWRkKG55KTsNCiAgbnkgPSBueS5yZWRJQWRkKG55KTsNCiAgbnkgPSBueS5yZWRJQWRkKG55KTsNCiAgLy8gWjMgPSAoWjEgKyBFKV4yIC0gWlogLSBFRQ0KICB2YXIgbnogPSB0aGlzLnoucmVkQWRkKGUpLnJlZFNxcigpLnJlZElTdWIoenopLnJlZElTdWIoZWUpOw0KDQogIHJldHVybiB0aGlzLmN1cnZlLmpwb2ludChueCwgbnksIG56KTsNCn07DQoNCkpQb2ludC5wcm90b3R5cGUubXVsID0gZnVuY3Rpb24gbXVsKGssIGtiYXNlKSB7DQogIGsgPSBuZXcgQk4oaywga2Jhc2UpOw0KDQogIHJldHVybiB0aGlzLmN1cnZlLl93bmFmTXVsKHRoaXMsIGspOw0KfTsNCg0KSlBvaW50LnByb3RvdHlwZS5lcSA9IGZ1bmN0aW9uIGVxKHApIHsNCiAgaWYgKHAudHlwZSA9PT0gJ2FmZmluZScpDQogICAgcmV0dXJuIHRoaXMuZXEocC50b0ooKSk7DQoNCiAgaWYgKHRoaXMgPT09IHApDQogICAgcmV0dXJuIHRydWU7DQoNCiAgLy8geDEgKiB6Ml4yID09IHgyICogejFeMg0KICB2YXIgejIgPSB0aGlzLnoucmVkU3FyKCk7DQogIHZhciBwejIgPSBwLnoucmVkU3FyKCk7DQogIGlmICh0aGlzLngucmVkTXVsKHB6MikucmVkSVN1YihwLngucmVkTXVsKHoyKSkuY21wbigwKSAhPT0gMCkNCiAgICByZXR1cm4gZmFsc2U7DQoNCiAgLy8geTEgKiB6Ml4zID09IHkyICogejFeMw0KICB2YXIgejMgPSB6Mi5yZWRNdWwodGhpcy56KTsNCiAgdmFyIHB6MyA9IHB6Mi5yZWRNdWwocC56KTsNCiAgcmV0dXJuIHRoaXMueS5yZWRNdWwocHozKS5yZWRJU3ViKHAueS5yZWRNdWwoejMpKS5jbXBuKDApID09PSAwOw0KfTsNCg0KSlBvaW50LnByb3RvdHlwZS5pbnNwZWN0ID0gZnVuY3Rpb24gaW5zcGVjdCgpIHsNCiAgaWYgKHRoaXMuaXNJbmZpbml0eSgpKQ0KICAgIHJldHVybiAnPEVDIEpQb2ludCBJbmZpbml0eT4nOw0KICByZXR1cm4gJzxFQyBKUG9pbnQgeDogJyArIHRoaXMueC50b1N0cmluZygxNiwgMikgKw0KICAgICAgJyB5OiAnICsgdGhpcy55LnRvU3RyaW5nKDE2LCAyKSArDQogICAgICAnIHo6ICcgKyB0aGlzLnoudG9TdHJpbmcoMTYsIDIpICsgJz4nOw0KfTsNCg0KSlBvaW50LnByb3RvdHlwZS5pc0luZmluaXR5ID0gZnVuY3Rpb24gaXNJbmZpbml0eSgpIHsNCiAgLy8gWFhYIFRoaXMgY29kZSBhc3N1bWVzIHRoYXQgemVybyBpcyBhbHdheXMgemVybyBpbiByZWQNCiAgcmV0dXJuIHRoaXMuei5jbXBuKDApID09PSAwOw0KfTsNCg0KfSx7Ii4uLy4uL2VsbGlwdGljIjo1MDgsIi4uL2N1cnZlIjo1MTEsImJuLmpzIjo1OSwiaW5oZXJpdHMiOjUzN31dLDUxNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQoNCnZhciBjdXJ2ZXMgPSBleHBvcnRzOw0KDQp2YXIgaGFzaCA9IHJlcXVpcmUoJ2hhc2guanMnKTsNCnZhciBlbGxpcHRpYyA9IHJlcXVpcmUoJy4uL2VsbGlwdGljJyk7DQoNCnZhciBhc3NlcnQgPSBlbGxpcHRpYy51dGlscy5hc3NlcnQ7DQoNCmZ1bmN0aW9uIFByZXNldEN1cnZlKG9wdGlvbnMpIHsNCiAgaWYgKG9wdGlvbnMudHlwZSA9PT0gJ3Nob3J0JykNCiAgICB0aGlzLmN1cnZlID0gbmV3IGVsbGlwdGljLmN1cnZlLnNob3J0KG9wdGlvbnMpOw0KICBlbHNlIGlmIChvcHRpb25zLnR5cGUgPT09ICdlZHdhcmRzJykNCiAgICB0aGlzLmN1cnZlID0gbmV3IGVsbGlwdGljLmN1cnZlLmVkd2FyZHMob3B0aW9ucyk7DQogIGVsc2UNCiAgICB0aGlzLmN1cnZlID0gbmV3IGVsbGlwdGljLmN1cnZlLm1vbnQob3B0aW9ucyk7DQogIHRoaXMuZyA9IHRoaXMuY3VydmUuZzsNCiAgdGhpcy5uID0gdGhpcy5jdXJ2ZS5uOw0KICB0aGlzLmhhc2ggPSBvcHRpb25zLmhhc2g7DQoNCiAgYXNzZXJ0KHRoaXMuZy52YWxpZGF0ZSgpLCAnSW52YWxpZCBjdXJ2ZScpOw0KICBhc3NlcnQodGhpcy5nLm11bCh0aGlzLm4pLmlzSW5maW5pdHkoKSwgJ0ludmFsaWQgY3VydmUsIEcqTiAhPSBPJyk7DQp9DQpjdXJ2ZXMuUHJlc2V0Q3VydmUgPSBQcmVzZXRDdXJ2ZTsNCg0KZnVuY3Rpb24gZGVmaW5lQ3VydmUobmFtZSwgb3B0aW9ucykgew0KICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY3VydmVzLCBuYW1lLCB7DQogICAgY29uZmlndXJhYmxlOiB0cnVlLA0KICAgIGVudW1lcmFibGU6IHRydWUsDQogICAgZ2V0OiBmdW5jdGlvbigpIHsNCiAgICAgIHZhciBjdXJ2ZSA9IG5ldyBQcmVzZXRDdXJ2ZShvcHRpb25zKTsNCiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjdXJ2ZXMsIG5hbWUsIHsNCiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLA0KICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLA0KICAgICAgICB2YWx1ZTogY3VydmUNCiAgICAgIH0pOw0KICAgICAgcmV0dXJuIGN1cnZlOw0KICAgIH0NCiAgfSk7DQp9DQoNCmRlZmluZUN1cnZlKCdwMTkyJywgew0KICB0eXBlOiAnc2hvcnQnLA0KICBwcmltZTogJ3AxOTInLA0KICBwOiAnZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZmZmYgZmZmZmZmZmYnLA0KICBhOiAnZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZmZmYgZmZmZmZmZmMnLA0KICBiOiAnNjQyMTA1MTkgZTU5YzgwZTcgMGZhN2U5YWIgNzIyNDMwNDkgZmViOGRlZWMgYzE0NmI5YjEnLA0KICBuOiAnZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgOTlkZWY4MzYgMTQ2YmM5YjEgYjRkMjI4MzEnLA0KICBoYXNoOiBoYXNoLnNoYTI1NiwNCiAgZ1JlZDogZmFsc2UsDQogIGc6IFsNCiAgICAnMTg4ZGE4MGUgYjAzMDkwZjYgN2NiZjIwZWIgNDNhMTg4MDAgZjRmZjBhZmQgODJmZjEwMTInLA0KICAgICcwNzE5MmI5NSBmZmM4ZGE3OCA2MzEwMTFlZCA2YjI0Y2RkNSA3M2Y5NzdhMSAxZTc5NDgxMScNCiAgXQ0KfSk7DQoNCmRlZmluZUN1cnZlKCdwMjI0Jywgew0KICB0eXBlOiAnc2hvcnQnLA0KICBwcmltZTogJ3AyMjQnLA0KICBwOiAnZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDEnLA0KICBhOiAnZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUnLA0KICBiOiAnYjQwNTBhODUgMGMwNGIzYWIgZjU0MTMyNTYgNTA0NGIwYjcgZDdiZmQ4YmEgMjcwYjM5NDMgMjM1NWZmYjQnLA0KICBuOiAnZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZjE2YTIgZTBiOGYwM2UgMTNkZDI5NDUgNWM1YzJhM2QnLA0KICBoYXNoOiBoYXNoLnNoYTI1NiwNCiAgZ1JlZDogZmFsc2UsDQogIGc6IFsNCiAgICAnYjcwZTBjYmQgNmJiNGJmN2YgMzIxMzkwYjkgNGEwM2MxZDMgNTZjMjExMjIgMzQzMjgwZDYgMTE1YzFkMjEnLA0KICAgICdiZDM3NjM4OCBiNWY3MjNmYiA0YzIyZGZlNiBjZDQzNzVhMCA1YTA3NDc2NCA0NGQ1ODE5OSA4NTAwN2UzNCcNCiAgXQ0KfSk7DQoNCmRlZmluZUN1cnZlKCdwMjU2Jywgew0KICB0eXBlOiAnc2hvcnQnLA0KICBwcmltZTogbnVsbCwNCiAgcDogJ2ZmZmZmZmZmIDAwMDAwMDAxIDAwMDAwMDAwIDAwMDAwMDAwIDAwMDAwMDAwIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmJywNCiAgYTogJ2ZmZmZmZmZmIDAwMDAwMDAxIDAwMDAwMDAwIDAwMDAwMDAwIDAwMDAwMDAwIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZjJywNCiAgYjogJzVhYzYzNWQ4IGFhM2E5M2U3IGIzZWJiZDU1IDc2OTg4NmJjIDY1MWQwNmIwIGNjNTNiMGY2IDNiY2UzYzNlIDI3ZDI2MDRiJywNCiAgbjogJ2ZmZmZmZmZmIDAwMDAwMDAwIGZmZmZmZmZmIGZmZmZmZmZmIGJjZTZmYWFkIGE3MTc5ZTg0IGYzYjljYWMyIGZjNjMyNTUxJywNCiAgaGFzaDogaGFzaC5zaGEyNTYsDQogIGdSZWQ6IGZhbHNlLA0KICBnOiBbDQogICAgJzZiMTdkMWYyIGUxMmM0MjQ3IGY4YmNlNmU1IDYzYTQ0MGYyIDc3MDM3ZDgxIDJkZWIzM2EwIGY0YTEzOTQ1IGQ4OThjMjk2JywNCiAgICAnNGZlMzQyZTIgZmUxYTdmOWIgOGVlN2ViNGEgN2MwZjllMTYgMmJjZTMzNTcgNmIzMTVlY2UgY2JiNjQwNjggMzdiZjUxZjUnDQogIF0NCn0pOw0KDQpkZWZpbmVDdXJ2ZSgncDM4NCcsIHsNCiAgdHlwZTogJ3Nob3J0JywNCiAgcHJpbWU6IG51bGwsDQogIHA6ICdmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiAnICsNCiAgICAgJ2ZmZmZmZmZlIGZmZmZmZmZmIDAwMDAwMDAwIDAwMDAwMDAwIGZmZmZmZmZmJywNCiAgYTogJ2ZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmICcgKw0KICAgICAnZmZmZmZmZmUgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmMnLA0KICBiOiAnYjMzMTJmYTcgZTIzZWU3ZTQgOTg4ZTA1NmIgZTNmODJkMTkgMTgxZDljNmUgZmU4MTQxMTIgMDMxNDA4OGYgJyArDQogICAgICc1MDEzODc1YSBjNjU2Mzk4ZCA4YTJlZDE5ZCAyYTg1YzhlZCBkM2VjMmFlZicsDQogIG46ICdmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBjNzYzNGQ4MSAnICsNCiAgICAgJ2Y0MzcyZGRmIDU4MWEwZGIyIDQ4YjBhNzdhIGVjZWMxOTZhIGNjYzUyOTczJywNCiAgaGFzaDogaGFzaC5zaGEzODQsDQogIGdSZWQ6IGZhbHNlLA0KICBnOiBbDQogICAgJ2FhODdjYTIyIGJlOGIwNTM3IDhlYjFjNzFlIGYzMjBhZDc0IDZlMWQzYjYyIDhiYTc5Yjk4IDU5Zjc0MWUwIDgyNTQyYTM4ICcgKw0KICAgICc1NTAyZjI1ZCBiZjU1Mjk2YyAzYTU0NWUzOCA3Mjc2MGFiNycsDQogICAgJzM2MTdkZTRhIDk2MjYyYzZmIDVkOWU5OGJmIDkyOTJkYzI5IGY4ZjQxZGJkIDI4OWExNDdjIGU5ZGEzMTEzIGI1ZjBiOGMwICcgKw0KICAgICcwYTYwYjFjZSAxZDdlODE5ZCA3YTQzMWQ3YyA5MGVhMGU1ZicNCiAgXQ0KfSk7DQoNCmRlZmluZUN1cnZlKCdwNTIxJywgew0KICB0eXBlOiAnc2hvcnQnLA0KICBwcmltZTogbnVsbCwNCiAgcDogJzAwMDAwMWZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmICcgKw0KICAgICAnZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgJyArDQogICAgICdmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZicsDQogIGE6ICcwMDAwMDFmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiAnICsNCiAgICAgJ2ZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmICcgKw0KICAgICAnZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmMnLA0KICBiOiAnMDAwMDAwNTEgOTUzZWI5NjEgOGUxYzlhMWYgOTI5YTIxYTAgYjY4NTQwZWUgYTJkYTcyNWIgJyArDQogICAgICc5OWIzMTVmMyBiOGI0ODk5MSA4ZWYxMDllMSA1NjE5Mzk1MSBlYzdlOTM3YiAxNjUyYzBiZCAnICsNCiAgICAgJzNiYjFiZjA3IDM1NzNkZjg4IDNkMmMzNGYxIGVmNDUxZmQ0IDZiNTAzZjAwJywNCiAgbjogJzAwMDAwMWZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmICcgKw0KICAgICAnZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmEgNTE4Njg3ODMgYmYyZjk2NmIgN2ZjYzAxNDggJyArDQogICAgICdmNzA5YTVkMCAzYmI1YzliOCA4OTljNDdhZSBiYjZmYjcxZSA5MTM4NjQwOScsDQogIGhhc2g6IGhhc2guc2hhNTEyLA0KICBnUmVkOiBmYWxzZSwNCiAgZzogWw0KICAgICcwMDAwMDBjNiA4NThlMDZiNyAwNDA0ZTljZCA5ZTNlY2I2NiAyMzk1YjQ0MiA5YzY0ODEzOSAnICsNCiAgICAnMDUzZmI1MjEgZjgyOGFmNjAgNmI0ZDNkYmEgYTE0YjVlNzcgZWZlNzU5MjggZmUxZGMxMjcgJyArDQogICAgJ2EyZmZhOGRlIDMzNDhiM2MxIDg1NmE0MjliIGY5N2U3ZTMxIGMyZTViZDY2JywNCiAgICAnMDAwMDAxMTggMzkyOTZhNzggOWEzYmMwMDQgNWM4YTVmYjQgMmM3ZDFiZDkgOThmNTQ0NDkgJyArDQogICAgJzU3OWI0NDY4IDE3YWZiZDE3IDI3M2U2NjJjIDk3ZWU3Mjk5IDVlZjQyNjQwIGM1NTBiOTAxICcgKw0KICAgICczZmFkMDc2MSAzNTNjNzA4NiBhMjcyYzI0MCA4OGJlOTQ3NiA5ZmQxNjY1MCcNCiAgXQ0KfSk7DQoNCmRlZmluZUN1cnZlKCdjdXJ2ZTI1NTE5Jywgew0KICB0eXBlOiAnbW9udCcsDQogIHByaW1lOiAncDI1NTE5JywNCiAgcDogJzdmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZWQnLA0KICBhOiAnNzZkMDYnLA0KICBiOiAnMCcsDQogIG46ICcxMDAwMDAwMDAwMDAwMDAwIDAwMDAwMDAwMDAwMDAwMDAgMTRkZWY5ZGVhMmY3OWNkNiA1ODEyNjMxYTVjZjVkM2VkJywNCiAgaGFzaDogaGFzaC5zaGEyNTYsDQogIGdSZWQ6IGZhbHNlLA0KICBnOiBbDQogICAgJzknDQogIF0NCn0pOw0KDQpkZWZpbmVDdXJ2ZSgnZWQyNTUxOScsIHsNCiAgdHlwZTogJ2Vkd2FyZHMnLA0KICBwcmltZTogJ3AyNTUxOScsDQogIHA6ICc3ZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmVkJywNCiAgYTogJy0xJywNCiAgYzogJzEnLA0KICAvLyAtMTIxNjY1ICogKDEyMTY2Nl4oLTEpKSAobW9kIFApDQogIGQ6ICc1MjAzNmNlZTJiNmZmZTczIDhjYzc0MDc5Nzc3OWU4OTggMDA3MDBhNGQ0MTQxZDhhYiA3NWViNGRjYTEzNTk3OGEzJywNCiAgbjogJzEwMDAwMDAwMDAwMDAwMDAgMDAwMDAwMDAwMDAwMDAwMCAxNGRlZjlkZWEyZjc5Y2Q2IDU4MTI2MzFhNWNmNWQzZWQnLA0KICBoYXNoOiBoYXNoLnNoYTI1NiwNCiAgZ1JlZDogZmFsc2UsDQogIGc6IFsNCiAgICAnMjE2OTM2ZDNjZDZlNTNmZWMwYTRlMjMxZmRkNmRjNWM2OTJjYzc2MDk1MjVhN2IyYzk1NjJkNjA4ZjI1ZDUxYScsDQoNCiAgICAvLyA0LzUNCiAgICAnNjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY1OCcNCiAgXQ0KfSk7DQoNCnZhciBwcmU7DQp0cnkgew0KICBwcmUgPSByZXF1aXJlKCcuL3ByZWNvbXB1dGVkL3NlY3AyNTZrMScpOw0KfSBjYXRjaCAoZSkgew0KICBwcmUgPSB1bmRlZmluZWQ7DQp9DQoNCmRlZmluZUN1cnZlKCdzZWNwMjU2azEnLCB7DQogIHR5cGU6ICdzaG9ydCcsDQogIHByaW1lOiAnazI1NicsDQogIHA6ICdmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmMyZicsDQogIGE6ICcwJywNCiAgYjogJzcnLA0KICBuOiAnZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgYmFhZWRjZTYgYWY0OGEwM2IgYmZkMjVlOGMgZDAzNjQxNDEnLA0KICBoOiAnMScsDQogIGhhc2g6IGhhc2guc2hhMjU2LA0KDQogIC8vIFByZWNvbXB1dGVkIGVuZG9tb3JwaGlzbQ0KICBiZXRhOiAnN2FlOTZhMmI2NTdjMDcxMDZlNjQ0NzllYWMzNDM0ZTk5Y2YwNDk3NTEyZjU4OTk1YzEzOTZjMjg3MTk1MDFlZScsDQogIGxhbWJkYTogJzUzNjNhZDRjYzA1YzMwZTBhNTI2MWMwMjg4MTI2NDVhMTIyZTIyZWEyMDgxNjY3OGRmMDI5NjdjMWIyM2JkNzInLA0KICBiYXNpczogWw0KICAgIHsNCiAgICAgIGE6ICczMDg2ZDIyMWE3ZDQ2YmNkZTg2YzkwZTQ5Mjg0ZWIxNScsDQogICAgICBiOiAnLWU0NDM3ZWQ2MDEwZTg4Mjg2ZjU0N2ZhOTBhYmZlNGMzJw0KICAgIH0sDQogICAgew0KICAgICAgYTogJzExNGNhNTBmN2E4ZTJmM2Y2NTdjMTEwOGQ5ZDQ0Y2ZkOCcsDQogICAgICBiOiAnMzA4NmQyMjFhN2Q0NmJjZGU4NmM5MGU0OTI4NGViMTUnDQogICAgfQ0KICBdLA0KDQogIGdSZWQ6IGZhbHNlLA0KICBnOiBbDQogICAgJzc5YmU2NjdlZjlkY2JiYWM1NWEwNjI5NWNlODcwYjA3MDI5YmZjZGIyZGNlMjhkOTU5ZjI4MTViMTZmODE3OTgnLA0KICAgICc0ODNhZGE3NzI2YTNjNDY1NWRhNGZiZmMwZTExMDhhOGZkMTdiNDQ4YTY4NTU0MTk5YzQ3ZDA4ZmZiMTBkNGI4JywNCiAgICBwcmUNCiAgXQ0KfSk7DQoNCn0seyIuLi9lbGxpcHRpYyI6NTA4LCIuL3ByZWNvbXB1dGVkL3NlY3AyNTZrMSI6NTIyLCJoYXNoLmpzIjo1Mjd9XSw1MTU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQp2YXIgQk4gPSByZXF1aXJlKCdibi5qcycpOw0KdmFyIGVsbGlwdGljID0gcmVxdWlyZSgnLi4vLi4vZWxsaXB0aWMnKTsNCnZhciB1dGlscyA9IGVsbGlwdGljLnV0aWxzOw0KdmFyIGFzc2VydCA9IHV0aWxzLmFzc2VydDsNCg0KdmFyIEtleVBhaXIgPSByZXF1aXJlKCcuL2tleScpOw0KdmFyIFNpZ25hdHVyZSA9IHJlcXVpcmUoJy4vc2lnbmF0dXJlJyk7DQoNCmZ1bmN0aW9uIEVDKG9wdGlvbnMpIHsNCiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIEVDKSkNCiAgICByZXR1cm4gbmV3IEVDKG9wdGlvbnMpOw0KDQogIC8vIFNob3J0Y3V0IGBlbGxpcHRpYy5lYyhjdXJ2ZS1uYW1lKWANCiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJykgew0KICAgIGFzc2VydChlbGxpcHRpYy5jdXJ2ZXMuaGFzT3duUHJvcGVydHkob3B0aW9ucyksICdVbmtub3duIGN1cnZlICcgKyBvcHRpb25zKTsNCg0KICAgIG9wdGlvbnMgPSBlbGxpcHRpYy5jdXJ2ZXNbb3B0aW9uc107DQogIH0NCg0KICAvLyBTaG9ydGN1dCBmb3IgYGVsbGlwdGljLmVjKGVsbGlwdGljLmN1cnZlcy5jdXJ2ZU5hbWUpYA0KICBpZiAob3B0aW9ucyBpbnN0YW5jZW9mIGVsbGlwdGljLmN1cnZlcy5QcmVzZXRDdXJ2ZSkNCiAgICBvcHRpb25zID0geyBjdXJ2ZTogb3B0aW9ucyB9Ow0KDQogIHRoaXMuY3VydmUgPSBvcHRpb25zLmN1cnZlLmN1cnZlOw0KICB0aGlzLm4gPSB0aGlzLmN1cnZlLm47DQogIHRoaXMubmggPSB0aGlzLm4udXNocm4oMSk7DQogIHRoaXMuZyA9IHRoaXMuY3VydmUuZzsNCg0KICAvLyBQb2ludCBvbiBjdXJ2ZQ0KICB0aGlzLmcgPSBvcHRpb25zLmN1cnZlLmc7DQogIHRoaXMuZy5wcmVjb21wdXRlKG9wdGlvbnMuY3VydmUubi5iaXRMZW5ndGgoKSArIDEpOw0KDQogIC8vIEhhc2ggZm9yIGZ1bmN0aW9uIGZvciBEUkJHDQogIHRoaXMuaGFzaCA9IG9wdGlvbnMuaGFzaCB8fCBvcHRpb25zLmN1cnZlLmhhc2g7DQp9DQptb2R1bGUuZXhwb3J0cyA9IEVDOw0KDQpFQy5wcm90b3R5cGUua2V5UGFpciA9IGZ1bmN0aW9uIGtleVBhaXIob3B0aW9ucykgew0KICByZXR1cm4gbmV3IEtleVBhaXIodGhpcywgb3B0aW9ucyk7DQp9Ow0KDQpFQy5wcm90b3R5cGUua2V5RnJvbVByaXZhdGUgPSBmdW5jdGlvbiBrZXlGcm9tUHJpdmF0ZShwcml2LCBlbmMpIHsNCiAgcmV0dXJuIEtleVBhaXIuZnJvbVByaXZhdGUodGhpcywgcHJpdiwgZW5jKTsNCn07DQoNCkVDLnByb3RvdHlwZS5rZXlGcm9tUHVibGljID0gZnVuY3Rpb24ga2V5RnJvbVB1YmxpYyhwdWIsIGVuYykgew0KICByZXR1cm4gS2V5UGFpci5mcm9tUHVibGljKHRoaXMsIHB1YiwgZW5jKTsNCn07DQoNCkVDLnByb3RvdHlwZS5nZW5LZXlQYWlyID0gZnVuY3Rpb24gZ2VuS2V5UGFpcihvcHRpb25zKSB7DQogIGlmICghb3B0aW9ucykNCiAgICBvcHRpb25zID0ge307DQoNCiAgLy8gSW5zdGFudGlhdGUgSG1hY19EUkJHDQogIHZhciBkcmJnID0gbmV3IGVsbGlwdGljLmhtYWNEUkJHKHsNCiAgICBoYXNoOiB0aGlzLmhhc2gsDQogICAgcGVyczogb3B0aW9ucy5wZXJzLA0KICAgIGVudHJvcHk6IG9wdGlvbnMuZW50cm9weSB8fCBlbGxpcHRpYy5yYW5kKHRoaXMuaGFzaC5obWFjU3RyZW5ndGgpLA0KICAgIG5vbmNlOiB0aGlzLm4udG9BcnJheSgpDQogIH0pOw0KDQogIHZhciBieXRlcyA9IHRoaXMubi5ieXRlTGVuZ3RoKCk7DQogIHZhciBuczIgPSB0aGlzLm4uc3ViKG5ldyBCTigyKSk7DQogIGRvIHsNCiAgICB2YXIgcHJpdiA9IG5ldyBCTihkcmJnLmdlbmVyYXRlKGJ5dGVzKSk7DQogICAgaWYgKHByaXYuY21wKG5zMikgPiAwKQ0KICAgICAgY29udGludWU7DQoNCiAgICBwcml2LmlhZGRuKDEpOw0KICAgIHJldHVybiB0aGlzLmtleUZyb21Qcml2YXRlKHByaXYpOw0KICB9IHdoaWxlICh0cnVlKTsNCn07DQoNCkVDLnByb3RvdHlwZS5fdHJ1bmNhdGVUb04gPSBmdW5jdGlvbiB0cnVuY2F0ZVRvTihtc2csIHRydW5jT25seSkgew0KICB2YXIgZGVsdGEgPSBtc2cuYnl0ZUxlbmd0aCgpICogOCAtIHRoaXMubi5iaXRMZW5ndGgoKTsNCiAgaWYgKGRlbHRhID4gMCkNCiAgICBtc2cgPSBtc2cudXNocm4oZGVsdGEpOw0KICBpZiAoIXRydW5jT25seSAmJiBtc2cuY21wKHRoaXMubikgPj0gMCkNCiAgICByZXR1cm4gbXNnLnN1Yih0aGlzLm4pOw0KICBlbHNlDQogICAgcmV0dXJuIG1zZzsNCn07DQoNCkVDLnByb3RvdHlwZS5zaWduID0gZnVuY3Rpb24gc2lnbihtc2csIGtleSwgZW5jLCBvcHRpb25zKSB7DQogIGlmICh0eXBlb2YgZW5jID09PSAnb2JqZWN0Jykgew0KICAgIG9wdGlvbnMgPSBlbmM7DQogICAgZW5jID0gbnVsbDsNCiAgfQ0KICBpZiAoIW9wdGlvbnMpDQogICAgb3B0aW9ucyA9IHt9Ow0KDQogIGtleSA9IHRoaXMua2V5RnJvbVByaXZhdGUoa2V5LCBlbmMpOw0KICBtc2cgPSB0aGlzLl90cnVuY2F0ZVRvTihuZXcgQk4obXNnLCAxNikpOw0KDQogIC8vIFplcm8tZXh0ZW5kIGtleSB0byBwcm92aWRlIGVub3VnaCBlbnRyb3B5DQogIHZhciBieXRlcyA9IHRoaXMubi5ieXRlTGVuZ3RoKCk7DQogIHZhciBia2V5ID0ga2V5LmdldFByaXZhdGUoKS50b0FycmF5KCdiZScsIGJ5dGVzKTsNCg0KICAvLyBaZXJvLWV4dGVuZCBub25jZSB0byBoYXZlIHRoZSBzYW1lIGJ5dGUgc2l6ZSBhcyBODQogIHZhciBub25jZSA9IG1zZy50b0FycmF5KCdiZScsIGJ5dGVzKTsNCg0KICAvLyBJbnN0YW50aWF0ZSBIbWFjX0RSQkcNCiAgdmFyIGRyYmcgPSBuZXcgZWxsaXB0aWMuaG1hY0RSQkcoew0KICAgIGhhc2g6IHRoaXMuaGFzaCwNCiAgICBlbnRyb3B5OiBia2V5LA0KICAgIG5vbmNlOiBub25jZSwNCiAgICBwZXJzOiBvcHRpb25zLnBlcnMsDQogICAgcGVyc0VuYzogb3B0aW9ucy5wZXJzRW5jDQogIH0pOw0KDQogIC8vIE51bWJlciBvZiBieXRlcyB0byBnZW5lcmF0ZQ0KICB2YXIgbnMxID0gdGhpcy5uLnN1YihuZXcgQk4oMSkpOw0KDQogIGZvciAodmFyIGl0ZXIgPSAwOyB0cnVlOyBpdGVyKyspIHsNCiAgICB2YXIgayA9IG9wdGlvbnMuayA/DQogICAgICAgIG9wdGlvbnMuayhpdGVyKSA6DQogICAgICAgIG5ldyBCTihkcmJnLmdlbmVyYXRlKHRoaXMubi5ieXRlTGVuZ3RoKCkpKTsNCiAgICBrID0gdGhpcy5fdHJ1bmNhdGVUb04oaywgdHJ1ZSk7DQogICAgaWYgKGsuY21wbigxKSA8PSAwIHx8IGsuY21wKG5zMSkgPj0gMCkNCiAgICAgIGNvbnRpbnVlOw0KDQogICAgdmFyIGtwID0gdGhpcy5nLm11bChrKTsNCiAgICBpZiAoa3AuaXNJbmZpbml0eSgpKQ0KICAgICAgY29udGludWU7DQoNCiAgICB2YXIga3BYID0ga3AuZ2V0WCgpOw0KICAgIHZhciByID0ga3BYLnVtb2QodGhpcy5uKTsNCiAgICBpZiAoci5jbXBuKDApID09PSAwKQ0KICAgICAgY29udGludWU7DQoNCiAgICB2YXIgcyA9IGsuaW52bSh0aGlzLm4pLm11bChyLm11bChrZXkuZ2V0UHJpdmF0ZSgpKS5pYWRkKG1zZykpOw0KICAgIHMgPSBzLnVtb2QodGhpcy5uKTsNCiAgICBpZiAocy5jbXBuKDApID09PSAwKQ0KICAgICAgY29udGludWU7DQoNCiAgICB2YXIgcmVjb3ZlcnlQYXJhbSA9IChrcC5nZXRZKCkuaXNPZGQoKSA/IDEgOiAwKSB8DQogICAgICAgICAgICAgICAgICAgICAgICAoa3BYLmNtcChyKSAhPT0gMCA/IDIgOiAwKTsNCg0KICAgIC8vIFVzZSBjb21wbGVtZW50IG9mIGBzYCwgaWYgaXQgaXMgPiBgbiAvIDJgDQogICAgaWYgKG9wdGlvbnMuY2Fub25pY2FsICYmIHMuY21wKHRoaXMubmgpID4gMCkgew0KICAgICAgcyA9IHRoaXMubi5zdWIocyk7DQogICAgICByZWNvdmVyeVBhcmFtIF49IDE7DQogICAgfQ0KDQogICAgcmV0dXJuIG5ldyBTaWduYXR1cmUoeyByOiByLCBzOiBzLCByZWNvdmVyeVBhcmFtOiByZWNvdmVyeVBhcmFtIH0pOw0KICB9DQp9Ow0KDQpFQy5wcm90b3R5cGUudmVyaWZ5ID0gZnVuY3Rpb24gdmVyaWZ5KG1zZywgc2lnbmF0dXJlLCBrZXksIGVuYykgew0KICBtc2cgPSB0aGlzLl90cnVuY2F0ZVRvTihuZXcgQk4obXNnLCAxNikpOw0KICBrZXkgPSB0aGlzLmtleUZyb21QdWJsaWMoa2V5LCBlbmMpOw0KICBzaWduYXR1cmUgPSBuZXcgU2lnbmF0dXJlKHNpZ25hdHVyZSwgJ2hleCcpOw0KDQogIC8vIFBlcmZvcm0gcHJpbWl0aXZlIHZhbHVlcyB2YWxpZGF0aW9uDQogIHZhciByID0gc2lnbmF0dXJlLnI7DQogIHZhciBzID0gc2lnbmF0dXJlLnM7DQogIGlmIChyLmNtcG4oMSkgPCAwIHx8IHIuY21wKHRoaXMubikgPj0gMCkNCiAgICByZXR1cm4gZmFsc2U7DQogIGlmIChzLmNtcG4oMSkgPCAwIHx8IHMuY21wKHRoaXMubikgPj0gMCkNCiAgICByZXR1cm4gZmFsc2U7DQoNCiAgLy8gVmFsaWRhdGUgc2lnbmF0dXJlDQogIHZhciBzaW52ID0gcy5pbnZtKHRoaXMubik7DQogIHZhciB1MSA9IHNpbnYubXVsKG1zZykudW1vZCh0aGlzLm4pOw0KICB2YXIgdTIgPSBzaW52Lm11bChyKS51bW9kKHRoaXMubik7DQoNCiAgdmFyIHAgPSB0aGlzLmcubXVsQWRkKHUxLCBrZXkuZ2V0UHVibGljKCksIHUyKTsNCiAgaWYgKHAuaXNJbmZpbml0eSgpKQ0KICAgIHJldHVybiBmYWxzZTsNCg0KICByZXR1cm4gcC5nZXRYKCkudW1vZCh0aGlzLm4pLmNtcChyKSA9PT0gMDsNCn07DQoNCkVDLnByb3RvdHlwZS5yZWNvdmVyUHViS2V5ID0gZnVuY3Rpb24obXNnLCBzaWduYXR1cmUsIGosIGVuYykgew0KICBhc3NlcnQoKDMgJiBqKSA9PT0gaiwgJ1RoZSByZWNvdmVyeSBwYXJhbSBpcyBtb3JlIHRoYW4gdHdvIGJpdHMnKTsNCiAgc2lnbmF0dXJlID0gbmV3IFNpZ25hdHVyZShzaWduYXR1cmUsIGVuYyk7DQoNCiAgdmFyIG4gPSB0aGlzLm47DQogIHZhciBlID0gbmV3IEJOKG1zZyk7DQogIHZhciByID0gc2lnbmF0dXJlLnI7DQogIHZhciBzID0gc2lnbmF0dXJlLnM7DQoNCiAgLy8gQSBzZXQgTFNCIHNpZ25pZmllcyB0aGF0IHRoZSB5LWNvb3JkaW5hdGUgaXMgb2RkDQogIHZhciBpc1lPZGQgPSBqICYgMTsNCiAgdmFyIGlzU2Vjb25kS2V5ID0gaiA+PiAxOw0KICBpZiAoci5jbXAodGhpcy5jdXJ2ZS5wLnVtb2QodGhpcy5jdXJ2ZS5uKSkgPj0gMCAmJiBpc1NlY29uZEtleSkNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuYWJsZSB0byBmaW5kIHNlbmNvbmQga2V5IGNhbmRpbmF0ZScpOw0KDQogIC8vIDEuMS4gTGV0IHggPSByICsgam4uDQogIGlmIChpc1NlY29uZEtleSkNCiAgICByID0gdGhpcy5jdXJ2ZS5wb2ludEZyb21YKHIuYWRkKHRoaXMuY3VydmUubiksIGlzWU9kZCk7DQogIGVsc2UNCiAgICByID0gdGhpcy5jdXJ2ZS5wb2ludEZyb21YKHIsIGlzWU9kZCk7DQoNCiAgdmFyIGVOZWcgPSBuLnN1YihlKTsNCg0KICAvLyAxLjYuMSBDb21wdXRlIFEgPSByXi0xIChzUiAtICBlRykNCiAgLy8gICAgICAgICAgICAgICBRID0gcl4tMSAoc1IgKyAtZUcpDQogIHZhciBySW52ID0gc2lnbmF0dXJlLnIuaW52bShuKTsNCiAgcmV0dXJuIHRoaXMuZy5tdWxBZGQoZU5lZywgciwgcykubXVsKHJJbnYpOw0KfTsNCg0KRUMucHJvdG90eXBlLmdldEtleVJlY292ZXJ5UGFyYW0gPSBmdW5jdGlvbihlLCBzaWduYXR1cmUsIFEsIGVuYykgew0KICBzaWduYXR1cmUgPSBuZXcgU2lnbmF0dXJlKHNpZ25hdHVyZSwgZW5jKTsNCiAgaWYgKHNpZ25hdHVyZS5yZWNvdmVyeVBhcmFtICE9PSBudWxsKQ0KICAgIHJldHVybiBzaWduYXR1cmUucmVjb3ZlcnlQYXJhbTsNCg0KICBmb3IgKHZhciBpID0gMDsgaSA8IDQ7IGkrKykgew0KICAgIHZhciBRcHJpbWU7DQogICAgdHJ5IHsNCiAgICAgIFFwcmltZSA9IHRoaXMucmVjb3ZlclB1YktleShlLCBzaWduYXR1cmUsIGkpOw0KICAgIH0gY2F0Y2ggKGUpIHsNCiAgICAgIGNvbnRpbnVlOw0KICAgIH0NCg0KICAgIGlmIChRcHJpbWUuZXEoUSkpDQogICAgICByZXR1cm4gaTsNCiAgfQ0KICB0aHJvdyBuZXcgRXJyb3IoJ1VuYWJsZSB0byBmaW5kIHZhbGlkIHJlY292ZXJ5IGZhY3RvcicpOw0KfTsNCg0KfSx7Ii4uLy4uL2VsbGlwdGljIjo1MDgsIi4va2V5Ijo1MTYsIi4vc2lnbmF0dXJlIjo1MTcsImJuLmpzIjo1OX1dLDUxNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7DQoNCnZhciBCTiA9IHJlcXVpcmUoJ2JuLmpzJyk7DQoNCmZ1bmN0aW9uIEtleVBhaXIoZWMsIG9wdGlvbnMpIHsNCiAgdGhpcy5lYyA9IGVjOw0KICB0aGlzLnByaXYgPSBudWxsOw0KICB0aGlzLnB1YiA9IG51bGw7DQoNCiAgLy8gS2V5UGFpcihlYywgeyBwcml2OiAuLi4sIHB1YjogLi4uIH0pDQogIGlmIChvcHRpb25zLnByaXYpDQogICAgdGhpcy5faW1wb3J0UHJpdmF0ZShvcHRpb25zLnByaXYsIG9wdGlvbnMucHJpdkVuYyk7DQogIGlmIChvcHRpb25zLnB1YikNCiAgICB0aGlzLl9pbXBvcnRQdWJsaWMob3B0aW9ucy5wdWIsIG9wdGlvbnMucHViRW5jKTsNCn0NCm1vZHVsZS5leHBvcnRzID0gS2V5UGFpcjsNCg0KS2V5UGFpci5mcm9tUHVibGljID0gZnVuY3Rpb24gZnJvbVB1YmxpYyhlYywgcHViLCBlbmMpIHsNCiAgaWYgKHB1YiBpbnN0YW5jZW9mIEtleVBhaXIpDQogICAgcmV0dXJuIHB1YjsNCg0KICByZXR1cm4gbmV3IEtleVBhaXIoZWMsIHsNCiAgICBwdWI6IHB1YiwNCiAgICBwdWJFbmM6IGVuYw0KICB9KTsNCn07DQoNCktleVBhaXIuZnJvbVByaXZhdGUgPSBmdW5jdGlvbiBmcm9tUHJpdmF0ZShlYywgcHJpdiwgZW5jKSB7DQogIGlmIChwcml2IGluc3RhbmNlb2YgS2V5UGFpcikNCiAgICByZXR1cm4gcHJpdjsNCg0KICByZXR1cm4gbmV3IEtleVBhaXIoZWMsIHsNCiAgICBwcml2OiBwcml2LA0KICAgIHByaXZFbmM6IGVuYw0KICB9KTsNCn07DQoNCktleVBhaXIucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gdmFsaWRhdGUoKSB7DQogIHZhciBwdWIgPSB0aGlzLmdldFB1YmxpYygpOw0KDQogIGlmIChwdWIuaXNJbmZpbml0eSgpKQ0KICAgIHJldHVybiB7IHJlc3VsdDogZmFsc2UsIHJlYXNvbjogJ0ludmFsaWQgcHVibGljIGtleScgfTsNCiAgaWYgKCFwdWIudmFsaWRhdGUoKSkNCiAgICByZXR1cm4geyByZXN1bHQ6IGZhbHNlLCByZWFzb246ICdQdWJsaWMga2V5IGlzIG5vdCBhIHBvaW50JyB9Ow0KICBpZiAoIXB1Yi5tdWwodGhpcy5lYy5jdXJ2ZS5uKS5pc0luZmluaXR5KCkpDQogICAgcmV0dXJuIHsgcmVzdWx0OiBmYWxzZSwgcmVhc29uOiAnUHVibGljIGtleSAqIE4gIT0gTycgfTsNCg0KICByZXR1cm4geyByZXN1bHQ6IHRydWUsIHJlYXNvbjogbnVsbCB9Ow0KfTsNCg0KS2V5UGFpci5wcm90b3R5cGUuZ2V0UHVibGljID0gZnVuY3Rpb24gZ2V0UHVibGljKGNvbXBhY3QsIGVuYykgew0KICAvLyBjb21wYWN0IGlzIG9wdGlvbmFsIGFyZ3VtZW50DQogIGlmICh0eXBlb2YgY29tcGFjdCA9PT0gJ3N0cmluZycpIHsNCiAgICBlbmMgPSBjb21wYWN0Ow0KICAgIGNvbXBhY3QgPSBudWxsOw0KICB9DQoNCiAgaWYgKCF0aGlzLnB1YikNCiAgICB0aGlzLnB1YiA9IHRoaXMuZWMuZy5tdWwodGhpcy5wcml2KTsNCg0KICBpZiAoIWVuYykNCiAgICByZXR1cm4gdGhpcy5wdWI7DQoNCiAgcmV0dXJuIHRoaXMucHViLmVuY29kZShlbmMsIGNvbXBhY3QpOw0KfTsNCg0KS2V5UGFpci5wcm90b3R5cGUuZ2V0UHJpdmF0ZSA9IGZ1bmN0aW9uIGdldFByaXZhdGUoZW5jKSB7DQogIGlmIChlbmMgPT09ICdoZXgnKQ0KICAgIHJldHVybiB0aGlzLnByaXYudG9TdHJpbmcoMTYsIDIpOw0KICBlbHNlDQogICAgcmV0dXJuIHRoaXMucHJpdjsNCn07DQoNCktleVBhaXIucHJvdG90eXBlLl9pbXBvcnRQcml2YXRlID0gZnVuY3Rpb24gX2ltcG9ydFByaXZhdGUoa2V5LCBlbmMpIHsNCiAgdGhpcy5wcml2ID0gbmV3IEJOKGtleSwgZW5jIHx8IDE2KTsNCg0KICAvLyBFbnN1cmUgdGhhdCB0aGUgcHJpdiB3b24ndCBiZSBiaWdnZXIgdGhhbiBuLCBvdGhlcndpc2Ugd2UgbWF5IGZhaWwNCiAgLy8gaW4gZml4ZWQgbXVsdGlwbGljYXRpb24gbWV0aG9kDQogIHRoaXMucHJpdiA9IHRoaXMucHJpdi51bW9kKHRoaXMuZWMuY3VydmUubik7DQp9Ow0KDQpLZXlQYWlyLnByb3RvdHlwZS5faW1wb3J0UHVibGljID0gZnVuY3Rpb24gX2ltcG9ydFB1YmxpYyhrZXksIGVuYykgew0KICBpZiAoa2V5LnggfHwga2V5LnkpIHsNCiAgICB0aGlzLnB1YiA9IHRoaXMuZWMuY3VydmUucG9pbnQoa2V5LngsIGtleS55KTsNCiAgICByZXR1cm47DQogIH0NCiAgdGhpcy5wdWIgPSB0aGlzLmVjLmN1cnZlLmRlY29kZVBvaW50KGtleSwgZW5jKTsNCn07DQoNCi8vIEVDREgNCktleVBhaXIucHJvdG90eXBlLmRlcml2ZSA9IGZ1bmN0aW9uIGRlcml2ZShwdWIpIHsNCiAgcmV0dXJuIHB1Yi5tdWwodGhpcy5wcml2KS5nZXRYKCk7DQp9Ow0KDQovLyBFQ0RTQQ0KS2V5UGFpci5wcm90b3R5cGUuc2lnbiA9IGZ1bmN0aW9uIHNpZ24obXNnLCBlbmMsIG9wdGlvbnMpIHsNCiAgcmV0dXJuIHRoaXMuZWMuc2lnbihtc2csIHRoaXMsIGVuYywgb3B0aW9ucyk7DQp9Ow0KDQpLZXlQYWlyLnByb3RvdHlwZS52ZXJpZnkgPSBmdW5jdGlvbiB2ZXJpZnkobXNnLCBzaWduYXR1cmUpIHsNCiAgcmV0dXJuIHRoaXMuZWMudmVyaWZ5KG1zZywgc2lnbmF0dXJlLCB0aGlzKTsNCn07DQoNCktleVBhaXIucHJvdG90eXBlLmluc3BlY3QgPSBmdW5jdGlvbiBpbnNwZWN0KCkgew0KICByZXR1cm4gJzxLZXkgcHJpdjogJyArICh0aGlzLnByaXYgJiYgdGhpcy5wcml2LnRvU3RyaW5nKDE2LCAyKSkgKw0KICAgICAgICAgJyBwdWI6ICcgKyAodGhpcy5wdWIgJiYgdGhpcy5wdWIuaW5zcGVjdCgpKSArICcgPic7DQp9Ow0KDQp9LHsiYm4uanMiOjU5fV0sNTE3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCg0KdmFyIEJOID0gcmVxdWlyZSgnYm4uanMnKTsNCg0KdmFyIGVsbGlwdGljID0gcmVxdWlyZSgnLi4vLi4vZWxsaXB0aWMnKTsNCnZhciB1dGlscyA9IGVsbGlwdGljLnV0aWxzOw0KdmFyIGFzc2VydCA9IHV0aWxzLmFzc2VydDsNCg0KZnVuY3Rpb24gU2lnbmF0dXJlKG9wdGlvbnMsIGVuYykgew0KICBpZiAob3B0aW9ucyBpbnN0YW5jZW9mIFNpZ25hdHVyZSkNCiAgICByZXR1cm4gb3B0aW9uczsNCg0KICBpZiAodGhpcy5faW1wb3J0REVSKG9wdGlvbnMsIGVuYykpDQogICAgcmV0dXJuOw0KDQogIGFzc2VydChvcHRpb25zLnIgJiYgb3B0aW9ucy5zLCAnU2lnbmF0dXJlIHdpdGhvdXQgciBvciBzJyk7DQogIHRoaXMuciA9IG5ldyBCTihvcHRpb25zLnIsIDE2KTsNCiAgdGhpcy5zID0gbmV3IEJOKG9wdGlvbnMucywgMTYpOw0KICBpZiAob3B0aW9ucy5yZWNvdmVyeVBhcmFtID09PSB1bmRlZmluZWQpDQogICAgdGhpcy5yZWNvdmVyeVBhcmFtID0gbnVsbDsNCiAgZWxzZQ0KICAgIHRoaXMucmVjb3ZlcnlQYXJhbSA9IG9wdGlvbnMucmVjb3ZlcnlQYXJhbTsNCn0NCm1vZHVsZS5leHBvcnRzID0gU2lnbmF0dXJlOw0KDQpmdW5jdGlvbiBQb3NpdGlvbigpIHsNCiAgdGhpcy5wbGFjZSA9IDA7DQp9DQoNCmZ1bmN0aW9uIGdldExlbmd0aChidWYsIHApIHsNCiAgdmFyIGluaXRpYWwgPSBidWZbcC5wbGFjZSsrXTsNCiAgaWYgKCEoaW5pdGlhbCAmIDB4ODApKSB7DQogICAgcmV0dXJuIGluaXRpYWw7DQogIH0NCiAgdmFyIG9jdGV0TGVuID0gaW5pdGlhbCAmIDB4ZjsNCiAgdmFyIHZhbCA9IDA7DQogIGZvciAodmFyIGkgPSAwLCBvZmYgPSBwLnBsYWNlOyBpIDwgb2N0ZXRMZW47IGkrKywgb2ZmKyspIHsNCiAgICB2YWwgPDw9IDg7DQogICAgdmFsIHw9IGJ1ZltvZmZdOw0KICB9DQogIHAucGxhY2UgPSBvZmY7DQogIHJldHVybiB2YWw7DQp9DQoNCmZ1bmN0aW9uIHJtUGFkZGluZyhidWYpIHsNCiAgdmFyIGkgPSAwOw0KICB2YXIgbGVuID0gYnVmLmxlbmd0aCAtIDE7DQogIHdoaWxlICghYnVmW2ldICYmICEoYnVmW2kgKyAxXSAmIDB4ODApICYmIGkgPCBsZW4pIHsNCiAgICBpKys7DQogIH0NCiAgaWYgKGkgPT09IDApIHsNCiAgICByZXR1cm4gYnVmOw0KICB9DQogIHJldHVybiBidWYuc2xpY2UoaSk7DQp9DQoNClNpZ25hdHVyZS5wcm90b3R5cGUuX2ltcG9ydERFUiA9IGZ1bmN0aW9uIF9pbXBvcnRERVIoZGF0YSwgZW5jKSB7DQogIGRhdGEgPSB1dGlscy50b0FycmF5KGRhdGEsIGVuYyk7DQogIHZhciBwID0gbmV3IFBvc2l0aW9uKCk7DQogIGlmIChkYXRhW3AucGxhY2UrK10gIT09IDB4MzApIHsNCiAgICByZXR1cm4gZmFsc2U7DQogIH0NCiAgdmFyIGxlbiA9IGdldExlbmd0aChkYXRhLCBwKTsNCiAgaWYgKChsZW4gKyBwLnBsYWNlKSAhPT0gZGF0YS5sZW5ndGgpIHsNCiAgICByZXR1cm4gZmFsc2U7DQogIH0NCiAgaWYgKGRhdGFbcC5wbGFjZSsrXSAhPT0gMHgwMikgew0KICAgIHJldHVybiBmYWxzZTsNCiAgfQ0KICB2YXIgcmxlbiA9IGdldExlbmd0aChkYXRhLCBwKTsNCiAgdmFyIHIgPSBkYXRhLnNsaWNlKHAucGxhY2UsIHJsZW4gKyBwLnBsYWNlKTsNCiAgcC5wbGFjZSArPSBybGVuOw0KICBpZiAoZGF0YVtwLnBsYWNlKytdICE9PSAweDAyKSB7DQogICAgcmV0dXJuIGZhbHNlOw0KICB9DQogIHZhciBzbGVuID0gZ2V0TGVuZ3RoKGRhdGEsIHApOw0KICBpZiAoZGF0YS5sZW5ndGggIT09IHNsZW4gKyBwLnBsYWNlKSB7DQogICAgcmV0dXJuIGZhbHNlOw0KICB9DQogIHZhciBzID0gZGF0YS5zbGljZShwLnBsYWNlLCBzbGVuICsgcC5wbGFjZSk7DQogIGlmIChyWzBdID09PSAwICYmIChyWzFdICYgMHg4MCkpIHsNCiAgICByID0gci5zbGljZSgxKTsNCiAgfQ0KICBpZiAoc1swXSA9PT0gMCAmJiAoc1sxXSAmIDB4ODApKSB7DQogICAgcyA9IHMuc2xpY2UoMSk7DQogIH0NCg0KICB0aGlzLnIgPSBuZXcgQk4ocik7DQogIHRoaXMucyA9IG5ldyBCTihzKTsNCiAgdGhpcy5yZWNvdmVyeVBhcmFtID0gbnVsbDsNCg0KICByZXR1cm4gdHJ1ZTsNCn07DQoNCmZ1bmN0aW9uIGNvbnN0cnVjdExlbmd0aChhcnIsIGxlbikgew0KICBpZiAobGVuIDwgMHg4MCkgew0KICAgIGFyci5wdXNoKGxlbik7DQogICAgcmV0dXJuOw0KICB9DQogIHZhciBvY3RldHMgPSAxICsgKE1hdGgubG9nKGxlbikgLyBNYXRoLkxOMiA+Pj4gMyk7DQogIGFyci5wdXNoKG9jdGV0cyB8IDB4ODApOw0KICB3aGlsZSAoLS1vY3RldHMpIHsNCiAgICBhcnIucHVzaCgobGVuID4+PiAob2N0ZXRzIDw8IDMpKSAmIDB4ZmYpOw0KICB9DQogIGFyci5wdXNoKGxlbik7DQp9DQoNClNpZ25hdHVyZS5wcm90b3R5cGUudG9ERVIgPSBmdW5jdGlvbiB0b0RFUihlbmMpIHsNCiAgdmFyIHIgPSB0aGlzLnIudG9BcnJheSgpOw0KICB2YXIgcyA9IHRoaXMucy50b0FycmF5KCk7DQoNCiAgLy8gUGFkIHZhbHVlcw0KICBpZiAoclswXSAmIDB4ODApDQogICAgciA9IFsgMCBdLmNvbmNhdChyKTsNCiAgLy8gUGFkIHZhbHVlcw0KICBpZiAoc1swXSAmIDB4ODApDQogICAgcyA9IFsgMCBdLmNvbmNhdChzKTsNCg0KICByID0gcm1QYWRkaW5nKHIpOw0KICBzID0gcm1QYWRkaW5nKHMpOw0KDQogIHdoaWxlICghc1swXSAmJiAhKHNbMV0gJiAweDgwKSkgew0KICAgIHMgPSBzLnNsaWNlKDEpOw0KICB9DQogIHZhciBhcnIgPSBbIDB4MDIgXTsNCiAgY29uc3RydWN0TGVuZ3RoKGFyciwgci5sZW5ndGgpOw0KICBhcnIgPSBhcnIuY29uY2F0KHIpOw0KICBhcnIucHVzaCgweDAyKTsNCiAgY29uc3RydWN0TGVuZ3RoKGFyciwgcy5sZW5ndGgpOw0KICB2YXIgYmFja0hhbGYgPSBhcnIuY29uY2F0KHMpOw0KICB2YXIgcmVzID0gWyAweDMwIF07DQogIGNvbnN0cnVjdExlbmd0aChyZXMsIGJhY2tIYWxmLmxlbmd0aCk7DQogIHJlcyA9IHJlcy5jb25jYXQoYmFja0hhbGYpOw0KICByZXR1cm4gdXRpbHMuZW5jb2RlKHJlcywgZW5jKTsNCn07DQoNCn0seyIuLi8uLi9lbGxpcHRpYyI6NTA4LCJibi5qcyI6NTl9XSw1MTg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQp2YXIgaGFzaCA9IHJlcXVpcmUoJ2hhc2guanMnKTsNCnZhciBlbGxpcHRpYyA9IHJlcXVpcmUoJy4uLy4uL2VsbGlwdGljJyk7DQp2YXIgdXRpbHMgPSBlbGxpcHRpYy51dGlsczsNCnZhciBhc3NlcnQgPSB1dGlscy5hc3NlcnQ7DQp2YXIgcGFyc2VCeXRlcyA9IHV0aWxzLnBhcnNlQnl0ZXM7DQp2YXIgS2V5UGFpciA9IHJlcXVpcmUoJy4va2V5Jyk7DQp2YXIgU2lnbmF0dXJlID0gcmVxdWlyZSgnLi9zaWduYXR1cmUnKTsNCg0KZnVuY3Rpb24gRUREU0EoY3VydmUpIHsNCiAgYXNzZXJ0KGN1cnZlID09PSAnZWQyNTUxOScsICdvbmx5IHRlc3RlZCB3aXRoIGVkMjU1MTkgc28gZmFyJyk7DQoNCiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIEVERFNBKSkNCiAgICByZXR1cm4gbmV3IEVERFNBKGN1cnZlKTsNCg0KICB2YXIgY3VydmUgPSBlbGxpcHRpYy5jdXJ2ZXNbY3VydmVdLmN1cnZlOw0KICB0aGlzLmN1cnZlID0gY3VydmU7DQogIHRoaXMuZyA9IGN1cnZlLmc7DQogIHRoaXMuZy5wcmVjb21wdXRlKGN1cnZlLm4uYml0TGVuZ3RoKCkgKyAxKTsNCg0KICB0aGlzLnBvaW50Q2xhc3MgPSBjdXJ2ZS5wb2ludCgpLmNvbnN0cnVjdG9yOw0KICB0aGlzLmVuY29kaW5nTGVuZ3RoID0gTWF0aC5jZWlsKGN1cnZlLm4uYml0TGVuZ3RoKCkgLyA4KTsNCiAgdGhpcy5oYXNoID0gaGFzaC5zaGE1MTI7DQp9DQoNCm1vZHVsZS5leHBvcnRzID0gRUREU0E7DQoNCi8qKg0KKiBAcGFyYW0ge0FycmF5fFN0cmluZ30gbWVzc2FnZSAtIG1lc3NhZ2UgYnl0ZXMNCiogQHBhcmFtIHtBcnJheXxTdHJpbmd8S2V5UGFpcn0gc2VjcmV0IC0gc2VjcmV0IGJ5dGVzIG9yIGEga2V5cGFpcg0KKiBAcmV0dXJucyB7U2lnbmF0dXJlfSAtIHNpZ25hdHVyZQ0KKi8NCkVERFNBLnByb3RvdHlwZS5zaWduID0gZnVuY3Rpb24gc2lnbihtZXNzYWdlLCBzZWNyZXQpIHsNCiAgbWVzc2FnZSA9IHBhcnNlQnl0ZXMobWVzc2FnZSk7DQogIHZhciBrZXkgPSB0aGlzLmtleUZyb21TZWNyZXQoc2VjcmV0KTsNCiAgdmFyIHIgPSB0aGlzLmhhc2hJbnQoa2V5Lm1lc3NhZ2VQcmVmaXgoKSwgbWVzc2FnZSk7DQogIHZhciBSID0gdGhpcy5nLm11bChyKTsNCiAgdmFyIFJlbmNvZGVkID0gdGhpcy5lbmNvZGVQb2ludChSKTsNCiAgdmFyIHNfID0gdGhpcy5oYXNoSW50KFJlbmNvZGVkLCBrZXkucHViQnl0ZXMoKSwgbWVzc2FnZSkNCiAgICAgICAgICAgICAgIC5tdWwoa2V5LnByaXYoKSk7DQogIHZhciBTID0gci5hZGQoc18pLnVtb2QodGhpcy5jdXJ2ZS5uKTsNCiAgcmV0dXJuIHRoaXMubWFrZVNpZ25hdHVyZSh7IFI6IFIsIFM6IFMsIFJlbmNvZGVkOiBSZW5jb2RlZCB9KTsNCn07DQoNCi8qKg0KKiBAcGFyYW0ge0FycmF5fSBtZXNzYWdlIC0gbWVzc2FnZSBieXRlcw0KKiBAcGFyYW0ge0FycmF5fFN0cmluZ3xTaWduYXR1cmV9IHNpZyAtIHNpZyBieXRlcw0KKiBAcGFyYW0ge0FycmF5fFN0cmluZ3xQb2ludHxLZXlQYWlyfSBwdWIgLSBwdWJsaWMga2V5DQoqIEByZXR1cm5zIHtCb29sZWFufSAtIHRydWUgaWYgcHVibGljIGtleSBtYXRjaGVzIHNpZyBvZiBtZXNzYWdlDQoqLw0KRUREU0EucHJvdG90eXBlLnZlcmlmeSA9IGZ1bmN0aW9uIHZlcmlmeShtZXNzYWdlLCBzaWcsIHB1Yikgew0KICBtZXNzYWdlID0gcGFyc2VCeXRlcyhtZXNzYWdlKTsNCiAgc2lnID0gdGhpcy5tYWtlU2lnbmF0dXJlKHNpZyk7DQogIHZhciBrZXkgPSB0aGlzLmtleUZyb21QdWJsaWMocHViKTsNCiAgdmFyIGggPSB0aGlzLmhhc2hJbnQoc2lnLlJlbmNvZGVkKCksIGtleS5wdWJCeXRlcygpLCBtZXNzYWdlKTsNCiAgdmFyIFNHID0gdGhpcy5nLm11bChzaWcuUygpKTsNCiAgdmFyIFJwbHVzQWggPSBzaWcuUigpLmFkZChrZXkucHViKCkubXVsKGgpKTsNCiAgcmV0dXJuIFJwbHVzQWguZXEoU0cpOw0KfTsNCg0KRUREU0EucHJvdG90eXBlLmhhc2hJbnQgPSBmdW5jdGlvbiBoYXNoSW50KCkgew0KICB2YXIgaGFzaCA9IHRoaXMuaGFzaCgpOw0KICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykNCiAgICBoYXNoLnVwZGF0ZShhcmd1bWVudHNbaV0pOw0KICByZXR1cm4gdXRpbHMuaW50RnJvbUxFKGhhc2guZGlnZXN0KCkpLnVtb2QodGhpcy5jdXJ2ZS5uKTsNCn07DQoNCkVERFNBLnByb3RvdHlwZS5rZXlGcm9tUHVibGljID0gZnVuY3Rpb24ga2V5RnJvbVB1YmxpYyhwdWIpIHsNCiAgcmV0dXJuIEtleVBhaXIuZnJvbVB1YmxpYyh0aGlzLCBwdWIpOw0KfTsNCg0KRUREU0EucHJvdG90eXBlLmtleUZyb21TZWNyZXQgPSBmdW5jdGlvbiBrZXlGcm9tU2VjcmV0KHNlY3JldCkgew0KICByZXR1cm4gS2V5UGFpci5mcm9tU2VjcmV0KHRoaXMsIHNlY3JldCk7DQp9Ow0KDQpFRERTQS5wcm90b3R5cGUubWFrZVNpZ25hdHVyZSA9IGZ1bmN0aW9uIG1ha2VTaWduYXR1cmUoc2lnKSB7DQogIGlmIChzaWcgaW5zdGFuY2VvZiBTaWduYXR1cmUpDQogICAgcmV0dXJuIHNpZzsNCiAgcmV0dXJuIG5ldyBTaWduYXR1cmUodGhpcywgc2lnKTsNCn07DQoNCi8qKg0KKiAqIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9kcmFmdC1qb3NlZnNzb24tZWRkc2EtZWQyNTUxOS0wMyNzZWN0aW9uLTUuMg0KKg0KKiBFRERTQSBkZWZpbmVzIG1ldGhvZHMgZm9yIGVuY29kaW5nIGFuZCBkZWNvZGluZyBwb2ludHMgYW5kIGludGVnZXJzLiBUaGVzZSBhcmUNCiogaGVscGVyIGNvbnZlbmllbmNlIG1ldGhvZHMsIHRoYXQgcGFzcyBhbG9uZyB0byB1dGlsaXR5IGZ1bmN0aW9ucyBpbXBsaWVkDQoqIHBhcmFtZXRlcnMuDQoqDQoqLw0KRUREU0EucHJvdG90eXBlLmVuY29kZVBvaW50ID0gZnVuY3Rpb24gZW5jb2RlUG9pbnQocG9pbnQpIHsNCiAgdmFyIGVuYyA9IHBvaW50LmdldFkoKS50b0FycmF5KCdsZScsIHRoaXMuZW5jb2RpbmdMZW5ndGgpOw0KICBlbmNbdGhpcy5lbmNvZGluZ0xlbmd0aCAtIDFdIHw9IHBvaW50LmdldFgoKS5pc09kZCgpID8gMHg4MCA6IDA7DQogIHJldHVybiBlbmM7DQp9Ow0KDQpFRERTQS5wcm90b3R5cGUuZGVjb2RlUG9pbnQgPSBmdW5jdGlvbiBkZWNvZGVQb2ludChieXRlcykgew0KICBieXRlcyA9IHV0aWxzLnBhcnNlQnl0ZXMoYnl0ZXMpOw0KDQogIHZhciBsYXN0SXggPSBieXRlcy5sZW5ndGggLSAxOw0KICB2YXIgbm9ybWVkID0gYnl0ZXMuc2xpY2UoMCwgbGFzdEl4KS5jb25jYXQoYnl0ZXNbbGFzdEl4XSAmIH4weDgwKTsNCiAgdmFyIHhJc09kZCA9IChieXRlc1tsYXN0SXhdICYgMHg4MCkgIT09IDA7DQoNCiAgdmFyIHkgPSB1dGlscy5pbnRGcm9tTEUobm9ybWVkKTsNCiAgcmV0dXJuIHRoaXMuY3VydmUucG9pbnRGcm9tWSh5LCB4SXNPZGQpOw0KfTsNCg0KRUREU0EucHJvdG90eXBlLmVuY29kZUludCA9IGZ1bmN0aW9uIGVuY29kZUludChudW0pIHsNCiAgcmV0dXJuIG51bS50b0FycmF5KCdsZScsIHRoaXMuZW5jb2RpbmdMZW5ndGgpOw0KfTsNCg0KRUREU0EucHJvdG90eXBlLmRlY29kZUludCA9IGZ1bmN0aW9uIGRlY29kZUludChieXRlcykgew0KICByZXR1cm4gdXRpbHMuaW50RnJvbUxFKGJ5dGVzKTsNCn07DQoNCkVERFNBLnByb3RvdHlwZS5pc1BvaW50ID0gZnVuY3Rpb24gaXNQb2ludCh2YWwpIHsNCiAgcmV0dXJuIHZhbCBpbnN0YW5jZW9mIHRoaXMucG9pbnRDbGFzczsNCn07DQoNCn0seyIuLi8uLi9lbGxpcHRpYyI6NTA4LCIuL2tleSI6NTE5LCIuL3NpZ25hdHVyZSI6NTIwLCJoYXNoLmpzIjo1Mjd9XSw1MTk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQp2YXIgZWxsaXB0aWMgPSByZXF1aXJlKCcuLi8uLi9lbGxpcHRpYycpOw0KdmFyIHV0aWxzID0gZWxsaXB0aWMudXRpbHM7DQp2YXIgYXNzZXJ0ID0gdXRpbHMuYXNzZXJ0Ow0KdmFyIHBhcnNlQnl0ZXMgPSB1dGlscy5wYXJzZUJ5dGVzOw0KdmFyIGNhY2hlZFByb3BlcnR5ID0gdXRpbHMuY2FjaGVkUHJvcGVydHk7DQoNCi8qKg0KKiBAcGFyYW0ge0VERFNBfSBlZGRzYSAtIGluc3RhbmNlDQoqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgLSBwdWJsaWMvcHJpdmF0ZSBrZXkgcGFyYW1ldGVycw0KKg0KKiBAcGFyYW0ge0FycmF5PEJ5dGU+fSBbcGFyYW1zLnNlY3JldF0gLSBzZWNyZXQgc2VlZCBieXRlcw0KKiBAcGFyYW0ge1BvaW50fSBbcGFyYW1zLnB1Yl0gLSBwdWJsaWMga2V5IHBvaW50IChha2EgYEFgIGluIGVkZHNhIHRlcm1zKQ0KKiBAcGFyYW0ge0FycmF5PEJ5dGU+fSBbcGFyYW1zLnB1Yl0gLSBwdWJsaWMga2V5IHBvaW50IGVuY29kZWQgYXMgYnl0ZXMNCioNCiovDQpmdW5jdGlvbiBLZXlQYWlyKGVkZHNhLCBwYXJhbXMpIHsNCiAgdGhpcy5lZGRzYSA9IGVkZHNhOw0KICB0aGlzLl9zZWNyZXQgPSBwYXJzZUJ5dGVzKHBhcmFtcy5zZWNyZXQpOw0KICBpZiAoZWRkc2EuaXNQb2ludChwYXJhbXMucHViKSkNCiAgICB0aGlzLl9wdWIgPSBwYXJhbXMucHViOw0KICBlbHNlDQogICAgdGhpcy5fcHViQnl0ZXMgPSBwYXJzZUJ5dGVzKHBhcmFtcy5wdWIpOw0KfQ0KDQpLZXlQYWlyLmZyb21QdWJsaWMgPSBmdW5jdGlvbiBmcm9tUHVibGljKGVkZHNhLCBwdWIpIHsNCiAgaWYgKHB1YiBpbnN0YW5jZW9mIEtleVBhaXIpDQogICAgcmV0dXJuIHB1YjsNCiAgcmV0dXJuIG5ldyBLZXlQYWlyKGVkZHNhLCB7IHB1YjogcHViIH0pOw0KfTsNCg0KS2V5UGFpci5mcm9tU2VjcmV0ID0gZnVuY3Rpb24gZnJvbVNlY3JldChlZGRzYSwgc2VjcmV0KSB7DQogIGlmIChzZWNyZXQgaW5zdGFuY2VvZiBLZXlQYWlyKQ0KICAgIHJldHVybiBzZWNyZXQ7DQogIHJldHVybiBuZXcgS2V5UGFpcihlZGRzYSwgeyBzZWNyZXQ6IHNlY3JldCB9KTsNCn07DQoNCktleVBhaXIucHJvdG90eXBlLnNlY3JldCA9IGZ1bmN0aW9uIHNlY3JldCgpIHsNCiAgcmV0dXJuIHRoaXMuX3NlY3JldDsNCn07DQoNCmNhY2hlZFByb3BlcnR5KEtleVBhaXIsIGZ1bmN0aW9uIHB1YkJ5dGVzKCkgew0KICByZXR1cm4gdGhpcy5lZGRzYS5lbmNvZGVQb2ludCh0aGlzLnB1YigpKTsNCn0pOw0KDQpjYWNoZWRQcm9wZXJ0eShLZXlQYWlyLCBmdW5jdGlvbiBwdWIoKSB7DQogIGlmICh0aGlzLl9wdWJCeXRlcykNCiAgICByZXR1cm4gdGhpcy5lZGRzYS5kZWNvZGVQb2ludCh0aGlzLl9wdWJCeXRlcyk7DQogIHJldHVybiB0aGlzLmVkZHNhLmcubXVsKHRoaXMucHJpdigpKTsNCn0pOw0KDQpjYWNoZWRQcm9wZXJ0eShLZXlQYWlyLCBmdW5jdGlvbiBwcml2Qnl0ZXMoKSB7DQogIHZhciBlZGRzYSA9IHRoaXMuZWRkc2E7DQogIHZhciBoYXNoID0gdGhpcy5oYXNoKCk7DQogIHZhciBsYXN0SXggPSBlZGRzYS5lbmNvZGluZ0xlbmd0aCAtIDE7DQoNCiAgdmFyIGEgPSBoYXNoLnNsaWNlKDAsIGVkZHNhLmVuY29kaW5nTGVuZ3RoKTsNCiAgYVswXSAmPSAyNDg7DQogIGFbbGFzdEl4XSAmPSAxMjc7DQogIGFbbGFzdEl4XSB8PSA2NDsNCg0KICByZXR1cm4gYTsNCn0pOw0KDQpjYWNoZWRQcm9wZXJ0eShLZXlQYWlyLCBmdW5jdGlvbiBwcml2KCkgew0KICByZXR1cm4gdGhpcy5lZGRzYS5kZWNvZGVJbnQodGhpcy5wcml2Qnl0ZXMoKSk7DQp9KTsNCg0KY2FjaGVkUHJvcGVydHkoS2V5UGFpciwgZnVuY3Rpb24gaGFzaCgpIHsNCiAgcmV0dXJuIHRoaXMuZWRkc2EuaGFzaCgpLnVwZGF0ZSh0aGlzLnNlY3JldCgpKS5kaWdlc3QoKTsNCn0pOw0KDQpjYWNoZWRQcm9wZXJ0eShLZXlQYWlyLCBmdW5jdGlvbiBtZXNzYWdlUHJlZml4KCkgew0KICByZXR1cm4gdGhpcy5oYXNoKCkuc2xpY2UodGhpcy5lZGRzYS5lbmNvZGluZ0xlbmd0aCk7DQp9KTsNCg0KS2V5UGFpci5wcm90b3R5cGUuc2lnbiA9IGZ1bmN0aW9uIHNpZ24obWVzc2FnZSkgew0KICBhc3NlcnQodGhpcy5fc2VjcmV0LCAnS2V5UGFpciBjYW4gb25seSB2ZXJpZnknKTsNCiAgcmV0dXJuIHRoaXMuZWRkc2Euc2lnbihtZXNzYWdlLCB0aGlzKTsNCn07DQoNCktleVBhaXIucHJvdG90eXBlLnZlcmlmeSA9IGZ1bmN0aW9uIHZlcmlmeShtZXNzYWdlLCBzaWcpIHsNCiAgcmV0dXJuIHRoaXMuZWRkc2EudmVyaWZ5KG1lc3NhZ2UsIHNpZywgdGhpcyk7DQp9Ow0KDQpLZXlQYWlyLnByb3RvdHlwZS5nZXRTZWNyZXQgPSBmdW5jdGlvbiBnZXRTZWNyZXQoZW5jKSB7DQogIGFzc2VydCh0aGlzLl9zZWNyZXQsICdLZXlQYWlyIGlzIHB1YmxpYyBvbmx5Jyk7DQogIHJldHVybiB1dGlscy5lbmNvZGUodGhpcy5zZWNyZXQoKSwgZW5jKTsNCn07DQoNCktleVBhaXIucHJvdG90eXBlLmdldFB1YmxpYyA9IGZ1bmN0aW9uIGdldFB1YmxpYyhlbmMpIHsNCiAgcmV0dXJuIHV0aWxzLmVuY29kZSh0aGlzLnB1YkJ5dGVzKCksIGVuYyk7DQp9Ow0KDQptb2R1bGUuZXhwb3J0cyA9IEtleVBhaXI7DQoNCn0seyIuLi8uLi9lbGxpcHRpYyI6NTA4fV0sNTIwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCg0KdmFyIEJOID0gcmVxdWlyZSgnYm4uanMnKTsNCnZhciBlbGxpcHRpYyA9IHJlcXVpcmUoJy4uLy4uL2VsbGlwdGljJyk7DQp2YXIgdXRpbHMgPSBlbGxpcHRpYy51dGlsczsNCnZhciBhc3NlcnQgPSB1dGlscy5hc3NlcnQ7DQp2YXIgY2FjaGVkUHJvcGVydHkgPSB1dGlscy5jYWNoZWRQcm9wZXJ0eTsNCnZhciBwYXJzZUJ5dGVzID0gdXRpbHMucGFyc2VCeXRlczsNCg0KLyoqDQoqIEBwYXJhbSB7RUREU0F9IGVkZHNhIC0gZWRkc2EgaW5zdGFuY2UNCiogQHBhcmFtIHtBcnJheTxCeXRlcz58T2JqZWN0fSBzaWcgLQ0KKiBAcGFyYW0ge0FycmF5PEJ5dGVzPnxQb2ludH0gW3NpZy5SXSAtIFIgcG9pbnQgYXMgUG9pbnQgb3IgYnl0ZXMNCiogQHBhcmFtIHtBcnJheTxCeXRlcz58Ym59IFtzaWcuU10gLSBTIHNjYWxhciBhcyBibiBvciBieXRlcw0KKiBAcGFyYW0ge0FycmF5PEJ5dGVzPn0gW3NpZy5SZW5jb2RlZF0gLSBSIHBvaW50IGVuY29kZWQNCiogQHBhcmFtIHtBcnJheTxCeXRlcz59IFtzaWcuU2VuY29kZWRdIC0gUyBzY2FsYXIgZW5jb2RlZA0KKi8NCmZ1bmN0aW9uIFNpZ25hdHVyZShlZGRzYSwgc2lnKSB7DQogIHRoaXMuZWRkc2EgPSBlZGRzYTsNCg0KICBpZiAodHlwZW9mIHNpZyAhPT0gJ29iamVjdCcpDQogICAgc2lnID0gcGFyc2VCeXRlcyhzaWcpOw0KDQogIGlmIChBcnJheS5pc0FycmF5KHNpZykpIHsNCiAgICBzaWcgPSB7DQogICAgICBSOiBzaWcuc2xpY2UoMCwgZWRkc2EuZW5jb2RpbmdMZW5ndGgpLA0KICAgICAgUzogc2lnLnNsaWNlKGVkZHNhLmVuY29kaW5nTGVuZ3RoKQ0KICAgIH07DQogIH0NCg0KICBhc3NlcnQoc2lnLlIgJiYgc2lnLlMsICdTaWduYXR1cmUgd2l0aG91dCBSIG9yIFMnKTsNCg0KICBpZiAoZWRkc2EuaXNQb2ludChzaWcuUikpDQogICAgdGhpcy5fUiA9IHNpZy5SOw0KICBpZiAoc2lnLlMgaW5zdGFuY2VvZiBCTikNCiAgICB0aGlzLl9TID0gc2lnLlM7DQoNCiAgdGhpcy5fUmVuY29kZWQgPSBBcnJheS5pc0FycmF5KHNpZy5SKSA/IHNpZy5SIDogc2lnLlJlbmNvZGVkOw0KICB0aGlzLl9TZW5jb2RlZCA9IEFycmF5LmlzQXJyYXkoc2lnLlMpID8gc2lnLlMgOiBzaWcuU2VuY29kZWQ7DQp9DQoNCmNhY2hlZFByb3BlcnR5KFNpZ25hdHVyZSwgZnVuY3Rpb24gUygpIHsNCiAgcmV0dXJuIHRoaXMuZWRkc2EuZGVjb2RlSW50KHRoaXMuU2VuY29kZWQoKSk7DQp9KTsNCg0KY2FjaGVkUHJvcGVydHkoU2lnbmF0dXJlLCBmdW5jdGlvbiBSKCkgew0KICByZXR1cm4gdGhpcy5lZGRzYS5kZWNvZGVQb2ludCh0aGlzLlJlbmNvZGVkKCkpOw0KfSk7DQoNCmNhY2hlZFByb3BlcnR5KFNpZ25hdHVyZSwgZnVuY3Rpb24gUmVuY29kZWQoKSB7DQogIHJldHVybiB0aGlzLmVkZHNhLmVuY29kZVBvaW50KHRoaXMuUigpKTsNCn0pOw0KDQpjYWNoZWRQcm9wZXJ0eShTaWduYXR1cmUsIGZ1bmN0aW9uIFNlbmNvZGVkKCkgew0KICByZXR1cm4gdGhpcy5lZGRzYS5lbmNvZGVJbnQodGhpcy5TKCkpOw0KfSk7DQoNClNpZ25hdHVyZS5wcm90b3R5cGUudG9CeXRlcyA9IGZ1bmN0aW9uIHRvQnl0ZXMoKSB7DQogIHJldHVybiB0aGlzLlJlbmNvZGVkKCkuY29uY2F0KHRoaXMuU2VuY29kZWQoKSk7DQp9Ow0KDQpTaWduYXR1cmUucHJvdG90eXBlLnRvSGV4ID0gZnVuY3Rpb24gdG9IZXgoKSB7DQogIHJldHVybiB1dGlscy5lbmNvZGUodGhpcy50b0J5dGVzKCksICdoZXgnKS50b1VwcGVyQ2FzZSgpOw0KfTsNCg0KbW9kdWxlLmV4cG9ydHMgPSBTaWduYXR1cmU7DQoNCn0seyIuLi8uLi9lbGxpcHRpYyI6NTA4LCJibi5qcyI6NTl9XSw1MjE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnOw0KDQp2YXIgaGFzaCA9IHJlcXVpcmUoJ2hhc2guanMnKTsNCnZhciBlbGxpcHRpYyA9IHJlcXVpcmUoJy4uL2VsbGlwdGljJyk7DQp2YXIgdXRpbHMgPSBlbGxpcHRpYy51dGlsczsNCnZhciBhc3NlcnQgPSB1dGlscy5hc3NlcnQ7DQoNCmZ1bmN0aW9uIEhtYWNEUkJHKG9wdGlvbnMpIHsNCiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIEhtYWNEUkJHKSkNCiAgICByZXR1cm4gbmV3IEhtYWNEUkJHKG9wdGlvbnMpOw0KICB0aGlzLmhhc2ggPSBvcHRpb25zLmhhc2g7DQogIHRoaXMucHJlZFJlc2lzdCA9ICEhb3B0aW9ucy5wcmVkUmVzaXN0Ow0KDQogIHRoaXMub3V0TGVuID0gdGhpcy5oYXNoLm91dFNpemU7DQogIHRoaXMubWluRW50cm9weSA9IG9wdGlvbnMubWluRW50cm9weSB8fCB0aGlzLmhhc2guaG1hY1N0cmVuZ3RoOw0KDQogIHRoaXMucmVzZWVkID0gbnVsbDsNCiAgdGhpcy5yZXNlZWRJbnRlcnZhbCA9IG51bGw7DQogIHRoaXMuSyA9IG51bGw7DQogIHRoaXMuViA9IG51bGw7DQoNCiAgdmFyIGVudHJvcHkgPSB1dGlscy50b0FycmF5KG9wdGlvbnMuZW50cm9weSwgb3B0aW9ucy5lbnRyb3B5RW5jKTsNCiAgdmFyIG5vbmNlID0gdXRpbHMudG9BcnJheShvcHRpb25zLm5vbmNlLCBvcHRpb25zLm5vbmNlRW5jKTsNCiAgdmFyIHBlcnMgPSB1dGlscy50b0FycmF5KG9wdGlvbnMucGVycywgb3B0aW9ucy5wZXJzRW5jKTsNCiAgYXNzZXJ0KGVudHJvcHkubGVuZ3RoID49ICh0aGlzLm1pbkVudHJvcHkgLyA4KSwNCiAgICAgICAgICdOb3QgZW5vdWdoIGVudHJvcHkuIE1pbmltdW0gaXM6ICcgKyB0aGlzLm1pbkVudHJvcHkgKyAnIGJpdHMnKTsNCiAgdGhpcy5faW5pdChlbnRyb3B5LCBub25jZSwgcGVycyk7DQp9DQptb2R1bGUuZXhwb3J0cyA9IEhtYWNEUkJHOw0KDQpIbWFjRFJCRy5wcm90b3R5cGUuX2luaXQgPSBmdW5jdGlvbiBpbml0KGVudHJvcHksIG5vbmNlLCBwZXJzKSB7DQogIHZhciBzZWVkID0gZW50cm9weS5jb25jYXQobm9uY2UpLmNvbmNhdChwZXJzKTsNCg0KICB0aGlzLksgPSBuZXcgQXJyYXkodGhpcy5vdXRMZW4gLyA4KTsNCiAgdGhpcy5WID0gbmV3IEFycmF5KHRoaXMub3V0TGVuIC8gOCk7DQogIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5WLmxlbmd0aDsgaSsrKSB7DQogICAgdGhpcy5LW2ldID0gMHgwMDsNCiAgICB0aGlzLlZbaV0gPSAweDAxOw0KICB9DQoNCiAgdGhpcy5fdXBkYXRlKHNlZWQpOw0KICB0aGlzLnJlc2VlZCA9IDE7DQogIHRoaXMucmVzZWVkSW50ZXJ2YWwgPSAweDEwMDAwMDAwMDAwMDA7ICAvLyAyXjQ4DQp9Ow0KDQpIbWFjRFJCRy5wcm90b3R5cGUuX2htYWMgPSBmdW5jdGlvbiBobWFjKCkgew0KICByZXR1cm4gbmV3IGhhc2guaG1hYyh0aGlzLmhhc2gsIHRoaXMuSyk7DQp9Ow0KDQpIbWFjRFJCRy5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uIHVwZGF0ZShzZWVkKSB7DQogIHZhciBrbWFjID0gdGhpcy5faG1hYygpDQogICAgICAgICAgICAgICAgIC51cGRhdGUodGhpcy5WKQ0KICAgICAgICAgICAgICAgICAudXBkYXRlKFsgMHgwMCBdKTsNCiAgaWYgKHNlZWQpDQogICAga21hYyA9IGttYWMudXBkYXRlKHNlZWQpOw0KICB0aGlzLksgPSBrbWFjLmRpZ2VzdCgpOw0KICB0aGlzLlYgPSB0aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikuZGlnZXN0KCk7DQogIGlmICghc2VlZCkNCiAgICByZXR1cm47DQoNCiAgdGhpcy5LID0gdGhpcy5faG1hYygpDQogICAgICAgICAgICAgICAudXBkYXRlKHRoaXMuVikNCiAgICAgICAgICAgICAgIC51cGRhdGUoWyAweDAxIF0pDQogICAgICAgICAgICAgICAudXBkYXRlKHNlZWQpDQogICAgICAgICAgICAgICAuZGlnZXN0KCk7DQogIHRoaXMuViA9IHRoaXMuX2htYWMoKS51cGRhdGUodGhpcy5WKS5kaWdlc3QoKTsNCn07DQoNCkhtYWNEUkJHLnByb3RvdHlwZS5yZXNlZWQgPSBmdW5jdGlvbiByZXNlZWQoZW50cm9weSwgZW50cm9weUVuYywgYWRkLCBhZGRFbmMpIHsNCiAgLy8gT3B0aW9uYWwgZW50cm9weSBlbmMNCiAgaWYgKHR5cGVvZiBlbnRyb3B5RW5jICE9PSAnc3RyaW5nJykgew0KICAgIGFkZEVuYyA9IGFkZDsNCiAgICBhZGQgPSBlbnRyb3B5RW5jOw0KICAgIGVudHJvcHlFbmMgPSBudWxsOw0KICB9DQoNCiAgZW50cm9weSA9IHV0aWxzLnRvQnVmZmVyKGVudHJvcHksIGVudHJvcHlFbmMpOw0KICBhZGQgPSB1dGlscy50b0J1ZmZlcihhZGQsIGFkZEVuYyk7DQoNCiAgYXNzZXJ0KGVudHJvcHkubGVuZ3RoID49ICh0aGlzLm1pbkVudHJvcHkgLyA4KSwNCiAgICAgICAgICdOb3QgZW5vdWdoIGVudHJvcHkuIE1pbmltdW0gaXM6ICcgKyB0aGlzLm1pbkVudHJvcHkgKyAnIGJpdHMnKTsNCg0KICB0aGlzLl91cGRhdGUoZW50cm9weS5jb25jYXQoYWRkIHx8IFtdKSk7DQogIHRoaXMucmVzZWVkID0gMTsNCn07DQoNCkhtYWNEUkJHLnByb3RvdHlwZS5nZW5lcmF0ZSA9IGZ1bmN0aW9uIGdlbmVyYXRlKGxlbiwgZW5jLCBhZGQsIGFkZEVuYykgew0KICBpZiAodGhpcy5yZXNlZWQgPiB0aGlzLnJlc2VlZEludGVydmFsKQ0KICAgIHRocm93IG5ldyBFcnJvcignUmVzZWVkIGlzIHJlcXVpcmVkJyk7DQoNCiAgLy8gT3B0aW9uYWwgZW5jb2RpbmcNCiAgaWYgKHR5cGVvZiBlbmMgIT09ICdzdHJpbmcnKSB7DQogICAgYWRkRW5jID0gYWRkOw0KICAgIGFkZCA9IGVuYzsNCiAgICBlbmMgPSBudWxsOw0KICB9DQoNCiAgLy8gT3B0aW9uYWwgYWRkaXRpb25hbCBkYXRhDQogIGlmIChhZGQpIHsNCiAgICBhZGQgPSB1dGlscy50b0FycmF5KGFkZCwgYWRkRW5jKTsNCiAgICB0aGlzLl91cGRhdGUoYWRkKTsNCiAgfQ0KDQogIHZhciB0ZW1wID0gW107DQogIHdoaWxlICh0ZW1wLmxlbmd0aCA8IGxlbikgew0KICAgIHRoaXMuViA9IHRoaXMuX2htYWMoKS51cGRhdGUodGhpcy5WKS5kaWdlc3QoKTsNCiAgICB0ZW1wID0gdGVtcC5jb25jYXQodGhpcy5WKTsNCiAgfQ0KDQogIHZhciByZXMgPSB0ZW1wLnNsaWNlKDAsIGxlbik7DQogIHRoaXMuX3VwZGF0ZShhZGQpOw0KICB0aGlzLnJlc2VlZCsrOw0KICByZXR1cm4gdXRpbHMuZW5jb2RlKHJlcywgZW5jKTsNCn07DQoNCn0seyIuLi9lbGxpcHRpYyI6NTA4LCJoYXNoLmpzIjo1Mjd9XSw1MjI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHMgPSB7DQogIGRvdWJsZXM6IHsNCiAgICBzdGVwOiA0LA0KICAgIHBvaW50czogWw0KICAgICAgWw0KICAgICAgICAnZTYwZmNlOTNiNTllOWVjNTMwMTFhYWJjMjFjMjNlOTdiMmEzMTM2OWI4N2E1YWU5YzQ0ZWU4OWUyYTZkZWMwYScsDQogICAgICAgICdmN2UzNTA3Mzk5ZTU5NTkyOWRiOTlmMzRmNTc5MzcxMDEyOTY4OTFlNDRkMjNmMGJlMWYzMmNjZTY5NjE2ODIxJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzgyODIyNjMyMTJjNjA5ZDllYTJhNmUzZTE3MmRlMjM4ZDhjMzljYWJkNWFjMWNhMTA2NDZlMjNmZDVmNTE1MDgnLA0KICAgICAgICAnMTFmOGE4MDk4NTU3ZGZlNDVlODI1NmU4MzBiNjBhY2U2MmQ2MTNhYzJmN2IxN2JlZDMxYjZlYWZmNmUyNmNhZicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICcxNzVlMTU5ZjcyOGI4NjVhNzJmOTljYzZjNmZjODQ2ZGUwYjkzODMzZmQyMjIyZWQ3M2ZjZTViNTUxZTViNzM5JywNCiAgICAgICAgJ2QzNTA2ZTBkOWUzYzc5ZWJhNGVmOTdhNTFmZjcxZjVlYWNiNTk1NWFkZDI0MzQ1YzZlZmE2ZmZlZTlmZWQ2OTUnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMzYzZDkwZDQ0N2IwMGM5Yzk5Y2VhYzA1YjYyNjJlZTA1MzQ0MWM3ZTU1NTUyZmZlNTI2YmFkOGY4M2ZmNDY0MCcsDQogICAgICAgICc0ZTI3M2FkZmM3MzIyMjE5NTNiNDQ1Mzk3ZjMzNjMxNDViOWE4OTAwODE5OWVjYjYyMDAzYzdmM2JlZTlkZTknDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnOGI0YjVmMTY1ZGYzYzJiZThjNjI0NGI1Yjc0NTYzODg0M2U0YTc4MWExNWJjZDFiNjlmNzlhNTVkZmZkZjgwYycsDQogICAgICAgICc0YWFkMGE2ZjY4ZDMwOGI0YjNmYmQ3ODEzYWIwZGEwNGY5ZTMzNjU0NjE2MmVlNTZiM2VmZjBjNjVmZDRmZDM2Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzcyM2NiYWE2ZTVkYjk5NmQ2YmY3NzFjMDBiZDU0OGM3YjcwMGRiZmZhNmMwZTc3YmNiNjExNTkyNTIzMmZjZGEnLA0KICAgICAgICAnOTZlODY3YjU1OTVjYzQ5OGE5MjExMzc0ODg4MjRkNmUyNjYwYTA2NTM3Nzk0OTQ4MDFkYzA2OWQ5ZWIzOWY1ZicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdlZWJmYTRkNDkzYmViZjk4YmE1ZmVlYzgxMmMyZDNiNTA5NDc5NjEyMzdhOTE5ODM5YTUzM2VjYTBlN2RkN2ZhJywNCiAgICAgICAgJzVkOWE4Y2EzOTcwZWYwZjI2OWVlN2VkYWYxNzgwODlkOWFlNGNkYzNhNzExZjcxMmRkZmQ0ZmRhZTFkZTg5OTknDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMTAwZjQ0ZGE2OTZlNzE2NzI3OTFkMGEwOWI3YmRlNDU5ZjEyMTVhMjliM2MwM2JmZWZkNzgzNWIzOWE0OGRiMCcsDQogICAgICAgICdjZGQ5ZTEzMTkyYTAwYjc3MmVjOGYzMzAwYzA5MDY2NmI3ZmY0YTE4ZmY1MTk1YWMwZmJkNWNkNjJiYzY1YTA5Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2UxMDMxYmUyNjJjN2VkMWIxZGM5MjI3YTRhMDRjMDE3YTc3ZjhkNDQ2NGYzYjM4NTJjOGFjZGU2ZTUzNGZkMmQnLA0KICAgICAgICAnOWQ3MDYxOTI4OTQwNDA1ZTZiYjZhNDE3NjU5NzUzNWFmMjkyZGQ0MTllMWNlZDc5YTQ0ZjE4ZjI5NDU2YTAwZCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdmZWVhNmNhZTQ2ZDU1YjUzMGFjMjgzOWYxNDNiZDdlYzVjZjhiMjY2YTQxZDZhZjUyZDVlNjg4ZDkwOTQ2OTZkJywNCiAgICAgICAgJ2U1N2M2YjZjOTdkY2UxYmFiMDZlNGUxMmJmM2VjZDVjOTgxYzg5NTdjYzQxNDQyZDMxNTVkZWJmMTgwOTAwODgnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZGE2N2E5MWQ5MTA0OWNkY2IzNjdiZTRiZTZmZmNhM2NmZWVkNjU3ZDgwODU4M2RlMzNmYTk3OGJjMWVjNmNiMScsDQogICAgICAgICc5YmFjYWEzNTQ4MTY0MmJjNDFmNDYzZjdlYzk3ODBlNWRlYzdhZGM1MDhmNzQwYTE3ZTllYThlMjdhNjhiZTFkJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzUzOTA0ZmFhMGIzMzRjZGRhNmUwMDA5MzVlZjIyMTUxZWMwOGQwZjdiYjExMDY5ZjU3NTQ1Y2NjMWEzN2I3YzAnLA0KICAgICAgICAnNWJjMDg3ZDBiYzgwMTA2ZDg4YzllY2NhYzIwZDNjMWMxMzk5OTk4MWUxNDQzNDY5OWRjYjA5NmIwMjI3NzFjOCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc4ZTdiY2QwYmQzNTk4M2E3NzE5Y2NhNzc2NGNhOTA2Nzc5YjUzYTA0M2E5YjhiY2FlZmY5NTlmNDNhZDg2MDQ3JywNCiAgICAgICAgJzEwYjc3NzBiMmEzZGE0YjM5NDAzMTA0MjBjYTk1MTQ1NzllODhlMmU0N2ZkNjhiM2VhMTAwNDdlODQ2MDM3MmEnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMzg1ZWVkMzRjMWNkZmYyMWU2ZDA4MTg2ODliODFiZGU3MWE3ZjRmMTgzOTdlNjY5MGE4NDFlMTU5OWM0Mzg2MicsDQogICAgICAgICcyODNiZWJjM2U4ZWEyM2Y1NjcwMWRlMTllOWViZjQ1NzZiMzA0ZWVjMjA4NmRjOGNjMDQ1OGZlNTU0MmU1NDUzJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzZmOWQ5YjgwM2VjZjE5MTYzN2M3M2E0NDEzZGZhMTgwZmRkZjg0YTU5NDdmYmM5YzYwNmVkODZjM2ZhYzNhNycsDQogICAgICAgICc3YzgwYzY4ZTYwMzA1OWJhNjliOGUyYTMwZTQ1YzRkNDdlYTRkZDJmNWMyODEwMDJkODY4OTA2MDNhODQyMTYwJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzMzMjJkNDAxMjQzYzRlMjU4MmEyMTQ3YzEwNGQ2ZWNiZjc3NGQxNjNkYjBmNWU1MzEzYjdlMGU3NDJkMGU2YmQnLA0KICAgICAgICAnNTZlNzA3OTdlOTY2NGVmNWJmYjAxOWJjNGRkYWY5YjcyODA1ZjYzZWEyODczYWY2MjRmM2EyZTk2YzI4YjJhMCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc4NTY3MmM3ZDJkZTBiN2RhMmJkMTc3MGQ4OTY2NTg2ODc0MWIzZjlhZjc2NDMzOTc3MjFkNzRkMjgxMzRhYjgzJywNCiAgICAgICAgJzdjNDgxYjliNWI0M2IyZWI2Mzc0MDQ5YmZhNjJjMmU1ZTc3ZjE3ZmNjNTI5OGY0NGM4ZTMwOTRmNzkwMzEzYTYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnOTQ4YmY4MDliMTk4OGE0NmIwNmM5ZjE5MTk0MTNiMTBmOTIyNmM2MGY2Njg4MzJmZmQ5NTlhZjYwYzgyYTBhJywNCiAgICAgICAgJzUzYTU2Mjg1NmRjYjY2NDZkYzZiNzRjNWQxYzM0MThjNmQ0ZGZmMDhjOTdjZDJiZWQ0Y2I3Zjg4ZDhjOGU1ODknDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnNjI2MGNlN2Y0NjE4MDFjMzRmMDY3Y2UwZjAyODczYThmMWIwZTQ0ZGZjNjk3NTJhY2NlY2Q4MTlmMzhmZDhlOCcsDQogICAgICAgICdiYzJkYTgyYjZmYTViNTcxYTdmMDkwNDk3NzZhMWVmN2VjZDI5MjIzODA1MWMxOThjMWE4NGU5NWIyYjRhZTE3Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2U1MDM3ZGUwYWZjMWQ4ZDQzZDgzNDg0MTRiYmY0MTAzMDQzZWM4ZjU3NWJmZGM0MzI5NTNjYzhkMjAzN2ZhMmQnLA0KICAgICAgICAnNDU3MTUzNGJhYTk0ZDNiNWY5Zjk4ZDA5ZmI5OTBiZGRiZDVmNWIwM2VjNDgxZjEwZTBlNWRjODQxZDc1NWJkYScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdlMDYzNzJiMGY0YTIwN2FkZjVlYTkwNWU4ZjE3NzFiNGU3ZThkYmQxYzZhNmM1YjcyNTg2NmEwYWU0ZmNlNzI1JywNCiAgICAgICAgJzdhOTA4OTc0YmNlMThjZmUxMmEyN2JiMmFkNWE0ODhjZDc0ODRhNzc4NzEwNDg3MGIyNzAzNGY5NGVlZTMxZGQnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMjEzYzdhNzE1Y2Q1ZDQ1MzU4ZDBiYmY5ZGMwY2UwMjIwNGIxMGJkZGUyYTNmNTg1NDBhZDY5MDhkMDU1OTc1NCcsDQogICAgICAgICc0YjZkYWQwYjVhZTQ2MjUwNzAxM2FkMDYyNDViYTE5MGJiNDg1MGY1ZjM2YTdlZWRkZmYyYzI3NTM0YjQ1OGYyJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzRlN2MyNzJhN2FmNGIzNGU4ZGJiOTM1MmE1NDE5YTg3ZTI4MzhjNzBhZGM2MmNkZGYwY2MzYTNiMDhmYmQ1M2MnLA0KICAgICAgICAnMTc3NDljNzY2YzlkMGIxOGUxNmZkMDlmNmRlZjY4MWI1MzBiOTYxNGJmZjdkZDMzZTBiMzk0MTgxN2RjYWFlNicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdmZWE3NGUzZGJlNzc4YjFiMTBmMjM4YWQ2MTY4NmFhNWM3NmUzZGIyYmU0MzA1NzYzMjQyN2UyODQwZmIyN2I2JywNCiAgICAgICAgJzZlMDU2OGRiOWIwYjEzMjk3Y2Y2NzRkZWNjYjZhZjkzMTI2YjU5NmI5NzNmN2I3NzcwMWQzZGI3ZjIzY2I5NmYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnNzZlNjQxMTNmNjc3Y2YwZTEwYTI1NzBkNTk5OTY4ZDMxNTQ0ZTE3OWI3NjA0MzI5NTJjMDJhNDQxN2JkZGUzOScsDQogICAgICAgICdjOTBkZGY4ZGVlNGU5NWNmNTc3MDY2ZDcwNjgxZjBkMzVlMmEzM2QyYjU2ZDIwMzJiNGIxNzUyZDE5MDFhYzAxJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2M3MzhjNTZiMDNiMmFiZTFlODI4MWJhYTc0M2Y4ZjlhOGY3Y2M2NDNkZjI2Y2JlZTNhYjE1MDI0MmJjYmI4OTEnLA0KICAgICAgICAnODkzZmI1Nzg5NTFhZDI1MzdmNzE4ZjJlYWNiZmJiYmI4MjMxNGVlZjc4ODBjZmU5MTdlNzM1ZDk2OTlhODRjMycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdkODk1NjI2NTQ4YjY1YjgxZTI2NGM3NjM3Yzk3Mjg3N2QxZDcyZTVmM2E5MjUwMTQzNzJlOWY2NTg4ZjZjMTRiJywNCiAgICAgICAgJ2ZlYmZhYTM4ZjJiYzdlYWU3MjhlYzYwODE4YzM0MGViMDM0MjhkNjMyYmIwNjdlMTc5MzYzZWQ3NWQ3ZDk5MWYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnYjhkYTk0MDMyYTk1NzUxOGViMGY2NDMzNTcxZTg3NjFjZWZmYzczNjkzZTg0ZWRkNDkxNTBhNTY0ZjY3NmUwMycsDQogICAgICAgICcyODA0ZGZhNDQ4MDVhMWU0ZDdjOTljYzk3NjI4MDhiMDkyY2M1ODRkOTVmZjNiNTExNDg4ZTRlNzRlZmRmNmU3Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2U4MGZlYTE0NDQxZmIzM2E3ZDhhZGFiOTQ3NWQ3ZmFiMjAxOWVmZmI1MTU2YTc5MmYxYTExNzc4ZTNjMGRmNWQnLA0KICAgICAgICAnZWVkMWRlN2Y2MzhlMDA3NzFlODk3NjhjYTNjYTk0NDcyZDE1NWU4MGFmMzIyZWE5ZmNiNDI5MWI2YWM5ZWM3OCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdhMzAxNjk3YmRmY2Q3MDQzMTNiYTQ4ZTUxZDU2NzU0M2YyYTE4MjAzMWVmZDY5MTVkZGMwN2JiY2M0ZTE2MDcwJywNCiAgICAgICAgJzczNzBmOTFjZmI2N2U0ZjUwODE4MDlmYTI1ZDQwZjliMTczNWRiZjdjMGExMWExMzBjMGQxYTA0MWUxNzdlYTEnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnOTBhZDg1YjM4OWQ2YjkzNjQ2M2Y5ZDA1MTI2NzhkZTIwOGNjMzMwYjExMzA3ZmZmYWI3YWM2M2UzZmIwNGVkNCcsDQogICAgICAgICdlNTA3YTM2MjBhMzgyNjFhZmZkY2JkOTQyNzIyMmI4MzlhZWZhYmUxNTgyODk0ZDk5MWQ0ZDQ4Y2I2ZWYxNTAnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnOGY2OGI5ZDJmNjNiNWYzMzkyMzljMWFkOTgxZjE2MmVlODhjNTY3ODcyM2VhMzM1MWI3YjQ0NGM5ZWM0YzBkYScsDQogICAgICAgICc2NjJhOWYyZGJhMDYzOTg2ZGUxZDkwYzJiNmJlMjE1ZGJiZWEyY2ZlOTU1MTBiZmRmMjNjYmY3OTUwMWZmZjgyJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2U0ZjNmYjAxNzZhZjg1ZDY1ZmY5OWZmOTE5OGMzNjA5MWY0OGU4NjUwMzY4MWUzZTY2ODZmZDUwNTMyMzFlMTEnLA0KICAgICAgICAnMWU2MzYzM2FkMGVmNGYxYzE2NjFhNmQwZWEwMmI3Mjg2Y2M3ZTc0ZWM5NTFkMWM5ODIyYzM4NTc2ZmViNzNiYycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc4YzAwZmE5YjE4ZWJmMzMxZWI5NjE1MzdhNDVhNDI2NmM3MDM0ZjJmMGQ0ZTFkMDcxNmZiNmVhZTIwZWFlMjllJywNCiAgICAgICAgJ2VmYTQ3MjY3ZmVhNTIxYTFhOWRjMzQzYTM3MzZjOTc0YzJmYWRhZmE4MWUzNmM1NGU3ZDJhNGM2NjcwMjQxNGInDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZTdhMjZjZTY5ZGQ0ODI5ZjNlMTBjZWMwYTllOThlZDMxNDNkMDg0ZjMwOGI5MmMwOTk3ZmRkZmM2MGNiM2U0MScsDQogICAgICAgICcyYTc1OGUzMDBmYTc5ODRiNDcxYjAwNmExYWFmYmIxOGQwYTZiMmMwNDIwZTgzZTIwZThhOTQyMWNmMmNmZDUxJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2I2NDU5ZTBlZTM2NjJlYzhkMjM1NDBjMjIzYmNiZGM1NzFjYmNiOTY3ZDc5NDI0ZjNjZjI5ZWIzZGU2YjgwZWYnLA0KICAgICAgICAnNjdjODc2ZDA2ZjNlMDZkZTFkYWRmMTZlNTY2MWRiM2M0YjNhZTZkNDhlMzViMmZmMzBiZjBiNjFhNzFiYTQ1Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2Q2OGE4MGM4MjgwYmI4NDA3OTMyMzRhYTExOGYwNjIzMWQ2ZjFmYzY3ZTczYzVhNWRlZGEwZjViNDk2OTQzZTgnLA0KICAgICAgICAnZGI4YmE5ZmZmNGI1ODZkMDBjNGIxZjkxNzdiMGUyOGI1YjBlN2I4Zjc4NDUyOTVhMjk0Yzg0MjY2YjEzMzEyMCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICczMjRhZWQ3ZGY2NWM4MDQyNTJkYzAyNzA5MDdhMzBiMDk2MTJhZWI5NzM0NDljZWE0MDk1OTgwZmMyOGQzZDVkJywNCiAgICAgICAgJzY0OGEzNjU3NzRiNjFmMmZmMTMwYzBjMzVhZWMxZjRmMTkyMTNiMGM3ZTMzMjg0Mzk2NzIyNGFmOTZhYjdjODQnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnNGRmOWMxNDkxOWNkZTYxZjZkNTFkZmRiZTVmZWU1ZGNlZWM0MTQzYmE4ZDFjYTg4OGU4YmQzNzNmZDA1NGM5NicsDQogICAgICAgICczNWVjNTEwOTJkODcyODA1MDk3NGMyM2ExZDg1ZDRiNWQ1MDZjZGMyODg0OTAxOTJlYmFjMDZjYWQxMGQ1ZCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc5YzM5MTlhODRhNDc0ODcwZmFlZDhhOWMxY2M2NjAyMTUyMzQ4OTA1NGQ3ZjAzMDhjYmZjOTljOGFjMWY5OGNkJywNCiAgICAgICAgJ2RkYjg0ZjBmNGE0ZGRkNTc1ODRmMDQ0YmYyNjBlNjQxOTA1MzI2Zjc2YzY0YzhlNmJlN2U1ZTAzZDRmYzU5OWQnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnNjA1NzE3MGIxZGQxMmZkZjhkZTA1ZjI4MWQ4ZTA2YmI5MWUxNDkzYThiOTFkNGNjNWEyMTM4MjEyMGE5NTllNScsDQogICAgICAgICc5YTFhZjBiMjZhNmE0ODA3YWRkOWEyZGFmNzFkZjI2MjQ2NTE1MmJjM2VlMjRjNjVlODk5YmU5MzIzODVhMmE4Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2E1NzZkZjhlMjNhMDg0MTE0MjE0MzlhNDUxOGRhMzE4ODBjZWYwZmJhN2Q0ZGYxMmIxYTY5NzNlZWNiOTQyNjYnLA0KICAgICAgICAnNDBhNmJmMjBlNzY2NDBiMmM5MmI5N2FmZTU4Y2Q4MmM0MzJlMTBhN2Y1MTRkOWYzZWU4YmUxMWFlMWIyOGVjOCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc3Nzc4YTc4YzI4ZGVjM2UzMGEwNWZlOTYyOWRlOGMzOGJiMzBkMWY1Y2Y5YTNhMjA4Zjc2Mzg4OWJlNThhZDcxJywNCiAgICAgICAgJzM0NjI2ZDlhYjVhNWIyMmZmNzA5OGUxMmYyZmY1ODAwODdiMzg0MTFmZjI0YWM1NjNiNTEzZmMxZmQ5ZjQzYWMnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnOTI4OTU1ZWU2MzdhODQ0NjM3MjlmZDMwZTdhZmQyZWQ1Zjk2Mjc0ZTVhZDdlNWNiMDllZGE5YzA2ZDkwM2FjJywNCiAgICAgICAgJ2MyNTYyMTAwM2QzZjQyYTgyN2I3OGExMzA5M2E5NWVlYWMzZDI2ZWZhOGE4ZDgzZmM1MTgwZTkzNWJjZDA5MWYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnODVkMGZlZjNlYzZkYjEwOTM5OTA2NGYzYTBlM2IyODU1NjQ1YjRhOTA3YWQzNTQ1MjdhYWU3NTE2M2Q4Mjc1MScsDQogICAgICAgICcxZjAzNjQ4NDEzYTM4YzBiZTI5ZDQ5NmU1ODJjZjU2NjNlODc1MWU5Njg3NzMzMTU4MmMyMzdhMjRlYjFmOTYyJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2ZmMmIwZGNlOTdlZWNlOTdjMWM5YjYwNDE3OThiODVkZmRmYjZkODg4MmRhMjAzMDhmNTQwNDgyNDUyNjA4N2UnLA0KICAgICAgICAnNDkzZDEzZmVmNTI0YmExODhhZjRjNGRjNTRkMDc5MzZjN2I3ZWQ2ZmI5MGUyY2ViMmM5NTFlMDFmMGMyOTkwNycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc4MjdmYmJlNGIxZTg4MGVhOWVkMmIyZTYzMDFiMjEyYjU3ZjFlZTE0OGNkNmRkMjg3ODBlNWUyY2Y4NTZlMjQxJywNCiAgICAgICAgJ2M2MGY5YzkyM2M3MjdiMGI3MWJlZjJjNjdkMWQxMjY4N2ZmN2E2MzE4NjkwMzE2NmQ2MDViNjhiYWVjMjkzZWMnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZWFhNjQ5ZjIxZjUxYmRiYWU3YmU0YWUzNGNlNmU1MjE3YTU4ZmRjZTdmNDdmOWFhN2YzYjU4ZmEyMTIwZTJiMycsDQogICAgICAgICdiZTMyNzllZDViYmJiMDNhYzY5YTgwZjg5ODc5YWE1YTAxYTZiOTY1ZjEzZjdlNTlkNDdhNTMwNWJhNWFkOTNkJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2U0YTQyZDQzYzVjZjE2OWQ5MzkxZGY2ZGVjZjQyZWU1NDFiNmQ4ZjBjOWExMzc0MDFlMjM2MzJkZGEzNGQyNGYnLA0KICAgICAgICAnNGQ5ZjkyZTcxNmQxYzczNTI2ZmM5OWNjZmI4YWQzNGNlODg2ZWVkZmE4ZDhlNGYxM2E3ZjcxMzFkZWJhOTQxNCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICcxZWM4MGZlZjM2MGNiZGQ5NTQxNjBmYWRhYjM1MmI2YjkyYjUzNTc2YTg4ZmVhNDk0NzE3M2I5ZDQzMDBiZjE5JywNCiAgICAgICAgJ2FlZWZlOTM3NTZiNTM0MGQyZjNhNDk1OGE3YWJiZjVlMDE0NmU3N2Y2Mjk1YTA3YjY3MWNkYzFjYzEwN2NlZmQnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMTQ2YTc3OGMwNDY3MGMyZjkxYjAwYWY0NjgwZGZhOGJjZTM0OTA3MTdkNThiYTg4OWRkYjU5MjgzNjY2NDJiZScsDQogICAgICAgICdiMzE4ZTBlYzMzNTQwMjhhZGQ2Njk4MjdmOWQ0YjI4NzBhYWE5NzFkMmY3ZTVlZDFkMGIyOTc0ODNkODNlZmQwJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2ZhNTBjMGY2MWQyMmU1ZjA3ZTNhY2ViYjFhYTA3YjEyOGQwMDEyMjA5YTI4Yjk3NzZkNzZhODc5MzE4MGVlZjknLA0KICAgICAgICAnNmI4NGM2OTIyMzk3ZWJhOWI3MmNkMjg3MjI4MWE2OGE1ZTY4MzI5M2E1N2EyMTNiMzhjZDhkN2QzZjRmMjgxMScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdkYTFkNjFkMGNhNzIxYTExYjFhNWJmNmI3ZDg4ZTg0MjFhMjg4YWI1ZDViYmE1MjIwZTUzZDMyYjVmMDY3ZWMyJywNCiAgICAgICAgJzgxNTdmNTVhN2M5OTMwNmM3OWMwNzY2MTYxYzkxZTI5NjZhNzM4OTlkMjc5YjQ4YTY1NWZiYTBmMWFkODM2ZjEnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnYThlMjgyZmYwYzk3MDY5MDcyMTVmZjk4ZThmZDQxNjYxNTMxMWRlMDQ0NmYxZTA2MmE3M2IwNjEwZDA2NGUxMycsDQogICAgICAgICc3Zjk3MzU1YjhkYjgxYzA5YWJmYjdmM2M1YjI1MTU4ODhiNjc5YTNlNTBkZDZiZDZjZWY3YzczMTExZjRjYzBjJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzE3NGE1M2I5YzlhMjg1ODcyZDM5ZTU2ZTY5MTNjYWIxNWQ1OWIxZmE1MTI1MDhjMDIyZjM4MmRlODMxOTQ5N2MnLA0KICAgICAgICAnY2NjOWRjMzdhYmZjOWMxNjU3YjQxNTVmMmM0N2Y5ZTY2NDZiM2ExZDhjYjk4NTQzODNkYTEzYWMwNzlhZmE3MycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc5NTkzOTY5ODE5NDM3ODVjM2QzZTU3ZWRmNTAxOGNkYmUwMzllNzMwZTQ5MThiM2Q4ODRmZGZmMDk0NzViN2JhJywNCiAgICAgICAgJzJlN2U1NTI4ODhjMzMxZGQ4YmEwMzg2YTRiOWNkNjg0OWM2NTNmNjRjODcwOTM4NWU5YjhhYmY4NzUyNGYyZmQnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZDJhNjNhNTBhZTQwMWU1NmQ2NDVhMTE1M2IxMDlhOGZjY2EwYTQzZDU2MWZiYTJkYmI1MTM0MGM5ZDgyYjE1MScsDQogICAgICAgICdlODJkODZmYjY0NDNmY2I3NTY1YWVlNThiMjk0ODIyMGE3MGY3NTBhZjQ4NGNhNTJkNDE0MjE3NGRjZjg5NDA1Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzY0NTg3ZTIzMzU0NzFlYjg5MGVlNzg5NmQ3Y2ZkYzg2NmJhY2JkYmQzODM5MzE3YjM0MzZmOWI0NTYxN2UwNzMnLA0KICAgICAgICAnZDk5ZmNkZDViZjY5MDJlMmFlOTZkZDY0NDdjMjk5YTE4NWI5MGEzOTEzM2FlYWIzNTgyOTllNWU5ZmFmNjU4OScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc4NDgxYmRlMGU0ZTRkODg1YjNhNTQ2ZDNlNTQ5ZGUwNDJmMGFhNmNlYTI1MGU3ZmQzNThkNmM4NmRkNDVlNDU4JywNCiAgICAgICAgJzM4ZWU3YjhjYmE1NDA0ZGQ4NGEyNWJmMzljZWNiMmNhOTAwYTc5YzQyYjI2MmU1NTZkNjRiMWI1OTc3OTA1N2UnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMTM0NjRhNTdhNzgxMDJhYTYyYjY5NzlhZTgxN2Y0NjM3ZmZjZmVkM2M0YjFjZTMwYmNkNjMwM2Y2Y2FmNjY2YicsDQogICAgICAgICc2OWJlMTU5MDA0NjE0NTgwZWY3ZTQzMzQ1M2NjYjBjYTQ4ZjMwMGE4MWQwOTQyZTEzZjQ5NWE5MDdmNmVjYzI3Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2JjNGE5ZGY1YjcxM2ZlMmU5YWVmNDMwYmNjMWRjOTdhMGNkOWNjZWRlMmYyODU4OGNhZGEzYTBkMmQ4M2YzNjYnLA0KICAgICAgICAnZDNhODFjYTZlNzg1YzA2MzgzOTM3YWRmNGI3OThjYWE2ZThhOWZiZmE1NDdiMTZkNzU4ZDY2NjU4MWYzM2MxJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzhjMjhhOTdiZjgyOThiYzBkMjNkOGM3NDk0NTJhMzJlNjk0YjY1ZTMwYTk0NzJhMzk1NGFiMzBmZTUzMjRjYWEnLA0KICAgICAgICAnNDBhMzA0NjNhMzMwNTE5MzM3OGZlZGYzMWY3Y2MwZWI3YWU3ODRmMDQ1MWNiOTQ1OWU3MWRjNzNjYmVmOTQ4MicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc4ZWE5NjY2MTM5NTI3YThjMWRkOTRjZTRmMDcxZmQyM2M4YjM1MGM1YTRiYjMzNzQ4YzRiYTExMWZhY2NhZTAnLA0KICAgICAgICAnNjIwZWZhYmJjOGVlMjc4MmUyNGU3YzBjZmI5NWM1ZDczNWI3ODNiZTljZjBmOGU5NTVhZjM0YTMwZTYyYjk0NScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdkZDM2MjVmYWVmNWJhMDYwNzQ2Njk3MTZiYmQzNzg4ZDg5YmRkZTgxNTk1OTk2ODA5MmY3NmNjNGViOWE5Nzg3JywNCiAgICAgICAgJzdhMTg4ZmEzNTIwZTMwZDQ2MWRhMjUwMTA0NTczMWNhOTQxNDYxOTgyODgzMzk1OTM3ZjY4ZDAwYzY0NGE1NzMnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZjcxMGQ3OWQ5ZWI5NjIyOTdlNGY2MjMyYjQwZThmN2ZlYjJiYzYzODE0NjE0ZDY5MmMxMmRlNzUyNDA4MjIxZScsDQogICAgICAgICdlYTk4ZTY3MjMyZDNiMzI5NWQzYjUzNTUzMjExNWNjYWM4NjEyYzcyMTg1MTYxNzUyNmFlNDdhOWM3N2JmYzgyJw0KICAgICAgXQ0KICAgIF0NCiAgfSwNCiAgbmFmOiB7DQogICAgd25kOiA3LA0KICAgIHBvaW50czogWw0KICAgICAgWw0KICAgICAgICAnZjkzMDhhMDE5MjU4YzMxMDQ5MzQ0Zjg1Zjg5ZDUyMjliNTMxYzg0NTgzNmY5OWIwODYwMWYxMTNiY2UwMzZmOScsDQogICAgICAgICczODhmN2IwZjYzMmRlODE0MGZlMzM3ZTYyYTM3ZjM1NjY1MDBhOTk5MzRjMjIzMWI2Y2I5ZmQ3NTg0YjhlNjcyJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzJmOGJkZTRkMWEwNzIwOTM1NWI0YTcyNTBhNWM1MTI4ZTg4Yjg0YmRkYzYxOWFiN2NiYThkNTY5YjI0MGVmZTQnLA0KICAgICAgICAnZDhhYzIyMjYzNmU1ZTNkNmQ0ZGJhOWRkYTZjOWM0MjZmNzg4MjcxYmFiMGQ2ODQwZGNhODdkM2FhNmFjNjJkNicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc1Y2JkZjA2NDZlNWRiNGVhYTM5OGYzNjVmMmVhN2EwZTNkNDE5YjdlMDMzMGUzOWNlOTJiZGRlZGNhYzRmOWJjJywNCiAgICAgICAgJzZhZWJjYTQwYmEyNTU5NjBhMzE3OGQ2ZDg2MWE1NGRiYTgxM2QwYjgxM2ZkZTdiNWE1MDgyNjI4MDg3MjY0ZGEnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnYWNkNDg0ZTJmMGM3ZjY1MzA5YWQxNzhhOWY1NTlhYmRlMDk3OTY5NzRjNTdlNzE0YzM1ZjExMGRmYzI3Y2NiZScsDQogICAgICAgICdjYzMzODkyMWIwYTdkOWZkNjQzODA5NzE3NjNiNjFlOWFkZDg4OGE0Mzc1ZjhlMGYwNWNjMjYyYWM2NGY5YzM3Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzc3NGFlN2Y4NThhOTQxMWU1ZWY0MjQ2YjcwYzY1YWFjNTY0OTk4MGJlNWMxNzg5MWJiZWMxNzg5NWRhMDA4Y2InLA0KICAgICAgICAnZDk4NGEwMzJlYjZiNWUxOTAyNDNkZDU2ZDdiN2IzNjUzNzJkYjFlMmRmZjlkNmE4MzAxZDc0YzljOTUzYzYxYicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdmMjg3NzNjMmQ5NzUyODhiYzdkMWQyMDVjMzc0ODY1MWIwNzVmYmM2NjEwZTU4Y2RkZWVkZGY4ZjE5NDA1YWE4JywNCiAgICAgICAgJ2FiMDkwMmU4ZDg4MGE4OTc1ODIxMmViNjVjZGFmNDczYTFhMDZkYTUyMWZhOTFmMjliNWNiNTJkYjAzZWQ4MScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdkNzkyNGQ0ZjdkNDNlYTk2NWE0NjVhZTMwOTVmZjQxMTMxZTU5NDZmM2M4NWY3OWU0NGFkYmNmOGUyN2UwODBlJywNCiAgICAgICAgJzU4MWUyODcyYTg2YzcyYTY4Mzg0MmVjMjI4Y2M2ZGVmZWE0MGFmMmJkODk2ZDNhNWM1MDRkYzlmZjZhMjZiNTgnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZGVmZGVhNGNkYjY3Nzc1MGE0MjBmZWU4MDdlYWNmMjFlYjk4OThhZTc5Yjk3Njg3NjZlNGZhYTA0YTJkNGEzNCcsDQogICAgICAgICc0MjExYWIwNjk0NjM1MTY4ZTk5N2IwZWFkMmE5M2RhZWNlZDFmNGEwNGE5NWMwZjZjZmIxOTlmNjllNTZlYjc3Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzJiNGVhMGE3OTdhNDQzZDI5M2VmNWNmZjQ0NGY0OTc5ZjA2YWNmZWJkN2U4NmQyNzc0NzU2NTYxMzgzODViNmMnLA0KICAgICAgICAnODVlODliYzAzNzk0NWQ5M2IzNDMwODNiNWExYzg2MTMxYTAxZjYwYzUwMjY5NzYzYjU3MGM4NTRlNWMwOWI3YScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICczNTJiYmY0YTRjZGQxMjU2NGY5M2ZhMzMyY2UzMzMzMDFkOWFkNDAyNzFmODEwNzE4MTM0MGFlZjI1YmU1OWQ1JywNCiAgICAgICAgJzMyMWViNDA3NTM0OGY1MzRkNTljMTgyNTlkZGEzZTFmNGExYjNiMmU3MWIxMDM5YzY3YmQzZDhiY2Y4MTk5OGMnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMmZhMjEwNGQ2YjM4ZDExYjAyMzAwMTA1NTk4NzkxMjRlNDJhYjhkZmVmZjVmZjI5ZGM5Y2RhZGQ0ZWNhY2MzZicsDQogICAgICAgICcyZGUxMDY4Mjk1ZGQ4NjViNjQ1NjkzMzViZDVkZDgwMTgxZDcwZWNmYzg4MjY0ODQyM2JhNzZiNTMyYjdkNjcnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnOTI0ODI3OWIwOWI0ZDY4ZGFiMjFhOWIwNjZlZGRhODMyNjNjM2Q4NGUwOTU3MmUyNjljYTBjZDdmNTQ1MzcxNCcsDQogICAgICAgICc3MzAxNmY3YmYyMzRhYWRlNWQxYWE3MWJkZWEyYjFmZjNmYzBkZTJhODg3OTEyZmZlNTRhMzJjZTk3Y2IzNDAyJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2RhZWQ0ZjJiZTNhOGJmMjc4ZTcwMTMyZmIwYmViNzUyMmY1NzBlMTQ0YmY2MTVjMDdlOTk2ZDQ0M2RlZTg3MjknLA0KICAgICAgICAnYTY5ZGNlNGE3ZDZjOThlOGQ0YTFhY2E4N2VmOGQ3MDAzZjgzYzIzMGYzYWZhNzI2YWI0MGU1MjI5MGJlMWM1NScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdjNDRkMTJjNzA2NWQ4MTJlOGFjZjI4ZDdjYmIxOWY5MDExZWNkOWU5ZmRmMjgxYjBlNmEzYjVlODdkMjJlN2RiJywNCiAgICAgICAgJzIxMTlhNDYwY2UzMjZjZGM3NmM0NTkyNmM5ODJmZGFjMGUxMDZlODYxZWRmNjFjNWEwMzkwNjNmMGUwZTY0ODInDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnNmEyNDViZjZkYzY5ODUwNGM4OWEyMGNmZGVkNjA4NTMxNTJiNjk1MzM2YzI4MDYzYjYxYzY1Y2JkMjY5ZTZiNCcsDQogICAgICAgICdlMDIyY2Y0MmMyYmQ0YTcwOGIzZjUxMjZmMTZhMjRhZDhiMzNiYTQ4ZDA0MjNiNmVmZDVlNjM0ODEwMGQ4YTgyJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzE2OTdmZmE2ZmQ5ZGU2MjdjMDc3ZTNkMmZlNTQxMDg0Y2UxMzMwMGIwYmVjMTE0NmY5NWFlNTdmMGQwYmQ2YTUnLA0KICAgICAgICAnYjljMzk4ZjE4NjgwNmY1ZDI3NTYxNTA2ZTQ1NTc0MzNhMmNmMTUwMDllNDk4YWU3YWRlZTlkNjNkMDFiMjM5NicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc2MDViZGIwMTk5ODE3MThiOTg2ZDBmMDdlODM0Y2IwZDlkZWI4MzYwZmZiN2Y2MWRmOTgyMzQ1ZWYyN2E3NDc5JywNCiAgICAgICAgJzI5NzJkMmRlNGY4ZDIwNjgxYTc4ZDkzZWM5NmZlMjNjMjZiZmFlODRmYjE0ZGI0M2IwMWUxZTkwNTZiOGM0OScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc2MmQxNGRhYjQxNTBiZjQ5NzQwMmZkYzQ1YTIxNWUxMGRjYjAxYzM1NDk1OWIxMGNmZTMxYzdlOWQ4N2ZmMzNkJywNCiAgICAgICAgJzgwZmMwNmJkOGNjNWIwMTA5ODA4OGExOTUwZWVkMGRiMDFhYTEzMjk2N2FiNDcyMjM1ZjU2NDI0ODNiMjVlYWYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnODBjNjBhZDAwNDBmMjdkYWRlNWI0YjA2YzQwOGU1NmIyYzUwZTlmNTZiOWI4YjQyNWU1NTVjMmY4NjMwOGI2ZicsDQogICAgICAgICcxYzM4MzAzZjFjYzVjMzBmMjZlNjZiYWQ3ZmU3MmY3MGE2NWVlZDRjYmU3MDI0ZWIxYWEwMWY1NjQzMGJkNTdhJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzdhOTM3NWFkNjE2N2FkNTRhYTc0YzYzNDhjYzU0ZDM0NGNjNWRjOTQ4N2Q4NDcwNDlkNWVhYmIwZmEwM2M4ZmInLA0KICAgICAgICAnZDBlM2ZhOWVjYTg3MjY5MDk1NTllMGQ3OTI2OTA0NmJkYzU5ZWExMGM3MGNlMmIwMmQ0OTllYzIyNGRjN2Y3Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2Q1MjhlY2Q5YjY5NmI1NGM5MDdhOWVkMDQ1NDQ3YTc5YmI0MDhlYzM5YjY4ZGY1MDRiYjUxZjQ1OWJjM2ZmYzknLA0KICAgICAgICAnZWVjZjQxMjUzMTM2ZTVmOTk5NjZmMjE4ODFmZDY1NmViYzQzNDU0MDVjNTIwZGJjMDYzNDY1YjUyMTQwOTkzMycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc0OTM3MGE0YjVmNDM0MTJlYTI1ZjUxNGU4ZWNkYWQwNTI2NjExNWU0YTdlY2IxMzg3MjMxODA4ZjhiNDU5NjMnLA0KICAgICAgICAnNzU4ZjNmNDFhZmQ2ZWQ0MjhiMzA4MWIwNTEyZmQ2MmE1NGMzZjNhZmJiNWI2NzY0YjY1MzA1MmExMjk0OWM5YScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc3N2YyMzA5MzZlZTg4Y2JiZDczZGY5MzBkNjQ3MDJlZjg4MWQ4MTFlMGUxNDk4ZTJmMWMxM2ViMWZjMzQ1ZDc0JywNCiAgICAgICAgJzk1OGVmNDJhNzg4NmI2NDAwYTA4MjY2ZTliYTFiMzc4OTZjOTUzMzBkOTcwNzdjYmJlOGViM2M3NjcxYzYwZDYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZjJkYWM5OTFjYzRjZTRiOWVhNDQ4ODdlNWM3YzBiY2U1OGM4MDA3NGFiOWQ0ZGJhZWIyODUzMWI3NzM5ZjUzMCcsDQogICAgICAgICdlMGRlZGM5YjNiMmY4ZGFkNGRhMWYzMmRlYzI1MzFkZjllYjVmYmViMDU5OGU0ZmQxYTExN2RiYTcwM2EzYzM3Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzQ2M2IzZDlmNjYyNjIxZmIxYjRiZThmYmJlMjUyMDEyNWEyMTZjZGZjOWRhZTNkZWJjYmE0ODUwYzY5MGQ0NWInLA0KICAgICAgICAnNWVkNDMwZDc4YzI5NmMzNTQzMTE0MzA2ZGQ4NjIyZDdjNjIyZTI3Yzk3MGExZGUzMWNiMzc3YjAxYWY3MzA3ZScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdmMTZmODA0MjQ0ZTQ2ZTJhMDkyMzJkNGFmZjNiNTk5NzZiOThmYWMxNDMyOGEyZDFhMzI0OTZiNDk5OThmMjQ3JywNCiAgICAgICAgJ2NlZGFiZDliODIyMDNmN2UxM2QyMDZmY2RmNGUzM2Q5MmE2YzUzYzI2ZTVjY2UyNmQ2NTc5OTYyYzRlMzFkZjYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnY2FmNzU0MjcyZGM4NDU2M2IwMzUyYjdhMTQzMTFhZjU1ZDI0NTMxNWFjZTI3YzY1MzY5ZTE1ZjcxNTFkNDFkMScsDQogICAgICAgICdjYjQ3NDY2MGVmMzVmNWYyYTQxYjY0M2ZhNWU0NjA1NzVmNGZhOWI3OTYyMjMyYTVjMzJmOTA4MzE4YTA0NDc2Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzI2MDBjYTRiMjgyY2I5ODZmODVkMGYxNzA5OTc5ZDhiNDRhMDljMDdjYjg2ZDdjMTI0NDk3YmM4NmYwODIxMjAnLA0KICAgICAgICAnNDExOWI4ODc1M2MxNWJkNmE2OTNiMDNmY2RkYmI0NWQ1YWM2YmU3NGFiNWYwZWY0NGIwYmU5NDc1YTdlNGI0MCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc3NjM1Y2E3MmQ3ZTg0MzJjMzM4ZWM1M2NkMTIyMjBiYzAxYzQ4Njg1ZTI0ZjdkYzhjNjAyYTc3NDY5OThlNDM1JywNCiAgICAgICAgJzkxYjY0OTYwOTQ4OWQ2MTNkMWQ1ZTU5MGY3OGU2ZDc0ZWNmYzA2MWQ1NzA0OGJhZDllNzZmMzAyYzViOWM2MScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc3NTRlMzIzOWYzMjU1NzBjZGJiZjRhODdkZWVlOGE2NmI3ZjJiMzM0NzlkNDY4ZmJjMWE1MDc0M2JmNTZjYzE4JywNCiAgICAgICAgJzY3M2ZiODZlNWJkYTMwZmIzY2QwZWQzMDRlYTQ5YTAyM2VlMzNkMDE5N2E2OTVkMGM1ZDk4MDkzYzUzNjY4MycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdlM2U2YmQxMDcxYTFlOTZhZmY1Nzg1OWM4MmQ1NzBmMDMzMDgwMDY2MWQxYzk1MmY5ZmUyNjk0NjkxZDliOWU4JywNCiAgICAgICAgJzU5YzllMGJiYTM5NGU3NmY0MGMwYWE1ODM3OWEzY2I2YTVhMjI4Mzk5M2U5MGM0MTY3MDAyYWY0OTIwZTM3ZjUnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMTg2YjQ4M2QwNTZhMDMzODI2YWU3M2Q4OGY3MzI5ODVjNGNjYjFmMzJiYTM1ZjRiNGNjNDdmZGNmMDRhYTZlYicsDQogICAgICAgICczYjk1MmQzMmM2N2NmNzdlMmUxNzQ0NmUyMDQxODBhYjIxZmI4MDkwODk1MTM4YjRhNGE3OTdmODZlODA4ODhiJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2RmOWQ3MGE2Yjk4NzZjZTU0NGM5ODU2MWY0YmU0ZjcyNTQ0MmU2ZDJiNzM3ZDljOTFhODMyMTcyNGNlMDk2M2YnLA0KICAgICAgICAnNTVlYjJkYWZkODRkNmNjZDVmODYyYjc4NWRjMzlkNGFiMTU3MjIyNzIwZWY5ZGEyMTdiOGM0NWNmMmJhMjQxNycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc1ZWRkNWNjMjNjNTFlODdhNDk3Y2E4MTVkNWRjZTBmOGFiNTI1NTRmODQ5ZWQ4OTk1ZGU2NGM1ZjM0Y2U3MTQzJywNCiAgICAgICAgJ2VmYWU5YzhkYmMxNDEzMDY2MWU4Y2VjMDMwYzg5YWQwYzEzYzY2YzBkMTdhMjkwNWNkYzcwNmFiNzM5OWE4NjgnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMjkwNzk4YzJiNjQ3NjgzMGRhMTJmZTAyMjg3ZTllNzc3YWEzZmJhMWMzNTViMTdhNzIyZDM2MmY4NDYxNGZiYScsDQogICAgICAgICdlMzhkYTc2ZGNkNDQwNjIxOTg4ZDAwYmNmNzlhZjI1ZDViMjljMDk0ZGIyYTIzMTQ2ZDAwM2FmZDQxOTQzZTdhJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2FmM2M0MjNhOTVkOWY1YjMwNTQ3NTRlZmExNTBhYzM5Y2QyOTU1MmZlMzYwMjU3MzYyZGZkZWNlZjQwNTNiNDUnLA0KICAgICAgICAnZjk4YTNmZDgzMWViMmI3NDlhOTNiMGU2ZjM1Y2ZiNDBjOGNkNWFhNjY3YTE1NTgxYmMyZmVkZWQ0OThmZDljNicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc3NjZkYmIyNGQxMzRlNzQ1Y2NjYWEyOGM5OWJmMjc0OTA2YmI2NmIyNmRjZjk4ZGY4ZDJmZWQ1MGQ4ODQyNDlhJywNCiAgICAgICAgJzc0NGIxMTUyZWFjYmU1ZTM4ZGNjODg3OTgwZGEzOGI4OTc1ODRhNjVmYTA2Y2VkZDJjOTI0Zjk3Y2JhYzU5OTYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnNTlkYmY0NmY4Yzk0NzU5YmEyMTI3N2MzMzc4NGY0MTY0NWY3YjQ0ZjZjNTk2YTU4Y2U5MmU2NjYxOTFhYmUzZScsDQogICAgICAgICdjNTM0YWQ0NDE3NWZiYzMwMGY0ZWE2Y2U2NDgzMDlhMDQyY2U3MzlhNzkxOTc5OGNkODVlMjE2YzRhMzA3ZjZlJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2YxM2FkYTk1MTAzYzQ1MzczMDVlNjkxZTc0ZTlhNGE4ZGQ2NDdlNzExYTk1ZTczY2I2MmRjNjAxOGNmZDg3YjgnLA0KICAgICAgICAnZTEzODE3YjQ0ZWUxNGRlNjYzYmY0YmM4MDgzNDFmMzI2OTQ5ZTIxYTZhNzVjMjU3MDc3ODQxOWJkYWY1NzMzZCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc3NzU0YjRmYTBlOGFjZWQwNmQ0MTY3YTJjNTljY2E0Y2RhMTg2OWMwNmViYWRmYjY0ODg1NTAwMTVhODg1MjJjJywNCiAgICAgICAgJzMwZTkzZTg2NGU2NjlkODIyMjRiOTY3YzMwMjBiOGZhOGQxZTRlMzUwYjZjYmNjNTM3YTQ4YjU3ODQxMTYzYTInDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnOTQ4ZGNhZGY1OTkwZTA0OGFhMzg3NGQ0NmFiZWY5ZDcwMTg1OGY5NWRlODA0MWQyYTY4MjhjOTllMjI2MjUxOScsDQogICAgICAgICdlNDkxYTQyNTM3ZjZlNTk3ZDVkMjhhMzIyNGIxYmMyNWRmOTE1NGVmYmQyZWYxZDJjYmJhMmNhZTUzNDdkNTdlJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzc5NjI0MTQ0NTBjNzZjMTY4OWM3YjQ4ZjgyMDJlYzM3ZmIyMjRjZjVhYzBiZmExNTcwMzI4YThhM2Q3Yzc3YWInLA0KICAgICAgICAnMTAwYjYxMGVjNGZmYjQ3NjBkNWMxZmMxMzNlZjZmNmIxMjUwN2EwNTFmMDRhYzU3NjBhZmE1YjI5ZGI4MzQzNycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICczNTE0MDg3ODM0OTY0YjU0YjE1YjE2MDY0NGQ5MTU0ODVhMTY5NzcyMjViODg0N2JiMGRkMDg1MTM3ZWM0N2NhJywNCiAgICAgICAgJ2VmMGFmYmIyMDU2MjA1NDQ4ZTE2NTJjNDhlODEyN2ZjNjAzOWU3N2MxNWMyMzc4YjdlN2QxNWEwZGUyOTMzMTEnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZDNjYzMwYWQ2YjQ4M2U0YmM3OWNlMmM5ZGQ4YmM1NDk5M2U5NDdlYjhkZjc4N2I0NDI5NDNkM2Y3YjUyN2VhZicsDQogICAgICAgICc4YjM3OGEyMmQ4MjcyNzhkODljNWU5YmU4Zjk1MDhhZTNjMmFkNDYyOTAzNTg2MzBhZmIzNGRiMDRlZWRlMGE0Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzE2MjRkODQ3ODA3MzI4NjBjZTFjNzhmY2JmZWZlMDhiMmIyOTgyM2RiOTEzZjY0OTM5NzViYTBmZjQ4NDc2MTAnLA0KICAgICAgICAnNjg2NTFjZjliNmRhOTAzZTA5MTQ0NDhjNmNkOWQ0Y2E4OTY4NzhmNTI4MmJlNGM4Y2MwNmUyYTQwNDA3ODU3NScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc3MzNjZTgwZGE5NTVhOGEyNjkwMmM5NTYzM2U2MmE5ODUxOTI0NzRiNWFmMjA3ZGE2ZGY3YjRmZDVmYzYxY2Q0JywNCiAgICAgICAgJ2Y1NDM1YTJiZDJiYWRmN2Q0ODVhNGQ4YjhkYjlmY2NlM2UxZWY4ZTAyMDFlNDU3OGM1NDY3M2JjMWRjNWVhMWQnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMTVkOTQ0MTI1NDk0NTA2NGNmMWExYzMzYmJkM2I0OWY4OTY2YzUwOTIxNzFlNjk5ZWYyNThkZmFiODFjMDQ1YycsDQogICAgICAgICdkNTZlYjMwYjY5NDYzZTcyMzRmNTEzN2I3M2I4NDE3NzQzNDgwMGJhY2ViZmM2ODVmYzM3YmJlOWVmZTQwNzBkJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2ExZDBmY2YyZWM5ZGU2NzViNjEyMTM2ZTVjZTcwZDI3MWMyMTQxN2M5ZDJiOGFhYWFjMTM4NTk5ZDA3MTc5NDAnLA0KICAgICAgICAnZWRkNzdmNTBiY2I1YTNjYWIyZTkwNzM3MzA5NjY3ZjI2NDE0NjJhNTQwNzBmM2Q1MTkyMTJkMzljMTk3YTYyOScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdlMjJmYmUxNWMwYWY4Y2NjNTc4MGMwNzM1Zjg0ZGJlOWE3OTBiYWRlZTgyNDVjMDZjN2NhMzczMzFjYjM2OTgwJywNCiAgICAgICAgJ2E4NTViYWJhZDVjZDYwYzg4YjQzMGE2OWY1M2ExYTdhMzgyODkxNTQ5NjQ3OTliZTQzZDA2ZDc3ZDMxZGEwNicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICczMTEwOTFkZDk4NjBlOGUyMGVlMTM0NzNjMTE1NWY1ZjY5NjM1ZTM5NDcwNGVhYTc0MDA5NDUyMjQ2Y2ZhOWIzJywNCiAgICAgICAgJzY2ZGI2NTZmODdkMWYwNGZmZmQxZjA0Nzg4YzA2ODMwODcxZWM1YTY0ZmVlZTY4NWJkODBmMGIxMjg2ZDgzNzQnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMzRjMWZkMDRkMzAxYmU4OWIzMWMwNDQyZDNlNmFjMjQ4ODM5MjhiNDVhOTM0MDc4MTg2N2Q0MjMyZWMyZGJkZicsDQogICAgICAgICc5NDE0Njg1ZTk3YjFiNTk1NGJkNDZmNzMwMTc0MTM2ZDU3ZjFjZWViNDg3NDQzZGM1MzIxODU3YmE3M2FiZWUnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZjIxOWVhNWQ2YjU0NzAxYzFjMTRkZTViNTU3ZWI0MmE4ZDEzZjNhYmJjZDA4YWZmY2MyYTVlNmIwNDliOGQ2MycsDQogICAgICAgICc0Y2I5NTk1N2U4M2Q0MGIwZjczYWY0NTQ0Y2NjZjZiMWY0YjA4ZDNjMDdiMjdmYjhkOGMyOTYyYTQwMDc2NmQxJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2Q3Yjg3NDBmNzRhOGZiYWFiMWY2ODNkYjhmNDVkZTI2NTQzYTU0OTBiY2E2MjcwODcyMzY5MTI0NjlhMGI0NDgnLA0KICAgICAgICAnZmE3Nzk2ODEyOGQ5YzkyZWUxMDEwZjMzN2FkNDcxN2VmZjE1ZGI1ZWQzYzA0OWIzNDExZTAzMTVlYWE0NTkzYicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICczMmQzMWMyMjJmOGY2ZjBlZjg2ZjdjOThkM2EzMzM1ZWFkNWJjZDMyYWJkZDk0Mjg5ZmU0ZDMwOTFhYTgyNGJmJywNCiAgICAgICAgJzVmMzAzMmY1ODkyMTU2ZTM5Y2NkM2Q3OTE1YjllMWRhMmU2ZGFjOWU2ZjI2ZTk2MTExOGQxNGI4NDYyZTE2NjEnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnNzQ2MWYzNzE5MTRhYjMyNjcxMDQ1YTE1NWQ5ODMxZWE4NzkzZDc3Y2Q1OTU5MmM0MzQwZjg2Y2JjMTgzNDdiNScsDQogICAgICAgICc4ZWMwYmEyMzhiOTZiZWMwY2JkZGRjYWUwYWE0NDI1NDJlZWUxZmY1MGM5ODZlYTZiMzk4NDdiM2NjMDkyZmY2Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2VlMDc5YWRiMWRmMTg2MDA3NDM1NmEyNWFhMzgyMDZhNmQ3MTZiMmMzZTY3NDUzZDI4NzY5OGJhZDdiMmIyZDYnLA0KICAgICAgICAnOGRjMjQxMmFhZmUzYmU1YzRjNWYzN2UwZWNjNWY5ZjZhNDQ2OTg5YWYwNGM0ZTI1ZWJhYWM0NzllYzFjOGMxZScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICcxNmVjOTNlNDQ3ZWM4M2YwNDY3YjE4MzAyZWU2MjBmN2U2NWRlMzMxODc0YzlkYzcyYmZkODYxNmJhOWRhNmI1JywNCiAgICAgICAgJzVlNDYzMTE1MGU2MmZiNDBkMGU4YzJhN2NhNTgwNGEzOWQ1ODE4NmE1MGU0OTcxMzk2MjY3NzhlMjViMDY3NGQnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZWFhNWY5ODBjMjQ1ZjZmMDM4OTc4MjkwYWZhNzBiNmJkODg1NTg5N2Y5OGI2YWE0ODViOTYwNjVkNTM3YmQ5OScsDQogICAgICAgICdmNjVmNWQzZTI5MmMyZTA4MTlhNTI4MzkxYzk5NDYyNGQ3ODQ4NjlkN2U2ZWE2N2ZiMTgwNDEwMjRlZGMwN2RjJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzc4Yzk0MDc1NDRhYzEzMjY5MmVlMTkxMGEwMjQzOTk1OGFlMDQ4NzcxNTEzNDJlYTk2YzRiNmIzNWE0OWY1MScsDQogICAgICAgICdmM2UwMzE5MTY5ZWI5Yjg1ZDU0MDQ3OTU1MzlhNWU2OGZhMWZiZDU4M2MwNjRkMjQ2MmI2NzVmMTk0YTNkZGI0Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzQ5NGY0YmUyMTlhMWE3NzAxNmRjZDgzODQzMWFlYTAwMDFjZGM4YWU3YTZmYzY4ODcyNjU3OGQ5NzAyODU3YTUnLA0KICAgICAgICAnNDIyNDJhOTY5MjgzYTVmMzM5YmE3ZjA3NWUzNmJhMmFmOTI1Y2UzMGQ3NjdlZDZlNTVmNGIwMzE4ODBkNTYyYycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdhNTk4YTgwMzBkYTZkODZjNmJjN2YyZjUxNDRlYTU0OWQyODIxMWVhNThmYWE3MGViZjRjMWU2NjVjMWZlOWI1JywNCiAgICAgICAgJzIwNGI1ZDZmODQ4MjJjMzA3ZTRiNGE3MTQwNzM3YWVjMjNmYzYzYjY1YjM1Zjg2YTEwMDI2ZGJkMmQ4NjRlNmInDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnYzQxOTE2MzY1YWJiMmI1ZDA5MTkyZjVmMmRiZWFmZWMyMDhmMDIwZjEyNTcwYTE4NGRiYWRjM2U1ODU5NTk5NycsDQogICAgICAgICc0ZjE0MzUxZDAwODdlZmE0OWQyNDViMzI4OTg0OTg5ZDVjYWY5NDUwZjM0YmZjMGVkMTZlOTZiNThmYTk5MTMnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnODQxZDYwNjNhNTg2ZmE0NzVhNzI0NjA0ZGEwM2JjNWI5MmEyZTBkMmUwYTM2YWNmZTRjNzNhNTUxNDc0Mjg4MScsDQogICAgICAgICc3Mzg2N2Y1OWMwNjU5ZTgxOTA0ZjlhMWM3NTQzNjk4ZTYyNTYyZDY3NDRjMTY5Y2U3YTM2ZGUwMWE4ZDYxNTQnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnNWU5NWJiMzk5YTY5NzFkMzc2MDI2OTQ3Zjg5YmRlMmYyODJiMzM4MTA5MjhiZTRkZWQxMTJhYzRkNzBlMjBkNScsDQogICAgICAgICczOWYyM2YzNjY4MDkwODViZWViZmM3MTE4MTMxMzc3NWE5OWM5YWVkN2Q4YmEzOGIxNjEzODRjNzQ2MDEyODY1Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzM2ZTQ2NDFhNTM5NDhmZDQ3NmMzOWY4YTk5ZmQ5NzRlNWVjMDc1NjRiNTMxNWQ4YmY5OTQ3MWJjYTBlZjJmNjYnLA0KICAgICAgICAnZDI0MjRiMWIxYWJlNGViODE2NDIyN2IwODVjOWFhOTQ1NmVhMTM0OTNmZDU2M2UwNmZkNTFjZjU2OTRjNzhmYycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICczMzY1ODFlYTdiZmJiYjI5MGMxOTFhMmY1MDdhNDFjZjU2NDM4NDIxNzBlOTE0ZmFlYWIyN2MyYzU3OWY3MjYnLA0KICAgICAgICAnZWFkMTIxNjg1OTVmZTFiZTk5MjUyMTI5YjZlNTZiMzM5MWY3YWIxNDEwY2QxZTBlZjNkY2RjYWJkMmZkYTIyNCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc4YWI4OTgxNmRhZGZkNmI2YTFmMjYzNGZjZjAwZWM4NDAzNzgxMDI1ZWQ2ODkwYzQ4NDk3NDI3MDZiZDQzZWRlJywNCiAgICAgICAgJzZmZGNlZjA5ZjJmNmQwYTA0NGU2NTRhZWY2MjQxMzZmNTAzZDQ1OWMzZTg5ODQ1ODU4YTQ3YTkxMjljZGQyNGUnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMWUzM2YxYTc0NmM5YzU3NzgxMzMzNDRkOTI5OWZjYWEyMGIwOTM4ZThhY2ZmMjU0NGJiNDAyODRiOGM1ZmI5NCcsDQogICAgICAgICc2MDY2MDI1N2RkMTFiM2FhOWM4ZWQ2MThkMjRlZGZmMjMwNmQzMjBmMWQwMzAxMGUzM2E3ZDIwNTdmM2IzYjYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnODViN2MxZGNiM2NlYzFiN2VlN2YzMGRlZDc5ZGQyMGEwZWQxZjRjYzE4Y2JjZmNmYTQxMDM2MWZkOGYwOGYzMScsDQogICAgICAgICczZDk4YTljZGQwMjZkZDQzZjM5MDQ4ZjI1YTg4NDdmNGZjYWZhZDE4OTVkN2E2MzNjNmZlZDNjMzVlOTk5NTExJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzI5ZGY5ZmJkOGQ5ZTQ2NTA5Mjc1ZjRiMTI1ZDZkNDVkN2ZiZTlhM2I4NzhhN2FmODcyYTI4MDA2NjFhYzVmNTEnLA0KICAgICAgICAnYjRjNGZlOTljNzc1YTYwNmUyZDg4NjIxNzkxMzlmZmRhNjFkYzg2MWMwMTllNTVjZDI4NzZlYjJhMjdkODRiJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2EwYjFjYWUwNmIwYTg0N2EzZmVhNmU2NzFhYWY4YWRmZGZlNThjYTJmNzY4MTA1YzgwODJiMmU0NDlmY2UyNTInLA0KICAgICAgICAnYWU0MzQxMDJlZGRlMDk1OGVjNGIxOWQ5MTdhNmEyOGU2YjcyZGExODM0YWZmMGU2NTBmMDQ5NTAzYTI5NmNmMicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc0ZThjZWFmYjliM2U5YTEzNmRjN2ZmNjdlODQwMjk1YjQ5OWRmYjNiMjEzM2U0YmExMTNmMmU0YzBlMTIxZTUnLA0KICAgICAgICAnY2YyMTc0MTE4YzhiNmQ3YTRiNDhmNmQ1MzRjZTVjNzk0MjJjMDg2YTYzNDYwNTAyYjgyN2NlNjJhMzI2NjgzYycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdkMjRhNDRlMDQ3ZTE5YjZmNWFmYjgxYzdjYTJmNjkwODBhNTA3NjY4OWEwMTA5MTlmNDI3MjVjMmI3ODlhMzNiJywNCiAgICAgICAgJzZmYjhkNTU5MWI0NjZmOGZjNjNkYjUwZjFjMGYxYzY5MDEzZjk5Njg4N2I4MjQ0ZDJjZGVjNDE3YWZlYThmYTMnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZWEwMTYwNmE3YTZjOWNkZDI0OWZkZmNmYWNiOTk1ODQwMDFlZGQyOGFiYmFiNzdiNTEwNGU5OGU4ZTNiMzVkNCcsDQogICAgICAgICczMjJhZjQ5MDhjNzMxMmIwY2ZiZmUzNjlmN2E3YjNjZGI3ZDQ0OTRiYzI4MjM3MDBjZmQ2NTIxODhhM2VhOThkJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2FmOGFkZGJmMmI2NjFjOGE2YzYzMjg2NTVlYjk2NjUxMjUyMDA3ZDhjNWVhMzFiZTRhZDE5NmRlOGNlMjEzMWYnLA0KICAgICAgICAnNjc0OWU2N2MwMjliODVmNTJhMDM0ZWFmZDA5NjgzNmIyNTIwODE4NjgwZTI2YWM4ZjNkZmJjZGI3MTc0OTcwMCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdlM2FlMTk3NDU2NmNhMDZjYzUxNmQ0N2UwZmIxNjVhNjc0YTNkYWJjZmNhMTVlNzIyZjBlMzQ1MGY0NTg4OScsDQogICAgICAgICcyYWVhYmU3ZTQ1MzE1MTAxMTYyMTdmMDdiZjRkMDczMDBkZTk3ZTQ4NzRmODFmNTMzNDIwYTcyZWViMGJkNmE0Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzU5MWVlMzU1MzEzZDk5NzIxY2Y2OTkzZmZlZDFlM2UzMDE5OTNmZjNlZDI1ODgwMjA3NWVhOGNlZDM5N2UyNDYnLA0KICAgICAgICAnYjBlYTU1OGExMTNjMzBiZWE2MGZjNDc3NTQ2MGM3OTAxZmYwYjA1M2QyNWNhMmJkZWVlOThmMWE0YmU1ZDE5NicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICcxMTM5NmQ1NWZkYTU0YzQ5ZjE5YWE5NzMxOGQ4ZGE2MWZhODU4NGU0N2IwODQ5NDUwNzdjZjAzMjU1YjUyOTg0JywNCiAgICAgICAgJzk5OGM3NGE4Y2Q0NWFjMDEyODlkNTgzM2E3YmViNDc0NGZmNTM2YjAxYjI1N2JlNGM1NzY3YmVhOTNlYTU3YTQnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnM2M1ZDJhMWJhMzljNWExNzkwMDAwNzM4YzllMGM0MGI4ZGNkZmQ1NDY4NzU0YjY0MDU1NDAxNTdlMDE3YWE3YScsDQogICAgICAgICdiMjI4NDI3OTk5NWEzNGUyZjlkNGRlNzM5NmZjMThiODBmOWI4YjlmZGQyNzBmNjY2MWY3OWNhNGM4MWJkMjU3Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2NjODcwNGI4YTYwYTBkZWZhM2E5OWE3Mjk5ZjJlOWMzZmJjMzk1YWZiMDRhYzA3ODQyNWVmOGExNzkzY2MwMzAnLA0KICAgICAgICAnYmRkNDYwMzlmZWVkMTc4ODFkMWUwODYyZGIzNDdmOGNmMzk1Yjc0ZmM0YmNkYzRlOTQwYjc0ZTNhYzFmMWIxMycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdjNTMzZTRmN2VhODU1NWFhY2Q5Nzc3YWM1Y2FkMjliOTdkZDRkZWZjY2M1M2VlN2VhMjA0MTE5YjI4ODliMTk3JywNCiAgICAgICAgJzZmMGEyNTZiYzVlZmRmNDI5YTJmYjYyNDJmMWE0M2EyZDliOTI1YmI0YTRiM2EyNmJiOGUwZjQ1ZWI1OTYwOTYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnYzE0ZjhmMmNjYjI3ZDZmMTA5ZjZkMDhkMDNjYzk2YTY5YmE4YzM0ZWVjMDdiYmNmNTY2ZDQ4ZTMzZGE2NTkzJywNCiAgICAgICAgJ2MzNTlkNjkyM2JiMzk4ZjdmZDQ0NzNlMTZmZTFjMjg0NzViNzQwZGQwOTgwNzVlNmMwZTg2NDkxMTNkYzNhMzgnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnYTZjYmMzMDQ2YmM2YTQ1MGJhYzI0Nzg5ZmExNzExNWE0Yzk3MzllZDc1ZjhmMjFjZTQ0MWY3MmUwYjkwZTZlZicsDQogICAgICAgICcyMWFlN2Y0NjgwZTg4OWJiMTMwNjE5ZTJjMGY5NWEzNjBjZWI1NzNjNzA2MDMxMzk4NjJhZmQ2MTdmYTliOWYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMzQ3ZDZkOWEwMmM0ODkyN2ViZmI4NmMxMzU5YjFjYWYxMzBhM2MwMjY3ZDExY2U2MzQ0YjM5Zjk5ZDQzY2MzOCcsDQogICAgICAgICc2MGVhN2Y2MWEzNTM1MjRkMWM5ODdmNmVjZWM5MmYwODZkNTY1YWI2ODc4NzBjYjEyNjg5ZmYxZTMxYzc0NDQ4Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2RhNjU0NWQyMTgxZGI4ZDk4M2Y3ZGNiMzc1ZWY1ODY2ZDQ3YzY3YjFiZjMxYzhjZjg1NWVmNzQzN2I3MjY1NmEnLA0KICAgICAgICAnNDliOTY3MTVhYjY4NzhhNzllNzhmMDdjZTU2ODBjNWQ2NjczMDUxYjQ5MzViZDg5N2ZlYTgyNGI3N2RjMjA4YScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdjNDA3NDdjYzlkMDEyY2IxYTEzYjgxNDgzMDljNmRlN2VjMjVkNjk0NWQ2NTcxNDZiOWQ1OTk0YjhmZWIxMTExJywNCiAgICAgICAgJzVjYTU2MDc1M2JlMmExMmZjNmRlNmNhZjJjYjQ4OTU2NWRiOTM2MTU2Yjk1MTRlMWJiNWU4MzAzN2UwZmEyZDQnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnNGU0MmM4ZWM4MmM5OTc5OGNjZjNhNjEwYmU4NzBlNzgzMzhjN2Y3MTMzNDhiZDM0YzgyMDNlZjQwMzdmMzUwMicsDQogICAgICAgICc3NTcxZDc0ZWU1ZTBmYjkyYTdhOGIzM2EwNzc4MzM0MWE1NDkyMTQ0Y2M1NGJjYzQwYTk0NDczNjkzNjA2NDM3Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzM3NzVhYjcwODliYzZhZjgyM2FiYTJlMWFmNzBiMjM2ZDI1MWNhZGIwYzg2NzQzMjg3NTIyYTFiM2IwZGVkZWEnLA0KICAgICAgICAnYmU1MmQxMDdiY2ZhMDlkOGJjYjk3MzZhODI4Y2ZhN2ZhYzhkYjE3YmY3YTc2YTJjNDJhZDk2MTQwOTAxOGNmNycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdjZWUzMWNiZjdlMzRlYzM3OWQ5NGZiODE0ZDNkNzc1YWQ5NTQ1OTVkMTMxNGJhODg0Njk1OWUzZTgyZjc0ZTI2JywNCiAgICAgICAgJzhmZDY0YTE0YzA2YjU4OWMyNmI5NDdhZTJiY2Y2YmZhMDE0OWVmMGJlMTRlZDRkODBmNDQ4YTAxYzQzYjFjNmQnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnYjRmOWVhZWEwOWI2OTE3NjE5ZjZlYTZhNGViNTQ2NGVmZGRiNThmZDQ1YjFlYmVmY2RjMWEwMWQwOGI0Nzk4NicsDQogICAgICAgICczOWU1Yzk5MjViNWE1NGIwNzQzM2E0ZjE4YzYxNzI2ZjhiYjEzMWMwMTJjYTU0MmViMjRhOGFjMDcyMDA2ODJhJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2Q0MjYzZGZjM2QyZGY5MjNhMDE3OWE0ODk2NmQzMGNlODRlMjUxNWFmYzNkY2NjMWI3NzkwNzc5MmViY2M2MGUnLA0KICAgICAgICAnNjJkZmFmMDdhMGY3OGZlYjMwZTMwZDYyOTU4NTNjZTE4OWUxMjc3NjBhZDZjZjdmYWUxNjRlMTIyYTIwOGQ1NCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc0ODQ1NzUyNDgyMGZhNjVhNGY4ZDM1ZWI2OTMwODU3YzAwMzJhY2MwYTRhMmRlNDIyMjMzZWVkYTg5NzYxMmM0JywNCiAgICAgICAgJzI1YTc0OGFiMzY3OTc5ZDk4NzMzYzM4YTFmYTFjMmU3ZGM2Y2MwN2RiMmQ2MGE5YWU3YTc2YWFhNDliZDBmNzcnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZGZlZWVmMTg4MTEwMWYyY2IxMTY0NGYzYTJhZmRmYzIwNDVlMTk5MTkxNTI5MjNmMzY3YTE3NjdjMTFjY2VkYScsDQogICAgICAgICdlY2ZiNzA1NmNmMWRlMDQyZjk0MjBiYWIzOTY3OTNjMGMzOTBiZGU3NGI0YmJkZmYxNmE4M2FlMDlhOWE3NTE3Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzZkN2VmNmIxNzU0M2Y4MzczYzU3M2Y0NGUxZjM4OTgzNWQ4OWJjYmM2MDYyY2VkMzZjODJkZjgzYjhmYWU4NTknLA0KICAgICAgICAnY2Q0NTBlYzMzNTQzODk4NmRmZWZhMTBjNTdmZWE5YmNjNTIxYTA5NTliMmQ4MGJiZjc0YjE5MGRjYTcxMmQxMCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdlNzU2MDVkNTkxMDJhNWEyNjg0NTAwZDNiOTkxZjJlM2YzYzg4YjkzMjI1NTQ3MDM1YWYyNWFmNjZlMDQ1NDFmJywNCiAgICAgICAgJ2Y1YzU0NzU0YThmNzFlZTU0MGI5YjQ4NzI4NDczZTMxNGY3MjlhYzUzMDhiMDY5MzgzNjA5OTBlMmJmYWQxMjUnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZWI5ODY2MGY0YzRkZmFhMDZhMmJlNDUzZDUwMjBiYzk5YTBjMmU2MGFiZTM4ODQ1N2RkNDNmZWZiMWVkNjIwYycsDQogICAgICAgICc2Y2I5YTg4NzZkOWNiODUyMDYwOWFmM2FkZDI2Y2QyMGEwYTdjZDhhOTQxMTEzMWNlODVmNDQxMDAwOTkyMjNlJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzEzZTg3YjAyN2Q4NTE0ZDM1OTM5ZjJlNjg5MmIxOTkyMjE1NDU5Njk0MTg4ODMzNmRjMzU2M2UzYjhkYmE5NDInLA0KICAgICAgICAnZmVmNWEzYzY4MDU5YTZkZWM1ZDYyNDExNGJmMWU5MWFhYzJiOWRhNTY4ZDZhYmViMjU3MGQ1NTY0NmI4YWRmMScNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdlZTE2MzAyNmU5ZmQ2ZmUwMTdjMzhmMDZhNWJlNmZjMTI1NDI0YjM3MWNlMjcwOGU3YmY0NDkxNjkxZTU3NjRhJywNCiAgICAgICAgJzFhY2IyNTBmMjU1ZGQ2MWM0M2Q5NGNjYzY3MGQwZjU4ZjQ5YWUzZmExNWI5NjYyM2U1NDMwZGEwYWQ2YzYyYjInDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnYjI2OGY1ZWY5YWQ1MWU0ZDc4ZGUzYTc1MGMyZGM4OWIxZTYyNmQ0MzUwNTg2Nzk5OTkzMmU1ZGIzM2FmM2Q4MCcsDQogICAgICAgICc1ZjMxMGQ0YjNjOTliOWViYjE5Zjc3ZDQxYzFkZWUwMThjZjBkMzRmZDQxOTE2MTQwMDNlOTQ1YTEyMTZlNDIzJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2ZmMDdmMzExOGE5ZGYwMzVlOWZhZDg1ZWI2YzdiZmU0MmIwMmYwMWNhOTljZWVhM2JmN2ZmZGJhOTNjNDc1MGQnLA0KICAgICAgICAnNDM4MTM2ZDYwM2U4NThhM2E1YzQ0MGMzOGVjY2JhZGRjMWQyOTQyMTE0ZTJlZGRkNDc0MGQwOThjZWQxZjBkOCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc4ZDhiOTg1NWM3YzA1MmEzNDE0NmZkMjBmZmI2NThiZWE0YjlmNjllMGQ4MjVlYmVjMTZlOGMzY2UyYjUyNmExJywNCiAgICAgICAgJ2NkYjU1OWVlZGMyZDc5ZjkyNmJhZjQ0ZmI4NGVhNGQ0NGJjZjUwZmVlNTFkN2NlYjMwZTJlN2Y0NjMwMzY3NTgnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnNTJkYjBiNTM4NGRmYmYwNWJmYTlkNDcyZDdhZTI2ZGZlNGI4NTFjZWNhOTFiMWViYTU0MjYzMTgwZGEzMmI2MycsDQogICAgICAgICdjM2I5OTdkMDUwZWU1ZDQyM2ViYWY2NmE2ZGI5ZjU3YjMxODBjOTAyODc1Njc5ZGU5MjRiNjlkODRhN2IzNzUnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZTYyZjk0OTBkM2Q1MWRhNjM5NWVmZDI0ZTgwOTE5Y2M3ZDBmMjljM2YzZmE0OGM2ZmZmNTQzYmVjYmQ0MzM1MicsDQogICAgICAgICc2ZDg5YWQ3YmE0ODc2YjBiMjJjMmNhMjgwYzY4Mjg2MmYzNDJjODU5MWYxZGFmNTE3MGUwN2JmZDljY2FmYTdkJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzdmMzBlYTI0NzZiMzk5YjQ5NTc1MDljODhmNzdkMDE5MWFmYTJmZjVjYjdiMTRmZDZkOGU3ZDY1YWFhYjExOTMnLA0KICAgICAgICAnY2E1ZWY3ZDRiMjMxYzk0YzNiMTUzODlhNWY2MzExZTlkYWZmN2JiNjdiMTAzZTk4ODBlZjRiZmY2MzdhY2FlYycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc1MDk4ZmYxZTFkOWYxNGZiNDZhMjEwZmFkYTZjOTAzZmVmMGZiN2I0YTFkZDFkOWFjNjBhMDM2MTgwMGI3YTAwJywNCiAgICAgICAgJzk3MzExNDFkODFmYzhmODA4NGQzN2M2ZTc1NDIwMDZiM2VlMWI0MGQ2MGRmZTUzNjJhNWIxMzJmZDE3ZGRjMCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICczMmI3OGM3ZGU5ZWU1MTJhNzI4OTViZTZiOWNiZWZhNmUyZjNjNGNjY2U0NDVjOTZiOWYyYzgxZTI3NzhhZDU4JywNCiAgICAgICAgJ2VlMTg0OWY1MTNkZjcxZTMyZWZjMzg5NmVlMjgyNjBjNzNiYjgwNTQ3YWUyMjc1YmE0OTcyMzc3OTRjODc1M2MnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZTJjYjc0ZmRkYzhlOWZiY2QwNzZlZWYyYTdjNzJiMGNlMzdkNTBmMDgyNjlkZmMwNzRiNTgxNTUwNTQ3YTRmNycsDQogICAgICAgICdkM2FhMmVkNzFjOWRkMjI0N2E2MmRmMDYyNzM2ZWIwYmFkZGVhOWUzNjEyMmQyYmU4NjQxYWJjYjAwNWNjNGE0Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzg0Mzg0NDc1NjZkNGQ3YmVkYWRjMjk5NDk2YWIzNTc0MjYwMDlhMzVmMjM1Y2IxNDFiZTBkOTljZDEwYWUzYTgnLA0KICAgICAgICAnYzRlMTAyMDkxNjk4MGE0ZGE1ZDAxYWM1ZTZhZDMzMDczNGVmMGQ3OTA2NjMxYzRmMjM5MDQyNmIyZWRkNzkxZicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc0MTYyZDQ4OGI4OTQwMjAzOWI1ODRjNmZjNmMzMDg4NzA1ODdkOWM0NmY2NjBiODc4YWI2NWM4MmM3MTFkNjdlJywNCiAgICAgICAgJzY3MTYzZTkwMzIzNjI4OWY3NzZmMjJjMjVmYjhhM2FmYzE3MzJmMmI4NGI0ZTk1ZGJkYTQ3YWU1YTA4NTI2NDknDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnM2ZhZDNmYTg0Y2FmMGYzNGYwZjg5YmZkMmRjZjU0ZmMxNzVkNzY3YWVjM2U1MDY4NGYzYmE0YTRiZjVmNjgzZCcsDQogICAgICAgICdjZDFiYzdjYjZjYzQwN2JiMmYwY2E2NDdjNzE4YTczMGNmNzE4NzJlN2QwZDJhNTNmYTIwZWZjZGZlNjE4MjYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnNjc0ZjI2MDBhMzAwN2EwMDU2OGMxYTdjZTA1ZDA4MTZjMWZiODRiZjEzNzA3OThmMWM2OTUzMmZhZWIxYTg2YicsDQogICAgICAgICcyOTlkMjFmOTQxM2YzM2IzZWRmNDNiMjU3MDA0NTgwYjcwZGI1N2RhMGIxODIyNTllMDllZWNjNjllMGQzOGE1Jw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2QzMmY0ZGE1NGFkZTc0YWJiODFiODE1YWQxZmIzYjI2M2Q4MmQ2YzY5MjcxNGJjZmY4N2QyOWJkNWVlOWYwOGYnLA0KICAgICAgICAnZjk0MjllNzM4YjhlNTNiOTY4ZTk5MDE2YzA1OTcwNzc4MmUxNGY0NTM1MzU5ZDU4MmZjNDE2OTEwYjNlZWE4NycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICczMGU0ZTY3MDQzNTM4NTU1NmU1OTM2NTcxMzU4NDVkMzZmYmI2OTMxZjcyYjA4Y2IxZWQ5NTRmMWUzY2UzZmY2JywNCiAgICAgICAgJzQ2MmY5YmNlNjE5ODk4NjM4NDk5MzUwMTEzYmJjOWIxMGE4NzhkMzVkYTcwNzQwZGM2OTVhNTU5ZWI4OGRiN2InDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnYmUyMDYyMDAzYzUxY2MzMDA0NjgyOTA0MzMwZTRkZWU3ZjNkY2QxMGIwMWU1ODBiZjE5NzFiMDRkNGNhZDI5NycsDQogICAgICAgICc2MjE4OGJjNDlkNjFlNTQyODU3M2Q0OGE3NGUxYzY1NWIxYzYxMDkwOTA1NjgyYTBkNTU1OGVkNzJkY2NiOWJjJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzkzMTQ0NDIzYWNlMzQ1MWVkMjllMGZiOWFjMmFmMjExY2I2ZTg0YTYwMWRmNTk5M2M0MTk4NTlmZmY1ZGYwNGEnLA0KICAgICAgICAnN2MxMGRmYjE2NGMzNDI1ZjVjNzFhM2Y5ZDc5OTIwMzhmMTA2NTIyNGY3MmJiOWQxZDkwMmE2ZDEzMDM3YjQ3YycNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICdiMDE1ZjgwNDRmNWZjYmRjZjIxY2EyNmQ2YzM0ZmI4MTk3ODI5MjA1YzdiN2QyYTdjYjY2NDE4YzE1N2IxMTJjJywNCiAgICAgICAgJ2FiOGMxZTA4NmQwNGU4MTM3NDRhNjU1YjJkZjhkNWY4M2IzY2RjNmZhYTMwODhjMWQzYWVhMTQ1NGUzYTFkNWYnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnZDVlOWUxZGE2NDlkOTdkODllNDg2ODExN2E0NjVhM2E0ZjhhMThkZTU3YTE0MGQzNmIzZjJhZjM0MWEyMWI1MicsDQogICAgICAgICc0Y2IwNDQzN2YzOTFlZDczMTExYTEzY2MxZDRkZDBkYjE2OTM0NjVjMjI0MDQ4MGQ4OTU1ZTg1OTJmMjc0NDdhJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJ2QzYWU0MTA0N2RkN2NhMDY1ZGJmOGVkNzdiOTkyNDM5OTgzMDA1Y2Q3MmUxNmQ2Zjk5NmE1MzE2ZDM2OTY2YmInLA0KICAgICAgICAnYmQxYWViMjFhZDIyZWJiMjJhMTBmMDMwMzQxN2M2ZDk2NGY4Y2RkN2RmMGFjYTYxNGIxMGRjMTRkMTI1YWM0NicNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc0NjNlMjc2M2Q4ODVmOTU4ZmM2NmNkZDIyODAwZjBhNDg3MTk3ZDBhODJlMzc3YjQ5ZjgwYWY4N2M4OTdiMDY1JywNCiAgICAgICAgJ2JmZWZhY2RiMGU1ZDBmZDdkZjNhMzExYTk0ZGUwNjJiMjZiODBjNjFmYmM5NzUwOGI3OTk5MjY3MWVmN2NhN2YnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnNzk4NWZkZmQxMjdjMDU2N2M2ZjUzZWMxYmI2M2VjMzE1OGU1OTdjNDBiZmU3NDdjODNjZGRmYzkxMDY0MTkxNycsDQogICAgICAgICc2MDNjMTJkYWYzZDk4NjJlZjJiMjVmZTFkZTI4OWFlZDI0ZWQyOTFlMGVjNjcwODcwM2E1YmQ1NjdmMzJlZDAzJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzc0YTFhZDZiNWY3NmUzOWRiMmRkMjQ5NDEwZWFjN2Y5OWU3NGM1OWNiODNkMmQwZWQ1ZmYxNTQzZGE3NzAzZTknLA0KICAgICAgICAnY2M2MTU3ZWYxOGM5YzYzY2Q2MTkzZDgzNjMxYmJlYTAwOTNlMDk2ODk0MmU4YzMzZDU3MzdmZDc5MGUwZGIwOCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICczMDY4MmE1MDcwMzM3NWY2MDJkNDE2NjY0YmExOWI3ZmM5YmFiNDJjNzI3NDc0NjNhNzFkMDg5NmIyMmY2ZGEzJywNCiAgICAgICAgJzU1M2UwNGY2YjAxOGI0ZmE2YzhmMzllN2YzMTFkMzE3NjI5MGQwZTBmMTljYTczZjE3NzE0ZDk5NzdhMjJmZjgnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnOWUyMTU4ZjBkN2MwZDVmMjZjMzc5MWVmZWZhNzk1OTc2NTRlN2EyYjI0NjRmNTJiMWVlNmMxMzQ3NzY5ZWY1NycsDQogICAgICAgICc3MTJmY2RkMWI5MDUzZjA5MDAzYTM0ODFmYTc3NjJlOWZmZDdjOGVmMzVhMzg1MDllMmZiZjI2MjkwMDgzNzMnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMTc2ZTI2OTg5YTQzYzljZmViYTQwMjljMjAyNTM4YzI4MTcyZTU2NmUzYzRmY2U3MzIyODU3ZjNiZTMyN2Q2NicsDQogICAgICAgICdlZDhjYzlkMDRiMjllYjg3N2QyNzBiNDg3OGRjNDNjMTlhZWZkMzFmNGVlZTA5ZWU3YjQ3ODM0YzFmYTRiMWMzJw0KICAgICAgXSwNCiAgICAgIFsNCiAgICAgICAgJzc1ZDQ2ZWZlYTM3NzFlNmU2OGFiYjg5YTEzYWQ3NDdlY2YxODkyMzkzZGZjNGYxYjcwMDQ3ODhjNTAzNzRkYTgnLA0KICAgICAgICAnOTg1MjM5MGE5OTUwNzY3OWZkMGI4NmZkMmIzOWE4NjhkN2VmYzIyMTUxMzQ2ZTFhM2NhNDcyNjU4NmE2YmVkOCcNCiAgICAgIF0sDQogICAgICBbDQogICAgICAgICc4MDlhMjBjNjdkNjQ5MDBmZmI2OThjNGM4MjVmNmQ1ZjIzMTBmYjA0NTFjODY5MzQ1YjczMTlmNjQ1NjA1NzIxJywNCiAgICAgICAgJzllOTk0OTgwZDk5MTdlMjJiNzZiMDYxOTI3ZmEwNDE0M2QwOTZjY2M1NDk2M2U2YTVlYmZhNWYzZjhlMjg2YzEnDQogICAgICBdLA0KICAgICAgWw0KICAgICAgICAnMWIzODkwM2E0M2Y3ZjExNGVkNDUwMGI0ZWFjNzA4M2ZkZWZlY2UxY2YyOWM2MzUyOGQ1NjM0NDZmOTcyYzE4MCcsDQogICAgICAgICc0MDM2ZWRjOTMxYTYwYWU4ODkzNTNmNzdmZDUzZGU0YTI3MDhiMjZiNmY1ZGE3MmFkMzM5NDExOWRhZjQwOGY5Jw0KICAgICAgXQ0KICAgIF0NCiAgfQ0KfTsNCg0KfSx7fV0sNTIzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JzsNCg0KdmFyIHV0aWxzID0gZXhwb3J0czsNCnZhciBCTiA9IHJlcXVpcmUoJ2JuLmpzJyk7DQoNCnV0aWxzLmFzc2VydCA9IGZ1bmN0aW9uIGFzc2VydCh2YWwsIG1zZykgew0KICBpZiAoIXZhbCkNCiAgICB0aHJvdyBuZXcgRXJyb3IobXNnIHx8ICdBc3NlcnRpb24gZmFpbGVkJyk7DQp9Ow0KDQpmdW5jdGlvbiB0b0FycmF5KG1zZywgZW5jKSB7DQogIGlmIChBcnJheS5pc0FycmF5KG1zZykpDQogICAgcmV0dXJuIG1zZy5zbGljZSgpOw0KICBpZiAoIW1zZykNCiAgICByZXR1cm4gW107DQogIHZhciByZXMgPSBbXTsNCiAgaWYgKHR5cGVvZiBtc2cgIT09ICdzdHJpbmcnKSB7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtc2cubGVuZ3RoOyBpKyspDQogICAgICByZXNbaV0gPSBtc2dbaV0gfCAwOw0KICAgIHJldHVybiByZXM7DQogIH0NCiAgaWYgKCFlbmMpIHsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5sZW5ndGg7IGkrKykgew0KICAgICAgdmFyIGMgPSBtc2cuY2hhckNvZGVBdChpKTsNCiAgICAgIHZhciBoaSA9IGMgPj4gODsNCiAgICAgIHZhciBsbyA9IGMgJiAweGZmOw0KICAgICAgaWYgKGhpKQ0KICAgICAgICByZXMucHVzaChoaSwgbG8pOw0KICAgICAgZWxzZQ0KICAgICAgICByZXMucHVzaChsbyk7DQogICAgfQ0KICB9IGVsc2UgaWYgKGVuYyA9PT0gJ2hleCcpIHsNCiAgICBtc2cgPSBtc2cucmVwbGFjZSgvW15hLXowLTldKy9pZywgJycpOw0KICAgIGlmIChtc2cubGVuZ3RoICUgMiAhPT0gMCkNCiAgICAgIG1zZyA9ICcwJyArIG1zZzsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5sZW5ndGg7IGkgKz0gMikNCiAgICAgIHJlcy5wdXNoKHBhcnNlSW50KG1zZ1tpXSArIG1zZ1tpICsgMV0sIDE2KSk7DQogIH0NCiAgcmV0dXJuIHJlczsNCn0NCnV0aWxzLnRvQXJyYXkgPSB0b0FycmF5Ow0KDQpmdW5jdGlvbiB6ZXJvMih3b3JkKSB7DQogIGlmICh3b3JkLmxlbmd0aCA9PT0gMSkNCiAgICByZXR1cm4gJzAnICsgd29yZDsNCiAgZWxzZQ0KICAgIHJldHVybiB3b3JkOw0KfQ0KdXRpbHMuemVybzIgPSB6ZXJvMjsNCg0KZnVuY3Rpb24gdG9IZXgobXNnKSB7DQogIHZhciByZXMgPSAnJzsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBtc2cubGVuZ3RoOyBpKyspDQogICAgcmVzICs9IHplcm8yKG1zZ1tpXS50b1N0cmluZygxNikpOw0KICByZXR1cm4gcmVzOw0KfQ0KdXRpbHMudG9IZXggPSB0b0hleDsNCg0KdXRpbHMuZW5jb2RlID0gZnVuY3Rpb24gZW5jb2RlKGFyciwgZW5jKSB7DQogIGlmIChlbmMgPT09ICdoZXgnKQ0KICAgIHJldHVybiB0b0hleChhcnIpOw0KICBlbHNlDQogICAgcmV0dXJuIGFycjsNCn07DQoNCi8vIFJlcHJlc2VudCBudW0gaW4gYSB3LU5BRiBmb3JtDQpmdW5jdGlvbiBnZXROQUYobnVtLCB3KSB7DQogIHZhciBuYWYgPSBbXTsNCiAgdmFyIHdzID0gMSA8PCAodyArIDEpOw0KICB2YXIgayA9IG51bS5jbG9uZSgpOw0KICB3aGlsZSAoay5jbXBuKDEpID49IDApIHsNCiAgICB2YXIgejsNCiAgICBpZiAoay5pc09kZCgpKSB7DQogICAgICB2YXIgbW9kID0gay5hbmRsbih3cyAtIDEpOw0KICAgICAgaWYgKG1vZCA+ICh3cyA+PiAxKSAtIDEpDQogICAgICAgIHogPSAod3MgPj4gMSkgLSBtb2Q7DQogICAgICBlbHNlDQogICAgICAgIHogPSBtb2Q7DQogICAgICBrLmlzdWJuKHopOw0KICAgIH0gZWxzZSB7DQogICAgICB6ID0gMDsNCiAgICB9DQogICAgbmFmLnB1c2goeik7DQoNCiAgICAvLyBPcHRpbWl6YXRpb24sIHNoaWZ0IGJ5IHdvcmQgaWYgcG9zc2libGUNCiAgICB2YXIgc2hpZnQgPSAoay5jbXBuKDApICE9PSAwICYmIGsuYW5kbG4od3MgLSAxKSA9PT0gMCkgPyAodyArIDEpIDogMTsNCiAgICBmb3IgKHZhciBpID0gMTsgaSA8IHNoaWZ0OyBpKyspDQogICAgICBuYWYucHVzaCgwKTsNCiAgICBrLml1c2hybihzaGlmdCk7DQogIH0NCg0KICByZXR1cm4gbmFmOw0KfQ0KdXRpbHMuZ2V0TkFGID0gZ2V0TkFGOw0KDQovLyBSZXByZXNlbnQgazEsIGsyIGluIGEgSm9pbnQgU3BhcnNlIEZvcm0NCmZ1bmN0aW9uIGdldEpTRihrMSwgazIpIHsNCiAgdmFyIGpzZiA9IFsNCiAgICBbXSwNCiAgICBbXQ0KICBdOw0KDQogIGsxID0gazEuY2xvbmUoKTsNCiAgazIgPSBrMi5jbG9uZSgpOw0KICB2YXIgZDEgPSAwOw0KICB2YXIgZDIgPSAwOw0KICB3aGlsZSAoazEuY21wbigtZDEpID4gMCB8fCBrMi5jbXBuKC1kMikgPiAwKSB7DQoNCiAgICAvLyBGaXJzdCBwaGFzZQ0KICAgIHZhciBtMTQgPSAoazEuYW5kbG4oMykgKyBkMSkgJiAzOw0KICAgIHZhciBtMjQgPSAoazIuYW5kbG4oMykgKyBkMikgJiAzOw0KICAgIGlmIChtMTQgPT09IDMpDQogICAgICBtMTQgPSAtMTsNCiAgICBpZiAobTI0ID09PSAzKQ0KICAgICAgbTI0ID0gLTE7DQogICAgdmFyIHUxOw0KICAgIGlmICgobTE0ICYgMSkgPT09IDApIHsNCiAgICAgIHUxID0gMDsNCiAgICB9IGVsc2Ugew0KICAgICAgdmFyIG04ID0gKGsxLmFuZGxuKDcpICsgZDEpICYgNzsNCiAgICAgIGlmICgobTggPT09IDMgfHwgbTggPT09IDUpICYmIG0yNCA9PT0gMikNCiAgICAgICAgdTEgPSAtbTE0Ow0KICAgICAgZWxzZQ0KICAgICAgICB1MSA9IG0xNDsNCiAgICB9DQogICAganNmWzBdLnB1c2godTEpOw0KDQogICAgdmFyIHUyOw0KICAgIGlmICgobTI0ICYgMSkgPT09IDApIHsNCiAgICAgIHUyID0gMDsNCiAgICB9IGVsc2Ugew0KICAgICAgdmFyIG04ID0gKGsyLmFuZGxuKDcpICsgZDIpICYgNzsNCiAgICAgIGlmICgobTggPT09IDMgfHwgbTggPT09IDUpICYmIG0xNCA9PT0gMikNCiAgICAgICAgdTIgPSAtbTI0Ow0KICAgICAgZWxzZQ0KICAgICAgICB1MiA9IG0yNDsNCiAgICB9DQogICAganNmWzFdLnB1c2godTIpOw0KDQogICAgLy8gU2Vjb25kIHBoYXNlDQogICAgaWYgKDIgKiBkMSA9PT0gdTEgKyAxKQ0KICAgICAgZDEgPSAxIC0gZDE7DQogICAgaWYgKDIgKiBkMiA9PT0gdTIgKyAxKQ0KICAgICAgZDIgPSAxIC0gZDI7DQogICAgazEuaXVzaHJuKDEpOw0KICAgIGsyLml1c2hybigxKTsNCiAgfQ0KDQogIHJldHVybiBqc2Y7DQp9DQp1dGlscy5nZXRKU0YgPSBnZXRKU0Y7DQoNCmZ1bmN0aW9uIGNhY2hlZFByb3BlcnR5KG9iaiwgY29tcHV0ZXIpIHsNCiAgdmFyIG5hbWUgPSBjb21wdXRlci5uYW1lOw0KICB2YXIga2V5ID0gJ18nICsgbmFtZTsNCiAgb2JqLnByb3RvdHlwZVtuYW1lXSA9IGZ1bmN0aW9uIGNhY2hlZFByb3BlcnR5KCkgew0KICAgIHJldHVybiB0aGlzW2tleV0gIT09IHVuZGVmaW5lZCA/IHRoaXNba2V5XSA6DQogICAgICAgICAgIHRoaXNba2V5XSA9IGNvbXB1dGVyLmNhbGwodGhpcyk7DQogIH07DQp9DQp1dGlscy5jYWNoZWRQcm9wZXJ0eSA9IGNhY2hlZFByb3BlcnR5Ow0KDQpmdW5jdGlvbiBwYXJzZUJ5dGVzKGJ5dGVzKSB7DQogIHJldHVybiB0eXBlb2YgYnl0ZXMgPT09ICdzdHJpbmcnID8gdXRpbHMudG9BcnJheShieXRlcywgJ2hleCcpIDoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBieXRlczsNCn0NCnV0aWxzLnBhcnNlQnl0ZXMgPSBwYXJzZUJ5dGVzOw0KDQpmdW5jdGlvbiBpbnRGcm9tTEUoYnl0ZXMpIHsNCiAgcmV0dXJuIG5ldyBCTihieXRlcywgJ2hleCcsICdsZScpOw0KfQ0KdXRpbHMuaW50RnJvbUxFID0gaW50RnJvbUxFOw0KDQoNCn0seyJibi5qcyI6NTl9XSw1MjQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHM9ew0KICAiX2FyZ3MiOiBbDQogICAgWw0KICAgICAgImVsbGlwdGljQF42LjAuMCIsDQogICAgICAiL1VzZXJzL2R2aWxjaGV6L3dvcmtzcGFjZS9yZXRoaW5rL2Rldi1ydW50aW1lLWNvcmUvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnktc2lnbiINCiAgICBdDQogIF0sDQogICJfZnJvbSI6ICJlbGxpcHRpY0A+PTYuMC4wIDw3LjAuMCIsDQogICJfaWQiOiAiZWxsaXB0aWNANi4yLjMiLA0KICAiX2luQ2FjaGUiOiB0cnVlLA0KICAiX2luc3RhbGxhYmxlIjogdHJ1ZSwNCiAgIl9sb2NhdGlvbiI6ICIvZWxsaXB0aWMiLA0KICAiX25vZGVWZXJzaW9uIjogIjUuNC4xIiwNCiAgIl9ucG1Vc2VyIjogew0KICAgICJlbWFpbCI6ICJmZWRvckBpbmR1dG55LmNvbSIsDQogICAgIm5hbWUiOiAiaW5kdXRueSINCiAgfSwNCiAgIl9ucG1WZXJzaW9uIjogIjMuMy4xMiIsDQogICJfcGhhbnRvbUNoaWxkcmVuIjoge30sDQogICJfcmVxdWVzdGVkIjogew0KICAgICJuYW1lIjogImVsbGlwdGljIiwNCiAgICAicmF3IjogImVsbGlwdGljQF42LjAuMCIsDQogICAgInJhd1NwZWMiOiAiXjYuMC4wIiwNCiAgICAic2NvcGUiOiBudWxsLA0KICAgICJzcGVjIjogIj49Ni4wLjAgPDcuMC4wIiwNCiAgICAidHlwZSI6ICJyYW5nZSINCiAgfSwNCiAgIl9yZXF1aXJlZEJ5IjogWw0KICAgICIvYnJvd3NlcmlmeS1zaWduIiwNCiAgICAiL2NyZWF0ZS1lY2RoIg0KICBdLA0KICAiX3Jlc29sdmVkIjogImh0dHBzOi8vcmVnaXN0cnkubnBtanMub3JnL2VsbGlwdGljLy0vZWxsaXB0aWMtNi4yLjMudGd6IiwNCiAgIl9zaGFzdW0iOiAiMThlNDZkNzMwNmIwOTUxMjc1YTJkNDIwNjMyNzBhMTRiNzRlYmU5OSIsDQogICJfc2hyaW5rd3JhcCI6IG51bGwsDQogICJfc3BlYyI6ICJlbGxpcHRpY0BeNi4wLjAiLA0KICAiX3doZXJlIjogIi9Vc2Vycy9kdmlsY2hlei93b3Jrc3BhY2UvcmV0aGluay9kZXYtcnVudGltZS1jb3JlL25vZGVfbW9kdWxlcy9icm93c2VyaWZ5LXNpZ24iLA0KICAiYXV0aG9yIjogew0KICAgICJlbWFpbCI6ICJmZWRvckBpbmR1dG55LmNvbSIsDQogICAgIm5hbWUiOiAiRmVkb3IgSW5kdXRueSINCiAgfSwNCiAgImJ1Z3MiOiB7DQogICAgInVybCI6ICJodHRwczovL2dpdGh1Yi5jb20vaW5kdXRueS9lbGxpcHRpYy9pc3N1ZXMiDQogIH0sDQogICJkZXBlbmRlbmNpZXMiOiB7DQogICAgImJuLmpzIjogIl40LjAuMCIsDQogICAgImJyb3JhbmQiOiAiXjEuMC4xIiwNCiAgICAiaGFzaC5qcyI6ICJeMS4wLjAiLA0KICAgICJpbmhlcml0cyI6ICJeMi4wLjEiDQogIH0sDQogICJkZXNjcmlwdGlvbiI6ICJFQyBjcnlwdG9ncmFwaHkiLA0KICAiZGV2RGVwZW5kZW5jaWVzIjogew0KICAgICJjb3ZlcmFsbHMiOiAiXjIuMTEuMyIsDQogICAgImlzdGFuYnVsIjogIl4wLjQuMiIsDQogICAgImpzY3MiOiAiXjIuOS4wIiwNCiAgICAianNoaW50IjogIl4yLjYuMCIsDQogICAgIm1vY2hhIjogIl4yLjEuMCINCiAgfSwNCiAgImRpcmVjdG9yaWVzIjoge30sDQogICJkaXN0Ijogew0KICAgICJzaGFzdW0iOiAiMThlNDZkNzMwNmIwOTUxMjc1YTJkNDIwNjMyNzBhMTRiNzRlYmU5OSIsDQogICAgInRhcmJhbGwiOiAiaHR0cHM6Ly9yZWdpc3RyeS5ucG1qcy5vcmcvZWxsaXB0aWMvLS9lbGxpcHRpYy02LjIuMy50Z3oiDQogIH0sDQogICJmaWxlcyI6IFsNCiAgICAibGliIg0KICBdLA0KICAiZ2l0SGVhZCI6ICJjMzJmMjBiMjJiNDIwZWI2YWYzYzZkZGEyODk2M2RlYjdmYWNmODIzIiwNCiAgImhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9pbmR1dG55L2VsbGlwdGljIiwNCiAgImtleXdvcmRzIjogWw0KICAgICJDcnlwdG9ncmFwaHkiLA0KICAgICJFQyIsDQogICAgIkVsbGlwdGljIiwNCiAgICAiY3VydmUiDQogIF0sDQogICJsaWNlbnNlIjogIk1JVCIsDQogICJtYWluIjogImxpYi9lbGxpcHRpYy5qcyIsDQogICJtYWludGFpbmVycyI6IFsNCiAgICB7DQogICAgICAibmFtZSI6ICJpbmR1dG55IiwNCiAgICAgICJlbWFpbCI6ICJmZWRvckBpbmR1dG55LmNvbSINCiAgICB9DQogIF0sDQogICJuYW1lIjogImVsbGlwdGljIiwNCiAgIm9wdGlvbmFsRGVwZW5kZW5jaWVzIjoge30sDQogICJyZWFkbWUiOiAiRVJST1I6IE5vIFJFQURNRSBkYXRhIGZvdW5kISIsDQogICJyZXBvc2l0b3J5Ijogew0KICAgICJ0eXBlIjogImdpdCIsDQogICAgInVybCI6ICJnaXQrc3NoOi8vZ2l0QGdpdGh1Yi5jb20vaW5kdXRueS9lbGxpcHRpYy5naXQiDQogIH0sDQogICJzY3JpcHRzIjogew0KICAgICJjb3ZlcmFnZSI6ICJucG0gcnVuIHVuaXQgLS1jb3ZlcmFnZSIsDQogICAgImNvdmVyYWxscyI6ICJucG0gcnVuIGNvdmVyYWdlICYmIGNhdCAuL2NvdmVyYWdlL2xjb3YuaW5mbyB8IGNvdmVyYWxscyIsDQogICAgImpzY3MiOiAianNjcyBiZW5jaG1hcmtzLyouanMgbGliLyouanMgbGliLyoqLyouanMgbGliLyoqLyoqLyouanMgdGVzdC8qLmpzIiwNCiAgICAianNoaW50IjogImpzY3MgYmVuY2htYXJrcy8qLmpzIGxpYi8qLmpzIGxpYi8qKi8qLmpzIGxpYi8qKi8qKi8qLmpzIHRlc3QvKi5qcyIsDQogICAgImxpbnQiOiAibnBtIHJ1biBqc2NzICYmIG5wbSBydW4ganNoaW50IiwNCiAgICAidGVzdCI6ICJucG0gcnVuIGxpbnQgJiYgbnBtIHJ1biB1bml0IiwNCiAgICAidW5pdCI6ICJpc3RhbmJ1bCB0ZXN0IF9tb2NoYSAtLXJlcG9ydGVyPXNwZWMgdGVzdC8qLXRlc3QuanMiDQogIH0sDQogICJ2ZXJzaW9uIjogIjYuMi4zIg0KfQ0KDQp9LHt9XSw1MjU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuDQovLw0KLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGENCi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUNCi8vICJTb2Z0d2FyZSIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcNCi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwNCi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQNCi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZQ0KLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6DQovLw0KLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQNCi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLg0KLy8NCi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTDQovLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GDQovLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElODQovLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwNCi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUg0KLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRQ0KLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4NCg0KZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCkgew0KICB0aGlzLl9ldmVudHMgPSB0aGlzLl9ldmVudHMgfHwge307DQogIHRoaXMuX21heExpc3RlbmVycyA9IHRoaXMuX21heExpc3RlbmVycyB8fCB1bmRlZmluZWQ7DQp9DQptb2R1bGUuZXhwb3J0cyA9IEV2ZW50RW1pdHRlcjsNCg0KLy8gQmFja3dhcmRzLWNvbXBhdCB3aXRoIG5vZGUgMC4xMC54DQpFdmVudEVtaXR0ZXIuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyOw0KDQpFdmVudEVtaXR0ZXIucHJvdG90eXBlLl9ldmVudHMgPSB1bmRlZmluZWQ7DQpFdmVudEVtaXR0ZXIucHJvdG90eXBlLl9tYXhMaXN0ZW5lcnMgPSB1bmRlZmluZWQ7DQoNCi8vIEJ5IGRlZmF1bHQgRXZlbnRFbWl0dGVycyB3aWxsIHByaW50IGEgd2FybmluZyBpZiBtb3JlIHRoYW4gMTAgbGlzdGVuZXJzIGFyZQ0KLy8gYWRkZWQgdG8gaXQuIFRoaXMgaXMgYSB1c2VmdWwgZGVmYXVsdCB3aGljaCBoZWxwcyBmaW5kaW5nIG1lbW9yeSBsZWFrcy4NCkV2ZW50RW1pdHRlci5kZWZhdWx0TWF4TGlzdGVuZXJzID0gMTA7DQoNCi8vIE9idmlvdXNseSBub3QgYWxsIEVtaXR0ZXJzIHNob3VsZCBiZSBsaW1pdGVkIHRvIDEwLiBUaGlzIGZ1bmN0aW9uIGFsbG93cw0KLy8gdGhhdCB0byBiZSBpbmNyZWFzZWQuIFNldCB0byB6ZXJvIGZvciB1bmxpbWl0ZWQuDQpFdmVudEVtaXR0ZXIucHJvdG90eXBlLnNldE1heExpc3RlbmVycyA9IGZ1bmN0aW9uKG4pIHsNCiAgaWYgKCFpc051bWJlcihuKSB8fCBuIDwgMCB8fCBpc05hTihuKSkNCiAgICB0aHJvdyBUeXBlRXJyb3IoJ24gbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlcicpOw0KICB0aGlzLl9tYXhMaXN0ZW5lcnMgPSBuOw0KICByZXR1cm4gdGhpczsNCn07DQoNCkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uKHR5cGUpIHsNCiAgdmFyIGVyLCBoYW5kbGVyLCBsZW4sIGFyZ3MsIGksIGxpc3RlbmVyczsNCg0KICBpZiAoIXRoaXMuX2V2ZW50cykNCiAgICB0aGlzLl9ldmVudHMgPSB7fTsNCg0KICAvLyBJZiB0aGVyZSBpcyBubyAnZXJyb3InIGV2ZW50IGxpc3RlbmVyIHRoZW4gdGhyb3cuDQogIGlmICh0eXBlID09PSAnZXJyb3InKSB7DQogICAgaWYgKCF0aGlzLl9ldmVudHMuZXJyb3IgfHwNCiAgICAgICAgKGlzT2JqZWN0KHRoaXMuX2V2ZW50cy5lcnJvcikgJiYgIXRoaXMuX2V2ZW50cy5lcnJvci5sZW5ndGgpKSB7DQogICAgICBlciA9IGFyZ3VtZW50c1sxXTsNCiAgICAgIGlmIChlciBpbnN0YW5jZW9mIEVycm9yKSB7DQogICAgICAgIHRocm93IGVyOyAvLyBVbmhhbmRsZWQgJ2Vycm9yJyBldmVudA0KICAgICAgfQ0KICAgICAgdGhyb3cgVHlwZUVycm9yKCdVbmNhdWdodCwgdW5zcGVjaWZpZWQgImVycm9yIiBldmVudC4nKTsNCiAgICB9DQogIH0NCg0KICBoYW5kbGVyID0gdGhpcy5fZXZlbnRzW3R5cGVdOw0KDQogIGlmIChpc1VuZGVmaW5lZChoYW5kbGVyKSkNCiAgICByZXR1cm4gZmFsc2U7DQoNCiAgaWYgKGlzRnVuY3Rpb24oaGFuZGxlcikpIHsNCiAgICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHsNCiAgICAgIC8vIGZhc3QgY2FzZXMNCiAgICAgIGNhc2UgMToNCiAgICAgICAgaGFuZGxlci5jYWxsKHRoaXMpOw0KICAgICAgICBicmVhazsNCiAgICAgIGNhc2UgMjoNCiAgICAgICAgaGFuZGxlci5jYWxsKHRoaXMsIGFyZ3VtZW50c1sxXSk7DQogICAgICAgIGJyZWFrOw0KICAgICAgY2FzZSAzOg0KICAgICAgICBoYW5kbGVyLmNhbGwodGhpcywgYXJndW1lbnRzWzFdLCBhcmd1bWVudHNbMl0pOw0KICAgICAgICBicmVhazsNCiAgICAgIC8vIHNsb3dlcg0KICAgICAgZGVmYXVsdDoNCiAgICAgICAgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7DQogICAgICAgIGhhbmRsZXIuYXBwbHkodGhpcywgYXJncyk7DQogICAgfQ0KICB9IGVsc2UgaWYgKGlzT2JqZWN0KGhhbmRsZXIpKSB7DQogICAgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7DQogICAgbGlzdGVuZXJzID0gaGFuZGxlci5zbGljZSgpOw0KICAgIGxlbiA9IGxpc3RlbmVycy5sZW5ndGg7DQogICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKQ0KICAgICAgbGlzdGVuZXJzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpOw0KICB9DQoNCiAgcmV0dXJuIHRydWU7DQp9Ow0KDQpFdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHsNCiAgdmFyIG07DQoNCiAgaWYgKCFpc0Z1bmN0aW9uKGxpc3RlbmVyKSkNCiAgICB0aHJvdyBUeXBlRXJyb3IoJ2xpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpOw0KDQogIGlmICghdGhpcy5fZXZlbnRzKQ0KICAgIHRoaXMuX2V2ZW50cyA9IHt9Ow0KDQogIC8vIFRvIGF2b2lkIHJlY3Vyc2lvbiBpbiB0aGUgY2FzZSB0aGF0IHR5cGUgPT09ICJuZXdMaXN0ZW5lciIhIEJlZm9yZQ0KICAvLyBhZGRpbmcgaXQgdG8gdGhlIGxpc3RlbmVycywgZmlyc3QgZW1pdCAibmV3TGlzdGVuZXIiLg0KICBpZiAodGhpcy5fZXZlbnRzLm5ld0xpc3RlbmVyKQ0KICAgIHRoaXMuZW1pdCgnbmV3TGlzdGVuZXInLCB0eXBlLA0KICAgICAgICAgICAgICBpc0Z1bmN0aW9uKGxpc3RlbmVyLmxpc3RlbmVyKSA/DQogICAgICAgICAgICAgIGxpc3RlbmVyLmxpc3RlbmVyIDogbGlzdGVuZXIpOw0KDQogIGlmICghdGhpcy5fZXZlbnRzW3R5cGVdKQ0KICAgIC8vIE9wdGltaXplIHRoZSBjYXNlIG9mIG9uZSBsaXN0ZW5lci4gRG9uJ3QgbmVlZCB0aGUgZXh0cmEgYXJyYXkgb2JqZWN0Lg0KICAgIHRoaXMuX2V2ZW50c1t0eXBlXSA9IGxpc3RlbmVyOw0KICBlbHNlIGlmIChpc09iamVjdCh0aGlzLl9ldmVudHNbdHlwZV0pKQ0KICAgIC8vIElmIHdlJ3ZlIGFscmVhZHkgZ290IGFuIGFycmF5LCBqdXN0IGFwcGVuZC4NCiAgICB0aGlzLl9ldmVudHNbdHlwZV0ucHVzaChsaXN0ZW5lcik7DQogIGVsc2UNCiAgICAvLyBBZGRpbmcgdGhlIHNlY29uZCBlbGVtZW50LCBuZWVkIHRvIGNoYW5nZSB0byBhcnJheS4NCiAgICB0aGlzLl9ldmVudHNbdHlwZV0gPSBbdGhpcy5fZXZlbnRzW3R5cGVdLCBsaXN0ZW5lcl07DQoNCiAgLy8gQ2hlY2sgZm9yIGxpc3RlbmVyIGxlYWsNCiAgaWYgKGlzT2JqZWN0KHRoaXMuX2V2ZW50c1t0eXBlXSkgJiYgIXRoaXMuX2V2ZW50c1t0eXBlXS53YXJuZWQpIHsNCiAgICBpZiAoIWlzVW5kZWZpbmVkKHRoaXMuX21heExpc3RlbmVycykpIHsNCiAgICAgIG0gPSB0aGlzLl9tYXhMaXN0ZW5lcnM7DQogICAgfSBlbHNlIHsNCiAgICAgIG0gPSBFdmVudEVtaXR0ZXIuZGVmYXVsdE1heExpc3RlbmVyczsNCiAgICB9DQoNCiAgICBpZiAobSAmJiBtID4gMCAmJiB0aGlzLl9ldmVudHNbdHlwZV0ubGVuZ3RoID4gbSkgew0KICAgICAgdGhpcy5fZXZlbnRzW3R5cGVdLndhcm5lZCA9IHRydWU7DQogICAgICBjb25zb2xlLmVycm9yKCcobm9kZSkgd2FybmluZzogcG9zc2libGUgRXZlbnRFbWl0dGVyIG1lbW9yeSAnICsNCiAgICAgICAgICAgICAgICAgICAgJ2xlYWsgZGV0ZWN0ZWQuICVkIGxpc3RlbmVycyBhZGRlZC4gJyArDQogICAgICAgICAgICAgICAgICAgICdVc2UgZW1pdHRlci5zZXRNYXhMaXN0ZW5lcnMoKSB0byBpbmNyZWFzZSBsaW1pdC4nLA0KICAgICAgICAgICAgICAgICAgICB0aGlzLl9ldmVudHNbdHlwZV0ubGVuZ3RoKTsNCiAgICAgIGlmICh0eXBlb2YgY29uc29sZS50cmFjZSA9PT0gJ2Z1bmN0aW9uJykgew0KICAgICAgICAvLyBub3Qgc3VwcG9ydGVkIGluIElFIDEwDQogICAgICAgIGNvbnNvbGUudHJhY2UoKTsNCiAgICAgIH0NCiAgICB9DQogIH0NCg0KICByZXR1cm4gdGhpczsNCn07DQoNCkV2ZW50RW1pdHRlci5wcm90b3R5cGUub24gPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyOw0KDQpFdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uY2UgPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikgew0KICBpZiAoIWlzRnVuY3Rpb24obGlzdGVuZXIpKQ0KICAgIHRocm93IFR5cGVFcnJvcignbGlzdGVuZXIgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7DQoNCiAgdmFyIGZpcmVkID0gZmFsc2U7DQoNCiAgZnVuY3Rpb24gZygpIHsNCiAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGcpOw0KDQogICAgaWYgKCFmaXJlZCkgew0KICAgICAgZmlyZWQgPSB0cnVlOw0KICAgICAgbGlzdGVuZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsNCiAgICB9DQogIH0NCg0KICBnLmxpc3RlbmVyID0gbGlzdGVuZXI7DQogIHRoaXMub24odHlwZSwgZyk7DQoNCiAgcmV0dXJuIHRoaXM7DQp9Ow0KDQovLyBlbWl0cyBhICdyZW1vdmVMaXN0ZW5lcicgZXZlbnQgaWZmIHRoZSBsaXN0ZW5lciB3YXMgcmVtb3ZlZA0KRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lciA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7DQogIHZhciBsaXN0LCBwb3NpdGlvbiwgbGVuZ3RoLCBpOw0KDQogIGlmICghaXNGdW5jdGlvbihsaXN0ZW5lcikpDQogICAgdGhyb3cgVHlwZUVycm9yKCdsaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb24nKTsNCg0KICBpZiAoIXRoaXMuX2V2ZW50cyB8fCAhdGhpcy5fZXZlbnRzW3R5cGVdKQ0KICAgIHJldHVybiB0aGlzOw0KDQogIGxpc3QgPSB0aGlzLl9ldmVudHNbdHlwZV07DQogIGxlbmd0aCA9IGxpc3QubGVuZ3RoOw0KICBwb3NpdGlvbiA9IC0xOw0KDQogIGlmIChsaXN0ID09PSBsaXN0ZW5lciB8fA0KICAgICAgKGlzRnVuY3Rpb24obGlzdC5saXN0ZW5lcikgJiYgbGlzdC5saXN0ZW5lciA9PT0gbGlzdGVuZXIpKSB7DQogICAgZGVsZXRlIHRoaXMuX2V2ZW50c1t0eXBlXTsNCiAgICBpZiAodGhpcy5fZXZlbnRzLnJlbW92ZUxpc3RlbmVyKQ0KICAgICAgdGhpcy5lbWl0KCdyZW1vdmVMaXN0ZW5lcicsIHR5cGUsIGxpc3RlbmVyKTsNCg0KICB9IGVsc2UgaWYgKGlzT2JqZWN0KGxpc3QpKSB7DQogICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gPiAwOykgew0KICAgICAgaWYgKGxpc3RbaV0gPT09IGxpc3RlbmVyIHx8DQogICAgICAgICAgKGxpc3RbaV0ubGlzdGVuZXIgJiYgbGlzdFtpXS5saXN0ZW5lciA9PT0gbGlzdGVuZXIpKSB7DQogICAgICAgIHBvc2l0aW9uID0gaTsNCiAgICAgICAgYnJlYWs7DQogICAgICB9DQogICAgfQ0KDQogICAgaWYgKHBvc2l0aW9uIDwgMCkNCiAgICAgIHJldHVybiB0aGlzOw0KDQogICAgaWYgKGxpc3QubGVuZ3RoID09PSAxKSB7DQogICAgICBsaXN0Lmxlbmd0aCA9IDA7DQogICAgICBkZWxldGUgdGhpcy5fZXZlbnRzW3R5cGVdOw0KICAgIH0gZWxzZSB7DQogICAgICBsaXN0LnNwbGljZShwb3NpdGlvbiwgMSk7DQogICAgfQ0KDQogICAgaWYgKHRoaXMuX2V2ZW50cy5yZW1vdmVMaXN0ZW5lcikNCiAgICAgIHRoaXMuZW1pdCgncmVtb3ZlTGlzdGVuZXInLCB0eXBlLCBsaXN0ZW5lcik7DQogIH0NCg0KICByZXR1cm4gdGhpczsNCn07DQoNCkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlQWxsTGlzdGVuZXJzID0gZnVuY3Rpb24odHlwZSkgew0KICB2YXIga2V5LCBsaXN0ZW5lcnM7DQoNCiAgaWYgKCF0aGlzLl9ldmVudHMpDQogICAgcmV0dXJuIHRoaXM7DQoNCiAgLy8gbm90IGxpc3RlbmluZyBmb3IgcmVtb3ZlTGlzdGVuZXIsIG5vIG5lZWQgdG8gZW1pdA0KICBpZiAoIXRoaXMuX2V2ZW50cy5yZW1vdmVMaXN0ZW5lcikgew0KICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKQ0KICAgICAgdGhpcy5fZXZlbnRzID0ge307DQogICAgZWxzZSBpZiAodGhpcy5fZXZlbnRzW3R5cGVdKQ0KICAgICAgZGVsZXRlIHRoaXMuX2V2ZW50c1t0eXBlXTsNCiAgICByZXR1cm4gdGhpczsNCiAgfQ0KDQogIC8vIGVtaXQgcmVtb3ZlTGlzdGVuZXIgZm9yIGFsbCBsaXN0ZW5lcnMgb24gYWxsIGV2ZW50cw0KICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkgew0KICAgIGZvciAoa2V5IGluIHRoaXMuX2V2ZW50cykgew0KICAgICAgaWYgKGtleSA9PT0gJ3JlbW92ZUxpc3RlbmVyJykgY29udGludWU7DQogICAgICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycyhrZXkpOw0KICAgIH0NCiAgICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygncmVtb3ZlTGlzdGVuZXInKTsNCiAgICB0aGlzLl9ldmVudHMgPSB7fTsNCiAgICByZXR1cm4gdGhpczsNCiAgfQ0KDQogIGxpc3RlbmVycyA9IHRoaXMuX2V2ZW50c1t0eXBlXTsNCg0KICBpZiAoaXNGdW5jdGlvbihsaXN0ZW5lcnMpKSB7DQogICAgdGhpcy5yZW1vdmVMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcnMpOw0KICB9IGVsc2UgaWYgKGxpc3RlbmVycykgew0KICAgIC8vIExJRk8gb3JkZXINCiAgICB3aGlsZSAobGlzdGVuZXJzLmxlbmd0aCkNCiAgICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXJzW2xpc3RlbmVycy5sZW5ndGggLSAxXSk7DQogIH0NCiAgZGVsZXRlIHRoaXMuX2V2ZW50c1t0eXBlXTsNCg0KICByZXR1cm4gdGhpczsNCn07DQoNCkV2ZW50RW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJzID0gZnVuY3Rpb24odHlwZSkgew0KICB2YXIgcmV0Ow0KICBpZiAoIXRoaXMuX2V2ZW50cyB8fCAhdGhpcy5fZXZlbnRzW3R5cGVdKQ0KICAgIHJldCA9IFtdOw0KICBlbHNlIGlmIChpc0Z1bmN0aW9uKHRoaXMuX2V2ZW50c1t0eXBlXSkpDQogICAgcmV0ID0gW3RoaXMuX2V2ZW50c1t0eXBlXV07DQogIGVsc2UNCiAgICByZXQgPSB0aGlzLl9ldmVudHNbdHlwZV0uc2xpY2UoKTsNCiAgcmV0dXJuIHJldDsNCn07DQoNCkV2ZW50RW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJDb3VudCA9IGZ1bmN0aW9uKHR5cGUpIHsNCiAgaWYgKHRoaXMuX2V2ZW50cykgew0KICAgIHZhciBldmxpc3RlbmVyID0gdGhpcy5fZXZlbnRzW3R5cGVdOw0KDQogICAgaWYgKGlzRnVuY3Rpb24oZXZsaXN0ZW5lcikpDQogICAgICByZXR1cm4gMTsNCiAgICBlbHNlIGlmIChldmxpc3RlbmVyKQ0KICAgICAgcmV0dXJuIGV2bGlzdGVuZXIubGVuZ3RoOw0KICB9DQogIHJldHVybiAwOw0KfTsNCg0KRXZlbnRFbWl0dGVyLmxpc3RlbmVyQ291bnQgPSBmdW5jdGlvbihlbWl0dGVyLCB0eXBlKSB7DQogIHJldHVybiBlbWl0dGVyLmxpc3RlbmVyQ291bnQodHlwZSk7DQp9Ow0KDQpmdW5jdGlvbiBpc0Z1bmN0aW9uKGFyZykgew0KICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ2Z1bmN0aW9uJzsNCn0NCg0KZnVuY3Rpb24gaXNOdW1iZXIoYXJnKSB7DQogIHJldHVybiB0eXBlb2YgYXJnID09PSAnbnVtYmVyJzsNCn0NCg0KZnVuY3Rpb24gaXNPYmplY3QoYXJnKSB7DQogIHJldHVybiB0eXBlb2YgYXJnID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7DQp9DQoNCmZ1bmN0aW9uIGlzVW5kZWZpbmVkKGFyZykgew0KICByZXR1cm4gYXJnID09PSB2b2lkIDA7DQp9DQoNCn0se31dLDUyNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQp2YXIgbWQ1ID0gcmVxdWlyZSgnY3JlYXRlLWhhc2gvbWQ1JykNCm1vZHVsZS5leHBvcnRzID0gRVZQX0J5dGVzVG9LZXkNCmZ1bmN0aW9uIEVWUF9CeXRlc1RvS2V5IChwYXNzd29yZCwgc2FsdCwga2V5TGVuLCBpdkxlbikgew0KICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihwYXNzd29yZCkpIHsNCiAgICBwYXNzd29yZCA9IG5ldyBCdWZmZXIocGFzc3dvcmQsICdiaW5hcnknKQ0KICB9DQogIGlmIChzYWx0ICYmICFCdWZmZXIuaXNCdWZmZXIoc2FsdCkpIHsNCiAgICBzYWx0ID0gbmV3IEJ1ZmZlcihzYWx0LCAnYmluYXJ5JykNCiAgfQ0KICBrZXlMZW4gPSBrZXlMZW4gLyA4DQogIGl2TGVuID0gaXZMZW4gfHwgMA0KICB2YXIga2kgPSAwDQogIHZhciBpaSA9IDANCiAgdmFyIGtleSA9IG5ldyBCdWZmZXIoa2V5TGVuKQ0KICB2YXIgaXYgPSBuZXcgQnVmZmVyKGl2TGVuKQ0KICB2YXIgYWRkbWQgPSAwDQogIHZhciBtZF9idWYNCiAgdmFyIGkNCiAgdmFyIGJ1ZnMgPSBbXQ0KICB3aGlsZSAodHJ1ZSkgew0KICAgIGlmIChhZGRtZCsrID4gMCkgew0KICAgICAgYnVmcy5wdXNoKG1kX2J1ZikNCiAgICB9DQogICAgYnVmcy5wdXNoKHBhc3N3b3JkKQ0KICAgIGlmIChzYWx0KSB7DQogICAgICBidWZzLnB1c2goc2FsdCkNCiAgICB9DQogICAgbWRfYnVmID0gbWQ1KEJ1ZmZlci5jb25jYXQoYnVmcykpDQogICAgYnVmcyA9IFtdDQogICAgaSA9IDANCiAgICBpZiAoa2V5TGVuID4gMCkgew0KICAgICAgd2hpbGUgKHRydWUpIHsNCiAgICAgICAgaWYgKGtleUxlbiA9PT0gMCkgew0KICAgICAgICAgIGJyZWFrDQogICAgICAgIH0NCiAgICAgICAgaWYgKGkgPT09IG1kX2J1Zi5sZW5ndGgpIHsNCiAgICAgICAgICBicmVhaw0KICAgICAgICB9DQogICAgICAgIGtleVtraSsrXSA9IG1kX2J1ZltpXQ0KICAgICAgICBrZXlMZW4tLQ0KICAgICAgICBpKysNCiAgICAgIH0NCiAgICB9DQogICAgaWYgKGl2TGVuID4gMCAmJiBpICE9PSBtZF9idWYubGVuZ3RoKSB7DQogICAgICB3aGlsZSAodHJ1ZSkgew0KICAgICAgICBpZiAoaXZMZW4gPT09IDApIHsNCiAgICAgICAgICBicmVhaw0KICAgICAgICB9DQogICAgICAgIGlmIChpID09PSBtZF9idWYubGVuZ3RoKSB7DQogICAgICAgICAgYnJlYWsNCiAgICAgICAgfQ0KICAgICAgICBpdltpaSsrXSA9IG1kX2J1ZltpXQ0KICAgICAgICBpdkxlbi0tDQogICAgICAgIGkrKw0KICAgICAgfQ0KICAgIH0NCiAgICBpZiAoa2V5TGVuID09PSAwICYmIGl2TGVuID09PSAwKSB7DQogICAgICBicmVhaw0KICAgIH0NCiAgfQ0KICBmb3IgKGkgPSAwOyBpIDwgbWRfYnVmLmxlbmd0aDsgaSsrKSB7DQogICAgbWRfYnVmW2ldID0gMA0KICB9DQogIHJldHVybiB7DQogICAga2V5OiBrZXksDQogICAgaXY6IGl2DQogIH0NCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJidWZmZXIiOjkzLCJjcmVhdGUtaGFzaC9tZDUiOjQ5MH1dLDUyNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgaGFzaCA9IGV4cG9ydHM7DQoNCmhhc2gudXRpbHMgPSByZXF1aXJlKCcuL2hhc2gvdXRpbHMnKTsNCmhhc2guY29tbW9uID0gcmVxdWlyZSgnLi9oYXNoL2NvbW1vbicpOw0KaGFzaC5zaGEgPSByZXF1aXJlKCcuL2hhc2gvc2hhJyk7DQpoYXNoLnJpcGVtZCA9IHJlcXVpcmUoJy4vaGFzaC9yaXBlbWQnKTsNCmhhc2guaG1hYyA9IHJlcXVpcmUoJy4vaGFzaC9obWFjJyk7DQoNCi8vIFByb3h5IGhhc2ggZnVuY3Rpb25zIHRvIHRoZSBtYWluIG9iamVjdA0KaGFzaC5zaGExID0gaGFzaC5zaGEuc2hhMTsNCmhhc2guc2hhMjU2ID0gaGFzaC5zaGEuc2hhMjU2Ow0KaGFzaC5zaGEyMjQgPSBoYXNoLnNoYS5zaGEyMjQ7DQpoYXNoLnNoYTM4NCA9IGhhc2guc2hhLnNoYTM4NDsNCmhhc2guc2hhNTEyID0gaGFzaC5zaGEuc2hhNTEyOw0KaGFzaC5yaXBlbWQxNjAgPSBoYXNoLnJpcGVtZC5yaXBlbWQxNjA7DQoNCn0seyIuL2hhc2gvY29tbW9uIjo1MjgsIi4vaGFzaC9obWFjIjo1MjksIi4vaGFzaC9yaXBlbWQiOjUzMCwiLi9oYXNoL3NoYSI6NTMxLCIuL2hhc2gvdXRpbHMiOjUzMn1dLDUyODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgaGFzaCA9IHJlcXVpcmUoJy4uL2hhc2gnKTsNCnZhciB1dGlscyA9IGhhc2gudXRpbHM7DQp2YXIgYXNzZXJ0ID0gdXRpbHMuYXNzZXJ0Ow0KDQpmdW5jdGlvbiBCbG9ja0hhc2goKSB7DQogIHRoaXMucGVuZGluZyA9IG51bGw7DQogIHRoaXMucGVuZGluZ1RvdGFsID0gMDsNCiAgdGhpcy5ibG9ja1NpemUgPSB0aGlzLmNvbnN0cnVjdG9yLmJsb2NrU2l6ZTsNCiAgdGhpcy5vdXRTaXplID0gdGhpcy5jb25zdHJ1Y3Rvci5vdXRTaXplOw0KICB0aGlzLmhtYWNTdHJlbmd0aCA9IHRoaXMuY29uc3RydWN0b3IuaG1hY1N0cmVuZ3RoOw0KICB0aGlzLnBhZExlbmd0aCA9IHRoaXMuY29uc3RydWN0b3IucGFkTGVuZ3RoIC8gODsNCiAgdGhpcy5lbmRpYW4gPSAnYmlnJzsNCg0KICB0aGlzLl9kZWx0YTggPSB0aGlzLmJsb2NrU2l6ZSAvIDg7DQogIHRoaXMuX2RlbHRhMzIgPSB0aGlzLmJsb2NrU2l6ZSAvIDMyOw0KfQ0KZXhwb3J0cy5CbG9ja0hhc2ggPSBCbG9ja0hhc2g7DQoNCkJsb2NrSGFzaC5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gdXBkYXRlKG1zZywgZW5jKSB7DQogIC8vIENvbnZlcnQgbWVzc2FnZSB0byBhcnJheSwgcGFkIGl0LCBhbmQgam9pbiBpbnRvIDMyYml0IGJsb2Nrcw0KICBtc2cgPSB1dGlscy50b0FycmF5KG1zZywgZW5jKTsNCiAgaWYgKCF0aGlzLnBlbmRpbmcpDQogICAgdGhpcy5wZW5kaW5nID0gbXNnOw0KICBlbHNlDQogICAgdGhpcy5wZW5kaW5nID0gdGhpcy5wZW5kaW5nLmNvbmNhdChtc2cpOw0KICB0aGlzLnBlbmRpbmdUb3RhbCArPSBtc2cubGVuZ3RoOw0KDQogIC8vIEVub3VnaCBkYXRhLCB0cnkgdXBkYXRpbmcNCiAgaWYgKHRoaXMucGVuZGluZy5sZW5ndGggPj0gdGhpcy5fZGVsdGE4KSB7DQogICAgbXNnID0gdGhpcy5wZW5kaW5nOw0KDQogICAgLy8gUHJvY2VzcyBwZW5kaW5nIGRhdGEgaW4gYmxvY2tzDQogICAgdmFyIHIgPSBtc2cubGVuZ3RoICUgdGhpcy5fZGVsdGE4Ow0KICAgIHRoaXMucGVuZGluZyA9IG1zZy5zbGljZShtc2cubGVuZ3RoIC0gciwgbXNnLmxlbmd0aCk7DQogICAgaWYgKHRoaXMucGVuZGluZy5sZW5ndGggPT09IDApDQogICAgICB0aGlzLnBlbmRpbmcgPSBudWxsOw0KDQogICAgbXNnID0gdXRpbHMuam9pbjMyKG1zZywgMCwgbXNnLmxlbmd0aCAtIHIsIHRoaXMuZW5kaWFuKTsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5sZW5ndGg7IGkgKz0gdGhpcy5fZGVsdGEzMikNCiAgICAgIHRoaXMuX3VwZGF0ZShtc2csIGksIGkgKyB0aGlzLl9kZWx0YTMyKTsNCiAgfQ0KDQogIHJldHVybiB0aGlzOw0KfTsNCg0KQmxvY2tIYXNoLnByb3RvdHlwZS5kaWdlc3QgPSBmdW5jdGlvbiBkaWdlc3QoZW5jKSB7DQogIHRoaXMudXBkYXRlKHRoaXMuX3BhZCgpKTsNCiAgYXNzZXJ0KHRoaXMucGVuZGluZyA9PT0gbnVsbCk7DQoNCiAgcmV0dXJuIHRoaXMuX2RpZ2VzdChlbmMpOw0KfTsNCg0KQmxvY2tIYXNoLnByb3RvdHlwZS5fcGFkID0gZnVuY3Rpb24gcGFkKCkgew0KICB2YXIgbGVuID0gdGhpcy5wZW5kaW5nVG90YWw7DQogIHZhciBieXRlcyA9IHRoaXMuX2RlbHRhODsNCiAgdmFyIGsgPSBieXRlcyAtICgobGVuICsgdGhpcy5wYWRMZW5ndGgpICUgYnl0ZXMpOw0KICB2YXIgcmVzID0gbmV3IEFycmF5KGsgKyB0aGlzLnBhZExlbmd0aCk7DQogIHJlc1swXSA9IDB4ODA7DQogIGZvciAodmFyIGkgPSAxOyBpIDwgazsgaSsrKQ0KICAgIHJlc1tpXSA9IDA7DQoNCiAgLy8gQXBwZW5kIGxlbmd0aA0KICBsZW4gPDw9IDM7DQogIGlmICh0aGlzLmVuZGlhbiA9PT0gJ2JpZycpIHsNCiAgICBmb3IgKHZhciB0ID0gODsgdCA8IHRoaXMucGFkTGVuZ3RoOyB0KyspDQogICAgICByZXNbaSsrXSA9IDA7DQoNCiAgICByZXNbaSsrXSA9IDA7DQogICAgcmVzW2krK10gPSAwOw0KICAgIHJlc1tpKytdID0gMDsNCiAgICByZXNbaSsrXSA9IDA7DQogICAgcmVzW2krK10gPSAobGVuID4+PiAyNCkgJiAweGZmOw0KICAgIHJlc1tpKytdID0gKGxlbiA+Pj4gMTYpICYgMHhmZjsNCiAgICByZXNbaSsrXSA9IChsZW4gPj4+IDgpICYgMHhmZjsNCiAgICByZXNbaSsrXSA9IGxlbiAmIDB4ZmY7DQogIH0gZWxzZSB7DQogICAgcmVzW2krK10gPSBsZW4gJiAweGZmOw0KICAgIHJlc1tpKytdID0gKGxlbiA+Pj4gOCkgJiAweGZmOw0KICAgIHJlc1tpKytdID0gKGxlbiA+Pj4gMTYpICYgMHhmZjsNCiAgICByZXNbaSsrXSA9IChsZW4gPj4+IDI0KSAmIDB4ZmY7DQogICAgcmVzW2krK10gPSAwOw0KICAgIHJlc1tpKytdID0gMDsNCiAgICByZXNbaSsrXSA9IDA7DQogICAgcmVzW2krK10gPSAwOw0KDQogICAgZm9yICh2YXIgdCA9IDg7IHQgPCB0aGlzLnBhZExlbmd0aDsgdCsrKQ0KICAgICAgcmVzW2krK10gPSAwOw0KICB9DQoNCiAgcmV0dXJuIHJlczsNCn07DQoNCn0seyIuLi9oYXNoIjo1Mjd9XSw1Mjk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGhtYWMgPSBleHBvcnRzOw0KDQp2YXIgaGFzaCA9IHJlcXVpcmUoJy4uL2hhc2gnKTsNCnZhciB1dGlscyA9IGhhc2gudXRpbHM7DQp2YXIgYXNzZXJ0ID0gdXRpbHMuYXNzZXJ0Ow0KDQpmdW5jdGlvbiBIbWFjKGhhc2gsIGtleSwgZW5jKSB7DQogIGlmICghKHRoaXMgaW5zdGFuY2VvZiBIbWFjKSkNCiAgICByZXR1cm4gbmV3IEhtYWMoaGFzaCwga2V5LCBlbmMpOw0KICB0aGlzLkhhc2ggPSBoYXNoOw0KICB0aGlzLmJsb2NrU2l6ZSA9IGhhc2guYmxvY2tTaXplIC8gODsNCiAgdGhpcy5vdXRTaXplID0gaGFzaC5vdXRTaXplIC8gODsNCiAgdGhpcy5pbm5lciA9IG51bGw7DQogIHRoaXMub3V0ZXIgPSBudWxsOw0KDQogIHRoaXMuX2luaXQodXRpbHMudG9BcnJheShrZXksIGVuYykpOw0KfQ0KbW9kdWxlLmV4cG9ydHMgPSBIbWFjOw0KDQpIbWFjLnByb3RvdHlwZS5faW5pdCA9IGZ1bmN0aW9uIGluaXQoa2V5KSB7DQogIC8vIFNob3J0ZW4ga2V5LCBpZiBuZWVkZWQNCiAgaWYgKGtleS5sZW5ndGggPiB0aGlzLmJsb2NrU2l6ZSkNCiAgICBrZXkgPSBuZXcgdGhpcy5IYXNoKCkudXBkYXRlKGtleSkuZGlnZXN0KCk7DQogIGFzc2VydChrZXkubGVuZ3RoIDw9IHRoaXMuYmxvY2tTaXplKTsNCg0KICAvLyBBZGQgcGFkZGluZyB0byBrZXkNCiAgZm9yICh2YXIgaSA9IGtleS5sZW5ndGg7IGkgPCB0aGlzLmJsb2NrU2l6ZTsgaSsrKQ0KICAgIGtleS5wdXNoKDApOw0KDQogIGZvciAodmFyIGkgPSAwOyBpIDwga2V5Lmxlbmd0aDsgaSsrKQ0KICAgIGtleVtpXSBePSAweDM2Ow0KICB0aGlzLmlubmVyID0gbmV3IHRoaXMuSGFzaCgpLnVwZGF0ZShrZXkpOw0KDQogIC8vIDB4MzYgXiAweDVjID0gMHg2YQ0KICBmb3IgKHZhciBpID0gMDsgaSA8IGtleS5sZW5ndGg7IGkrKykNCiAgICBrZXlbaV0gXj0gMHg2YTsNCiAgdGhpcy5vdXRlciA9IG5ldyB0aGlzLkhhc2goKS51cGRhdGUoa2V5KTsNCn07DQoNCkhtYWMucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIHVwZGF0ZShtc2csIGVuYykgew0KICB0aGlzLmlubmVyLnVwZGF0ZShtc2csIGVuYyk7DQogIHJldHVybiB0aGlzOw0KfTsNCg0KSG1hYy5wcm90b3R5cGUuZGlnZXN0ID0gZnVuY3Rpb24gZGlnZXN0KGVuYykgew0KICB0aGlzLm91dGVyLnVwZGF0ZSh0aGlzLmlubmVyLmRpZ2VzdCgpKTsNCiAgcmV0dXJuIHRoaXMub3V0ZXIuZGlnZXN0KGVuYyk7DQp9Ow0KDQp9LHsiLi4vaGFzaCI6NTI3fV0sNTMwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBoYXNoID0gcmVxdWlyZSgnLi4vaGFzaCcpOw0KdmFyIHV0aWxzID0gaGFzaC51dGlsczsNCg0KdmFyIHJvdGwzMiA9IHV0aWxzLnJvdGwzMjsNCnZhciBzdW0zMiA9IHV0aWxzLnN1bTMyOw0KdmFyIHN1bTMyXzMgPSB1dGlscy5zdW0zMl8zOw0KdmFyIHN1bTMyXzQgPSB1dGlscy5zdW0zMl80Ow0KdmFyIEJsb2NrSGFzaCA9IGhhc2guY29tbW9uLkJsb2NrSGFzaDsNCg0KZnVuY3Rpb24gUklQRU1EMTYwKCkgew0KICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUklQRU1EMTYwKSkNCiAgICByZXR1cm4gbmV3IFJJUEVNRDE2MCgpOw0KDQogIEJsb2NrSGFzaC5jYWxsKHRoaXMpOw0KDQogIHRoaXMuaCA9IFsgMHg2NzQ1MjMwMSwgMHhlZmNkYWI4OSwgMHg5OGJhZGNmZSwgMHgxMDMyNTQ3NiwgMHhjM2QyZTFmMCBdOw0KICB0aGlzLmVuZGlhbiA9ICdsaXR0bGUnOw0KfQ0KdXRpbHMuaW5oZXJpdHMoUklQRU1EMTYwLCBCbG9ja0hhc2gpOw0KZXhwb3J0cy5yaXBlbWQxNjAgPSBSSVBFTUQxNjA7DQoNClJJUEVNRDE2MC5ibG9ja1NpemUgPSA1MTI7DQpSSVBFTUQxNjAub3V0U2l6ZSA9IDE2MDsNClJJUEVNRDE2MC5obWFjU3RyZW5ndGggPSAxOTI7DQpSSVBFTUQxNjAucGFkTGVuZ3RoID0gNjQ7DQoNClJJUEVNRDE2MC5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uIHVwZGF0ZShtc2csIHN0YXJ0KSB7DQogIHZhciBBID0gdGhpcy5oWzBdOw0KICB2YXIgQiA9IHRoaXMuaFsxXTsNCiAgdmFyIEMgPSB0aGlzLmhbMl07DQogIHZhciBEID0gdGhpcy5oWzNdOw0KICB2YXIgRSA9IHRoaXMuaFs0XTsNCiAgdmFyIEFoID0gQTsNCiAgdmFyIEJoID0gQjsNCiAgdmFyIENoID0gQzsNCiAgdmFyIERoID0gRDsNCiAgdmFyIEVoID0gRTsNCiAgZm9yICh2YXIgaiA9IDA7IGogPCA4MDsgaisrKSB7DQogICAgdmFyIFQgPSBzdW0zMigNCiAgICAgIHJvdGwzMigNCiAgICAgICAgc3VtMzJfNChBLCBmKGosIEIsIEMsIEQpLCBtc2dbcltqXSArIHN0YXJ0XSwgSyhqKSksDQogICAgICAgIHNbal0pLA0KICAgICAgRSk7DQogICAgQSA9IEU7DQogICAgRSA9IEQ7DQogICAgRCA9IHJvdGwzMihDLCAxMCk7DQogICAgQyA9IEI7DQogICAgQiA9IFQ7DQogICAgVCA9IHN1bTMyKA0KICAgICAgcm90bDMyKA0KICAgICAgICBzdW0zMl80KEFoLCBmKDc5IC0gaiwgQmgsIENoLCBEaCksIG1zZ1tyaFtqXSArIHN0YXJ0XSwgS2goaikpLA0KICAgICAgICBzaFtqXSksDQogICAgICBFaCk7DQogICAgQWggPSBFaDsNCiAgICBFaCA9IERoOw0KICAgIERoID0gcm90bDMyKENoLCAxMCk7DQogICAgQ2ggPSBCaDsNCiAgICBCaCA9IFQ7DQogIH0NCiAgVCA9IHN1bTMyXzModGhpcy5oWzFdLCBDLCBEaCk7DQogIHRoaXMuaFsxXSA9IHN1bTMyXzModGhpcy5oWzJdLCBELCBFaCk7DQogIHRoaXMuaFsyXSA9IHN1bTMyXzModGhpcy5oWzNdLCBFLCBBaCk7DQogIHRoaXMuaFszXSA9IHN1bTMyXzModGhpcy5oWzRdLCBBLCBCaCk7DQogIHRoaXMuaFs0XSA9IHN1bTMyXzModGhpcy5oWzBdLCBCLCBDaCk7DQogIHRoaXMuaFswXSA9IFQ7DQp9Ow0KDQpSSVBFTUQxNjAucHJvdG90eXBlLl9kaWdlc3QgPSBmdW5jdGlvbiBkaWdlc3QoZW5jKSB7DQogIGlmIChlbmMgPT09ICdoZXgnKQ0KICAgIHJldHVybiB1dGlscy50b0hleDMyKHRoaXMuaCwgJ2xpdHRsZScpOw0KICBlbHNlDQogICAgcmV0dXJuIHV0aWxzLnNwbGl0MzIodGhpcy5oLCAnbGl0dGxlJyk7DQp9Ow0KDQpmdW5jdGlvbiBmKGosIHgsIHksIHopIHsNCiAgaWYgKGogPD0gMTUpDQogICAgcmV0dXJuIHggXiB5IF4gejsNCiAgZWxzZSBpZiAoaiA8PSAzMSkNCiAgICByZXR1cm4gKHggJiB5KSB8ICgofngpICYgeik7DQogIGVsc2UgaWYgKGogPD0gNDcpDQogICAgcmV0dXJuICh4IHwgKH55KSkgXiB6Ow0KICBlbHNlIGlmIChqIDw9IDYzKQ0KICAgIHJldHVybiAoeCAmIHopIHwgKHkgJiAofnopKTsNCiAgZWxzZQ0KICAgIHJldHVybiB4IF4gKHkgfCAofnopKTsNCn0NCg0KZnVuY3Rpb24gSyhqKSB7DQogIGlmIChqIDw9IDE1KQ0KICAgIHJldHVybiAweDAwMDAwMDAwOw0KICBlbHNlIGlmIChqIDw9IDMxKQ0KICAgIHJldHVybiAweDVhODI3OTk5Ow0KICBlbHNlIGlmIChqIDw9IDQ3KQ0KICAgIHJldHVybiAweDZlZDllYmExOw0KICBlbHNlIGlmIChqIDw9IDYzKQ0KICAgIHJldHVybiAweDhmMWJiY2RjOw0KICBlbHNlDQogICAgcmV0dXJuIDB4YTk1M2ZkNGU7DQp9DQoNCmZ1bmN0aW9uIEtoKGopIHsNCiAgaWYgKGogPD0gMTUpDQogICAgcmV0dXJuIDB4NTBhMjhiZTY7DQogIGVsc2UgaWYgKGogPD0gMzEpDQogICAgcmV0dXJuIDB4NWM0ZGQxMjQ7DQogIGVsc2UgaWYgKGogPD0gNDcpDQogICAgcmV0dXJuIDB4NmQ3MDNlZjM7DQogIGVsc2UgaWYgKGogPD0gNjMpDQogICAgcmV0dXJuIDB4N2E2ZDc2ZTk7DQogIGVsc2UNCiAgICByZXR1cm4gMHgwMDAwMDAwMDsNCn0NCg0KdmFyIHIgPSBbDQogIDAsIDEsIDIsIDMsIDQsIDUsIDYsIDcsIDgsIDksIDEwLCAxMSwgMTIsIDEzLCAxNCwgMTUsDQogIDcsIDQsIDEzLCAxLCAxMCwgNiwgMTUsIDMsIDEyLCAwLCA5LCA1LCAyLCAxNCwgMTEsIDgsDQogIDMsIDEwLCAxNCwgNCwgOSwgMTUsIDgsIDEsIDIsIDcsIDAsIDYsIDEzLCAxMSwgNSwgMTIsDQogIDEsIDksIDExLCAxMCwgMCwgOCwgMTIsIDQsIDEzLCAzLCA3LCAxNSwgMTQsIDUsIDYsIDIsDQogIDQsIDAsIDUsIDksIDcsIDEyLCAyLCAxMCwgMTQsIDEsIDMsIDgsIDExLCA2LCAxNSwgMTMNCl07DQoNCnZhciByaCA9IFsNCiAgNSwgMTQsIDcsIDAsIDksIDIsIDExLCA0LCAxMywgNiwgMTUsIDgsIDEsIDEwLCAzLCAxMiwNCiAgNiwgMTEsIDMsIDcsIDAsIDEzLCA1LCAxMCwgMTQsIDE1LCA4LCAxMiwgNCwgOSwgMSwgMiwNCiAgMTUsIDUsIDEsIDMsIDcsIDE0LCA2LCA5LCAxMSwgOCwgMTIsIDIsIDEwLCAwLCA0LCAxMywNCiAgOCwgNiwgNCwgMSwgMywgMTEsIDE1LCAwLCA1LCAxMiwgMiwgMTMsIDksIDcsIDEwLCAxNCwNCiAgMTIsIDE1LCAxMCwgNCwgMSwgNSwgOCwgNywgNiwgMiwgMTMsIDE0LCAwLCAzLCA5LCAxMQ0KXTsNCg0KdmFyIHMgPSBbDQogIDExLCAxNCwgMTUsIDEyLCA1LCA4LCA3LCA5LCAxMSwgMTMsIDE0LCAxNSwgNiwgNywgOSwgOCwNCiAgNywgNiwgOCwgMTMsIDExLCA5LCA3LCAxNSwgNywgMTIsIDE1LCA5LCAxMSwgNywgMTMsIDEyLA0KICAxMSwgMTMsIDYsIDcsIDE0LCA5LCAxMywgMTUsIDE0LCA4LCAxMywgNiwgNSwgMTIsIDcsIDUsDQogIDExLCAxMiwgMTQsIDE1LCAxNCwgMTUsIDksIDgsIDksIDE0LCA1LCA2LCA4LCA2LCA1LCAxMiwNCiAgOSwgMTUsIDUsIDExLCA2LCA4LCAxMywgMTIsIDUsIDEyLCAxMywgMTQsIDExLCA4LCA1LCA2DQpdOw0KDQp2YXIgc2ggPSBbDQogIDgsIDksIDksIDExLCAxMywgMTUsIDE1LCA1LCA3LCA3LCA4LCAxMSwgMTQsIDE0LCAxMiwgNiwNCiAgOSwgMTMsIDE1LCA3LCAxMiwgOCwgOSwgMTEsIDcsIDcsIDEyLCA3LCA2LCAxNSwgMTMsIDExLA0KICA5LCA3LCAxNSwgMTEsIDgsIDYsIDYsIDE0LCAxMiwgMTMsIDUsIDE0LCAxMywgMTMsIDcsIDUsDQogIDE1LCA1LCA4LCAxMSwgMTQsIDE0LCA2LCAxNCwgNiwgOSwgMTIsIDksIDEyLCA1LCAxNSwgOCwNCiAgOCwgNSwgMTIsIDksIDEyLCA1LCAxNCwgNiwgOCwgMTMsIDYsIDUsIDE1LCAxMywgMTEsIDExDQpdOw0KDQp9LHsiLi4vaGFzaCI6NTI3fV0sNTMxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCnZhciBoYXNoID0gcmVxdWlyZSgnLi4vaGFzaCcpOw0KdmFyIHV0aWxzID0gaGFzaC51dGlsczsNCnZhciBhc3NlcnQgPSB1dGlscy5hc3NlcnQ7DQoNCnZhciByb3RyMzIgPSB1dGlscy5yb3RyMzI7DQp2YXIgcm90bDMyID0gdXRpbHMucm90bDMyOw0KdmFyIHN1bTMyID0gdXRpbHMuc3VtMzI7DQp2YXIgc3VtMzJfNCA9IHV0aWxzLnN1bTMyXzQ7DQp2YXIgc3VtMzJfNSA9IHV0aWxzLnN1bTMyXzU7DQp2YXIgcm90cjY0X2hpID0gdXRpbHMucm90cjY0X2hpOw0KdmFyIHJvdHI2NF9sbyA9IHV0aWxzLnJvdHI2NF9sbzsNCnZhciBzaHI2NF9oaSA9IHV0aWxzLnNocjY0X2hpOw0KdmFyIHNocjY0X2xvID0gdXRpbHMuc2hyNjRfbG87DQp2YXIgc3VtNjQgPSB1dGlscy5zdW02NDsNCnZhciBzdW02NF9oaSA9IHV0aWxzLnN1bTY0X2hpOw0KdmFyIHN1bTY0X2xvID0gdXRpbHMuc3VtNjRfbG87DQp2YXIgc3VtNjRfNF9oaSA9IHV0aWxzLnN1bTY0XzRfaGk7DQp2YXIgc3VtNjRfNF9sbyA9IHV0aWxzLnN1bTY0XzRfbG87DQp2YXIgc3VtNjRfNV9oaSA9IHV0aWxzLnN1bTY0XzVfaGk7DQp2YXIgc3VtNjRfNV9sbyA9IHV0aWxzLnN1bTY0XzVfbG87DQp2YXIgQmxvY2tIYXNoID0gaGFzaC5jb21tb24uQmxvY2tIYXNoOw0KDQp2YXIgc2hhMjU2X0sgPSBbDQogIDB4NDI4YTJmOTgsIDB4NzEzNzQ0OTEsIDB4YjVjMGZiY2YsIDB4ZTliNWRiYTUsDQogIDB4Mzk1NmMyNWIsIDB4NTlmMTExZjEsIDB4OTIzZjgyYTQsIDB4YWIxYzVlZDUsDQogIDB4ZDgwN2FhOTgsIDB4MTI4MzViMDEsIDB4MjQzMTg1YmUsIDB4NTUwYzdkYzMsDQogIDB4NzJiZTVkNzQsIDB4ODBkZWIxZmUsIDB4OWJkYzA2YTcsIDB4YzE5YmYxNzQsDQogIDB4ZTQ5YjY5YzEsIDB4ZWZiZTQ3ODYsIDB4MGZjMTlkYzYsIDB4MjQwY2ExY2MsDQogIDB4MmRlOTJjNmYsIDB4NGE3NDg0YWEsIDB4NWNiMGE5ZGMsIDB4NzZmOTg4ZGEsDQogIDB4OTgzZTUxNTIsIDB4YTgzMWM2NmQsIDB4YjAwMzI3YzgsIDB4YmY1OTdmYzcsDQogIDB4YzZlMDBiZjMsIDB4ZDVhNzkxNDcsIDB4MDZjYTYzNTEsIDB4MTQyOTI5NjcsDQogIDB4MjdiNzBhODUsIDB4MmUxYjIxMzgsIDB4NGQyYzZkZmMsIDB4NTMzODBkMTMsDQogIDB4NjUwYTczNTQsIDB4NzY2YTBhYmIsIDB4ODFjMmM5MmUsIDB4OTI3MjJjODUsDQogIDB4YTJiZmU4YTEsIDB4YTgxYTY2NGIsIDB4YzI0YjhiNzAsIDB4Yzc2YzUxYTMsDQogIDB4ZDE5MmU4MTksIDB4ZDY5OTA2MjQsIDB4ZjQwZTM1ODUsIDB4MTA2YWEwNzAsDQogIDB4MTlhNGMxMTYsIDB4MWUzNzZjMDgsIDB4Mjc0ODc3NGMsIDB4MzRiMGJjYjUsDQogIDB4MzkxYzBjYjMsIDB4NGVkOGFhNGEsIDB4NWI5Y2NhNGYsIDB4NjgyZTZmZjMsDQogIDB4NzQ4ZjgyZWUsIDB4NzhhNTYzNmYsIDB4ODRjODc4MTQsIDB4OGNjNzAyMDgsDQogIDB4OTBiZWZmZmEsIDB4YTQ1MDZjZWIsIDB4YmVmOWEzZjcsIDB4YzY3MTc4ZjINCl07DQoNCnZhciBzaGE1MTJfSyA9IFsNCiAgMHg0MjhhMmY5OCwgMHhkNzI4YWUyMiwgMHg3MTM3NDQ5MSwgMHgyM2VmNjVjZCwNCiAgMHhiNWMwZmJjZiwgMHhlYzRkM2IyZiwgMHhlOWI1ZGJhNSwgMHg4MTg5ZGJiYywNCiAgMHgzOTU2YzI1YiwgMHhmMzQ4YjUzOCwgMHg1OWYxMTFmMSwgMHhiNjA1ZDAxOSwNCiAgMHg5MjNmODJhNCwgMHhhZjE5NGY5YiwgMHhhYjFjNWVkNSwgMHhkYTZkODExOCwNCiAgMHhkODA3YWE5OCwgMHhhMzAzMDI0MiwgMHgxMjgzNWIwMSwgMHg0NTcwNmZiZSwNCiAgMHgyNDMxODViZSwgMHg0ZWU0YjI4YywgMHg1NTBjN2RjMywgMHhkNWZmYjRlMiwNCiAgMHg3MmJlNWQ3NCwgMHhmMjdiODk2ZiwgMHg4MGRlYjFmZSwgMHgzYjE2OTZiMSwNCiAgMHg5YmRjMDZhNywgMHgyNWM3MTIzNSwgMHhjMTliZjE3NCwgMHhjZjY5MjY5NCwNCiAgMHhlNDliNjljMSwgMHg5ZWYxNGFkMiwgMHhlZmJlNDc4NiwgMHgzODRmMjVlMywNCiAgMHgwZmMxOWRjNiwgMHg4YjhjZDViNSwgMHgyNDBjYTFjYywgMHg3N2FjOWM2NSwNCiAgMHgyZGU5MmM2ZiwgMHg1OTJiMDI3NSwgMHg0YTc0ODRhYSwgMHg2ZWE2ZTQ4MywNCiAgMHg1Y2IwYTlkYywgMHhiZDQxZmJkNCwgMHg3NmY5ODhkYSwgMHg4MzExNTNiNSwNCiAgMHg5ODNlNTE1MiwgMHhlZTY2ZGZhYiwgMHhhODMxYzY2ZCwgMHgyZGI0MzIxMCwNCiAgMHhiMDAzMjdjOCwgMHg5OGZiMjEzZiwgMHhiZjU5N2ZjNywgMHhiZWVmMGVlNCwNCiAgMHhjNmUwMGJmMywgMHgzZGE4OGZjMiwgMHhkNWE3OTE0NywgMHg5MzBhYTcyNSwNCiAgMHgwNmNhNjM1MSwgMHhlMDAzODI2ZiwgMHgxNDI5Mjk2NywgMHgwYTBlNmU3MCwNCiAgMHgyN2I3MGE4NSwgMHg0NmQyMmZmYywgMHgyZTFiMjEzOCwgMHg1YzI2YzkyNiwNCiAgMHg0ZDJjNmRmYywgMHg1YWM0MmFlZCwgMHg1MzM4MGQxMywgMHg5ZDk1YjNkZiwNCiAgMHg2NTBhNzM1NCwgMHg4YmFmNjNkZSwgMHg3NjZhMGFiYiwgMHgzYzc3YjJhOCwNCiAgMHg4MWMyYzkyZSwgMHg0N2VkYWVlNiwgMHg5MjcyMmM4NSwgMHgxNDgyMzUzYiwNCiAgMHhhMmJmZThhMSwgMHg0Y2YxMDM2NCwgMHhhODFhNjY0YiwgMHhiYzQyMzAwMSwNCiAgMHhjMjRiOGI3MCwgMHhkMGY4OTc5MSwgMHhjNzZjNTFhMywgMHgwNjU0YmUzMCwNCiAgMHhkMTkyZTgxOSwgMHhkNmVmNTIxOCwgMHhkNjk5MDYyNCwgMHg1NTY1YTkxMCwNCiAgMHhmNDBlMzU4NSwgMHg1NzcxMjAyYSwgMHgxMDZhYTA3MCwgMHgzMmJiZDFiOCwNCiAgMHgxOWE0YzExNiwgMHhiOGQyZDBjOCwgMHgxZTM3NmMwOCwgMHg1MTQxYWI1MywNCiAgMHgyNzQ4Nzc0YywgMHhkZjhlZWI5OSwgMHgzNGIwYmNiNSwgMHhlMTliNDhhOCwNCiAgMHgzOTFjMGNiMywgMHhjNWM5NWE2MywgMHg0ZWQ4YWE0YSwgMHhlMzQxOGFjYiwNCiAgMHg1YjljY2E0ZiwgMHg3NzYzZTM3MywgMHg2ODJlNmZmMywgMHhkNmIyYjhhMywNCiAgMHg3NDhmODJlZSwgMHg1ZGVmYjJmYywgMHg3OGE1NjM2ZiwgMHg0MzE3MmY2MCwNCiAgMHg4NGM4NzgxNCwgMHhhMWYwYWI3MiwgMHg4Y2M3MDIwOCwgMHgxYTY0MzllYywNCiAgMHg5MGJlZmZmYSwgMHgyMzYzMWUyOCwgMHhhNDUwNmNlYiwgMHhkZTgyYmRlOSwNCiAgMHhiZWY5YTNmNywgMHhiMmM2NzkxNSwgMHhjNjcxNzhmMiwgMHhlMzcyNTMyYiwNCiAgMHhjYTI3M2VjZSwgMHhlYTI2NjE5YywgMHhkMTg2YjhjNywgMHgyMWMwYzIwNywNCiAgMHhlYWRhN2RkNiwgMHhjZGUwZWIxZSwgMHhmNTdkNGY3ZiwgMHhlZTZlZDE3OCwNCiAgMHgwNmYwNjdhYSwgMHg3MjE3NmZiYSwgMHgwYTYzN2RjNSwgMHhhMmM4OThhNiwNCiAgMHgxMTNmOTgwNCwgMHhiZWY5MGRhZSwgMHgxYjcxMGIzNSwgMHgxMzFjNDcxYiwNCiAgMHgyOGRiNzdmNSwgMHgyMzA0N2Q4NCwgMHgzMmNhYWI3YiwgMHg0MGM3MjQ5MywNCiAgMHgzYzllYmUwYSwgMHgxNWM5YmViYywgMHg0MzFkNjdjNCwgMHg5YzEwMGQ0YywNCiAgMHg0Y2M1ZDRiZSwgMHhjYjNlNDJiNiwgMHg1OTdmMjk5YywgMHhmYzY1N2UyYSwNCiAgMHg1ZmNiNmZhYiwgMHgzYWQ2ZmFlYywgMHg2YzQ0MTk4YywgMHg0YTQ3NTgxNw0KXTsNCg0KdmFyIHNoYTFfSyA9IFsNCiAgMHg1QTgyNzk5OSwgMHg2RUQ5RUJBMSwNCiAgMHg4RjFCQkNEQywgMHhDQTYyQzFENg0KXTsNCg0KZnVuY3Rpb24gU0hBMjU2KCkgew0KICBpZiAoISh0aGlzIGluc3RhbmNlb2YgU0hBMjU2KSkNCiAgICByZXR1cm4gbmV3IFNIQTI1NigpOw0KDQogIEJsb2NrSGFzaC5jYWxsKHRoaXMpOw0KICB0aGlzLmggPSBbIDB4NmEwOWU2NjcsIDB4YmI2N2FlODUsIDB4M2M2ZWYzNzIsIDB4YTU0ZmY1M2EsDQogICAgICAgICAgICAgMHg1MTBlNTI3ZiwgMHg5YjA1Njg4YywgMHgxZjgzZDlhYiwgMHg1YmUwY2QxOSBdOw0KICB0aGlzLmsgPSBzaGEyNTZfSzsNCiAgdGhpcy5XID0gbmV3IEFycmF5KDY0KTsNCn0NCnV0aWxzLmluaGVyaXRzKFNIQTI1NiwgQmxvY2tIYXNoKTsNCmV4cG9ydHMuc2hhMjU2ID0gU0hBMjU2Ow0KDQpTSEEyNTYuYmxvY2tTaXplID0gNTEyOw0KU0hBMjU2Lm91dFNpemUgPSAyNTY7DQpTSEEyNTYuaG1hY1N0cmVuZ3RoID0gMTkyOw0KU0hBMjU2LnBhZExlbmd0aCA9IDY0Ow0KDQpTSEEyNTYucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiBfdXBkYXRlKG1zZywgc3RhcnQpIHsNCiAgdmFyIFcgPSB0aGlzLlc7DQoNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCAxNjsgaSsrKQ0KICAgIFdbaV0gPSBtc2dbc3RhcnQgKyBpXTsNCiAgZm9yICg7IGkgPCBXLmxlbmd0aDsgaSsrKQ0KICAgIFdbaV0gPSBzdW0zMl80KGcxXzI1NihXW2kgLSAyXSksIFdbaSAtIDddLCBnMF8yNTYoV1tpIC0gMTVdKSwgV1tpIC0gMTZdKTsNCg0KICB2YXIgYSA9IHRoaXMuaFswXTsNCiAgdmFyIGIgPSB0aGlzLmhbMV07DQogIHZhciBjID0gdGhpcy5oWzJdOw0KICB2YXIgZCA9IHRoaXMuaFszXTsNCiAgdmFyIGUgPSB0aGlzLmhbNF07DQogIHZhciBmID0gdGhpcy5oWzVdOw0KICB2YXIgZyA9IHRoaXMuaFs2XTsNCiAgdmFyIGggPSB0aGlzLmhbN107DQoNCiAgYXNzZXJ0KHRoaXMuay5sZW5ndGggPT09IFcubGVuZ3RoKTsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBXLmxlbmd0aDsgaSsrKSB7DQogICAgdmFyIFQxID0gc3VtMzJfNShoLCBzMV8yNTYoZSksIGNoMzIoZSwgZiwgZyksIHRoaXMua1tpXSwgV1tpXSk7DQogICAgdmFyIFQyID0gc3VtMzIoczBfMjU2KGEpLCBtYWozMihhLCBiLCBjKSk7DQogICAgaCA9IGc7DQogICAgZyA9IGY7DQogICAgZiA9IGU7DQogICAgZSA9IHN1bTMyKGQsIFQxKTsNCiAgICBkID0gYzsNCiAgICBjID0gYjsNCiAgICBiID0gYTsNCiAgICBhID0gc3VtMzIoVDEsIFQyKTsNCiAgfQ0KDQogIHRoaXMuaFswXSA9IHN1bTMyKHRoaXMuaFswXSwgYSk7DQogIHRoaXMuaFsxXSA9IHN1bTMyKHRoaXMuaFsxXSwgYik7DQogIHRoaXMuaFsyXSA9IHN1bTMyKHRoaXMuaFsyXSwgYyk7DQogIHRoaXMuaFszXSA9IHN1bTMyKHRoaXMuaFszXSwgZCk7DQogIHRoaXMuaFs0XSA9IHN1bTMyKHRoaXMuaFs0XSwgZSk7DQogIHRoaXMuaFs1XSA9IHN1bTMyKHRoaXMuaFs1XSwgZik7DQogIHRoaXMuaFs2XSA9IHN1bTMyKHRoaXMuaFs2XSwgZyk7DQogIHRoaXMuaFs3XSA9IHN1bTMyKHRoaXMuaFs3XSwgaCk7DQp9Ow0KDQpTSEEyNTYucHJvdG90eXBlLl9kaWdlc3QgPSBmdW5jdGlvbiBkaWdlc3QoZW5jKSB7DQogIGlmIChlbmMgPT09ICdoZXgnKQ0KICAgIHJldHVybiB1dGlscy50b0hleDMyKHRoaXMuaCwgJ2JpZycpOw0KICBlbHNlDQogICAgcmV0dXJuIHV0aWxzLnNwbGl0MzIodGhpcy5oLCAnYmlnJyk7DQp9Ow0KDQpmdW5jdGlvbiBTSEEyMjQoKSB7DQogIGlmICghKHRoaXMgaW5zdGFuY2VvZiBTSEEyMjQpKQ0KICAgIHJldHVybiBuZXcgU0hBMjI0KCk7DQoNCiAgU0hBMjU2LmNhbGwodGhpcyk7DQogIHRoaXMuaCA9IFsgMHhjMTA1OWVkOCwgMHgzNjdjZDUwNywgMHgzMDcwZGQxNywgMHhmNzBlNTkzOSwNCiAgICAgICAgICAgICAweGZmYzAwYjMxLCAweDY4NTgxNTExLCAweDY0Zjk4ZmE3LCAweGJlZmE0ZmE0IF07DQp9DQp1dGlscy5pbmhlcml0cyhTSEEyMjQsIFNIQTI1Nik7DQpleHBvcnRzLnNoYTIyNCA9IFNIQTIyNDsNCg0KU0hBMjI0LmJsb2NrU2l6ZSA9IDUxMjsNClNIQTIyNC5vdXRTaXplID0gMjI0Ow0KU0hBMjI0LmhtYWNTdHJlbmd0aCA9IDE5MjsNClNIQTIyNC5wYWRMZW5ndGggPSA2NDsNCg0KU0hBMjI0LnByb3RvdHlwZS5fZGlnZXN0ID0gZnVuY3Rpb24gZGlnZXN0KGVuYykgew0KICAvLyBKdXN0IHRydW5jYXRlIG91dHB1dA0KICBpZiAoZW5jID09PSAnaGV4JykNCiAgICByZXR1cm4gdXRpbHMudG9IZXgzMih0aGlzLmguc2xpY2UoMCwgNyksICdiaWcnKTsNCiAgZWxzZQ0KICAgIHJldHVybiB1dGlscy5zcGxpdDMyKHRoaXMuaC5zbGljZSgwLCA3KSwgJ2JpZycpOw0KfTsNCg0KZnVuY3Rpb24gU0hBNTEyKCkgew0KICBpZiAoISh0aGlzIGluc3RhbmNlb2YgU0hBNTEyKSkNCiAgICByZXR1cm4gbmV3IFNIQTUxMigpOw0KDQogIEJsb2NrSGFzaC5jYWxsKHRoaXMpOw0KICB0aGlzLmggPSBbIDB4NmEwOWU2NjcsIDB4ZjNiY2M5MDgsDQogICAgICAgICAgICAgMHhiYjY3YWU4NSwgMHg4NGNhYTczYiwNCiAgICAgICAgICAgICAweDNjNmVmMzcyLCAweGZlOTRmODJiLA0KICAgICAgICAgICAgIDB4YTU0ZmY1M2EsIDB4NWYxZDM2ZjEsDQogICAgICAgICAgICAgMHg1MTBlNTI3ZiwgMHhhZGU2ODJkMSwNCiAgICAgICAgICAgICAweDliMDU2ODhjLCAweDJiM2U2YzFmLA0KICAgICAgICAgICAgIDB4MWY4M2Q5YWIsIDB4ZmI0MWJkNmIsDQogICAgICAgICAgICAgMHg1YmUwY2QxOSwgMHgxMzdlMjE3OSBdOw0KICB0aGlzLmsgPSBzaGE1MTJfSzsNCiAgdGhpcy5XID0gbmV3IEFycmF5KDE2MCk7DQp9DQp1dGlscy5pbmhlcml0cyhTSEE1MTIsIEJsb2NrSGFzaCk7DQpleHBvcnRzLnNoYTUxMiA9IFNIQTUxMjsNCg0KU0hBNTEyLmJsb2NrU2l6ZSA9IDEwMjQ7DQpTSEE1MTIub3V0U2l6ZSA9IDUxMjsNClNIQTUxMi5obWFjU3RyZW5ndGggPSAxOTI7DQpTSEE1MTIucGFkTGVuZ3RoID0gMTI4Ow0KDQpTSEE1MTIucHJvdG90eXBlLl9wcmVwYXJlQmxvY2sgPSBmdW5jdGlvbiBfcHJlcGFyZUJsb2NrKG1zZywgc3RhcnQpIHsNCiAgdmFyIFcgPSB0aGlzLlc7DQoNCiAgLy8gMzIgeCAzMmJpdCB3b3Jkcw0KICBmb3IgKHZhciBpID0gMDsgaSA8IDMyOyBpKyspDQogICAgV1tpXSA9IG1zZ1tzdGFydCArIGldOw0KICBmb3IgKDsgaSA8IFcubGVuZ3RoOyBpICs9IDIpIHsNCiAgICB2YXIgYzBfaGkgPSBnMV81MTJfaGkoV1tpIC0gNF0sIFdbaSAtIDNdKTsgIC8vIGkgLSAyDQogICAgdmFyIGMwX2xvID0gZzFfNTEyX2xvKFdbaSAtIDRdLCBXW2kgLSAzXSk7DQogICAgdmFyIGMxX2hpID0gV1tpIC0gMTRdOyAgLy8gaSAtIDcNCiAgICB2YXIgYzFfbG8gPSBXW2kgLSAxM107DQogICAgdmFyIGMyX2hpID0gZzBfNTEyX2hpKFdbaSAtIDMwXSwgV1tpIC0gMjldKTsgIC8vIGkgLSAxNQ0KICAgIHZhciBjMl9sbyA9IGcwXzUxMl9sbyhXW2kgLSAzMF0sIFdbaSAtIDI5XSk7DQogICAgdmFyIGMzX2hpID0gV1tpIC0gMzJdOyAgLy8gaSAtIDE2DQogICAgdmFyIGMzX2xvID0gV1tpIC0gMzFdOw0KDQogICAgV1tpXSA9IHN1bTY0XzRfaGkoYzBfaGksIGMwX2xvLA0KICAgICAgICAgICAgICAgICAgICAgIGMxX2hpLCBjMV9sbywNCiAgICAgICAgICAgICAgICAgICAgICBjMl9oaSwgYzJfbG8sDQogICAgICAgICAgICAgICAgICAgICAgYzNfaGksIGMzX2xvKTsNCiAgICBXW2kgKyAxXSA9IHN1bTY0XzRfbG8oYzBfaGksIGMwX2xvLA0KICAgICAgICAgICAgICAgICAgICAgICAgICBjMV9oaSwgYzFfbG8sDQogICAgICAgICAgICAgICAgICAgICAgICAgIGMyX2hpLCBjMl9sbywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgYzNfaGksIGMzX2xvKTsNCiAgfQ0KfTsNCg0KU0hBNTEyLnByb3RvdHlwZS5fdXBkYXRlID0gZnVuY3Rpb24gX3VwZGF0ZShtc2csIHN0YXJ0KSB7DQogIHRoaXMuX3ByZXBhcmVCbG9jayhtc2csIHN0YXJ0KTsNCg0KICB2YXIgVyA9IHRoaXMuVzsNCg0KICB2YXIgYWggPSB0aGlzLmhbMF07DQogIHZhciBhbCA9IHRoaXMuaFsxXTsNCiAgdmFyIGJoID0gdGhpcy5oWzJdOw0KICB2YXIgYmwgPSB0aGlzLmhbM107DQogIHZhciBjaCA9IHRoaXMuaFs0XTsNCiAgdmFyIGNsID0gdGhpcy5oWzVdOw0KICB2YXIgZGggPSB0aGlzLmhbNl07DQogIHZhciBkbCA9IHRoaXMuaFs3XTsNCiAgdmFyIGVoID0gdGhpcy5oWzhdOw0KICB2YXIgZWwgPSB0aGlzLmhbOV07DQogIHZhciBmaCA9IHRoaXMuaFsxMF07DQogIHZhciBmbCA9IHRoaXMuaFsxMV07DQogIHZhciBnaCA9IHRoaXMuaFsxMl07DQogIHZhciBnbCA9IHRoaXMuaFsxM107DQogIHZhciBoaCA9IHRoaXMuaFsxNF07DQogIHZhciBobCA9IHRoaXMuaFsxNV07DQoNCiAgYXNzZXJ0KHRoaXMuay5sZW5ndGggPT09IFcubGVuZ3RoKTsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBXLmxlbmd0aDsgaSArPSAyKSB7DQogICAgdmFyIGMwX2hpID0gaGg7DQogICAgdmFyIGMwX2xvID0gaGw7DQogICAgdmFyIGMxX2hpID0gczFfNTEyX2hpKGVoLCBlbCk7DQogICAgdmFyIGMxX2xvID0gczFfNTEyX2xvKGVoLCBlbCk7DQogICAgdmFyIGMyX2hpID0gY2g2NF9oaShlaCwgZWwsIGZoLCBmbCwgZ2gsIGdsKTsNCiAgICB2YXIgYzJfbG8gPSBjaDY0X2xvKGVoLCBlbCwgZmgsIGZsLCBnaCwgZ2wpOw0KICAgIHZhciBjM19oaSA9IHRoaXMua1tpXTsNCiAgICB2YXIgYzNfbG8gPSB0aGlzLmtbaSArIDFdOw0KICAgIHZhciBjNF9oaSA9IFdbaV07DQogICAgdmFyIGM0X2xvID0gV1tpICsgMV07DQoNCiAgICB2YXIgVDFfaGkgPSBzdW02NF81X2hpKGMwX2hpLCBjMF9sbywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgIGMxX2hpLCBjMV9sbywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgIGMyX2hpLCBjMl9sbywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgIGMzX2hpLCBjM19sbywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgIGM0X2hpLCBjNF9sbyk7DQogICAgdmFyIFQxX2xvID0gc3VtNjRfNV9sbyhjMF9oaSwgYzBfbG8sDQogICAgICAgICAgICAgICAgICAgICAgICAgICBjMV9oaSwgYzFfbG8sDQogICAgICAgICAgICAgICAgICAgICAgICAgICBjMl9oaSwgYzJfbG8sDQogICAgICAgICAgICAgICAgICAgICAgICAgICBjM19oaSwgYzNfbG8sDQogICAgICAgICAgICAgICAgICAgICAgICAgICBjNF9oaSwgYzRfbG8pOw0KDQogICAgdmFyIGMwX2hpID0gczBfNTEyX2hpKGFoLCBhbCk7DQogICAgdmFyIGMwX2xvID0gczBfNTEyX2xvKGFoLCBhbCk7DQogICAgdmFyIGMxX2hpID0gbWFqNjRfaGkoYWgsIGFsLCBiaCwgYmwsIGNoLCBjbCk7DQogICAgdmFyIGMxX2xvID0gbWFqNjRfbG8oYWgsIGFsLCBiaCwgYmwsIGNoLCBjbCk7DQoNCiAgICB2YXIgVDJfaGkgPSBzdW02NF9oaShjMF9oaSwgYzBfbG8sIGMxX2hpLCBjMV9sbyk7DQogICAgdmFyIFQyX2xvID0gc3VtNjRfbG8oYzBfaGksIGMwX2xvLCBjMV9oaSwgYzFfbG8pOw0KDQogICAgaGggPSBnaDsNCiAgICBobCA9IGdsOw0KDQogICAgZ2ggPSBmaDsNCiAgICBnbCA9IGZsOw0KDQogICAgZmggPSBlaDsNCiAgICBmbCA9IGVsOw0KDQogICAgZWggPSBzdW02NF9oaShkaCwgZGwsIFQxX2hpLCBUMV9sbyk7DQogICAgZWwgPSBzdW02NF9sbyhkbCwgZGwsIFQxX2hpLCBUMV9sbyk7DQoNCiAgICBkaCA9IGNoOw0KICAgIGRsID0gY2w7DQoNCiAgICBjaCA9IGJoOw0KICAgIGNsID0gYmw7DQoNCiAgICBiaCA9IGFoOw0KICAgIGJsID0gYWw7DQoNCiAgICBhaCA9IHN1bTY0X2hpKFQxX2hpLCBUMV9sbywgVDJfaGksIFQyX2xvKTsNCiAgICBhbCA9IHN1bTY0X2xvKFQxX2hpLCBUMV9sbywgVDJfaGksIFQyX2xvKTsNCiAgfQ0KDQogIHN1bTY0KHRoaXMuaCwgMCwgYWgsIGFsKTsNCiAgc3VtNjQodGhpcy5oLCAyLCBiaCwgYmwpOw0KICBzdW02NCh0aGlzLmgsIDQsIGNoLCBjbCk7DQogIHN1bTY0KHRoaXMuaCwgNiwgZGgsIGRsKTsNCiAgc3VtNjQodGhpcy5oLCA4LCBlaCwgZWwpOw0KICBzdW02NCh0aGlzLmgsIDEwLCBmaCwgZmwpOw0KICBzdW02NCh0aGlzLmgsIDEyLCBnaCwgZ2wpOw0KICBzdW02NCh0aGlzLmgsIDE0LCBoaCwgaGwpOw0KfTsNCg0KU0hBNTEyLnByb3RvdHlwZS5fZGlnZXN0ID0gZnVuY3Rpb24gZGlnZXN0KGVuYykgew0KICBpZiAoZW5jID09PSAnaGV4JykNCiAgICByZXR1cm4gdXRpbHMudG9IZXgzMih0aGlzLmgsICdiaWcnKTsNCiAgZWxzZQ0KICAgIHJldHVybiB1dGlscy5zcGxpdDMyKHRoaXMuaCwgJ2JpZycpOw0KfTsNCg0KZnVuY3Rpb24gU0hBMzg0KCkgew0KICBpZiAoISh0aGlzIGluc3RhbmNlb2YgU0hBMzg0KSkNCiAgICByZXR1cm4gbmV3IFNIQTM4NCgpOw0KDQogIFNIQTUxMi5jYWxsKHRoaXMpOw0KICB0aGlzLmggPSBbIDB4Y2JiYjlkNWQsIDB4YzEwNTllZDgsDQogICAgICAgICAgICAgMHg2MjlhMjkyYSwgMHgzNjdjZDUwNywNCiAgICAgICAgICAgICAweDkxNTkwMTVhLCAweDMwNzBkZDE3LA0KICAgICAgICAgICAgIDB4MTUyZmVjZDgsIDB4ZjcwZTU5MzksDQogICAgICAgICAgICAgMHg2NzMzMjY2NywgMHhmZmMwMGIzMSwNCiAgICAgICAgICAgICAweDhlYjQ0YTg3LCAweDY4NTgxNTExLA0KICAgICAgICAgICAgIDB4ZGIwYzJlMGQsIDB4NjRmOThmYTcsDQogICAgICAgICAgICAgMHg0N2I1NDgxZCwgMHhiZWZhNGZhNCBdOw0KfQ0KdXRpbHMuaW5oZXJpdHMoU0hBMzg0LCBTSEE1MTIpOw0KZXhwb3J0cy5zaGEzODQgPSBTSEEzODQ7DQoNClNIQTM4NC5ibG9ja1NpemUgPSAxMDI0Ow0KU0hBMzg0Lm91dFNpemUgPSAzODQ7DQpTSEEzODQuaG1hY1N0cmVuZ3RoID0gMTkyOw0KU0hBMzg0LnBhZExlbmd0aCA9IDEyODsNCg0KU0hBMzg0LnByb3RvdHlwZS5fZGlnZXN0ID0gZnVuY3Rpb24gZGlnZXN0KGVuYykgew0KICBpZiAoZW5jID09PSAnaGV4JykNCiAgICByZXR1cm4gdXRpbHMudG9IZXgzMih0aGlzLmguc2xpY2UoMCwgMTIpLCAnYmlnJyk7DQogIGVsc2UNCiAgICByZXR1cm4gdXRpbHMuc3BsaXQzMih0aGlzLmguc2xpY2UoMCwgMTIpLCAnYmlnJyk7DQp9Ow0KDQpmdW5jdGlvbiBTSEExKCkgew0KICBpZiAoISh0aGlzIGluc3RhbmNlb2YgU0hBMSkpDQogICAgcmV0dXJuIG5ldyBTSEExKCk7DQoNCiAgQmxvY2tIYXNoLmNhbGwodGhpcyk7DQogIHRoaXMuaCA9IFsgMHg2NzQ1MjMwMSwgMHhlZmNkYWI4OSwgMHg5OGJhZGNmZSwNCiAgICAgICAgICAgICAweDEwMzI1NDc2LCAweGMzZDJlMWYwIF07DQogIHRoaXMuVyA9IG5ldyBBcnJheSg4MCk7DQp9DQoNCnV0aWxzLmluaGVyaXRzKFNIQTEsIEJsb2NrSGFzaCk7DQpleHBvcnRzLnNoYTEgPSBTSEExOw0KDQpTSEExLmJsb2NrU2l6ZSA9IDUxMjsNClNIQTEub3V0U2l6ZSA9IDE2MDsNClNIQTEuaG1hY1N0cmVuZ3RoID0gODA7DQpTSEExLnBhZExlbmd0aCA9IDY0Ow0KDQpTSEExLnByb3RvdHlwZS5fdXBkYXRlID0gZnVuY3Rpb24gX3VwZGF0ZShtc2csIHN0YXJ0KSB7DQogIHZhciBXID0gdGhpcy5XOw0KDQogIGZvciAodmFyIGkgPSAwOyBpIDwgMTY7IGkrKykNCiAgICBXW2ldID0gbXNnW3N0YXJ0ICsgaV07DQoNCiAgZm9yKDsgaSA8IFcubGVuZ3RoOyBpKyspDQogICAgV1tpXSA9IHJvdGwzMihXW2kgLSAzXSBeIFdbaSAtIDhdIF4gV1tpIC0gMTRdIF4gV1tpIC0gMTZdLCAxKTsNCg0KICB2YXIgYSA9IHRoaXMuaFswXTsNCiAgdmFyIGIgPSB0aGlzLmhbMV07DQogIHZhciBjID0gdGhpcy5oWzJdOw0KICB2YXIgZCA9IHRoaXMuaFszXTsNCiAgdmFyIGUgPSB0aGlzLmhbNF07DQoNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBXLmxlbmd0aDsgaSsrKSB7DQogICAgdmFyIHMgPSB+fihpIC8gMjApOw0KICAgIHZhciB0ID0gc3VtMzJfNShyb3RsMzIoYSwgNSksIGZ0XzEocywgYiwgYywgZCksIGUsIFdbaV0sIHNoYTFfS1tzXSk7DQogICAgZSA9IGQ7DQogICAgZCA9IGM7DQogICAgYyA9IHJvdGwzMihiLCAzMCk7DQogICAgYiA9IGE7DQogICAgYSA9IHQ7DQogIH0NCg0KICB0aGlzLmhbMF0gPSBzdW0zMih0aGlzLmhbMF0sIGEpOw0KICB0aGlzLmhbMV0gPSBzdW0zMih0aGlzLmhbMV0sIGIpOw0KICB0aGlzLmhbMl0gPSBzdW0zMih0aGlzLmhbMl0sIGMpOw0KICB0aGlzLmhbM10gPSBzdW0zMih0aGlzLmhbM10sIGQpOw0KICB0aGlzLmhbNF0gPSBzdW0zMih0aGlzLmhbNF0sIGUpOw0KfTsNCg0KU0hBMS5wcm90b3R5cGUuX2RpZ2VzdCA9IGZ1bmN0aW9uIGRpZ2VzdChlbmMpIHsNCiAgaWYgKGVuYyA9PT0gJ2hleCcpDQogICAgcmV0dXJuIHV0aWxzLnRvSGV4MzIodGhpcy5oLCAnYmlnJyk7DQogIGVsc2UNCiAgICByZXR1cm4gdXRpbHMuc3BsaXQzMih0aGlzLmgsICdiaWcnKTsNCn07DQoNCmZ1bmN0aW9uIGNoMzIoeCwgeSwgeikgew0KICByZXR1cm4gKHggJiB5KSBeICgofngpICYgeik7DQp9DQoNCmZ1bmN0aW9uIG1hajMyKHgsIHksIHopIHsNCiAgcmV0dXJuICh4ICYgeSkgXiAoeCAmIHopIF4gKHkgJiB6KTsNCn0NCg0KZnVuY3Rpb24gcDMyKHgsIHksIHopIHsNCiAgcmV0dXJuIHggXiB5IF4gejsNCn0NCg0KZnVuY3Rpb24gczBfMjU2KHgpIHsNCiAgcmV0dXJuIHJvdHIzMih4LCAyKSBeIHJvdHIzMih4LCAxMykgXiByb3RyMzIoeCwgMjIpOw0KfQ0KDQpmdW5jdGlvbiBzMV8yNTYoeCkgew0KICByZXR1cm4gcm90cjMyKHgsIDYpIF4gcm90cjMyKHgsIDExKSBeIHJvdHIzMih4LCAyNSk7DQp9DQoNCmZ1bmN0aW9uIGcwXzI1Nih4KSB7DQogIHJldHVybiByb3RyMzIoeCwgNykgXiByb3RyMzIoeCwgMTgpIF4gKHggPj4+IDMpOw0KfQ0KDQpmdW5jdGlvbiBnMV8yNTYoeCkgew0KICByZXR1cm4gcm90cjMyKHgsIDE3KSBeIHJvdHIzMih4LCAxOSkgXiAoeCA+Pj4gMTApOw0KfQ0KDQpmdW5jdGlvbiBmdF8xKHMsIHgsIHksIHopIHsNCiAgaWYgKHMgPT09IDApDQogICAgcmV0dXJuIGNoMzIoeCwgeSwgeik7DQogIGlmIChzID09PSAxIHx8IHMgPT09IDMpDQogICAgcmV0dXJuIHAzMih4LCB5LCB6KTsNCiAgaWYgKHMgPT09IDIpDQogICAgcmV0dXJuIG1hajMyKHgsIHksIHopOw0KfQ0KDQpmdW5jdGlvbiBjaDY0X2hpKHhoLCB4bCwgeWgsIHlsLCB6aCwgemwpIHsNCiAgdmFyIHIgPSAoeGggJiB5aCkgXiAoKH54aCkgJiB6aCk7DQogIGlmIChyIDwgMCkNCiAgICByICs9IDB4MTAwMDAwMDAwOw0KICByZXR1cm4gcjsNCn0NCg0KZnVuY3Rpb24gY2g2NF9sbyh4aCwgeGwsIHloLCB5bCwgemgsIHpsKSB7DQogIHZhciByID0gKHhsICYgeWwpIF4gKCh+eGwpICYgemwpOw0KICBpZiAociA8IDApDQogICAgciArPSAweDEwMDAwMDAwMDsNCiAgcmV0dXJuIHI7DQp9DQoNCmZ1bmN0aW9uIG1hajY0X2hpKHhoLCB4bCwgeWgsIHlsLCB6aCwgemwpIHsNCiAgdmFyIHIgPSAoeGggJiB5aCkgXiAoeGggJiB6aCkgXiAoeWggJiB6aCk7DQogIGlmIChyIDwgMCkNCiAgICByICs9IDB4MTAwMDAwMDAwOw0KICByZXR1cm4gcjsNCn0NCg0KZnVuY3Rpb24gbWFqNjRfbG8oeGgsIHhsLCB5aCwgeWwsIHpoLCB6bCkgew0KICB2YXIgciA9ICh4bCAmIHlsKSBeICh4bCAmIHpsKSBeICh5bCAmIHpsKTsNCiAgaWYgKHIgPCAwKQ0KICAgIHIgKz0gMHgxMDAwMDAwMDA7DQogIHJldHVybiByOw0KfQ0KDQpmdW5jdGlvbiBzMF81MTJfaGkoeGgsIHhsKSB7DQogIHZhciBjMF9oaSA9IHJvdHI2NF9oaSh4aCwgeGwsIDI4KTsNCiAgdmFyIGMxX2hpID0gcm90cjY0X2hpKHhsLCB4aCwgMik7ICAvLyAzNA0KICB2YXIgYzJfaGkgPSByb3RyNjRfaGkoeGwsIHhoLCA3KTsgIC8vIDM5DQoNCiAgdmFyIHIgPSBjMF9oaSBeIGMxX2hpIF4gYzJfaGk7DQogIGlmIChyIDwgMCkNCiAgICByICs9IDB4MTAwMDAwMDAwOw0KICByZXR1cm4gcjsNCn0NCg0KZnVuY3Rpb24gczBfNTEyX2xvKHhoLCB4bCkgew0KICB2YXIgYzBfbG8gPSByb3RyNjRfbG8oeGgsIHhsLCAyOCk7DQogIHZhciBjMV9sbyA9IHJvdHI2NF9sbyh4bCwgeGgsIDIpOyAgLy8gMzQNCiAgdmFyIGMyX2xvID0gcm90cjY0X2xvKHhsLCB4aCwgNyk7ICAvLyAzOQ0KDQogIHZhciByID0gYzBfbG8gXiBjMV9sbyBeIGMyX2xvOw0KICBpZiAociA8IDApDQogICAgciArPSAweDEwMDAwMDAwMDsNCiAgcmV0dXJuIHI7DQp9DQoNCmZ1bmN0aW9uIHMxXzUxMl9oaSh4aCwgeGwpIHsNCiAgdmFyIGMwX2hpID0gcm90cjY0X2hpKHhoLCB4bCwgMTQpOw0KICB2YXIgYzFfaGkgPSByb3RyNjRfaGkoeGgsIHhsLCAxOCk7DQogIHZhciBjMl9oaSA9IHJvdHI2NF9oaSh4bCwgeGgsIDkpOyAgLy8gNDENCg0KICB2YXIgciA9IGMwX2hpIF4gYzFfaGkgXiBjMl9oaTsNCiAgaWYgKHIgPCAwKQ0KICAgIHIgKz0gMHgxMDAwMDAwMDA7DQogIHJldHVybiByOw0KfQ0KDQpmdW5jdGlvbiBzMV81MTJfbG8oeGgsIHhsKSB7DQogIHZhciBjMF9sbyA9IHJvdHI2NF9sbyh4aCwgeGwsIDE0KTsNCiAgdmFyIGMxX2xvID0gcm90cjY0X2xvKHhoLCB4bCwgMTgpOw0KICB2YXIgYzJfbG8gPSByb3RyNjRfbG8oeGwsIHhoLCA5KTsgIC8vIDQxDQoNCiAgdmFyIHIgPSBjMF9sbyBeIGMxX2xvIF4gYzJfbG87DQogIGlmIChyIDwgMCkNCiAgICByICs9IDB4MTAwMDAwMDAwOw0KICByZXR1cm4gcjsNCn0NCg0KZnVuY3Rpb24gZzBfNTEyX2hpKHhoLCB4bCkgew0KICB2YXIgYzBfaGkgPSByb3RyNjRfaGkoeGgsIHhsLCAxKTsNCiAgdmFyIGMxX2hpID0gcm90cjY0X2hpKHhoLCB4bCwgOCk7DQogIHZhciBjMl9oaSA9IHNocjY0X2hpKHhoLCB4bCwgNyk7DQoNCiAgdmFyIHIgPSBjMF9oaSBeIGMxX2hpIF4gYzJfaGk7DQogIGlmIChyIDwgMCkNCiAgICByICs9IDB4MTAwMDAwMDAwOw0KICByZXR1cm4gcjsNCn0NCg0KZnVuY3Rpb24gZzBfNTEyX2xvKHhoLCB4bCkgew0KICB2YXIgYzBfbG8gPSByb3RyNjRfbG8oeGgsIHhsLCAxKTsNCiAgdmFyIGMxX2xvID0gcm90cjY0X2xvKHhoLCB4bCwgOCk7DQogIHZhciBjMl9sbyA9IHNocjY0X2xvKHhoLCB4bCwgNyk7DQoNCiAgdmFyIHIgPSBjMF9sbyBeIGMxX2xvIF4gYzJfbG87DQogIGlmIChyIDwgMCkNCiAgICByICs9IDB4MTAwMDAwMDAwOw0KICByZXR1cm4gcjsNCn0NCg0KZnVuY3Rpb24gZzFfNTEyX2hpKHhoLCB4bCkgew0KICB2YXIgYzBfaGkgPSByb3RyNjRfaGkoeGgsIHhsLCAxOSk7DQogIHZhciBjMV9oaSA9IHJvdHI2NF9oaSh4bCwgeGgsIDI5KTsgIC8vIDYxDQogIHZhciBjMl9oaSA9IHNocjY0X2hpKHhoLCB4bCwgNik7DQoNCiAgdmFyIHIgPSBjMF9oaSBeIGMxX2hpIF4gYzJfaGk7DQogIGlmIChyIDwgMCkNCiAgICByICs9IDB4MTAwMDAwMDAwOw0KICByZXR1cm4gcjsNCn0NCg0KZnVuY3Rpb24gZzFfNTEyX2xvKHhoLCB4bCkgew0KICB2YXIgYzBfbG8gPSByb3RyNjRfbG8oeGgsIHhsLCAxOSk7DQogIHZhciBjMV9sbyA9IHJvdHI2NF9sbyh4bCwgeGgsIDI5KTsgIC8vIDYxDQogIHZhciBjMl9sbyA9IHNocjY0X2xvKHhoLCB4bCwgNik7DQoNCiAgdmFyIHIgPSBjMF9sbyBeIGMxX2xvIF4gYzJfbG87DQogIGlmIChyIDwgMCkNCiAgICByICs9IDB4MTAwMDAwMDAwOw0KICByZXR1cm4gcjsNCn0NCg0KfSx7Ii4uL2hhc2giOjUyN31dLDUzMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgdXRpbHMgPSBleHBvcnRzOw0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTsNCg0KZnVuY3Rpb24gdG9BcnJheShtc2csIGVuYykgew0KICBpZiAoQXJyYXkuaXNBcnJheShtc2cpKQ0KICAgIHJldHVybiBtc2cuc2xpY2UoKTsNCiAgaWYgKCFtc2cpDQogICAgcmV0dXJuIFtdOw0KICB2YXIgcmVzID0gW107DQogIGlmICh0eXBlb2YgbXNnID09PSAnc3RyaW5nJykgew0KICAgIGlmICghZW5jKSB7DQogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5sZW5ndGg7IGkrKykgew0KICAgICAgICB2YXIgYyA9IG1zZy5jaGFyQ29kZUF0KGkpOw0KICAgICAgICB2YXIgaGkgPSBjID4+IDg7DQogICAgICAgIHZhciBsbyA9IGMgJiAweGZmOw0KICAgICAgICBpZiAoaGkpDQogICAgICAgICAgcmVzLnB1c2goaGksIGxvKTsNCiAgICAgICAgZWxzZQ0KICAgICAgICAgIHJlcy5wdXNoKGxvKTsNCiAgICAgIH0NCiAgICB9IGVsc2UgaWYgKGVuYyA9PT0gJ2hleCcpIHsNCiAgICAgIG1zZyA9IG1zZy5yZXBsYWNlKC9bXmEtejAtOV0rL2lnLCAnJyk7DQogICAgICBpZiAobXNnLmxlbmd0aCAlIDIgIT09IDApDQogICAgICAgIG1zZyA9ICcwJyArIG1zZzsNCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbXNnLmxlbmd0aDsgaSArPSAyKQ0KICAgICAgICByZXMucHVzaChwYXJzZUludChtc2dbaV0gKyBtc2dbaSArIDFdLCAxNikpOw0KICAgIH0NCiAgfSBlbHNlIHsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5sZW5ndGg7IGkrKykNCiAgICAgIHJlc1tpXSA9IG1zZ1tpXSB8IDA7DQogIH0NCiAgcmV0dXJuIHJlczsNCn0NCnV0aWxzLnRvQXJyYXkgPSB0b0FycmF5Ow0KDQpmdW5jdGlvbiB0b0hleChtc2cpIHsNCiAgdmFyIHJlcyA9ICcnOw0KICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5sZW5ndGg7IGkrKykNCiAgICByZXMgKz0gemVybzIobXNnW2ldLnRvU3RyaW5nKDE2KSk7DQogIHJldHVybiByZXM7DQp9DQp1dGlscy50b0hleCA9IHRvSGV4Ow0KDQpmdW5jdGlvbiBodG9ubCh3KSB7DQogIHZhciByZXMgPSAodyA+Pj4gMjQpIHwNCiAgICAgICAgICAgICgodyA+Pj4gOCkgJiAweGZmMDApIHwNCiAgICAgICAgICAgICgodyA8PCA4KSAmIDB4ZmYwMDAwKSB8DQogICAgICAgICAgICAoKHcgJiAweGZmKSA8PCAyNCk7DQogIHJldHVybiByZXMgPj4+IDA7DQp9DQp1dGlscy5odG9ubCA9IGh0b25sOw0KDQpmdW5jdGlvbiB0b0hleDMyKG1zZywgZW5kaWFuKSB7DQogIHZhciByZXMgPSAnJzsNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBtc2cubGVuZ3RoOyBpKyspIHsNCiAgICB2YXIgdyA9IG1zZ1tpXTsNCiAgICBpZiAoZW5kaWFuID09PSAnbGl0dGxlJykNCiAgICAgIHcgPSBodG9ubCh3KTsNCiAgICByZXMgKz0gemVybzgody50b1N0cmluZygxNikpOw0KICB9DQogIHJldHVybiByZXM7DQp9DQp1dGlscy50b0hleDMyID0gdG9IZXgzMjsNCg0KZnVuY3Rpb24gemVybzIod29yZCkgew0KICBpZiAod29yZC5sZW5ndGggPT09IDEpDQogICAgcmV0dXJuICcwJyArIHdvcmQ7DQogIGVsc2UNCiAgICByZXR1cm4gd29yZDsNCn0NCnV0aWxzLnplcm8yID0gemVybzI7DQoNCmZ1bmN0aW9uIHplcm84KHdvcmQpIHsNCiAgaWYgKHdvcmQubGVuZ3RoID09PSA3KQ0KICAgIHJldHVybiAnMCcgKyB3b3JkOw0KICBlbHNlIGlmICh3b3JkLmxlbmd0aCA9PT0gNikNCiAgICByZXR1cm4gJzAwJyArIHdvcmQ7DQogIGVsc2UgaWYgKHdvcmQubGVuZ3RoID09PSA1KQ0KICAgIHJldHVybiAnMDAwJyArIHdvcmQ7DQogIGVsc2UgaWYgKHdvcmQubGVuZ3RoID09PSA0KQ0KICAgIHJldHVybiAnMDAwMCcgKyB3b3JkOw0KICBlbHNlIGlmICh3b3JkLmxlbmd0aCA9PT0gMykNCiAgICByZXR1cm4gJzAwMDAwJyArIHdvcmQ7DQogIGVsc2UgaWYgKHdvcmQubGVuZ3RoID09PSAyKQ0KICAgIHJldHVybiAnMDAwMDAwJyArIHdvcmQ7DQogIGVsc2UgaWYgKHdvcmQubGVuZ3RoID09PSAxKQ0KICAgIHJldHVybiAnMDAwMDAwMCcgKyB3b3JkOw0KICBlbHNlDQogICAgcmV0dXJuIHdvcmQ7DQp9DQp1dGlscy56ZXJvOCA9IHplcm84Ow0KDQpmdW5jdGlvbiBqb2luMzIobXNnLCBzdGFydCwgZW5kLCBlbmRpYW4pIHsNCiAgdmFyIGxlbiA9IGVuZCAtIHN0YXJ0Ow0KICBhc3NlcnQobGVuICUgNCA9PT0gMCk7DQogIHZhciByZXMgPSBuZXcgQXJyYXkobGVuIC8gNCk7DQogIGZvciAodmFyIGkgPSAwLCBrID0gc3RhcnQ7IGkgPCByZXMubGVuZ3RoOyBpKyssIGsgKz0gNCkgew0KICAgIHZhciB3Ow0KICAgIGlmIChlbmRpYW4gPT09ICdiaWcnKQ0KICAgICAgdyA9IChtc2dba10gPDwgMjQpIHwgKG1zZ1trICsgMV0gPDwgMTYpIHwgKG1zZ1trICsgMl0gPDwgOCkgfCBtc2dbayArIDNdOw0KICAgIGVsc2UNCiAgICAgIHcgPSAobXNnW2sgKyAzXSA8PCAyNCkgfCAobXNnW2sgKyAyXSA8PCAxNikgfCAobXNnW2sgKyAxXSA8PCA4KSB8IG1zZ1trXTsNCiAgICByZXNbaV0gPSB3ID4+PiAwOw0KICB9DQogIHJldHVybiByZXM7DQp9DQp1dGlscy5qb2luMzIgPSBqb2luMzI7DQoNCmZ1bmN0aW9uIHNwbGl0MzIobXNnLCBlbmRpYW4pIHsNCiAgdmFyIHJlcyA9IG5ldyBBcnJheShtc2cubGVuZ3RoICogNCk7DQogIGZvciAodmFyIGkgPSAwLCBrID0gMDsgaSA8IG1zZy5sZW5ndGg7IGkrKywgayArPSA0KSB7DQogICAgdmFyIG0gPSBtc2dbaV07DQogICAgaWYgKGVuZGlhbiA9PT0gJ2JpZycpIHsNCiAgICAgIHJlc1trXSA9IG0gPj4+IDI0Ow0KICAgICAgcmVzW2sgKyAxXSA9IChtID4+PiAxNikgJiAweGZmOw0KICAgICAgcmVzW2sgKyAyXSA9IChtID4+PiA4KSAmIDB4ZmY7DQogICAgICByZXNbayArIDNdID0gbSAmIDB4ZmY7DQogICAgfSBlbHNlIHsNCiAgICAgIHJlc1trICsgM10gPSBtID4+PiAyNDsNCiAgICAgIHJlc1trICsgMl0gPSAobSA+Pj4gMTYpICYgMHhmZjsNCiAgICAgIHJlc1trICsgMV0gPSAobSA+Pj4gOCkgJiAweGZmOw0KICAgICAgcmVzW2tdID0gbSAmIDB4ZmY7DQogICAgfQ0KICB9DQogIHJldHVybiByZXM7DQp9DQp1dGlscy5zcGxpdDMyID0gc3BsaXQzMjsNCg0KZnVuY3Rpb24gcm90cjMyKHcsIGIpIHsNCiAgcmV0dXJuICh3ID4+PiBiKSB8ICh3IDw8ICgzMiAtIGIpKTsNCn0NCnV0aWxzLnJvdHIzMiA9IHJvdHIzMjsNCg0KZnVuY3Rpb24gcm90bDMyKHcsIGIpIHsNCiAgcmV0dXJuICh3IDw8IGIpIHwgKHcgPj4+ICgzMiAtIGIpKTsNCn0NCnV0aWxzLnJvdGwzMiA9IHJvdGwzMjsNCg0KZnVuY3Rpb24gc3VtMzIoYSwgYikgew0KICByZXR1cm4gKGEgKyBiKSA+Pj4gMDsNCn0NCnV0aWxzLnN1bTMyID0gc3VtMzI7DQoNCmZ1bmN0aW9uIHN1bTMyXzMoYSwgYiwgYykgew0KICByZXR1cm4gKGEgKyBiICsgYykgPj4+IDA7DQp9DQp1dGlscy5zdW0zMl8zID0gc3VtMzJfMzsNCg0KZnVuY3Rpb24gc3VtMzJfNChhLCBiLCBjLCBkKSB7DQogIHJldHVybiAoYSArIGIgKyBjICsgZCkgPj4+IDA7DQp9DQp1dGlscy5zdW0zMl80ID0gc3VtMzJfNDsNCg0KZnVuY3Rpb24gc3VtMzJfNShhLCBiLCBjLCBkLCBlKSB7DQogIHJldHVybiAoYSArIGIgKyBjICsgZCArIGUpID4+PiAwOw0KfQ0KdXRpbHMuc3VtMzJfNSA9IHN1bTMyXzU7DQoNCmZ1bmN0aW9uIGFzc2VydChjb25kLCBtc2cpIHsNCiAgaWYgKCFjb25kKQ0KICAgIHRocm93IG5ldyBFcnJvcihtc2cgfHwgJ0Fzc2VydGlvbiBmYWlsZWQnKTsNCn0NCnV0aWxzLmFzc2VydCA9IGFzc2VydDsNCg0KdXRpbHMuaW5oZXJpdHMgPSBpbmhlcml0czsNCg0KZnVuY3Rpb24gc3VtNjQoYnVmLCBwb3MsIGFoLCBhbCkgew0KICB2YXIgYmggPSBidWZbcG9zXTsNCiAgdmFyIGJsID0gYnVmW3BvcyArIDFdOw0KDQogIHZhciBsbyA9IChhbCArIGJsKSA+Pj4gMDsNCiAgdmFyIGhpID0gKGxvIDwgYWwgPyAxIDogMCkgKyBhaCArIGJoOw0KICBidWZbcG9zXSA9IGhpID4+PiAwOw0KICBidWZbcG9zICsgMV0gPSBsbzsNCn0NCmV4cG9ydHMuc3VtNjQgPSBzdW02NDsNCg0KZnVuY3Rpb24gc3VtNjRfaGkoYWgsIGFsLCBiaCwgYmwpIHsNCiAgdmFyIGxvID0gKGFsICsgYmwpID4+PiAwOw0KICB2YXIgaGkgPSAobG8gPCBhbCA/IDEgOiAwKSArIGFoICsgYmg7DQogIHJldHVybiBoaSA+Pj4gMDsNCn07DQpleHBvcnRzLnN1bTY0X2hpID0gc3VtNjRfaGk7DQoNCmZ1bmN0aW9uIHN1bTY0X2xvKGFoLCBhbCwgYmgsIGJsKSB7DQogIHZhciBsbyA9IGFsICsgYmw7DQogIHJldHVybiBsbyA+Pj4gMDsNCn07DQpleHBvcnRzLnN1bTY0X2xvID0gc3VtNjRfbG87DQoNCmZ1bmN0aW9uIHN1bTY0XzRfaGkoYWgsIGFsLCBiaCwgYmwsIGNoLCBjbCwgZGgsIGRsKSB7DQogIHZhciBjYXJyeSA9IDA7DQogIHZhciBsbyA9IGFsOw0KICBsbyA9IChsbyArIGJsKSA+Pj4gMDsNCiAgY2FycnkgKz0gbG8gPCBhbCA/IDEgOiAwOw0KICBsbyA9IChsbyArIGNsKSA+Pj4gMDsNCiAgY2FycnkgKz0gbG8gPCBjbCA/IDEgOiAwOw0KICBsbyA9IChsbyArIGRsKSA+Pj4gMDsNCiAgY2FycnkgKz0gbG8gPCBkbCA/IDEgOiAwOw0KDQogIHZhciBoaSA9IGFoICsgYmggKyBjaCArIGRoICsgY2Fycnk7DQogIHJldHVybiBoaSA+Pj4gMDsNCn07DQpleHBvcnRzLnN1bTY0XzRfaGkgPSBzdW02NF80X2hpOw0KDQpmdW5jdGlvbiBzdW02NF80X2xvKGFoLCBhbCwgYmgsIGJsLCBjaCwgY2wsIGRoLCBkbCkgew0KICB2YXIgbG8gPSBhbCArIGJsICsgY2wgKyBkbDsNCiAgcmV0dXJuIGxvID4+PiAwOw0KfTsNCmV4cG9ydHMuc3VtNjRfNF9sbyA9IHN1bTY0XzRfbG87DQoNCmZ1bmN0aW9uIHN1bTY0XzVfaGkoYWgsIGFsLCBiaCwgYmwsIGNoLCBjbCwgZGgsIGRsLCBlaCwgZWwpIHsNCiAgdmFyIGNhcnJ5ID0gMDsNCiAgdmFyIGxvID0gYWw7DQogIGxvID0gKGxvICsgYmwpID4+PiAwOw0KICBjYXJyeSArPSBsbyA8IGFsID8gMSA6IDA7DQogIGxvID0gKGxvICsgY2wpID4+PiAwOw0KICBjYXJyeSArPSBsbyA8IGNsID8gMSA6IDA7DQogIGxvID0gKGxvICsgZGwpID4+PiAwOw0KICBjYXJyeSArPSBsbyA8IGRsID8gMSA6IDA7DQogIGxvID0gKGxvICsgZWwpID4+PiAwOw0KICBjYXJyeSArPSBsbyA8IGVsID8gMSA6IDA7DQoNCiAgdmFyIGhpID0gYWggKyBiaCArIGNoICsgZGggKyBlaCArIGNhcnJ5Ow0KICByZXR1cm4gaGkgPj4+IDA7DQp9Ow0KZXhwb3J0cy5zdW02NF81X2hpID0gc3VtNjRfNV9oaTsNCg0KZnVuY3Rpb24gc3VtNjRfNV9sbyhhaCwgYWwsIGJoLCBibCwgY2gsIGNsLCBkaCwgZGwsIGVoLCBlbCkgew0KICB2YXIgbG8gPSBhbCArIGJsICsgY2wgKyBkbCArIGVsOw0KDQogIHJldHVybiBsbyA+Pj4gMDsNCn07DQpleHBvcnRzLnN1bTY0XzVfbG8gPSBzdW02NF81X2xvOw0KDQpmdW5jdGlvbiByb3RyNjRfaGkoYWgsIGFsLCBudW0pIHsNCiAgdmFyIHIgPSAoYWwgPDwgKDMyIC0gbnVtKSkgfCAoYWggPj4+IG51bSk7DQogIHJldHVybiByID4+PiAwOw0KfTsNCmV4cG9ydHMucm90cjY0X2hpID0gcm90cjY0X2hpOw0KDQpmdW5jdGlvbiByb3RyNjRfbG8oYWgsIGFsLCBudW0pIHsNCiAgdmFyIHIgPSAoYWggPDwgKDMyIC0gbnVtKSkgfCAoYWwgPj4+IG51bSk7DQogIHJldHVybiByID4+PiAwOw0KfTsNCmV4cG9ydHMucm90cjY0X2xvID0gcm90cjY0X2xvOw0KDQpmdW5jdGlvbiBzaHI2NF9oaShhaCwgYWwsIG51bSkgew0KICByZXR1cm4gYWggPj4+IG51bTsNCn07DQpleHBvcnRzLnNocjY0X2hpID0gc2hyNjRfaGk7DQoNCmZ1bmN0aW9uIHNocjY0X2xvKGFoLCBhbCwgbnVtKSB7DQogIHZhciByID0gKGFoIDw8ICgzMiAtIG51bSkpIHwgKGFsID4+PiBudW0pOw0KICByZXR1cm4gciA+Pj4gMDsNCn07DQpleHBvcnRzLnNocjY0X2xvID0gc2hyNjRfbG87DQoNCn0seyJpbmhlcml0cyI6NTM3fV0sNTMzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvaGV4NjQnKTsNCg0KfSx7Ii4vbGliL2hleDY0Ijo1MzR9XSw1MzQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KbW9kdWxlLmV4cG9ydHMgPSB7DQogIGRlY29kZSAgOiBkZWNvZGUsDQogIGVuY29kZSAgOiBlbmNvZGUsDQogIGlzSGV4ICAgOiBpc0hleCwNCiAgdG9IZXggICA6IGRlY29kZSwNCiAgdG9CYXNlNjQ6IGVuY29kZSwNCiAgdHJhbnNmb3JtOiB0cmFuc2Zvcm0NCn07DQoNCnZhciBwbHVzICAgICAgID0gL1wrL2c7DQp2YXIgc2xhc2ggICAgICA9IC9cLy9nOw0KdmFyIG1pbnVzICAgICAgPSAvLS9nOw0KdmFyIHVuZGVyc2NvcmUgPSAvXy9nOw0KdmFyIGhleCAgICAgICAgPSAvXlswLTlhLWZBLUZdezEsfSQvOw0KDQpmdW5jdGlvbiBpc0hleCAoc3RyKSB7DQogIHJldHVybiBzdHIubWF0Y2goaGV4KTsNCn0NCg0KZnVuY3Rpb24gZW5jb2RlIChzdHIpIHsNCiAgdmFyIG91dDsNCiAgaWYgKCFpc0hleChzdHIpKSB7DQogICAgcmV0dXJuIG5ldyBFcnJvcignSW52YWxpZCBoZXggc3RyaW5nJyk7DQogIH0NCiAgdHJ5IHsNCiAgICBpZiAoc3RyLmxlbmd0aCAlIDIgPT09IDEpIHsNCiAgICAgIHN0ciA9IHN0ciArICcwJzsgLy8gYnVmZmVyIGV4cGVjdHMgaGV4IHRvIGhhdmUgYW4gZXZlbiBudW1iZXIgb2YgZGlnaXRzDQogICAgfQ0KICAgIHJldHVybiAobmV3IEJ1ZmZlcihzdHIudG9TdHJpbmcoKSwgJ2hleCcpKS50b1N0cmluZygnYmFzZTY0JykucmVwbGFjZShwbHVzLCAnLScpLnJlcGxhY2Uoc2xhc2gsICdfJyk7DQogIH0NCiAgY2F0Y2ggKGVycikgew0KICAgIHJldHVybiBlcnI7DQogIH0NCn0NCg0KZnVuY3Rpb24gZGVjb2RlIChzdHIpIHsNCiAgdmFyIG91dDsNCiAgdHJ5IHsNCiAgICByZXR1cm4gKG5ldyBCdWZmZXIoc3RyLnRvU3RyaW5nKCkucmVwbGFjZShtaW51cywgJysnKS5yZXBsYWNlKHVuZGVyc2NvcmUsICcvJyksICdiYXNlNjQnKSkudG9TdHJpbmcoJ2hleCcpOw0KICB9DQogIGNhdGNoIChlcnIpIHsNCiAgICByZXR1cm4gZXJyOw0KICB9DQp9DQoNCmZ1bmN0aW9uIHRyYW5zZm9ybSAoc3RyKSB7DQogIGlmIChpc0hleChzdHIpKSB7DQogICAgcmV0dXJuIGVuY29kZShzdHIpOw0KICB9DQogIGVsc2Ugew0KICAgIHJldHVybiBkZWNvZGUoc3RyKTsNCiAgfQ0KfQ0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJidWZmZXIiOjkzfV0sNTM1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmV4cG9ydHMucmVhZCA9IGZ1bmN0aW9uIChidWZmZXIsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7DQogIHZhciBlLCBtDQogIHZhciBlTGVuID0gbkJ5dGVzICogOCAtIG1MZW4gLSAxDQogIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxDQogIHZhciBlQmlhcyA9IGVNYXggPj4gMQ0KICB2YXIgbkJpdHMgPSAtNw0KICB2YXIgaSA9IGlzTEUgPyAobkJ5dGVzIC0gMSkgOiAwDQogIHZhciBkID0gaXNMRSA/IC0xIDogMQ0KICB2YXIgcyA9IGJ1ZmZlcltvZmZzZXQgKyBpXQ0KDQogIGkgKz0gZA0KDQogIGUgPSBzICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpDQogIHMgPj49ICgtbkJpdHMpDQogIG5CaXRzICs9IGVMZW4NCiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IGUgKiAyNTYgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge30NCg0KICBtID0gZSAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKQ0KICBlID4+PSAoLW5CaXRzKQ0KICBuQml0cyArPSBtTGVuDQogIGZvciAoOyBuQml0cyA+IDA7IG0gPSBtICogMjU2ICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9DQoNCiAgaWYgKGUgPT09IDApIHsNCiAgICBlID0gMSAtIGVCaWFzDQogIH0gZWxzZSBpZiAoZSA9PT0gZU1heCkgew0KICAgIHJldHVybiBtID8gTmFOIDogKChzID8gLTEgOiAxKSAqIEluZmluaXR5KQ0KICB9IGVsc2Ugew0KICAgIG0gPSBtICsgTWF0aC5wb3coMiwgbUxlbikNCiAgICBlID0gZSAtIGVCaWFzDQogIH0NCiAgcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBNYXRoLnBvdygyLCBlIC0gbUxlbikNCn0NCg0KZXhwb3J0cy53cml0ZSA9IGZ1bmN0aW9uIChidWZmZXIsIHZhbHVlLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykgew0KICB2YXIgZSwgbSwgYw0KICB2YXIgZUxlbiA9IG5CeXRlcyAqIDggLSBtTGVuIC0gMQ0KICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMQ0KICB2YXIgZUJpYXMgPSBlTWF4ID4+IDENCiAgdmFyIHJ0ID0gKG1MZW4gPT09IDIzID8gTWF0aC5wb3coMiwgLTI0KSAtIE1hdGgucG93KDIsIC03NykgOiAwKQ0KICB2YXIgaSA9IGlzTEUgPyAwIDogKG5CeXRlcyAtIDEpDQogIHZhciBkID0gaXNMRSA/IDEgOiAtMQ0KICB2YXIgcyA9IHZhbHVlIDwgMCB8fCAodmFsdWUgPT09IDAgJiYgMSAvIHZhbHVlIDwgMCkgPyAxIDogMA0KDQogIHZhbHVlID0gTWF0aC5hYnModmFsdWUpDQoNCiAgaWYgKGlzTmFOKHZhbHVlKSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpIHsNCiAgICBtID0gaXNOYU4odmFsdWUpID8gMSA6IDANCiAgICBlID0gZU1heA0KICB9IGVsc2Ugew0KICAgIGUgPSBNYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4yKQ0KICAgIGlmICh2YWx1ZSAqIChjID0gTWF0aC5wb3coMiwgLWUpKSA8IDEpIHsNCiAgICAgIGUtLQ0KICAgICAgYyAqPSAyDQogICAgfQ0KICAgIGlmIChlICsgZUJpYXMgPj0gMSkgew0KICAgICAgdmFsdWUgKz0gcnQgLyBjDQogICAgfSBlbHNlIHsNCiAgICAgIHZhbHVlICs9IHJ0ICogTWF0aC5wb3coMiwgMSAtIGVCaWFzKQ0KICAgIH0NCiAgICBpZiAodmFsdWUgKiBjID49IDIpIHsNCiAgICAgIGUrKw0KICAgICAgYyAvPSAyDQogICAgfQ0KDQogICAgaWYgKGUgKyBlQmlhcyA+PSBlTWF4KSB7DQogICAgICBtID0gMA0KICAgICAgZSA9IGVNYXgNCiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7DQogICAgICBtID0gKHZhbHVlICogYyAtIDEpICogTWF0aC5wb3coMiwgbUxlbikNCiAgICAgIGUgPSBlICsgZUJpYXMNCiAgICB9IGVsc2Ugew0KICAgICAgbSA9IHZhbHVlICogTWF0aC5wb3coMiwgZUJpYXMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pDQogICAgICBlID0gMA0KICAgIH0NCiAgfQ0KDQogIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IG0gJiAweGZmLCBpICs9IGQsIG0gLz0gMjU2LCBtTGVuIC09IDgpIHt9DQoNCiAgZSA9IChlIDw8IG1MZW4pIHwgbQ0KICBlTGVuICs9IG1MZW4NCiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBlICYgMHhmZiwgaSArPSBkLCBlIC89IDI1NiwgZUxlbiAtPSA4KSB7fQ0KDQogIGJ1ZmZlcltvZmZzZXQgKyBpIC0gZF0gfD0gcyAqIDEyOA0KfQ0KDQp9LHt9XSw1MzY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KDQp2YXIgaW5kZXhPZiA9IFtdLmluZGV4T2Y7DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oYXJyLCBvYmopew0KICBpZiAoaW5kZXhPZikgcmV0dXJuIGFyci5pbmRleE9mKG9iaik7DQogIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgKytpKSB7DQogICAgaWYgKGFycltpXSA9PT0gb2JqKSByZXR1cm4gaTsNCiAgfQ0KICByZXR1cm4gLTE7DQp9Ow0KfSx7fV0sNTM3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCmlmICh0eXBlb2YgT2JqZWN0LmNyZWF0ZSA9PT0gJ2Z1bmN0aW9uJykgew0KICAvLyBpbXBsZW1lbnRhdGlvbiBmcm9tIHN0YW5kYXJkIG5vZGUuanMgJ3V0aWwnIG1vZHVsZQ0KICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3Rvcikgew0KICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yDQogICAgY3Rvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ3Rvci5wcm90b3R5cGUsIHsNCiAgICAgIGNvbnN0cnVjdG9yOiB7DQogICAgICAgIHZhbHVlOiBjdG9yLA0KICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSwNCiAgICAgICAgd3JpdGFibGU6IHRydWUsDQogICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZQ0KICAgICAgfQ0KICAgIH0pOw0KICB9Ow0KfSBlbHNlIHsNCiAgLy8gb2xkIHNjaG9vbCBzaGltIGZvciBvbGQgYnJvd3NlcnMNCiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHsNCiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3Rvcg0KICAgIHZhciBUZW1wQ3RvciA9IGZ1bmN0aW9uICgpIHt9DQogICAgVGVtcEN0b3IucHJvdG90eXBlID0gc3VwZXJDdG9yLnByb3RvdHlwZQ0KICAgIGN0b3IucHJvdG90eXBlID0gbmV3IFRlbXBDdG9yKCkNCiAgICBjdG9yLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGN0b3INCiAgfQ0KfQ0KDQp9LHt9XSw1Mzg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLyoqDQogKiBEZXRlcm1pbmUgaWYgYW4gb2JqZWN0IGlzIEJ1ZmZlcg0KICoNCiAqIEF1dGhvcjogICBGZXJvc3MgQWJvdWtoYWRpamVoIDxmZXJvc3NAZmVyb3NzLm9yZz4gPGh0dHA6Ly9mZXJvc3Mub3JnPg0KICogTGljZW5zZTogIE1JVA0KICoNCiAqIGBucG0gaW5zdGFsbCBpcy1idWZmZXJgDQogKi8NCg0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqKSB7DQogIHJldHVybiAhIShvYmogIT0gbnVsbCAmJg0KICAgIChvYmouX2lzQnVmZmVyIHx8IC8vIEZvciBTYWZhcmkgNS03IChtaXNzaW5nIE9iamVjdC5wcm90b3R5cGUuY29uc3RydWN0b3IpDQogICAgICAob2JqLmNvbnN0cnVjdG9yICYmDQogICAgICB0eXBlb2Ygb2JqLmNvbnN0cnVjdG9yLmlzQnVmZmVyID09PSAnZnVuY3Rpb24nICYmDQogICAgICBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIob2JqKSkNCiAgICApKQ0KfQ0KDQp9LHt9XSw1Mzk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7DQoNCm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7DQogIHJldHVybiB0b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJzsNCn07DQoNCn0se31dLDU0MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQoNCnZhciBuYXZpZ2F0b3IgPSB7fTsNCm5hdmlnYXRvci51c2VyQWdlbnQgPSBmYWxzZTsNCg0KdmFyIHdpbmRvdyA9IHt9Ow0KLyoNCiAqIGpzcnNhc2lnbiA1LjAuMTIgKGMpIDIwMTAtMjAxNiBLZW5qaSBVcnVzaGltYSB8IGtqdXIuZ2l0aHViLmNvbS9qc3JzYXNpZ24vbGljZW5zZQ0KICovDQoNCi8qDQp5YWhvby1taW4uanMNCkNvcHlyaWdodCAoYykgMjAxMSwgWWFob28hIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCkNvZGUgbGljZW5zZWQgdW5kZXIgdGhlIEJTRCBMaWNlbnNlOg0KaHR0cDovL2RldmVsb3Blci55YWhvby5jb20veXVpL2xpY2Vuc2UuaHRtbA0KdmVyc2lvbjogMi45LjANCiovDQppZih0eXBlb2YgWUFIT089PSJ1bmRlZmluZWQifHwhWUFIT08pe3ZhciBZQUhPTz17fTt9WUFIT08ubmFtZXNwYWNlPWZ1bmN0aW9uKCl7dmFyIGI9YXJndW1lbnRzLGc9bnVsbCxlLGMsZjtmb3IoZT0wO2U8Yi5sZW5ndGg7ZT1lKzEpe2Y9KCIiK2JbZV0pLnNwbGl0KCIuIik7Zz1ZQUhPTztmb3IoYz0oZlswXT09IllBSE9PIik/MTowO2M8Zi5sZW5ndGg7Yz1jKzEpe2dbZltjXV09Z1tmW2NdXXx8e307Zz1nW2ZbY11dO319cmV0dXJuIGc7fTtZQUhPTy5sb2c9ZnVuY3Rpb24oZCxhLGMpe3ZhciBiPVlBSE9PLndpZGdldC5Mb2dnZXI7aWYoYiYmYi5sb2cpe3JldHVybiBiLmxvZyhkLGEsYyk7fWVsc2V7cmV0dXJuIGZhbHNlO319O1lBSE9PLnJlZ2lzdGVyPWZ1bmN0aW9uKGEsZixlKXt2YXIgaz1ZQUhPTy5lbnYubW9kdWxlcyxjLGosaCxnLGQ7aWYoIWtbYV0pe2tbYV09e3ZlcnNpb25zOltdLGJ1aWxkczpbXX07fWM9a1thXTtqPWUudmVyc2lvbjtoPWUuYnVpbGQ7Zz1ZQUhPTy5lbnYubGlzdGVuZXJzO2MubmFtZT1hO2MudmVyc2lvbj1qO2MuYnVpbGQ9aDtjLnZlcnNpb25zLnB1c2goaik7Yy5idWlsZHMucHVzaChoKTtjLm1haW5DbGFzcz1mO2ZvcihkPTA7ZDxnLmxlbmd0aDtkPWQrMSl7Z1tkXShjKTt9aWYoZil7Zi5WRVJTSU9OPWo7Zi5CVUlMRD1oO31lbHNle1lBSE9PLmxvZygibWFpbkNsYXNzIGlzIHVuZGVmaW5lZCBmb3IgbW9kdWxlICIrYSwid2FybiIpO319O1lBSE9PLmVudj1ZQUhPTy5lbnZ8fHttb2R1bGVzOltdLGxpc3RlbmVyczpbXX07WUFIT08uZW52LmdldFZlcnNpb249ZnVuY3Rpb24oYSl7cmV0dXJuIFlBSE9PLmVudi5tb2R1bGVzW2FdfHxudWxsO307WUFIT08uZW52LnBhcnNlVUE9ZnVuY3Rpb24oZCl7dmFyIGU9ZnVuY3Rpb24oaSl7dmFyIGo9MDtyZXR1cm4gcGFyc2VGbG9hdChpLnJlcGxhY2UoL1wuL2csZnVuY3Rpb24oKXtyZXR1cm4oaisrPT0xKT8iIjoiLiI7fSkpO30saD1uYXZpZ2F0b3IsZz17aWU6MCxvcGVyYTowLGdlY2tvOjAsd2Via2l0OjAsY2hyb21lOjAsbW9iaWxlOm51bGwsYWlyOjAsaXBhZDowLGlwaG9uZTowLGlwb2Q6MCxpb3M6bnVsbCxhbmRyb2lkOjAsd2Vib3M6MCxjYWphOmgmJmguY2FqYVZlcnNpb24sc2VjdXJlOmZhbHNlLG9zOm51bGx9LGM9ZHx8KG5hdmlnYXRvciYmbmF2aWdhdG9yLnVzZXJBZ2VudCksZj13aW5kb3cmJndpbmRvdy5sb2NhdGlvbixiPWYmJmYuaHJlZixhO2cuc2VjdXJlPWImJihiLnRvTG93ZXJDYXNlKCkuaW5kZXhPZigiaHR0cHMiKT09PTApO2lmKGMpe2lmKCgvd2luZG93c3x3aW4zMi9pKS50ZXN0KGMpKXtnLm9zPSJ3aW5kb3dzIjt9ZWxzZXtpZigoL21hY2ludG9zaC9pKS50ZXN0KGMpKXtnLm9zPSJtYWNpbnRvc2giO31lbHNle2lmKCgvcmhpbm8vaSkudGVzdChjKSl7Zy5vcz0icmhpbm8iO319fWlmKCgvS0hUTUwvKS50ZXN0KGMpKXtnLndlYmtpdD0xO31hPWMubWF0Y2goL0FwcGxlV2ViS2l0XC8oW15cc10qKS8pO2lmKGEmJmFbMV0pe2cud2Via2l0PWUoYVsxXSk7aWYoLyBNb2JpbGVcLy8udGVzdChjKSl7Zy5tb2JpbGU9IkFwcGxlIjthPWMubWF0Y2goL09TIChbXlxzXSopLyk7aWYoYSYmYVsxXSl7YT1lKGFbMV0ucmVwbGFjZSgiXyIsIi4iKSk7fWcuaW9zPWE7Zy5pcGFkPWcuaXBvZD1nLmlwaG9uZT0wO2E9Yy5tYXRjaCgvaVBhZHxpUG9kfGlQaG9uZS8pO2lmKGEmJmFbMF0pe2dbYVswXS50b0xvd2VyQ2FzZSgpXT1nLmlvczt9fWVsc2V7YT1jLm1hdGNoKC9Ob2tpYU5bXlwvXSp8QW5kcm9pZCBcZFwuXGR8d2ViT1NcL1xkXC5cZC8pO2lmKGEpe2cubW9iaWxlPWFbMF07fWlmKC93ZWJPUy8udGVzdChjKSl7Zy5tb2JpbGU9IldlYk9TIjthPWMubWF0Y2goL3dlYk9TXC8oW15cc10qKTsvKTtpZihhJiZhWzFdKXtnLndlYm9zPWUoYVsxXSk7fX1pZigvIEFuZHJvaWQvLnRlc3QoYykpe2cubW9iaWxlPSJBbmRyb2lkIjthPWMubWF0Y2goL0FuZHJvaWQgKFteXHNdKik7Lyk7aWYoYSYmYVsxXSl7Zy5hbmRyb2lkPWUoYVsxXSk7fX19YT1jLm1hdGNoKC9DaHJvbWVcLyhbXlxzXSopLyk7aWYoYSYmYVsxXSl7Zy5jaHJvbWU9ZShhWzFdKTt9ZWxzZXthPWMubWF0Y2goL0Fkb2JlQUlSXC8oW15cc10qKS8pO2lmKGEpe2cuYWlyPWFbMF07fX19aWYoIWcud2Via2l0KXthPWMubWF0Y2goL09wZXJhW1xzXC9dKFteXHNdKikvKTtpZihhJiZhWzFdKXtnLm9wZXJhPWUoYVsxXSk7YT1jLm1hdGNoKC9WZXJzaW9uXC8oW15cc10qKS8pO2lmKGEmJmFbMV0pe2cub3BlcmE9ZShhWzFdKTt9YT1jLm1hdGNoKC9PcGVyYSBNaW5pW147XSovKTtpZihhKXtnLm1vYmlsZT1hWzBdO319ZWxzZXthPWMubWF0Y2goL01TSUVccyhbXjtdKikvKTtpZihhJiZhWzFdKXtnLmllPWUoYVsxXSk7fWVsc2V7YT1jLm1hdGNoKC9HZWNrb1wvKFteXHNdKikvKTtpZihhKXtnLmdlY2tvPTE7YT1jLm1hdGNoKC9ydjooW15cc1wpXSopLyk7aWYoYSYmYVsxXSl7Zy5nZWNrbz1lKGFbMV0pO319fX19fXJldHVybiBnO307WUFIT08uZW52LnVhPVlBSE9PLmVudi5wYXJzZVVBKCk7KGZ1bmN0aW9uKCl7WUFIT08ubmFtZXNwYWNlKCJ1dGlsIiwid2lkZ2V0IiwiZXhhbXBsZSIpO2lmKCJ1bmRlZmluZWQiIT09dHlwZW9mIFlBSE9PX2NvbmZpZyl7dmFyIGI9WUFIT09fY29uZmlnLmxpc3RlbmVyLGE9WUFIT08uZW52Lmxpc3RlbmVycyxkPXRydWUsYztpZihiKXtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKXtpZihhW2NdPT1iKXtkPWZhbHNlO2JyZWFrO319aWYoZCl7YS5wdXNoKGIpO319fX0pKCk7WUFIT08ubGFuZz1ZQUhPTy5sYW5nfHx7fTsoZnVuY3Rpb24oKXt2YXIgZj1ZQUhPTy5sYW5nLGE9T2JqZWN0LnByb3RvdHlwZSxjPSJbb2JqZWN0IEFycmF5XSIsaD0iW29iamVjdCBGdW5jdGlvbl0iLGk9IltvYmplY3QgT2JqZWN0XSIsYj1bXSxnPXsiJiI6IiZhbXA7IiwiPCI6IiZsdDsiLCI+IjoiJmd0OyIsJyInOiImcXVvdDsiLCInIjoiJiN4Mjc7IiwiLyI6IiYjeDJGOyIsImAiOiImI3g2MDsifSxkPVsidG9TdHJpbmciLCJ2YWx1ZU9mIl0sZT17aXNBcnJheTpmdW5jdGlvbihqKXtyZXR1cm4gYS50b1N0cmluZy5hcHBseShqKT09PWM7fSxpc0Jvb2xlYW46ZnVuY3Rpb24oail7cmV0dXJuIHR5cGVvZiBqPT09ImJvb2xlYW4iO30saXNGdW5jdGlvbjpmdW5jdGlvbihqKXtyZXR1cm4odHlwZW9mIGo9PT0iZnVuY3Rpb24iKXx8YS50b1N0cmluZy5hcHBseShqKT09PWg7fSxpc051bGw6ZnVuY3Rpb24oail7cmV0dXJuIGo9PT1udWxsO30saXNOdW1iZXI6ZnVuY3Rpb24oail7cmV0dXJuIHR5cGVvZiBqPT09Im51bWJlciImJmlzRmluaXRlKGopO30saXNPYmplY3Q6ZnVuY3Rpb24oail7cmV0dXJuKGomJih0eXBlb2Ygaj09PSJvYmplY3QifHxmLmlzRnVuY3Rpb24oaikpKXx8ZmFsc2U7fSxpc1N0cmluZzpmdW5jdGlvbihqKXtyZXR1cm4gdHlwZW9mIGo9PT0ic3RyaW5nIjt9LGlzVW5kZWZpbmVkOmZ1bmN0aW9uKGope3JldHVybiB0eXBlb2Ygaj09PSJ1bmRlZmluZWQiO30sX0lFRW51bUZpeDooWUFIT08uZW52LnVhLmllKT9mdW5jdGlvbihsLGspe3ZhciBqLG4sbTtmb3Ioaj0wO2o8ZC5sZW5ndGg7aj1qKzEpe249ZFtqXTttPWtbbl07aWYoZi5pc0Z1bmN0aW9uKG0pJiZtIT1hW25dKXtsW25dPW07fX19OmZ1bmN0aW9uKCl7fSxlc2NhcGVIVE1MOmZ1bmN0aW9uKGope3JldHVybiBqLnJlcGxhY2UoL1smPD4iJ1wvYF0vZyxmdW5jdGlvbihrKXtyZXR1cm4gZ1trXTt9KTt9LGV4dGVuZDpmdW5jdGlvbihtLG4sbCl7aWYoIW58fCFtKXt0aHJvdyBuZXcgRXJyb3IoImV4dGVuZCBmYWlsZWQsIHBsZWFzZSBjaGVjayB0aGF0ICIrImFsbCBkZXBlbmRlbmNpZXMgYXJlIGluY2x1ZGVkLiIpO312YXIgaz1mdW5jdGlvbigpe30sajtrLnByb3RvdHlwZT1uLnByb3RvdHlwZTttLnByb3RvdHlwZT1uZXcgaygpO20ucHJvdG90eXBlLmNvbnN0cnVjdG9yPW07bS5zdXBlcmNsYXNzPW4ucHJvdG90eXBlO2lmKG4ucHJvdG90eXBlLmNvbnN0cnVjdG9yPT1hLmNvbnN0cnVjdG9yKXtuLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1uO31pZihsKXtmb3IoaiBpbiBsKXtpZihmLmhhc093blByb3BlcnR5KGwsaikpe20ucHJvdG90eXBlW2pdPWxbal07fX1mLl9JRUVudW1GaXgobS5wcm90b3R5cGUsbCk7fX0sYXVnbWVudE9iamVjdDpmdW5jdGlvbihuLG0pe2lmKCFtfHwhbil7dGhyb3cgbmV3IEVycm9yKCJBYnNvcmIgZmFpbGVkLCB2ZXJpZnkgZGVwZW5kZW5jaWVzLiIpO312YXIgaj1hcmd1bWVudHMsbCxvLGs9alsyXTtpZihrJiZrIT09dHJ1ZSl7Zm9yKGw9MjtsPGoubGVuZ3RoO2w9bCsxKXtuW2pbbF1dPW1baltsXV07fX1lbHNle2ZvcihvIGluIG0pe2lmKGt8fCEobyBpbiBuKSl7bltvXT1tW29dO319Zi5fSUVFbnVtRml4KG4sbSk7fXJldHVybiBuO30sYXVnbWVudFByb3RvOmZ1bmN0aW9uKG0sbCl7aWYoIWx8fCFtKXt0aHJvdyBuZXcgRXJyb3IoIkF1Z21lbnQgZmFpbGVkLCB2ZXJpZnkgZGVwZW5kZW5jaWVzLiIpO312YXIgaj1bbS5wcm90b3R5cGUsbC5wcm90b3R5cGVdLGs7Zm9yKGs9MjtrPGFyZ3VtZW50cy5sZW5ndGg7az1rKzEpe2oucHVzaChhcmd1bWVudHNba10pO31mLmF1Z21lbnRPYmplY3QuYXBwbHkodGhpcyxqKTtyZXR1cm4gbTt9LGR1bXA6ZnVuY3Rpb24oaixwKXt2YXIgbCxuLHI9W10sdD0iey4uLn0iLGs9ImYoKXsuLi59IixxPSIsICIsbT0iID0+ICI7aWYoIWYuaXNPYmplY3Qoaikpe3JldHVybiBqKyIiO31lbHNle2lmKGogaW5zdGFuY2VvZiBEYXRlfHwoIm5vZGVUeXBlIiBpbiBqJiYidGFnTmFtZSIgaW4gaikpe3JldHVybiBqO31lbHNle2lmKGYuaXNGdW5jdGlvbihqKSl7cmV0dXJuIGs7fX19cD0oZi5pc051bWJlcihwKSk/cDozO2lmKGYuaXNBcnJheShqKSl7ci5wdXNoKCJbIik7Zm9yKGw9MCxuPWoubGVuZ3RoO2w8bjtsPWwrMSl7aWYoZi5pc09iamVjdChqW2xdKSl7ci5wdXNoKChwPjApP2YuZHVtcChqW2xdLHAtMSk6dCk7fWVsc2V7ci5wdXNoKGpbbF0pO31yLnB1c2gocSk7fWlmKHIubGVuZ3RoPjEpe3IucG9wKCk7fXIucHVzaCgiXSIpO31lbHNle3IucHVzaCgieyIpO2ZvcihsIGluIGope2lmKGYuaGFzT3duUHJvcGVydHkoaixsKSl7ci5wdXNoKGwrbSk7aWYoZi5pc09iamVjdChqW2xdKSl7ci5wdXNoKChwPjApP2YuZHVtcChqW2xdLHAtMSk6dCk7fWVsc2V7ci5wdXNoKGpbbF0pO31yLnB1c2gocSk7fX1pZihyLmxlbmd0aD4xKXtyLnBvcCgpO31yLnB1c2goIn0iKTt9cmV0dXJuIHIuam9pbigiIik7fSxzdWJzdGl0dXRlOmZ1bmN0aW9uKHgseSxFLGwpe3ZhciBELEMsQixHLHQsdSxGPVtdLHAsej14Lmxlbmd0aCxBPSJkdW1wIixyPSIgIixxPSJ7IixtPSJ9IixuLHc7Zm9yKDs7KXtEPXgubGFzdEluZGV4T2YocSx6KTtpZihEPDApe2JyZWFrO31DPXguaW5kZXhPZihtLEQpO2lmKEQrMT5DKXticmVhazt9cD14LnN1YnN0cmluZyhEKzEsQyk7Rz1wO3U9bnVsbDtCPUcuaW5kZXhPZihyKTtpZihCPi0xKXt1PUcuc3Vic3RyaW5nKEIrMSk7Rz1HLnN1YnN0cmluZygwLEIpO310PXlbR107aWYoRSl7dD1FKEcsdCx1KTt9aWYoZi5pc09iamVjdCh0KSl7aWYoZi5pc0FycmF5KHQpKXt0PWYuZHVtcCh0LHBhcnNlSW50KHUsMTApKTt9ZWxzZXt1PXV8fCIiO249dS5pbmRleE9mKEEpO2lmKG4+LTEpe3U9dS5zdWJzdHJpbmcoNCk7fXc9dC50b1N0cmluZygpO2lmKHc9PT1pfHxuPi0xKXt0PWYuZHVtcCh0LHBhcnNlSW50KHUsMTApKTt9ZWxzZXt0PXc7fX19ZWxzZXtpZighZi5pc1N0cmluZyh0KSYmIWYuaXNOdW1iZXIodCkpe3Q9In4tIitGLmxlbmd0aCsiLX4iO0ZbRi5sZW5ndGhdPXA7fX14PXguc3Vic3RyaW5nKDAsRCkrdCt4LnN1YnN0cmluZyhDKzEpO2lmKGw9PT1mYWxzZSl7ej1ELTE7fX1mb3IoRD1GLmxlbmd0aC0xO0Q+PTA7RD1ELTEpe3g9eC5yZXBsYWNlKG5ldyBSZWdFeHAoIn4tIitEKyItfiIpLCJ7IitGW0RdKyJ9IiwiZyIpO31yZXR1cm4geDt9LHRyaW06ZnVuY3Rpb24oail7dHJ5e3JldHVybiBqLnJlcGxhY2UoL15ccyt8XHMrJC9nLCIiKTt9Y2F0Y2goayl7cmV0dXJuIGo7DQp9fSxtZXJnZTpmdW5jdGlvbigpe3ZhciBuPXt9LGs9YXJndW1lbnRzLGo9ay5sZW5ndGgsbTtmb3IobT0wO208ajttPW0rMSl7Zi5hdWdtZW50T2JqZWN0KG4sa1ttXSx0cnVlKTt9cmV0dXJuIG47fSxsYXRlcjpmdW5jdGlvbih0LGssdSxuLHApe3Q9dHx8MDtrPWt8fHt9O3ZhciBsPXUscz1uLHEsajtpZihmLmlzU3RyaW5nKHUpKXtsPWtbdV07fWlmKCFsKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJtZXRob2QgdW5kZWZpbmVkIik7fWlmKCFmLmlzVW5kZWZpbmVkKG4pJiYhZi5pc0FycmF5KHMpKXtzPVtuXTt9cT1mdW5jdGlvbigpe2wuYXBwbHkoayxzfHxiKTt9O2o9KHApP3NldEludGVydmFsKHEsdCk6c2V0VGltZW91dChxLHQpO3JldHVybntpbnRlcnZhbDpwLGNhbmNlbDpmdW5jdGlvbigpe2lmKHRoaXMuaW50ZXJ2YWwpe2NsZWFySW50ZXJ2YWwoaik7fWVsc2V7Y2xlYXJUaW1lb3V0KGopO319fTt9LGlzVmFsdWU6ZnVuY3Rpb24oail7cmV0dXJuKGYuaXNPYmplY3Qoail8fGYuaXNTdHJpbmcoail8fGYuaXNOdW1iZXIoail8fGYuaXNCb29sZWFuKGopKTt9fTtmLmhhc093blByb3BlcnR5PShhLmhhc093blByb3BlcnR5KT9mdW5jdGlvbihqLGspe3JldHVybiBqJiZqLmhhc093blByb3BlcnR5JiZqLmhhc093blByb3BlcnR5KGspO306ZnVuY3Rpb24oaixrKXtyZXR1cm4gIWYuaXNVbmRlZmluZWQoaltrXSkmJmouY29uc3RydWN0b3IucHJvdG90eXBlW2tdIT09altrXTt9O2UuYXVnbWVudE9iamVjdChmLGUsdHJ1ZSk7WUFIT08udXRpbC5MYW5nPWY7Zi5hdWdtZW50PWYuYXVnbWVudFByb3RvO1lBSE9PLmF1Z21lbnQ9Zi5hdWdtZW50UHJvdG87WUFIT08uZXh0ZW5kPWYuZXh0ZW5kO30pKCk7WUFIT08ucmVnaXN0ZXIoInlhaG9vIixZQUhPTyx7dmVyc2lvbjoiMi45LjAiLGJ1aWxkOiIyODAwIn0pOw0KDQovKiEgQ3J5cHRvSlMgdjMuMS4yIGNvcmUtZml4LmpzDQogKiBjb2RlLmdvb2dsZS5jb20vcC9jcnlwdG8tanMNCiAqIChjKSAyMDA5LTIwMTMgYnkgSmVmZiBNb3R0LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KICogY29kZS5nb29nbGUuY29tL3AvY3J5cHRvLWpzL3dpa2kvTGljZW5zZQ0KICogVEhJUyBJUyBGSVggb2YgJ2NvcmUuanMnIHRvIGZpeCBIbWFjIGlzc3VlLg0KICogaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jcnlwdG8tanMvaXNzdWVzL2RldGFpbD9pZD04NA0KICogaHR0cHM6Ly9jcnlwdG8tanMuZ29vZ2xlY29kZS5jb20vc3ZuLWhpc3RvcnkvcjY2Ny9icmFuY2hlcy8zLngvc3JjL2NvcmUuanMNCiAqLw0KdmFyIENyeXB0b0pTPUNyeXB0b0pTfHwoZnVuY3Rpb24oZSxnKXt2YXIgYT17fTt2YXIgYj1hLmxpYj17fTt2YXIgaj1iLkJhc2U9KGZ1bmN0aW9uKCl7ZnVuY3Rpb24gbigpe31yZXR1cm57ZXh0ZW5kOmZ1bmN0aW9uKHApe24ucHJvdG90eXBlPXRoaXM7dmFyIG89bmV3IG4oKTtpZihwKXtvLm1peEluKHApfWlmKCFvLmhhc093blByb3BlcnR5KCJpbml0Iikpe28uaW5pdD1mdW5jdGlvbigpe28uJHN1cGVyLmluaXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfX1vLmluaXQucHJvdG90eXBlPW87by4kc3VwZXI9dGhpcztyZXR1cm4gb30sY3JlYXRlOmZ1bmN0aW9uKCl7dmFyIG89dGhpcy5leHRlbmQoKTtvLmluaXQuYXBwbHkobyxhcmd1bWVudHMpO3JldHVybiBvfSxpbml0OmZ1bmN0aW9uKCl7fSxtaXhJbjpmdW5jdGlvbihwKXtmb3IodmFyIG8gaW4gcCl7aWYocC5oYXNPd25Qcm9wZXJ0eShvKSl7dGhpc1tvXT1wW29dfX1pZihwLmhhc093blByb3BlcnR5KCJ0b1N0cmluZyIpKXt0aGlzLnRvU3RyaW5nPXAudG9TdHJpbmd9fSxjbG9uZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmluaXQucHJvdG90eXBlLmV4dGVuZCh0aGlzKX19fSgpKTt2YXIgbD1iLldvcmRBcnJheT1qLmV4dGVuZCh7aW5pdDpmdW5jdGlvbihvLG4pe289dGhpcy53b3Jkcz1vfHxbXTtpZihuIT1nKXt0aGlzLnNpZ0J5dGVzPW59ZWxzZXt0aGlzLnNpZ0J5dGVzPW8ubGVuZ3RoKjR9fSx0b1N0cmluZzpmdW5jdGlvbihuKXtyZXR1cm4obnx8aCkuc3RyaW5naWZ5KHRoaXMpfSxjb25jYXQ6ZnVuY3Rpb24odCl7dmFyIHE9dGhpcy53b3Jkczt2YXIgcD10LndvcmRzO3ZhciBuPXRoaXMuc2lnQnl0ZXM7dmFyIHM9dC5zaWdCeXRlczt0aGlzLmNsYW1wKCk7aWYobiU0KXtmb3IodmFyIHI9MDtyPHM7cisrKXt2YXIgbz0ocFtyPj4+Ml0+Pj4oMjQtKHIlNCkqOCkpJjI1NTtxWyhuK3IpPj4+Ml18PW88PCgyNC0oKG4rciklNCkqOCl9fWVsc2V7Zm9yKHZhciByPTA7cjxzO3IrPTQpe3FbKG4rcik+Pj4yXT1wW3I+Pj4yXX19dGhpcy5zaWdCeXRlcys9cztyZXR1cm4gdGhpc30sY2xhbXA6ZnVuY3Rpb24oKXt2YXIgbz10aGlzLndvcmRzO3ZhciBuPXRoaXMuc2lnQnl0ZXM7b1tuPj4+Ml0mPTQyOTQ5NjcyOTU8PCgzMi0obiU0KSo4KTtvLmxlbmd0aD1lLmNlaWwobi80KX0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgbj1qLmNsb25lLmNhbGwodGhpcyk7bi53b3Jkcz10aGlzLndvcmRzLnNsaWNlKDApO3JldHVybiBufSxyYW5kb206ZnVuY3Rpb24ocCl7dmFyIG89W107Zm9yKHZhciBuPTA7bjxwO24rPTQpe28ucHVzaCgoZS5yYW5kb20oKSo0Mjk0OTY3Mjk2KXwwKX1yZXR1cm4gbmV3IGwuaW5pdChvLHApfX0pO3ZhciBtPWEuZW5jPXt9O3ZhciBoPW0uSGV4PXtzdHJpbmdpZnk6ZnVuY3Rpb24ocCl7dmFyIHI9cC53b3Jkczt2YXIgbz1wLnNpZ0J5dGVzO3ZhciBxPVtdO2Zvcih2YXIgbj0wO248bztuKyspe3ZhciBzPShyW24+Pj4yXT4+PigyNC0obiU0KSo4KSkmMjU1O3EucHVzaCgocz4+PjQpLnRvU3RyaW5nKDE2KSk7cS5wdXNoKChzJjE1KS50b1N0cmluZygxNikpfXJldHVybiBxLmpvaW4oIiIpfSxwYXJzZTpmdW5jdGlvbihwKXt2YXIgbj1wLmxlbmd0aDt2YXIgcT1bXTtmb3IodmFyIG89MDtvPG47bys9Mil7cVtvPj4+M118PXBhcnNlSW50KHAuc3Vic3RyKG8sMiksMTYpPDwoMjQtKG8lOCkqNCl9cmV0dXJuIG5ldyBsLmluaXQocSxuLzIpfX07dmFyIGQ9bS5MYXRpbjE9e3N0cmluZ2lmeTpmdW5jdGlvbihxKXt2YXIgcj1xLndvcmRzO3ZhciBwPXEuc2lnQnl0ZXM7dmFyIG49W107Zm9yKHZhciBvPTA7bzxwO28rKyl7dmFyIHM9KHJbbz4+PjJdPj4+KDI0LShvJTQpKjgpKSYyNTU7bi5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUocykpfXJldHVybiBuLmpvaW4oIiIpfSxwYXJzZTpmdW5jdGlvbihwKXt2YXIgbj1wLmxlbmd0aDt2YXIgcT1bXTtmb3IodmFyIG89MDtvPG47bysrKXtxW28+Pj4yXXw9KHAuY2hhckNvZGVBdChvKSYyNTUpPDwoMjQtKG8lNCkqOCl9cmV0dXJuIG5ldyBsLmluaXQocSxuKX19O3ZhciBjPW0uVXRmOD17c3RyaW5naWZ5OmZ1bmN0aW9uKG4pe3RyeXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZShkLnN0cmluZ2lmeShuKSkpfWNhdGNoKG8pe3Rocm93IG5ldyBFcnJvcigiTWFsZm9ybWVkIFVURi04IGRhdGEiKX19LHBhcnNlOmZ1bmN0aW9uKG4pe3JldHVybiBkLnBhcnNlKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChuKSkpfX07dmFyIGk9Yi5CdWZmZXJlZEJsb2NrQWxnb3JpdGhtPWouZXh0ZW5kKHtyZXNldDpmdW5jdGlvbigpe3RoaXMuX2RhdGE9bmV3IGwuaW5pdCgpO3RoaXMuX25EYXRhQnl0ZXM9MH0sX2FwcGVuZDpmdW5jdGlvbihuKXtpZih0eXBlb2Ygbj09InN0cmluZyIpe249Yy5wYXJzZShuKX10aGlzLl9kYXRhLmNvbmNhdChuKTt0aGlzLl9uRGF0YUJ5dGVzKz1uLnNpZ0J5dGVzfSxfcHJvY2VzczpmdW5jdGlvbih3KXt2YXIgcT10aGlzLl9kYXRhO3ZhciB4PXEud29yZHM7dmFyIG49cS5zaWdCeXRlczt2YXIgdD10aGlzLmJsb2NrU2l6ZTt2YXIgdj10KjQ7dmFyIHU9bi92O2lmKHcpe3U9ZS5jZWlsKHUpfWVsc2V7dT1lLm1heCgodXwwKS10aGlzLl9taW5CdWZmZXJTaXplLDApfXZhciBzPXUqdDt2YXIgcj1lLm1pbihzKjQsbik7aWYocyl7Zm9yKHZhciBwPTA7cDxzO3ArPXQpe3RoaXMuX2RvUHJvY2Vzc0Jsb2NrKHgscCl9dmFyIG89eC5zcGxpY2UoMCxzKTtxLnNpZ0J5dGVzLT1yfXJldHVybiBuZXcgbC5pbml0KG8scil9LGNsb25lOmZ1bmN0aW9uKCl7dmFyIG49ai5jbG9uZS5jYWxsKHRoaXMpO24uX2RhdGE9dGhpcy5fZGF0YS5jbG9uZSgpO3JldHVybiBufSxfbWluQnVmZmVyU2l6ZTowfSk7dmFyIGY9Yi5IYXNoZXI9aS5leHRlbmQoe2NmZzpqLmV4dGVuZCgpLGluaXQ6ZnVuY3Rpb24obil7dGhpcy5jZmc9dGhpcy5jZmcuZXh0ZW5kKG4pO3RoaXMucmVzZXQoKX0scmVzZXQ6ZnVuY3Rpb24oKXtpLnJlc2V0LmNhbGwodGhpcyk7dGhpcy5fZG9SZXNldCgpfSx1cGRhdGU6ZnVuY3Rpb24obil7dGhpcy5fYXBwZW5kKG4pO3RoaXMuX3Byb2Nlc3MoKTtyZXR1cm4gdGhpc30sZmluYWxpemU6ZnVuY3Rpb24obil7aWYobil7dGhpcy5fYXBwZW5kKG4pfXZhciBvPXRoaXMuX2RvRmluYWxpemUoKTtyZXR1cm4gb30sYmxvY2tTaXplOjUxMi8zMixfY3JlYXRlSGVscGVyOmZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbihwLG8pe3JldHVybiBuZXcgbi5pbml0KG8pLmZpbmFsaXplKHApfX0sX2NyZWF0ZUhtYWNIZWxwZXI6ZnVuY3Rpb24obil7cmV0dXJuIGZ1bmN0aW9uKHAsbyl7cmV0dXJuIG5ldyBrLkhNQUMuaW5pdChuLG8pLmZpbmFsaXplKHApfX19KTt2YXIgaz1hLmFsZ289e307cmV0dXJuIGF9KE1hdGgpKTsNCi8qDQpDcnlwdG9KUyB2My4xLjIgeDY0LWNvcmUtbWluLmpzDQpjb2RlLmdvb2dsZS5jb20vcC9jcnlwdG8tanMNCihjKSAyMDA5LTIwMTMgYnkgSmVmZiBNb3R0LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KY29kZS5nb29nbGUuY29tL3AvY3J5cHRvLWpzL3dpa2kvTGljZW5zZQ0KKi8NCihmdW5jdGlvbihnKXt2YXIgYT1DcnlwdG9KUyxmPWEubGliLGU9Zi5CYXNlLGg9Zi5Xb3JkQXJyYXksYT1hLng2ND17fTthLldvcmQ9ZS5leHRlbmQoe2luaXQ6ZnVuY3Rpb24oYixjKXt0aGlzLmhpZ2g9Yjt0aGlzLmxvdz1jfX0pO2EuV29yZEFycmF5PWUuZXh0ZW5kKHtpbml0OmZ1bmN0aW9uKGIsYyl7Yj10aGlzLndvcmRzPWJ8fFtdO3RoaXMuc2lnQnl0ZXM9YyE9Zz9jOjgqYi5sZW5ndGh9LHRvWDMyOmZ1bmN0aW9uKCl7Zm9yKHZhciBiPXRoaXMud29yZHMsYz1iLmxlbmd0aCxhPVtdLGQ9MDtkPGM7ZCsrKXt2YXIgZT1iW2RdO2EucHVzaChlLmhpZ2gpO2EucHVzaChlLmxvdyl9cmV0dXJuIGguY3JlYXRlKGEsdGhpcy5zaWdCeXRlcyl9LGNsb25lOmZ1bmN0aW9uKCl7Zm9yKHZhciBiPWUuY2xvbmUuY2FsbCh0aGlzKSxjPWIud29yZHM9dGhpcy53b3Jkcy5zbGljZSgwKSxhPWMubGVuZ3RoLGQ9MDtkPGE7ZCsrKWNbZF09Y1tkXS5jbG9uZSgpO3JldHVybiBifX0pfSkoKTsNCg0KLyoNCkNyeXB0b0pTIHYzLjEuMiBjaXBoZXItY29yZS1taW4uanMNCmNvZGUuZ29vZ2xlLmNvbS9wL2NyeXB0by1qcw0KKGMpIDIwMDktMjAxMyBieSBKZWZmIE1vdHQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpjb2RlLmdvb2dsZS5jb20vcC9jcnlwdG8tanMvd2lraS9MaWNlbnNlDQoqLw0KQ3J5cHRvSlMubGliLkNpcGhlcnx8ZnVuY3Rpb24odSl7dmFyIGc9Q3J5cHRvSlMsZj1nLmxpYixrPWYuQmFzZSxsPWYuV29yZEFycmF5LHE9Zi5CdWZmZXJlZEJsb2NrQWxnb3JpdGhtLHI9Zy5lbmMuQmFzZTY0LHY9Zy5hbGdvLkV2cEtERixuPWYuQ2lwaGVyPXEuZXh0ZW5kKHtjZmc6ay5leHRlbmQoKSxjcmVhdGVFbmNyeXB0b3I6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5jcmVhdGUodGhpcy5fRU5DX1hGT1JNX01PREUsYSxiKX0sY3JlYXRlRGVjcnlwdG9yOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuY3JlYXRlKHRoaXMuX0RFQ19YRk9STV9NT0RFLGEsYil9LGluaXQ6ZnVuY3Rpb24oYSxiLGMpe3RoaXMuY2ZnPXRoaXMuY2ZnLmV4dGVuZChjKTt0aGlzLl94Zm9ybU1vZGU9YTt0aGlzLl9rZXk9Yjt0aGlzLnJlc2V0KCl9LHJlc2V0OmZ1bmN0aW9uKCl7cS5yZXNldC5jYWxsKHRoaXMpO3RoaXMuX2RvUmVzZXQoKX0scHJvY2VzczpmdW5jdGlvbihhKXt0aGlzLl9hcHBlbmQoYSk7DQpyZXR1cm4gdGhpcy5fcHJvY2VzcygpfSxmaW5hbGl6ZTpmdW5jdGlvbihhKXthJiZ0aGlzLl9hcHBlbmQoYSk7cmV0dXJuIHRoaXMuX2RvRmluYWxpemUoKX0sa2V5U2l6ZTo0LGl2U2l6ZTo0LF9FTkNfWEZPUk1fTU9ERToxLF9ERUNfWEZPUk1fTU9ERToyLF9jcmVhdGVIZWxwZXI6ZnVuY3Rpb24oYSl7cmV0dXJue2VuY3J5cHQ6ZnVuY3Rpb24oYixjLGQpe3JldHVybigic3RyaW5nIj09dHlwZW9mIGM/czpqKS5lbmNyeXB0KGEsYixjLGQpfSxkZWNyeXB0OmZ1bmN0aW9uKGIsYyxkKXtyZXR1cm4oInN0cmluZyI9PXR5cGVvZiBjP3M6aikuZGVjcnlwdChhLGIsYyxkKX19fX0pO2YuU3RyZWFtQ2lwaGVyPW4uZXh0ZW5kKHtfZG9GaW5hbGl6ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm9jZXNzKCEwKX0sYmxvY2tTaXplOjF9KTt2YXIgbT1nLm1vZGU9e30sdD1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faXY7ZD90aGlzLl9pdj11OmQ9dGhpcy5fcHJldkJsb2NrO2Zvcih2YXIgZT0NCjA7ZTxjO2UrKylhW2IrZV1ePWRbZV19LGg9KGYuQmxvY2tDaXBoZXJNb2RlPWsuZXh0ZW5kKHtjcmVhdGVFbmNyeXB0b3I6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5FbmNyeXB0b3IuY3JlYXRlKGEsYil9LGNyZWF0ZURlY3J5cHRvcjpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLkRlY3J5cHRvci5jcmVhdGUoYSxiKX0saW5pdDpmdW5jdGlvbihhLGIpe3RoaXMuX2NpcGhlcj1hO3RoaXMuX2l2PWJ9fSkpLmV4dGVuZCgpO2guRW5jcnlwdG9yPWguZXh0ZW5kKHtwcm9jZXNzQmxvY2s6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9jaXBoZXIsZD1jLmJsb2NrU2l6ZTt0LmNhbGwodGhpcyxhLGIsZCk7Yy5lbmNyeXB0QmxvY2soYSxiKTt0aGlzLl9wcmV2QmxvY2s9YS5zbGljZShiLGIrZCl9fSk7aC5EZWNyeXB0b3I9aC5leHRlbmQoe3Byb2Nlc3NCbG9jazpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2NpcGhlcixkPWMuYmxvY2tTaXplLGU9YS5zbGljZShiLGIrZCk7Yy5kZWNyeXB0QmxvY2soYSwNCmIpO3QuY2FsbCh0aGlzLGEsYixkKTt0aGlzLl9wcmV2QmxvY2s9ZX19KTttPW0uQ0JDPWg7aD0oZy5wYWQ9e30pLlBrY3M3PXtwYWQ6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9NCpiLGM9Yy1hLnNpZ0J5dGVzJWMsZD1jPDwyNHxjPDwxNnxjPDw4fGMsZT1bXSxmPTA7ZjxjO2YrPTQpZS5wdXNoKGQpO2M9bC5jcmVhdGUoZSxjKTthLmNvbmNhdChjKX0sdW5wYWQ6ZnVuY3Rpb24oYSl7YS5zaWdCeXRlcy09YS53b3Jkc1thLnNpZ0J5dGVzLTE+Pj4yXSYyNTV9fTtmLkJsb2NrQ2lwaGVyPW4uZXh0ZW5kKHtjZmc6bi5jZmcuZXh0ZW5kKHttb2RlOm0scGFkZGluZzpofSkscmVzZXQ6ZnVuY3Rpb24oKXtuLnJlc2V0LmNhbGwodGhpcyk7dmFyIGE9dGhpcy5jZmcsYj1hLml2LGE9YS5tb2RlO2lmKHRoaXMuX3hmb3JtTW9kZT09dGhpcy5fRU5DX1hGT1JNX01PREUpdmFyIGM9YS5jcmVhdGVFbmNyeXB0b3I7ZWxzZSBjPWEuY3JlYXRlRGVjcnlwdG9yLHRoaXMuX21pbkJ1ZmZlclNpemU9MTsNCnRoaXMuX21vZGU9Yy5jYWxsKGEsdGhpcyxiJiZiLndvcmRzKX0sX2RvUHJvY2Vzc0Jsb2NrOmZ1bmN0aW9uKGEsYil7dGhpcy5fbW9kZS5wcm9jZXNzQmxvY2soYSxiKX0sX2RvRmluYWxpemU6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNmZy5wYWRkaW5nO2lmKHRoaXMuX3hmb3JtTW9kZT09dGhpcy5fRU5DX1hGT1JNX01PREUpe2EucGFkKHRoaXMuX2RhdGEsdGhpcy5ibG9ja1NpemUpO3ZhciBiPXRoaXMuX3Byb2Nlc3MoITApfWVsc2UgYj10aGlzLl9wcm9jZXNzKCEwKSxhLnVucGFkKGIpO3JldHVybiBifSxibG9ja1NpemU6NH0pO3ZhciBwPWYuQ2lwaGVyUGFyYW1zPWsuZXh0ZW5kKHtpbml0OmZ1bmN0aW9uKGEpe3RoaXMubWl4SW4oYSl9LHRvU3RyaW5nOmZ1bmN0aW9uKGEpe3JldHVybihhfHx0aGlzLmZvcm1hdHRlcikuc3RyaW5naWZ5KHRoaXMpfX0pLG09KGcuZm9ybWF0PXt9KS5PcGVuU1NMPXtzdHJpbmdpZnk6ZnVuY3Rpb24oYSl7dmFyIGI9YS5jaXBoZXJ0ZXh0O2E9YS5zYWx0Ow0KcmV0dXJuKGE/bC5jcmVhdGUoWzEzOTg4OTM2ODQsMTcwMTA3NjgzMV0pLmNvbmNhdChhKS5jb25jYXQoYik6YikudG9TdHJpbmcocil9LHBhcnNlOmZ1bmN0aW9uKGEpe2E9ci5wYXJzZShhKTt2YXIgYj1hLndvcmRzO2lmKDEzOTg4OTM2ODQ9PWJbMF0mJjE3MDEwNzY4MzE9PWJbMV0pe3ZhciBjPWwuY3JlYXRlKGIuc2xpY2UoMiw0KSk7Yi5zcGxpY2UoMCw0KTthLnNpZ0J5dGVzLT0xNn1yZXR1cm4gcC5jcmVhdGUoe2NpcGhlcnRleHQ6YSxzYWx0OmN9KX19LGo9Zi5TZXJpYWxpemFibGVDaXBoZXI9ay5leHRlbmQoe2NmZzprLmV4dGVuZCh7Zm9ybWF0Om19KSxlbmNyeXB0OmZ1bmN0aW9uKGEsYixjLGQpe2Q9dGhpcy5jZmcuZXh0ZW5kKGQpO3ZhciBlPWEuY3JlYXRlRW5jcnlwdG9yKGMsZCk7Yj1lLmZpbmFsaXplKGIpO2U9ZS5jZmc7cmV0dXJuIHAuY3JlYXRlKHtjaXBoZXJ0ZXh0OmIsa2V5OmMsaXY6ZS5pdixhbGdvcml0aG06YSxtb2RlOmUubW9kZSxwYWRkaW5nOmUucGFkZGluZywNCmJsb2NrU2l6ZTphLmJsb2NrU2l6ZSxmb3JtYXR0ZXI6ZC5mb3JtYXR9KX0sZGVjcnlwdDpmdW5jdGlvbihhLGIsYyxkKXtkPXRoaXMuY2ZnLmV4dGVuZChkKTtiPXRoaXMuX3BhcnNlKGIsZC5mb3JtYXQpO3JldHVybiBhLmNyZWF0ZURlY3J5cHRvcihjLGQpLmZpbmFsaXplKGIuY2lwaGVydGV4dCl9LF9wYXJzZTpmdW5jdGlvbihhLGIpe3JldHVybiJzdHJpbmciPT10eXBlb2YgYT9iLnBhcnNlKGEsdGhpcyk6YX19KSxnPShnLmtkZj17fSkuT3BlblNTTD17ZXhlY3V0ZTpmdW5jdGlvbihhLGIsYyxkKXtkfHwoZD1sLnJhbmRvbSg4KSk7YT12LmNyZWF0ZSh7a2V5U2l6ZTpiK2N9KS5jb21wdXRlKGEsZCk7Yz1sLmNyZWF0ZShhLndvcmRzLnNsaWNlKGIpLDQqYyk7YS5zaWdCeXRlcz00KmI7cmV0dXJuIHAuY3JlYXRlKHtrZXk6YSxpdjpjLHNhbHQ6ZH0pfX0scz1mLlBhc3N3b3JkQmFzZWRDaXBoZXI9ai5leHRlbmQoe2NmZzpqLmNmZy5leHRlbmQoe2tkZjpnfSksZW5jcnlwdDpmdW5jdGlvbihhLA0KYixjLGQpe2Q9dGhpcy5jZmcuZXh0ZW5kKGQpO2M9ZC5rZGYuZXhlY3V0ZShjLGEua2V5U2l6ZSxhLml2U2l6ZSk7ZC5pdj1jLml2O2E9ai5lbmNyeXB0LmNhbGwodGhpcyxhLGIsYy5rZXksZCk7YS5taXhJbihjKTtyZXR1cm4gYX0sZGVjcnlwdDpmdW5jdGlvbihhLGIsYyxkKXtkPXRoaXMuY2ZnLmV4dGVuZChkKTtiPXRoaXMuX3BhcnNlKGIsZC5mb3JtYXQpO2M9ZC5rZGYuZXhlY3V0ZShjLGEua2V5U2l6ZSxhLml2U2l6ZSxiLnNhbHQpO2QuaXY9Yy5pdjtyZXR1cm4gai5kZWNyeXB0LmNhbGwodGhpcyxhLGIsYy5rZXksZCl9fSl9KCk7DQoNCi8qDQpDcnlwdG9KUyB2My4xLjIgYWVzLW1pbi5qcw0KY29kZS5nb29nbGUuY29tL3AvY3J5cHRvLWpzDQooYykgMjAwOS0yMDEzIGJ5IEplZmYgTW90dC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCmNvZGUuZ29vZ2xlLmNvbS9wL2NyeXB0by1qcy93aWtpL0xpY2Vuc2UNCiovDQooZnVuY3Rpb24oKXtmb3IodmFyIHE9Q3J5cHRvSlMseD1xLmxpYi5CbG9ja0NpcGhlcixyPXEuYWxnbyxqPVtdLHk9W10sej1bXSxBPVtdLEI9W10sQz1bXSxzPVtdLHU9W10sdj1bXSx3PVtdLGc9W10saz0wOzI1Nj5rO2srKylnW2tdPTEyOD5rP2s8PDE6azw8MV4yODM7Zm9yKHZhciBuPTAsbD0wLGs9MDsyNTY+aztrKyspe3ZhciBmPWxebDw8MV5sPDwyXmw8PDNebDw8NCxmPWY+Pj44XmYmMjU1Xjk5O2pbbl09Zjt5W2ZdPW47dmFyIHQ9Z1tuXSxEPWdbdF0sRT1nW0RdLGI9MjU3KmdbZl1eMTY4NDMwMDgqZjt6W25dPWI8PDI0fGI+Pj44O0Fbbl09Yjw8MTZ8Yj4+PjE2O0Jbbl09Yjw8OHxiPj4+MjQ7Q1tuXT1iO2I9MTY4NDMwMDkqRV42NTUzNypEXjI1Nyp0XjE2ODQzMDA4Km47c1tmXT1iPDwyNHxiPj4+ODt1W2ZdPWI8PDE2fGI+Pj4xNjt2W2ZdPWI8PDh8Yj4+PjI0O3dbZl09YjtuPyhuPXReZ1tnW2dbRV50XV1dLGxePWdbZ1tsXV0pOm49bD0xfXZhciBGPVswLDEsMiw0LDgsDQoxNiwzMiw2NCwxMjgsMjcsNTRdLHI9ci5BRVM9eC5leHRlbmQoe19kb1Jlc2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciBjPXRoaXMuX2tleSxlPWMud29yZHMsYT1jLnNpZ0J5dGVzLzQsYz00KigodGhpcy5fblJvdW5kcz1hKzYpKzEpLGI9dGhpcy5fa2V5U2NoZWR1bGU9W10saD0wO2g8YztoKyspaWYoaDxhKWJbaF09ZVtoXTtlbHNle3ZhciBkPWJbaC0xXTtoJWE/NjxhJiY0PT1oJWEmJihkPWpbZD4+PjI0XTw8MjR8altkPj4+MTYmMjU1XTw8MTZ8altkPj4+OCYyNTVdPDw4fGpbZCYyNTVdKTooZD1kPDw4fGQ+Pj4yNCxkPWpbZD4+PjI0XTw8MjR8altkPj4+MTYmMjU1XTw8MTZ8altkPj4+OCYyNTVdPDw4fGpbZCYyNTVdLGRePUZbaC9hfDBdPDwyNCk7YltoXT1iW2gtYV1eZH1lPXRoaXMuX2ludktleVNjaGVkdWxlPVtdO2ZvcihhPTA7YTxjO2ErKyloPWMtYSxkPWElND9iW2hdOmJbaC00XSxlW2FdPTQ+YXx8ND49aD9kOnNbaltkPj4+MjRdXV51W2pbZD4+PjE2JjI1NV1dXnZbaltkPj4+DQo4JjI1NV1dXndbaltkJjI1NV1dfSxlbmNyeXB0QmxvY2s6ZnVuY3Rpb24oYyxlKXt0aGlzLl9kb0NyeXB0QmxvY2soYyxlLHRoaXMuX2tleVNjaGVkdWxlLHosQSxCLEMsail9LGRlY3J5cHRCbG9jazpmdW5jdGlvbihjLGUpe3ZhciBhPWNbZSsxXTtjW2UrMV09Y1tlKzNdO2NbZSszXT1hO3RoaXMuX2RvQ3J5cHRCbG9jayhjLGUsdGhpcy5faW52S2V5U2NoZWR1bGUscyx1LHYsdyx5KTthPWNbZSsxXTtjW2UrMV09Y1tlKzNdO2NbZSszXT1hfSxfZG9DcnlwdEJsb2NrOmZ1bmN0aW9uKGMsZSxhLGIsaCxkLGosbSl7Zm9yKHZhciBuPXRoaXMuX25Sb3VuZHMsZj1jW2VdXmFbMF0sZz1jW2UrMV1eYVsxXSxrPWNbZSsyXV5hWzJdLHA9Y1tlKzNdXmFbM10sbD00LHQ9MTt0PG47dCsrKXZhciBxPWJbZj4+PjI0XV5oW2c+Pj4xNiYyNTVdXmRbaz4+PjgmMjU1XV5qW3AmMjU1XV5hW2wrK10scj1iW2c+Pj4yNF1eaFtrPj4+MTYmMjU1XV5kW3A+Pj44JjI1NV1ealtmJjI1NV1eYVtsKytdLHM9DQpiW2s+Pj4yNF1eaFtwPj4+MTYmMjU1XV5kW2Y+Pj44JjI1NV1ealtnJjI1NV1eYVtsKytdLHA9YltwPj4+MjRdXmhbZj4+PjE2JjI1NV1eZFtnPj4+OCYyNTVdXmpbayYyNTVdXmFbbCsrXSxmPXEsZz1yLGs9cztxPShtW2Y+Pj4yNF08PDI0fG1bZz4+PjE2JjI1NV08PDE2fG1baz4+PjgmMjU1XTw8OHxtW3AmMjU1XSleYVtsKytdO3I9KG1bZz4+PjI0XTw8MjR8bVtrPj4+MTYmMjU1XTw8MTZ8bVtwPj4+OCYyNTVdPDw4fG1bZiYyNTVdKV5hW2wrK107cz0obVtrPj4+MjRdPDwyNHxtW3A+Pj4xNiYyNTVdPDwxNnxtW2Y+Pj44JjI1NV08PDh8bVtnJjI1NV0pXmFbbCsrXTtwPShtW3A+Pj4yNF08PDI0fG1bZj4+PjE2JjI1NV08PDE2fG1bZz4+PjgmMjU1XTw8OHxtW2smMjU1XSleYVtsKytdO2NbZV09cTtjW2UrMV09cjtjW2UrMl09cztjW2UrM109cH0sa2V5U2l6ZTo4fSk7cS5BRVM9eC5fY3JlYXRlSGVscGVyKHIpfSkoKTsNCg0KLyoNCkNyeXB0b0pTIHYzLjEuMiB0cmlwbGVkZXMtbWluLmpzDQpjb2RlLmdvb2dsZS5jb20vcC9jcnlwdG8tanMNCihjKSAyMDA5LTIwMTMgYnkgSmVmZiBNb3R0LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KY29kZS5nb29nbGUuY29tL3AvY3J5cHRvLWpzL3dpa2kvTGljZW5zZQ0KKi8NCihmdW5jdGlvbigpe2Z1bmN0aW9uIGooYixjKXt2YXIgYT0odGhpcy5fbEJsb2NrPj4+Yl50aGlzLl9yQmxvY2spJmM7dGhpcy5fckJsb2NrXj1hO3RoaXMuX2xCbG9ja149YTw8Yn1mdW5jdGlvbiBsKGIsYyl7dmFyIGE9KHRoaXMuX3JCbG9jaz4+PmJedGhpcy5fbEJsb2NrKSZjO3RoaXMuX2xCbG9ja149YTt0aGlzLl9yQmxvY2tePWE8PGJ9dmFyIGg9Q3J5cHRvSlMsZT1oLmxpYixuPWUuV29yZEFycmF5LGU9ZS5CbG9ja0NpcGhlcixnPWguYWxnbyxxPVs1Nyw0OSw0MSwzMywyNSwxNyw5LDEsNTgsNTAsNDIsMzQsMjYsMTgsMTAsMiw1OSw1MSw0MywzNSwyNywxOSwxMSwzLDYwLDUyLDQ0LDM2LDYzLDU1LDQ3LDM5LDMxLDIzLDE1LDcsNjIsNTQsNDYsMzgsMzAsMjIsMTQsNiw2MSw1Myw0NSwzNywyOSwyMSwxMyw1LDI4LDIwLDEyLDRdLHA9WzE0LDE3LDExLDI0LDEsNSwzLDI4LDE1LDYsMjEsMTAsMjMsMTksMTIsNCwyNiw4LDE2LDcsMjcsMjAsMTMsMiw0MSw1MiwzMSwzNyw0NywNCjU1LDMwLDQwLDUxLDQ1LDMzLDQ4LDQ0LDQ5LDM5LDU2LDM0LDUzLDQ2LDQyLDUwLDM2LDI5LDMyXSxyPVsxLDIsNCw2LDgsMTAsMTIsMTQsMTUsMTcsMTksMjEsMjMsMjUsMjcsMjhdLHM9W3siMCI6ODQyMTg4OCwyNjg0MzU0NTY6MzI3NjgsNTM2ODcwOTEyOjg0MjEzNzgsODA1MzA2MzY4OjIsMTA3Mzc0MTgyNDo1MTIsMTM0MjE3NzI4MDo4NDIxODkwLDE2MTA2MTI3MzY6ODM4OTEyMiwxODc5MDQ4MTkyOjgzODg2MDgsMjE0NzQ4MzY0ODo1MTQsMjQxNTkxOTEwNDo4Mzg5MTIwLDI2ODQzNTQ1NjA6MzMyODAsMjk1Mjc5MDAxNjo4NDIxMzc2LDMyMjEyMjU0NzI6MzI3NzAsMzQ4OTY2MDkyODo4Mzg4NjEwLDM3NTgwOTYzODQ6MCw0MDI2NTMxODQwOjMzMjgyLDEzNDIxNzcyODowLDQwMjY1MzE4NDo4NDIxODkwLDY3MTA4ODY0MDozMzI4Miw5Mzk1MjQwOTY6MzI3NjgsMTIwNzk1OTU1Mjo4NDIxODg4LDE0NzYzOTUwMDg6NTEyLDE3NDQ4MzA0NjQ6ODQyMTM3OCwyMDEzMjY1OTIwOjIsDQoyMjgxNzAxMzc2OjgzODkxMjAsMjU1MDEzNjgzMjozMzI4MCwyODE4NTcyMjg4Ojg0MjEzNzYsMzA4NzAwNzc0NDo4Mzg5MTIyLDMzNTU0NDMyMDA6ODM4ODYxMCwzNjIzODc4NjU2OjMyNzcwLDM4OTIzMTQxMTI6NTE0LDQxNjA3NDk1Njg6ODM4ODYwOCwxOjMyNzY4LDI2ODQzNTQ1NzoyLDUzNjg3MDkxMzo4NDIxODg4LDgwNTMwNjM2OTo4Mzg4NjA4LDEwNzM3NDE4MjU6ODQyMTM3OCwxMzQyMTc3MjgxOjMzMjgwLDE2MTA2MTI3Mzc6NTEyLDE4NzkwNDgxOTM6ODM4OTEyMiwyMTQ3NDgzNjQ5Ojg0MjE4OTAsMjQxNTkxOTEwNTo4NDIxMzc2LDI2ODQzNTQ1NjE6ODM4ODYxMCwyOTUyNzkwMDE3OjMzMjgyLDMyMjEyMjU0NzM6NTE0LDM0ODk2NjA5Mjk6ODM4OTEyMCwzNzU4MDk2Mzg1OjMyNzcwLDQwMjY1MzE4NDE6MCwxMzQyMTc3Mjk6ODQyMTg5MCw0MDI2NTMxODU6ODQyMTM3Niw2NzEwODg2NDE6ODM4ODYwOCw5Mzk1MjQwOTc6NTEyLDEyMDc5NTk1NTM6MzI3NjgsMTQ3NjM5NTAwOTo4Mzg4NjEwLA0KMTc0NDgzMDQ2NToyLDIwMTMyNjU5MjE6MzMyODIsMjI4MTcwMTM3NzozMjc3MCwyNTUwMTM2ODMzOjgzODkxMjIsMjgxODU3MjI4OTo1MTQsMzA4NzAwNzc0NTo4NDIxODg4LDMzNTU0NDMyMDE6ODM4OTEyMCwzNjIzODc4NjU3OjAsMzg5MjMxNDExMzozMzI4MCw0MTYwNzQ5NTY5Ojg0MjEzNzh9LHsiMCI6MTA3NDI4MjUxMiwxNjc3NzIxNjoxNjM4NCwzMzU1NDQzMjo1MjQyODgsNTAzMzE2NDg6MTA3NDI2NjEyOCw2NzEwODg2NDoxMDczNzQxODQwLDgzODg2MDgwOjEwNzQyODI0OTYsMTAwNjYzMjk2OjEwNzM3NTgyMDgsMTE3NDQwNTEyOjE2LDEzNDIxNzcyODo1NDA2NzIsMTUwOTk0OTQ0OjEwNzM3NTgyMjQsMTY3NzcyMTYwOjEwNzM3NDE4MjQsMTg0NTQ5Mzc2OjU0MDY4OCwyMDEzMjY1OTI6NTI0MzA0LDIxODEwMzgwODowLDIzNDg4MTAyNDoxNjQwMCwyNTE2NTgyNDA6MTA3NDI2NjExMiw4Mzg4NjA4OjEwNzM3NTgyMDgsMjUxNjU4MjQ6NTQwNjg4LDQxOTQzMDQwOjE2LDU4NzIwMjU2OjEwNzM3NTgyMjQsDQo3NTQ5NzQ3MjoxMDc0MjgyNTEyLDkyMjc0Njg4OjEwNzM3NDE4MjQsMTA5MDUxOTA0OjUyNDI4OCwxMjU4MjkxMjA6MTA3NDI2NjEyOCwxNDI2MDYzMzY6NTI0MzA0LDE1OTM4MzU1MjowLDE3NjE2MDc2ODoxNjM4NCwxOTI5Mzc5ODQ6MTA3NDI2NjExMiwyMDk3MTUyMDA6MTA3Mzc0MTg0MCwyMjY0OTI0MTY6NTQwNjcyLDI0MzI2OTYzMjoxMDc0MjgyNDk2LDI2MDA0Njg0ODoxNjQwMCwyNjg0MzU0NTY6MCwyODUyMTI2NzI6MTA3NDI2NjEyOCwzMDE5ODk4ODg6MTA3Mzc1ODIyNCwzMTg3NjcxMDQ6MTA3NDI4MjQ5NiwzMzU1NDQzMjA6MTA3NDI2NjExMiwzNTIzMjE1MzY6MTYsMzY5MDk4NzUyOjU0MDY4OCwzODU4NzU5Njg6MTYzODQsNDAyNjUzMTg0OjE2NDAwLDQxOTQzMDQwMDo1MjQyODgsNDM2MjA3NjE2OjUyNDMwNCw0NTI5ODQ4MzI6MTA3Mzc0MTg0MCw0Njk3NjIwNDg6NTQwNjcyLDQ4NjUzOTI2NDoxMDczNzU4MjA4LDUwMzMxNjQ4MDoxMDczNzQxODI0LDUyMDA5MzY5NjoxMDc0MjgyNTEyLA0KMjc2ODI0MDY0OjU0MDY4OCwyOTM2MDEyODA6NTI0Mjg4LDMxMDM3ODQ5NjoxMDc0MjY2MTEyLDMyNzE1NTcxMjoxNjM4NCwzNDM5MzI5Mjg6MTA3Mzc1ODIwOCwzNjA3MTAxNDQ6MTA3NDI4MjUxMiwzNzc0ODczNjA6MTYsMzk0MjY0NTc2OjEwNzM3NDE4MjQsNDExMDQxNzkyOjEwNzQyODI0OTYsNDI3ODE5MDA4OjEwNzM3NDE4NDAsNDQ0NTk2MjI0OjEwNzM3NTgyMjQsNDYxMzczNDQwOjUyNDMwNCw0NzgxNTA2NTY6MCw0OTQ5Mjc4NzI6MTY0MDAsNTExNzA1MDg4OjEwNzQyNjYxMjgsNTI4NDgyMzA0OjU0MDY3Mn0seyIwIjoyNjAsMTA0ODU3NjowLDIwOTcxNTI6NjcxMDkxMjAsMzE0NTcyODo2NTc5Niw0MTk0MzA0OjY1NTQwLDUyNDI4ODA6NjcxMDg4NjgsNjI5MTQ1Njo2NzE3NDY2MCw3MzQwMDMyOjY3MTc0NDAwLDgzODg2MDg6NjcxMDg4NjQsOTQzNzE4NDo2NzE3NDY1NiwxMDQ4NTc2MDo2NTc5MiwxMTUzNDMzNjo2NzE3NDQwNCwxMjU4MjkxMjo2NzEwOTEyNCwxMzYzMTQ4ODo2NTUzNiwNCjE0NjgwMDY0OjQsMTU3Mjg2NDA6MjU2LDUyNDI4ODo2NzE3NDY1NiwxNTcyODY0OjY3MTc0NDA0LDI2MjE0NDA6MCwzNjcwMDE2OjY3MTA5MTIwLDQ3MTg1OTI6NjcxMDg4NjgsNTc2NzE2ODo2NTUzNiw2ODE1NzQ0OjY1NTQwLDc4NjQzMjA6MjYwLDg5MTI4OTY6NCw5OTYxNDcyOjI1NiwxMTAxMDA0ODo2NzE3NDQwMCwxMjA1ODYyNDo2NTc5NiwxMzEwNzIwMDo2NTc5MiwxNDE1NTc3Njo2NzEwOTEyNCwxNTIwNDM1Mjo2NzE3NDY2MCwxNjI1MjkyODo2NzEwODg2NCwxNjc3NzIxNjo2NzE3NDY1NiwxNzgyNTc5Mjo2NTU0MCwxODg3NDM2ODo2NTUzNiwxOTkyMjk0NDo2NzEwOTEyMCwyMDk3MTUyMDoyNTYsMjIwMjAwOTY6NjcxNzQ2NjAsMjMwNjg2NzI6NjcxMDg4NjgsMjQxMTcyNDg6MCwyNTE2NTgyNDo2NzEwOTEyNCwyNjIxNDQwMDo2NzEwODg2NCwyNzI2Mjk3Njo0LDI4MzExNTUyOjY1NzkyLDI5MzYwMTI4OjY3MTc0NDAwLDMwNDA4NzA0OjI2MCwzMTQ1NzI4MDo2NTc5NiwzMjUwNTg1Njo2NzE3NDQwNCwNCjE3MzAxNTA0OjY3MTA4ODY0LDE4MzUwMDgwOjI2MCwxOTM5ODY1Njo2NzE3NDY1NiwyMDQ0NzIzMjowLDIxNDk1ODA4OjY1NTQwLDIyNTQ0Mzg0OjY3MTA5MTIwLDIzNTkyOTYwOjI1NiwyNDY0MTUzNjo2NzE3NDQwNCwyNTY5MDExMjo2NTUzNiwyNjczODY4ODo2NzE3NDY2MCwyNzc4NzI2NDo2NTc5NiwyODgzNTg0MDo2NzEwODg2OCwyOTg4NDQxNjo2NzEwOTEyNCwzMDkzMjk5Mjo2NzE3NDQwMCwzMTk4MTU2ODo0LDMzMDMwMTQ0OjY1NzkyfSx7IjAiOjIxNTE2ODIwNDgsNjU1MzY6MjE0NzQ4NzgwOCwxMzEwNzI6NDE5ODQ2NCwxOTY2MDg6MjE1MTY3Nzk1MiwyNjIxNDQ6MCwzMjc2ODA6NDE5ODQwMCwzOTMyMTY6MjE0NzQ4MzcxMiw0NTg3NTI6NDE5NDM2OCw1MjQyODg6MjE0NzQ4MzY0OCw1ODk4MjQ6NDE5NDMwNCw2NTUzNjA6NjQsNzIwODk2OjIxNDc0ODc3NDQsNzg2NDMyOjIxNTE2NzgwMTYsODUxOTY4OjQxNjAsOTE3NTA0OjQwOTYsOTgzMDQwOjIxNTE2ODIxMTIsMzI3Njg6MjE0NzQ4NzgwOCwNCjk4MzA0OjY0LDE2Mzg0MDoyMTUxNjc4MDE2LDIyOTM3NjoyMTQ3NDg3NzQ0LDI5NDkxMjo0MTk4NDAwLDM2MDQ0ODoyMTUxNjgyMTEyLDQyNTk4NDowLDQ5MTUyMDoyMTUxNjc3OTUyLDU1NzA1Njo0MDk2LDYyMjU5MjoyMTUxNjgyMDQ4LDY4ODEyODo0MTk0MzA0LDc1MzY2NDo0MTYwLDgxOTIwMDoyMTQ3NDgzNjQ4LDg4NDczNjo0MTk0MzY4LDk1MDI3Mjo0MTk4NDY0LDEwMTU4MDg6MjE0NzQ4MzcxMiwxMDQ4NTc2OjQxOTQzNjgsMTExNDExMjo0MTk4NDAwLDExNzk2NDg6MjE0NzQ4MzcxMiwxMjQ1MTg0OjAsMTMxMDcyMDo0MTYwLDEzNzYyNTY6MjE1MTY3ODAxNiwxNDQxNzkyOjIxNTE2ODIwNDgsMTUwNzMyODoyMTQ3NDg3ODA4LDE1NzI4NjQ6MjE1MTY4MjExMiwxNjM4NDAwOjIxNDc0ODM2NDgsMTcwMzkzNjoyMTUxNjc3OTUyLDE3Njk0NzI6NDE5ODQ2NCwxODM1MDA4OjIxNDc0ODc3NDQsMTkwMDU0NDo0MTk0MzA0LDE5NjYwODA6NjQsMjAzMTYxNjo0MDk2LDEwODEzNDQ6MjE1MTY3Nzk1MiwNCjExNDY4ODA6MjE1MTY4MjExMiwxMjEyNDE2OjAsMTI3Nzk1Mjo0MTk4NDAwLDEzNDM0ODg6NDE5NDM2OCwxNDA5MDI0OjIxNDc0ODM2NDgsMTQ3NDU2MDoyMTQ3NDg3ODA4LDE1NDAwOTY6NjQsMTYwNTYzMjoyMTQ3NDgzNzEyLDE2NzExNjg6NDA5NiwxNzM2NzA0OjIxNDc0ODc3NDQsMTgwMjI0MDoyMTUxNjc4MDE2LDE4Njc3NzY6NDE2MCwxOTMzMzEyOjIxNTE2ODIwNDgsMTk5ODg0ODo0MTk0MzA0LDIwNjQzODQ6NDE5ODQ2NH0seyIwIjoxMjgsNDA5NjoxNzAzOTM2MCw4MTkyOjI2MjE0NCwxMjI4ODo1MzY4NzA5MTIsMTYzODQ6NTM3MTMzMTg0LDIwNDgwOjE2Nzc3MzQ0LDI0NTc2OjU1MzY0ODI1NiwyODY3MjoyNjIyNzIsMzI3Njg6MTY3NzcyMTYsMzY4NjQ6NTM3MTMzMDU2LDQwOTYwOjUzNjg3MTA0MCw0NTA1Njo1NTM5MTA0MDAsNDkxNTI6NTUzOTEwMjcyLDUzMjQ4OjAsNTczNDQ6MTcwMzk0ODgsNjE0NDA6NTUzNjQ4MTI4LDIwNDg6MTcwMzk0ODgsNjE0NDo1NTM2NDgyNTYsDQoxMDI0MDoxMjgsMTQzMzY6MTcwMzkzNjAsMTg0MzI6MjYyMTQ0LDIyNTI4OjUzNzEzMzE4NCwyNjYyNDo1NTM5MTAyNzIsMzA3MjA6NTM2ODcwOTEyLDM0ODE2OjUzNzEzMzA1NiwzODkxMjowLDQzMDA4OjU1MzkxMDQwMCw0NzEwNDoxNjc3NzM0NCw1MTIwMDo1MzY4NzEwNDAsNTUyOTY6NTUzNjQ4MTI4LDU5MzkyOjE2Nzc3MjE2LDYzNDg4OjI2MjI3Miw2NTUzNjoyNjIxNDQsNjk2MzI6MTI4LDczNzI4OjUzNjg3MDkxMiw3NzgyNDo1NTM2NDgyNTYsODE5MjA6MTY3NzczNDQsODYwMTY6NTUzOTEwMjcyLDkwMTEyOjUzNzEzMzE4NCw5NDIwODoxNjc3NzIxNiw5ODMwNDo1NTM5MTA0MDAsMTAyNDAwOjU1MzY0ODEyOCwxMDY0OTY6MTcwMzkzNjAsMTEwNTkyOjUzNzEzMzA1NiwxMTQ2ODg6MjYyMjcyLDExODc4NDo1MzY4NzEwNDAsMTIyODgwOjAsMTI2OTc2OjE3MDM5NDg4LDY3NTg0OjU1MzY0ODI1Niw3MTY4MDoxNjc3NzIxNiw3NTc3NjoxNzAzOTM2MCw3OTg3Mjo1MzcxMzMxODQsDQo4Mzk2ODo1MzY4NzA5MTIsODgwNjQ6MTcwMzk0ODgsOTIxNjA6MTI4LDk2MjU2OjU1MzkxMDI3MiwxMDAzNTI6MjYyMjcyLDEwNDQ0ODo1NTM5MTA0MDAsMTA4NTQ0OjAsMTEyNjQwOjU1MzY0ODEyOCwxMTY3MzY6MTY3NzczNDQsMTIwODMyOjI2MjE0NCwxMjQ5Mjg6NTM3MTMzMDU2LDEyOTAyNDo1MzY4NzEwNDB9LHsiMCI6MjY4NDM1NDY0LDI1Njo4MTkyLDUxMjoyNzA1MzI2MDgsNzY4OjI3MDU0MDgwOCwxMDI0OjI2ODQ0MzY0OCwxMjgwOjIwOTcxNTIsMTUzNjoyMDk3MTYwLDE3OTI6MjY4NDM1NDU2LDIwNDg6MCwyMzA0OjI2ODQ0MzY1NiwyNTYwOjIxMDUzNDQsMjgxNjo4LDMwNzI6MjcwNTMyNjE2LDMzMjg6MjEwNTM1MiwzNTg0OjgyMDAsMzg0MDoyNzA1NDA4MDAsMTI4OjI3MDUzMjYwOCwzODQ6MjcwNTQwODA4LDY0MDo4LDg5NjoyMDk3MTUyLDExNTI6MjEwNTM1MiwxNDA4OjI2ODQzNTQ2NCwxNjY0OjI2ODQ0MzY0OCwxOTIwOjgyMDAsMjE3NjoyMDk3MTYwLDI0MzI6ODE5MiwNCjI2ODg6MjY4NDQzNjU2LDI5NDQ6MjcwNTMyNjE2LDMyMDA6MCwzNDU2OjI3MDU0MDgwMCwzNzEyOjIxMDUzNDQsMzk2ODoyNjg0MzU0NTYsNDA5NjoyNjg0NDM2NDgsNDM1MjoyNzA1MzI2MTYsNDYwODoyNzA1NDA4MDgsNDg2NDo4MjAwLDUxMjA6MjA5NzE1Miw1Mzc2OjI2ODQzNTQ1Niw1NjMyOjI2ODQzNTQ2NCw1ODg4OjIxMDUzNDQsNjE0NDoyMTA1MzUyLDY0MDA6MCw2NjU2OjgsNjkxMjoyNzA1MzI2MDgsNzE2ODo4MTkyLDc0MjQ6MjY4NDQzNjU2LDc2ODA6MjcwNTQwODAwLDc5MzY6MjA5NzE2MCw0MjI0OjgsNDQ4MDoyMTA1MzQ0LDQ3MzY6MjA5NzE1Miw0OTkyOjI2ODQzNTQ2NCw1MjQ4OjI2ODQ0MzY0OCw1NTA0OjgyMDAsNTc2MDoyNzA1NDA4MDgsNjAxNjoyNzA1MzI2MDgsNjI3MjoyNzA1NDA4MDAsNjUyODoyNzA1MzI2MTYsNjc4NDo4MTkyLDcwNDA6MjEwNTM1Miw3Mjk2OjIwOTcxNjAsNzU1MjowLDc4MDg6MjY4NDM1NDU2LDgwNjQ6MjY4NDQzNjU2fSx7IjAiOjEwNDg1NzYsDQoxNjozMzU1NTQ1NywzMjoxMDI0LDQ4OjEwNDk2MDEsNjQ6MzQ2MDQwMzMsODA6MCw5NjoxLDExMjozNDYwMzAwOSwxMjg6MzM1NTU0NTYsMTQ0OjEwNDg1NzcsMTYwOjMzNTU0NDMzLDE3NjozNDYwNDAzMiwxOTI6MzQ2MDMwMDgsMjA4OjEwMjUsMjI0OjEwNDk2MDAsMjQwOjMzNTU0NDMyLDg6MzQ2MDMwMDksMjQ6MCw0MDozMzU1NTQ1Nyw1NjozNDYwNDAzMiw3MjoxMDQ4NTc2LDg4OjMzNTU0NDMzLDEwNDozMzU1NDQzMiwxMjA6MTAyNSwxMzY6MTA0OTYwMSwxNTI6MzM1NTU0NTYsMTY4OjM0NjAzMDA4LDE4NDoxMDQ4NTc3LDIwMDoxMDI0LDIxNjozNDYwNDAzMywyMzI6MSwyNDg6MTA0OTYwMCwyNTY6MzM1NTQ0MzIsMjcyOjEwNDg1NzYsMjg4OjMzNTU1NDU3LDMwNDozNDYwMzAwOSwzMjA6MTA0ODU3NywzMzY6MzM1NTU0NTYsMzUyOjM0NjA0MDMyLDM2ODoxMDQ5NjAxLDM4NDoxMDI1LDQwMDozNDYwNDAzMyw0MTY6MTA0OTYwMCw0MzI6MSw0NDg6MCw0NjQ6MzQ2MDMwMDgsNDgwOjMzNTU0NDMzLA0KNDk2OjEwMjQsMjY0OjEwNDk2MDAsMjgwOjMzNTU1NDU3LDI5NjozNDYwMzAwOSwzMTI6MSwzMjg6MzM1NTQ0MzIsMzQ0OjEwNDg1NzYsMzYwOjEwMjUsMzc2OjM0NjA0MDMyLDM5MjozMzU1NDQzMyw0MDg6MzQ2MDMwMDgsNDI0OjAsNDQwOjM0NjA0MDMzLDQ1NjoxMDQ5NjAxLDQ3MjoxMDI0LDQ4ODozMzU1NTQ1Niw1MDQ6MTA0ODU3N30seyIwIjoxMzQyMTk4MDgsMToxMzEwNzIsMjoxMzQyMTc3MjgsMzozMiw0OjEzMTEwNCw1OjEzNDM1MDg4MCw2OjEzNDM1MDg0OCw3OjIwNDgsODoxMzQzNDg4MDAsOToxMzQyMTk3NzYsMTA6MTMzMTIwLDExOjEzNDM0ODgzMiwxMjoyMDgwLDEzOjAsMTQ6MTM0MjE3NzYwLDE1OjEzMzE1MiwyMTQ3NDgzNjQ4OjIwNDgsMjE0NzQ4MzY0OToxMzQzNTA4ODAsMjE0NzQ4MzY1MDoxMzQyMTk4MDgsMjE0NzQ4MzY1MToxMzQyMTc3MjgsMjE0NzQ4MzY1MjoxMzQzNDg4MDAsMjE0NzQ4MzY1MzoxMzMxMjAsMjE0NzQ4MzY1NDoxMzMxNTIsMjE0NzQ4MzY1NTozMiwNCjIxNDc0ODM2NTY6MTM0MjE3NzYwLDIxNDc0ODM2NTc6MjA4MCwyMTQ3NDgzNjU4OjEzMTEwNCwyMTQ3NDgzNjU5OjEzNDM1MDg0OCwyMTQ3NDgzNjYwOjAsMjE0NzQ4MzY2MToxMzQzNDg4MzIsMjE0NzQ4MzY2MjoxMzQyMTk3NzYsMjE0NzQ4MzY2MzoxMzEwNzIsMTY6MTMzMTUyLDE3OjEzNDM1MDg0OCwxODozMiwxOToyMDQ4LDIwOjEzNDIxOTc3NiwyMToxMzQyMTc3NjAsMjI6MTM0MzQ4ODMyLDIzOjEzMTA3MiwyNDowLDI1OjEzMTEwNCwyNjoxMzQzNDg4MDAsMjc6MTM0MjE5ODA4LDI4OjEzNDM1MDg4MCwyOToxMzMxMjAsMzA6MjA4MCwzMToxMzQyMTc3MjgsMjE0NzQ4MzY2NDoxMzEwNzIsMjE0NzQ4MzY2NToyMDQ4LDIxNDc0ODM2NjY6MTM0MzQ4ODMyLDIxNDc0ODM2Njc6MTMzMTUyLDIxNDc0ODM2Njg6MzIsMjE0NzQ4MzY2OToxMzQzNDg4MDAsMjE0NzQ4MzY3MDoxMzQyMTc3MjgsMjE0NzQ4MzY3MToxMzQyMTk4MDgsMjE0NzQ4MzY3MjoxMzQzNTA4ODAsMjE0NzQ4MzY3MzoxMzQyMTc3NjAsDQoyMTQ3NDgzNjc0OjEzNDIxOTc3NiwyMTQ3NDgzNjc1OjAsMjE0NzQ4MzY3NjoxMzMxMjAsMjE0NzQ4MzY3NzoyMDgwLDIxNDc0ODM2Nzg6MTMxMTA0LDIxNDc0ODM2Nzk6MTM0MzUwODQ4fV0sdD1bNDE2MDc0OTU2OSw1Mjg0ODIzMDQsMzMwMzAxNDQsMjA2NDM4NCwxMjkwMjQsODA2NCw1MDQsMjE0NzQ4MzY3OV0sbT1nLkRFUz1lLmV4dGVuZCh7X2RvUmVzZXQ6ZnVuY3Rpb24oKXtmb3IodmFyIGI9dGhpcy5fa2V5LndvcmRzLGM9W10sYT0wOzU2PmE7YSsrKXt2YXIgZj1xW2FdLTE7Y1thXT1iW2Y+Pj41XT4+PjMxLWYlMzImMX1iPXRoaXMuX3N1YktleXM9W107Zm9yKGY9MDsxNj5mO2YrKyl7Zm9yKHZhciBkPWJbZl09W10sZT1yW2ZdLGE9MDsyND5hO2ErKylkW2EvNnwwXXw9Y1socFthXS0xK2UpJTI4XTw8MzEtYSU2LGRbNCsoYS82fDApXXw9Y1syOCsocFthKzI0XS0xK2UpJTI4XTw8MzEtYSU2O2RbMF09ZFswXTw8MXxkWzBdPj4+MzE7Zm9yKGE9MTs3PmE7YSsrKWRbYV0+Pj49DQo0KihhLTEpKzM7ZFs3XT1kWzddPDw1fGRbN10+Pj4yN31jPXRoaXMuX2ludlN1YktleXM9W107Zm9yKGE9MDsxNj5hO2ErKyljW2FdPWJbMTUtYV19LGVuY3J5cHRCbG9jazpmdW5jdGlvbihiLGMpe3RoaXMuX2RvQ3J5cHRCbG9jayhiLGMsdGhpcy5fc3ViS2V5cyl9LGRlY3J5cHRCbG9jazpmdW5jdGlvbihiLGMpe3RoaXMuX2RvQ3J5cHRCbG9jayhiLGMsdGhpcy5faW52U3ViS2V5cyl9LF9kb0NyeXB0QmxvY2s6ZnVuY3Rpb24oYixjLGEpe3RoaXMuX2xCbG9jaz1iW2NdO3RoaXMuX3JCbG9jaz1iW2MrMV07ai5jYWxsKHRoaXMsNCwyNTI2NDUxMzUpO2ouY2FsbCh0aGlzLDE2LDY1NTM1KTtsLmNhbGwodGhpcywyLDg1ODk5MzQ1OSk7bC5jYWxsKHRoaXMsOCwxNjcxMTkzNSk7ai5jYWxsKHRoaXMsMSwxNDMxNjU1NzY1KTtmb3IodmFyIGY9MDsxNj5mO2YrKyl7Zm9yKHZhciBkPWFbZl0sZT10aGlzLl9sQmxvY2ssaD10aGlzLl9yQmxvY2ssZz0wLGs9MDs4Pms7aysrKWd8PXNba11bKChoXg0KZFtrXSkmdFtrXSk+Pj4wXTt0aGlzLl9sQmxvY2s9aDt0aGlzLl9yQmxvY2s9ZV5nfWE9dGhpcy5fbEJsb2NrO3RoaXMuX2xCbG9jaz10aGlzLl9yQmxvY2s7dGhpcy5fckJsb2NrPWE7ai5jYWxsKHRoaXMsMSwxNDMxNjU1NzY1KTtsLmNhbGwodGhpcyw4LDE2NzExOTM1KTtsLmNhbGwodGhpcywyLDg1ODk5MzQ1OSk7ai5jYWxsKHRoaXMsMTYsNjU1MzUpO2ouY2FsbCh0aGlzLDQsMjUyNjQ1MTM1KTtiW2NdPXRoaXMuX2xCbG9jaztiW2MrMV09dGhpcy5fckJsb2NrfSxrZXlTaXplOjIsaXZTaXplOjIsYmxvY2tTaXplOjJ9KTtoLkRFUz1lLl9jcmVhdGVIZWxwZXIobSk7Zz1nLlRyaXBsZURFUz1lLmV4dGVuZCh7X2RvUmVzZXQ6ZnVuY3Rpb24oKXt2YXIgYj10aGlzLl9rZXkud29yZHM7dGhpcy5fZGVzMT1tLmNyZWF0ZUVuY3J5cHRvcihuLmNyZWF0ZShiLnNsaWNlKDAsMikpKTt0aGlzLl9kZXMyPW0uY3JlYXRlRW5jcnlwdG9yKG4uY3JlYXRlKGIuc2xpY2UoMiw0KSkpO3RoaXMuX2RlczM9DQptLmNyZWF0ZUVuY3J5cHRvcihuLmNyZWF0ZShiLnNsaWNlKDQsNikpKX0sZW5jcnlwdEJsb2NrOmZ1bmN0aW9uKGIsYyl7dGhpcy5fZGVzMS5lbmNyeXB0QmxvY2soYixjKTt0aGlzLl9kZXMyLmRlY3J5cHRCbG9jayhiLGMpO3RoaXMuX2RlczMuZW5jcnlwdEJsb2NrKGIsYyl9LGRlY3J5cHRCbG9jazpmdW5jdGlvbihiLGMpe3RoaXMuX2RlczMuZGVjcnlwdEJsb2NrKGIsYyk7dGhpcy5fZGVzMi5lbmNyeXB0QmxvY2soYixjKTt0aGlzLl9kZXMxLmRlY3J5cHRCbG9jayhiLGMpfSxrZXlTaXplOjYsaXZTaXplOjIsYmxvY2tTaXplOjJ9KTtoLlRyaXBsZURFUz1lLl9jcmVhdGVIZWxwZXIoZyl9KSgpOw0KDQovKg0KQ3J5cHRvSlMgdjMuMS4yIGVuYy1iYXNlNjQtbWluLmpzDQpjb2RlLmdvb2dsZS5jb20vcC9jcnlwdG8tanMNCihjKSAyMDA5LTIwMTMgYnkgSmVmZiBNb3R0LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KY29kZS5nb29nbGUuY29tL3AvY3J5cHRvLWpzL3dpa2kvTGljZW5zZQ0KKi8NCihmdW5jdGlvbigpe3ZhciBoPUNyeXB0b0pTLGo9aC5saWIuV29yZEFycmF5O2guZW5jLkJhc2U2ND17c3RyaW5naWZ5OmZ1bmN0aW9uKGIpe3ZhciBlPWIud29yZHMsZj1iLnNpZ0J5dGVzLGM9dGhpcy5fbWFwO2IuY2xhbXAoKTtiPVtdO2Zvcih2YXIgYT0wO2E8ZjthKz0zKWZvcih2YXIgZD0oZVthPj4+Ml0+Pj4yNC04KihhJTQpJjI1NSk8PDE2fChlW2ErMT4+PjJdPj4+MjQtOCooKGErMSklNCkmMjU1KTw8OHxlW2ErMj4+PjJdPj4+MjQtOCooKGErMiklNCkmMjU1LGc9MDs0PmcmJmErMC43NSpnPGY7ZysrKWIucHVzaChjLmNoYXJBdChkPj4+NiooMy1nKSY2MykpO2lmKGU9Yy5jaGFyQXQoNjQpKWZvcig7Yi5sZW5ndGglNDspYi5wdXNoKGUpO3JldHVybiBiLmpvaW4oIiIpfSxwYXJzZTpmdW5jdGlvbihiKXt2YXIgZT1iLmxlbmd0aCxmPXRoaXMuX21hcCxjPWYuY2hhckF0KDY0KTtjJiYoYz1iLmluZGV4T2YoYyksLTEhPWMmJihlPWMpKTtmb3IodmFyIGM9W10sYT0wLGQ9MDtkPA0KZTtkKyspaWYoZCU0KXt2YXIgZz1mLmluZGV4T2YoYi5jaGFyQXQoZC0xKSk8PDIqKGQlNCksaD1mLmluZGV4T2YoYi5jaGFyQXQoZCkpPj4+Ni0yKihkJTQpO2NbYT4+PjJdfD0oZ3xoKTw8MjQtOCooYSU0KTthKyt9cmV0dXJuIGouY3JlYXRlKGMsYSl9LF9tYXA6IkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89In19KSgpOw0KDQovKg0KQ3J5cHRvSlMgdjMuMS4yIG1kNS1taW4uanMNCmNvZGUuZ29vZ2xlLmNvbS9wL2NyeXB0by1qcw0KKGMpIDIwMDktMjAxMyBieSBKZWZmIE1vdHQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpjb2RlLmdvb2dsZS5jb20vcC9jcnlwdG8tanMvd2lraS9MaWNlbnNlDQoqLw0KKGZ1bmN0aW9uKEUpe2Z1bmN0aW9uIGgoYSxmLGcsaixwLGgsayl7YT1hKyhmJmd8fmYmaikrcCtrO3JldHVybihhPDxofGE+Pj4zMi1oKStmfWZ1bmN0aW9uIGsoYSxmLGcsaixwLGgsayl7YT1hKyhmJmp8ZyZ+aikrcCtrO3JldHVybihhPDxofGE+Pj4zMi1oKStmfWZ1bmN0aW9uIGwoYSxmLGcsaixoLGssbCl7YT1hKyhmXmdeaikraCtsO3JldHVybihhPDxrfGE+Pj4zMi1rKStmfWZ1bmN0aW9uIG4oYSxmLGcsaixoLGssbCl7YT1hKyhnXihmfH5qKSkraCtsO3JldHVybihhPDxrfGE+Pj4zMi1rKStmfWZvcih2YXIgcj1DcnlwdG9KUyxxPXIubGliLEY9cS5Xb3JkQXJyYXkscz1xLkhhc2hlcixxPXIuYWxnbyxhPVtdLHQ9MDs2ND50O3QrKylhW3RdPTQyOTQ5NjcyOTYqRS5hYnMoRS5zaW4odCsxKSl8MDtxPXEuTUQ1PXMuZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3RoaXMuX2hhc2g9bmV3IEYuaW5pdChbMTczMjU4NDE5Myw0MDIzMjMzNDE3LDI1NjIzODMxMDIsMjcxNzMzODc4XSl9LA0KX2RvUHJvY2Vzc0Jsb2NrOmZ1bmN0aW9uKG0sZil7Zm9yKHZhciBnPTA7MTY+ZztnKyspe3ZhciBqPWYrZyxwPW1bal07bVtqXT0ocDw8OHxwPj4+MjQpJjE2NzExOTM1fChwPDwyNHxwPj4+OCkmNDI3ODI1NTM2MH12YXIgZz10aGlzLl9oYXNoLndvcmRzLGo9bVtmKzBdLHA9bVtmKzFdLHE9bVtmKzJdLHI9bVtmKzNdLHM9bVtmKzRdLHQ9bVtmKzVdLHU9bVtmKzZdLHY9bVtmKzddLHc9bVtmKzhdLHg9bVtmKzldLHk9bVtmKzEwXSx6PW1bZisxMV0sQT1tW2YrMTJdLEI9bVtmKzEzXSxDPW1bZisxNF0sRD1tW2YrMTVdLGI9Z1swXSxjPWdbMV0sZD1nWzJdLGU9Z1szXSxiPWgoYixjLGQsZSxqLDcsYVswXSksZT1oKGUsYixjLGQscCwxMixhWzFdKSxkPWgoZCxlLGIsYyxxLDE3LGFbMl0pLGM9aChjLGQsZSxiLHIsMjIsYVszXSksYj1oKGIsYyxkLGUscyw3LGFbNF0pLGU9aChlLGIsYyxkLHQsMTIsYVs1XSksZD1oKGQsZSxiLGMsdSwxNyxhWzZdKSxjPWgoYyxkLGUsYix2LDIyLGFbN10pLA0KYj1oKGIsYyxkLGUsdyw3LGFbOF0pLGU9aChlLGIsYyxkLHgsMTIsYVs5XSksZD1oKGQsZSxiLGMseSwxNyxhWzEwXSksYz1oKGMsZCxlLGIseiwyMixhWzExXSksYj1oKGIsYyxkLGUsQSw3LGFbMTJdKSxlPWgoZSxiLGMsZCxCLDEyLGFbMTNdKSxkPWgoZCxlLGIsYyxDLDE3LGFbMTRdKSxjPWgoYyxkLGUsYixELDIyLGFbMTVdKSxiPWsoYixjLGQsZSxwLDUsYVsxNl0pLGU9ayhlLGIsYyxkLHUsOSxhWzE3XSksZD1rKGQsZSxiLGMseiwxNCxhWzE4XSksYz1rKGMsZCxlLGIsaiwyMCxhWzE5XSksYj1rKGIsYyxkLGUsdCw1LGFbMjBdKSxlPWsoZSxiLGMsZCx5LDksYVsyMV0pLGQ9ayhkLGUsYixjLEQsMTQsYVsyMl0pLGM9ayhjLGQsZSxiLHMsMjAsYVsyM10pLGI9ayhiLGMsZCxlLHgsNSxhWzI0XSksZT1rKGUsYixjLGQsQyw5LGFbMjVdKSxkPWsoZCxlLGIsYyxyLDE0LGFbMjZdKSxjPWsoYyxkLGUsYix3LDIwLGFbMjddKSxiPWsoYixjLGQsZSxCLDUsYVsyOF0pLGU9ayhlLGIsDQpjLGQscSw5LGFbMjldKSxkPWsoZCxlLGIsYyx2LDE0LGFbMzBdKSxjPWsoYyxkLGUsYixBLDIwLGFbMzFdKSxiPWwoYixjLGQsZSx0LDQsYVszMl0pLGU9bChlLGIsYyxkLHcsMTEsYVszM10pLGQ9bChkLGUsYixjLHosMTYsYVszNF0pLGM9bChjLGQsZSxiLEMsMjMsYVszNV0pLGI9bChiLGMsZCxlLHAsNCxhWzM2XSksZT1sKGUsYixjLGQscywxMSxhWzM3XSksZD1sKGQsZSxiLGMsdiwxNixhWzM4XSksYz1sKGMsZCxlLGIseSwyMyxhWzM5XSksYj1sKGIsYyxkLGUsQiw0LGFbNDBdKSxlPWwoZSxiLGMsZCxqLDExLGFbNDFdKSxkPWwoZCxlLGIsYyxyLDE2LGFbNDJdKSxjPWwoYyxkLGUsYix1LDIzLGFbNDNdKSxiPWwoYixjLGQsZSx4LDQsYVs0NF0pLGU9bChlLGIsYyxkLEEsMTEsYVs0NV0pLGQ9bChkLGUsYixjLEQsMTYsYVs0Nl0pLGM9bChjLGQsZSxiLHEsMjMsYVs0N10pLGI9bihiLGMsZCxlLGosNixhWzQ4XSksZT1uKGUsYixjLGQsdiwxMCxhWzQ5XSksZD1uKGQsZSxiLGMsDQpDLDE1LGFbNTBdKSxjPW4oYyxkLGUsYix0LDIxLGFbNTFdKSxiPW4oYixjLGQsZSxBLDYsYVs1Ml0pLGU9bihlLGIsYyxkLHIsMTAsYVs1M10pLGQ9bihkLGUsYixjLHksMTUsYVs1NF0pLGM9bihjLGQsZSxiLHAsMjEsYVs1NV0pLGI9bihiLGMsZCxlLHcsNixhWzU2XSksZT1uKGUsYixjLGQsRCwxMCxhWzU3XSksZD1uKGQsZSxiLGMsdSwxNSxhWzU4XSksYz1uKGMsZCxlLGIsQiwyMSxhWzU5XSksYj1uKGIsYyxkLGUscyw2LGFbNjBdKSxlPW4oZSxiLGMsZCx6LDEwLGFbNjFdKSxkPW4oZCxlLGIsYyxxLDE1LGFbNjJdKSxjPW4oYyxkLGUsYix4LDIxLGFbNjNdKTtnWzBdPWdbMF0rYnwwO2dbMV09Z1sxXStjfDA7Z1syXT1nWzJdK2R8MDtnWzNdPWdbM10rZXwwfSxfZG9GaW5hbGl6ZTpmdW5jdGlvbigpe3ZhciBhPXRoaXMuX2RhdGEsZj1hLndvcmRzLGc9OCp0aGlzLl9uRGF0YUJ5dGVzLGo9OCphLnNpZ0J5dGVzO2Zbaj4+PjVdfD0xMjg8PDI0LWolMzI7dmFyIGg9RS5mbG9vcihnLw0KNDI5NDk2NzI5Nik7Zlsoais2ND4+Pjk8PDQpKzE1XT0oaDw8OHxoPj4+MjQpJjE2NzExOTM1fChoPDwyNHxoPj4+OCkmNDI3ODI1NTM2MDtmWyhqKzY0Pj4+OTw8NCkrMTRdPShnPDw4fGc+Pj4yNCkmMTY3MTE5MzV8KGc8PDI0fGc+Pj44KSY0Mjc4MjU1MzYwO2Euc2lnQnl0ZXM9NCooZi5sZW5ndGgrMSk7dGhpcy5fcHJvY2VzcygpO2E9dGhpcy5faGFzaDtmPWEud29yZHM7Zm9yKGc9MDs0Pmc7ZysrKWo9ZltnXSxmW2ddPShqPDw4fGo+Pj4yNCkmMTY3MTE5MzV8KGo8PDI0fGo+Pj44KSY0Mjc4MjU1MzYwO3JldHVybiBhfSxjbG9uZTpmdW5jdGlvbigpe3ZhciBhPXMuY2xvbmUuY2FsbCh0aGlzKTthLl9oYXNoPXRoaXMuX2hhc2guY2xvbmUoKTtyZXR1cm4gYX19KTtyLk1ENT1zLl9jcmVhdGVIZWxwZXIocSk7ci5IbWFjTUQ1PXMuX2NyZWF0ZUhtYWNIZWxwZXIocSl9KShNYXRoKTsNCg0KLyoNCkNyeXB0b0pTIHYzLjEuMiBzaGExLW1pbi5qcw0KY29kZS5nb29nbGUuY29tL3AvY3J5cHRvLWpzDQooYykgMjAwOS0yMDEzIGJ5IEplZmYgTW90dC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCmNvZGUuZ29vZ2xlLmNvbS9wL2NyeXB0by1qcy93aWtpL0xpY2Vuc2UNCiovDQooZnVuY3Rpb24oKXt2YXIgaz1DcnlwdG9KUyxiPWsubGliLG09Yi5Xb3JkQXJyYXksbD1iLkhhc2hlcixkPVtdLGI9ay5hbGdvLlNIQTE9bC5leHRlbmQoe19kb1Jlc2V0OmZ1bmN0aW9uKCl7dGhpcy5faGFzaD1uZXcgbS5pbml0KFsxNzMyNTg0MTkzLDQwMjMyMzM0MTcsMjU2MjM4MzEwMiwyNzE3MzM4NzgsMzI4NTM3NzUyMF0pfSxfZG9Qcm9jZXNzQmxvY2s6ZnVuY3Rpb24obixwKXtmb3IodmFyIGE9dGhpcy5faGFzaC53b3JkcyxlPWFbMF0sZj1hWzFdLGg9YVsyXSxqPWFbM10sYj1hWzRdLGM9MDs4MD5jO2MrKyl7aWYoMTY+YylkW2NdPW5bcCtjXXwwO2Vsc2V7dmFyIGc9ZFtjLTNdXmRbYy04XV5kW2MtMTRdXmRbYy0xNl07ZFtjXT1nPDwxfGc+Pj4zMX1nPShlPDw1fGU+Pj4yNykrYitkW2NdO2c9MjA+Yz9nKygoZiZofH5mJmopKzE1MTg1MDAyNDkpOjQwPmM/ZysoKGZeaF5qKSsxODU5Nzc1MzkzKTo2MD5jP2crKChmJmh8ZiZqfGgmaiktMTg5NDAwNzU4OCk6ZysoKGZeaF4NCmopLTg5OTQ5NzUxNCk7Yj1qO2o9aDtoPWY8PDMwfGY+Pj4yO2Y9ZTtlPWd9YVswXT1hWzBdK2V8MDthWzFdPWFbMV0rZnwwO2FbMl09YVsyXStofDA7YVszXT1hWzNdK2p8MDthWzRdPWFbNF0rYnwwfSxfZG9GaW5hbGl6ZTpmdW5jdGlvbigpe3ZhciBiPXRoaXMuX2RhdGEsZD1iLndvcmRzLGE9OCp0aGlzLl9uRGF0YUJ5dGVzLGU9OCpiLnNpZ0J5dGVzO2RbZT4+PjVdfD0xMjg8PDI0LWUlMzI7ZFsoZSs2ND4+Pjk8PDQpKzE0XT1NYXRoLmZsb29yKGEvNDI5NDk2NzI5Nik7ZFsoZSs2ND4+Pjk8PDQpKzE1XT1hO2Iuc2lnQnl0ZXM9NCpkLmxlbmd0aDt0aGlzLl9wcm9jZXNzKCk7cmV0dXJuIHRoaXMuX2hhc2h9LGNsb25lOmZ1bmN0aW9uKCl7dmFyIGI9bC5jbG9uZS5jYWxsKHRoaXMpO2IuX2hhc2g9dGhpcy5faGFzaC5jbG9uZSgpO3JldHVybiBifX0pO2suU0hBMT1sLl9jcmVhdGVIZWxwZXIoYik7ay5IbWFjU0hBMT1sLl9jcmVhdGVIbWFjSGVscGVyKGIpfSkoKTsNCg0KLyoNCkNyeXB0b0pTIHYzLjEuMiBzaGEyNTYtbWluLmpzDQpjb2RlLmdvb2dsZS5jb20vcC9jcnlwdG8tanMNCihjKSAyMDA5LTIwMTMgYnkgSmVmZiBNb3R0LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KY29kZS5nb29nbGUuY29tL3AvY3J5cHRvLWpzL3dpa2kvTGljZW5zZQ0KKi8NCihmdW5jdGlvbihrKXtmb3IodmFyIGc9Q3J5cHRvSlMsaD1nLmxpYix2PWguV29yZEFycmF5LGo9aC5IYXNoZXIsaD1nLmFsZ28scz1bXSx0PVtdLHU9ZnVuY3Rpb24ocSl7cmV0dXJuIDQyOTQ5NjcyOTYqKHEtKHF8MCkpfDB9LGw9MixiPTA7NjQ+Yjspe3ZhciBkO2E6e2Q9bDtmb3IodmFyIHc9ay5zcXJ0KGQpLHI9MjtyPD13O3IrKylpZighKGQlcikpe2Q9ITE7YnJlYWsgYX1kPSEwfWQmJig4PmImJihzW2JdPXUoay5wb3cobCwwLjUpKSksdFtiXT11KGsucG93KGwsMS8zKSksYisrKTtsKyt9dmFyIG49W10saD1oLlNIQTI1Nj1qLmV4dGVuZCh7X2RvUmVzZXQ6ZnVuY3Rpb24oKXt0aGlzLl9oYXNoPW5ldyB2LmluaXQocy5zbGljZSgwKSl9LF9kb1Byb2Nlc3NCbG9jazpmdW5jdGlvbihxLGgpe2Zvcih2YXIgYT10aGlzLl9oYXNoLndvcmRzLGM9YVswXSxkPWFbMV0sYj1hWzJdLGs9YVszXSxmPWFbNF0sZz1hWzVdLGo9YVs2XSxsPWFbN10sZT0wOzY0PmU7ZSsrKXtpZigxNj5lKW5bZV09DQpxW2grZV18MDtlbHNle3ZhciBtPW5bZS0xNV0scD1uW2UtMl07bltlXT0oKG08PDI1fG0+Pj43KV4obTw8MTR8bT4+PjE4KV5tPj4+MykrbltlLTddKygocDw8MTV8cD4+PjE3KV4ocDw8MTN8cD4+PjE5KV5wPj4+MTApK25bZS0xNl19bT1sKygoZjw8MjZ8Zj4+PjYpXihmPDwyMXxmPj4+MTEpXihmPDw3fGY+Pj4yNSkpKyhmJmdefmYmaikrdFtlXStuW2VdO3A9KChjPDwzMHxjPj4+MileKGM8PDE5fGM+Pj4xMyleKGM8PDEwfGM+Pj4yMikpKyhjJmReYyZiXmQmYik7bD1qO2o9ZztnPWY7Zj1rK218MDtrPWI7Yj1kO2Q9YztjPW0rcHwwfWFbMF09YVswXStjfDA7YVsxXT1hWzFdK2R8MDthWzJdPWFbMl0rYnwwO2FbM109YVszXStrfDA7YVs0XT1hWzRdK2Z8MDthWzVdPWFbNV0rZ3wwO2FbNl09YVs2XStqfDA7YVs3XT1hWzddK2x8MH0sX2RvRmluYWxpemU6ZnVuY3Rpb24oKXt2YXIgZD10aGlzLl9kYXRhLGI9ZC53b3JkcyxhPTgqdGhpcy5fbkRhdGFCeXRlcyxjPTgqZC5zaWdCeXRlczsNCmJbYz4+PjVdfD0xMjg8PDI0LWMlMzI7YlsoYys2ND4+Pjk8PDQpKzE0XT1rLmZsb29yKGEvNDI5NDk2NzI5Nik7YlsoYys2ND4+Pjk8PDQpKzE1XT1hO2Quc2lnQnl0ZXM9NCpiLmxlbmd0aDt0aGlzLl9wcm9jZXNzKCk7cmV0dXJuIHRoaXMuX2hhc2h9LGNsb25lOmZ1bmN0aW9uKCl7dmFyIGI9ai5jbG9uZS5jYWxsKHRoaXMpO2IuX2hhc2g9dGhpcy5faGFzaC5jbG9uZSgpO3JldHVybiBifX0pO2cuU0hBMjU2PWouX2NyZWF0ZUhlbHBlcihoKTtnLkhtYWNTSEEyNTY9ai5fY3JlYXRlSG1hY0hlbHBlcihoKX0pKE1hdGgpOw0KDQovKg0KQ3J5cHRvSlMgdjMuMS4yIHNoYTIyNC1taW4uanMNCmNvZGUuZ29vZ2xlLmNvbS9wL2NyeXB0by1qcw0KKGMpIDIwMDktMjAxMyBieSBKZWZmIE1vdHQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpjb2RlLmdvb2dsZS5jb20vcC9jcnlwdG8tanMvd2lraS9MaWNlbnNlDQoqLw0KKGZ1bmN0aW9uKCl7dmFyIGI9Q3J5cHRvSlMsZD1iLmxpYi5Xb3JkQXJyYXksYT1iLmFsZ28sYz1hLlNIQTI1NixhPWEuU0hBMjI0PWMuZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3RoaXMuX2hhc2g9bmV3IGQuaW5pdChbMzIzODM3MTAzMiw5MTQxNTA2NjMsODEyNzAyOTk5LDQxNDQ5MTI2OTcsNDI5MDc3NTg1NywxNzUwNjAzMDI1LDE2OTQwNzY4MzksMzIwNDA3NTQyOF0pfSxfZG9GaW5hbGl6ZTpmdW5jdGlvbigpe3ZhciBhPWMuX2RvRmluYWxpemUuY2FsbCh0aGlzKTthLnNpZ0J5dGVzLT00O3JldHVybiBhfX0pO2IuU0hBMjI0PWMuX2NyZWF0ZUhlbHBlcihhKTtiLkhtYWNTSEEyMjQ9Yy5fY3JlYXRlSG1hY0hlbHBlcihhKX0pKCk7DQoNCi8qDQpDcnlwdG9KUyB2My4xLjIgc2hhNTEyLW1pbi5qcw0KY29kZS5nb29nbGUuY29tL3AvY3J5cHRvLWpzDQooYykgMjAwOS0yMDEzIGJ5IEplZmYgTW90dC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCmNvZGUuZ29vZ2xlLmNvbS9wL2NyeXB0by1qcy93aWtpL0xpY2Vuc2UNCiovDQooZnVuY3Rpb24oKXtmdW5jdGlvbiBhKCl7cmV0dXJuIGQuY3JlYXRlLmFwcGx5KGQsYXJndW1lbnRzKX1mb3IodmFyIG49Q3J5cHRvSlMscj1uLmxpYi5IYXNoZXIsZT1uLng2NCxkPWUuV29yZCxUPWUuV29yZEFycmF5LGU9bi5hbGdvLGVhPVthKDExMTYzNTI0MDgsMzYwOTc2NzQ1OCksYSgxODk5NDQ3NDQxLDYwMjg5MTcyNSksYSgzMDQ5MzIzNDcxLDM5NjQ0ODQzOTkpLGEoMzkyMTAwOTU3MywyMTczMjk1NTQ4KSxhKDk2MTk4NzE2Myw0MDgxNjI4NDcyKSxhKDE1MDg5NzA5OTMsMzA1MzgzNDI2NSksYSgyNDUzNjM1NzQ4LDI5Mzc2NzE1NzkpLGEoMjg3MDc2MzIyMSwzNjY0NjA5NTYwKSxhKDM2MjQzODEwODAsMjczNDg4MzM5NCksYSgzMTA1OTg0MDEsMTE2NDk5NjU0MiksYSg2MDcyMjUyNzgsMTMyMzYxMDc2NCksYSgxNDI2ODgxOTg3LDM1OTAzMDQ5OTQpLGEoMTkyNTA3ODM4OCw0MDY4MTgyMzgzKSxhKDIxNjIwNzgyMDYsOTkxMzM2MTEzKSxhKDI2MTQ4ODgxMDMsNjMzODAzMzE3KSwNCmEoMzI0ODIyMjU4MCwzNDc5Nzc0ODY4KSxhKDM4MzUzOTA0MDEsMjY2NjYxMzQ1OCksYSg0MDIyMjI0Nzc0LDk0NDcxMTEzOSksYSgyNjQzNDcwNzgsMjM0MTI2Mjc3MyksYSg2MDQ4MDc2MjgsMjAwNzgwMDkzMyksYSg3NzAyNTU5ODMsMTQ5NTk5MDkwMSksYSgxMjQ5MTUwMTIyLDE4NTY0MzEyMzUpLGEoMTU1NTA4MTY5MiwzMTc1MjE4MTMyKSxhKDE5OTYwNjQ5ODYsMjE5ODk1MDgzNyksYSgyNTU0MjIwODgyLDM5OTk3MTkzMzkpLGEoMjgyMTgzNDM0OSw3NjY3ODQwMTYpLGEoMjk1Mjk5NjgwOCwyNTY2NTk0ODc5KSxhKDMyMTAzMTM2NzEsMzIwMzMzNzk1NiksYSgzMzM2NTcxODkxLDEwMzQ0NTcwMjYpLGEoMzU4NDUyODcxMSwyNDY2OTQ4OTAxKSxhKDExMzkyNjk5MywzNzU4MzI2MzgzKSxhKDMzODI0MTg5NSwxNjg3MTc5MzYpLGEoNjY2MzA3MjA1LDExODgxNzk5NjQpLGEoNzczNTI5OTEyLDE1NDYwNDU3MzQpLGEoMTI5NDc1NzM3MiwxNTIyODA1NDg1KSxhKDEzOTYxODIyOTEsDQoyNjQzODMzODIzKSxhKDE2OTUxODM3MDAsMjM0MzUyNzM5MCksYSgxOTg2NjYxMDUxLDEwMTQ0Nzc0ODApLGEoMjE3NzAyNjM1MCwxMjA2NzU5MTQyKSxhKDI0NTY5NTYwMzcsMzQ0MDc3NjI3KSxhKDI3MzA0ODU5MjEsMTI5MDg2MzQ2MCksYSgyODIwMzAyNDExLDMxNTg0NTQyNzMpLGEoMzI1OTczMDgwMCwzNTA1OTUyNjU3KSxhKDMzNDU3NjQ3NzEsMTA2MjE3MDA4KSxhKDM1MTYwNjU4MTcsMzYwNjAwODM0NCksYSgzNjAwMzUyODA0LDE0MzI3MjU3NzYpLGEoNDA5NDU3MTkwOSwxNDY3MDMxNTk0KSxhKDI3NTQyMzM0NCw4NTExNjk3MjApLGEoNDMwMjI3NzM0LDMxMDA4MjM3NTIpLGEoNTA2OTQ4NjE2LDEzNjMyNTgxOTUpLGEoNjU5MDYwNTU2LDM3NTA2ODU1OTMpLGEoODgzOTk3ODc3LDM3ODUwNTAyODApLGEoOTU4MTM5NTcxLDMzMTgzMDc0MjcpLGEoMTMyMjgyMjIxOCwzODEyNzIzNDAzKSxhKDE1MzcwMDIwNjMsMjAwMzAzNDk5NSksYSgxNzQ3ODczNzc5LDM2MDIwMzY4OTkpLA0KYSgxOTU1NTYyMjIyLDE1NzU5OTAwMTIpLGEoMjAyNDEwNDgxNSwxMTI1NTkyOTI4KSxhKDIyMjc3MzA0NTIsMjcxNjkwNDMwNiksYSgyMzYxODUyNDI0LDQ0Mjc3NjA0NCksYSgyNDI4NDM2NDc0LDU5MzY5ODM0NCksYSgyNzU2NzM0MTg3LDM3MzMxMTAyNDkpLGEoMzIwNDAzMTQ3OSwyOTk5MzUxNTczKSxhKDMzMjkzMjUyOTgsMzgxNTkyMDQyNyksYSgzMzkxNTY5NjE0LDM5MjgzODM5MDApLGEoMzUxNTI2NzI3MSw1NjYyODA3MTEpLGEoMzk0MDE4NzYwNiwzNDU0MDY5NTM0KSxhKDQxMTg2MzAyNzEsNDAwMDIzOTk5MiksYSgxMTY0MTg0NzQsMTkxNDEzODU1NCksYSgxNzQyOTI0MjEsMjczMTA1NTI3MCksYSgyODkzODAzNTYsMzIwMzk5MzAwNiksYSg0NjAzOTMyNjksMzIwNjIwMzE1KSxhKDY4NTQ3MTczMyw1ODc0OTY4MzYpLGEoODUyMTQyOTcxLDEwODY3OTI4NTEpLGEoMTAxNzAzNjI5OCwzNjU1NDMxMDApLGEoMTEyNjAwMDU4MCwyNjE4Mjk3Njc2KSxhKDEyODgwMzM0NzAsDQozNDA5ODU1MTU4KSxhKDE1MDE1MDU5NDgsNDIzNDUwOTg2NiksYSgxNjA3MTY3OTE1LDk4NzE2NzQ2OCksYSgxODE2NDAyMzE2LDEyNDYxODk1OTEpXSx2PVtdLHc9MDs4MD53O3crKyl2W3ddPWEoKTtlPWUuU0hBNTEyPXIuZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3RoaXMuX2hhc2g9bmV3IFQuaW5pdChbbmV3IGQuaW5pdCgxNzc5MDMzNzAzLDQwODkyMzU3MjApLG5ldyBkLmluaXQoMzE0NDEzNDI3NywyMjI3ODczNTk1KSxuZXcgZC5pbml0KDEwMTM5MDQyNDIsNDI3MTE3NTcyMyksbmV3IGQuaW5pdCgyNzczNDgwNzYyLDE1OTU3NTAxMjkpLG5ldyBkLmluaXQoMTM1OTg5MzExOSwyOTE3NTY1MTM3KSxuZXcgZC5pbml0KDI2MDA4MjI5MjQsNzI1NTExMTk5KSxuZXcgZC5pbml0KDUyODczNDYzNSw0MjE1Mzg5NTQ3KSxuZXcgZC5pbml0KDE1NDE0NTkyMjUsMzI3MDMzMjA5KV0pfSxfZG9Qcm9jZXNzQmxvY2s6ZnVuY3Rpb24oYSxkKXtmb3IodmFyIGY9dGhpcy5faGFzaC53b3JkcywNCkY9ZlswXSxlPWZbMV0sbj1mWzJdLHI9ZlszXSxHPWZbNF0sSD1mWzVdLEk9Zls2XSxmPWZbN10sdz1GLmhpZ2gsSj1GLmxvdyxYPWUuaGlnaCxLPWUubG93LFk9bi5oaWdoLEw9bi5sb3csWj1yLmhpZ2gsTT1yLmxvdywkPUcuaGlnaCxOPUcubG93LGFhPUguaGlnaCxPPUgubG93LGJhPUkuaGlnaCxQPUkubG93LGNhPWYuaGlnaCxRPWYubG93LGs9dyxnPUosej1YLHg9SyxBPVkseT1MLFU9WixCPU0sbD0kLGg9TixSPWFhLEM9TyxTPWJhLEQ9UCxWPWNhLEU9USxtPTA7ODA+bTttKyspe3ZhciBzPXZbbV07aWYoMTY+bSl2YXIgaj1zLmhpZ2g9YVtkKzIqbV18MCxiPXMubG93PWFbZCsyKm0rMV18MDtlbHNle3ZhciBqPXZbbS0xNV0sYj1qLmhpZ2gscD1qLmxvdyxqPShiPj4+MXxwPDwzMSleKGI+Pj44fHA8PDI0KV5iPj4+NyxwPShwPj4+MXxiPDwzMSleKHA+Pj44fGI8PDI0KV4ocD4+Pjd8Yjw8MjUpLHU9dlttLTJdLGI9dS5oaWdoLGM9dS5sb3csdT0oYj4+PjE5fGM8PDEzKV4oYjw8DQozfGM+Pj4yOSleYj4+PjYsYz0oYz4+PjE5fGI8PDEzKV4oYzw8M3xiPj4+MjkpXihjPj4+NnxiPDwyNiksYj12W20tN10sVz1iLmhpZ2gsdD12W20tMTZdLHE9dC5oaWdoLHQ9dC5sb3csYj1wK2IubG93LGo9aitXKyhiPj4+MDxwPj4+MD8xOjApLGI9YitjLGo9ait1KyhiPj4+MDxjPj4+MD8xOjApLGI9Yit0LGo9aitxKyhiPj4+MDx0Pj4+MD8xOjApO3MuaGlnaD1qO3MubG93PWJ9dmFyIFc9bCZSXn5sJlMsdD1oJkNefmgmRCxzPWsmel5rJkFeeiZBLFQ9ZyZ4XmcmeV54JnkscD0oaz4+PjI4fGc8PDQpXihrPDwzMHxnPj4+MileKGs8PDI1fGc+Pj43KSx1PShnPj4+Mjh8azw8NCleKGc8PDMwfGs+Pj4yKV4oZzw8MjV8az4+PjcpLGM9ZWFbbV0sZmE9Yy5oaWdoLGRhPWMubG93LGM9RSsoKGg+Pj4xNHxsPDwxOCleKGg+Pj4xOHxsPDwxNCleKGg8PDIzfGw+Pj45KSkscT1WKygobD4+PjE0fGg8PDE4KV4obD4+PjE4fGg8PDE0KV4obDw8MjN8aD4+PjkpKSsoYz4+PjA8RT4+PjA/MToNCjApLGM9Yyt0LHE9cStXKyhjPj4+MDx0Pj4+MD8xOjApLGM9YytkYSxxPXErZmErKGM+Pj4wPGRhPj4+MD8xOjApLGM9YytiLHE9cStqKyhjPj4+MDxiPj4+MD8xOjApLGI9dStULHM9cCtzKyhiPj4+MDx1Pj4+MD8xOjApLFY9UyxFPUQsUz1SLEQ9QyxSPWwsQz1oLGg9QitjfDAsbD1VK3ErKGg+Pj4wPEI+Pj4wPzE6MCl8MCxVPUEsQj15LEE9eix5PXgsej1rLHg9ZyxnPWMrYnwwLGs9cStzKyhnPj4+MDxjPj4+MD8xOjApfDB9Sj1GLmxvdz1KK2c7Ri5oaWdoPXcraysoSj4+PjA8Zz4+PjA/MTowKTtLPWUubG93PUsreDtlLmhpZ2g9WCt6KyhLPj4+MDx4Pj4+MD8xOjApO0w9bi5sb3c9TCt5O24uaGlnaD1ZK0ErKEw+Pj4wPHk+Pj4wPzE6MCk7TT1yLmxvdz1NK0I7ci5oaWdoPVorVSsoTT4+PjA8Qj4+PjA/MTowKTtOPUcubG93PU4raDtHLmhpZ2g9JCtsKyhOPj4+MDxoPj4+MD8xOjApO089SC5sb3c9TytDO0guaGlnaD1hYStSKyhPPj4+MDxDPj4+MD8xOjApO1A9SS5sb3c9UCtEOw0KSS5oaWdoPWJhK1MrKFA+Pj4wPEQ+Pj4wPzE6MCk7UT1mLmxvdz1RK0U7Zi5oaWdoPWNhK1YrKFE+Pj4wPEU+Pj4wPzE6MCl9LF9kb0ZpbmFsaXplOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fZGF0YSxkPWEud29yZHMsZj04KnRoaXMuX25EYXRhQnl0ZXMsZT04KmEuc2lnQnl0ZXM7ZFtlPj4+NV18PTEyODw8MjQtZSUzMjtkWyhlKzEyOD4+PjEwPDw1KSszMF09TWF0aC5mbG9vcihmLzQyOTQ5NjcyOTYpO2RbKGUrMTI4Pj4+MTA8PDUpKzMxXT1mO2Euc2lnQnl0ZXM9NCpkLmxlbmd0aDt0aGlzLl9wcm9jZXNzKCk7cmV0dXJuIHRoaXMuX2hhc2gudG9YMzIoKX0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgYT1yLmNsb25lLmNhbGwodGhpcyk7YS5faGFzaD10aGlzLl9oYXNoLmNsb25lKCk7cmV0dXJuIGF9LGJsb2NrU2l6ZTozMn0pO24uU0hBNTEyPXIuX2NyZWF0ZUhlbHBlcihlKTtuLkhtYWNTSEE1MTI9ci5fY3JlYXRlSG1hY0hlbHBlcihlKX0pKCk7DQoNCi8qDQpDcnlwdG9KUyB2My4xLjIgc2hhMzg0LW1pbi5qcw0KY29kZS5nb29nbGUuY29tL3AvY3J5cHRvLWpzDQooYykgMjAwOS0yMDEzIGJ5IEplZmYgTW90dC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCmNvZGUuZ29vZ2xlLmNvbS9wL2NyeXB0by1qcy93aWtpL0xpY2Vuc2UNCiovDQooZnVuY3Rpb24oKXt2YXIgYz1DcnlwdG9KUyxhPWMueDY0LGI9YS5Xb3JkLGU9YS5Xb3JkQXJyYXksYT1jLmFsZ28sZD1hLlNIQTUxMixhPWEuU0hBMzg0PWQuZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3RoaXMuX2hhc2g9bmV3IGUuaW5pdChbbmV3IGIuaW5pdCgzNDE4MDcwMzY1LDMyMzgzNzEwMzIpLG5ldyBiLmluaXQoMTY1NDI3MDI1MCw5MTQxNTA2NjMpLG5ldyBiLmluaXQoMjQzODUyOTM3MCw4MTI3MDI5OTkpLG5ldyBiLmluaXQoMzU1NDYyMzYwLDQxNDQ5MTI2OTcpLG5ldyBiLmluaXQoMTczMTQwNTQxNSw0MjkwNzc1ODU3KSxuZXcgYi5pbml0KDIzOTQxODAyMzEsMTc1MDYwMzAyNSksbmV3IGIuaW5pdCgzNjc1MDA4NTI1LDE2OTQwNzY4MzkpLG5ldyBiLmluaXQoMTIwMzA2MjgxMywzMjA0MDc1NDI4KV0pfSxfZG9GaW5hbGl6ZTpmdW5jdGlvbigpe3ZhciBhPWQuX2RvRmluYWxpemUuY2FsbCh0aGlzKTthLnNpZ0J5dGVzLT0xNjtyZXR1cm4gYX19KTtjLlNIQTM4ND0NCmQuX2NyZWF0ZUhlbHBlcihhKTtjLkhtYWNTSEEzODQ9ZC5fY3JlYXRlSG1hY0hlbHBlcihhKX0pKCk7DQoNCi8qDQpDcnlwdG9KUyB2My4xLjIgcmlwZW1kMTYwLW1pbi5qcw0KY29kZS5nb29nbGUuY29tL3AvY3J5cHRvLWpzDQooYykgMjAwOS0yMDEzIGJ5IEplZmYgTW90dC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCmNvZGUuZ29vZ2xlLmNvbS9wL2NyeXB0by1qcy93aWtpL0xpY2Vuc2UNCiovDQovKg0KDQooYykgMjAxMiBieSBDZWRyaWMgTWVzbmlsLiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KDQpSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXQgbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBtZXQ6DQoNCiAgICAtIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci4NCiAgICAtIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4NCg0KVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyAiQVMgSVMiIEFORCBBTlkgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFIERJU0NMQUlNRUQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBDT1BZUklHSFQgSE9MREVSIE9SIENPTlRSSUJVVE9SUyBCRSBMSUFCTEUgRk9SIEFOWSBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCBPUiBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORCBPTiBBTlkgVEhFT1JZIE9GIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UgT0YgVEhJUyBTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS4NCiovDQooZnVuY3Rpb24oKXt2YXIgcT1DcnlwdG9KUyxkPXEubGliLG49ZC5Xb3JkQXJyYXkscD1kLkhhc2hlcixkPXEuYWxnbyx4PW4uY3JlYXRlKFswLDEsMiwzLDQsNSw2LDcsOCw5LDEwLDExLDEyLDEzLDE0LDE1LDcsNCwxMywxLDEwLDYsMTUsMywxMiwwLDksNSwyLDE0LDExLDgsMywxMCwxNCw0LDksMTUsOCwxLDIsNywwLDYsMTMsMTEsNSwxMiwxLDksMTEsMTAsMCw4LDEyLDQsMTMsMyw3LDE1LDE0LDUsNiwyLDQsMCw1LDksNywxMiwyLDEwLDE0LDEsMyw4LDExLDYsMTUsMTNdKSx5PW4uY3JlYXRlKFs1LDE0LDcsMCw5LDIsMTEsNCwxMyw2LDE1LDgsMSwxMCwzLDEyLDYsMTEsMyw3LDAsMTMsNSwxMCwxNCwxNSw4LDEyLDQsOSwxLDIsMTUsNSwxLDMsNywxNCw2LDksMTEsOCwxMiwyLDEwLDAsNCwxMyw4LDYsNCwxLDMsMTEsMTUsMCw1LDEyLDIsMTMsOSw3LDEwLDE0LDEyLDE1LDEwLDQsMSw1LDgsNyw2LDIsMTMsMTQsMCwzLDksMTFdKSx6PW4uY3JlYXRlKFsxMSwxNCwxNSwxMiwNCjUsOCw3LDksMTEsMTMsMTQsMTUsNiw3LDksOCw3LDYsOCwxMywxMSw5LDcsMTUsNywxMiwxNSw5LDExLDcsMTMsMTIsMTEsMTMsNiw3LDE0LDksMTMsMTUsMTQsOCwxMyw2LDUsMTIsNyw1LDExLDEyLDE0LDE1LDE0LDE1LDksOCw5LDE0LDUsNiw4LDYsNSwxMiw5LDE1LDUsMTEsNiw4LDEzLDEyLDUsMTIsMTMsMTQsMTEsOCw1LDZdKSxBPW4uY3JlYXRlKFs4LDksOSwxMSwxMywxNSwxNSw1LDcsNyw4LDExLDE0LDE0LDEyLDYsOSwxMywxNSw3LDEyLDgsOSwxMSw3LDcsMTIsNyw2LDE1LDEzLDExLDksNywxNSwxMSw4LDYsNiwxNCwxMiwxMyw1LDE0LDEzLDEzLDcsNSwxNSw1LDgsMTEsMTQsMTQsNiwxNCw2LDksMTIsOSwxMiw1LDE1LDgsOCw1LDEyLDksMTIsNSwxNCw2LDgsMTMsNiw1LDE1LDEzLDExLDExXSksQj1uLmNyZWF0ZShbMCwxNTE4NTAwMjQ5LDE4NTk3NzUzOTMsMjQwMDk1OTcwOCwyODQwODUzODM4XSksQz1uLmNyZWF0ZShbMTM1MjgyOTkyNiwxNTQ4NjAzNjg0LDE4MzYwNzI2OTEsDQoyMDUzOTk0MjE3LDBdKSxkPWQuUklQRU1EMTYwPXAuZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3RoaXMuX2hhc2g9bi5jcmVhdGUoWzE3MzI1ODQxOTMsNDAyMzIzMzQxNywyNTYyMzgzMTAyLDI3MTczMzg3OCwzMjg1Mzc3NTIwXSl9LF9kb1Byb2Nlc3NCbG9jazpmdW5jdGlvbihlLHYpe2Zvcih2YXIgYj0wOzE2PmI7YisrKXt2YXIgYz12K2IsZj1lW2NdO2VbY109KGY8PDh8Zj4+PjI0KSYxNjcxMTkzNXwoZjw8MjR8Zj4+PjgpJjQyNzgyNTUzNjB9dmFyIGM9dGhpcy5faGFzaC53b3JkcyxmPUIud29yZHMsZD1DLndvcmRzLG49eC53b3JkcyxxPXkud29yZHMscD16LndvcmRzLHc9QS53b3Jkcyx0LGcsaCxqLHIsdSxrLGwsbSxzO3U9dD1jWzBdO2s9Zz1jWzFdO2w9aD1jWzJdO209aj1jWzNdO3M9cj1jWzRdO2Zvcih2YXIgYSxiPTA7ODA+YjtiKz0xKWE9dCtlW3YrbltiXV18MCxhPTE2PmI/YSsoKGdeaF5qKStmWzBdKTozMj5iP2ErKChnJmh8fmcmaikrZlsxXSk6NDg+Yj8NCmErKCgoZ3x+aCleaikrZlsyXSk6NjQ+Yj9hKygoZyZqfGgmfmopK2ZbM10pOmErKChnXihofH5qKSkrZls0XSksYXw9MCxhPWE8PHBbYl18YT4+PjMyLXBbYl0sYT1hK3J8MCx0PXIscj1qLGo9aDw8MTB8aD4+PjIyLGg9ZyxnPWEsYT11K2VbditxW2JdXXwwLGE9MTY+Yj9hKygoa14obHx+bSkpK2RbMF0pOjMyPmI/YSsoKGsmbXxsJn5tKStkWzFdKTo0OD5iP2ErKCgoa3x+bClebSkrZFsyXSk6NjQ+Yj9hKygoayZsfH5rJm0pK2RbM10pOmErKChrXmxebSkrZFs0XSksYXw9MCxhPWE8PHdbYl18YT4+PjMyLXdbYl0sYT1hK3N8MCx1PXMscz1tLG09bDw8MTB8bD4+PjIyLGw9ayxrPWE7YT1jWzFdK2grbXwwO2NbMV09Y1syXStqK3N8MDtjWzJdPWNbM10rcit1fDA7Y1szXT1jWzRdK3Qra3wwO2NbNF09Y1swXStnK2x8MDtjWzBdPWF9LF9kb0ZpbmFsaXplOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fZGF0YSxkPWUud29yZHMsYj04KnRoaXMuX25EYXRhQnl0ZXMsYz04KmUuc2lnQnl0ZXM7DQpkW2M+Pj41XXw9MTI4PDwyNC1jJTMyO2RbKGMrNjQ+Pj45PDw0KSsxNF09KGI8PDh8Yj4+PjI0KSYxNjcxMTkzNXwoYjw8MjR8Yj4+PjgpJjQyNzgyNTUzNjA7ZS5zaWdCeXRlcz00KihkLmxlbmd0aCsxKTt0aGlzLl9wcm9jZXNzKCk7ZT10aGlzLl9oYXNoO2Q9ZS53b3Jkcztmb3IoYj0wOzU+YjtiKyspYz1kW2JdLGRbYl09KGM8PDh8Yz4+PjI0KSYxNjcxMTkzNXwoYzw8MjR8Yz4+PjgpJjQyNzgyNTUzNjA7cmV0dXJuIGV9LGNsb25lOmZ1bmN0aW9uKCl7dmFyIGQ9cC5jbG9uZS5jYWxsKHRoaXMpO2QuX2hhc2g9dGhpcy5faGFzaC5jbG9uZSgpO3JldHVybiBkfX0pO3EuUklQRU1EMTYwPXAuX2NyZWF0ZUhlbHBlcihkKTtxLkhtYWNSSVBFTUQxNjA9cC5fY3JlYXRlSG1hY0hlbHBlcihkKX0pKE1hdGgpOw0KDQovKg0KQ3J5cHRvSlMgdjMuMS4yIGhtYWMtbWluLmpzDQpjb2RlLmdvb2dsZS5jb20vcC9jcnlwdG8tanMNCihjKSAyMDA5LTIwMTMgYnkgSmVmZiBNb3R0LiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KY29kZS5nb29nbGUuY29tL3AvY3J5cHRvLWpzL3dpa2kvTGljZW5zZQ0KKi8NCihmdW5jdGlvbigpe3ZhciBjPUNyeXB0b0pTLGs9Yy5lbmMuVXRmODtjLmFsZ28uSE1BQz1jLmxpYi5CYXNlLmV4dGVuZCh7aW5pdDpmdW5jdGlvbihhLGIpe2E9dGhpcy5faGFzaGVyPW5ldyBhLmluaXQ7InN0cmluZyI9PXR5cGVvZiBiJiYoYj1rLnBhcnNlKGIpKTt2YXIgYz1hLmJsb2NrU2l6ZSxlPTQqYztiLnNpZ0J5dGVzPmUmJihiPWEuZmluYWxpemUoYikpO2IuY2xhbXAoKTtmb3IodmFyIGY9dGhpcy5fb0tleT1iLmNsb25lKCksZz10aGlzLl9pS2V5PWIuY2xvbmUoKSxoPWYud29yZHMsaj1nLndvcmRzLGQ9MDtkPGM7ZCsrKWhbZF1ePTE1NDk1NTY4MjgsaltkXV49OTA5NTIyNDg2O2Yuc2lnQnl0ZXM9Zy5zaWdCeXRlcz1lO3RoaXMucmVzZXQoKX0scmVzZXQ6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9oYXNoZXI7YS5yZXNldCgpO2EudXBkYXRlKHRoaXMuX2lLZXkpfSx1cGRhdGU6ZnVuY3Rpb24oYSl7dGhpcy5faGFzaGVyLnVwZGF0ZShhKTtyZXR1cm4gdGhpc30sZmluYWxpemU6ZnVuY3Rpb24oYSl7dmFyIGI9DQp0aGlzLl9oYXNoZXI7YT1iLmZpbmFsaXplKGEpO2IucmVzZXQoKTtyZXR1cm4gYi5maW5hbGl6ZSh0aGlzLl9vS2V5LmNsb25lKCkuY29uY2F0KGEpKX19KX0pKCk7DQoNCi8qDQpDcnlwdG9KUyB2My4xLjIgcGJrZGYyLW1pbi5qcw0KY29kZS5nb29nbGUuY29tL3AvY3J5cHRvLWpzDQooYykgMjAwOS0yMDEzIGJ5IEplZmYgTW90dC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCmNvZGUuZ29vZ2xlLmNvbS9wL2NyeXB0by1qcy93aWtpL0xpY2Vuc2UNCiovDQooZnVuY3Rpb24oKXt2YXIgYj1DcnlwdG9KUyxhPWIubGliLGQ9YS5CYXNlLG09YS5Xb3JkQXJyYXksYT1iLmFsZ28scT1hLkhNQUMsbD1hLlBCS0RGMj1kLmV4dGVuZCh7Y2ZnOmQuZXh0ZW5kKHtrZXlTaXplOjQsaGFzaGVyOmEuU0hBMSxpdGVyYXRpb25zOjF9KSxpbml0OmZ1bmN0aW9uKGEpe3RoaXMuY2ZnPXRoaXMuY2ZnLmV4dGVuZChhKX0sY29tcHV0ZTpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz10aGlzLmNmZyxmPXEuY3JlYXRlKGMuaGFzaGVyLGEpLGc9bS5jcmVhdGUoKSxkPW0uY3JlYXRlKFsxXSksbD1nLndvcmRzLHI9ZC53b3JkcyxuPWMua2V5U2l6ZSxjPWMuaXRlcmF0aW9ucztsLmxlbmd0aDxuOyl7dmFyIGg9Zi51cGRhdGUoYikuZmluYWxpemUoZCk7Zi5yZXNldCgpO2Zvcih2YXIgaj1oLndvcmRzLHM9ai5sZW5ndGgsaz1oLHA9MTtwPGM7cCsrKXtrPWYuZmluYWxpemUoayk7Zi5yZXNldCgpO2Zvcih2YXIgdD1rLndvcmRzLGU9MDtlPHM7ZSsrKWpbZV1ePXRbZV19Zy5jb25jYXQoaCk7DQpyWzBdKyt9Zy5zaWdCeXRlcz00Km47cmV0dXJuIGd9fSk7Yi5QQktERjI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBsLmNyZWF0ZShjKS5jb21wdXRlKGEsYil9fSkoKTsNCg0KLyohIChjKSBUb20gV3UgfCBodHRwOi8vd3d3LWNzLXN0dWRlbnRzLnN0YW5mb3JkLmVkdS9+dGp3L2pzYm4vDQogKi8NCnZhciBiNjRtYXA9IkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8iO3ZhciBiNjRwYWQ9Ij0iO2Z1bmN0aW9uIGhleDJiNjQoZCl7dmFyIGI7dmFyIGU7dmFyIGE9IiI7Zm9yKGI9MDtiKzM8PWQubGVuZ3RoO2IrPTMpe2U9cGFyc2VJbnQoZC5zdWJzdHJpbmcoYixiKzMpLDE2KTthKz1iNjRtYXAuY2hhckF0KGU+PjYpK2I2NG1hcC5jaGFyQXQoZSY2Myl9aWYoYisxPT1kLmxlbmd0aCl7ZT1wYXJzZUludChkLnN1YnN0cmluZyhiLGIrMSksMTYpO2ErPWI2NG1hcC5jaGFyQXQoZTw8Mil9ZWxzZXtpZihiKzI9PWQubGVuZ3RoKXtlPXBhcnNlSW50KGQuc3Vic3RyaW5nKGIsYisyKSwxNik7YSs9YjY0bWFwLmNoYXJBdChlPj4yKStiNjRtYXAuY2hhckF0KChlJjMpPDw0KX19aWYoYjY0cGFkKXt3aGlsZSgoYS5sZW5ndGgmMyk+MCl7YSs9YjY0cGFkfX1yZXR1cm4gYX1mdW5jdGlvbiBiNjR0b2hleChmKXt2YXIgZD0iIjt2YXIgZTt2YXIgYj0wO3ZhciBjO3ZhciBhO2ZvcihlPTA7ZTxmLmxlbmd0aDsrK2Upe2lmKGYuY2hhckF0KGUpPT1iNjRwYWQpe2JyZWFrfWE9YjY0bWFwLmluZGV4T2YoZi5jaGFyQXQoZSkpO2lmKGE8MCl7Y29udGludWV9aWYoYj09MCl7ZCs9aW50MmNoYXIoYT4+Mik7Yz1hJjM7Yj0xfWVsc2V7aWYoYj09MSl7ZCs9aW50MmNoYXIoKGM8PDIpfChhPj40KSk7Yz1hJjE1O2I9Mn1lbHNle2lmKGI9PTIpe2QrPWludDJjaGFyKGMpO2QrPWludDJjaGFyKGE+PjIpO2M9YSYzO2I9M31lbHNle2QrPWludDJjaGFyKChjPDwyKXwoYT4+NCkpO2QrPWludDJjaGFyKGEmMTUpO2I9MH19fX1pZihiPT0xKXtkKz1pbnQyY2hhcihjPDwyKX1yZXR1cm4gZH1mdW5jdGlvbiBiNjR0b0JBKGUpe3ZhciBkPWI2NHRvaGV4KGUpO3ZhciBjO3ZhciBiPW5ldyBBcnJheSgpO2ZvcihjPTA7MipjPGQubGVuZ3RoOysrYyl7YltjXT1wYXJzZUludChkLnN1YnN0cmluZygyKmMsMipjKzIpLDE2KX1yZXR1cm4gYn07DQovKiEgKGMpIFRvbSBXdSB8IGh0dHA6Ly93d3ctY3Mtc3R1ZGVudHMuc3RhbmZvcmQuZWR1L350ancvanNibi8NCiAqLw0KdmFyIGRiaXRzO3ZhciBjYW5hcnk9MjQ0ODM3ODE0MDk0NTkwO3ZhciBqX2xtPSgoY2FuYXJ5JjE2Nzc3MjE1KT09MTU3MTUwNzApO2Z1bmN0aW9uIEJpZ0ludGVnZXIoZSxkLGYpe2lmKGUhPW51bGwpe2lmKCJudW1iZXIiPT10eXBlb2YgZSl7dGhpcy5mcm9tTnVtYmVyKGUsZCxmKX1lbHNle2lmKGQ9PW51bGwmJiJzdHJpbmciIT10eXBlb2YgZSl7dGhpcy5mcm9tU3RyaW5nKGUsMjU2KX1lbHNle3RoaXMuZnJvbVN0cmluZyhlLGQpfX19fWZ1bmN0aW9uIG5iaSgpe3JldHVybiBuZXcgQmlnSW50ZWdlcihudWxsKX1mdW5jdGlvbiBhbTEoZixhLGIsZSxoLGcpe3doaWxlKC0tZz49MCl7dmFyIGQ9YSp0aGlzW2YrK10rYltlXStoO2g9TWF0aC5mbG9vcihkLzY3MTA4ODY0KTtiW2UrK109ZCY2NzEwODg2M31yZXR1cm4gaH1mdW5jdGlvbiBhbTIoZixxLHIsZSxvLGEpe3ZhciBrPXEmMzI3NjcscD1xPj4xNTt3aGlsZSgtLWE+PTApe3ZhciBkPXRoaXNbZl0mMzI3Njc7dmFyIGc9dGhpc1tmKytdPj4xNTt2YXIgYj1wKmQrZyprO2Q9aypkKygoYiYzMjc2Nyk8PDE1KStyW2VdKyhvJjEwNzM3NDE4MjMpO289KGQ+Pj4zMCkrKGI+Pj4xNSkrcCpnKyhvPj4+MzApO3JbZSsrXT1kJjEwNzM3NDE4MjN9cmV0dXJuIG99ZnVuY3Rpb24gYW0zKGYscSxyLGUsbyxhKXt2YXIgaz1xJjE2MzgzLHA9cT4+MTQ7d2hpbGUoLS1hPj0wKXt2YXIgZD10aGlzW2ZdJjE2MzgzO3ZhciBnPXRoaXNbZisrXT4+MTQ7dmFyIGI9cCpkK2cqaztkPWsqZCsoKGImMTYzODMpPDwxNCkrcltlXStvO289KGQ+PjI4KSsoYj4+MTQpK3AqZztyW2UrK109ZCYyNjg0MzU0NTV9cmV0dXJuIG99aWYoal9sbSYmKG5hdmlnYXRvci5hcHBOYW1lPT0iTWljcm9zb2Z0IEludGVybmV0IEV4cGxvcmVyIikpe0JpZ0ludGVnZXIucHJvdG90eXBlLmFtPWFtMjtkYml0cz0zMH1lbHNle2lmKGpfbG0mJihuYXZpZ2F0b3IuYXBwTmFtZSE9Ik5ldHNjYXBlIikpe0JpZ0ludGVnZXIucHJvdG90eXBlLmFtPWFtMTtkYml0cz0yNn1lbHNle0JpZ0ludGVnZXIucHJvdG90eXBlLmFtPWFtMztkYml0cz0yOH19QmlnSW50ZWdlci5wcm90b3R5cGUuREI9ZGJpdHM7QmlnSW50ZWdlci5wcm90b3R5cGUuRE09KCgxPDxkYml0cyktMSk7QmlnSW50ZWdlci5wcm90b3R5cGUuRFY9KDE8PGRiaXRzKTt2YXIgQklfRlA9NTI7QmlnSW50ZWdlci5wcm90b3R5cGUuRlY9TWF0aC5wb3coMixCSV9GUCk7QmlnSW50ZWdlci5wcm90b3R5cGUuRjE9QklfRlAtZGJpdHM7QmlnSW50ZWdlci5wcm90b3R5cGUuRjI9MipkYml0cy1CSV9GUDt2YXIgQklfUk09IjAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eiI7dmFyIEJJX1JDPW5ldyBBcnJheSgpO3ZhciBycix2djtycj0iMCIuY2hhckNvZGVBdCgwKTtmb3IodnY9MDt2djw9OTsrK3Z2KXtCSV9SQ1tycisrXT12dn1ycj0iYSIuY2hhckNvZGVBdCgwKTtmb3IodnY9MTA7dnY8MzY7Kyt2dil7QklfUkNbcnIrK109dnZ9cnI9IkEiLmNoYXJDb2RlQXQoMCk7Zm9yKHZ2PTEwO3Z2PDM2OysrdnYpe0JJX1JDW3JyKytdPXZ2fWZ1bmN0aW9uIGludDJjaGFyKGEpe3JldHVybiBCSV9STS5jaGFyQXQoYSl9ZnVuY3Rpb24gaW50QXQoYixhKXt2YXIgZD1CSV9SQ1tiLmNoYXJDb2RlQXQoYSldO3JldHVybihkPT1udWxsKT8tMTpkfWZ1bmN0aW9uIGJucENvcHlUbyhiKXtmb3IodmFyIGE9dGhpcy50LTE7YT49MDstLWEpe2JbYV09dGhpc1thXX1iLnQ9dGhpcy50O2Iucz10aGlzLnN9ZnVuY3Rpb24gYm5wRnJvbUludChhKXt0aGlzLnQ9MTt0aGlzLnM9KGE8MCk/LTE6MDtpZihhPjApe3RoaXNbMF09YX1lbHNle2lmKGE8LTEpe3RoaXNbMF09YSt0aGlzLkRWfWVsc2V7dGhpcy50PTB9fX1mdW5jdGlvbiBuYnYoYSl7dmFyIGI9bmJpKCk7Yi5mcm9tSW50KGEpO3JldHVybiBifWZ1bmN0aW9uIGJucEZyb21TdHJpbmcoaCxjKXt2YXIgZTtpZihjPT0xNil7ZT00fWVsc2V7aWYoYz09OCl7ZT0zfWVsc2V7aWYoYz09MjU2KXtlPTh9ZWxzZXtpZihjPT0yKXtlPTF9ZWxzZXtpZihjPT0zMil7ZT01fWVsc2V7aWYoYz09NCl7ZT0yfWVsc2V7dGhpcy5mcm9tUmFkaXgoaCxjKTtyZXR1cm59fX19fX10aGlzLnQ9MDt0aGlzLnM9MDt2YXIgZz1oLmxlbmd0aCxkPWZhbHNlLGY9MDt3aGlsZSgtLWc+PTApe3ZhciBhPShlPT04KT9oW2ddJjI1NTppbnRBdChoLGcpO2lmKGE8MCl7aWYoaC5jaGFyQXQoZyk9PSItIil7ZD10cnVlfWNvbnRpbnVlfWQ9ZmFsc2U7aWYoZj09MCl7dGhpc1t0aGlzLnQrK109YX1lbHNle2lmKGYrZT50aGlzLkRCKXt0aGlzW3RoaXMudC0xXXw9KGEmKCgxPDwodGhpcy5EQi1mKSktMSkpPDxmO3RoaXNbdGhpcy50KytdPShhPj4odGhpcy5EQi1mKSl9ZWxzZXt0aGlzW3RoaXMudC0xXXw9YTw8Zn19Zis9ZTtpZihmPj10aGlzLkRCKXtmLT10aGlzLkRCfX1pZihlPT04JiYoaFswXSYxMjgpIT0wKXt0aGlzLnM9LTE7aWYoZj4wKXt0aGlzW3RoaXMudC0xXXw9KCgxPDwodGhpcy5EQi1mKSktMSk8PGZ9fXRoaXMuY2xhbXAoKTtpZihkKXtCaWdJbnRlZ2VyLlpFUk8uc3ViVG8odGhpcyx0aGlzKX19ZnVuY3Rpb24gYm5wQ2xhbXAoKXt2YXIgYT10aGlzLnMmdGhpcy5ETTt3aGlsZSh0aGlzLnQ+MCYmdGhpc1t0aGlzLnQtMV09PWEpey0tdGhpcy50fX1mdW5jdGlvbiBiblRvU3RyaW5nKGMpe2lmKHRoaXMuczwwKXtyZXR1cm4iLSIrdGhpcy5uZWdhdGUoKS50b1N0cmluZyhjKX12YXIgZTtpZihjPT0xNil7ZT00fWVsc2V7aWYoYz09OCl7ZT0zfWVsc2V7aWYoYz09Mil7ZT0xfWVsc2V7aWYoYz09MzIpe2U9NX1lbHNle2lmKGM9PTQpe2U9Mn1lbHNle3JldHVybiB0aGlzLnRvUmFkaXgoYyl9fX19fXZhciBnPSgxPDxlKS0xLGwsYT1mYWxzZSxoPSIiLGY9dGhpcy50O3ZhciBqPXRoaXMuREItKGYqdGhpcy5EQiklZTtpZihmLS0+MCl7aWYoajx0aGlzLkRCJiYobD10aGlzW2ZdPj5qKT4wKXthPXRydWU7aD1pbnQyY2hhcihsKX13aGlsZShmPj0wKXtpZihqPGUpe2w9KHRoaXNbZl0mKCgxPDxqKS0xKSk8PChlLWopO2x8PXRoaXNbLS1mXT4+KGorPXRoaXMuREItZSl9ZWxzZXtsPSh0aGlzW2ZdPj4oai09ZSkpJmc7aWYoajw9MCl7ais9dGhpcy5EQjstLWZ9fWlmKGw+MCl7YT10cnVlfWlmKGEpe2grPWludDJjaGFyKGwpfX19cmV0dXJuIGE/aDoiMCJ9ZnVuY3Rpb24gYm5OZWdhdGUoKXt2YXIgYT1uYmkoKTtCaWdJbnRlZ2VyLlpFUk8uc3ViVG8odGhpcyxhKTtyZXR1cm4gYX1mdW5jdGlvbiBibkFicygpe3JldHVybih0aGlzLnM8MCk/dGhpcy5uZWdhdGUoKTp0aGlzfWZ1bmN0aW9uIGJuQ29tcGFyZVRvKGIpe3ZhciBkPXRoaXMucy1iLnM7aWYoZCE9MCl7cmV0dXJuIGR9dmFyIGM9dGhpcy50O2Q9Yy1iLnQ7aWYoZCE9MCl7cmV0dXJuKHRoaXMuczwwKT8tZDpkfXdoaWxlKC0tYz49MCl7aWYoKGQ9dGhpc1tjXS1iW2NdKSE9MCl7cmV0dXJuIGR9fXJldHVybiAwfWZ1bmN0aW9uIG5iaXRzKGEpe3ZhciBjPTEsYjtpZigoYj1hPj4+MTYpIT0wKXthPWI7Yys9MTZ9aWYoKGI9YT4+OCkhPTApe2E9YjtjKz04fWlmKChiPWE+PjQpIT0wKXthPWI7Yys9NH1pZigoYj1hPj4yKSE9MCl7YT1iO2MrPTJ9aWYoKGI9YT4+MSkhPTApe2E9YjtjKz0xfXJldHVybiBjfWZ1bmN0aW9uIGJuQml0TGVuZ3RoKCl7aWYodGhpcy50PD0wKXtyZXR1cm4gMH1yZXR1cm4gdGhpcy5EQioodGhpcy50LTEpK25iaXRzKHRoaXNbdGhpcy50LTFdXih0aGlzLnMmdGhpcy5ETSkpfWZ1bmN0aW9uIGJucERMU2hpZnRUbyhjLGIpe3ZhciBhO2ZvcihhPXRoaXMudC0xO2E+PTA7LS1hKXtiW2ErY109dGhpc1thXX1mb3IoYT1jLTE7YT49MDstLWEpe2JbYV09MH1iLnQ9dGhpcy50K2M7Yi5zPXRoaXMuc31mdW5jdGlvbiBibnBEUlNoaWZ0VG8oYyxiKXtmb3IodmFyIGE9YzthPHRoaXMudDsrK2Epe2JbYS1jXT10aGlzW2FdfWIudD1NYXRoLm1heCh0aGlzLnQtYywwKTtiLnM9dGhpcy5zfWZ1bmN0aW9uIGJucExTaGlmdFRvKGosZSl7dmFyIGI9aiV0aGlzLkRCO3ZhciBhPXRoaXMuREItYjt2YXIgZz0oMTw8YSktMTt2YXIgZj1NYXRoLmZsb29yKGovdGhpcy5EQiksaD0odGhpcy5zPDxiKSZ0aGlzLkRNLGQ7Zm9yKGQ9dGhpcy50LTE7ZD49MDstLWQpe2VbZCtmKzFdPSh0aGlzW2RdPj5hKXxoO2g9KHRoaXNbZF0mZyk8PGJ9Zm9yKGQ9Zi0xO2Q+PTA7LS1kKXtlW2RdPTB9ZVtmXT1oO2UudD10aGlzLnQrZisxO2Uucz10aGlzLnM7ZS5jbGFtcCgpfWZ1bmN0aW9uIGJucFJTaGlmdFRvKGcsZCl7ZC5zPXRoaXMuczt2YXIgZT1NYXRoLmZsb29yKGcvdGhpcy5EQik7aWYoZT49dGhpcy50KXtkLnQ9MDtyZXR1cm59dmFyIGI9ZyV0aGlzLkRCO3ZhciBhPXRoaXMuREItYjt2YXIgZj0oMTw8YiktMTtkWzBdPXRoaXNbZV0+PmI7Zm9yKHZhciBjPWUrMTtjPHRoaXMudDsrK2Mpe2RbYy1lLTFdfD0odGhpc1tjXSZmKTw8YTtkW2MtZV09dGhpc1tjXT4+Yn1pZihiPjApe2RbdGhpcy50LWUtMV18PSh0aGlzLnMmZik8PGF9ZC50PXRoaXMudC1lO2QuY2xhbXAoKX1mdW5jdGlvbiBibnBTdWJUbyhkLGYpe3ZhciBlPTAsZz0wLGI9TWF0aC5taW4oZC50LHRoaXMudCk7d2hpbGUoZTxiKXtnKz10aGlzW2VdLWRbZV07ZltlKytdPWcmdGhpcy5ETTtnPj49dGhpcy5EQn1pZihkLnQ8dGhpcy50KXtnLT1kLnM7d2hpbGUoZTx0aGlzLnQpe2crPXRoaXNbZV07ZltlKytdPWcmdGhpcy5ETTtnPj49dGhpcy5EQn1nKz10aGlzLnN9ZWxzZXtnKz10aGlzLnM7d2hpbGUoZTxkLnQpe2ctPWRbZV07ZltlKytdPWcmdGhpcy5ETTtnPj49dGhpcy5EQn1nLT1kLnN9Zi5zPShnPDApPy0xOjA7aWYoZzwtMSl7ZltlKytdPXRoaXMuRFYrZ31lbHNle2lmKGc+MCl7ZltlKytdPWd9fWYudD1lO2YuY2xhbXAoKX1mdW5jdGlvbiBibnBNdWx0aXBseVRvKGMsZSl7dmFyIGI9dGhpcy5hYnMoKSxmPWMuYWJzKCk7dmFyIGQ9Yi50O2UudD1kK2YudDt3aGlsZSgtLWQ+PTApe2VbZF09MH1mb3IoZD0wO2Q8Zi50OysrZCl7ZVtkK2IudF09Yi5hbSgwLGZbZF0sZSxkLDAsYi50KX1lLnM9MDtlLmNsYW1wKCk7aWYodGhpcy5zIT1jLnMpe0JpZ0ludGVnZXIuWkVSTy5zdWJUbyhlLGUpfX1mdW5jdGlvbiBibnBTcXVhcmVUbyhkKXt2YXIgYT10aGlzLmFicygpO3ZhciBiPWQudD0yKmEudDt3aGlsZSgtLWI+PTApe2RbYl09MH1mb3IoYj0wO2I8YS50LTE7KytiKXt2YXIgZT1hLmFtKGIsYVtiXSxkLDIqYiwwLDEpO2lmKChkW2IrYS50XSs9YS5hbShiKzEsMiphW2JdLGQsMipiKzEsZSxhLnQtYi0xKSk+PWEuRFYpe2RbYithLnRdLT1hLkRWO2RbYithLnQrMV09MX19aWYoZC50PjApe2RbZC50LTFdKz1hLmFtKGIsYVtiXSxkLDIqYiwwLDEpfWQucz0wO2QuY2xhbXAoKX1mdW5jdGlvbiBibnBEaXZSZW1UbyhuLGgsZyl7dmFyIHc9bi5hYnMoKTtpZih3LnQ8PTApe3JldHVybn12YXIgaz10aGlzLmFicygpO2lmKGsudDx3LnQpe2lmKGghPW51bGwpe2guZnJvbUludCgwKX1pZihnIT1udWxsKXt0aGlzLmNvcHlUbyhnKX1yZXR1cm59aWYoZz09bnVsbCl7Zz1uYmkoKX12YXIgZD1uYmkoKSxhPXRoaXMucyxsPW4uczt2YXIgdj10aGlzLkRCLW5iaXRzKHdbdy50LTFdKTtpZih2PjApe3cubFNoaWZ0VG8odixkKTtrLmxTaGlmdFRvKHYsZyl9ZWxzZXt3LmNvcHlUbyhkKTtrLmNvcHlUbyhnKX12YXIgcD1kLnQ7dmFyIGI9ZFtwLTFdO2lmKGI9PTApe3JldHVybn12YXIgbz1iKigxPDx0aGlzLkYxKSsoKHA+MSk/ZFtwLTJdPj50aGlzLkYyOjApO3ZhciBBPXRoaXMuRlYvbyx6PSgxPDx0aGlzLkYxKS9vLHg9MTw8dGhpcy5GMjt2YXIgdT1nLnQscz11LXAsZj0oaD09bnVsbCk/bmJpKCk6aDtkLmRsU2hpZnRUbyhzLGYpO2lmKGcuY29tcGFyZVRvKGYpPj0wKXtnW2cudCsrXT0xO2cuc3ViVG8oZixnKX1CaWdJbnRlZ2VyLk9ORS5kbFNoaWZ0VG8ocCxmKTtmLnN1YlRvKGQsZCk7d2hpbGUoZC50PHApe2RbZC50KytdPTB9d2hpbGUoLS1zPj0wKXt2YXIgYz0oZ1stLXVdPT1iKT90aGlzLkRNOk1hdGguZmxvb3IoZ1t1XSpBKyhnW3UtMV0reCkqeik7aWYoKGdbdV0rPWQuYW0oMCxjLGcscywwLHApKTxjKXtkLmRsU2hpZnRUbyhzLGYpO2cuc3ViVG8oZixnKTt3aGlsZShnW3VdPC0tYyl7Zy5zdWJUbyhmLGcpfX19aWYoaCE9bnVsbCl7Zy5kclNoaWZ0VG8ocCxoKTtpZihhIT1sKXtCaWdJbnRlZ2VyLlpFUk8uc3ViVG8oaCxoKX19Zy50PXA7Zy5jbGFtcCgpO2lmKHY+MCl7Zy5yU2hpZnRUbyh2LGcpfWlmKGE8MCl7QmlnSW50ZWdlci5aRVJPLnN1YlRvKGcsZyl9fWZ1bmN0aW9uIGJuTW9kKGIpe3ZhciBjPW5iaSgpO3RoaXMuYWJzKCkuZGl2UmVtVG8oYixudWxsLGMpO2lmKHRoaXMuczwwJiZjLmNvbXBhcmVUbyhCaWdJbnRlZ2VyLlpFUk8pPjApe2Iuc3ViVG8oYyxjKX1yZXR1cm4gY31mdW5jdGlvbiBDbGFzc2ljKGEpe3RoaXMubT1hfWZ1bmN0aW9uIGNDb252ZXJ0KGEpe2lmKGEuczwwfHxhLmNvbXBhcmVUbyh0aGlzLm0pPj0wKXtyZXR1cm4gYS5tb2QodGhpcy5tKX1lbHNle3JldHVybiBhfX1mdW5jdGlvbiBjUmV2ZXJ0KGEpe3JldHVybiBhfWZ1bmN0aW9uIGNSZWR1Y2UoYSl7YS5kaXZSZW1Ubyh0aGlzLm0sbnVsbCxhKX1mdW5jdGlvbiBjTXVsVG8oYSxjLGIpe2EubXVsdGlwbHlUbyhjLGIpO3RoaXMucmVkdWNlKGIpfWZ1bmN0aW9uIGNTcXJUbyhhLGIpe2Euc3F1YXJlVG8oYik7dGhpcy5yZWR1Y2UoYil9Q2xhc3NpYy5wcm90b3R5cGUuY29udmVydD1jQ29udmVydDtDbGFzc2ljLnByb3RvdHlwZS5yZXZlcnQ9Y1JldmVydDtDbGFzc2ljLnByb3RvdHlwZS5yZWR1Y2U9Y1JlZHVjZTtDbGFzc2ljLnByb3RvdHlwZS5tdWxUbz1jTXVsVG87Q2xhc3NpYy5wcm90b3R5cGUuc3FyVG89Y1NxclRvO2Z1bmN0aW9uIGJucEludkRpZ2l0KCl7aWYodGhpcy50PDEpe3JldHVybiAwfXZhciBhPXRoaXNbMF07aWYoKGEmMSk9PTApe3JldHVybiAwfXZhciBiPWEmMztiPShiKigyLShhJjE1KSpiKSkmMTU7Yj0oYiooMi0oYSYyNTUpKmIpKSYyNTU7Yj0oYiooMi0oKChhJjY1NTM1KSpiKSY2NTUzNSkpKSY2NTUzNTtiPShiKigyLWEqYiV0aGlzLkRWKSkldGhpcy5EVjtyZXR1cm4oYj4wKT90aGlzLkRWLWI6LWJ9ZnVuY3Rpb24gTW9udGdvbWVyeShhKXt0aGlzLm09YTt0aGlzLm1wPWEuaW52RGlnaXQoKTt0aGlzLm1wbD10aGlzLm1wJjMyNzY3O3RoaXMubXBoPXRoaXMubXA+PjE1O3RoaXMudW09KDE8PChhLkRCLTE1KSktMTt0aGlzLm10Mj0yKmEudH1mdW5jdGlvbiBtb250Q29udmVydChhKXt2YXIgYj1uYmkoKTthLmFicygpLmRsU2hpZnRUbyh0aGlzLm0udCxiKTtiLmRpdlJlbVRvKHRoaXMubSxudWxsLGIpO2lmKGEuczwwJiZiLmNvbXBhcmVUbyhCaWdJbnRlZ2VyLlpFUk8pPjApe3RoaXMubS5zdWJUbyhiLGIpfXJldHVybiBifWZ1bmN0aW9uIG1vbnRSZXZlcnQoYSl7dmFyIGI9bmJpKCk7YS5jb3B5VG8oYik7dGhpcy5yZWR1Y2UoYik7cmV0dXJuIGJ9ZnVuY3Rpb24gbW9udFJlZHVjZShhKXt3aGlsZShhLnQ8PXRoaXMubXQyKXthW2EudCsrXT0wfWZvcih2YXIgYz0wO2M8dGhpcy5tLnQ7KytjKXt2YXIgYj1hW2NdJjMyNzY3O3ZhciBkPShiKnRoaXMubXBsKygoKGIqdGhpcy5tcGgrKGFbY10+PjE1KSp0aGlzLm1wbCkmdGhpcy51bSk8PDE1KSkmYS5ETTtiPWMrdGhpcy5tLnQ7YVtiXSs9dGhpcy5tLmFtKDAsZCxhLGMsMCx0aGlzLm0udCk7d2hpbGUoYVtiXT49YS5EVil7YVtiXS09YS5EVjthWysrYl0rK319YS5jbGFtcCgpO2EuZHJTaGlmdFRvKHRoaXMubS50LGEpO2lmKGEuY29tcGFyZVRvKHRoaXMubSk+PTApe2Euc3ViVG8odGhpcy5tLGEpfX1mdW5jdGlvbiBtb250U3FyVG8oYSxiKXthLnNxdWFyZVRvKGIpO3RoaXMucmVkdWNlKGIpfWZ1bmN0aW9uIG1vbnRNdWxUbyhhLGMsYil7YS5tdWx0aXBseVRvKGMsYik7dGhpcy5yZWR1Y2UoYil9TW9udGdvbWVyeS5wcm90b3R5cGUuY29udmVydD1tb250Q29udmVydDtNb250Z29tZXJ5LnByb3RvdHlwZS5yZXZlcnQ9bW9udFJldmVydDtNb250Z29tZXJ5LnByb3RvdHlwZS5yZWR1Y2U9bW9udFJlZHVjZTtNb250Z29tZXJ5LnByb3RvdHlwZS5tdWxUbz1tb250TXVsVG87TW9udGdvbWVyeS5wcm90b3R5cGUuc3FyVG89bW9udFNxclRvO2Z1bmN0aW9uIGJucElzRXZlbigpe3JldHVybigodGhpcy50PjApPyh0aGlzWzBdJjEpOnRoaXMucyk9PTB9ZnVuY3Rpb24gYm5wRXhwKGgsail7aWYoaD40Mjk0OTY3Mjk1fHxoPDEpe3JldHVybiBCaWdJbnRlZ2VyLk9ORX12YXIgZj1uYmkoKSxhPW5iaSgpLGQ9ai5jb252ZXJ0KHRoaXMpLGM9bmJpdHMoaCktMTtkLmNvcHlUbyhmKTt3aGlsZSgtLWM+PTApe2ouc3FyVG8oZixhKTtpZigoaCYoMTw8YykpPjApe2oubXVsVG8oYSxkLGYpfWVsc2V7dmFyIGI9ZjtmPWE7YT1ifX1yZXR1cm4gai5yZXZlcnQoZil9ZnVuY3Rpb24gYm5Nb2RQb3dJbnQoYixhKXt2YXIgYztpZihiPDI1Nnx8YS5pc0V2ZW4oKSl7Yz1uZXcgQ2xhc3NpYyhhKX1lbHNle2M9bmV3IE1vbnRnb21lcnkoYSl9cmV0dXJuIHRoaXMuZXhwKGIsYyl9QmlnSW50ZWdlci5wcm90b3R5cGUuY29weVRvPWJucENvcHlUbztCaWdJbnRlZ2VyLnByb3RvdHlwZS5mcm9tSW50PWJucEZyb21JbnQ7QmlnSW50ZWdlci5wcm90b3R5cGUuZnJvbVN0cmluZz1ibnBGcm9tU3RyaW5nO0JpZ0ludGVnZXIucHJvdG90eXBlLmNsYW1wPWJucENsYW1wO0JpZ0ludGVnZXIucHJvdG90eXBlLmRsU2hpZnRUbz1ibnBETFNoaWZ0VG87QmlnSW50ZWdlci5wcm90b3R5cGUuZHJTaGlmdFRvPWJucERSU2hpZnRUbztCaWdJbnRlZ2VyLnByb3RvdHlwZS5sU2hpZnRUbz1ibnBMU2hpZnRUbztCaWdJbnRlZ2VyLnByb3RvdHlwZS5yU2hpZnRUbz1ibnBSU2hpZnRUbztCaWdJbnRlZ2VyLnByb3RvdHlwZS5zdWJUbz1ibnBTdWJUbztCaWdJbnRlZ2VyLnByb3RvdHlwZS5tdWx0aXBseVRvPWJucE11bHRpcGx5VG87QmlnSW50ZWdlci5wcm90b3R5cGUuc3F1YXJlVG89Ym5wU3F1YXJlVG87QmlnSW50ZWdlci5wcm90b3R5cGUuZGl2UmVtVG89Ym5wRGl2UmVtVG87QmlnSW50ZWdlci5wcm90b3R5cGUuaW52RGlnaXQ9Ym5wSW52RGlnaXQ7QmlnSW50ZWdlci5wcm90b3R5cGUuaXNFdmVuPWJucElzRXZlbjtCaWdJbnRlZ2VyLnByb3RvdHlwZS5leHA9Ym5wRXhwO0JpZ0ludGVnZXIucHJvdG90eXBlLnRvU3RyaW5nPWJuVG9TdHJpbmc7QmlnSW50ZWdlci5wcm90b3R5cGUubmVnYXRlPWJuTmVnYXRlO0JpZ0ludGVnZXIucHJvdG90eXBlLmFicz1ibkFicztCaWdJbnRlZ2VyLnByb3RvdHlwZS5jb21wYXJlVG89Ym5Db21wYXJlVG87QmlnSW50ZWdlci5wcm90b3R5cGUuYml0TGVuZ3RoPWJuQml0TGVuZ3RoO0JpZ0ludGVnZXIucHJvdG90eXBlLm1vZD1ibk1vZDtCaWdJbnRlZ2VyLnByb3RvdHlwZS5tb2RQb3dJbnQ9Ym5Nb2RQb3dJbnQ7QmlnSW50ZWdlci5aRVJPPW5idigwKTtCaWdJbnRlZ2VyLk9ORT1uYnYoMSk7DQovKiEgKGMpIFRvbSBXdSB8IGh0dHA6Ly93d3ctY3Mtc3R1ZGVudHMuc3RhbmZvcmQuZWR1L350ancvanNibi8NCiAqLw0KZnVuY3Rpb24gYm5DbG9uZSgpe3ZhciBhPW5iaSgpO3RoaXMuY29weVRvKGEpO3JldHVybiBhfWZ1bmN0aW9uIGJuSW50VmFsdWUoKXtpZih0aGlzLnM8MCl7aWYodGhpcy50PT0xKXtyZXR1cm4gdGhpc1swXS10aGlzLkRWfWVsc2V7aWYodGhpcy50PT0wKXtyZXR1cm4gLTF9fX1lbHNle2lmKHRoaXMudD09MSl7cmV0dXJuIHRoaXNbMF19ZWxzZXtpZih0aGlzLnQ9PTApe3JldHVybiAwfX19cmV0dXJuKCh0aGlzWzFdJigoMTw8KDMyLXRoaXMuREIpKS0xKSk8PHRoaXMuREIpfHRoaXNbMF19ZnVuY3Rpb24gYm5CeXRlVmFsdWUoKXtyZXR1cm4odGhpcy50PT0wKT90aGlzLnM6KHRoaXNbMF08PDI0KT4+MjR9ZnVuY3Rpb24gYm5TaG9ydFZhbHVlKCl7cmV0dXJuKHRoaXMudD09MCk/dGhpcy5zOih0aGlzWzBdPDwxNik+PjE2fWZ1bmN0aW9uIGJucENodW5rU2l6ZShhKXtyZXR1cm4gTWF0aC5mbG9vcihNYXRoLkxOMip0aGlzLkRCL01hdGgubG9nKGEpKX1mdW5jdGlvbiBiblNpZ051bSgpe2lmKHRoaXMuczwwKXtyZXR1cm4gLTF9ZWxzZXtpZih0aGlzLnQ8PTB8fCh0aGlzLnQ9PTEmJnRoaXNbMF08PTApKXtyZXR1cm4gMH1lbHNle3JldHVybiAxfX19ZnVuY3Rpb24gYm5wVG9SYWRpeChjKXtpZihjPT1udWxsKXtjPTEwfWlmKHRoaXMuc2lnbnVtKCk9PTB8fGM8Mnx8Yz4zNil7cmV0dXJuIjAifXZhciBmPXRoaXMuY2h1bmtTaXplKGMpO3ZhciBlPU1hdGgucG93KGMsZik7dmFyIGk9bmJ2KGUpLGo9bmJpKCksaD1uYmkoKSxnPSIiO3RoaXMuZGl2UmVtVG8oaSxqLGgpO3doaWxlKGouc2lnbnVtKCk+MCl7Zz0oZStoLmludFZhbHVlKCkpLnRvU3RyaW5nKGMpLnN1YnN0cigxKStnO2ouZGl2UmVtVG8oaSxqLGgpfXJldHVybiBoLmludFZhbHVlKCkudG9TdHJpbmcoYykrZ31mdW5jdGlvbiBibnBGcm9tUmFkaXgobSxoKXt0aGlzLmZyb21JbnQoMCk7aWYoaD09bnVsbCl7aD0xMH12YXIgZj10aGlzLmNodW5rU2l6ZShoKTt2YXIgZz1NYXRoLnBvdyhoLGYpLGU9ZmFsc2UsYT0wLGw9MDtmb3IodmFyIGM9MDtjPG0ubGVuZ3RoOysrYyl7dmFyIGs9aW50QXQobSxjKTtpZihrPDApe2lmKG0uY2hhckF0KGMpPT0iLSImJnRoaXMuc2lnbnVtKCk9PTApe2U9dHJ1ZX1jb250aW51ZX1sPWgqbCtrO2lmKCsrYT49Zil7dGhpcy5kTXVsdGlwbHkoZyk7dGhpcy5kQWRkT2Zmc2V0KGwsMCk7YT0wO2w9MH19aWYoYT4wKXt0aGlzLmRNdWx0aXBseShNYXRoLnBvdyhoLGEpKTt0aGlzLmRBZGRPZmZzZXQobCwwKX1pZihlKXtCaWdJbnRlZ2VyLlpFUk8uc3ViVG8odGhpcyx0aGlzKX19ZnVuY3Rpb24gYm5wRnJvbU51bWJlcihmLGUsaCl7aWYoIm51bWJlciI9PXR5cGVvZiBlKXtpZihmPDIpe3RoaXMuZnJvbUludCgxKX1lbHNle3RoaXMuZnJvbU51bWJlcihmLGgpO2lmKCF0aGlzLnRlc3RCaXQoZi0xKSl7dGhpcy5iaXR3aXNlVG8oQmlnSW50ZWdlci5PTkUuc2hpZnRMZWZ0KGYtMSksb3Bfb3IsdGhpcyl9aWYodGhpcy5pc0V2ZW4oKSl7dGhpcy5kQWRkT2Zmc2V0KDEsMCl9d2hpbGUoIXRoaXMuaXNQcm9iYWJsZVByaW1lKGUpKXt0aGlzLmRBZGRPZmZzZXQoMiwwKTtpZih0aGlzLmJpdExlbmd0aCgpPmYpe3RoaXMuc3ViVG8oQmlnSW50ZWdlci5PTkUuc2hpZnRMZWZ0KGYtMSksdGhpcyl9fX19ZWxzZXt2YXIgZD1uZXcgQXJyYXkoKSxnPWYmNztkLmxlbmd0aD0oZj4+MykrMTtlLm5leHRCeXRlcyhkKTtpZihnPjApe2RbMF0mPSgoMTw8ZyktMSl9ZWxzZXtkWzBdPTB9dGhpcy5mcm9tU3RyaW5nKGQsMjU2KX19ZnVuY3Rpb24gYm5Ub0J5dGVBcnJheSgpe3ZhciBiPXRoaXMudCxjPW5ldyBBcnJheSgpO2NbMF09dGhpcy5zO3ZhciBlPXRoaXMuREItKGIqdGhpcy5EQiklOCxmLGE9MDtpZihiLS0+MCl7aWYoZTx0aGlzLkRCJiYoZj10aGlzW2JdPj5lKSE9KHRoaXMucyZ0aGlzLkRNKT4+ZSl7Y1thKytdPWZ8KHRoaXMuczw8KHRoaXMuREItZSkpfXdoaWxlKGI+PTApe2lmKGU8OCl7Zj0odGhpc1tiXSYoKDE8PGUpLTEpKTw8KDgtZSk7Znw9dGhpc1stLWJdPj4oZSs9dGhpcy5EQi04KX1lbHNle2Y9KHRoaXNbYl0+PihlLT04KSkmMjU1O2lmKGU8PTApe2UrPXRoaXMuREI7LS1ifX1pZigoZiYxMjgpIT0wKXtmfD0tMjU2fWlmKGE9PTAmJih0aGlzLnMmMTI4KSE9KGYmMTI4KSl7KythfWlmKGE+MHx8ZiE9dGhpcy5zKXtjW2ErK109Zn19fXJldHVybiBjfWZ1bmN0aW9uIGJuRXF1YWxzKGIpe3JldHVybih0aGlzLmNvbXBhcmVUbyhiKT09MCl9ZnVuY3Rpb24gYm5NaW4oYil7cmV0dXJuKHRoaXMuY29tcGFyZVRvKGIpPDApP3RoaXM6Yn1mdW5jdGlvbiBibk1heChiKXtyZXR1cm4odGhpcy5jb21wYXJlVG8oYik+MCk/dGhpczpifWZ1bmN0aW9uIGJucEJpdHdpc2VUbyhjLGgsZSl7dmFyIGQsZyxiPU1hdGgubWluKGMudCx0aGlzLnQpO2ZvcihkPTA7ZDxiOysrZCl7ZVtkXT1oKHRoaXNbZF0sY1tkXSl9aWYoYy50PHRoaXMudCl7Zz1jLnMmdGhpcy5ETTtmb3IoZD1iO2Q8dGhpcy50OysrZCl7ZVtkXT1oKHRoaXNbZF0sZyl9ZS50PXRoaXMudH1lbHNle2c9dGhpcy5zJnRoaXMuRE07Zm9yKGQ9YjtkPGMudDsrK2Qpe2VbZF09aChnLGNbZF0pfWUudD1jLnR9ZS5zPWgodGhpcy5zLGMucyk7ZS5jbGFtcCgpfWZ1bmN0aW9uIG9wX2FuZChhLGIpe3JldHVybiBhJmJ9ZnVuY3Rpb24gYm5BbmQoYil7dmFyIGM9bmJpKCk7dGhpcy5iaXR3aXNlVG8oYixvcF9hbmQsYyk7cmV0dXJuIGN9ZnVuY3Rpb24gb3Bfb3IoYSxiKXtyZXR1cm4gYXxifWZ1bmN0aW9uIGJuT3IoYil7dmFyIGM9bmJpKCk7dGhpcy5iaXR3aXNlVG8oYixvcF9vcixjKTtyZXR1cm4gY31mdW5jdGlvbiBvcF94b3IoYSxiKXtyZXR1cm4gYV5ifWZ1bmN0aW9uIGJuWG9yKGIpe3ZhciBjPW5iaSgpO3RoaXMuYml0d2lzZVRvKGIsb3BfeG9yLGMpO3JldHVybiBjfWZ1bmN0aW9uIG9wX2FuZG5vdChhLGIpe3JldHVybiBhJn5ifWZ1bmN0aW9uIGJuQW5kTm90KGIpe3ZhciBjPW5iaSgpO3RoaXMuYml0d2lzZVRvKGIsb3BfYW5kbm90LGMpO3JldHVybiBjfWZ1bmN0aW9uIGJuTm90KCl7dmFyIGI9bmJpKCk7Zm9yKHZhciBhPTA7YTx0aGlzLnQ7KythKXtiW2FdPXRoaXMuRE0mfnRoaXNbYV19Yi50PXRoaXMudDtiLnM9fnRoaXMucztyZXR1cm4gYn1mdW5jdGlvbiBiblNoaWZ0TGVmdChiKXt2YXIgYT1uYmkoKTtpZihiPDApe3RoaXMuclNoaWZ0VG8oLWIsYSl9ZWxzZXt0aGlzLmxTaGlmdFRvKGIsYSl9cmV0dXJuIGF9ZnVuY3Rpb24gYm5TaGlmdFJpZ2h0KGIpe3ZhciBhPW5iaSgpO2lmKGI8MCl7dGhpcy5sU2hpZnRUbygtYixhKX1lbHNle3RoaXMuclNoaWZ0VG8oYixhKX1yZXR1cm4gYX1mdW5jdGlvbiBsYml0KGEpe2lmKGE9PTApe3JldHVybiAtMX12YXIgYj0wO2lmKChhJjY1NTM1KT09MCl7YT4+PTE2O2IrPTE2fWlmKChhJjI1NSk9PTApe2E+Pj04O2IrPTh9aWYoKGEmMTUpPT0wKXthPj49NDtiKz00fWlmKChhJjMpPT0wKXthPj49MjtiKz0yfWlmKChhJjEpPT0wKXsrK2J9cmV0dXJuIGJ9ZnVuY3Rpb24gYm5HZXRMb3dlc3RTZXRCaXQoKXtmb3IodmFyIGE9MDthPHRoaXMudDsrK2Epe2lmKHRoaXNbYV0hPTApe3JldHVybiBhKnRoaXMuREIrbGJpdCh0aGlzW2FdKX19aWYodGhpcy5zPDApe3JldHVybiB0aGlzLnQqdGhpcy5EQn1yZXR1cm4gLTF9ZnVuY3Rpb24gY2JpdChhKXt2YXIgYj0wO3doaWxlKGEhPTApe2EmPWEtMTsrK2J9cmV0dXJuIGJ9ZnVuY3Rpb24gYm5CaXRDb3VudCgpe3ZhciBjPTAsYT10aGlzLnMmdGhpcy5ETTtmb3IodmFyIGI9MDtiPHRoaXMudDsrK2Ipe2MrPWNiaXQodGhpc1tiXV5hKX1yZXR1cm4gY31mdW5jdGlvbiBiblRlc3RCaXQoYil7dmFyIGE9TWF0aC5mbG9vcihiL3RoaXMuREIpO2lmKGE+PXRoaXMudCl7cmV0dXJuKHRoaXMucyE9MCl9cmV0dXJuKCh0aGlzW2FdJigxPDwoYiV0aGlzLkRCKSkpIT0wKX1mdW5jdGlvbiBibnBDaGFuZ2VCaXQoYyxiKXt2YXIgYT1CaWdJbnRlZ2VyLk9ORS5zaGlmdExlZnQoYyk7dGhpcy5iaXR3aXNlVG8oYSxiLGEpO3JldHVybiBhfWZ1bmN0aW9uIGJuU2V0Qml0KGEpe3JldHVybiB0aGlzLmNoYW5nZUJpdChhLG9wX29yKX1mdW5jdGlvbiBibkNsZWFyQml0KGEpe3JldHVybiB0aGlzLmNoYW5nZUJpdChhLG9wX2FuZG5vdCl9ZnVuY3Rpb24gYm5GbGlwQml0KGEpe3JldHVybiB0aGlzLmNoYW5nZUJpdChhLG9wX3hvcil9ZnVuY3Rpb24gYm5wQWRkVG8oZCxmKXt2YXIgZT0wLGc9MCxiPU1hdGgubWluKGQudCx0aGlzLnQpO3doaWxlKGU8Yil7Zys9dGhpc1tlXStkW2VdO2ZbZSsrXT1nJnRoaXMuRE07Zz4+PXRoaXMuREJ9aWYoZC50PHRoaXMudCl7Zys9ZC5zO3doaWxlKGU8dGhpcy50KXtnKz10aGlzW2VdO2ZbZSsrXT1nJnRoaXMuRE07Zz4+PXRoaXMuREJ9Zys9dGhpcy5zfWVsc2V7Zys9dGhpcy5zO3doaWxlKGU8ZC50KXtnKz1kW2VdO2ZbZSsrXT1nJnRoaXMuRE07Zz4+PXRoaXMuREJ9Zys9ZC5zfWYucz0oZzwwKT8tMTowO2lmKGc+MCl7ZltlKytdPWd9ZWxzZXtpZihnPC0xKXtmW2UrK109dGhpcy5EVitnfX1mLnQ9ZTtmLmNsYW1wKCl9ZnVuY3Rpb24gYm5BZGQoYil7dmFyIGM9bmJpKCk7dGhpcy5hZGRUbyhiLGMpO3JldHVybiBjfWZ1bmN0aW9uIGJuU3VidHJhY3QoYil7dmFyIGM9bmJpKCk7dGhpcy5zdWJUbyhiLGMpO3JldHVybiBjfWZ1bmN0aW9uIGJuTXVsdGlwbHkoYil7dmFyIGM9bmJpKCk7dGhpcy5tdWx0aXBseVRvKGIsYyk7cmV0dXJuIGN9ZnVuY3Rpb24gYm5TcXVhcmUoKXt2YXIgYT1uYmkoKTt0aGlzLnNxdWFyZVRvKGEpO3JldHVybiBhfWZ1bmN0aW9uIGJuRGl2aWRlKGIpe3ZhciBjPW5iaSgpO3RoaXMuZGl2UmVtVG8oYixjLG51bGwpO3JldHVybiBjfWZ1bmN0aW9uIGJuUmVtYWluZGVyKGIpe3ZhciBjPW5iaSgpO3RoaXMuZGl2UmVtVG8oYixudWxsLGMpO3JldHVybiBjfWZ1bmN0aW9uIGJuRGl2aWRlQW5kUmVtYWluZGVyKGIpe3ZhciBkPW5iaSgpLGM9bmJpKCk7dGhpcy5kaXZSZW1UbyhiLGQsYyk7cmV0dXJuIG5ldyBBcnJheShkLGMpfWZ1bmN0aW9uIGJucERNdWx0aXBseShhKXt0aGlzW3RoaXMudF09dGhpcy5hbSgwLGEtMSx0aGlzLDAsMCx0aGlzLnQpOysrdGhpcy50O3RoaXMuY2xhbXAoKX1mdW5jdGlvbiBibnBEQWRkT2Zmc2V0KGIsYSl7aWYoYj09MCl7cmV0dXJufXdoaWxlKHRoaXMudDw9YSl7dGhpc1t0aGlzLnQrK109MH10aGlzW2FdKz1iO3doaWxlKHRoaXNbYV0+PXRoaXMuRFYpe3RoaXNbYV0tPXRoaXMuRFY7aWYoKythPj10aGlzLnQpe3RoaXNbdGhpcy50KytdPTB9Kyt0aGlzW2FdfX1mdW5jdGlvbiBOdWxsRXhwKCl7fWZ1bmN0aW9uIG5Ob3AoYSl7cmV0dXJuIGF9ZnVuY3Rpb24gbk11bFRvKGEsYyxiKXthLm11bHRpcGx5VG8oYyxiKX1mdW5jdGlvbiBuU3FyVG8oYSxiKXthLnNxdWFyZVRvKGIpfU51bGxFeHAucHJvdG90eXBlLmNvbnZlcnQ9bk5vcDtOdWxsRXhwLnByb3RvdHlwZS5yZXZlcnQ9bk5vcDtOdWxsRXhwLnByb3RvdHlwZS5tdWxUbz1uTXVsVG87TnVsbEV4cC5wcm90b3R5cGUuc3FyVG89blNxclRvO2Z1bmN0aW9uIGJuUG93KGEpe3JldHVybiB0aGlzLmV4cChhLG5ldyBOdWxsRXhwKCkpfWZ1bmN0aW9uIGJucE11bHRpcGx5TG93ZXJUbyhiLGYsZSl7dmFyIGQ9TWF0aC5taW4odGhpcy50K2IudCxmKTtlLnM9MDtlLnQ9ZDt3aGlsZShkPjApe2VbLS1kXT0wfXZhciBjO2ZvcihjPWUudC10aGlzLnQ7ZDxjOysrZCl7ZVtkK3RoaXMudF09dGhpcy5hbSgwLGJbZF0sZSxkLDAsdGhpcy50KX1mb3IoYz1NYXRoLm1pbihiLnQsZik7ZDxjOysrZCl7dGhpcy5hbSgwLGJbZF0sZSxkLDAsZi1kKX1lLmNsYW1wKCl9ZnVuY3Rpb24gYm5wTXVsdGlwbHlVcHBlclRvKGIsZSxkKXstLWU7dmFyIGM9ZC50PXRoaXMudCtiLnQtZTtkLnM9MDt3aGlsZSgtLWM+PTApe2RbY109MH1mb3IoYz1NYXRoLm1heChlLXRoaXMudCwwKTtjPGIudDsrK2Mpe2RbdGhpcy50K2MtZV09dGhpcy5hbShlLWMsYltjXSxkLDAsMCx0aGlzLnQrYy1lKX1kLmNsYW1wKCk7ZC5kclNoaWZ0VG8oMSxkKX1mdW5jdGlvbiBCYXJyZXR0KGEpe3RoaXMucjI9bmJpKCk7dGhpcy5xMz1uYmkoKTtCaWdJbnRlZ2VyLk9ORS5kbFNoaWZ0VG8oMiphLnQsdGhpcy5yMik7dGhpcy5tdT10aGlzLnIyLmRpdmlkZShhKTt0aGlzLm09YX1mdW5jdGlvbiBiYXJyZXR0Q29udmVydChhKXtpZihhLnM8MHx8YS50PjIqdGhpcy5tLnQpe3JldHVybiBhLm1vZCh0aGlzLm0pfWVsc2V7aWYoYS5jb21wYXJlVG8odGhpcy5tKTwwKXtyZXR1cm4gYX1lbHNle3ZhciBiPW5iaSgpO2EuY29weVRvKGIpO3RoaXMucmVkdWNlKGIpO3JldHVybiBifX19ZnVuY3Rpb24gYmFycmV0dFJldmVydChhKXtyZXR1cm4gYX1mdW5jdGlvbiBiYXJyZXR0UmVkdWNlKGEpe2EuZHJTaGlmdFRvKHRoaXMubS50LTEsdGhpcy5yMik7aWYoYS50PnRoaXMubS50KzEpe2EudD10aGlzLm0udCsxO2EuY2xhbXAoKX10aGlzLm11Lm11bHRpcGx5VXBwZXJUbyh0aGlzLnIyLHRoaXMubS50KzEsdGhpcy5xMyk7dGhpcy5tLm11bHRpcGx5TG93ZXJUbyh0aGlzLnEzLHRoaXMubS50KzEsdGhpcy5yMik7d2hpbGUoYS5jb21wYXJlVG8odGhpcy5yMik8MCl7YS5kQWRkT2Zmc2V0KDEsdGhpcy5tLnQrMSl9YS5zdWJUbyh0aGlzLnIyLGEpO3doaWxlKGEuY29tcGFyZVRvKHRoaXMubSk+PTApe2Euc3ViVG8odGhpcy5tLGEpfX1mdW5jdGlvbiBiYXJyZXR0U3FyVG8oYSxiKXthLnNxdWFyZVRvKGIpO3RoaXMucmVkdWNlKGIpfWZ1bmN0aW9uIGJhcnJldHRNdWxUbyhhLGMsYil7YS5tdWx0aXBseVRvKGMsYik7dGhpcy5yZWR1Y2UoYil9QmFycmV0dC5wcm90b3R5cGUuY29udmVydD1iYXJyZXR0Q29udmVydDtCYXJyZXR0LnByb3RvdHlwZS5yZXZlcnQ9YmFycmV0dFJldmVydDtCYXJyZXR0LnByb3RvdHlwZS5yZWR1Y2U9YmFycmV0dFJlZHVjZTtCYXJyZXR0LnByb3RvdHlwZS5tdWxUbz1iYXJyZXR0TXVsVG87QmFycmV0dC5wcm90b3R5cGUuc3FyVG89YmFycmV0dFNxclRvO2Z1bmN0aW9uIGJuTW9kUG93KHEsZil7dmFyIG89cS5iaXRMZW5ndGgoKSxoLGI9bmJ2KDEpLHY7aWYobzw9MCl7cmV0dXJuIGJ9ZWxzZXtpZihvPDE4KXtoPTF9ZWxzZXtpZihvPDQ4KXtoPTN9ZWxzZXtpZihvPDE0NCl7aD00fWVsc2V7aWYobzw3Njgpe2g9NX1lbHNle2g9Nn19fX19aWYobzw4KXt2PW5ldyBDbGFzc2ljKGYpfWVsc2V7aWYoZi5pc0V2ZW4oKSl7dj1uZXcgQmFycmV0dChmKX1lbHNle3Y9bmV3IE1vbnRnb21lcnkoZil9fXZhciBwPW5ldyBBcnJheSgpLGQ9MyxzPWgtMSxhPSgxPDxoKS0xO3BbMV09di5jb252ZXJ0KHRoaXMpO2lmKGg+MSl7dmFyIEE9bmJpKCk7di5zcXJUbyhwWzFdLEEpO3doaWxlKGQ8PWEpe3BbZF09bmJpKCk7di5tdWxUbyhBLHBbZC0yXSxwW2RdKTtkKz0yfX12YXIgbD1xLnQtMSx4LHU9dHJ1ZSxjPW5iaSgpLHk7bz1uYml0cyhxW2xdKS0xO3doaWxlKGw+PTApe2lmKG8+PXMpe3g9KHFbbF0+PihvLXMpKSZhfWVsc2V7eD0ocVtsXSYoKDE8PChvKzEpKS0xKSk8PChzLW8pO2lmKGw+MCl7eHw9cVtsLTFdPj4odGhpcy5EQitvLXMpfX1kPWg7d2hpbGUoKHgmMSk9PTApe3g+Pj0xOy0tZH1pZigoby09ZCk8MCl7bys9dGhpcy5EQjstLWx9aWYodSl7cFt4XS5jb3B5VG8oYik7dT1mYWxzZX1lbHNle3doaWxlKGQ+MSl7di5zcXJUbyhiLGMpO3Yuc3FyVG8oYyxiKTtkLT0yfWlmKGQ+MCl7di5zcXJUbyhiLGMpfWVsc2V7eT1iO2I9YztjPXl9di5tdWxUbyhjLHBbeF0sYil9d2hpbGUobD49MCYmKHFbbF0mKDE8PG8pKT09MCl7di5zcXJUbyhiLGMpO3k9YjtiPWM7Yz15O2lmKC0tbzwwKXtvPXRoaXMuREItMTstLWx9fX1yZXR1cm4gdi5yZXZlcnQoYil9ZnVuY3Rpb24gYm5HQ0QoYyl7dmFyIGI9KHRoaXMuczwwKT90aGlzLm5lZ2F0ZSgpOnRoaXMuY2xvbmUoKTt2YXIgaD0oYy5zPDApP2MubmVnYXRlKCk6Yy5jbG9uZSgpO2lmKGIuY29tcGFyZVRvKGgpPDApe3ZhciBlPWI7Yj1oO2g9ZX12YXIgZD1iLmdldExvd2VzdFNldEJpdCgpLGY9aC5nZXRMb3dlc3RTZXRCaXQoKTtpZihmPDApe3JldHVybiBifWlmKGQ8Zil7Zj1kfWlmKGY+MCl7Yi5yU2hpZnRUbyhmLGIpO2guclNoaWZ0VG8oZixoKX13aGlsZShiLnNpZ251bSgpPjApe2lmKChkPWIuZ2V0TG93ZXN0U2V0Qml0KCkpPjApe2IuclNoaWZ0VG8oZCxiKX1pZigoZD1oLmdldExvd2VzdFNldEJpdCgpKT4wKXtoLnJTaGlmdFRvKGQsaCl9aWYoYi5jb21wYXJlVG8oaCk+PTApe2Iuc3ViVG8oaCxiKTtiLnJTaGlmdFRvKDEsYil9ZWxzZXtoLnN1YlRvKGIsaCk7aC5yU2hpZnRUbygxLGgpfX1pZihmPjApe2gubFNoaWZ0VG8oZixoKX1yZXR1cm4gaH1mdW5jdGlvbiBibnBNb2RJbnQoZSl7aWYoZTw9MCl7cmV0dXJuIDB9dmFyIGM9dGhpcy5EViVlLGI9KHRoaXMuczwwKT9lLTE6MDtpZih0aGlzLnQ+MCl7aWYoYz09MCl7Yj10aGlzWzBdJWV9ZWxzZXtmb3IodmFyIGE9dGhpcy50LTE7YT49MDstLWEpe2I9KGMqYit0aGlzW2FdKSVlfX19cmV0dXJuIGJ9ZnVuY3Rpb24gYm5Nb2RJbnZlcnNlKGYpe3ZhciBqPWYuaXNFdmVuKCk7aWYoKHRoaXMuaXNFdmVuKCkmJmopfHxmLnNpZ251bSgpPT0wKXtyZXR1cm4gQmlnSW50ZWdlci5aRVJPfXZhciBpPWYuY2xvbmUoKSxoPXRoaXMuY2xvbmUoKTt2YXIgZz1uYnYoMSksZT1uYnYoMCksbD1uYnYoMCksaz1uYnYoMSk7d2hpbGUoaS5zaWdudW0oKSE9MCl7d2hpbGUoaS5pc0V2ZW4oKSl7aS5yU2hpZnRUbygxLGkpO2lmKGope2lmKCFnLmlzRXZlbigpfHwhZS5pc0V2ZW4oKSl7Zy5hZGRUbyh0aGlzLGcpO2Uuc3ViVG8oZixlKX1nLnJTaGlmdFRvKDEsZyl9ZWxzZXtpZighZS5pc0V2ZW4oKSl7ZS5zdWJUbyhmLGUpfX1lLnJTaGlmdFRvKDEsZSl9d2hpbGUoaC5pc0V2ZW4oKSl7aC5yU2hpZnRUbygxLGgpO2lmKGope2lmKCFsLmlzRXZlbigpfHwhay5pc0V2ZW4oKSl7bC5hZGRUbyh0aGlzLGwpO2suc3ViVG8oZixrKX1sLnJTaGlmdFRvKDEsbCl9ZWxzZXtpZighay5pc0V2ZW4oKSl7ay5zdWJUbyhmLGspfX1rLnJTaGlmdFRvKDEsayl9aWYoaS5jb21wYXJlVG8oaCk+PTApe2kuc3ViVG8oaCxpKTtpZihqKXtnLnN1YlRvKGwsZyl9ZS5zdWJUbyhrLGUpfWVsc2V7aC5zdWJUbyhpLGgpO2lmKGope2wuc3ViVG8oZyxsKX1rLnN1YlRvKGUsayl9fWlmKGguY29tcGFyZVRvKEJpZ0ludGVnZXIuT05FKSE9MCl7cmV0dXJuIEJpZ0ludGVnZXIuWkVST31pZihrLmNvbXBhcmVUbyhmKT49MCl7cmV0dXJuIGsuc3VidHJhY3QoZil9aWYoay5zaWdudW0oKTwwKXtrLmFkZFRvKGYsayl9ZWxzZXtyZXR1cm4ga31pZihrLnNpZ251bSgpPDApe3JldHVybiBrLmFkZChmKX1lbHNle3JldHVybiBrfX12YXIgbG93cHJpbWVzPVsyLDMsNSw3LDExLDEzLDE3LDE5LDIzLDI5LDMxLDM3LDQxLDQzLDQ3LDUzLDU5LDYxLDY3LDcxLDczLDc5LDgzLDg5LDk3LDEwMSwxMDMsMTA3LDEwOSwxMTMsMTI3LDEzMSwxMzcsMTM5LDE0OSwxNTEsMTU3LDE2MywxNjcsMTczLDE3OSwxODEsMTkxLDE5MywxOTcsMTk5LDIxMSwyMjMsMjI3LDIyOSwyMzMsMjM5LDI0MSwyNTEsMjU3LDI2MywyNjksMjcxLDI3NywyODEsMjgzLDI5MywzMDcsMzExLDMxMywzMTcsMzMxLDMzNywzNDcsMzQ5LDM1MywzNTksMzY3LDM3MywzNzksMzgzLDM4OSwzOTcsNDAxLDQwOSw0MTksNDIxLDQzMSw0MzMsNDM5LDQ0Myw0NDksNDU3LDQ2MSw0NjMsNDY3LDQ3OSw0ODcsNDkxLDQ5OSw1MDMsNTA5LDUyMSw1MjMsNTQxLDU0Nyw1NTcsNTYzLDU2OSw1NzEsNTc3LDU4Nyw1OTMsNTk5LDYwMSw2MDcsNjEzLDYxNyw2MTksNjMxLDY0MSw2NDMsNjQ3LDY1Myw2NTksNjYxLDY3Myw2NzcsNjgzLDY5MSw3MDEsNzA5LDcxOSw3MjcsNzMzLDczOSw3NDMsNzUxLDc1Nyw3NjEsNzY5LDc3Myw3ODcsNzk3LDgwOSw4MTEsODIxLDgyMyw4MjcsODI5LDgzOSw4NTMsODU3LDg1OSw4NjMsODc3LDg4MSw4ODMsODg3LDkwNyw5MTEsOTE5LDkyOSw5MzcsOTQxLDk0Nyw5NTMsOTY3LDk3MSw5NzcsOTgzLDk5MSw5OTddO3ZhciBscGxpbT0oMTw8MjYpL2xvd3ByaW1lc1tsb3dwcmltZXMubGVuZ3RoLTFdO2Z1bmN0aW9uIGJuSXNQcm9iYWJsZVByaW1lKGUpe3ZhciBkLGI9dGhpcy5hYnMoKTtpZihiLnQ9PTEmJmJbMF08PWxvd3ByaW1lc1tsb3dwcmltZXMubGVuZ3RoLTFdKXtmb3IoZD0wO2Q8bG93cHJpbWVzLmxlbmd0aDsrK2Qpe2lmKGJbMF09PWxvd3ByaW1lc1tkXSl7cmV0dXJuIHRydWV9fXJldHVybiBmYWxzZX1pZihiLmlzRXZlbigpKXtyZXR1cm4gZmFsc2V9ZD0xO3doaWxlKGQ8bG93cHJpbWVzLmxlbmd0aCl7dmFyIGE9bG93cHJpbWVzW2RdLGM9ZCsxO3doaWxlKGM8bG93cHJpbWVzLmxlbmd0aCYmYTxscGxpbSl7YSo9bG93cHJpbWVzW2MrK119YT1iLm1vZEludChhKTt3aGlsZShkPGMpe2lmKGElbG93cHJpbWVzW2QrK109PTApe3JldHVybiBmYWxzZX19fXJldHVybiBiLm1pbGxlclJhYmluKGUpfWZ1bmN0aW9uIGJucE1pbGxlclJhYmluKGYpe3ZhciBnPXRoaXMuc3VidHJhY3QoQmlnSW50ZWdlci5PTkUpO3ZhciBjPWcuZ2V0TG93ZXN0U2V0Qml0KCk7aWYoYzw9MCl7cmV0dXJuIGZhbHNlfXZhciBoPWcuc2hpZnRSaWdodChjKTtmPShmKzEpPj4xO2lmKGY+bG93cHJpbWVzLmxlbmd0aCl7Zj1sb3dwcmltZXMubGVuZ3RofXZhciBiPW5iaSgpO2Zvcih2YXIgZT0wO2U8ZjsrK2Upe2IuZnJvbUludChsb3dwcmltZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKmxvd3ByaW1lcy5sZW5ndGgpXSk7dmFyIGw9Yi5tb2RQb3coaCx0aGlzKTtpZihsLmNvbXBhcmVUbyhCaWdJbnRlZ2VyLk9ORSkhPTAmJmwuY29tcGFyZVRvKGcpIT0wKXt2YXIgZD0xO3doaWxlKGQrKzxjJiZsLmNvbXBhcmVUbyhnKSE9MCl7bD1sLm1vZFBvd0ludCgyLHRoaXMpO2lmKGwuY29tcGFyZVRvKEJpZ0ludGVnZXIuT05FKT09MCl7cmV0dXJuIGZhbHNlfX1pZihsLmNvbXBhcmVUbyhnKSE9MCl7cmV0dXJuIGZhbHNlfX19cmV0dXJuIHRydWV9QmlnSW50ZWdlci5wcm90b3R5cGUuY2h1bmtTaXplPWJucENodW5rU2l6ZTtCaWdJbnRlZ2VyLnByb3RvdHlwZS50b1JhZGl4PWJucFRvUmFkaXg7QmlnSW50ZWdlci5wcm90b3R5cGUuZnJvbVJhZGl4PWJucEZyb21SYWRpeDtCaWdJbnRlZ2VyLnByb3RvdHlwZS5mcm9tTnVtYmVyPWJucEZyb21OdW1iZXI7QmlnSW50ZWdlci5wcm90b3R5cGUuYml0d2lzZVRvPWJucEJpdHdpc2VUbztCaWdJbnRlZ2VyLnByb3RvdHlwZS5jaGFuZ2VCaXQ9Ym5wQ2hhbmdlQml0O0JpZ0ludGVnZXIucHJvdG90eXBlLmFkZFRvPWJucEFkZFRvO0JpZ0ludGVnZXIucHJvdG90eXBlLmRNdWx0aXBseT1ibnBETXVsdGlwbHk7QmlnSW50ZWdlci5wcm90b3R5cGUuZEFkZE9mZnNldD1ibnBEQWRkT2Zmc2V0O0JpZ0ludGVnZXIucHJvdG90eXBlLm11bHRpcGx5TG93ZXJUbz1ibnBNdWx0aXBseUxvd2VyVG87QmlnSW50ZWdlci5wcm90b3R5cGUubXVsdGlwbHlVcHBlclRvPWJucE11bHRpcGx5VXBwZXJUbztCaWdJbnRlZ2VyLnByb3RvdHlwZS5tb2RJbnQ9Ym5wTW9kSW50O0JpZ0ludGVnZXIucHJvdG90eXBlLm1pbGxlclJhYmluPWJucE1pbGxlclJhYmluO0JpZ0ludGVnZXIucHJvdG90eXBlLmNsb25lPWJuQ2xvbmU7QmlnSW50ZWdlci5wcm90b3R5cGUuaW50VmFsdWU9Ym5JbnRWYWx1ZTtCaWdJbnRlZ2VyLnByb3RvdHlwZS5ieXRlVmFsdWU9Ym5CeXRlVmFsdWU7QmlnSW50ZWdlci5wcm90b3R5cGUuc2hvcnRWYWx1ZT1iblNob3J0VmFsdWU7QmlnSW50ZWdlci5wcm90b3R5cGUuc2lnbnVtPWJuU2lnTnVtO0JpZ0ludGVnZXIucHJvdG90eXBlLnRvQnl0ZUFycmF5PWJuVG9CeXRlQXJyYXk7QmlnSW50ZWdlci5wcm90b3R5cGUuZXF1YWxzPWJuRXF1YWxzO0JpZ0ludGVnZXIucHJvdG90eXBlLm1pbj1ibk1pbjtCaWdJbnRlZ2VyLnByb3RvdHlwZS5tYXg9Ym5NYXg7QmlnSW50ZWdlci5wcm90b3R5cGUuYW5kPWJuQW5kO0JpZ0ludGVnZXIucHJvdG90eXBlLm9yPWJuT3I7QmlnSW50ZWdlci5wcm90b3R5cGUueG9yPWJuWG9yO0JpZ0ludGVnZXIucHJvdG90eXBlLmFuZE5vdD1ibkFuZE5vdDtCaWdJbnRlZ2VyLnByb3RvdHlwZS5ub3Q9Ym5Ob3Q7QmlnSW50ZWdlci5wcm90b3R5cGUuc2hpZnRMZWZ0PWJuU2hpZnRMZWZ0O0JpZ0ludGVnZXIucHJvdG90eXBlLnNoaWZ0UmlnaHQ9Ym5TaGlmdFJpZ2h0O0JpZ0ludGVnZXIucHJvdG90eXBlLmdldExvd2VzdFNldEJpdD1ibkdldExvd2VzdFNldEJpdDtCaWdJbnRlZ2VyLnByb3RvdHlwZS5iaXRDb3VudD1ibkJpdENvdW50O0JpZ0ludGVnZXIucHJvdG90eXBlLnRlc3RCaXQ9Ym5UZXN0Qml0O0JpZ0ludGVnZXIucHJvdG90eXBlLnNldEJpdD1iblNldEJpdDtCaWdJbnRlZ2VyLnByb3RvdHlwZS5jbGVhckJpdD1ibkNsZWFyQml0O0JpZ0ludGVnZXIucHJvdG90eXBlLmZsaXBCaXQ9Ym5GbGlwQml0O0JpZ0ludGVnZXIucHJvdG90eXBlLmFkZD1ibkFkZDtCaWdJbnRlZ2VyLnByb3RvdHlwZS5zdWJ0cmFjdD1iblN1YnRyYWN0O0JpZ0ludGVnZXIucHJvdG90eXBlLm11bHRpcGx5PWJuTXVsdGlwbHk7QmlnSW50ZWdlci5wcm90b3R5cGUuZGl2aWRlPWJuRGl2aWRlO0JpZ0ludGVnZXIucHJvdG90eXBlLnJlbWFpbmRlcj1iblJlbWFpbmRlcjtCaWdJbnRlZ2VyLnByb3RvdHlwZS5kaXZpZGVBbmRSZW1haW5kZXI9Ym5EaXZpZGVBbmRSZW1haW5kZXI7QmlnSW50ZWdlci5wcm90b3R5cGUubW9kUG93PWJuTW9kUG93O0JpZ0ludGVnZXIucHJvdG90eXBlLm1vZEludmVyc2U9Ym5Nb2RJbnZlcnNlO0JpZ0ludGVnZXIucHJvdG90eXBlLnBvdz1iblBvdztCaWdJbnRlZ2VyLnByb3RvdHlwZS5nY2Q9Ym5HQ0Q7QmlnSW50ZWdlci5wcm90b3R5cGUuaXNQcm9iYWJsZVByaW1lPWJuSXNQcm9iYWJsZVByaW1lO0JpZ0ludGVnZXIucHJvdG90eXBlLnNxdWFyZT1iblNxdWFyZTsNCi8qISAoYykgVG9tIFd1IHwgaHR0cDovL3d3dy1jcy1zdHVkZW50cy5zdGFuZm9yZC5lZHUvfnRqdy9qc2JuLw0KICovDQpmdW5jdGlvbiBBcmNmb3VyKCl7dGhpcy5pPTA7dGhpcy5qPTA7dGhpcy5TPW5ldyBBcnJheSgpfWZ1bmN0aW9uIEFSQzRpbml0KGQpe3ZhciBjLGEsYjtmb3IoYz0wO2M8MjU2OysrYyl7dGhpcy5TW2NdPWN9YT0wO2ZvcihjPTA7YzwyNTY7KytjKXthPShhK3RoaXMuU1tjXStkW2MlZC5sZW5ndGhdKSYyNTU7Yj10aGlzLlNbY107dGhpcy5TW2NdPXRoaXMuU1thXTt0aGlzLlNbYV09Yn10aGlzLmk9MDt0aGlzLmo9MH1mdW5jdGlvbiBBUkM0bmV4dCgpe3ZhciBhO3RoaXMuaT0odGhpcy5pKzEpJjI1NTt0aGlzLmo9KHRoaXMuait0aGlzLlNbdGhpcy5pXSkmMjU1O2E9dGhpcy5TW3RoaXMuaV07dGhpcy5TW3RoaXMuaV09dGhpcy5TW3RoaXMual07dGhpcy5TW3RoaXMual09YTtyZXR1cm4gdGhpcy5TWyhhK3RoaXMuU1t0aGlzLmldKSYyNTVdfUFyY2ZvdXIucHJvdG90eXBlLmluaXQ9QVJDNGluaXQ7QXJjZm91ci5wcm90b3R5cGUubmV4dD1BUkM0bmV4dDtmdW5jdGlvbiBwcm5nX25ld3N0YXRlKCl7cmV0dXJuIG5ldyBBcmNmb3VyKCl9dmFyIHJuZ19wc2l6ZT0yNTY7DQovKiEgKGMpIFRvbSBXdSB8IGh0dHA6Ly93d3ctY3Mtc3R1ZGVudHMuc3RhbmZvcmQuZWR1L350ancvanNibi8NCiAqLw0KdmFyIHJuZ19zdGF0ZTt2YXIgcm5nX3Bvb2w7dmFyIHJuZ19wcHRyO2Z1bmN0aW9uIHJuZ19zZWVkX2ludChhKXtybmdfcG9vbFtybmdfcHB0cisrXV49YSYyNTU7cm5nX3Bvb2xbcm5nX3BwdHIrK11ePShhPj44KSYyNTU7cm5nX3Bvb2xbcm5nX3BwdHIrK11ePShhPj4xNikmMjU1O3JuZ19wb29sW3JuZ19wcHRyKytdXj0oYT4+MjQpJjI1NTtpZihybmdfcHB0cj49cm5nX3BzaXplKXtybmdfcHB0ci09cm5nX3BzaXplfX1mdW5jdGlvbiBybmdfc2VlZF90aW1lKCl7cm5nX3NlZWRfaW50KG5ldyBEYXRlKCkuZ2V0VGltZSgpKX1pZihybmdfcG9vbD09bnVsbCl7cm5nX3Bvb2w9bmV3IEFycmF5KCk7cm5nX3BwdHI9MDt2YXIgdDtpZih3aW5kb3cuY3J5cHRvJiZ3aW5kb3cuY3J5cHRvLmdldFJhbmRvbVZhbHVlcyl7dmFyIHVhPW5ldyBVaW50OEFycmF5KDMyKTt3aW5kb3cuY3J5cHRvLmdldFJhbmRvbVZhbHVlcyh1YSk7Zm9yKHQ9MDt0PDMyOysrdCl7cm5nX3Bvb2xbcm5nX3BwdHIrK109dWFbdF19fWlmKG5hdmlnYXRvci5hcHBOYW1lPT0iTmV0c2NhcGUiJiZuYXZpZ2F0b3IuYXBwVmVyc2lvbjwiNSImJndpbmRvdy5jcnlwdG8pe3ZhciB6PXdpbmRvdy5jcnlwdG8ucmFuZG9tKDMyKTtmb3IodD0wO3Q8ei5sZW5ndGg7Kyt0KXtybmdfcG9vbFtybmdfcHB0cisrXT16LmNoYXJDb2RlQXQodCkmMjU1fX13aGlsZShybmdfcHB0cjxybmdfcHNpemUpe3Q9TWF0aC5mbG9vcig2NTUzNipNYXRoLnJhbmRvbSgpKTtybmdfcG9vbFtybmdfcHB0cisrXT10Pj4+ODtybmdfcG9vbFtybmdfcHB0cisrXT10JjI1NX1ybmdfcHB0cj0wO3JuZ19zZWVkX3RpbWUoKX1mdW5jdGlvbiBybmdfZ2V0X2J5dGUoKXtpZihybmdfc3RhdGU9PW51bGwpe3JuZ19zZWVkX3RpbWUoKTtybmdfc3RhdGU9cHJuZ19uZXdzdGF0ZSgpO3JuZ19zdGF0ZS5pbml0KHJuZ19wb29sKTtmb3Iocm5nX3BwdHI9MDtybmdfcHB0cjxybmdfcG9vbC5sZW5ndGg7KytybmdfcHB0cil7cm5nX3Bvb2xbcm5nX3BwdHJdPTB9cm5nX3BwdHI9MH1yZXR1cm4gcm5nX3N0YXRlLm5leHQoKX1mdW5jdGlvbiBybmdfZ2V0X2J5dGVzKGIpe3ZhciBhO2ZvcihhPTA7YTxiLmxlbmd0aDsrK2Epe2JbYV09cm5nX2dldF9ieXRlKCl9fWZ1bmN0aW9uIFNlY3VyZVJhbmRvbSgpe31TZWN1cmVSYW5kb20ucHJvdG90eXBlLm5leHRCeXRlcz1ybmdfZ2V0X2J5dGVzOw0KLyohIChjKSBUb20gV3UgfCBodHRwOi8vd3d3LWNzLXN0dWRlbnRzLnN0YW5mb3JkLmVkdS9+dGp3L2pzYm4vDQogKi8NCmZ1bmN0aW9uIHBhcnNlQmlnSW50KGIsYSl7cmV0dXJuIG5ldyBCaWdJbnRlZ2VyKGIsYSl9ZnVuY3Rpb24gbGluZWJyayhjLGQpe3ZhciBhPSIiO3ZhciBiPTA7d2hpbGUoYitkPGMubGVuZ3RoKXthKz1jLnN1YnN0cmluZyhiLGIrZCkrIlxuIjtiKz1kfXJldHVybiBhK2Muc3Vic3RyaW5nKGIsYy5sZW5ndGgpfWZ1bmN0aW9uIGJ5dGUySGV4KGEpe2lmKGE8MTYpe3JldHVybiIwIithLnRvU3RyaW5nKDE2KX1lbHNle3JldHVybiBhLnRvU3RyaW5nKDE2KX19ZnVuY3Rpb24gcGtjczFwYWQyKGUsaCl7aWYoaDxlLmxlbmd0aCsxMSl7YWxlcnQoIk1lc3NhZ2UgdG9vIGxvbmcgZm9yIFJTQSIpO3JldHVybiBudWxsfXZhciBnPW5ldyBBcnJheSgpO3ZhciBkPWUubGVuZ3RoLTE7d2hpbGUoZD49MCYmaD4wKXt2YXIgZj1lLmNoYXJDb2RlQXQoZC0tKTtpZihmPDEyOCl7Z1stLWhdPWZ9ZWxzZXtpZigoZj4xMjcpJiYoZjwyMDQ4KSl7Z1stLWhdPShmJjYzKXwxMjg7Z1stLWhdPShmPj42KXwxOTJ9ZWxzZXtnWy0taF09KGYmNjMpfDEyODtnWy0taF09KChmPj42KSY2Myl8MTI4O2dbLS1oXT0oZj4+MTIpfDIyNH19fWdbLS1oXT0wO3ZhciBiPW5ldyBTZWN1cmVSYW5kb20oKTt2YXIgYT1uZXcgQXJyYXkoKTt3aGlsZShoPjIpe2FbMF09MDt3aGlsZShhWzBdPT0wKXtiLm5leHRCeXRlcyhhKX1nWy0taF09YVswXX1nWy0taF09MjtnWy0taF09MDtyZXR1cm4gbmV3IEJpZ0ludGVnZXIoZyl9ZnVuY3Rpb24gb2FlcF9tZ2YxX2FycihjLGEsZSl7dmFyIGI9IiIsZD0wO3doaWxlKGIubGVuZ3RoPGEpe2IrPWUoU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsYy5jb25jYXQoWyhkJjQyNzgxOTAwODApPj4yNCwoZCYxNjcxMTY4MCk+PjE2LChkJjY1MjgwKT4+OCxkJjI1NV0pKSk7ZCs9MX1yZXR1cm4gYn12YXIgU0hBMV9TSVpFPTIwO2Z1bmN0aW9uIG9hZXBfcGFkKGwsYSxjKXtpZihsLmxlbmd0aCsyKlNIQTFfU0laRSsyPmEpe3Rocm93Ik1lc3NhZ2UgdG9vIGxvbmcgZm9yIFJTQSJ9dmFyIGg9IiIsZDtmb3IoZD0wO2Q8YS1sLmxlbmd0aC0yKlNIQTFfU0laRS0yO2QrPTEpe2grPSJceDAwIn12YXIgZT1yc3RyX3NoYTEoIiIpK2grIlx4MDEiK2w7dmFyIGY9bmV3IEFycmF5KFNIQTFfU0laRSk7bmV3IFNlY3VyZVJhbmRvbSgpLm5leHRCeXRlcyhmKTt2YXIgZz1vYWVwX21nZjFfYXJyKGYsZS5sZW5ndGgsY3x8cnN0cl9zaGExKTt2YXIgaz1bXTtmb3IoZD0wO2Q8ZS5sZW5ndGg7ZCs9MSl7a1tkXT1lLmNoYXJDb2RlQXQoZCleZy5jaGFyQ29kZUF0KGQpfXZhciBqPW9hZXBfbWdmMV9hcnIoayxmLmxlbmd0aCxyc3RyX3NoYTEpO3ZhciBiPVswXTtmb3IoZD0wO2Q8Zi5sZW5ndGg7ZCs9MSl7YltkKzFdPWZbZF1eai5jaGFyQ29kZUF0KGQpfXJldHVybiBuZXcgQmlnSW50ZWdlcihiLmNvbmNhdChrKSl9ZnVuY3Rpb24gUlNBS2V5KCl7dGhpcy5uPW51bGw7dGhpcy5lPTA7dGhpcy5kPW51bGw7dGhpcy5wPW51bGw7dGhpcy5xPW51bGw7dGhpcy5kbXAxPW51bGw7dGhpcy5kbXExPW51bGw7dGhpcy5jb2VmZj1udWxsfWZ1bmN0aW9uIFJTQVNldFB1YmxpYyhiLGEpe3RoaXMuaXNQdWJsaWM9dHJ1ZTtpZih0eXBlb2YgYiE9PSJzdHJpbmciKXt0aGlzLm49Yjt0aGlzLmU9YX1lbHNle2lmKGIhPW51bGwmJmEhPW51bGwmJmIubGVuZ3RoPjAmJmEubGVuZ3RoPjApe3RoaXMubj1wYXJzZUJpZ0ludChiLDE2KTt0aGlzLmU9cGFyc2VJbnQoYSwxNil9ZWxzZXthbGVydCgiSW52YWxpZCBSU0EgcHVibGljIGtleSIpfX19ZnVuY3Rpb24gUlNBRG9QdWJsaWMoYSl7cmV0dXJuIGEubW9kUG93SW50KHRoaXMuZSx0aGlzLm4pfWZ1bmN0aW9uIFJTQUVuY3J5cHQoZCl7dmFyIGE9cGtjczFwYWQyKGQsKHRoaXMubi5iaXRMZW5ndGgoKSs3KT4+Myk7aWYoYT09bnVsbCl7cmV0dXJuIG51bGx9dmFyIGU9dGhpcy5kb1B1YmxpYyhhKTtpZihlPT1udWxsKXtyZXR1cm4gbnVsbH12YXIgYj1lLnRvU3RyaW5nKDE2KTtpZigoYi5sZW5ndGgmMSk9PTApe3JldHVybiBifWVsc2V7cmV0dXJuIjAiK2J9fWZ1bmN0aW9uIFJTQUVuY3J5cHRPQUVQKGUsZCl7dmFyIGE9b2FlcF9wYWQoZSwodGhpcy5uLmJpdExlbmd0aCgpKzcpPj4zLGQpO2lmKGE9PW51bGwpe3JldHVybiBudWxsfXZhciBmPXRoaXMuZG9QdWJsaWMoYSk7aWYoZj09bnVsbCl7cmV0dXJuIG51bGx9dmFyIGI9Zi50b1N0cmluZygxNik7aWYoKGIubGVuZ3RoJjEpPT0wKXtyZXR1cm4gYn1lbHNle3JldHVybiIwIitifX1SU0FLZXkucHJvdG90eXBlLmRvUHVibGljPVJTQURvUHVibGljO1JTQUtleS5wcm90b3R5cGUuc2V0UHVibGljPVJTQVNldFB1YmxpYztSU0FLZXkucHJvdG90eXBlLmVuY3J5cHQ9UlNBRW5jcnlwdDtSU0FLZXkucHJvdG90eXBlLmVuY3J5cHRPQUVQPVJTQUVuY3J5cHRPQUVQO1JTQUtleS5wcm90b3R5cGUudHlwZT0iUlNBIjsNCi8qISAoYykgVG9tIFd1IHwgaHR0cDovL3d3dy1jcy1zdHVkZW50cy5zdGFuZm9yZC5lZHUvfnRqdy9qc2JuLw0KICovDQpmdW5jdGlvbiBwa2NzMXVucGFkMihnLGope3ZhciBhPWcudG9CeXRlQXJyYXkoKTt2YXIgZj0wO3doaWxlKGY8YS5sZW5ndGgmJmFbZl09PTApeysrZn1pZihhLmxlbmd0aC1mIT1qLTF8fGFbZl0hPTIpe3JldHVybiBudWxsfSsrZjt3aGlsZShhW2ZdIT0wKXtpZigrK2Y+PWEubGVuZ3RoKXtyZXR1cm4gbnVsbH19dmFyIGU9IiI7d2hpbGUoKytmPGEubGVuZ3RoKXt2YXIgaD1hW2ZdJjI1NTtpZihoPDEyOCl7ZSs9U3RyaW5nLmZyb21DaGFyQ29kZShoKX1lbHNle2lmKChoPjE5MSkmJihoPDIyNCkpe2UrPVN0cmluZy5mcm9tQ2hhckNvZGUoKChoJjMxKTw8Nil8KGFbZisxXSY2MykpOysrZn1lbHNle2UrPVN0cmluZy5mcm9tQ2hhckNvZGUoKChoJjE1KTw8MTIpfCgoYVtmKzFdJjYzKTw8Nil8KGFbZisyXSY2MykpO2YrPTJ9fX1yZXR1cm4gZX1mdW5jdGlvbiBvYWVwX21nZjFfc3RyKGMsYSxlKXt2YXIgYj0iIixkPTA7d2hpbGUoYi5sZW5ndGg8YSl7Yis9ZShjK1N0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLFsoZCY0Mjc4MTkwMDgwKT4+MjQsKGQmMTY3MTE2ODApPj4xNiwoZCY2NTI4MCk+PjgsZCYyNTVdKSk7ZCs9MX1yZXR1cm4gYn12YXIgU0hBMV9TSVpFPTIwO2Z1bmN0aW9uIG9hZXBfdW5wYWQobCxiLGUpe2w9bC50b0J5dGVBcnJheSgpO3ZhciBmO2ZvcihmPTA7ZjxsLmxlbmd0aDtmKz0xKXtsW2ZdJj0yNTV9d2hpbGUobC5sZW5ndGg8Yil7bC51bnNoaWZ0KDApfWw9U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsbCk7aWYobC5sZW5ndGg8MipTSEExX1NJWkUrMil7dGhyb3ciQ2lwaGVyIHRvbyBzaG9ydCJ9dmFyIGM9bC5zdWJzdHIoMSxTSEExX1NJWkUpO3ZhciBvPWwuc3Vic3RyKFNIQTFfU0laRSsxKTt2YXIgbT1vYWVwX21nZjFfc3RyKG8sU0hBMV9TSVpFLGV8fHJzdHJfc2hhMSk7dmFyIGg9W10sZjtmb3IoZj0wO2Y8Yy5sZW5ndGg7Zis9MSl7aFtmXT1jLmNoYXJDb2RlQXQoZilebS5jaGFyQ29kZUF0KGYpfXZhciBqPW9hZXBfbWdmMV9zdHIoU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsaCksbC5sZW5ndGgtU0hBMV9TSVpFLHJzdHJfc2hhMSk7dmFyIGc9W107Zm9yKGY9MDtmPG8ubGVuZ3RoO2YrPTEpe2dbZl09by5jaGFyQ29kZUF0KGYpXmouY2hhckNvZGVBdChmKX1nPVN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLGcpO2lmKGcuc3Vic3RyKDAsU0hBMV9TSVpFKSE9PXJzdHJfc2hhMSgiIikpe3Rocm93Ikhhc2ggbWlzbWF0Y2gifWc9Zy5zdWJzdHIoU0hBMV9TSVpFKTt2YXIgYT1nLmluZGV4T2YoIlx4MDEiKTt2YXIgaz0oYSE9LTEpP2cuc3Vic3RyKDAsYSkubGFzdEluZGV4T2YoIlx4MDAiKTotMTtpZihrKzEhPWEpe3Rocm93Ik1hbGZvcm1lZCBkYXRhIn1yZXR1cm4gZy5zdWJzdHIoYSsxKX1mdW5jdGlvbiBSU0FTZXRQcml2YXRlKGMsYSxiKXt0aGlzLmlzUHJpdmF0ZT10cnVlO2lmKHR5cGVvZiBjIT09InN0cmluZyIpe3RoaXMubj1jO3RoaXMuZT1hO3RoaXMuZD1ifWVsc2V7aWYoYyE9bnVsbCYmYSE9bnVsbCYmYy5sZW5ndGg+MCYmYS5sZW5ndGg+MCl7dGhpcy5uPXBhcnNlQmlnSW50KGMsMTYpO3RoaXMuZT1wYXJzZUludChhLDE2KTt0aGlzLmQ9cGFyc2VCaWdJbnQoYiwxNil9ZWxzZXthbGVydCgiSW52YWxpZCBSU0EgcHJpdmF0ZSBrZXkiKX19fWZ1bmN0aW9uIFJTQVNldFByaXZhdGVFeChnLGQsZSxjLGIsYSxoLGYpe3RoaXMuaXNQcml2YXRlPXRydWU7aWYoZz09bnVsbCl7dGhyb3ciUlNBU2V0UHJpdmF0ZUV4IE4gPT0gbnVsbCJ9aWYoZD09bnVsbCl7dGhyb3ciUlNBU2V0UHJpdmF0ZUV4IEUgPT0gbnVsbCJ9aWYoZy5sZW5ndGg9PTApe3Rocm93IlJTQVNldFByaXZhdGVFeCBOLmxlbmd0aCA9PSAwIn1pZihkLmxlbmd0aD09MCl7dGhyb3ciUlNBU2V0UHJpdmF0ZUV4IEUubGVuZ3RoID09IDAifWlmKGchPW51bGwmJmQhPW51bGwmJmcubGVuZ3RoPjAmJmQubGVuZ3RoPjApe3RoaXMubj1wYXJzZUJpZ0ludChnLDE2KTt0aGlzLmU9cGFyc2VJbnQoZCwxNik7dGhpcy5kPXBhcnNlQmlnSW50KGUsMTYpO3RoaXMucD1wYXJzZUJpZ0ludChjLDE2KTt0aGlzLnE9cGFyc2VCaWdJbnQoYiwxNik7dGhpcy5kbXAxPXBhcnNlQmlnSW50KGEsMTYpO3RoaXMuZG1xMT1wYXJzZUJpZ0ludChoLDE2KTt0aGlzLmNvZWZmPXBhcnNlQmlnSW50KGYsMTYpfWVsc2V7YWxlcnQoIkludmFsaWQgUlNBIHByaXZhdGUga2V5IGluIFJTQVNldFByaXZhdGVFeCIpfX1mdW5jdGlvbiBSU0FHZW5lcmF0ZShiLGkpe3ZhciBhPW5ldyBTZWN1cmVSYW5kb20oKTt2YXIgZj1iPj4xO3RoaXMuZT1wYXJzZUludChpLDE2KTt2YXIgYz1uZXcgQmlnSW50ZWdlcihpLDE2KTtmb3IoOzspe2Zvcig7Oyl7dGhpcy5wPW5ldyBCaWdJbnRlZ2VyKGItZiwxLGEpO2lmKHRoaXMucC5zdWJ0cmFjdChCaWdJbnRlZ2VyLk9ORSkuZ2NkKGMpLmNvbXBhcmVUbyhCaWdJbnRlZ2VyLk9ORSk9PTAmJnRoaXMucC5pc1Byb2JhYmxlUHJpbWUoMTApKXticmVha319Zm9yKDs7KXt0aGlzLnE9bmV3IEJpZ0ludGVnZXIoZiwxLGEpO2lmKHRoaXMucS5zdWJ0cmFjdChCaWdJbnRlZ2VyLk9ORSkuZ2NkKGMpLmNvbXBhcmVUbyhCaWdJbnRlZ2VyLk9ORSk9PTAmJnRoaXMucS5pc1Byb2JhYmxlUHJpbWUoMTApKXticmVha319aWYodGhpcy5wLmNvbXBhcmVUbyh0aGlzLnEpPD0wKXt2YXIgaD10aGlzLnA7dGhpcy5wPXRoaXMucTt0aGlzLnE9aH12YXIgZz10aGlzLnAuc3VidHJhY3QoQmlnSW50ZWdlci5PTkUpO3ZhciBkPXRoaXMucS5zdWJ0cmFjdChCaWdJbnRlZ2VyLk9ORSk7dmFyIGU9Zy5tdWx0aXBseShkKTtpZihlLmdjZChjKS5jb21wYXJlVG8oQmlnSW50ZWdlci5PTkUpPT0wKXt0aGlzLm49dGhpcy5wLm11bHRpcGx5KHRoaXMucSk7dGhpcy5kPWMubW9kSW52ZXJzZShlKTt0aGlzLmRtcDE9dGhpcy5kLm1vZChnKTt0aGlzLmRtcTE9dGhpcy5kLm1vZChkKTt0aGlzLmNvZWZmPXRoaXMucS5tb2RJbnZlcnNlKHRoaXMucCk7YnJlYWt9fX1mdW5jdGlvbiBSU0FEb1ByaXZhdGUoYSl7aWYodGhpcy5wPT1udWxsfHx0aGlzLnE9PW51bGwpe3JldHVybiBhLm1vZFBvdyh0aGlzLmQsdGhpcy5uKX12YXIgYz1hLm1vZCh0aGlzLnApLm1vZFBvdyh0aGlzLmRtcDEsdGhpcy5wKTt2YXIgYj1hLm1vZCh0aGlzLnEpLm1vZFBvdyh0aGlzLmRtcTEsdGhpcy5xKTt3aGlsZShjLmNvbXBhcmVUbyhiKTwwKXtjPWMuYWRkKHRoaXMucCl9cmV0dXJuIGMuc3VidHJhY3QoYikubXVsdGlwbHkodGhpcy5jb2VmZikubW9kKHRoaXMucCkubXVsdGlwbHkodGhpcy5xKS5hZGQoYil9ZnVuY3Rpb24gUlNBRGVjcnlwdChiKXt2YXIgZD1wYXJzZUJpZ0ludChiLDE2KTt2YXIgYT10aGlzLmRvUHJpdmF0ZShkKTtpZihhPT1udWxsKXtyZXR1cm4gbnVsbH1yZXR1cm4gcGtjczF1bnBhZDIoYSwodGhpcy5uLmJpdExlbmd0aCgpKzcpPj4zKX1mdW5jdGlvbiBSU0FEZWNyeXB0T0FFUChkLGIpe3ZhciBlPXBhcnNlQmlnSW50KGQsMTYpO3ZhciBhPXRoaXMuZG9Qcml2YXRlKGUpO2lmKGE9PW51bGwpe3JldHVybiBudWxsfXJldHVybiBvYWVwX3VucGFkKGEsKHRoaXMubi5iaXRMZW5ndGgoKSs3KT4+MyxiKX1SU0FLZXkucHJvdG90eXBlLmRvUHJpdmF0ZT1SU0FEb1ByaXZhdGU7UlNBS2V5LnByb3RvdHlwZS5zZXRQcml2YXRlPVJTQVNldFByaXZhdGU7UlNBS2V5LnByb3RvdHlwZS5zZXRQcml2YXRlRXg9UlNBU2V0UHJpdmF0ZUV4O1JTQUtleS5wcm90b3R5cGUuZ2VuZXJhdGU9UlNBR2VuZXJhdGU7UlNBS2V5LnByb3RvdHlwZS5kZWNyeXB0PVJTQURlY3J5cHQ7UlNBS2V5LnByb3RvdHlwZS5kZWNyeXB0T0FFUD1SU0FEZWNyeXB0T0FFUDsNCi8qISAoYykgVG9tIFd1IHwgaHR0cDovL3d3dy1jcy1zdHVkZW50cy5zdGFuZm9yZC5lZHUvfnRqdy9qc2JuLw0KICovDQpmdW5jdGlvbiBFQ0ZpZWxkRWxlbWVudEZwKGIsYSl7dGhpcy54PWE7dGhpcy5xPWJ9ZnVuY3Rpb24gZmVGcEVxdWFscyhhKXtpZihhPT10aGlzKXtyZXR1cm4gdHJ1ZX1yZXR1cm4odGhpcy5xLmVxdWFscyhhLnEpJiZ0aGlzLnguZXF1YWxzKGEueCkpfWZ1bmN0aW9uIGZlRnBUb0JpZ0ludGVnZXIoKXtyZXR1cm4gdGhpcy54fWZ1bmN0aW9uIGZlRnBOZWdhdGUoKXtyZXR1cm4gbmV3IEVDRmllbGRFbGVtZW50RnAodGhpcy5xLHRoaXMueC5uZWdhdGUoKS5tb2QodGhpcy5xKSl9ZnVuY3Rpb24gZmVGcEFkZChhKXtyZXR1cm4gbmV3IEVDRmllbGRFbGVtZW50RnAodGhpcy5xLHRoaXMueC5hZGQoYS50b0JpZ0ludGVnZXIoKSkubW9kKHRoaXMucSkpfWZ1bmN0aW9uIGZlRnBTdWJ0cmFjdChhKXtyZXR1cm4gbmV3IEVDRmllbGRFbGVtZW50RnAodGhpcy5xLHRoaXMueC5zdWJ0cmFjdChhLnRvQmlnSW50ZWdlcigpKS5tb2QodGhpcy5xKSl9ZnVuY3Rpb24gZmVGcE11bHRpcGx5KGEpe3JldHVybiBuZXcgRUNGaWVsZEVsZW1lbnRGcCh0aGlzLnEsdGhpcy54Lm11bHRpcGx5KGEudG9CaWdJbnRlZ2VyKCkpLm1vZCh0aGlzLnEpKX1mdW5jdGlvbiBmZUZwU3F1YXJlKCl7cmV0dXJuIG5ldyBFQ0ZpZWxkRWxlbWVudEZwKHRoaXMucSx0aGlzLnguc3F1YXJlKCkubW9kKHRoaXMucSkpfWZ1bmN0aW9uIGZlRnBEaXZpZGUoYSl7cmV0dXJuIG5ldyBFQ0ZpZWxkRWxlbWVudEZwKHRoaXMucSx0aGlzLngubXVsdGlwbHkoYS50b0JpZ0ludGVnZXIoKS5tb2RJbnZlcnNlKHRoaXMucSkpLm1vZCh0aGlzLnEpKX1FQ0ZpZWxkRWxlbWVudEZwLnByb3RvdHlwZS5lcXVhbHM9ZmVGcEVxdWFscztFQ0ZpZWxkRWxlbWVudEZwLnByb3RvdHlwZS50b0JpZ0ludGVnZXI9ZmVGcFRvQmlnSW50ZWdlcjtFQ0ZpZWxkRWxlbWVudEZwLnByb3RvdHlwZS5uZWdhdGU9ZmVGcE5lZ2F0ZTtFQ0ZpZWxkRWxlbWVudEZwLnByb3RvdHlwZS5hZGQ9ZmVGcEFkZDtFQ0ZpZWxkRWxlbWVudEZwLnByb3RvdHlwZS5zdWJ0cmFjdD1mZUZwU3VidHJhY3Q7RUNGaWVsZEVsZW1lbnRGcC5wcm90b3R5cGUubXVsdGlwbHk9ZmVGcE11bHRpcGx5O0VDRmllbGRFbGVtZW50RnAucHJvdG90eXBlLnNxdWFyZT1mZUZwU3F1YXJlO0VDRmllbGRFbGVtZW50RnAucHJvdG90eXBlLmRpdmlkZT1mZUZwRGl2aWRlO2Z1bmN0aW9uIEVDUG9pbnRGcChjLGEsZCxiKXt0aGlzLmN1cnZlPWM7dGhpcy54PWE7dGhpcy55PWQ7aWYoYj09bnVsbCl7dGhpcy56PUJpZ0ludGVnZXIuT05FfWVsc2V7dGhpcy56PWJ9dGhpcy56aW52PW51bGx9ZnVuY3Rpb24gcG9pbnRGcEdldFgoKXtpZih0aGlzLnppbnY9PW51bGwpe3RoaXMuemludj10aGlzLnoubW9kSW52ZXJzZSh0aGlzLmN1cnZlLnEpfXJldHVybiB0aGlzLmN1cnZlLmZyb21CaWdJbnRlZ2VyKHRoaXMueC50b0JpZ0ludGVnZXIoKS5tdWx0aXBseSh0aGlzLnppbnYpLm1vZCh0aGlzLmN1cnZlLnEpKX1mdW5jdGlvbiBwb2ludEZwR2V0WSgpe2lmKHRoaXMuemludj09bnVsbCl7dGhpcy56aW52PXRoaXMuei5tb2RJbnZlcnNlKHRoaXMuY3VydmUucSl9cmV0dXJuIHRoaXMuY3VydmUuZnJvbUJpZ0ludGVnZXIodGhpcy55LnRvQmlnSW50ZWdlcigpLm11bHRpcGx5KHRoaXMuemludikubW9kKHRoaXMuY3VydmUucSkpfWZ1bmN0aW9uIHBvaW50RnBFcXVhbHMoYSl7aWYoYT09dGhpcyl7cmV0dXJuIHRydWV9aWYodGhpcy5pc0luZmluaXR5KCkpe3JldHVybiBhLmlzSW5maW5pdHkoKX1pZihhLmlzSW5maW5pdHkoKSl7cmV0dXJuIHRoaXMuaXNJbmZpbml0eSgpfXZhciBjLGI7Yz1hLnkudG9CaWdJbnRlZ2VyKCkubXVsdGlwbHkodGhpcy56KS5zdWJ0cmFjdCh0aGlzLnkudG9CaWdJbnRlZ2VyKCkubXVsdGlwbHkoYS56KSkubW9kKHRoaXMuY3VydmUucSk7aWYoIWMuZXF1YWxzKEJpZ0ludGVnZXIuWkVSTykpe3JldHVybiBmYWxzZX1iPWEueC50b0JpZ0ludGVnZXIoKS5tdWx0aXBseSh0aGlzLnopLnN1YnRyYWN0KHRoaXMueC50b0JpZ0ludGVnZXIoKS5tdWx0aXBseShhLnopKS5tb2QodGhpcy5jdXJ2ZS5xKTtyZXR1cm4gYi5lcXVhbHMoQmlnSW50ZWdlci5aRVJPKX1mdW5jdGlvbiBwb2ludEZwSXNJbmZpbml0eSgpe2lmKCh0aGlzLng9PW51bGwpJiYodGhpcy55PT1udWxsKSl7cmV0dXJuIHRydWV9cmV0dXJuIHRoaXMuei5lcXVhbHMoQmlnSW50ZWdlci5aRVJPKSYmIXRoaXMueS50b0JpZ0ludGVnZXIoKS5lcXVhbHMoQmlnSW50ZWdlci5aRVJPKX1mdW5jdGlvbiBwb2ludEZwTmVnYXRlKCl7cmV0dXJuIG5ldyBFQ1BvaW50RnAodGhpcy5jdXJ2ZSx0aGlzLngsdGhpcy55Lm5lZ2F0ZSgpLHRoaXMueil9ZnVuY3Rpb24gcG9pbnRGcEFkZChsKXtpZih0aGlzLmlzSW5maW5pdHkoKSl7cmV0dXJuIGx9aWYobC5pc0luZmluaXR5KCkpe3JldHVybiB0aGlzfXZhciBwPWwueS50b0JpZ0ludGVnZXIoKS5tdWx0aXBseSh0aGlzLnopLnN1YnRyYWN0KHRoaXMueS50b0JpZ0ludGVnZXIoKS5tdWx0aXBseShsLnopKS5tb2QodGhpcy5jdXJ2ZS5xKTt2YXIgbz1sLngudG9CaWdJbnRlZ2VyKCkubXVsdGlwbHkodGhpcy56KS5zdWJ0cmFjdCh0aGlzLngudG9CaWdJbnRlZ2VyKCkubXVsdGlwbHkobC56KSkubW9kKHRoaXMuY3VydmUucSk7aWYoQmlnSW50ZWdlci5aRVJPLmVxdWFscyhvKSl7aWYoQmlnSW50ZWdlci5aRVJPLmVxdWFscyhwKSl7cmV0dXJuIHRoaXMudHdpY2UoKX1yZXR1cm4gdGhpcy5jdXJ2ZS5nZXRJbmZpbml0eSgpfXZhciBqPW5ldyBCaWdJbnRlZ2VyKCIzIik7dmFyIGU9dGhpcy54LnRvQmlnSW50ZWdlcigpO3ZhciBuPXRoaXMueS50b0JpZ0ludGVnZXIoKTt2YXIgYz1sLngudG9CaWdJbnRlZ2VyKCk7dmFyIGs9bC55LnRvQmlnSW50ZWdlcigpO3ZhciBtPW8uc3F1YXJlKCk7dmFyIGk9bS5tdWx0aXBseShvKTt2YXIgZD1lLm11bHRpcGx5KG0pO3ZhciBnPXAuc3F1YXJlKCkubXVsdGlwbHkodGhpcy56KTt2YXIgYT1nLnN1YnRyYWN0KGQuc2hpZnRMZWZ0KDEpKS5tdWx0aXBseShsLnopLnN1YnRyYWN0KGkpLm11bHRpcGx5KG8pLm1vZCh0aGlzLmN1cnZlLnEpO3ZhciBoPWQubXVsdGlwbHkoaikubXVsdGlwbHkocCkuc3VidHJhY3Qobi5tdWx0aXBseShpKSkuc3VidHJhY3QoZy5tdWx0aXBseShwKSkubXVsdGlwbHkobC56KS5hZGQocC5tdWx0aXBseShpKSkubW9kKHRoaXMuY3VydmUucSk7dmFyIGY9aS5tdWx0aXBseSh0aGlzLnopLm11bHRpcGx5KGwueikubW9kKHRoaXMuY3VydmUucSk7cmV0dXJuIG5ldyBFQ1BvaW50RnAodGhpcy5jdXJ2ZSx0aGlzLmN1cnZlLmZyb21CaWdJbnRlZ2VyKGEpLHRoaXMuY3VydmUuZnJvbUJpZ0ludGVnZXIoaCksZil9ZnVuY3Rpb24gcG9pbnRGcFR3aWNlKCl7aWYodGhpcy5pc0luZmluaXR5KCkpe3JldHVybiB0aGlzfWlmKHRoaXMueS50b0JpZ0ludGVnZXIoKS5zaWdudW0oKT09MCl7cmV0dXJuIHRoaXMuY3VydmUuZ2V0SW5maW5pdHkoKX12YXIgZz1uZXcgQmlnSW50ZWdlcigiMyIpO3ZhciBjPXRoaXMueC50b0JpZ0ludGVnZXIoKTt2YXIgaD10aGlzLnkudG9CaWdJbnRlZ2VyKCk7dmFyIGU9aC5tdWx0aXBseSh0aGlzLnopO3ZhciBqPWUubXVsdGlwbHkoaCkubW9kKHRoaXMuY3VydmUucSk7dmFyIGk9dGhpcy5jdXJ2ZS5hLnRvQmlnSW50ZWdlcigpO3ZhciBrPWMuc3F1YXJlKCkubXVsdGlwbHkoZyk7aWYoIUJpZ0ludGVnZXIuWkVSTy5lcXVhbHMoaSkpe2s9ay5hZGQodGhpcy56LnNxdWFyZSgpLm11bHRpcGx5KGkpKX1rPWsubW9kKHRoaXMuY3VydmUucSk7dmFyIGI9ay5zcXVhcmUoKS5zdWJ0cmFjdChjLnNoaWZ0TGVmdCgzKS5tdWx0aXBseShqKSkuc2hpZnRMZWZ0KDEpLm11bHRpcGx5KGUpLm1vZCh0aGlzLmN1cnZlLnEpO3ZhciBmPWsubXVsdGlwbHkoZykubXVsdGlwbHkoYykuc3VidHJhY3Qoai5zaGlmdExlZnQoMSkpLnNoaWZ0TGVmdCgyKS5tdWx0aXBseShqKS5zdWJ0cmFjdChrLnNxdWFyZSgpLm11bHRpcGx5KGspKS5tb2QodGhpcy5jdXJ2ZS5xKTt2YXIgZD1lLnNxdWFyZSgpLm11bHRpcGx5KGUpLnNoaWZ0TGVmdCgzKS5tb2QodGhpcy5jdXJ2ZS5xKTtyZXR1cm4gbmV3IEVDUG9pbnRGcCh0aGlzLmN1cnZlLHRoaXMuY3VydmUuZnJvbUJpZ0ludGVnZXIoYiksdGhpcy5jdXJ2ZS5mcm9tQmlnSW50ZWdlcihmKSxkKX1mdW5jdGlvbiBwb2ludEZwTXVsdGlwbHkoYil7aWYodGhpcy5pc0luZmluaXR5KCkpe3JldHVybiB0aGlzfWlmKGIuc2lnbnVtKCk9PTApe3JldHVybiB0aGlzLmN1cnZlLmdldEluZmluaXR5KCl9dmFyIGc9Yjt2YXIgZj1nLm11bHRpcGx5KG5ldyBCaWdJbnRlZ2VyKCIzIikpO3ZhciBsPXRoaXMubmVnYXRlKCk7dmFyIGQ9dGhpczt2YXIgYztmb3IoYz1mLmJpdExlbmd0aCgpLTI7Yz4wOy0tYyl7ZD1kLnR3aWNlKCk7dmFyIGE9Zi50ZXN0Qml0KGMpO3ZhciBqPWcudGVzdEJpdChjKTtpZihhIT1qKXtkPWQuYWRkKGE/dGhpczpsKX19cmV0dXJuIGR9ZnVuY3Rpb24gcG9pbnRGcE11bHRpcGx5VHdvKGMsYSxiKXt2YXIgZDtpZihjLmJpdExlbmd0aCgpPmIuYml0TGVuZ3RoKCkpe2Q9Yy5iaXRMZW5ndGgoKS0xfWVsc2V7ZD1iLmJpdExlbmd0aCgpLTF9dmFyIGY9dGhpcy5jdXJ2ZS5nZXRJbmZpbml0eSgpO3ZhciBlPXRoaXMuYWRkKGEpO3doaWxlKGQ+PTApe2Y9Zi50d2ljZSgpO2lmKGMudGVzdEJpdChkKSl7aWYoYi50ZXN0Qml0KGQpKXtmPWYuYWRkKGUpfWVsc2V7Zj1mLmFkZCh0aGlzKX19ZWxzZXtpZihiLnRlc3RCaXQoZCkpe2Y9Zi5hZGQoYSl9fS0tZH1yZXR1cm4gZn1FQ1BvaW50RnAucHJvdG90eXBlLmdldFg9cG9pbnRGcEdldFg7RUNQb2ludEZwLnByb3RvdHlwZS5nZXRZPXBvaW50RnBHZXRZO0VDUG9pbnRGcC5wcm90b3R5cGUuZXF1YWxzPXBvaW50RnBFcXVhbHM7RUNQb2ludEZwLnByb3RvdHlwZS5pc0luZmluaXR5PXBvaW50RnBJc0luZmluaXR5O0VDUG9pbnRGcC5wcm90b3R5cGUubmVnYXRlPXBvaW50RnBOZWdhdGU7RUNQb2ludEZwLnByb3RvdHlwZS5hZGQ9cG9pbnRGcEFkZDtFQ1BvaW50RnAucHJvdG90eXBlLnR3aWNlPXBvaW50RnBUd2ljZTtFQ1BvaW50RnAucHJvdG90eXBlLm11bHRpcGx5PXBvaW50RnBNdWx0aXBseTtFQ1BvaW50RnAucHJvdG90eXBlLm11bHRpcGx5VHdvPXBvaW50RnBNdWx0aXBseVR3bztmdW5jdGlvbiBFQ0N1cnZlRnAoZSxkLGMpe3RoaXMucT1lO3RoaXMuYT10aGlzLmZyb21CaWdJbnRlZ2VyKGQpO3RoaXMuYj10aGlzLmZyb21CaWdJbnRlZ2VyKGMpO3RoaXMuaW5maW5pdHk9bmV3IEVDUG9pbnRGcCh0aGlzLG51bGwsbnVsbCl9ZnVuY3Rpb24gY3VydmVGcEdldFEoKXtyZXR1cm4gdGhpcy5xfWZ1bmN0aW9uIGN1cnZlRnBHZXRBKCl7cmV0dXJuIHRoaXMuYX1mdW5jdGlvbiBjdXJ2ZUZwR2V0Qigpe3JldHVybiB0aGlzLmJ9ZnVuY3Rpb24gY3VydmVGcEVxdWFscyhhKXtpZihhPT10aGlzKXtyZXR1cm4gdHJ1ZX1yZXR1cm4odGhpcy5xLmVxdWFscyhhLnEpJiZ0aGlzLmEuZXF1YWxzKGEuYSkmJnRoaXMuYi5lcXVhbHMoYS5iKSl9ZnVuY3Rpb24gY3VydmVGcEdldEluZmluaXR5KCl7cmV0dXJuIHRoaXMuaW5maW5pdHl9ZnVuY3Rpb24gY3VydmVGcEZyb21CaWdJbnRlZ2VyKGEpe3JldHVybiBuZXcgRUNGaWVsZEVsZW1lbnRGcCh0aGlzLnEsYSl9ZnVuY3Rpb24gY3VydmVGcERlY29kZVBvaW50SGV4KGQpe3N3aXRjaChwYXJzZUludChkLnN1YnN0cigwLDIpLDE2KSl7Y2FzZSAwOnJldHVybiB0aGlzLmluZmluaXR5O2Nhc2UgMjpjYXNlIDM6cmV0dXJuIG51bGw7Y2FzZSA0OmNhc2UgNjpjYXNlIDc6dmFyIGE9KGQubGVuZ3RoLTIpLzI7dmFyIGM9ZC5zdWJzdHIoMixhKTt2YXIgYj1kLnN1YnN0cihhKzIsYSk7cmV0dXJuIG5ldyBFQ1BvaW50RnAodGhpcyx0aGlzLmZyb21CaWdJbnRlZ2VyKG5ldyBCaWdJbnRlZ2VyKGMsMTYpKSx0aGlzLmZyb21CaWdJbnRlZ2VyKG5ldyBCaWdJbnRlZ2VyKGIsMTYpKSk7ZGVmYXVsdDpyZXR1cm4gbnVsbH19RUNDdXJ2ZUZwLnByb3RvdHlwZS5nZXRRPWN1cnZlRnBHZXRRO0VDQ3VydmVGcC5wcm90b3R5cGUuZ2V0QT1jdXJ2ZUZwR2V0QTtFQ0N1cnZlRnAucHJvdG90eXBlLmdldEI9Y3VydmVGcEdldEI7RUNDdXJ2ZUZwLnByb3RvdHlwZS5lcXVhbHM9Y3VydmVGcEVxdWFscztFQ0N1cnZlRnAucHJvdG90eXBlLmdldEluZmluaXR5PWN1cnZlRnBHZXRJbmZpbml0eTtFQ0N1cnZlRnAucHJvdG90eXBlLmZyb21CaWdJbnRlZ2VyPWN1cnZlRnBGcm9tQmlnSW50ZWdlcjtFQ0N1cnZlRnAucHJvdG90eXBlLmRlY29kZVBvaW50SGV4PWN1cnZlRnBEZWNvZGVQb2ludEhleDsNCi8qISAoYykgU3RlZmFuIFRob21hcyB8IGh0dHBzOi8vZ2l0aHViLmNvbS9iaXRjb2luanMvYml0Y29pbmpzLWxpYg0KICovDQpFQ0ZpZWxkRWxlbWVudEZwLnByb3RvdHlwZS5nZXRCeXRlTGVuZ3RoPWZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguZmxvb3IoKHRoaXMudG9CaWdJbnRlZ2VyKCkuYml0TGVuZ3RoKCkrNykvOCl9O0VDUG9pbnRGcC5wcm90b3R5cGUuZ2V0RW5jb2RlZD1mdW5jdGlvbihjKXt2YXIgZD1mdW5jdGlvbihoLGYpe3ZhciBnPWgudG9CeXRlQXJyYXlVbnNpZ25lZCgpO2lmKGY8Zy5sZW5ndGgpe2c9Zy5zbGljZShnLmxlbmd0aC1mKX1lbHNle3doaWxlKGY+Zy5sZW5ndGgpe2cudW5zaGlmdCgwKX19cmV0dXJuIGd9O3ZhciBhPXRoaXMuZ2V0WCgpLnRvQmlnSW50ZWdlcigpO3ZhciBlPXRoaXMuZ2V0WSgpLnRvQmlnSW50ZWdlcigpO3ZhciBiPWQoYSwzMik7aWYoYyl7aWYoZS5pc0V2ZW4oKSl7Yi51bnNoaWZ0KDIpfWVsc2V7Yi51bnNoaWZ0KDMpfX1lbHNle2IudW5zaGlmdCg0KTtiPWIuY29uY2F0KGQoZSwzMikpfXJldHVybiBifTtFQ1BvaW50RnAuZGVjb2RlRnJvbT1mdW5jdGlvbihnLGMpe3ZhciBmPWNbMF07dmFyIGU9Yy5sZW5ndGgtMTt2YXIgZD1jLnNsaWNlKDEsMStlLzIpO3ZhciBiPWMuc2xpY2UoMStlLzIsMStlKTtkLnVuc2hpZnQoMCk7Yi51bnNoaWZ0KDApO3ZhciBhPW5ldyBCaWdJbnRlZ2VyKGQpO3ZhciBoPW5ldyBCaWdJbnRlZ2VyKGIpO3JldHVybiBuZXcgRUNQb2ludEZwKGcsZy5mcm9tQmlnSW50ZWdlcihhKSxnLmZyb21CaWdJbnRlZ2VyKGgpKX07RUNQb2ludEZwLmRlY29kZUZyb21IZXg9ZnVuY3Rpb24oZyxjKXt2YXIgZj1jLnN1YnN0cigwLDIpO3ZhciBlPWMubGVuZ3RoLTI7dmFyIGQ9Yy5zdWJzdHIoMixlLzIpO3ZhciBiPWMuc3Vic3RyKDIrZS8yLGUvMik7dmFyIGE9bmV3IEJpZ0ludGVnZXIoZCwxNik7dmFyIGg9bmV3IEJpZ0ludGVnZXIoYiwxNik7cmV0dXJuIG5ldyBFQ1BvaW50RnAoZyxnLmZyb21CaWdJbnRlZ2VyKGEpLGcuZnJvbUJpZ0ludGVnZXIoaCkpfTtFQ1BvaW50RnAucHJvdG90eXBlLmFkZDJEPWZ1bmN0aW9uKGMpe2lmKHRoaXMuaXNJbmZpbml0eSgpKXtyZXR1cm4gY31pZihjLmlzSW5maW5pdHkoKSl7cmV0dXJuIHRoaXN9aWYodGhpcy54LmVxdWFscyhjLngpKXtpZih0aGlzLnkuZXF1YWxzKGMueSkpe3JldHVybiB0aGlzLnR3aWNlKCl9cmV0dXJuIHRoaXMuY3VydmUuZ2V0SW5maW5pdHkoKX12YXIgZz1jLnguc3VidHJhY3QodGhpcy54KTt2YXIgZT1jLnkuc3VidHJhY3QodGhpcy55KTt2YXIgYT1lLmRpdmlkZShnKTt2YXIgZD1hLnNxdWFyZSgpLnN1YnRyYWN0KHRoaXMueCkuc3VidHJhY3QoYy54KTt2YXIgZj1hLm11bHRpcGx5KHRoaXMueC5zdWJ0cmFjdChkKSkuc3VidHJhY3QodGhpcy55KTtyZXR1cm4gbmV3IEVDUG9pbnRGcCh0aGlzLmN1cnZlLGQsZil9O0VDUG9pbnRGcC5wcm90b3R5cGUudHdpY2UyRD1mdW5jdGlvbigpe2lmKHRoaXMuaXNJbmZpbml0eSgpKXtyZXR1cm4gdGhpc31pZih0aGlzLnkudG9CaWdJbnRlZ2VyKCkuc2lnbnVtKCk9PTApe3JldHVybiB0aGlzLmN1cnZlLmdldEluZmluaXR5KCl9dmFyIGI9dGhpcy5jdXJ2ZS5mcm9tQmlnSW50ZWdlcihCaWdJbnRlZ2VyLnZhbHVlT2YoMikpO3ZhciBlPXRoaXMuY3VydmUuZnJvbUJpZ0ludGVnZXIoQmlnSW50ZWdlci52YWx1ZU9mKDMpKTt2YXIgYT10aGlzLnguc3F1YXJlKCkubXVsdGlwbHkoZSkuYWRkKHRoaXMuY3VydmUuYSkuZGl2aWRlKHRoaXMueS5tdWx0aXBseShiKSk7dmFyIGM9YS5zcXVhcmUoKS5zdWJ0cmFjdCh0aGlzLngubXVsdGlwbHkoYikpO3ZhciBkPWEubXVsdGlwbHkodGhpcy54LnN1YnRyYWN0KGMpKS5zdWJ0cmFjdCh0aGlzLnkpO3JldHVybiBuZXcgRUNQb2ludEZwKHRoaXMuY3VydmUsYyxkKX07RUNQb2ludEZwLnByb3RvdHlwZS5tdWx0aXBseTJEPWZ1bmN0aW9uKGIpe2lmKHRoaXMuaXNJbmZpbml0eSgpKXtyZXR1cm4gdGhpc31pZihiLnNpZ251bSgpPT0wKXtyZXR1cm4gdGhpcy5jdXJ2ZS5nZXRJbmZpbml0eSgpfXZhciBnPWI7dmFyIGY9Zy5tdWx0aXBseShuZXcgQmlnSW50ZWdlcigiMyIpKTt2YXIgbD10aGlzLm5lZ2F0ZSgpO3ZhciBkPXRoaXM7dmFyIGM7Zm9yKGM9Zi5iaXRMZW5ndGgoKS0yO2M+MDstLWMpe2Q9ZC50d2ljZSgpO3ZhciBhPWYudGVzdEJpdChjKTt2YXIgaj1nLnRlc3RCaXQoYyk7aWYoYSE9ail7ZD1kLmFkZDJEKGE/dGhpczpsKX19cmV0dXJuIGR9O0VDUG9pbnRGcC5wcm90b3R5cGUuaXNPbkN1cnZlPWZ1bmN0aW9uKCl7dmFyIGQ9dGhpcy5nZXRYKCkudG9CaWdJbnRlZ2VyKCk7dmFyIGk9dGhpcy5nZXRZKCkudG9CaWdJbnRlZ2VyKCk7dmFyIGY9dGhpcy5jdXJ2ZS5nZXRBKCkudG9CaWdJbnRlZ2VyKCk7dmFyIGM9dGhpcy5jdXJ2ZS5nZXRCKCkudG9CaWdJbnRlZ2VyKCk7dmFyIGg9dGhpcy5jdXJ2ZS5nZXRRKCk7dmFyIGU9aS5tdWx0aXBseShpKS5tb2QoaCk7dmFyIGc9ZC5tdWx0aXBseShkKS5tdWx0aXBseShkKS5hZGQoZi5tdWx0aXBseShkKSkuYWRkKGMpLm1vZChoKTtyZXR1cm4gZS5lcXVhbHMoZyl9O0VDUG9pbnRGcC5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iKCIrdGhpcy5nZXRYKCkudG9CaWdJbnRlZ2VyKCkudG9TdHJpbmcoKSsiLCIrdGhpcy5nZXRZKCkudG9CaWdJbnRlZ2VyKCkudG9TdHJpbmcoKSsiKSJ9O0VDUG9pbnRGcC5wcm90b3R5cGUudmFsaWRhdGU9ZnVuY3Rpb24oKXt2YXIgYz10aGlzLmN1cnZlLmdldFEoKTtpZih0aGlzLmlzSW5maW5pdHkoKSl7dGhyb3cgbmV3IEVycm9yKCJQb2ludCBpcyBhdCBpbmZpbml0eS4iKX12YXIgYT10aGlzLmdldFgoKS50b0JpZ0ludGVnZXIoKTt2YXIgYj10aGlzLmdldFkoKS50b0JpZ0ludGVnZXIoKTtpZihhLmNvbXBhcmVUbyhCaWdJbnRlZ2VyLk9ORSk8MHx8YS5jb21wYXJlVG8oYy5zdWJ0cmFjdChCaWdJbnRlZ2VyLk9ORSkpPjApe3Rocm93IG5ldyBFcnJvcigieCBjb29yZGluYXRlIG91dCBvZiBib3VuZHMiKX1pZihiLmNvbXBhcmVUbyhCaWdJbnRlZ2VyLk9ORSk8MHx8Yi5jb21wYXJlVG8oYy5zdWJ0cmFjdChCaWdJbnRlZ2VyLk9ORSkpPjApe3Rocm93IG5ldyBFcnJvcigieSBjb29yZGluYXRlIG91dCBvZiBib3VuZHMiKX1pZighdGhpcy5pc09uQ3VydmUoKSl7dGhyb3cgbmV3IEVycm9yKCJQb2ludCBpcyBub3Qgb24gdGhlIGN1cnZlLiIpfWlmKHRoaXMubXVsdGlwbHkoYykuaXNJbmZpbml0eSgpKXt0aHJvdyBuZXcgRXJyb3IoIlBvaW50IGlzIG5vdCBhIHNjYWxhciBtdWx0aXBsZSBvZiBHLiIpfXJldHVybiB0cnVlfTsNCi8qISBNaWtlIFNhbXVlbCAoYykgMjAwOSB8IGNvZGUuZ29vZ2xlLmNvbS9wL2pzb24tc2Fucy1ldmFsDQogKi8NCnZhciBqc29uUGFyc2U9KGZ1bmN0aW9uKCl7dmFyIGU9Iig/Oi0/XFxiKD86MHxbMS05XVswLTldKikoPzpcXC5bMC05XSspPyg/OltlRV1bKy1dP1swLTldKyk/XFxiKSI7dmFyIGo9Jyg/OlteXFwwLVxceDA4XFx4MGEtXFx4MWYiXFxcXF18XFxcXCg/OlsiL1xcXFxiZm5ydF18dVswLTlBLUZhLWZdezR9KSknO3ZhciBpPScoPzoiJytqKycqIiknO3ZhciBkPW5ldyBSZWdFeHAoIig/OmZhbHNlfHRydWV8bnVsbHxbXFx7XFx9XFxbXFxdXXwiK2UrInwiK2krIikiLCJnIik7dmFyIGs9bmV3IFJlZ0V4cCgiXFxcXCg/OihbXnVdKXx1KC57NH0pKSIsImciKTt2YXIgZz17JyInOiciJywiLyI6Ii8iLCJcXCI6IlxcIixiOiJcYiIsZjoiXGYiLG46IlxuIixyOiJcciIsdDoiXHQifTtmdW5jdGlvbiBoKGwsbSxuKXtyZXR1cm4gbT9nW21dOlN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQobiwxNikpfXZhciBjPW5ldyBTdHJpbmcoIiIpO3ZhciBhPSJcXCI7dmFyIGY9eyJ7IjpPYmplY3QsIlsiOkFycmF5fTt2YXIgYj1PYmplY3QuaGFzT3duUHJvcGVydHk7cmV0dXJuIGZ1bmN0aW9uKHUscSl7dmFyIHA9dS5tYXRjaChkKTt2YXIgeDt2YXIgdj1wWzBdO3ZhciBsPWZhbHNlO2lmKCJ7Ij09PXYpe3g9e319ZWxzZXtpZigiWyI9PT12KXt4PVtdfWVsc2V7eD1bXTtsPXRydWV9fXZhciB0O3ZhciByPVt4XTtmb3IodmFyIG89MS1sLG09cC5sZW5ndGg7bzxtOysrbyl7dj1wW29dO3ZhciB3O3N3aXRjaCh2LmNoYXJDb2RlQXQoMCkpe2RlZmF1bHQ6dz1yWzBdO3dbdHx8dy5sZW5ndGhdPSsodik7dD12b2lkIDA7YnJlYWs7Y2FzZSAzNDp2PXYuc3Vic3RyaW5nKDEsdi5sZW5ndGgtMSk7aWYodi5pbmRleE9mKGEpIT09LTEpe3Y9di5yZXBsYWNlKGssaCl9dz1yWzBdO2lmKCF0KXtpZih3IGluc3RhbmNlb2YgQXJyYXkpe3Q9dy5sZW5ndGh9ZWxzZXt0PXZ8fGM7YnJlYWt9fXdbdF09djt0PXZvaWQgMDticmVhaztjYXNlIDkxOnc9clswXTtyLnVuc2hpZnQod1t0fHx3Lmxlbmd0aF09W10pO3Q9dm9pZCAwO2JyZWFrO2Nhc2UgOTM6ci5zaGlmdCgpO2JyZWFrO2Nhc2UgMTAyOnc9clswXTt3W3R8fHcubGVuZ3RoXT1mYWxzZTt0PXZvaWQgMDticmVhaztjYXNlIDExMDp3PXJbMF07d1t0fHx3Lmxlbmd0aF09bnVsbDt0PXZvaWQgMDticmVhaztjYXNlIDExNjp3PXJbMF07d1t0fHx3Lmxlbmd0aF09dHJ1ZTt0PXZvaWQgMDticmVhaztjYXNlIDEyMzp3PXJbMF07ci51bnNoaWZ0KHdbdHx8dy5sZW5ndGhdPXt9KTt0PXZvaWQgMDticmVhaztjYXNlIDEyNTpyLnNoaWZ0KCk7YnJlYWt9fWlmKGwpe2lmKHIubGVuZ3RoIT09MSl7dGhyb3cgbmV3IEVycm9yKCl9eD14WzBdfWVsc2V7aWYoci5sZW5ndGgpe3Rocm93IG5ldyBFcnJvcigpfX1pZihxKXt2YXIgcz1mdW5jdGlvbihDLEIpe3ZhciBEPUNbQl07aWYoRCYmdHlwZW9mIEQ9PT0ib2JqZWN0Iil7dmFyIG49bnVsbDtmb3IodmFyIHogaW4gRCl7aWYoYi5jYWxsKEQseikmJkQhPT1DKXt2YXIgeT1zKEQseik7aWYoeSE9PXZvaWQgMCl7RFt6XT15fWVsc2V7aWYoIW4pe249W119bi5wdXNoKHopfX19aWYobil7Zm9yKHZhciBBPW4ubGVuZ3RoOy0tQT49MDspe2RlbGV0ZSBEW25bQV1dfX19cmV0dXJuIHEuY2FsbChDLEIsRCl9O3g9cyh7IiI6eH0sIiIpfXJldHVybiB4fX0pKCk7DQovKiEgYXNuMS0xLjAuOS5qcyAoYykgMjAxMy0yMDE1IEtlbmppIFVydXNoaW1hIHwga2p1ci5naXRodWIuY29tL2pzcnNhc2lnbi9saWNlbnNlDQogKi8NCmlmKHR5cGVvZiBLSlVSPT0idW5kZWZpbmVkInx8IUtKVVIpe0tKVVI9e319aWYodHlwZW9mIEtKVVIuYXNuMT09InVuZGVmaW5lZCJ8fCFLSlVSLmFzbjEpe0tKVVIuYXNuMT17fX1LSlVSLmFzbjEuQVNOMVV0aWw9bmV3IGZ1bmN0aW9uKCl7dGhpcy5pbnRlZ2VyVG9CeXRlSGV4PWZ1bmN0aW9uKGEpe3ZhciBiPWEudG9TdHJpbmcoMTYpO2lmKChiLmxlbmd0aCUyKT09MSl7Yj0iMCIrYn1yZXR1cm4gYn07dGhpcy5iaWdJbnRUb01pblR3b3NDb21wbGVtZW50c0hleD1mdW5jdGlvbihqKXt2YXIgZj1qLnRvU3RyaW5nKDE2KTtpZihmLnN1YnN0cigwLDEpIT0iLSIpe2lmKGYubGVuZ3RoJTI9PTEpe2Y9IjAiK2Z9ZWxzZXtpZighZi5tYXRjaCgvXlswLTddLykpe2Y9IjAwIitmfX19ZWxzZXt2YXIgYT1mLnN1YnN0cigxKTt2YXIgZT1hLmxlbmd0aDtpZihlJTI9PTEpe2UrPTF9ZWxzZXtpZighZi5tYXRjaCgvXlswLTddLykpe2UrPTJ9fXZhciBnPSIiO2Zvcih2YXIgZD0wO2Q8ZTtkKyspe2crPSJmIn12YXIgYz1uZXcgQmlnSW50ZWdlcihnLDE2KTt2YXIgYj1jLnhvcihqKS5hZGQoQmlnSW50ZWdlci5PTkUpO2Y9Yi50b1N0cmluZygxNikucmVwbGFjZSgvXi0vLCIiKX1yZXR1cm4gZn07dGhpcy5nZXRQRU1TdHJpbmdGcm9tSGV4PWZ1bmN0aW9uKGEsYil7dmFyIGM9S0pVUi5hc24xO3ZhciBmPUNyeXB0b0pTLmVuYy5IZXgucGFyc2UoYSk7dmFyIGQ9Q3J5cHRvSlMuZW5jLkJhc2U2NC5zdHJpbmdpZnkoZik7dmFyIGU9ZC5yZXBsYWNlKC8oLns2NH0pL2csIiQxXHJcbiIpO2U9ZS5yZXBsYWNlKC9cclxuJC8sIiIpO3JldHVybiItLS0tLUJFR0lOICIrYisiLS0tLS1cclxuIitlKyJcclxuLS0tLS1FTkQgIitiKyItLS0tLVxyXG4ifTt0aGlzLm5ld09iamVjdD1mdW5jdGlvbihiKXt2YXIgZz1LSlVSLmFzbjE7dmFyIGs9T2JqZWN0LmtleXMoYik7aWYoay5sZW5ndGghPTEpe3Rocm93ImtleSBvZiBwYXJhbSBzaGFsbCBiZSBvbmx5IG9uZS4ifXZhciBqPWtbMF07aWYoIjpib29sOmludDpiaXRzdHI6b2N0c3RyOm51bGw6b2lkOmVudW06dXRmOHN0cjpudW1zdHI6cHJuc3RyOnRlbHN0cjppYTVzdHI6dXRjdGltZTpnZW50aW1lOnNlcTpzZXQ6dGFnOiIuaW5kZXhPZigiOiIraisiOiIpPT0tMSl7dGhyb3cidW5kZWZpbmVkIGtleTogIitqfWlmKGo9PSJib29sIil7cmV0dXJuIG5ldyBnLkRFUkJvb2xlYW4oYltqXSl9aWYoaj09ImludCIpe3JldHVybiBuZXcgZy5ERVJJbnRlZ2VyKGJbal0pfWlmKGo9PSJiaXRzdHIiKXtyZXR1cm4gbmV3IGcuREVSQml0U3RyaW5nKGJbal0pfWlmKGo9PSJvY3RzdHIiKXtyZXR1cm4gbmV3IGcuREVST2N0ZXRTdHJpbmcoYltqXSl9aWYoaj09Im51bGwiKXtyZXR1cm4gbmV3IGcuREVSTnVsbChiW2pdKX1pZihqPT0ib2lkIil7cmV0dXJuIG5ldyBnLkRFUk9iamVjdElkZW50aWZpZXIoYltqXSl9aWYoaj09ImVudW0iKXtyZXR1cm4gbmV3IGcuREVSRW51bWVyYXRlZChiW2pdKX1pZihqPT0idXRmOHN0ciIpe3JldHVybiBuZXcgZy5ERVJVVEY4U3RyaW5nKGJbal0pfWlmKGo9PSJudW1zdHIiKXtyZXR1cm4gbmV3IGcuREVSTnVtZXJpY1N0cmluZyhiW2pdKX1pZihqPT0icHJuc3RyIil7cmV0dXJuIG5ldyBnLkRFUlByaW50YWJsZVN0cmluZyhiW2pdKX1pZihqPT0idGVsc3RyIil7cmV0dXJuIG5ldyBnLkRFUlRlbGV0ZXhTdHJpbmcoYltqXSl9aWYoaj09ImlhNXN0ciIpe3JldHVybiBuZXcgZy5ERVJJQTVTdHJpbmcoYltqXSl9aWYoaj09InV0Y3RpbWUiKXtyZXR1cm4gbmV3IGcuREVSVVRDVGltZShiW2pdKX1pZihqPT0iZ2VudGltZSIpe3JldHVybiBuZXcgZy5ERVJHZW5lcmFsaXplZFRpbWUoYltqXSl9aWYoaj09InNlcSIpe3ZhciBtPWJbal07dmFyIGg9W107Zm9yKHZhciBlPTA7ZTxtLmxlbmd0aDtlKyspe3ZhciBsPWcuQVNOMVV0aWwubmV3T2JqZWN0KG1bZV0pO2gucHVzaChsKX1yZXR1cm4gbmV3IGcuREVSU2VxdWVuY2Uoe2FycmF5Omh9KX1pZihqPT0ic2V0Iil7dmFyIG09YltqXTt2YXIgaD1bXTtmb3IodmFyIGU9MDtlPG0ubGVuZ3RoO2UrKyl7dmFyIGw9Zy5BU04xVXRpbC5uZXdPYmplY3QobVtlXSk7aC5wdXNoKGwpfXJldHVybiBuZXcgZy5ERVJTZXQoe2FycmF5Omh9KX1pZihqPT0idGFnIil7dmFyIGM9YltqXTtpZihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYyk9PT0iW29iamVjdCBBcnJheV0iJiZjLmxlbmd0aD09Myl7dmFyIGQ9Zy5BU04xVXRpbC5uZXdPYmplY3QoY1syXSk7cmV0dXJuIG5ldyBnLkRFUlRhZ2dlZE9iamVjdCh7dGFnOmNbMF0sZXhwbGljaXQ6Y1sxXSxvYmo6ZH0pfWVsc2V7dmFyIGY9e307aWYoYy5leHBsaWNpdCE9PXVuZGVmaW5lZCl7Zi5leHBsaWNpdD1jLmV4cGxpY2l0fWlmKGMudGFnIT09dW5kZWZpbmVkKXtmLnRhZz1jLnRhZ31pZihjLm9iaj09PXVuZGVmaW5lZCl7dGhyb3cib2JqIHNoYWxsIGJlIHNwZWNpZmllZCBmb3IgJ3RhZycuIn1mLm9iaj1nLkFTTjFVdGlsLm5ld09iamVjdChjLm9iaik7cmV0dXJuIG5ldyBnLkRFUlRhZ2dlZE9iamVjdChmKX19fTt0aGlzLmpzb25Ub0FTTjFIRVg9ZnVuY3Rpb24oYil7dmFyIGE9dGhpcy5uZXdPYmplY3QoYik7cmV0dXJuIGEuZ2V0RW5jb2RlZEhleCgpfX07S0pVUi5hc24xLkFTTjFVdGlsLm9pZEhleFRvSW50PWZ1bmN0aW9uKGEpe3ZhciBqPSIiO3ZhciBrPXBhcnNlSW50KGEuc3Vic3RyKDAsMiksMTYpO3ZhciBkPU1hdGguZmxvb3Ioay80MCk7dmFyIGM9ayU0MDt2YXIgaj1kKyIuIitjO3ZhciBlPSIiO2Zvcih2YXIgZj0yO2Y8YS5sZW5ndGg7Zis9Mil7dmFyIGc9cGFyc2VJbnQoYS5zdWJzdHIoZiwyKSwxNik7dmFyIGg9KCIwMDAwMDAwMCIrZy50b1N0cmluZygyKSkuc2xpY2UoLTgpO2U9ZStoLnN1YnN0cigxLDcpO2lmKGguc3Vic3RyKDAsMSk9PSIwIil7dmFyIGI9bmV3IEJpZ0ludGVnZXIoZSwyKTtqPWorIi4iK2IudG9TdHJpbmcoMTApO2U9IiJ9fXJldHVybiBqfTtLSlVSLmFzbjEuQVNOMVV0aWwub2lkSW50VG9IZXg9ZnVuY3Rpb24oZil7dmFyIGU9ZnVuY3Rpb24oYSl7dmFyIGs9YS50b1N0cmluZygxNik7aWYoay5sZW5ndGg9PTEpe2s9IjAiK2t9cmV0dXJuIGt9O3ZhciBkPWZ1bmN0aW9uKG8pe3ZhciBuPSIiO3ZhciBrPW5ldyBCaWdJbnRlZ2VyKG8sMTApO3ZhciBhPWsudG9TdHJpbmcoMik7dmFyIGw9Ny1hLmxlbmd0aCU3O2lmKGw9PTcpe2w9MH12YXIgcT0iIjtmb3IodmFyIG09MDttPGw7bSsrKXtxKz0iMCJ9YT1xK2E7Zm9yKHZhciBtPTA7bTxhLmxlbmd0aC0xO20rPTcpe3ZhciBwPWEuc3Vic3RyKG0sNyk7aWYobSE9YS5sZW5ndGgtNyl7cD0iMSIrcH1uKz1lKHBhcnNlSW50KHAsMikpfXJldHVybiBufTtpZighZi5tYXRjaCgvXlswLTkuXSskLykpe3Rocm93Im1hbGZvcm1lZCBvaWQgc3RyaW5nOiAiK2Z9dmFyIGc9IiI7dmFyIGI9Zi5zcGxpdCgiLiIpO3ZhciBqPXBhcnNlSW50KGJbMF0pKjQwK3BhcnNlSW50KGJbMV0pO2crPWUoaik7Yi5zcGxpY2UoMCwyKTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoO2MrKyl7Zys9ZChiW2NdKX1yZXR1cm4gZ307S0pVUi5hc24xLkFTTjFPYmplY3Q9ZnVuY3Rpb24oKXt2YXIgYz10cnVlO3ZhciBiPW51bGw7dmFyIGQ9IjAwIjt2YXIgZT0iMDAiO3ZhciBhPSIiO3RoaXMuZ2V0TGVuZ3RoSGV4RnJvbVZhbHVlPWZ1bmN0aW9uKCl7aWYodHlwZW9mIHRoaXMuaFY9PSJ1bmRlZmluZWQifHx0aGlzLmhWPT1udWxsKXt0aHJvdyJ0aGlzLmhWIGlzIG51bGwgb3IgdW5kZWZpbmVkLiJ9aWYodGhpcy5oVi5sZW5ndGglMj09MSl7dGhyb3cidmFsdWUgaGV4IG11c3QgYmUgZXZlbiBsZW5ndGg6IG49IithLmxlbmd0aCsiLHY9Iit0aGlzLmhWfXZhciBpPXRoaXMuaFYubGVuZ3RoLzI7dmFyIGg9aS50b1N0cmluZygxNik7aWYoaC5sZW5ndGglMj09MSl7aD0iMCIraH1pZihpPDEyOCl7cmV0dXJuIGh9ZWxzZXt2YXIgZz1oLmxlbmd0aC8yO2lmKGc+MTUpe3Rocm93IkFTTi4xIGxlbmd0aCB0b28gbG9uZyB0byByZXByZXNlbnQgYnkgOHg6IG4gPSAiK2kudG9TdHJpbmcoMTYpfXZhciBmPTEyOCtnO3JldHVybiBmLnRvU3RyaW5nKDE2KStofX07dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7aWYodGhpcy5oVExWPT1udWxsfHx0aGlzLmlzTW9kaWZpZWQpe3RoaXMuaFY9dGhpcy5nZXRGcmVzaFZhbHVlSGV4KCk7dGhpcy5oTD10aGlzLmdldExlbmd0aEhleEZyb21WYWx1ZSgpO3RoaXMuaFRMVj10aGlzLmhUK3RoaXMuaEwrdGhpcy5oVjt0aGlzLmlzTW9kaWZpZWQ9ZmFsc2V9cmV0dXJuIHRoaXMuaFRMVn07dGhpcy5nZXRWYWx1ZUhleD1mdW5jdGlvbigpe3RoaXMuZ2V0RW5jb2RlZEhleCgpO3JldHVybiB0aGlzLmhWfTt0aGlzLmdldEZyZXNoVmFsdWVIZXg9ZnVuY3Rpb24oKXtyZXR1cm4iIn19O0tKVVIuYXNuMS5ERVJBYnN0cmFjdFN0cmluZz1mdW5jdGlvbihjKXtLSlVSLmFzbjEuREVSQWJzdHJhY3RTdHJpbmcuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBiPW51bGw7dmFyIGE9bnVsbDt0aGlzLmdldFN0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnN9O3RoaXMuc2V0U3RyaW5nPWZ1bmN0aW9uKGQpe3RoaXMuaFRMVj1udWxsO3RoaXMuaXNNb2RpZmllZD10cnVlO3RoaXMucz1kO3RoaXMuaFY9c3RvaGV4KHRoaXMucyl9O3RoaXMuc2V0U3RyaW5nSGV4PWZ1bmN0aW9uKGQpe3RoaXMuaFRMVj1udWxsO3RoaXMuaXNNb2RpZmllZD10cnVlO3RoaXMucz1udWxsO3RoaXMuaFY9ZH07dGhpcy5nZXRGcmVzaFZhbHVlSGV4PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaFZ9O2lmKHR5cGVvZiBjIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGM9PSJzdHJpbmciKXt0aGlzLnNldFN0cmluZyhjKX1lbHNle2lmKHR5cGVvZiBjLnN0ciE9InVuZGVmaW5lZCIpe3RoaXMuc2V0U3RyaW5nKGMuc3RyKX1lbHNle2lmKHR5cGVvZiBjLmhleCE9InVuZGVmaW5lZCIpe3RoaXMuc2V0U3RyaW5nSGV4KGMuaGV4KX19fX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5ERVJBYnN0cmFjdFN0cmluZyxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLkRFUkFic3RyYWN0VGltZT1mdW5jdGlvbihjKXtLSlVSLmFzbjEuREVSQWJzdHJhY3RUaW1lLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt2YXIgYj1udWxsO3ZhciBhPW51bGw7dGhpcy5sb2NhbERhdGVUb1VUQz1mdW5jdGlvbihmKXt1dGM9Zi5nZXRUaW1lKCkrKGYuZ2V0VGltZXpvbmVPZmZzZXQoKSo2MDAwMCk7dmFyIGU9bmV3IERhdGUodXRjKTtyZXR1cm4gZX07dGhpcy5mb3JtYXREYXRlPWZ1bmN0aW9uKG0sbyxlKXt2YXIgZz10aGlzLnplcm9QYWRkaW5nO3ZhciBuPXRoaXMubG9jYWxEYXRlVG9VVEMobSk7dmFyIHA9U3RyaW5nKG4uZ2V0RnVsbFllYXIoKSk7aWYobz09InV0YyIpe3A9cC5zdWJzdHIoMiwyKX12YXIgbD1nKFN0cmluZyhuLmdldE1vbnRoKCkrMSksMik7dmFyIHE9ZyhTdHJpbmcobi5nZXREYXRlKCkpLDIpO3ZhciBoPWcoU3RyaW5nKG4uZ2V0SG91cnMoKSksMik7dmFyIGk9ZyhTdHJpbmcobi5nZXRNaW51dGVzKCkpLDIpO3ZhciBqPWcoU3RyaW5nKG4uZ2V0U2Vjb25kcygpKSwyKTt2YXIgcj1wK2wrcStoK2krajtpZihlPT09dHJ1ZSl7dmFyIGY9bi5nZXRNaWxsaXNlY29uZHMoKTtpZihmIT0wKXt2YXIgaz1nKFN0cmluZyhmKSwzKTtrPWsucmVwbGFjZSgvWzBdKyQvLCIiKTtyPXIrIi4iK2t9fXJldHVybiByKyJaIn07dGhpcy56ZXJvUGFkZGluZz1mdW5jdGlvbihlLGQpe2lmKGUubGVuZ3RoPj1kKXtyZXR1cm4gZX1yZXR1cm4gbmV3IEFycmF5KGQtZS5sZW5ndGgrMSkuam9pbigiMCIpK2V9O3RoaXMuZ2V0U3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc307dGhpcy5zZXRTdHJpbmc9ZnVuY3Rpb24oZCl7dGhpcy5oVExWPW51bGw7dGhpcy5pc01vZGlmaWVkPXRydWU7dGhpcy5zPWQ7dGhpcy5oVj1zdG9oZXgoZCl9O3RoaXMuc2V0QnlEYXRlVmFsdWU9ZnVuY3Rpb24oaCxqLGUsZCxmLGcpe3ZhciBpPW5ldyBEYXRlKERhdGUuVVRDKGgsai0xLGUsZCxmLGcsMCkpO3RoaXMuc2V0QnlEYXRlKGkpfTt0aGlzLmdldEZyZXNoVmFsdWVIZXg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oVn19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5ERVJBYnN0cmFjdFRpbWUsS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS5ERVJBYnN0cmFjdFN0cnVjdHVyZWQ9ZnVuY3Rpb24oYil7S0pVUi5hc24xLkRFUkFic3RyYWN0U3RyaW5nLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt2YXIgYT1udWxsO3RoaXMuc2V0QnlBU04xT2JqZWN0QXJyYXk9ZnVuY3Rpb24oYyl7dGhpcy5oVExWPW51bGw7dGhpcy5pc01vZGlmaWVkPXRydWU7dGhpcy5hc24xQXJyYXk9Y307dGhpcy5hcHBlbmRBU04xT2JqZWN0PWZ1bmN0aW9uKGMpe3RoaXMuaFRMVj1udWxsO3RoaXMuaXNNb2RpZmllZD10cnVlO3RoaXMuYXNuMUFycmF5LnB1c2goYyl9O3RoaXMuYXNuMUFycmF5PW5ldyBBcnJheSgpO2lmKHR5cGVvZiBiIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGIuYXJyYXkhPSJ1bmRlZmluZWQiKXt0aGlzLmFzbjFBcnJheT1iLmFycmF5fX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5ERVJBYnN0cmFjdFN0cnVjdHVyZWQsS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS5ERVJCb29sZWFuPWZ1bmN0aW9uKCl7S0pVUi5hc24xLkRFUkJvb2xlYW4uc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3RoaXMuaFQ9IjAxIjt0aGlzLmhUTFY9IjAxMDFmZiJ9O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5ERVJCb29sZWFuLEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEuREVSSW50ZWdlcj1mdW5jdGlvbihhKXtLSlVSLmFzbjEuREVSSW50ZWdlci5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dGhpcy5oVD0iMDIiO3RoaXMuc2V0QnlCaWdJbnRlZ2VyPWZ1bmN0aW9uKGIpe3RoaXMuaFRMVj1udWxsO3RoaXMuaXNNb2RpZmllZD10cnVlO3RoaXMuaFY9S0pVUi5hc24xLkFTTjFVdGlsLmJpZ0ludFRvTWluVHdvc0NvbXBsZW1lbnRzSGV4KGIpfTt0aGlzLnNldEJ5SW50ZWdlcj1mdW5jdGlvbihjKXt2YXIgYj1uZXcgQmlnSW50ZWdlcihTdHJpbmcoYyksMTApO3RoaXMuc2V0QnlCaWdJbnRlZ2VyKGIpfTt0aGlzLnNldFZhbHVlSGV4PWZ1bmN0aW9uKGIpe3RoaXMuaFY9Yn07dGhpcy5nZXRGcmVzaFZhbHVlSGV4PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaFZ9O2lmKHR5cGVvZiBhIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGEuYmlnaW50IT0idW5kZWZpbmVkIil7dGhpcy5zZXRCeUJpZ0ludGVnZXIoYS5iaWdpbnQpfWVsc2V7aWYodHlwZW9mIGFbImludCJdIT0idW5kZWZpbmVkIil7dGhpcy5zZXRCeUludGVnZXIoYVsiaW50Il0pfWVsc2V7aWYodHlwZW9mIGE9PSJudW1iZXIiKXt0aGlzLnNldEJ5SW50ZWdlcihhKX1lbHNle2lmKHR5cGVvZiBhLmhleCE9InVuZGVmaW5lZCIpe3RoaXMuc2V0VmFsdWVIZXgoYS5oZXgpfX19fX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5ERVJJbnRlZ2VyLEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEuREVSQml0U3RyaW5nPWZ1bmN0aW9uKGEpe0tKVVIuYXNuMS5ERVJCaXRTdHJpbmcuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3RoaXMuaFQ9IjAzIjt0aGlzLnNldEhleFZhbHVlSW5jbHVkaW5nVW51c2VkQml0cz1mdW5jdGlvbihiKXt0aGlzLmhUTFY9bnVsbDt0aGlzLmlzTW9kaWZpZWQ9dHJ1ZTt0aGlzLmhWPWJ9O3RoaXMuc2V0VW51c2VkQml0c0FuZEhleFZhbHVlPWZ1bmN0aW9uKGIsZCl7aWYoYjwwfHw3PGIpe3Rocm93InVudXNlZCBiaXRzIHNoYWxsIGJlIGZyb20gMCB0byA3OiB1ID0gIitifXZhciBjPSIwIitiO3RoaXMuaFRMVj1udWxsO3RoaXMuaXNNb2RpZmllZD10cnVlO3RoaXMuaFY9YytkfTt0aGlzLnNldEJ5QmluYXJ5U3RyaW5nPWZ1bmN0aW9uKGUpe2U9ZS5yZXBsYWNlKC8wKyQvLCIiKTt2YXIgZj04LWUubGVuZ3RoJTg7aWYoZj09OCl7Zj0wfWZvcih2YXIgZz0wO2c8PWY7ZysrKXtlKz0iMCJ9dmFyIGo9IiI7Zm9yKHZhciBnPTA7ZzxlLmxlbmd0aC0xO2crPTgpe3ZhciBkPWUuc3Vic3RyKGcsOCk7dmFyIGM9cGFyc2VJbnQoZCwyKS50b1N0cmluZygxNik7aWYoYy5sZW5ndGg9PTEpe2M9IjAiK2N9ais9Y310aGlzLmhUTFY9bnVsbDt0aGlzLmlzTW9kaWZpZWQ9dHJ1ZTt0aGlzLmhWPSIwIitmK2p9O3RoaXMuc2V0QnlCb29sZWFuQXJyYXk9ZnVuY3Rpb24oZCl7dmFyIGM9IiI7Zm9yKHZhciBiPTA7YjxkLmxlbmd0aDtiKyspe2lmKGRbYl09PXRydWUpe2MrPSIxIn1lbHNle2MrPSIwIn19dGhpcy5zZXRCeUJpbmFyeVN0cmluZyhjKX07dGhpcy5uZXdGYWxzZUFycmF5PWZ1bmN0aW9uKGQpe3ZhciBiPW5ldyBBcnJheShkKTtmb3IodmFyIGM9MDtjPGQ7YysrKXtiW2NdPWZhbHNlfXJldHVybiBifTt0aGlzLmdldEZyZXNoVmFsdWVIZXg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oVn07aWYodHlwZW9mIGEhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgYT09InN0cmluZyImJmEudG9Mb3dlckNhc2UoKS5tYXRjaCgvXlswLTlhLWZdKyQvKSl7dGhpcy5zZXRIZXhWYWx1ZUluY2x1ZGluZ1VudXNlZEJpdHMoYSl9ZWxzZXtpZih0eXBlb2YgYS5oZXghPSJ1bmRlZmluZWQiKXt0aGlzLnNldEhleFZhbHVlSW5jbHVkaW5nVW51c2VkQml0cyhhLmhleCl9ZWxzZXtpZih0eXBlb2YgYS5iaW4hPSJ1bmRlZmluZWQiKXt0aGlzLnNldEJ5QmluYXJ5U3RyaW5nKGEuYmluKX1lbHNle2lmKHR5cGVvZiBhLmFycmF5IT0idW5kZWZpbmVkIil7dGhpcy5zZXRCeUJvb2xlYW5BcnJheShhLmFycmF5KX19fX19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuREVSQml0U3RyaW5nLEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEuREVST2N0ZXRTdHJpbmc9ZnVuY3Rpb24oYSl7S0pVUi5hc24xLkRFUk9jdGV0U3RyaW5nLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLGEpO3RoaXMuaFQ9IjA0In07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLkRFUk9jdGV0U3RyaW5nLEtKVVIuYXNuMS5ERVJBYnN0cmFjdFN0cmluZyk7S0pVUi5hc24xLkRFUk51bGw9ZnVuY3Rpb24oKXtLSlVSLmFzbjEuREVSTnVsbC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dGhpcy5oVD0iMDUiO3RoaXMuaFRMVj0iMDUwMCJ9O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5ERVJOdWxsLEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEuREVST2JqZWN0SWRlbnRpZmllcj1mdW5jdGlvbihjKXt2YXIgYj1mdW5jdGlvbihkKXt2YXIgZT1kLnRvU3RyaW5nKDE2KTtpZihlLmxlbmd0aD09MSl7ZT0iMCIrZX1yZXR1cm4gZX07dmFyIGE9ZnVuY3Rpb24oayl7dmFyIGo9IiI7dmFyIGU9bmV3IEJpZ0ludGVnZXIoaywxMCk7dmFyIGQ9ZS50b1N0cmluZygyKTt2YXIgZj03LWQubGVuZ3RoJTc7aWYoZj09Nyl7Zj0wfXZhciBtPSIiO2Zvcih2YXIgZz0wO2c8ZjtnKyspe20rPSIwIn1kPW0rZDtmb3IodmFyIGc9MDtnPGQubGVuZ3RoLTE7Zys9Nyl7dmFyIGw9ZC5zdWJzdHIoZyw3KTtpZihnIT1kLmxlbmd0aC03KXtsPSIxIitsfWorPWIocGFyc2VJbnQobCwyKSl9cmV0dXJuIGp9O0tKVVIuYXNuMS5ERVJPYmplY3RJZGVudGlmaWVyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt0aGlzLmhUPSIwNiI7dGhpcy5zZXRWYWx1ZUhleD1mdW5jdGlvbihkKXt0aGlzLmhUTFY9bnVsbDt0aGlzLmlzTW9kaWZpZWQ9dHJ1ZTt0aGlzLnM9bnVsbDt0aGlzLmhWPWR9O3RoaXMuc2V0VmFsdWVPaWRTdHJpbmc9ZnVuY3Rpb24oZil7aWYoIWYubWF0Y2goL15bMC05Ll0rJC8pKXt0aHJvdyJtYWxmb3JtZWQgb2lkIHN0cmluZzogIitmfXZhciBnPSIiO3ZhciBkPWYuc3BsaXQoIi4iKTt2YXIgaj1wYXJzZUludChkWzBdKSo0MCtwYXJzZUludChkWzFdKTtnKz1iKGopO2Quc3BsaWNlKDAsMik7Zm9yKHZhciBlPTA7ZTxkLmxlbmd0aDtlKyspe2crPWEoZFtlXSl9dGhpcy5oVExWPW51bGw7dGhpcy5pc01vZGlmaWVkPXRydWU7dGhpcy5zPW51bGw7dGhpcy5oVj1nfTt0aGlzLnNldFZhbHVlTmFtZT1mdW5jdGlvbihlKXtpZih0eXBlb2YgS0pVUi5hc24xLng1MDkuT0lELm5hbWUyb2lkTGlzdFtlXSE9InVuZGVmaW5lZCIpe3ZhciBkPUtKVVIuYXNuMS54NTA5Lk9JRC5uYW1lMm9pZExpc3RbZV07dGhpcy5zZXRWYWx1ZU9pZFN0cmluZyhkKX1lbHNle3Rocm93IkRFUk9iamVjdElkZW50aWZpZXIgb2lkTmFtZSB1bmRlZmluZWQ6ICIrZX19O3RoaXMuZ2V0RnJlc2hWYWx1ZUhleD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmhWfTtpZih0eXBlb2YgYyE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBjPT0ic3RyaW5nIiYmYy5tYXRjaCgvXlswLTJdLlswLTkuXSskLykpe3RoaXMuc2V0VmFsdWVPaWRTdHJpbmcoYyl9ZWxzZXtpZihLSlVSLmFzbjEueDUwOS5PSUQubmFtZTJvaWRMaXN0W2NdIT09dW5kZWZpbmVkKXt0aGlzLnNldFZhbHVlT2lkU3RyaW5nKEtKVVIuYXNuMS54NTA5Lk9JRC5uYW1lMm9pZExpc3RbY10pfWVsc2V7aWYodHlwZW9mIGMub2lkIT0idW5kZWZpbmVkIil7dGhpcy5zZXRWYWx1ZU9pZFN0cmluZyhjLm9pZCl9ZWxzZXtpZih0eXBlb2YgYy5oZXghPSJ1bmRlZmluZWQiKXt0aGlzLnNldFZhbHVlSGV4KGMuaGV4KX1lbHNle2lmKHR5cGVvZiBjLm5hbWUhPSJ1bmRlZmluZWQiKXt0aGlzLnNldFZhbHVlTmFtZShjLm5hbWUpfX19fX19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuREVST2JqZWN0SWRlbnRpZmllcixLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLkRFUkVudW1lcmF0ZWQ9ZnVuY3Rpb24oYSl7S0pVUi5hc24xLkRFUkVudW1lcmF0ZWQuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3RoaXMuaFQ9IjBhIjt0aGlzLnNldEJ5QmlnSW50ZWdlcj1mdW5jdGlvbihiKXt0aGlzLmhUTFY9bnVsbDt0aGlzLmlzTW9kaWZpZWQ9dHJ1ZTt0aGlzLmhWPUtKVVIuYXNuMS5BU04xVXRpbC5iaWdJbnRUb01pblR3b3NDb21wbGVtZW50c0hleChiKX07dGhpcy5zZXRCeUludGVnZXI9ZnVuY3Rpb24oYyl7dmFyIGI9bmV3IEJpZ0ludGVnZXIoU3RyaW5nKGMpLDEwKTt0aGlzLnNldEJ5QmlnSW50ZWdlcihiKX07dGhpcy5zZXRWYWx1ZUhleD1mdW5jdGlvbihiKXt0aGlzLmhWPWJ9O3RoaXMuZ2V0RnJlc2hWYWx1ZUhleD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmhWfTtpZih0eXBlb2YgYSE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBhWyJpbnQiXSE9InVuZGVmaW5lZCIpe3RoaXMuc2V0QnlJbnRlZ2VyKGFbImludCJdKX1lbHNle2lmKHR5cGVvZiBhPT0ibnVtYmVyIil7dGhpcy5zZXRCeUludGVnZXIoYSl9ZWxzZXtpZih0eXBlb2YgYS5oZXghPSJ1bmRlZmluZWQiKXt0aGlzLnNldFZhbHVlSGV4KGEuaGV4KX19fX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5ERVJFbnVtZXJhdGVkLEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEuREVSVVRGOFN0cmluZz1mdW5jdGlvbihhKXtLSlVSLmFzbjEuREVSVVRGOFN0cmluZy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxhKTt0aGlzLmhUPSIwYyJ9O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5ERVJVVEY4U3RyaW5nLEtKVVIuYXNuMS5ERVJBYnN0cmFjdFN0cmluZyk7S0pVUi5hc24xLkRFUk51bWVyaWNTdHJpbmc9ZnVuY3Rpb24oYSl7S0pVUi5hc24xLkRFUk51bWVyaWNTdHJpbmcuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsYSk7dGhpcy5oVD0iMTIifTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuREVSTnVtZXJpY1N0cmluZyxLSlVSLmFzbjEuREVSQWJzdHJhY3RTdHJpbmcpO0tKVVIuYXNuMS5ERVJQcmludGFibGVTdHJpbmc9ZnVuY3Rpb24oYSl7S0pVUi5hc24xLkRFUlByaW50YWJsZVN0cmluZy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxhKTt0aGlzLmhUPSIxMyJ9O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5ERVJQcmludGFibGVTdHJpbmcsS0pVUi5hc24xLkRFUkFic3RyYWN0U3RyaW5nKTtLSlVSLmFzbjEuREVSVGVsZXRleFN0cmluZz1mdW5jdGlvbihhKXtLSlVSLmFzbjEuREVSVGVsZXRleFN0cmluZy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxhKTt0aGlzLmhUPSIxNCJ9O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5ERVJUZWxldGV4U3RyaW5nLEtKVVIuYXNuMS5ERVJBYnN0cmFjdFN0cmluZyk7S0pVUi5hc24xLkRFUklBNVN0cmluZz1mdW5jdGlvbihhKXtLSlVSLmFzbjEuREVSSUE1U3RyaW5nLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLGEpO3RoaXMuaFQ9IjE2In07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLkRFUklBNVN0cmluZyxLSlVSLmFzbjEuREVSQWJzdHJhY3RTdHJpbmcpO0tKVVIuYXNuMS5ERVJVVENUaW1lPWZ1bmN0aW9uKGEpe0tKVVIuYXNuMS5ERVJVVENUaW1lLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLGEpO3RoaXMuaFQ9IjE3Ijt0aGlzLnNldEJ5RGF0ZT1mdW5jdGlvbihiKXt0aGlzLmhUTFY9bnVsbDt0aGlzLmlzTW9kaWZpZWQ9dHJ1ZTt0aGlzLmRhdGU9Yjt0aGlzLnM9dGhpcy5mb3JtYXREYXRlKHRoaXMuZGF0ZSwidXRjIik7dGhpcy5oVj1zdG9oZXgodGhpcy5zKX07dGhpcy5nZXRGcmVzaFZhbHVlSGV4PWZ1bmN0aW9uKCl7aWYodHlwZW9mIHRoaXMuZGF0ZT09InVuZGVmaW5lZCImJnR5cGVvZiB0aGlzLnM9PSJ1bmRlZmluZWQiKXt0aGlzLmRhdGU9bmV3IERhdGUoKTt0aGlzLnM9dGhpcy5mb3JtYXREYXRlKHRoaXMuZGF0ZSwidXRjIik7dGhpcy5oVj1zdG9oZXgodGhpcy5zKX1yZXR1cm4gdGhpcy5oVn07aWYoYSE9PXVuZGVmaW5lZCl7aWYoYS5zdHIhPT11bmRlZmluZWQpe3RoaXMuc2V0U3RyaW5nKGEuc3RyKX1lbHNle2lmKHR5cGVvZiBhPT0ic3RyaW5nIiYmYS5tYXRjaCgvXlswLTldezEyfVokLykpe3RoaXMuc2V0U3RyaW5nKGEpfWVsc2V7aWYoYS5oZXghPT11bmRlZmluZWQpe3RoaXMuc2V0U3RyaW5nSGV4KGEuaGV4KX1lbHNle2lmKGEuZGF0ZSE9PXVuZGVmaW5lZCl7dGhpcy5zZXRCeURhdGUoYS5kYXRlKX19fX19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuREVSVVRDVGltZSxLSlVSLmFzbjEuREVSQWJzdHJhY3RUaW1lKTtLSlVSLmFzbjEuREVSR2VuZXJhbGl6ZWRUaW1lPWZ1bmN0aW9uKGEpe0tKVVIuYXNuMS5ERVJHZW5lcmFsaXplZFRpbWUuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsYSk7dGhpcy5oVD0iMTgiO3RoaXMud2l0aE1pbGxpcz1mYWxzZTt0aGlzLnNldEJ5RGF0ZT1mdW5jdGlvbihiKXt0aGlzLmhUTFY9bnVsbDt0aGlzLmlzTW9kaWZpZWQ9dHJ1ZTt0aGlzLmRhdGU9Yjt0aGlzLnM9dGhpcy5mb3JtYXREYXRlKHRoaXMuZGF0ZSwiZ2VuIix0aGlzLndpdGhNaWxsaXMpO3RoaXMuaFY9c3RvaGV4KHRoaXMucyl9O3RoaXMuZ2V0RnJlc2hWYWx1ZUhleD1mdW5jdGlvbigpe2lmKHRoaXMuZGF0ZT09PXVuZGVmaW5lZCYmdGhpcy5zPT09dW5kZWZpbmVkKXt0aGlzLmRhdGU9bmV3IERhdGUoKTt0aGlzLnM9dGhpcy5mb3JtYXREYXRlKHRoaXMuZGF0ZSwiZ2VuIix0aGlzLndpdGhNaWxsaXMpO3RoaXMuaFY9c3RvaGV4KHRoaXMucyl9cmV0dXJuIHRoaXMuaFZ9O2lmKGEhPT11bmRlZmluZWQpe2lmKGEuc3RyIT09dW5kZWZpbmVkKXt0aGlzLnNldFN0cmluZyhhLnN0cil9ZWxzZXtpZih0eXBlb2YgYT09InN0cmluZyImJmEubWF0Y2goL15bMC05XXsxNH1aJC8pKXt0aGlzLnNldFN0cmluZyhhKX1lbHNle2lmKGEuaGV4IT09dW5kZWZpbmVkKXt0aGlzLnNldFN0cmluZ0hleChhLmhleCl9ZWxzZXtpZihhLmRhdGUhPT11bmRlZmluZWQpe3RoaXMuc2V0QnlEYXRlKGEuZGF0ZSl9fX19aWYoYS5taWxsaXM9PT10cnVlKXt0aGlzLndpdGhNaWxsaXM9dHJ1ZX19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuREVSR2VuZXJhbGl6ZWRUaW1lLEtKVVIuYXNuMS5ERVJBYnN0cmFjdFRpbWUpO0tKVVIuYXNuMS5ERVJTZXF1ZW5jZT1mdW5jdGlvbihhKXtLSlVSLmFzbjEuREVSU2VxdWVuY2Uuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsYSk7dGhpcy5oVD0iMzAiO3RoaXMuZ2V0RnJlc2hWYWx1ZUhleD1mdW5jdGlvbigpe3ZhciBjPSIiO2Zvcih2YXIgYj0wO2I8dGhpcy5hc24xQXJyYXkubGVuZ3RoO2IrKyl7dmFyIGQ9dGhpcy5hc24xQXJyYXlbYl07Yys9ZC5nZXRFbmNvZGVkSGV4KCl9dGhpcy5oVj1jO3JldHVybiB0aGlzLmhWfX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLkRFUlNlcXVlbmNlLEtKVVIuYXNuMS5ERVJBYnN0cmFjdFN0cnVjdHVyZWQpO0tKVVIuYXNuMS5ERVJTZXQ9ZnVuY3Rpb24oYSl7S0pVUi5hc24xLkRFUlNldC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxhKTt0aGlzLmhUPSIzMSI7dGhpcy5zb3J0RmxhZz10cnVlO3RoaXMuZ2V0RnJlc2hWYWx1ZUhleD1mdW5jdGlvbigpe3ZhciBiPW5ldyBBcnJheSgpO2Zvcih2YXIgYz0wO2M8dGhpcy5hc24xQXJyYXkubGVuZ3RoO2MrKyl7dmFyIGQ9dGhpcy5hc24xQXJyYXlbY107Yi5wdXNoKGQuZ2V0RW5jb2RlZEhleCgpKX1pZih0aGlzLnNvcnRGbGFnPT10cnVlKXtiLnNvcnQoKX10aGlzLmhWPWIuam9pbigiIik7cmV0dXJuIHRoaXMuaFZ9O2lmKHR5cGVvZiBhIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGEuc29ydGZsYWchPSJ1bmRlZmluZWQiJiZhLnNvcnRmbGFnPT1mYWxzZSl7dGhpcy5zb3J0RmxhZz1mYWxzZX19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuREVSU2V0LEtKVVIuYXNuMS5ERVJBYnN0cmFjdFN0cnVjdHVyZWQpO0tKVVIuYXNuMS5ERVJUYWdnZWRPYmplY3Q9ZnVuY3Rpb24oYSl7S0pVUi5hc24xLkRFUlRhZ2dlZE9iamVjdC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dGhpcy5oVD0iYTAiO3RoaXMuaFY9IiI7dGhpcy5pc0V4cGxpY2l0PXRydWU7dGhpcy5hc24xT2JqZWN0PW51bGw7dGhpcy5zZXRBU04xT2JqZWN0PWZ1bmN0aW9uKGIsYyxkKXt0aGlzLmhUPWM7dGhpcy5pc0V4cGxpY2l0PWI7dGhpcy5hc24xT2JqZWN0PWQ7aWYodGhpcy5pc0V4cGxpY2l0KXt0aGlzLmhWPXRoaXMuYXNuMU9iamVjdC5nZXRFbmNvZGVkSGV4KCk7dGhpcy5oVExWPW51bGw7dGhpcy5pc01vZGlmaWVkPXRydWV9ZWxzZXt0aGlzLmhWPW51bGw7dGhpcy5oVExWPWQuZ2V0RW5jb2RlZEhleCgpO3RoaXMuaFRMVj10aGlzLmhUTFYucmVwbGFjZSgvXi4uLyxjKTt0aGlzLmlzTW9kaWZpZWQ9ZmFsc2V9fTt0aGlzLmdldEZyZXNoVmFsdWVIZXg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oVn07aWYodHlwZW9mIGEhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgYS50YWchPSJ1bmRlZmluZWQiKXt0aGlzLmhUPWEudGFnfWlmKHR5cGVvZiBhLmV4cGxpY2l0IT0idW5kZWZpbmVkIil7dGhpcy5pc0V4cGxpY2l0PWEuZXhwbGljaXR9aWYodHlwZW9mIGEub2JqIT0idW5kZWZpbmVkIil7dGhpcy5hc24xT2JqZWN0PWEub2JqO3RoaXMuc2V0QVNOMU9iamVjdCh0aGlzLmlzRXhwbGljaXQsdGhpcy5oVCx0aGlzLmFzbjFPYmplY3QpfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5ERVJUYWdnZWRPYmplY3QsS0pVUi5hc24xLkFTTjFPYmplY3QpOw0KLyohIGFzbjFoZXgtMS4xLjYuanMgKGMpIDIwMTItMjAxNSBLZW5qaSBVcnVzaGltYSB8IGtqdXIuZ2l0aHViLmNvbS9qc3JzYXNpZ24vbGljZW5zZQ0KICovDQp2YXIgQVNOMUhFWD1uZXcgZnVuY3Rpb24oKXt0aGlzLmdldEJ5dGVMZW5ndGhPZkxfQXRPYmo9ZnVuY3Rpb24oYixjKXtpZihiLnN1YnN0cmluZyhjKzIsYyszKSE9IjgiKXtyZXR1cm4gMX12YXIgYT1wYXJzZUludChiLnN1YnN0cmluZyhjKzMsYys0KSk7aWYoYT09MCl7cmV0dXJuIC0xfWlmKDA8YSYmYTwxMCl7cmV0dXJuIGErMX1yZXR1cm4gLTJ9O3RoaXMuZ2V0SGV4T2ZMX0F0T2JqPWZ1bmN0aW9uKGIsYyl7dmFyIGE9dGhpcy5nZXRCeXRlTGVuZ3RoT2ZMX0F0T2JqKGIsYyk7aWYoYTwxKXtyZXR1cm4iIn1yZXR1cm4gYi5zdWJzdHJpbmcoYysyLGMrMithKjIpfTt0aGlzLmdldEludE9mTF9BdE9iaj1mdW5jdGlvbihjLGQpe3ZhciBiPXRoaXMuZ2V0SGV4T2ZMX0F0T2JqKGMsZCk7aWYoYj09IiIpe3JldHVybiAtMX12YXIgYTtpZihwYXJzZUludChiLnN1YnN0cmluZygwLDEpKTw4KXthPW5ldyBCaWdJbnRlZ2VyKGIsMTYpfWVsc2V7YT1uZXcgQmlnSW50ZWdlcihiLnN1YnN0cmluZygyKSwxNil9cmV0dXJuIGEuaW50VmFsdWUoKX07dGhpcy5nZXRTdGFydFBvc09mVl9BdE9iaj1mdW5jdGlvbihiLGMpe3ZhciBhPXRoaXMuZ2V0Qnl0ZUxlbmd0aE9mTF9BdE9iaihiLGMpO2lmKGE8MCl7cmV0dXJuIGF9cmV0dXJuIGMrKGErMSkqMn07dGhpcy5nZXRIZXhPZlZfQXRPYmo9ZnVuY3Rpb24oYyxkKXt2YXIgYj10aGlzLmdldFN0YXJ0UG9zT2ZWX0F0T2JqKGMsZCk7dmFyIGE9dGhpcy5nZXRJbnRPZkxfQXRPYmooYyxkKTtyZXR1cm4gYy5zdWJzdHJpbmcoYixiK2EqMil9O3RoaXMuZ2V0SGV4T2ZUTFZfQXRPYmo9ZnVuY3Rpb24oYyxlKXt2YXIgYj1jLnN1YnN0cihlLDIpO3ZhciBkPXRoaXMuZ2V0SGV4T2ZMX0F0T2JqKGMsZSk7dmFyIGE9dGhpcy5nZXRIZXhPZlZfQXRPYmooYyxlKTtyZXR1cm4gYitkK2F9O3RoaXMuZ2V0UG9zT2ZOZXh0U2libGluZ19BdE9iaj1mdW5jdGlvbihjLGQpe3ZhciBiPXRoaXMuZ2V0U3RhcnRQb3NPZlZfQXRPYmooYyxkKTt2YXIgYT10aGlzLmdldEludE9mTF9BdE9iaihjLGQpO3JldHVybiBiK2EqMn07dGhpcy5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmo9ZnVuY3Rpb24oZixqKXt2YXIgYz1uZXcgQXJyYXkoKTt2YXIgaT10aGlzLmdldFN0YXJ0UG9zT2ZWX0F0T2JqKGYsaik7Yy5wdXNoKGkpO3ZhciBiPXRoaXMuZ2V0SW50T2ZMX0F0T2JqKGYsaik7dmFyIGc9aTt2YXIgZD0wO3doaWxlKDEpe3ZhciBlPXRoaXMuZ2V0UG9zT2ZOZXh0U2libGluZ19BdE9iaihmLGcpO2lmKGU9PW51bGx8fChlLWk+PShiKjIpKSl7YnJlYWt9aWYoZD49MjAwKXticmVha31jLnB1c2goZSk7Zz1lO2QrK31yZXR1cm4gY307dGhpcy5nZXROdGhDaGlsZEluZGV4X0F0T2JqPWZ1bmN0aW9uKGQsYixlKXt2YXIgYz10aGlzLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihkLGIpO3JldHVybiBjW2VdfTt0aGlzLmdldERlY2VuZGFudEluZGV4QnlOdGhMaXN0PWZ1bmN0aW9uKGUsZCxjKXtpZihjLmxlbmd0aD09MCl7cmV0dXJuIGR9dmFyIGY9Yy5zaGlmdCgpO3ZhciBiPXRoaXMuZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKGUsZCk7cmV0dXJuIHRoaXMuZ2V0RGVjZW5kYW50SW5kZXhCeU50aExpc3QoZSxiW2ZdLGMpfTt0aGlzLmdldERlY2VuZGFudEhleFRMVkJ5TnRoTGlzdD1mdW5jdGlvbihkLGMsYil7dmFyIGE9dGhpcy5nZXREZWNlbmRhbnRJbmRleEJ5TnRoTGlzdChkLGMsYik7cmV0dXJuIHRoaXMuZ2V0SGV4T2ZUTFZfQXRPYmooZCxhKX07dGhpcy5nZXREZWNlbmRhbnRIZXhWQnlOdGhMaXN0PWZ1bmN0aW9uKGQsYyxiKXt2YXIgYT10aGlzLmdldERlY2VuZGFudEluZGV4QnlOdGhMaXN0KGQsYyxiKTtyZXR1cm4gdGhpcy5nZXRIZXhPZlZfQXRPYmooZCxhKX19O0FTTjFIRVguZ2V0VmJ5TGlzdD1mdW5jdGlvbihkLGMsYixlKXt2YXIgYT10aGlzLmdldERlY2VuZGFudEluZGV4QnlOdGhMaXN0KGQsYyxiKTtpZihhPT09dW5kZWZpbmVkKXt0aHJvdyJjYW4ndCBmaW5kIG50aExpc3Qgb2JqZWN0In1pZihlIT09dW5kZWZpbmVkKXtpZihkLnN1YnN0cihhLDIpIT1lKXt0aHJvdyJjaGVja2luZyB0YWcgZG9lc24ndCBtYXRjaDogIitkLnN1YnN0cihhLDIpKyIhPSIrZX19cmV0dXJuIHRoaXMuZ2V0SGV4T2ZWX0F0T2JqKGQsYSl9O0FTTjFIRVguaGV4dG9vaWRzdHI9ZnVuY3Rpb24oZSl7dmFyIGg9ZnVuY3Rpb24oYixhKXtpZihiLmxlbmd0aD49YSl7cmV0dXJuIGJ9cmV0dXJuIG5ldyBBcnJheShhLWIubGVuZ3RoKzEpLmpvaW4oIjAiKStifTt2YXIgbD1bXTt2YXIgbz1lLnN1YnN0cigwLDIpO3ZhciBmPXBhcnNlSW50KG8sMTYpO2xbMF09bmV3IFN0cmluZyhNYXRoLmZsb29yKGYvNDApKTtsWzFdPW5ldyBTdHJpbmcoZiU0MCk7dmFyIG09ZS5zdWJzdHIoMik7dmFyIGs9W107Zm9yKHZhciBnPTA7ZzxtLmxlbmd0aC8yO2crKyl7ay5wdXNoKHBhcnNlSW50KG0uc3Vic3RyKGcqMiwyKSwxNikpfXZhciBqPVtdO3ZhciBkPSIiO2Zvcih2YXIgZz0wO2c8ay5sZW5ndGg7ZysrKXtpZihrW2ddJjEyOCl7ZD1kK2goKGtbZ10mMTI3KS50b1N0cmluZygyKSw3KX1lbHNle2Q9ZCtoKChrW2ddJjEyNykudG9TdHJpbmcoMiksNyk7ai5wdXNoKG5ldyBTdHJpbmcocGFyc2VJbnQoZCwyKSkpO2Q9IiJ9fXZhciBuPWwuam9pbigiLiIpO2lmKGoubGVuZ3RoPjApe249bisiLiIrai5qb2luKCIuIil9cmV0dXJuIG59O0FTTjFIRVguZHVtcD1mdW5jdGlvbihlLGMsayxnKXt2YXIgbz1mdW5jdGlvbih3LGkpe2lmKHcubGVuZ3RoPD1pKjIpe3JldHVybiB3fWVsc2V7dmFyIHY9dy5zdWJzdHIoMCxpKSsiLi4odG90YWwgIit3Lmxlbmd0aC8yKyJieXRlcykuLiIrdy5zdWJzdHIody5sZW5ndGgtaSxpKTtyZXR1cm4gdn19O2lmKGM9PT11bmRlZmluZWQpe2M9e29tbWl0X2xvbmdfb2N0ZXQ6MzJ9fWlmKGs9PT11bmRlZmluZWQpe2s9MH1pZihnPT09dW5kZWZpbmVkKXtnPSIifXZhciByPWMub21taXRfbG9uZ19vY3RldDtpZihlLnN1YnN0cihrLDIpPT0iMDEiKXt2YXIgaD1BU04xSEVYLmdldEhleE9mVl9BdE9iaihlLGspO2lmKGg9PSIwMCIpe3JldHVybiBnKyJCT09MRUFOIEZBTFNFXG4ifWVsc2V7cmV0dXJuIGcrIkJPT0xFQU4gVFJVRVxuIn19aWYoZS5zdWJzdHIoaywyKT09IjAyIil7dmFyIGg9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooZSxrKTtyZXR1cm4gZysiSU5URUdFUiAiK28oaCxyKSsiXG4ifWlmKGUuc3Vic3RyKGssMik9PSIwMyIpe3ZhciBoPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGUsayk7cmV0dXJuIGcrIkJJVFNUUklORyAiK28oaCxyKSsiXG4ifWlmKGUuc3Vic3RyKGssMik9PSIwNCIpe3ZhciBoPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGUsayk7aWYoQVNOMUhFWC5pc0FTTjFIRVgoaCkpe3ZhciBqPWcrIk9DVEVUU1RSSU5HLCBlbmNhcHN1bGF0ZXNcbiI7aj1qK0FTTjFIRVguZHVtcChoLGMsMCxnKyIgICIpO3JldHVybiBqfWVsc2V7cmV0dXJuIGcrIk9DVEVUU1RSSU5HICIrbyhoLHIpKyJcbiJ9fWlmKGUuc3Vic3RyKGssMik9PSIwNSIpe3JldHVybiBnKyJOVUxMXG4ifWlmKGUuc3Vic3RyKGssMik9PSIwNiIpe3ZhciBsPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGUsayk7dmFyIGE9S0pVUi5hc24xLkFTTjFVdGlsLm9pZEhleFRvSW50KGwpO3ZhciBuPUtKVVIuYXNuMS54NTA5Lk9JRC5vaWQybmFtZShhKTt2YXIgYj1hLnJlcGxhY2UoL1wuL2csIiAiKTtpZihuIT0iIil7cmV0dXJuIGcrIk9iamVjdElkZW50aWZpZXIgIituKyIgKCIrYisiKVxuIn1lbHNle3JldHVybiBnKyJPYmplY3RJZGVudGlmaWVyICgiK2IrIilcbiJ9fWlmKGUuc3Vic3RyKGssMik9PSIwYyIpe3JldHVybiBnKyJVVEY4U3RyaW5nICciK2hleHRvdXRmOChBU04xSEVYLmdldEhleE9mVl9BdE9iaihlLGspKSsiJ1xuIn1pZihlLnN1YnN0cihrLDIpPT0iMTMiKXtyZXR1cm4gZysiUHJpbnRhYmxlU3RyaW5nICciK2hleHRvdXRmOChBU04xSEVYLmdldEhleE9mVl9BdE9iaihlLGspKSsiJ1xuIn1pZihlLnN1YnN0cihrLDIpPT0iMTQiKXtyZXR1cm4gZysiVGVsZXRleFN0cmluZyAnIitoZXh0b3V0ZjgoQVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooZSxrKSkrIidcbiJ9aWYoZS5zdWJzdHIoaywyKT09IjE2Iil7cmV0dXJuIGcrIklBNVN0cmluZyAnIitoZXh0b3V0ZjgoQVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooZSxrKSkrIidcbiJ9aWYoZS5zdWJzdHIoaywyKT09IjE3Iil7cmV0dXJuIGcrIlVUQ1RpbWUgIitoZXh0b3V0ZjgoQVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooZSxrKSkrIlxuIn1pZihlLnN1YnN0cihrLDIpPT0iMTgiKXtyZXR1cm4gZysiR2VuZXJhbGl6ZWRUaW1lICIraGV4dG91dGY4KEFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGUsaykpKyJcbiJ9aWYoZS5zdWJzdHIoaywyKT09IjMwIil7aWYoZS5zdWJzdHIoayw0KT09IjMwMDAiKXtyZXR1cm4gZysiU0VRVUVOQ0Uge31cbiJ9dmFyIGo9ZysiU0VRVUVOQ0VcbiI7dmFyIGQ9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmooZSxrKTt2YXIgZj1jO2lmKChkLmxlbmd0aD09Mnx8ZC5sZW5ndGg9PTMpJiZlLnN1YnN0cihkWzBdLDIpPT0iMDYiJiZlLnN1YnN0cihkW2QubGVuZ3RoLTFdLDIpPT0iMDQiKXt2YXIgdD1BU04xSEVYLmdldEhleE9mVl9BdE9iaihlLGRbMF0pO3ZhciBhPUtKVVIuYXNuMS5BU04xVXRpbC5vaWRIZXhUb0ludCh0KTt2YXIgbj1LSlVSLmFzbjEueDUwOS5PSUQub2lkMm5hbWUoYSk7dmFyIHA9SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShjKSk7cC54NTA5RXh0TmFtZT1uO2Y9cH1mb3IodmFyIHE9MDtxPGQubGVuZ3RoO3ErKyl7aj1qK0FTTjFIRVguZHVtcChlLGYsZFtxXSxnKyIgICIpfXJldHVybiBqfWlmKGUuc3Vic3RyKGssMik9PSIzMSIpe3ZhciBqPWcrIlNFVFxuIjt2YXIgZD1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihlLGspO2Zvcih2YXIgcT0wO3E8ZC5sZW5ndGg7cSsrKXtqPWorQVNOMUhFWC5kdW1wKGUsYyxkW3FdLGcrIiAgIil9cmV0dXJuIGp9dmFyIHU9cGFyc2VJbnQoZS5zdWJzdHIoaywyKSwxNik7aWYoKHUmMTI4KSE9MCl7dmFyIG09dSYzMTtpZigodSYzMikhPTApe3ZhciBqPWcrIlsiK20rIl1cbiI7dmFyIGQ9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmooZSxrKTtmb3IodmFyIHE9MDtxPGQubGVuZ3RoO3ErKyl7aj1qK0FTTjFIRVguZHVtcChlLGMsZFtxXSxnKyIgICIpfXJldHVybiBqfWVsc2V7dmFyIGg9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooZSxrKTtpZihoLnN1YnN0cigwLDgpPT0iNjg3NDc0NzAiKXtoPWhleHRvdXRmOChoKX1pZihjLng1MDlFeHROYW1lPT09InN1YmplY3RBbHROYW1lIiYmbT09Mil7aD1oZXh0b3V0ZjgoaCl9dmFyIGo9ZysiWyIrbSsiXSAiK2grIlxuIjtyZXR1cm4gan19cmV0dXJuIGcrIlVOS05PV04oIitlLnN1YnN0cihrLDIpKyIpICIrQVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooZSxrKSsiXG4ifTtBU04xSEVYLmlzQVNOMUhFWD1mdW5jdGlvbihkKXtpZihkLmxlbmd0aCUyPT0xKXtyZXR1cm4gZmFsc2V9dmFyIGM9QVNOMUhFWC5nZXRJbnRPZkxfQXRPYmooZCwwKTt2YXIgYj1kLnN1YnN0cigwLDIpO3ZhciBlPUFTTjFIRVguZ2V0SGV4T2ZMX0F0T2JqKGQsMCk7dmFyIGE9ZC5sZW5ndGgtYi5sZW5ndGgtZS5sZW5ndGg7aWYoYT09YyoyKXtyZXR1cm4gdHJ1ZX1yZXR1cm4gZmFsc2V9Ow0KLyohIGFzbjF4NTA5LTEuMC4xNC5qcyAoYykgMjAxMy0yMDE1IEtlbmppIFVydXNoaW1hIHwga2p1ci5naXRodWIuY29tL2pzcnNhc2lnbi9saWNlbnNlDQogKi8NCmlmKHR5cGVvZiBLSlVSPT0idW5kZWZpbmVkInx8IUtKVVIpe0tKVVI9e319aWYodHlwZW9mIEtKVVIuYXNuMT09InVuZGVmaW5lZCJ8fCFLSlVSLmFzbjEpe0tKVVIuYXNuMT17fX1pZih0eXBlb2YgS0pVUi5hc24xLng1MDk9PSJ1bmRlZmluZWQifHwhS0pVUi5hc24xLng1MDkpe0tKVVIuYXNuMS54NTA5PXt9fUtKVVIuYXNuMS54NTA5LkNlcnRpZmljYXRlPWZ1bmN0aW9uKGcpe0tKVVIuYXNuMS54NTA5LkNlcnRpZmljYXRlLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt2YXIgYj1udWxsO3ZhciBkPW51bGw7dmFyIGY9bnVsbDt2YXIgYz1udWxsO3ZhciBhPW51bGw7dmFyIGU9bnVsbDt0aGlzLnNldFJzYVBydktleUJ5UEVNYW5kUGFzcz1mdW5jdGlvbihpLGspe3ZhciBoPVBLQ1M1UEtFWS5nZXREZWNyeXB0ZWRLZXlIZXgoaSxrKTt2YXIgaj1uZXcgUlNBS2V5KCk7ai5yZWFkUHJpdmF0ZUtleUZyb21BU04xSGV4U3RyaW5nKGgpO3RoaXMucHJ2S2V5PWp9O3RoaXMuc2lnbj1mdW5jdGlvbigpe3RoaXMuYXNuMVNpZ25hdHVyZUFsZz10aGlzLmFzbjFUQlNDZXJ0LmFzbjFTaWduYXR1cmVBbGc7c2lnPW5ldyBLSlVSLmNyeXB0by5TaWduYXR1cmUoe2FsZzoiU0hBMXdpdGhSU0EifSk7c2lnLmluaXQodGhpcy5wcnZLZXkpO3NpZy51cGRhdGVIZXgodGhpcy5hc24xVEJTQ2VydC5nZXRFbmNvZGVkSGV4KCkpO3RoaXMuaGV4U2lnPXNpZy5zaWduKCk7dGhpcy5hc24xU2lnPW5ldyBLSlVSLmFzbjEuREVSQml0U3RyaW5nKHtoZXg6IjAwIit0aGlzLmhleFNpZ30pO3ZhciBoPW5ldyBLSlVSLmFzbjEuREVSU2VxdWVuY2Uoe2FycmF5Olt0aGlzLmFzbjFUQlNDZXJ0LHRoaXMuYXNuMVNpZ25hdHVyZUFsZyx0aGlzLmFzbjFTaWddfSk7dGhpcy5oVExWPWguZ2V0RW5jb2RlZEhleCgpO3RoaXMuaXNNb2RpZmllZD1mYWxzZX07dGhpcy5zZXRTaWduYXR1cmVIZXg9ZnVuY3Rpb24oaCl7dGhpcy5hc24xU2lnbmF0dXJlQWxnPXRoaXMuYXNuMVRCU0NlcnQuYXNuMVNpZ25hdHVyZUFsZzt0aGlzLmhleFNpZz1oO3RoaXMuYXNuMVNpZz1uZXcgS0pVUi5hc24xLkRFUkJpdFN0cmluZyh7aGV4OiIwMCIrdGhpcy5oZXhTaWd9KTt2YXIgaT1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTpbdGhpcy5hc24xVEJTQ2VydCx0aGlzLmFzbjFTaWduYXR1cmVBbGcsdGhpcy5hc24xU2lnXX0pO3RoaXMuaFRMVj1pLmdldEVuY29kZWRIZXgoKTt0aGlzLmlzTW9kaWZpZWQ9ZmFsc2V9O3RoaXMuZ2V0RW5jb2RlZEhleD1mdW5jdGlvbigpe2lmKHRoaXMuaXNNb2RpZmllZD09ZmFsc2UmJnRoaXMuaFRMViE9bnVsbCl7cmV0dXJuIHRoaXMuaFRMVn10aHJvdyJub3Qgc2lnbmVkIHlldCJ9O3RoaXMuZ2V0UEVNU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIGo9dGhpcy5nZXRFbmNvZGVkSGV4KCk7dmFyIGg9Q3J5cHRvSlMuZW5jLkhleC5wYXJzZShqKTt2YXIgaT1DcnlwdG9KUy5lbmMuQmFzZTY0LnN0cmluZ2lmeShoKTt2YXIgaz1pLnJlcGxhY2UoLyguezY0fSkvZywiJDFcclxuIik7cmV0dXJuIi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLVxyXG4iK2srIlxyXG4tLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tXHJcbiJ9O2lmKHR5cGVvZiBnIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGcudGJzY2VydG9iaiE9InVuZGVmaW5lZCIpe3RoaXMuYXNuMVRCU0NlcnQ9Zy50YnNjZXJ0b2JqfWlmKHR5cGVvZiBnLnBydmtleW9iaiE9InVuZGVmaW5lZCIpe3RoaXMucHJ2S2V5PWcucHJ2a2V5b2JqfWVsc2V7aWYodHlwZW9mIGcucnNhcHJ2a2V5IT0idW5kZWZpbmVkIil7dGhpcy5wcnZLZXk9Zy5yc2FwcnZrZXl9ZWxzZXtpZigodHlwZW9mIGcucnNhcHJ2cGVtIT0idW5kZWZpbmVkIikmJih0eXBlb2YgZy5yc2FwcnZwYXMhPSJ1bmRlZmluZWQiKSl7dGhpcy5zZXRSc2FQcnZLZXlCeVBFTWFuZFBhc3MoZy5yc2FwcnZwZW0sZy5yc2FwcnZwYXMpfX19fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLng1MDkuQ2VydGlmaWNhdGUsS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS54NTA5LlRCU0NlcnRpZmljYXRlPWZ1bmN0aW9uKGEpe0tKVVIuYXNuMS54NTA5LlRCU0NlcnRpZmljYXRlLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt0aGlzLl9pbml0aWFsaXplPWZ1bmN0aW9uKCl7dGhpcy5hc24xQXJyYXk9bmV3IEFycmF5KCk7dGhpcy5hc24xVmVyc2lvbj1uZXcgS0pVUi5hc24xLkRFUlRhZ2dlZE9iamVjdCh7b2JqOm5ldyBLSlVSLmFzbjEuREVSSW50ZWdlcih7ImludCI6Mn0pfSk7dGhpcy5hc24xU2VyaWFsTnVtYmVyPW51bGw7dGhpcy5hc24xU2lnbmF0dXJlQWxnPW51bGw7dGhpcy5hc24xSXNzdWVyPW51bGw7dGhpcy5hc24xTm90QmVmb3JlPW51bGw7dGhpcy5hc24xTm90QWZ0ZXI9bnVsbDt0aGlzLmFzbjFTdWJqZWN0PW51bGw7dGhpcy5hc24xU3VialBLZXk9bnVsbDt0aGlzLmV4dGVuc2lvbnNBcnJheT1uZXcgQXJyYXkoKX07dGhpcy5zZXRTZXJpYWxOdW1iZXJCeVBhcmFtPWZ1bmN0aW9uKGIpe3RoaXMuYXNuMVNlcmlhbE51bWJlcj1uZXcgS0pVUi5hc24xLkRFUkludGVnZXIoYil9O3RoaXMuc2V0U2lnbmF0dXJlQWxnQnlQYXJhbT1mdW5jdGlvbihiKXt0aGlzLmFzbjFTaWduYXR1cmVBbGc9bmV3IEtKVVIuYXNuMS54NTA5LkFsZ29yaXRobUlkZW50aWZpZXIoYil9O3RoaXMuc2V0SXNzdWVyQnlQYXJhbT1mdW5jdGlvbihiKXt0aGlzLmFzbjFJc3N1ZXI9bmV3IEtKVVIuYXNuMS54NTA5Llg1MDBOYW1lKGIpfTt0aGlzLnNldE5vdEJlZm9yZUJ5UGFyYW09ZnVuY3Rpb24oYil7dGhpcy5hc24xTm90QmVmb3JlPW5ldyBLSlVSLmFzbjEueDUwOS5UaW1lKGIpfTt0aGlzLnNldE5vdEFmdGVyQnlQYXJhbT1mdW5jdGlvbihiKXt0aGlzLmFzbjFOb3RBZnRlcj1uZXcgS0pVUi5hc24xLng1MDkuVGltZShiKX07dGhpcy5zZXRTdWJqZWN0QnlQYXJhbT1mdW5jdGlvbihiKXt0aGlzLmFzbjFTdWJqZWN0PW5ldyBLSlVSLmFzbjEueDUwOS5YNTAwTmFtZShiKX07dGhpcy5zZXRTdWJqZWN0UHVibGljS2V5QnlQYXJhbT1mdW5jdGlvbihiKXt0aGlzLmFzbjFTdWJqUEtleT1uZXcgS0pVUi5hc24xLng1MDkuU3ViamVjdFB1YmxpY0tleUluZm8oYil9O3RoaXMuc2V0U3ViamVjdFB1YmxpY0tleUJ5R2V0S2V5PWZ1bmN0aW9uKGMpe3ZhciBiPUtFWVVUSUwuZ2V0S2V5KGMpO3RoaXMuYXNuMVN1YmpQS2V5PW5ldyBLSlVSLmFzbjEueDUwOS5TdWJqZWN0UHVibGljS2V5SW5mbyhiKX07dGhpcy5hcHBlbmRFeHRlbnNpb249ZnVuY3Rpb24oYil7dGhpcy5leHRlbnNpb25zQXJyYXkucHVzaChiKX07dGhpcy5hcHBlbmRFeHRlbnNpb25CeU5hbWU9ZnVuY3Rpb24oZCxiKXtpZihkLnRvTG93ZXJDYXNlKCk9PSJiYXNpY2NvbnN0cmFpbnRzIil7dmFyIGM9bmV3IEtKVVIuYXNuMS54NTA5LkJhc2ljQ29uc3RyYWludHMoYik7dGhpcy5hcHBlbmRFeHRlbnNpb24oYyl9ZWxzZXtpZihkLnRvTG93ZXJDYXNlKCk9PSJrZXl1c2FnZSIpe3ZhciBjPW5ldyBLSlVSLmFzbjEueDUwOS5LZXlVc2FnZShiKTt0aGlzLmFwcGVuZEV4dGVuc2lvbihjKX1lbHNle2lmKGQudG9Mb3dlckNhc2UoKT09ImNybGRpc3RyaWJ1dGlvbnBvaW50cyIpe3ZhciBjPW5ldyBLSlVSLmFzbjEueDUwOS5DUkxEaXN0cmlidXRpb25Qb2ludHMoYik7dGhpcy5hcHBlbmRFeHRlbnNpb24oYyl9ZWxzZXtpZihkLnRvTG93ZXJDYXNlKCk9PSJleHRrZXl1c2FnZSIpe3ZhciBjPW5ldyBLSlVSLmFzbjEueDUwOS5FeHRLZXlVc2FnZShiKTt0aGlzLmFwcGVuZEV4dGVuc2lvbihjKX1lbHNle2lmKGQudG9Mb3dlckNhc2UoKT09ImF1dGhvcml0eWtleWlkZW50aWZpZXIiKXt2YXIgYz1uZXcgS0pVUi5hc24xLng1MDkuQXV0aG9yaXR5S2V5SWRlbnRpZmllcihiKTt0aGlzLmFwcGVuZEV4dGVuc2lvbihjKX1lbHNle3Rocm93InVuc3VwcG9ydGVkIGV4dGVuc2lvbiBuYW1lOiAiK2R9fX19fX07dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7aWYodGhpcy5hc24xTm90QmVmb3JlPT1udWxsfHx0aGlzLmFzbjFOb3RBZnRlcj09bnVsbCl7dGhyb3cibm90QmVmb3JlIGFuZC9vciBub3RBZnRlciBub3Qgc2V0In12YXIgYz1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTpbdGhpcy5hc24xTm90QmVmb3JlLHRoaXMuYXNuMU5vdEFmdGVyXX0pO3RoaXMuYXNuMUFycmF5PW5ldyBBcnJheSgpO3RoaXMuYXNuMUFycmF5LnB1c2godGhpcy5hc24xVmVyc2lvbik7dGhpcy5hc24xQXJyYXkucHVzaCh0aGlzLmFzbjFTZXJpYWxOdW1iZXIpO3RoaXMuYXNuMUFycmF5LnB1c2godGhpcy5hc24xU2lnbmF0dXJlQWxnKTt0aGlzLmFzbjFBcnJheS5wdXNoKHRoaXMuYXNuMUlzc3Vlcik7dGhpcy5hc24xQXJyYXkucHVzaChjKTt0aGlzLmFzbjFBcnJheS5wdXNoKHRoaXMuYXNuMVN1YmplY3QpO3RoaXMuYXNuMUFycmF5LnB1c2godGhpcy5hc24xU3VialBLZXkpO2lmKHRoaXMuZXh0ZW5zaW9uc0FycmF5Lmxlbmd0aD4wKXt2YXIgZD1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTp0aGlzLmV4dGVuc2lvbnNBcnJheX0pO3ZhciBiPW5ldyBLSlVSLmFzbjEuREVSVGFnZ2VkT2JqZWN0KHtleHBsaWNpdDp0cnVlLHRhZzoiYTMiLG9iajpkfSk7dGhpcy5hc24xQXJyYXkucHVzaChiKX12YXIgZT1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTp0aGlzLmFzbjFBcnJheX0pO3RoaXMuaFRMVj1lLmdldEVuY29kZWRIZXgoKTt0aGlzLmlzTW9kaWZpZWQ9ZmFsc2U7cmV0dXJuIHRoaXMuaFRMVn07dGhpcy5faW5pdGlhbGl6ZSgpfTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEueDUwOS5UQlNDZXJ0aWZpY2F0ZSxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLng1MDkuRXh0ZW5zaW9uPWZ1bmN0aW9uKGIpe0tKVVIuYXNuMS54NTA5LkV4dGVuc2lvbi5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGE9bnVsbDt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXt2YXIgZj1uZXcgS0pVUi5hc24xLkRFUk9iamVjdElkZW50aWZpZXIoe29pZDp0aGlzLm9pZH0pO3ZhciBlPW5ldyBLSlVSLmFzbjEuREVST2N0ZXRTdHJpbmcoe2hleDp0aGlzLmdldEV4dG5WYWx1ZUhleCgpfSk7dmFyIGQ9bmV3IEFycmF5KCk7ZC5wdXNoKGYpO2lmKHRoaXMuY3JpdGljYWwpe2QucHVzaChuZXcgS0pVUi5hc24xLkRFUkJvb2xlYW4oKSl9ZC5wdXNoKGUpO3ZhciBjPW5ldyBLSlVSLmFzbjEuREVSU2VxdWVuY2Uoe2FycmF5OmR9KTtyZXR1cm4gYy5nZXRFbmNvZGVkSGV4KCl9O3RoaXMuY3JpdGljYWw9ZmFsc2U7aWYodHlwZW9mIGIhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgYi5jcml0aWNhbCE9InVuZGVmaW5lZCIpe3RoaXMuY3JpdGljYWw9Yi5jcml0aWNhbH19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEueDUwOS5FeHRlbnNpb24sS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS54NTA5LktleVVzYWdlPWZ1bmN0aW9uKGEpe0tKVVIuYXNuMS54NTA5LktleVVzYWdlLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLGEpO3RoaXMuZ2V0RXh0blZhbHVlSGV4PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXNuMUV4dG5WYWx1ZS5nZXRFbmNvZGVkSGV4KCl9O3RoaXMub2lkPSIyLjUuMjkuMTUiO2lmKHR5cGVvZiBhIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGEuYmluIT0idW5kZWZpbmVkIil7dGhpcy5hc24xRXh0blZhbHVlPW5ldyBLSlVSLmFzbjEuREVSQml0U3RyaW5nKGEpfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS54NTA5LktleVVzYWdlLEtKVVIuYXNuMS54NTA5LkV4dGVuc2lvbik7S0pVUi5hc24xLng1MDkuQmFzaWNDb25zdHJhaW50cz1mdW5jdGlvbihjKXtLSlVSLmFzbjEueDUwOS5CYXNpY0NvbnN0cmFpbnRzLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLGMpO3ZhciBhPWZhbHNlO3ZhciBiPS0xO3RoaXMuZ2V0RXh0blZhbHVlSGV4PWZ1bmN0aW9uKCl7dmFyIGU9bmV3IEFycmF5KCk7aWYodGhpcy5jQSl7ZS5wdXNoKG5ldyBLSlVSLmFzbjEuREVSQm9vbGVhbigpKX1pZih0aGlzLnBhdGhMZW4+LTEpe2UucHVzaChuZXcgS0pVUi5hc24xLkRFUkludGVnZXIoeyJpbnQiOnRoaXMucGF0aExlbn0pKX12YXIgZD1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTplfSk7dGhpcy5hc24xRXh0blZhbHVlPWQ7cmV0dXJuIHRoaXMuYXNuMUV4dG5WYWx1ZS5nZXRFbmNvZGVkSGV4KCl9O3RoaXMub2lkPSIyLjUuMjkuMTkiO3RoaXMuY0E9ZmFsc2U7dGhpcy5wYXRoTGVuPS0xO2lmKHR5cGVvZiBjIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGMuY0EhPSJ1bmRlZmluZWQiKXt0aGlzLmNBPWMuY0F9aWYodHlwZW9mIGMucGF0aExlbiE9InVuZGVmaW5lZCIpe3RoaXMucGF0aExlbj1jLnBhdGhMZW59fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLng1MDkuQmFzaWNDb25zdHJhaW50cyxLSlVSLmFzbjEueDUwOS5FeHRlbnNpb24pO0tKVVIuYXNuMS54NTA5LkNSTERpc3RyaWJ1dGlvblBvaW50cz1mdW5jdGlvbihhKXtLSlVSLmFzbjEueDUwOS5DUkxEaXN0cmlidXRpb25Qb2ludHMuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsYSk7dGhpcy5nZXRFeHRuVmFsdWVIZXg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hc24xRXh0blZhbHVlLmdldEVuY29kZWRIZXgoKX07dGhpcy5zZXRCeURQQXJyYXk9ZnVuY3Rpb24oYil7dGhpcy5hc24xRXh0blZhbHVlPW5ldyBLSlVSLmFzbjEuREVSU2VxdWVuY2Uoe2FycmF5OmJ9KX07dGhpcy5zZXRCeU9uZVVSST1mdW5jdGlvbihlKXt2YXIgYj1uZXcgS0pVUi5hc24xLng1MDkuR2VuZXJhbE5hbWVzKFt7dXJpOmV9XSk7dmFyIGQ9bmV3IEtKVVIuYXNuMS54NTA5LkRpc3RyaWJ1dGlvblBvaW50TmFtZShiKTt2YXIgYz1uZXcgS0pVUi5hc24xLng1MDkuRGlzdHJpYnV0aW9uUG9pbnQoe2Rwb2JqOmR9KTt0aGlzLnNldEJ5RFBBcnJheShbY10pfTt0aGlzLm9pZD0iMi41LjI5LjMxIjtpZih0eXBlb2YgYSE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBhLmFycmF5IT0idW5kZWZpbmVkIil7dGhpcy5zZXRCeURQQXJyYXkoYS5hcnJheSl9ZWxzZXtpZih0eXBlb2YgYS51cmkhPSJ1bmRlZmluZWQiKXt0aGlzLnNldEJ5T25lVVJJKGEudXJpKX19fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLng1MDkuQ1JMRGlzdHJpYnV0aW9uUG9pbnRzLEtKVVIuYXNuMS54NTA5LkV4dGVuc2lvbik7S0pVUi5hc24xLng1MDkuRXh0S2V5VXNhZ2U9ZnVuY3Rpb24oYSl7S0pVUi5hc24xLng1MDkuRXh0S2V5VXNhZ2Uuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsYSk7dGhpcy5zZXRQdXJwb3NlQXJyYXk9ZnVuY3Rpb24oYil7dGhpcy5hc24xRXh0blZhbHVlPW5ldyBLSlVSLmFzbjEuREVSU2VxdWVuY2UoKTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoO2MrKyl7dmFyIGQ9bmV3IEtKVVIuYXNuMS5ERVJPYmplY3RJZGVudGlmaWVyKGJbY10pO3RoaXMuYXNuMUV4dG5WYWx1ZS5hcHBlbmRBU04xT2JqZWN0KGQpfX07dGhpcy5nZXRFeHRuVmFsdWVIZXg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hc24xRXh0blZhbHVlLmdldEVuY29kZWRIZXgoKX07dGhpcy5vaWQ9IjIuNS4yOS4zNyI7aWYodHlwZW9mIGEhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgYS5hcnJheSE9InVuZGVmaW5lZCIpe3RoaXMuc2V0UHVycG9zZUFycmF5KGEuYXJyYXkpfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS54NTA5LkV4dEtleVVzYWdlLEtKVVIuYXNuMS54NTA5LkV4dGVuc2lvbik7S0pVUi5hc24xLng1MDkuQXV0aG9yaXR5S2V5SWRlbnRpZmllcj1mdW5jdGlvbihhKXtLSlVSLmFzbjEueDUwOS5BdXRob3JpdHlLZXlJZGVudGlmaWVyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLGEpO3RoaXMuYXNuMUtJRD1udWxsO3RoaXMuYXNuMUNlcnRJc3N1ZXI9bnVsbDt0aGlzLmFzbjFDZXJ0U049bnVsbDt0aGlzLmdldEV4dG5WYWx1ZUhleD1mdW5jdGlvbigpe3ZhciBjPW5ldyBBcnJheSgpO2lmKHRoaXMuYXNuMUtJRCl7Yy5wdXNoKG5ldyBLSlVSLmFzbjEuREVSVGFnZ2VkT2JqZWN0KHtleHBsaWNpdDpmYWxzZSx0YWc6IjgwIixvYmo6dGhpcy5hc24xS0lEfSkpfWlmKHRoaXMuYXNuMUNlcnRJc3N1ZXIpe2MucHVzaChuZXcgS0pVUi5hc24xLkRFUlRhZ2dlZE9iamVjdCh7ZXhwbGljaXQ6ZmFsc2UsdGFnOiJhMSIsb2JqOnRoaXMuYXNuMUNlcnRJc3N1ZXJ9KSl9aWYodGhpcy5hc24xQ2VydFNOKXtjLnB1c2gobmV3IEtKVVIuYXNuMS5ERVJUYWdnZWRPYmplY3Qoe2V4cGxpY2l0OmZhbHNlLHRhZzoiODIiLG9iajp0aGlzLmFzbjFDZXJ0U059KSl9dmFyIGI9bmV3IEtKVVIuYXNuMS5ERVJTZXF1ZW5jZSh7YXJyYXk6Y30pO3RoaXMuYXNuMUV4dG5WYWx1ZT1iO3JldHVybiB0aGlzLmFzbjFFeHRuVmFsdWUuZ2V0RW5jb2RlZEhleCgpfTt0aGlzLnNldEtJREJ5UGFyYW09ZnVuY3Rpb24oYil7dGhpcy5hc24xS0lEPW5ldyBLSlVSLmFzbjEuREVST2N0ZXRTdHJpbmcoYil9O3RoaXMuc2V0Q2VydElzc3VlckJ5UGFyYW09ZnVuY3Rpb24oYil7dGhpcy5hc24xQ2VydElzc3Vlcj1uZXcgS0pVUi5hc24xLng1MDkuWDUwME5hbWUoYil9O3RoaXMuc2V0Q2VydFNOQnlQYXJhbT1mdW5jdGlvbihiKXt0aGlzLmFzbjFDZXJ0U049bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKGIpfTt0aGlzLm9pZD0iMi41LjI5LjM1IjtpZih0eXBlb2YgYSE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBhLmtpZCE9InVuZGVmaW5lZCIpe3RoaXMuc2V0S0lEQnlQYXJhbShhLmtpZCl9aWYodHlwZW9mIGEuaXNzdWVyIT0idW5kZWZpbmVkIil7dGhpcy5zZXRDZXJ0SXNzdWVyQnlQYXJhbShhLmlzc3Vlcil9aWYodHlwZW9mIGEuc24hPSJ1bmRlZmluZWQiKXt0aGlzLnNldENlcnRTTkJ5UGFyYW0oYS5zbil9fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLng1MDkuQXV0aG9yaXR5S2V5SWRlbnRpZmllcixLSlVSLmFzbjEueDUwOS5FeHRlbnNpb24pO0tKVVIuYXNuMS54NTA5LkNSTD1mdW5jdGlvbihmKXtLSlVSLmFzbjEueDUwOS5DUkwuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBhPW51bGw7dmFyIGM9bnVsbDt2YXIgZT1udWxsO3ZhciBiPW51bGw7dmFyIGQ9bnVsbDt0aGlzLnNldFJzYVBydktleUJ5UEVNYW5kUGFzcz1mdW5jdGlvbihoLGope3ZhciBnPVBLQ1M1UEtFWS5nZXREZWNyeXB0ZWRLZXlIZXgoaCxqKTt2YXIgaT1uZXcgUlNBS2V5KCk7aS5yZWFkUHJpdmF0ZUtleUZyb21BU04xSGV4U3RyaW5nKGcpO3RoaXMucnNhUHJ2S2V5PWl9O3RoaXMuc2lnbj1mdW5jdGlvbigpe3RoaXMuYXNuMVNpZ25hdHVyZUFsZz10aGlzLmFzbjFUQlNDZXJ0TGlzdC5hc24xU2lnbmF0dXJlQWxnO3NpZz1uZXcgS0pVUi5jcnlwdG8uU2lnbmF0dXJlKHthbGc6IlNIQTF3aXRoUlNBIixwcm92OiJjcnlwdG9qcy9qc3JzYSJ9KTtzaWcuaW5pdFNpZ24odGhpcy5yc2FQcnZLZXkpO3NpZy51cGRhdGVIZXgodGhpcy5hc24xVEJTQ2VydExpc3QuZ2V0RW5jb2RlZEhleCgpKTt0aGlzLmhleFNpZz1zaWcuc2lnbigpO3RoaXMuYXNuMVNpZz1uZXcgS0pVUi5hc24xLkRFUkJpdFN0cmluZyh7aGV4OiIwMCIrdGhpcy5oZXhTaWd9KTt2YXIgZz1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTpbdGhpcy5hc24xVEJTQ2VydExpc3QsdGhpcy5hc24xU2lnbmF0dXJlQWxnLHRoaXMuYXNuMVNpZ119KTt0aGlzLmhUTFY9Zy5nZXRFbmNvZGVkSGV4KCk7dGhpcy5pc01vZGlmaWVkPWZhbHNlfTt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXtpZih0aGlzLmlzTW9kaWZpZWQ9PWZhbHNlJiZ0aGlzLmhUTFYhPW51bGwpe3JldHVybiB0aGlzLmhUTFZ9dGhyb3cibm90IHNpZ25lZCB5ZXQifTt0aGlzLmdldFBFTVN0cmluZz1mdW5jdGlvbigpe3ZhciBpPXRoaXMuZ2V0RW5jb2RlZEhleCgpO3ZhciBnPUNyeXB0b0pTLmVuYy5IZXgucGFyc2UoaSk7dmFyIGg9Q3J5cHRvSlMuZW5jLkJhc2U2NC5zdHJpbmdpZnkoZyk7dmFyIGo9aC5yZXBsYWNlKC8oLns2NH0pL2csIiQxXHJcbiIpO3JldHVybiItLS0tLUJFR0lOIFg1MDkgQ1JMLS0tLS1cclxuIitqKyJcclxuLS0tLS1FTkQgWDUwOSBDUkwtLS0tLVxyXG4ifTtpZih0eXBlb2YgZiE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBmLnRic29iaiE9InVuZGVmaW5lZCIpe3RoaXMuYXNuMVRCU0NlcnRMaXN0PWYudGJzb2JqfWlmKHR5cGVvZiBmLnJzYXBydmtleSE9InVuZGVmaW5lZCIpe3RoaXMucnNhUHJ2S2V5PWYucnNhcHJ2a2V5fWlmKCh0eXBlb2YgZi5yc2FwcnZwZW0hPSJ1bmRlZmluZWQiKSYmKHR5cGVvZiBmLnJzYXBydnBhcyE9InVuZGVmaW5lZCIpKXt0aGlzLnNldFJzYVBydktleUJ5UEVNYW5kUGFzcyhmLnJzYXBydnBlbSxmLnJzYXBydnBhcyl9fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLng1MDkuQ1JMLEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEueDUwOS5UQlNDZXJ0TGlzdD1mdW5jdGlvbihiKXtLSlVSLmFzbjEueDUwOS5UQlNDZXJ0TGlzdC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGE9bnVsbDt0aGlzLnNldFNpZ25hdHVyZUFsZ0J5UGFyYW09ZnVuY3Rpb24oYyl7dGhpcy5hc24xU2lnbmF0dXJlQWxnPW5ldyBLSlVSLmFzbjEueDUwOS5BbGdvcml0aG1JZGVudGlmaWVyKGMpfTt0aGlzLnNldElzc3VlckJ5UGFyYW09ZnVuY3Rpb24oYyl7dGhpcy5hc24xSXNzdWVyPW5ldyBLSlVSLmFzbjEueDUwOS5YNTAwTmFtZShjKX07dGhpcy5zZXRUaGlzVXBkYXRlQnlQYXJhbT1mdW5jdGlvbihjKXt0aGlzLmFzbjFUaGlzVXBkYXRlPW5ldyBLSlVSLmFzbjEueDUwOS5UaW1lKGMpfTt0aGlzLnNldE5leHRVcGRhdGVCeVBhcmFtPWZ1bmN0aW9uKGMpe3RoaXMuYXNuMU5leHRVcGRhdGU9bmV3IEtKVVIuYXNuMS54NTA5LlRpbWUoYyl9O3RoaXMuYWRkUmV2b2tlZENlcnQ9ZnVuY3Rpb24oYyxkKXt2YXIgZj17fTtpZihjIT11bmRlZmluZWQmJmMhPW51bGwpe2Yuc249Y31pZihkIT11bmRlZmluZWQmJmQhPW51bGwpe2YudGltZT1kfXZhciBlPW5ldyBLSlVSLmFzbjEueDUwOS5DUkxFbnRyeShmKTt0aGlzLmFSZXZva2VkQ2VydC5wdXNoKGUpfTt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXt0aGlzLmFzbjFBcnJheT1uZXcgQXJyYXkoKTtpZih0aGlzLmFzbjFWZXJzaW9uIT1udWxsKXt0aGlzLmFzbjFBcnJheS5wdXNoKHRoaXMuYXNuMVZlcnNpb24pfXRoaXMuYXNuMUFycmF5LnB1c2godGhpcy5hc24xU2lnbmF0dXJlQWxnKTt0aGlzLmFzbjFBcnJheS5wdXNoKHRoaXMuYXNuMUlzc3Vlcik7dGhpcy5hc24xQXJyYXkucHVzaCh0aGlzLmFzbjFUaGlzVXBkYXRlKTtpZih0aGlzLmFzbjFOZXh0VXBkYXRlIT1udWxsKXt0aGlzLmFzbjFBcnJheS5wdXNoKHRoaXMuYXNuMU5leHRVcGRhdGUpfWlmKHRoaXMuYVJldm9rZWRDZXJ0Lmxlbmd0aD4wKXt2YXIgYz1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTp0aGlzLmFSZXZva2VkQ2VydH0pO3RoaXMuYXNuMUFycmF5LnB1c2goYyl9dmFyIGQ9bmV3IEtKVVIuYXNuMS5ERVJTZXF1ZW5jZSh7YXJyYXk6dGhpcy5hc24xQXJyYXl9KTt0aGlzLmhUTFY9ZC5nZXRFbmNvZGVkSGV4KCk7dGhpcy5pc01vZGlmaWVkPWZhbHNlO3JldHVybiB0aGlzLmhUTFZ9O3RoaXMuX2luaXRpYWxpemU9ZnVuY3Rpb24oKXt0aGlzLmFzbjFWZXJzaW9uPW51bGw7dGhpcy5hc24xU2lnbmF0dXJlQWxnPW51bGw7dGhpcy5hc24xSXNzdWVyPW51bGw7dGhpcy5hc24xVGhpc1VwZGF0ZT1udWxsO3RoaXMuYXNuMU5leHRVcGRhdGU9bnVsbDt0aGlzLmFSZXZva2VkQ2VydD1uZXcgQXJyYXkoKX07dGhpcy5faW5pdGlhbGl6ZSgpfTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEueDUwOS5UQlNDZXJ0TGlzdCxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLng1MDkuQ1JMRW50cnk9ZnVuY3Rpb24oYyl7S0pVUi5hc24xLng1MDkuQ1JMRW50cnkuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBiPW51bGw7dmFyIGE9bnVsbDt0aGlzLnNldENlcnRTZXJpYWw9ZnVuY3Rpb24oZCl7dGhpcy5zbj1uZXcgS0pVUi5hc24xLkRFUkludGVnZXIoZCl9O3RoaXMuc2V0UmV2b2NhdGlvbkRhdGU9ZnVuY3Rpb24oZCl7dGhpcy50aW1lPW5ldyBLSlVSLmFzbjEueDUwOS5UaW1lKGQpfTt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXt2YXIgZD1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTpbdGhpcy5zbix0aGlzLnRpbWVdfSk7dGhpcy5UTFY9ZC5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIHRoaXMuVExWfTtpZih0eXBlb2YgYyE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBjLnRpbWUhPSJ1bmRlZmluZWQiKXt0aGlzLnNldFJldm9jYXRpb25EYXRlKGMudGltZSl9aWYodHlwZW9mIGMuc24hPSJ1bmRlZmluZWQiKXt0aGlzLnNldENlcnRTZXJpYWwoYy5zbil9fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLng1MDkuQ1JMRW50cnksS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS54NTA5Llg1MDBOYW1lPWZ1bmN0aW9uKGIpe0tKVVIuYXNuMS54NTA5Llg1MDBOYW1lLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt0aGlzLmFzbjFBcnJheT1uZXcgQXJyYXkoKTt0aGlzLnNldEJ5U3RyaW5nPWZ1bmN0aW9uKGMpe3ZhciBkPWMuc3BsaXQoIi8iKTtkLnNoaWZ0KCk7Zm9yKHZhciBlPTA7ZTxkLmxlbmd0aDtlKyspe3RoaXMuYXNuMUFycmF5LnB1c2gobmV3IEtKVVIuYXNuMS54NTA5LlJETih7c3RyOmRbZV19KSl9fTt0aGlzLnNldEJ5T2JqZWN0PWZ1bmN0aW9uKGUpe2Zvcih2YXIgYyBpbiBlKXtpZihlLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1uZXcgS0pVUi5hc24xLng1MDkuUkROKHtzdHI6YysiPSIrZVtjXX0pO3RoaXMuYXNuMUFycmF5P3RoaXMuYXNuMUFycmF5LnB1c2goZCk6dGhpcy5hc24xQXJyYXk9W2RdfX19O3RoaXMuZ2V0RW5jb2RlZEhleD1mdW5jdGlvbigpe2lmKHR5cGVvZiB0aGlzLmhUTFY9PSJzdHJpbmciKXtyZXR1cm4gdGhpcy5oVExWfXZhciBjPW5ldyBLSlVSLmFzbjEuREVSU2VxdWVuY2Uoe2FycmF5OnRoaXMuYXNuMUFycmF5fSk7dGhpcy5oVExWPWMuZ2V0RW5jb2RlZEhleCgpO3JldHVybiB0aGlzLmhUTFZ9O2lmKHR5cGVvZiBiIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGIuc3RyIT0idW5kZWZpbmVkIil7dGhpcy5zZXRCeVN0cmluZyhiLnN0cil9ZWxzZXtpZih0eXBlb2YgYj09PSJvYmplY3QiKXt0aGlzLnNldEJ5T2JqZWN0KGIpfX1pZih0eXBlb2YgYi5jZXJ0aXNzdWVyIT0idW5kZWZpbmVkIil7dmFyIGE9bmV3IFg1MDkoKTthLmhleD1YNTA5LnBlbVRvSGV4KGIuY2VydGlzc3Vlcik7dGhpcy5oVExWPWEuZ2V0SXNzdWVySGV4KCl9aWYodHlwZW9mIGIuY2VydHN1YmplY3QhPSJ1bmRlZmluZWQiKXt2YXIgYT1uZXcgWDUwOSgpO2EuaGV4PVg1MDkucGVtVG9IZXgoYi5jZXJ0c3ViamVjdCk7dGhpcy5oVExWPWEuZ2V0U3ViamVjdEhleCgpfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS54NTA5Llg1MDBOYW1lLEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEueDUwOS5SRE49ZnVuY3Rpb24oYSl7S0pVUi5hc24xLng1MDkuUkROLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt0aGlzLmFzbjFBcnJheT1uZXcgQXJyYXkoKTt0aGlzLmFkZEJ5U3RyaW5nPWZ1bmN0aW9uKGIpe3RoaXMuYXNuMUFycmF5LnB1c2gobmV3IEtKVVIuYXNuMS54NTA5LkF0dHJpYnV0ZVR5cGVBbmRWYWx1ZSh7c3RyOmJ9KSl9O3RoaXMuZ2V0RW5jb2RlZEhleD1mdW5jdGlvbigpe3ZhciBiPW5ldyBLSlVSLmFzbjEuREVSU2V0KHthcnJheTp0aGlzLmFzbjFBcnJheX0pO3RoaXMuVExWPWIuZ2V0RW5jb2RlZEhleCgpO3JldHVybiB0aGlzLlRMVn07aWYodHlwZW9mIGEhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgYS5zdHIhPSJ1bmRlZmluZWQiKXt0aGlzLmFkZEJ5U3RyaW5nKGEuc3RyKX19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEueDUwOS5SRE4sS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS54NTA5LkF0dHJpYnV0ZVR5cGVBbmRWYWx1ZT1mdW5jdGlvbihiKXtLSlVSLmFzbjEueDUwOS5BdHRyaWJ1dGVUeXBlQW5kVmFsdWUuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBkPW51bGw7dmFyIGM9bnVsbDt2YXIgYT0idXRmOCI7dGhpcy5zZXRCeVN0cmluZz1mdW5jdGlvbihlKXtpZihlLm1hdGNoKC9eKFtePV0rKT0oLispJC8pKXt0aGlzLnNldEJ5QXR0clR5cGVBbmRWYWx1ZVN0cihSZWdFeHAuJDEsUmVnRXhwLiQyKX1lbHNle3Rocm93Im1hbGZvcm1lZCBhdHRyVHlwZUFuZFZhbHVlU3RyOiAiK2V9fTt0aGlzLnNldEJ5QXR0clR5cGVBbmRWYWx1ZVN0cj1mdW5jdGlvbihnLGYpe3RoaXMudHlwZU9iaj1LSlVSLmFzbjEueDUwOS5PSUQuYXR5cGUyb2JqKGcpO3ZhciBlPWE7aWYoZz09IkMiKXtlPSJwcm4ifXRoaXMudmFsdWVPYmo9dGhpcy5nZXRWYWx1ZU9iaihlLGYpfTt0aGlzLmdldFZhbHVlT2JqPWZ1bmN0aW9uKGYsZSl7aWYoZj09InV0ZjgiKXtyZXR1cm4gbmV3IEtKVVIuYXNuMS5ERVJVVEY4U3RyaW5nKHtzdHI6ZX0pfWlmKGY9PSJwcm4iKXtyZXR1cm4gbmV3IEtKVVIuYXNuMS5ERVJQcmludGFibGVTdHJpbmcoe3N0cjplfSl9aWYoZj09InRlbCIpe3JldHVybiBuZXcgS0pVUi5hc24xLkRFUlRlbGV0ZXhTdHJpbmcoe3N0cjplfSl9aWYoZj09ImlhNSIpe3JldHVybiBuZXcgS0pVUi5hc24xLkRFUklBNVN0cmluZyh7c3RyOmV9KX10aHJvdyJ1bnN1cHBvcnRlZCBkaXJlY3Rvcnkgc3RyaW5nIHR5cGU6IHR5cGU9IitmKyIgdmFsdWU9IitlfTt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTpbdGhpcy50eXBlT2JqLHRoaXMudmFsdWVPYmpdfSk7dGhpcy5UTFY9ZS5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIHRoaXMuVExWfTtpZih0eXBlb2YgYiE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBiLnN0ciE9InVuZGVmaW5lZCIpe3RoaXMuc2V0QnlTdHJpbmcoYi5zdHIpfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS54NTA5LkF0dHJpYnV0ZVR5cGVBbmRWYWx1ZSxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLng1MDkuU3ViamVjdFB1YmxpY0tleUluZm89ZnVuY3Rpb24oZCl7S0pVUi5hc24xLng1MDkuU3ViamVjdFB1YmxpY0tleUluZm8uc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBiPW51bGw7dmFyIGM9bnVsbDt2YXIgYT1udWxsO3RoaXMuc2V0UlNBS2V5PWZ1bmN0aW9uKGUpe2lmKCFSU0FLZXkucHJvdG90eXBlLmlzUHJvdG90eXBlT2YoZSkpe3Rocm93ImFyZ3VtZW50IGlzIG5vdCBSU0FLZXkgaW5zdGFuY2UifXRoaXMucnNhS2V5PWU7dmFyIGc9bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKHtiaWdpbnQ6ZS5ufSk7dmFyIGY9bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKHsiaW50IjplLmV9KTt2YXIgaT1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTpbZyxmXX0pO3ZhciBoPWkuZ2V0RW5jb2RlZEhleCgpO3RoaXMuYXNuMUFsZ0lkPW5ldyBLSlVSLmFzbjEueDUwOS5BbGdvcml0aG1JZGVudGlmaWVyKHtuYW1lOiJyc2FFbmNyeXB0aW9uIn0pO3RoaXMuYXNuMVN1YmpQS2V5PW5ldyBLSlVSLmFzbjEuREVSQml0U3RyaW5nKHtoZXg6IjAwIitofSl9O3RoaXMuc2V0UlNBUEVNPWZ1bmN0aW9uKGcpe2lmKGcubWF0Y2goLy0tLS0tQkVHSU4gUFVCTElDIEtFWS0tLS0tLykpe3ZhciBuPWc7bj1uLnJlcGxhY2UoL14tLS0tLVteLV0rLS0tLS0vLCIiKTtuPW4ucmVwbGFjZSgvLS0tLS1bXi1dKy0tLS0tXHMqJC8sIiIpO3ZhciBtPW4ucmVwbGFjZSgvXHMrL2csIiIpO3ZhciBmPUNyeXB0b0pTLmVuYy5CYXNlNjQucGFyc2UobSk7dmFyIGk9Q3J5cHRvSlMuZW5jLkhleC5zdHJpbmdpZnkoZik7dmFyIGs9X3JzYXBlbV9nZXRIZXhWYWx1ZUFycmF5T2ZDaGlsZHJlbkZyb21IZXgoaSk7dmFyIGg9a1sxXTt2YXIgbD1oLnN1YnN0cigyKTt2YXIgZT1fcnNhcGVtX2dldEhleFZhbHVlQXJyYXlPZkNoaWxkcmVuRnJvbUhleChsKTt2YXIgaj1uZXcgUlNBS2V5KCk7ai5zZXRQdWJsaWMoZVswXSxlWzFdKTt0aGlzLnNldFJTQUtleShqKX1lbHNle3Rocm93ImtleSBub3Qgc3VwcG9ydGVkIn19O3RoaXMuZ2V0QVNOMU9iamVjdD1mdW5jdGlvbigpe2lmKHRoaXMuYXNuMUFsZ0lkPT1udWxsfHx0aGlzLmFzbjFTdWJqUEtleT09bnVsbCl7dGhyb3ciYWxnSWQgYW5kL29yIHN1YmpQdWJLZXkgbm90IHNldCJ9dmFyIGU9bmV3IEtKVVIuYXNuMS5ERVJTZXF1ZW5jZSh7YXJyYXk6W3RoaXMuYXNuMUFsZ0lkLHRoaXMuYXNuMVN1YmpQS2V5XX0pO3JldHVybiBlfTt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmdldEFTTjFPYmplY3QoKTt0aGlzLmhUTFY9ZS5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIHRoaXMuaFRMVn07dGhpcy5fc2V0UlNBS2V5PWZ1bmN0aW9uKGUpe3ZhciBnPUtKVVIuYXNuMS5BU04xVXRpbC5uZXdPYmplY3Qoe3NlcTpbeyJpbnQiOntiaWdpbnQ6ZS5ufX0seyJpbnQiOnsiaW50IjplLmV9fV19KTt2YXIgZj1nLmdldEVuY29kZWRIZXgoKTt0aGlzLmFzbjFBbGdJZD1uZXcgS0pVUi5hc24xLng1MDkuQWxnb3JpdGhtSWRlbnRpZmllcih7bmFtZToicnNhRW5jcnlwdGlvbiJ9KTt0aGlzLmFzbjFTdWJqUEtleT1uZXcgS0pVUi5hc24xLkRFUkJpdFN0cmluZyh7aGV4OiIwMCIrZn0pfTt0aGlzLl9zZXRFQz1mdW5jdGlvbihlKXt2YXIgZj1uZXcgS0pVUi5hc24xLkRFUk9iamVjdElkZW50aWZpZXIoe25hbWU6ZS5jdXJ2ZU5hbWV9KTt0aGlzLmFzbjFBbGdJZD1uZXcgS0pVUi5hc24xLng1MDkuQWxnb3JpdGhtSWRlbnRpZmllcih7bmFtZToiZWNQdWJsaWNLZXkiLGFzbjFwYXJhbXM6Zn0pO3RoaXMuYXNuMVN1YmpQS2V5PW5ldyBLSlVSLmFzbjEuREVSQml0U3RyaW5nKHtoZXg6IjAwIitlLnB1YktleUhleH0pfTt0aGlzLl9zZXREU0E9ZnVuY3Rpb24oZSl7dmFyIGY9bmV3IEtKVVIuYXNuMS5BU04xVXRpbC5uZXdPYmplY3Qoe3NlcTpbeyJpbnQiOntiaWdpbnQ6ZS5wfX0seyJpbnQiOntiaWdpbnQ6ZS5xfX0seyJpbnQiOntiaWdpbnQ6ZS5nfX1dfSk7dGhpcy5hc24xQWxnSWQ9bmV3IEtKVVIuYXNuMS54NTA5LkFsZ29yaXRobUlkZW50aWZpZXIoe25hbWU6ImRzYSIsYXNuMXBhcmFtczpmfSk7dmFyIGc9bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKHtiaWdpbnQ6ZS55fSk7dGhpcy5hc24xU3VialBLZXk9bmV3IEtKVVIuYXNuMS5ERVJCaXRTdHJpbmcoe2hleDoiMDAiK2cuZ2V0RW5jb2RlZEhleCgpfSl9O2lmKHR5cGVvZiBkIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIFJTQUtleSE9InVuZGVmaW5lZCImJmQgaW5zdGFuY2VvZiBSU0FLZXkpe3RoaXMuX3NldFJTQUtleShkKX1lbHNle2lmKHR5cGVvZiBLSlVSLmNyeXB0by5FQ0RTQSE9InVuZGVmaW5lZCImJmQgaW5zdGFuY2VvZiBLSlVSLmNyeXB0by5FQ0RTQSl7dGhpcy5fc2V0RUMoZCl9ZWxzZXtpZih0eXBlb2YgS0pVUi5jcnlwdG8uRFNBIT0idW5kZWZpbmVkIiYmZCBpbnN0YW5jZW9mIEtKVVIuY3J5cHRvLkRTQSl7dGhpcy5fc2V0RFNBKGQpfWVsc2V7aWYodHlwZW9mIGQucnNha2V5IT0idW5kZWZpbmVkIil7dGhpcy5zZXRSU0FLZXkoZC5yc2FrZXkpfWVsc2V7aWYodHlwZW9mIGQucnNhcGVtIT0idW5kZWZpbmVkIil7dGhpcy5zZXRSU0FQRU0oZC5yc2FwZW0pfX19fX19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEueDUwOS5TdWJqZWN0UHVibGljS2V5SW5mbyxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLng1MDkuVGltZT1mdW5jdGlvbihjKXtLSlVSLmFzbjEueDUwOS5UaW1lLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt2YXIgYj1udWxsO3ZhciBhPW51bGw7dGhpcy5zZXRUaW1lUGFyYW1zPWZ1bmN0aW9uKGQpe3RoaXMudGltZVBhcmFtcz1kfTt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXt2YXIgZD1udWxsO2lmKHRoaXMudGltZVBhcmFtcyE9bnVsbCl7aWYodGhpcy50eXBlPT0idXRjIil7ZD1uZXcgS0pVUi5hc24xLkRFUlVUQ1RpbWUodGhpcy50aW1lUGFyYW1zKX1lbHNle2Q9bmV3IEtKVVIuYXNuMS5ERVJHZW5lcmFsaXplZFRpbWUodGhpcy50aW1lUGFyYW1zKX19ZWxzZXtpZih0aGlzLnR5cGU9PSJ1dGMiKXtkPW5ldyBLSlVSLmFzbjEuREVSVVRDVGltZSgpfWVsc2V7ZD1uZXcgS0pVUi5hc24xLkRFUkdlbmVyYWxpemVkVGltZSgpfX10aGlzLlRMVj1kLmdldEVuY29kZWRIZXgoKTtyZXR1cm4gdGhpcy5UTFZ9O3RoaXMudHlwZT0idXRjIjtpZih0eXBlb2YgYyE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBjLnR5cGUhPSJ1bmRlZmluZWQiKXt0aGlzLnR5cGU9Yy50eXBlfWVsc2V7aWYodHlwZW9mIGMuc3RyIT0idW5kZWZpbmVkIil7aWYoYy5zdHIubWF0Y2goL15bMC05XXsxMn1aJC8pKXt0aGlzLnR5cGU9InV0YyJ9aWYoYy5zdHIubWF0Y2goL15bMC05XXsxNH1aJC8pKXt0aGlzLnR5cGU9ImdlbiJ9fX10aGlzLnRpbWVQYXJhbXM9Y319O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS54NTA5LlRpbWUsS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS54NTA5LkFsZ29yaXRobUlkZW50aWZpZXI9ZnVuY3Rpb24oZSl7S0pVUi5hc24xLng1MDkuQWxnb3JpdGhtSWRlbnRpZmllci5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGE9bnVsbDt2YXIgZD1udWxsO3ZhciBiPW51bGw7dmFyIGM9ZmFsc2U7dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7aWYodGhpcy5uYW1lQWxnPT1udWxsJiZ0aGlzLmFzbjFBbGc9PW51bGwpe3Rocm93ImFsZ29yaXRobSBub3Qgc3BlY2lmaWVkIn1pZih0aGlzLm5hbWVBbGchPW51bGwmJnRoaXMuYXNuMUFsZz09bnVsbCl7dGhpcy5hc24xQWxnPUtKVVIuYXNuMS54NTA5Lk9JRC5uYW1lMm9iaih0aGlzLm5hbWVBbGcpfXZhciBmPVt0aGlzLmFzbjFBbGddO2lmKCF0aGlzLnBhcmFtRW1wdHkpe2YucHVzaCh0aGlzLmFzbjFQYXJhbXMpfXZhciBnPW5ldyBLSlVSLmFzbjEuREVSU2VxdWVuY2Uoe2FycmF5OmZ9KTt0aGlzLmhUTFY9Zy5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIHRoaXMuaFRMVn07aWYodHlwZW9mIGUhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgZS5uYW1lIT0idW5kZWZpbmVkIil7dGhpcy5uYW1lQWxnPWUubmFtZX1pZih0eXBlb2YgZS5hc24xcGFyYW1zIT0idW5kZWZpbmVkIil7dGhpcy5hc24xUGFyYW1zPWUuYXNuMXBhcmFtc31pZih0eXBlb2YgZS5wYXJhbWVtcHR5IT0idW5kZWZpbmVkIil7dGhpcy5wYXJhbUVtcHR5PWUucGFyYW1lbXB0eX19aWYodGhpcy5hc24xUGFyYW1zPT1udWxsKXt0aGlzLmFzbjFQYXJhbXM9bmV3IEtKVVIuYXNuMS5ERVJOdWxsKCl9fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEueDUwOS5BbGdvcml0aG1JZGVudGlmaWVyLEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEueDUwOS5HZW5lcmFsTmFtZT1mdW5jdGlvbihkKXtLSlVSLmFzbjEueDUwOS5HZW5lcmFsTmFtZS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGM9bnVsbDt2YXIgYj1udWxsO3ZhciBhPXtyZmM4MjI6IjgxIixkbnM6IjgyIixkbjoiYTQiLHVyaToiODYifTt0aGlzLmV4cGxpY2l0PWZhbHNlO3RoaXMuc2V0QnlQYXJhbT1mdW5jdGlvbihrKXt2YXIgaj1udWxsO3ZhciBnPW51bGw7aWYodHlwZW9mIGs9PSJ1bmRlZmluZWQiKXtyZXR1cm59aWYodHlwZW9mIGsucmZjODIyIT0idW5kZWZpbmVkIil7dGhpcy50eXBlPSJyZmM4MjIiO2c9bmV3IEtKVVIuYXNuMS5ERVJJQTVTdHJpbmcoe3N0cjprW3RoaXMudHlwZV19KX1pZih0eXBlb2Ygay5kbnMhPSJ1bmRlZmluZWQiKXt0aGlzLnR5cGU9ImRucyI7Zz1uZXcgS0pVUi5hc24xLkRFUklBNVN0cmluZyh7c3RyOmtbdGhpcy50eXBlXX0pfWlmKHR5cGVvZiBrLnVyaSE9InVuZGVmaW5lZCIpe3RoaXMudHlwZT0idXJpIjtnPW5ldyBLSlVSLmFzbjEuREVSSUE1U3RyaW5nKHtzdHI6a1t0aGlzLnR5cGVdfSl9aWYodHlwZW9mIGsuY2VydGlzc3VlciE9InVuZGVmaW5lZCIpe3RoaXMudHlwZT0iZG4iO3RoaXMuZXhwbGljaXQ9dHJ1ZTt2YXIgaD1rLmNlcnRpc3N1ZXI7dmFyIGY9bnVsbDtpZihoLm1hdGNoKC9eWzAtOUEtRmEtZl0rJC8pKXtmPT1ofWlmKGguaW5kZXhPZigiLS0tLS1CRUdJTiAiKSE9LTEpe2Y9WDUwOS5wZW1Ub0hleChoKX1pZihmPT1udWxsKXt0aHJvdyJjZXJ0aXNzdWVyIHBhcmFtIG5vdCBjZXJ0In12YXIgZT1uZXcgWDUwOSgpO2UuaGV4PWY7dmFyIGk9ZS5nZXRJc3N1ZXJIZXgoKTtnPW5ldyBLSlVSLmFzbjEuQVNOMU9iamVjdCgpO2cuaFRMVj1pfWlmKHR5cGVvZiBrLmNlcnRzdWJqIT0idW5kZWZpbmVkIil7dGhpcy50eXBlPSJkbiI7dGhpcy5leHBsaWNpdD10cnVlO3ZhciBoPWsuY2VydHN1Ymo7dmFyIGY9bnVsbDtpZihoLm1hdGNoKC9eWzAtOUEtRmEtZl0rJC8pKXtmPT1ofWlmKGguaW5kZXhPZigiLS0tLS1CRUdJTiAiKSE9LTEpe2Y9WDUwOS5wZW1Ub0hleChoKX1pZihmPT1udWxsKXt0aHJvdyJjZXJ0c3ViaiBwYXJhbSBub3QgY2VydCJ9dmFyIGU9bmV3IFg1MDkoKTtlLmhleD1mO3ZhciBpPWUuZ2V0U3ViamVjdEhleCgpO2c9bmV3IEtKVVIuYXNuMS5BU04xT2JqZWN0KCk7Zy5oVExWPWl9aWYodGhpcy50eXBlPT1udWxsKXt0aHJvdyJ1bnN1cHBvcnRlZCB0eXBlIGluIHBhcmFtcz0iK2t9dGhpcy5hc24xT2JqPW5ldyBLSlVSLmFzbjEuREVSVGFnZ2VkT2JqZWN0KHtleHBsaWNpdDp0aGlzLmV4cGxpY2l0LHRhZzphW3RoaXMudHlwZV0sb2JqOmd9KX07dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXNuMU9iai5nZXRFbmNvZGVkSGV4KCl9O2lmKHR5cGVvZiBkIT0idW5kZWZpbmVkIil7dGhpcy5zZXRCeVBhcmFtKGQpfX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLng1MDkuR2VuZXJhbE5hbWUsS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS54NTA5LkdlbmVyYWxOYW1lcz1mdW5jdGlvbihiKXtLSlVSLmFzbjEueDUwOS5HZW5lcmFsTmFtZXMuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBhPW51bGw7dGhpcy5zZXRCeVBhcmFtQXJyYXk9ZnVuY3Rpb24oZSl7Zm9yKHZhciBjPTA7YzxlLmxlbmd0aDtjKyspe3ZhciBkPW5ldyBLSlVSLmFzbjEueDUwOS5HZW5lcmFsTmFtZShlW2NdKTt0aGlzLmFzbjFBcnJheS5wdXNoKGQpfX07dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7dmFyIGM9bmV3IEtKVVIuYXNuMS5ERVJTZXF1ZW5jZSh7YXJyYXk6dGhpcy5hc24xQXJyYXl9KTtyZXR1cm4gYy5nZXRFbmNvZGVkSGV4KCl9O3RoaXMuYXNuMUFycmF5PW5ldyBBcnJheSgpO2lmKHR5cGVvZiBiIT0idW5kZWZpbmVkIil7dGhpcy5zZXRCeVBhcmFtQXJyYXkoYil9fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEueDUwOS5HZW5lcmFsTmFtZXMsS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS54NTA5LkRpc3RyaWJ1dGlvblBvaW50TmFtZT1mdW5jdGlvbihiKXtLSlVSLmFzbjEueDUwOS5EaXN0cmlidXRpb25Qb2ludE5hbWUuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBlPW51bGw7dmFyIGM9bnVsbDt2YXIgYT1udWxsO3ZhciBkPW51bGw7dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7aWYodGhpcy50eXBlIT0iZnVsbCIpe3Rocm93ImN1cnJlbnRseSB0eXBlIHNoYWxsIGJlICdmdWxsJzogIit0aGlzLnR5cGV9dGhpcy5hc24xT2JqPW5ldyBLSlVSLmFzbjEuREVSVGFnZ2VkT2JqZWN0KHtleHBsaWNpdDpmYWxzZSx0YWc6dGhpcy50YWcsb2JqOnRoaXMuYXNuMVZ9KTt0aGlzLmhUTFY9dGhpcy5hc24xT2JqLmdldEVuY29kZWRIZXgoKTtyZXR1cm4gdGhpcy5oVExWfTtpZih0eXBlb2YgYiE9InVuZGVmaW5lZCIpe2lmKEtKVVIuYXNuMS54NTA5LkdlbmVyYWxOYW1lcy5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihiKSl7dGhpcy50eXBlPSJmdWxsIjt0aGlzLnRhZz0iYTAiO3RoaXMuYXNuMVY9Yn1lbHNle3Rocm93IlRoaXMgY2xhc3Mgc3VwcG9ydHMgR2VuZXJhbE5hbWVzIG9ubHkgYXMgYXJndW1lbnQifX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS54NTA5LkRpc3RyaWJ1dGlvblBvaW50TmFtZSxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLng1MDkuRGlzdHJpYnV0aW9uUG9pbnQ9ZnVuY3Rpb24oYil7S0pVUi5hc24xLng1MDkuRGlzdHJpYnV0aW9uUG9pbnQuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBhPW51bGw7dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7dmFyIGM9bmV3IEtKVVIuYXNuMS5ERVJTZXF1ZW5jZSgpO2lmKHRoaXMuYXNuMURQIT1udWxsKXt2YXIgZD1uZXcgS0pVUi5hc24xLkRFUlRhZ2dlZE9iamVjdCh7ZXhwbGljaXQ6dHJ1ZSx0YWc6ImEwIixvYmo6dGhpcy5hc24xRFB9KTtjLmFwcGVuZEFTTjFPYmplY3QoZCl9dGhpcy5oVExWPWMuZ2V0RW5jb2RlZEhleCgpO3JldHVybiB0aGlzLmhUTFZ9O2lmKHR5cGVvZiBiIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGIuZHBvYmohPSJ1bmRlZmluZWQiKXt0aGlzLmFzbjFEUD1iLmRwb2JqfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS54NTA5LkRpc3RyaWJ1dGlvblBvaW50LEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEueDUwOS5PSUQ9bmV3IGZ1bmN0aW9uKGEpe3RoaXMuYXR5cGUyb2lkTGlzdD17QzoiMi41LjQuNiIsTzoiMi41LjQuMTAiLE9VOiIyLjUuNC4xMSIsU1Q6IjIuNS40LjgiLEw6IjIuNS40LjciLENOOiIyLjUuNC4zIixTTjoiMi41LjQuNCIsRE46IjIuNS40LjQ5IixEQzoiMC45LjIzNDIuMTkyMDAzMDAuMTAwLjEuMjUiLH07dGhpcy5uYW1lMm9pZExpc3Q9e3NoYTE6IjEuMy4xNC4zLjIuMjYiLHNoYTI1NjoiMi4xNi44NDAuMS4xMDEuMy40LjIuMSIsc2hhMzg0OiIyLjE2Ljg0MC4xLjEwMS4zLjQuMi4yIixzaGE1MTI6IjIuMTYuODQwLjEuMTAxLjMuNC4yLjMiLHNoYTIyNDoiMi4xNi44NDAuMS4xMDEuMy40LjIuNCIsbWQ1OiIxLjIuODQwLjExMzU0OS4yLjUiLG1kMjoiMS4zLjE0LjcuMi4yLjEiLHJpcGVtZDE2MDoiMS4zLjM2LjMuMi4xIixNRDJ3aXRoUlNBOiIxLjIuODQwLjExMzU0OS4xLjEuMiIsTUQ0d2l0aFJTQToiMS4yLjg0MC4xMTM1NDkuMS4xLjMiLE1ENXdpdGhSU0E6IjEuMi44NDAuMTEzNTQ5LjEuMS40IixTSEExd2l0aFJTQToiMS4yLjg0MC4xMTM1NDkuMS4xLjUiLFNIQTIyNHdpdGhSU0E6IjEuMi44NDAuMTEzNTQ5LjEuMS4xNCIsU0hBMjU2d2l0aFJTQToiMS4yLjg0MC4xMTM1NDkuMS4xLjExIixTSEEzODR3aXRoUlNBOiIxLjIuODQwLjExMzU0OS4xLjEuMTIiLFNIQTUxMndpdGhSU0E6IjEuMi44NDAuMTEzNTQ5LjEuMS4xMyIsU0hBMXdpdGhFQ0RTQToiMS4yLjg0MC4xMDA0NS40LjEiLFNIQTIyNHdpdGhFQ0RTQToiMS4yLjg0MC4xMDA0NS40LjMuMSIsU0hBMjU2d2l0aEVDRFNBOiIxLjIuODQwLjEwMDQ1LjQuMy4yIixTSEEzODR3aXRoRUNEU0E6IjEuMi44NDAuMTAwNDUuNC4zLjMiLFNIQTUxMndpdGhFQ0RTQToiMS4yLjg0MC4xMDA0NS40LjMuNCIsZHNhOiIxLjIuODQwLjEwMDQwLjQuMSIsU0hBMXdpdGhEU0E6IjEuMi44NDAuMTAwNDAuNC4zIixTSEEyMjR3aXRoRFNBOiIyLjE2Ljg0MC4xLjEwMS4zLjQuMy4xIixTSEEyNTZ3aXRoRFNBOiIyLjE2Ljg0MC4xLjEwMS4zLjQuMy4yIixyc2FFbmNyeXB0aW9uOiIxLjIuODQwLjExMzU0OS4xLjEuMSIsY291bnRyeU5hbWU6IjIuNS40LjYiLG9yZ2FuaXphdGlvbjoiMi41LjQuMTAiLG9yZ2FuaXphdGlvbmFsVW5pdDoiMi41LjQuMTEiLHN0YXRlT3JQcm92aW5jZU5hbWU6IjIuNS40LjgiLGxvY2FsaXR5OiIyLjUuNC43Iixjb21tb25OYW1lOiIyLjUuNC4zIixzdWJqZWN0S2V5SWRlbnRpZmllcjoiMi41LjI5LjE0IixrZXlVc2FnZToiMi41LjI5LjE1IixzdWJqZWN0QWx0TmFtZToiMi41LjI5LjE3IixiYXNpY0NvbnN0cmFpbnRzOiIyLjUuMjkuMTkiLG5hbWVDb25zdHJhaW50czoiMi41LjI5LjMwIixjUkxEaXN0cmlidXRpb25Qb2ludHM6IjIuNS4yOS4zMSIsY2VydGlmaWNhdGVQb2xpY2llczoiMi41LjI5LjMyIixhdXRob3JpdHlLZXlJZGVudGlmaWVyOiIyLjUuMjkuMzUiLHBvbGljeUNvbnN0cmFpbnRzOiIyLjUuMjkuMzYiLGV4dEtleVVzYWdlOiIyLjUuMjkuMzciLGF1dGhvcml0eUluZm9BY2Nlc3M6IjEuMy42LjEuNS41LjcuMS4xIixhbnlFeHRlbmRlZEtleVVzYWdlOiIyLjUuMjkuMzcuMCIsc2VydmVyQXV0aDoiMS4zLjYuMS41LjUuNy4zLjEiLGNsaWVudEF1dGg6IjEuMy42LjEuNS41LjcuMy4yIixjb2RlU2lnbmluZzoiMS4zLjYuMS41LjUuNy4zLjMiLGVtYWlsUHJvdGVjdGlvbjoiMS4zLjYuMS41LjUuNy4zLjQiLHRpbWVTdGFtcGluZzoiMS4zLjYuMS41LjUuNy4zLjgiLG9jc3BTaWduaW5nOiIxLjMuNi4xLjUuNS43LjMuOSIsZWNQdWJsaWNLZXk6IjEuMi44NDAuMTAwNDUuMi4xIixzZWNwMjU2cjE6IjEuMi44NDAuMTAwNDUuMy4xLjciLHNlY3AyNTZrMToiMS4zLjEzMi4wLjEwIixzZWNwMzg0cjE6IjEuMy4xMzIuMC4zNCIscGtjczVQQkVTMjoiMS4yLjg0MC4xMTM1NDkuMS41LjEzIixwa2NzNVBCS0RGMjoiMS4yLjg0MC4xMTM1NDkuMS41LjEyIiwiZGVzLUVERTMtQ0JDIjoiMS4yLjg0MC4xMTM1NDkuMy43IixkYXRhOiIxLjIuODQwLjExMzU0OS4xLjcuMSIsInNpZ25lZC1kYXRhIjoiMS4yLjg0MC4xMTM1NDkuMS43LjIiLCJlbnZlbG9wZWQtZGF0YSI6IjEuMi44NDAuMTEzNTQ5LjEuNy4zIiwiZGlnZXN0ZWQtZGF0YSI6IjEuMi44NDAuMTEzNTQ5LjEuNy41IiwiZW5jcnlwdGVkLWRhdGEiOiIxLjIuODQwLjExMzU0OS4xLjcuNiIsImF1dGhlbnRpY2F0ZWQtZGF0YSI6IjEuMi44NDAuMTEzNTQ5LjEuOS4xNi4xLjIiLHRzdGluZm86IjEuMi44NDAuMTEzNTQ5LjEuOS4xNi4xLjQiLH07dGhpcy5vYmpDYWNoZT17fTt0aGlzLm5hbWUyb2JqPWZ1bmN0aW9uKGIpe2lmKHR5cGVvZiB0aGlzLm9iakNhY2hlW2JdIT0idW5kZWZpbmVkIil7cmV0dXJuIHRoaXMub2JqQ2FjaGVbYl19aWYodHlwZW9mIHRoaXMubmFtZTJvaWRMaXN0W2JdPT0idW5kZWZpbmVkIil7dGhyb3ciTmFtZSBvZiBPYmplY3RJZGVudGlmaWVyIG5vdCBkZWZpbmVkOiAiK2J9dmFyIGM9dGhpcy5uYW1lMm9pZExpc3RbYl07dmFyIGQ9bmV3IEtKVVIuYXNuMS5ERVJPYmplY3RJZGVudGlmaWVyKHtvaWQ6Y30pO3RoaXMub2JqQ2FjaGVbYl09ZDtyZXR1cm4gZH07dGhpcy5hdHlwZTJvYmo9ZnVuY3Rpb24oYil7aWYodHlwZW9mIHRoaXMub2JqQ2FjaGVbYl0hPSJ1bmRlZmluZWQiKXtyZXR1cm4gdGhpcy5vYmpDYWNoZVtiXX1pZih0eXBlb2YgdGhpcy5hdHlwZTJvaWRMaXN0W2JdPT0idW5kZWZpbmVkIil7dGhyb3ciQXR0cmlidXRlVHlwZSBuYW1lIHVuZGVmaW5lZDogIitifXZhciBjPXRoaXMuYXR5cGUyb2lkTGlzdFtiXTt2YXIgZD1uZXcgS0pVUi5hc24xLkRFUk9iamVjdElkZW50aWZpZXIoe29pZDpjfSk7dGhpcy5vYmpDYWNoZVtiXT1kO3JldHVybiBkfX07S0pVUi5hc24xLng1MDkuT0lELm9pZDJuYW1lPWZ1bmN0aW9uKGIpe3ZhciBjPUtKVVIuYXNuMS54NTA5Lk9JRC5uYW1lMm9pZExpc3Q7Zm9yKHZhciBhIGluIGMpe2lmKGNbYV09PWIpe3JldHVybiBhfX1yZXR1cm4iIn07S0pVUi5hc24xLng1MDkuT0lELm5hbWUyb2lkPWZ1bmN0aW9uKGEpe3ZhciBiPUtKVVIuYXNuMS54NTA5Lk9JRC5uYW1lMm9pZExpc3Q7aWYoYlthXT09PXVuZGVmaW5lZCl7cmV0dXJuIiJ9cmV0dXJuIGJbYV19O0tKVVIuYXNuMS54NTA5Llg1MDlVdGlsPW5ldyBmdW5jdGlvbigpe3RoaXMuZ2V0UEtDUzhQdWJLZXlQRU1mcm9tUlNBS2V5PWZ1bmN0aW9uKGkpe3ZhciBoPW51bGw7dmFyIGY9S0pVUi5hc24xLkFTTjFVdGlsLmJpZ0ludFRvTWluVHdvc0NvbXBsZW1lbnRzSGV4KGkubik7dmFyIGo9S0pVUi5hc24xLkFTTjFVdGlsLmludGVnZXJUb0J5dGVIZXgoaS5lKTt2YXIgYT1uZXcgS0pVUi5hc24xLkRFUkludGVnZXIoe2hleDpmfSk7dmFyIGc9bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKHtoZXg6an0pO3ZhciBsPW5ldyBLSlVSLmFzbjEuREVSU2VxdWVuY2Uoe2FycmF5OlthLGddfSk7dmFyIGM9bC5nZXRFbmNvZGVkSGV4KCk7dmFyIGQ9bmV3IEtKVVIuYXNuMS54NTA5LkFsZ29yaXRobUlkZW50aWZpZXIoe25hbWU6InJzYUVuY3J5cHRpb24ifSk7dmFyIGI9bmV3IEtKVVIuYXNuMS5ERVJCaXRTdHJpbmcoe2hleDoiMDAiK2N9KTt2YXIgaz1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTpbZCxiXX0pO3ZhciBlPWsuZ2V0RW5jb2RlZEhleCgpO3ZhciBoPUtKVVIuYXNuMS5BU04xVXRpbC5nZXRQRU1TdHJpbmdGcm9tSGV4KGUsIlBVQkxJQyBLRVkiKTtyZXR1cm4gaH19O0tKVVIuYXNuMS54NTA5Llg1MDlVdGlsLm5ld0NlcnRQRU09ZnVuY3Rpb24oZil7dmFyIGM9S0pVUi5hc24xLng1MDk7dmFyIGU9bmV3IGMuVEJTQ2VydGlmaWNhdGUoKTtpZihmLnNlcmlhbCE9PXVuZGVmaW5lZCl7ZS5zZXRTZXJpYWxOdW1iZXJCeVBhcmFtKGYuc2VyaWFsKX1lbHNle3Rocm93InNlcmlhbCBudW1iZXIgdW5kZWZpbmVkLiJ9aWYodHlwZW9mIGYuc2lnYWxnLm5hbWU9PSJzdHJpbmciKXtlLnNldFNpZ25hdHVyZUFsZ0J5UGFyYW0oZi5zaWdhbGcpfWVsc2V7dGhyb3cidW5wcm9wZXIgc2lnbmF0dXJlIGFsZ29yaXRobSBuYW1lIn1pZihmLmlzc3VlciE9PXVuZGVmaW5lZCl7ZS5zZXRJc3N1ZXJCeVBhcmFtKGYuaXNzdWVyKX1lbHNle3Rocm93Imlzc3VlciBuYW1lIHVuZGVmaW5lZC4ifWlmKGYubm90YmVmb3JlIT09dW5kZWZpbmVkKXtlLnNldE5vdEJlZm9yZUJ5UGFyYW0oZi5ub3RiZWZvcmUpfWVsc2V7dGhyb3cibm90YmVmb3JlIHVuZGVmaW5lZC4ifWlmKGYubm90YWZ0ZXIhPT11bmRlZmluZWQpe2Uuc2V0Tm90QWZ0ZXJCeVBhcmFtKGYubm90YWZ0ZXIpfWVsc2V7dGhyb3cibm90YWZ0ZXIgdW5kZWZpbmVkLiJ9aWYoZi5zdWJqZWN0IT09dW5kZWZpbmVkKXtlLnNldFN1YmplY3RCeVBhcmFtKGYuc3ViamVjdCl9ZWxzZXt0aHJvdyJzdWJqZWN0IG5hbWUgdW5kZWZpbmVkLiJ9aWYoZi5zYmpwdWJrZXkhPT11bmRlZmluZWQpe2Uuc2V0U3ViamVjdFB1YmxpY0tleUJ5R2V0S2V5KGYuc2JqcHVia2V5KX1lbHNle3Rocm93InN1YmplY3QgcHVibGljIGtleSB1bmRlZmluZWQuIn1pZihmLmV4dCE9PXVuZGVmaW5lZCYmZi5leHQubGVuZ3RoIT09dW5kZWZpbmVkKXtmb3IodmFyIGI9MDtiPGYuZXh0Lmxlbmd0aDtiKyspe2ZvcihrZXkgaW4gZi5leHRbYl0pe2UuYXBwZW5kRXh0ZW5zaW9uQnlOYW1lKGtleSxmLmV4dFtiXVtrZXldKX19fWlmKGYuY2FrZXk9PT11bmRlZmluZWQmJmYuc2lnaGV4PT09dW5kZWZpbmVkKXt0aHJvdyJwYXJhbSBjYWtleSBhbmQgc2lnaGV4IHVuZGVmaW5lZC4ifXZhciBkPW51bGw7dmFyIGE9bnVsbDtpZihmLmNha2V5KXtkPUtFWVVUSUwuZ2V0S2V5LmFwcGx5KG51bGwsZi5jYWtleSk7YT1uZXcgYy5DZXJ0aWZpY2F0ZSh7dGJzY2VydG9iajplLHBydmtleW9iajpkfSk7YS5zaWduKCl9aWYoZi5zaWdoZXgpe2E9bmV3IGMuQ2VydGlmaWNhdGUoe3Ric2NlcnRvYmo6ZX0pO2Euc2V0U2lnbmF0dXJlSGV4KGYuc2lnaGV4KX1yZXR1cm4gYS5nZXRQRU1TdHJpbmcoKX07DQovKiEgYXNuMWNtcy0xLjAuMi5qcyAoYykgMjAxMy0yMDE0IEtlbmppIFVydXNoaW1hIHwga2p1ci5naXRodWIuY29tL2pzcnNhc2lnbi9saWNlbnNlDQogKi8NCmlmKHR5cGVvZiBLSlVSPT0idW5kZWZpbmVkInx8IUtKVVIpe0tKVVI9e319aWYodHlwZW9mIEtKVVIuYXNuMT09InVuZGVmaW5lZCJ8fCFLSlVSLmFzbjEpe0tKVVIuYXNuMT17fX1pZih0eXBlb2YgS0pVUi5hc24xLmNtcz09InVuZGVmaW5lZCJ8fCFLSlVSLmFzbjEuY21zKXtLSlVSLmFzbjEuY21zPXt9fUtKVVIuYXNuMS5jbXMuQXR0cmlidXRlPWZ1bmN0aW9uKGIpe0tKVVIuYXNuMS5jbXMuQXR0cmlidXRlLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt2YXIgYT1bXTt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXt2YXIgZixlLGM7Zj1uZXcgS0pVUi5hc24xLkRFUk9iamVjdElkZW50aWZpZXIoe29pZDp0aGlzLmF0dHJUeXBlT2lkfSk7ZT1uZXcgS0pVUi5hc24xLkRFUlNldCh7YXJyYXk6dGhpcy52YWx1ZUxpc3R9KTt0cnl7ZS5nZXRFbmNvZGVkSGV4KCl9Y2F0Y2goZCl7dGhyb3ciZmFpbCB2YWx1ZVNldC5nZXRFbmNvZGVkSGV4IGluIEF0dHJpYnV0ZSgxKS8iK2R9Yz1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTpbZixlXX0pO3RyeXt0aGlzLmhUTFY9Yy5nZXRFbmNvZGVkSGV4KCl9Y2F0Y2goZCl7dGhyb3ciZmFpbGVkIHNlcS5nZXRFbmNvZGVkSGV4IGluIEF0dHJpYnV0ZSgyKS8iK2R9cmV0dXJuIHRoaXMuaFRMVn19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5jbXMuQXR0cmlidXRlLEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEuY21zLkNvbnRlbnRUeXBlPWZ1bmN0aW9uKGIpe0tKVVIuYXNuMS5jbXMuQ29udGVudFR5cGUuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3RoaXMuYXR0clR5cGVPaWQ9IjEuMi44NDAuMTEzNTQ5LjEuOS4zIjt2YXIgYT1udWxsO2lmKHR5cGVvZiBiIT0idW5kZWZpbmVkIil7dmFyIGE9bmV3IEtKVVIuYXNuMS5ERVJPYmplY3RJZGVudGlmaWVyKGIpO3RoaXMudmFsdWVMaXN0PVthXX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5jbXMuQ29udGVudFR5cGUsS0pVUi5hc24xLmNtcy5BdHRyaWJ1dGUpO0tKVVIuYXNuMS5jbXMuTWVzc2FnZURpZ2VzdD1mdW5jdGlvbihlKXtLSlVSLmFzbjEuY21zLk1lc3NhZ2VEaWdlc3Quc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3RoaXMuYXR0clR5cGVPaWQ9IjEuMi44NDAuMTEzNTQ5LjEuOS40IjtpZih0eXBlb2YgZSE9InVuZGVmaW5lZCIpe2lmKGUuZWNpT2JqIGluc3RhbmNlb2YgS0pVUi5hc24xLmNtcy5FbmNhcHN1bGF0ZWRDb250ZW50SW5mbyYmdHlwZW9mIGUuaGFzaEFsZz09InN0cmluZyIpe3ZhciBiPWUuZWNpT2JqLmVDb250ZW50VmFsdWVIZXg7dmFyIGE9ZS5oYXNoQWxnO3ZhciBjPUtKVVIuY3J5cHRvLlV0aWwuaGFzaEhleChiLGEpO3ZhciBkPW5ldyBLSlVSLmFzbjEuREVST2N0ZXRTdHJpbmcoe2hleDpjfSk7ZC5nZXRFbmNvZGVkSGV4KCk7dGhpcy52YWx1ZUxpc3Q9W2RdfWVsc2V7dmFyIGQ9bmV3IEtKVVIuYXNuMS5ERVJPY3RldFN0cmluZyhlKTtkLmdldEVuY29kZWRIZXgoKTt0aGlzLnZhbHVlTGlzdD1bZF19fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLmNtcy5NZXNzYWdlRGlnZXN0LEtKVVIuYXNuMS5jbXMuQXR0cmlidXRlKTtLSlVSLmFzbjEuY21zLlNpZ25pbmdUaW1lPWZ1bmN0aW9uKGMpe0tKVVIuYXNuMS5jbXMuU2lnbmluZ1RpbWUuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3RoaXMuYXR0clR5cGVPaWQ9IjEuMi44NDAuMTEzNTQ5LjEuOS41IjtpZih0eXBlb2YgYyE9InVuZGVmaW5lZCIpe3ZhciBhPW5ldyBLSlVSLmFzbjEueDUwOS5UaW1lKGMpO3RyeXthLmdldEVuY29kZWRIZXgoKX1jYXRjaChiKXt0aHJvdyJTaWduaW5nVGltZS5nZXRFbmNvZGVkSGV4KCkgZmFpbGVkLyIrYn10aGlzLnZhbHVlTGlzdD1bYV19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuY21zLlNpZ25pbmdUaW1lLEtKVVIuYXNuMS5jbXMuQXR0cmlidXRlKTtLSlVSLmFzbjEuY21zLlNpZ25pbmdDZXJ0aWZpY2F0ZT1mdW5jdGlvbihkKXtLSlVSLmFzbjEuY21zLlNpZ25pbmdDZXJ0aWZpY2F0ZS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dGhpcy5hdHRyVHlwZU9pZD0iMS4yLjg0MC4xMTM1NDkuMS45LjE2LjIuMTIiO3ZhciBhPUtKVVIuYXNuMTt2YXIgYz1LSlVSLmFzbjEuY21zO3ZhciBiPUtKVVIuY3J5cHRvO3RoaXMuc2V0Q2VydHM9ZnVuY3Rpb24obCl7dmFyIGo9W107Zm9yKHZhciBoPTA7aDxsLmxlbmd0aDtoKyspe3ZhciBmPUtFWVVUSUwuZ2V0SGV4RnJvbVBFTShsW2hdKTt2YXIgZT1iLlV0aWwuaGFzaEhleChmLCJzaGExIik7dmFyIG09bmV3IGEuREVST2N0ZXRTdHJpbmcoe2hleDplfSk7bS5nZXRFbmNvZGVkSGV4KCk7dmFyIGs9bmV3IGMuSXNzdWVyQW5kU2VyaWFsTnVtYmVyKHtjZXJ0OmxbaF19KTtrLmdldEVuY29kZWRIZXgoKTt2YXIgbj1uZXcgYS5ERVJTZXF1ZW5jZSh7YXJyYXk6W20sa119KTtuLmdldEVuY29kZWRIZXgoKTtqLnB1c2gobil9dmFyIGc9bmV3IGEuREVSU2VxdWVuY2Uoe2FycmF5Omp9KTtnLmdldEVuY29kZWRIZXgoKTt0aGlzLnZhbHVlTGlzdD1bZ119O2lmKHR5cGVvZiBkIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGQuYXJyYXk9PSJvYmplY3QiKXt0aGlzLnNldENlcnRzKGQuYXJyYXkpfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5jbXMuU2lnbmluZ0NlcnRpZmljYXRlLEtKVVIuYXNuMS5jbXMuQXR0cmlidXRlKTtLSlVSLmFzbjEuY21zLlNpZ25pbmdDZXJ0aWZpY2F0ZVYyPWZ1bmN0aW9uKGUpe0tKVVIuYXNuMS5jbXMuU2lnbmluZ0NlcnRpZmljYXRlVjIuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3RoaXMuYXR0clR5cGVPaWQ9IjEuMi44NDAuMTEzNTQ5LjEuOS4xNi4yLjQ3Ijt2YXIgYj1LSlVSLmFzbjE7dmFyIGY9S0pVUi5hc24xLng1MDk7dmFyIGQ9S0pVUi5hc24xLmNtczt2YXIgYz1LSlVSLmNyeXB0bzt0aGlzLnNldENlcnRzPWZ1bmN0aW9uKHAsaCl7dmFyIG49W107Zm9yKHZhciBsPTA7bDxwLmxlbmd0aDtsKyspe3ZhciBqPUtFWVVUSUwuZ2V0SGV4RnJvbVBFTShwW2xdKTt2YXIgcj1bXTtpZihoIT0ic2hhMjU2Iil7ci5wdXNoKG5ldyBmLkFsZ29yaXRobUlkZW50aWZpZXIoe25hbWU6aH0pKX12YXIgZz1jLlV0aWwuaGFzaEhleChqLGgpO3ZhciBxPW5ldyBiLkRFUk9jdGV0U3RyaW5nKHtoZXg6Z30pO3EuZ2V0RW5jb2RlZEhleCgpO3IucHVzaChxKTt2YXIgbT1uZXcgZC5Jc3N1ZXJBbmRTZXJpYWxOdW1iZXIoe2NlcnQ6cFtsXX0pO20uZ2V0RW5jb2RlZEhleCgpO3IucHVzaChtKTt2YXIgbz1uZXcgYi5ERVJTZXF1ZW5jZSh7YXJyYXk6cn0pO28uZ2V0RW5jb2RlZEhleCgpO24ucHVzaChvKX12YXIgaz1uZXcgYi5ERVJTZXF1ZW5jZSh7YXJyYXk6bn0pO2suZ2V0RW5jb2RlZEhleCgpO3RoaXMudmFsdWVMaXN0PVtrXX07aWYodHlwZW9mIGUhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgZS5hcnJheT09Im9iamVjdCIpe3ZhciBhPSJzaGEyNTYiO2lmKHR5cGVvZiBlLmhhc2hBbGc9PSJzdHJpbmciKXthPWUuaGFzaEFsZ310aGlzLnNldENlcnRzKGUuYXJyYXksYSl9fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLmNtcy5TaWduaW5nQ2VydGlmaWNhdGVWMixLSlVSLmFzbjEuY21zLkF0dHJpYnV0ZSk7S0pVUi5hc24xLmNtcy5Jc3N1ZXJBbmRTZXJpYWxOdW1iZXI9ZnVuY3Rpb24oYyl7S0pVUi5hc24xLmNtcy5Jc3N1ZXJBbmRTZXJpYWxOdW1iZXIuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBlPW51bGw7dmFyIGI9bnVsbDt2YXIgYT1LSlVSLmFzbjE7dmFyIGQ9YS54NTA5O3RoaXMuc2V0QnlDZXJ0UEVNPWZ1bmN0aW9uKGkpe3ZhciBnPUtFWVVUSUwuZ2V0SGV4RnJvbVBFTShpKTt2YXIgZj1uZXcgWDUwOSgpO2YuaGV4PWc7dmFyIGo9Zi5nZXRJc3N1ZXJIZXgoKTt0aGlzLmRJc3N1ZXI9bmV3IGQuWDUwME5hbWUoKTt0aGlzLmRJc3N1ZXIuaFRMVj1qO3ZhciBoPWYuZ2V0U2VyaWFsTnVtYmVySGV4KCk7dGhpcy5kU2VyaWFsPW5ldyBhLkRFUkludGVnZXIoe2hleDpofSl9O3RoaXMuZ2V0RW5jb2RlZEhleD1mdW5jdGlvbigpe3ZhciBmPW5ldyBLSlVSLmFzbjEuREVSU2VxdWVuY2Uoe2FycmF5Olt0aGlzLmRJc3N1ZXIsdGhpcy5kU2VyaWFsXX0pO3RoaXMuaFRMVj1mLmdldEVuY29kZWRIZXgoKTtyZXR1cm4gdGhpcy5oVExWfTtpZih0eXBlb2YgYyE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBjPT0ic3RyaW5nIiYmYy5pbmRleE9mKCItLS0tLUJFR0lOICIpIT0tMSl7dGhpcy5zZXRCeUNlcnRQRU0oYyl9aWYoYy5pc3N1ZXImJmMuc2VyaWFsKXtpZihjLmlzc3VlciBpbnN0YW5jZW9mIEtKVVIuYXNuMS54NTA5Llg1MDBOYW1lKXt0aGlzLmRJc3N1ZXI9Yy5pc3N1ZXJ9ZWxzZXt0aGlzLmRJc3N1ZXI9bmV3IEtKVVIuYXNuMS54NTA5Llg1MDBOYW1lKGMuaXNzdWVyKX1pZihjLnNlcmlhbCBpbnN0YW5jZW9mIEtKVVIuYXNuMS5ERVJJbnRlZ2VyKXt0aGlzLmRTZXJpYWw9Yy5zZXJpYWx9ZWxzZXt0aGlzLmRTZXJpYWw9bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKGMuc2VyaWFsKX19aWYodHlwZW9mIGMuY2VydD09InN0cmluZyIpe3RoaXMuc2V0QnlDZXJ0UEVNKGMuY2VydCl9fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLmNtcy5Jc3N1ZXJBbmRTZXJpYWxOdW1iZXIsS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS5jbXMuQXR0cmlidXRlTGlzdD1mdW5jdGlvbihhKXtLSlVSLmFzbjEuY21zLkF0dHJpYnV0ZUxpc3Quc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3RoaXMubGlzdD1uZXcgQXJyYXkoKTt0aGlzLnNvcnRGbGFnPXRydWU7dGhpcy5hZGQ9ZnVuY3Rpb24oYil7aWYoYiBpbnN0YW5jZW9mIEtKVVIuYXNuMS5jbXMuQXR0cmlidXRlKXt0aGlzLmxpc3QucHVzaChiKX19O3RoaXMubGVuZ3RoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGlzdC5sZW5ndGh9O3RoaXMuY2xlYXI9ZnVuY3Rpb24oKXt0aGlzLmxpc3Q9bmV3IEFycmF5KCk7dGhpcy5oVExWPW51bGw7dGhpcy5oVj1udWxsfTt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXtpZih0eXBlb2YgdGhpcy5oVExWPT0ic3RyaW5nIil7cmV0dXJuIHRoaXMuaFRMVn12YXIgYj1uZXcgS0pVUi5hc24xLkRFUlNldCh7YXJyYXk6dGhpcy5saXN0LHNvcnRmbGFnOnRoaXMuc29ydEZsYWd9KTt0aGlzLmhUTFY9Yi5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIHRoaXMuaFRMVn07aWYodHlwZW9mIGEhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgYS5zb3J0ZmxhZyE9InVuZGVmaW5lZCImJmEuc29ydGZsYWc9PWZhbHNlKXt0aGlzLnNvcnRGbGFnPWZhbHNlfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5jbXMuQXR0cmlidXRlTGlzdCxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLmNtcy5TaWduZXJJbmZvPWZ1bmN0aW9uKGMpe0tKVVIuYXNuMS5jbXMuU2lnbmVySW5mby5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGE9S0pVUi5hc24xO3ZhciBiPUtKVVIuYXNuMS5jbXM7dmFyIGQ9S0pVUi5hc24xLng1MDk7dGhpcy5kQ01TVmVyc2lvbj1uZXcgYS5ERVJJbnRlZ2VyKHsiaW50IjoxfSk7dGhpcy5kU2lnbmVySWRlbnRpZmllcj1udWxsO3RoaXMuZERpZ2VzdEFsZ29yaXRobT1udWxsO3RoaXMuZFNpZ25lZEF0dHJzPW5ldyBiLkF0dHJpYnV0ZUxpc3QoKTt0aGlzLmRTaWdBbGc9bnVsbDt0aGlzLmRTaWc9bnVsbDt0aGlzLmRVbnNpZ25lZEF0dHJzPW5ldyBiLkF0dHJpYnV0ZUxpc3QoKTt0aGlzLnNldFNpZ25lcklkZW50aWZpZXI9ZnVuY3Rpb24oZil7aWYodHlwZW9mIGY9PSJzdHJpbmciJiZmLmluZGV4T2YoIkNFUlRJRklDQVRFIikhPS0xJiZmLmluZGV4T2YoIkJFR0lOIikhPS0xJiZmLmluZGV4T2YoIkVORCIpIT0tMSl7dmFyIGU9Zjt0aGlzLmRTaWduZXJJZGVudGlmaWVyPW5ldyBiLklzc3VlckFuZFNlcmlhbE51bWJlcih7Y2VydDpmfSl9fTt0aGlzLnNldEZvckNvbnRlbnRBbmRIYXNoPWZ1bmN0aW9uKGUpe2lmKHR5cGVvZiBlIT0idW5kZWZpbmVkIil7aWYoZS5lY2lPYmogaW5zdGFuY2VvZiBLSlVSLmFzbjEuY21zLkVuY2Fwc3VsYXRlZENvbnRlbnRJbmZvKXt0aGlzLmRTaWduZWRBdHRycy5hZGQobmV3IGIuQ29udGVudFR5cGUoe29pZDoiMS4yLjg0MC4xMTM1NDkuMS43LjEifSkpO3RoaXMuZFNpZ25lZEF0dHJzLmFkZChuZXcgYi5NZXNzYWdlRGlnZXN0KHtlY2lPYmo6ZS5lY2lPYmosaGFzaEFsZzplLmhhc2hBbGd9KSl9aWYodHlwZW9mIGUuc2RPYmohPSJ1bmRlZmluZWQiJiZlLnNkT2JqIGluc3RhbmNlb2YgS0pVUi5hc24xLmNtcy5TaWduZWREYXRhKXtpZihlLnNkT2JqLmRpZ2VzdEFsZ05hbWVMaXN0LmpvaW4oIjoiKS5pbmRleE9mKGUuaGFzaEFsZyk9PS0xKXtlLnNkT2JqLmRpZ2VzdEFsZ05hbWVMaXN0LnB1c2goZS5oYXNoQWxnKX19aWYodHlwZW9mIGUuaGFzaEFsZz09InN0cmluZyIpe3RoaXMuZERpZ2VzdEFsZ29yaXRobT1uZXcgZC5BbGdvcml0aG1JZGVudGlmaWVyKHtuYW1lOmUuaGFzaEFsZ30pfX19O3RoaXMuc2lnbj1mdW5jdGlvbihqLGYpe3RoaXMuZFNpZ0FsZz1uZXcgZC5BbGdvcml0aG1JZGVudGlmaWVyKHtuYW1lOmZ9KTt2YXIgZz10aGlzLmRTaWduZWRBdHRycy5nZXRFbmNvZGVkSGV4KCk7dmFyIGU9S0VZVVRJTC5nZXRLZXkoaik7dmFyIGk9bmV3IEtKVVIuY3J5cHRvLlNpZ25hdHVyZSh7YWxnOmZ9KTtpLmluaXQoZSk7aS51cGRhdGVIZXgoZyk7dmFyIGg9aS5zaWduKCk7dGhpcy5kU2lnPW5ldyBhLkRFUk9jdGV0U3RyaW5nKHtoZXg6aH0pfTt0aGlzLmFkZFVuc2lnbmVkPWZ1bmN0aW9uKGUpe3RoaXMuaFRMVj1udWxsO3RoaXMuZFVuc2lnbmVkQXR0cnMuaFRMVj1udWxsO3RoaXMuZFVuc2lnbmVkQXR0cnMuYWRkKGUpfTt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXtpZih0aGlzLmRTaWduZWRBdHRycyBpbnN0YW5jZW9mIEtKVVIuYXNuMS5jbXMuQXR0cmlidXRlTGlzdCYmdGhpcy5kU2lnbmVkQXR0cnMubGVuZ3RoKCk9PTApe3Rocm93IlNpZ25lZEF0dHJzIGxlbmd0aCA9IDAgKGVtcHR5KSJ9dmFyIGU9bmV3IGEuREVSVGFnZ2VkT2JqZWN0KHtvYmo6dGhpcy5kU2lnbmVkQXR0cnMsdGFnOiJhMCIsZXhwbGljaXQ6ZmFsc2V9KTt2YXIgaD1udWxsO2lmKHRoaXMuZFVuc2lnbmVkQXR0cnMubGVuZ3RoKCk+MCl7aD1uZXcgYS5ERVJUYWdnZWRPYmplY3Qoe29iajp0aGlzLmRVbnNpZ25lZEF0dHJzLHRhZzoiYTEiLGV4cGxpY2l0OmZhbHNlfSl9dmFyIGc9W3RoaXMuZENNU1ZlcnNpb24sdGhpcy5kU2lnbmVySWRlbnRpZmllcix0aGlzLmREaWdlc3RBbGdvcml0aG0sZSx0aGlzLmRTaWdBbGcsdGhpcy5kU2lnLF07aWYoaCE9bnVsbCl7Zy5wdXNoKGgpfXZhciBmPW5ldyBhLkRFUlNlcXVlbmNlKHthcnJheTpnfSk7dGhpcy5oVExWPWYuZ2V0RW5jb2RlZEhleCgpO3JldHVybiB0aGlzLmhUTFZ9fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuY21zLlNpZ25lckluZm8sS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS5jbXMuRW5jYXBzdWxhdGVkQ29udGVudEluZm89ZnVuY3Rpb24oYyl7S0pVUi5hc24xLmNtcy5FbmNhcHN1bGF0ZWRDb250ZW50SW5mby5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGE9S0pVUi5hc24xO3ZhciBiPUtKVVIuYXNuMS5jbXM7dmFyIGQ9S0pVUi5hc24xLng1MDk7dGhpcy5kRUNvbnRlbnRUeXBlPW5ldyBhLkRFUk9iamVjdElkZW50aWZpZXIoe25hbWU6ImRhdGEifSk7dGhpcy5kRUNvbnRlbnQ9bnVsbDt0aGlzLmlzRGV0YWNoZWQ9ZmFsc2U7dGhpcy5lQ29udGVudFZhbHVlSGV4PW51bGw7dGhpcy5zZXRDb250ZW50VHlwZT1mdW5jdGlvbihlKXtpZihlLm1hdGNoKC9eWzAtMl1bLl1bMC05Ll0rJC8pKXt0aGlzLmRFQ29udGVudFR5cGU9bmV3IGEuREVST2JqZWN0SWRlbnRpZmllcih7b2lkOmV9KX1lbHNle3RoaXMuZEVDb250ZW50VHlwZT1uZXcgYS5ERVJPYmplY3RJZGVudGlmaWVyKHtuYW1lOmV9KX19O3RoaXMuc2V0Q29udGVudFZhbHVlPWZ1bmN0aW9uKGUpe2lmKHR5cGVvZiBlIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGUuaGV4PT0ic3RyaW5nIil7dGhpcy5lQ29udGVudFZhbHVlSGV4PWUuaGV4fWVsc2V7aWYodHlwZW9mIGUuc3RyPT0ic3RyaW5nIil7dGhpcy5lQ29udGVudFZhbHVlSGV4PXV0Zjh0b2hleChlLnN0cil9fX19O3RoaXMuc2V0Q29udGVudFZhbHVlSGV4PWZ1bmN0aW9uKGUpe3RoaXMuZUNvbnRlbnRWYWx1ZUhleD1lfTt0aGlzLnNldENvbnRlbnRWYWx1ZVN0cj1mdW5jdGlvbihlKXt0aGlzLmVDb250ZW50VmFsdWVIZXg9dXRmOHRvaGV4KGUpfTt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXtpZih0eXBlb2YgdGhpcy5lQ29udGVudFZhbHVlSGV4IT0ic3RyaW5nIil7dGhyb3ciZUNvbnRlbnRWYWx1ZSBub3QgeWV0IHNldCJ9dmFyIGc9bmV3IGEuREVST2N0ZXRTdHJpbmcoe2hleDp0aGlzLmVDb250ZW50VmFsdWVIZXh9KTt0aGlzLmRFQ29udGVudD1uZXcgYS5ERVJUYWdnZWRPYmplY3Qoe29iajpnLHRhZzoiYTAiLGV4cGxpY2l0OnRydWV9KTt2YXIgZT1bdGhpcy5kRUNvbnRlbnRUeXBlXTtpZighdGhpcy5pc0RldGFjaGVkKXtlLnB1c2godGhpcy5kRUNvbnRlbnQpfXZhciBmPW5ldyBhLkRFUlNlcXVlbmNlKHthcnJheTplfSk7dGhpcy5oVExWPWYuZ2V0RW5jb2RlZEhleCgpO3JldHVybiB0aGlzLmhUTFZ9fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuY21zLkVuY2Fwc3VsYXRlZENvbnRlbnRJbmZvLEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEuY21zLkNvbnRlbnRJbmZvPWZ1bmN0aW9uKGMpe0tKVVIuYXNuMS5jbXMuQ29udGVudEluZm8uc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBhPUtKVVIuYXNuMTt2YXIgYj1LSlVSLmFzbjEuY21zO3ZhciBkPUtKVVIuYXNuMS54NTA5O3RoaXMuZENvbnRlbnRUeXBlPW51bGw7dGhpcy5kQ29udGVudD1udWxsO3RoaXMuc2V0Q29udGVudFR5cGU9ZnVuY3Rpb24oZSl7aWYodHlwZW9mIGU9PSJzdHJpbmciKXt0aGlzLmRDb250ZW50VHlwZT1kLk9JRC5uYW1lMm9iaihlKX19O3RoaXMuZ2V0RW5jb2RlZEhleD1mdW5jdGlvbigpe3ZhciBmPW5ldyBhLkRFUlRhZ2dlZE9iamVjdCh7b2JqOnRoaXMuZENvbnRlbnQsdGFnOiJhMCIsZXhwbGljaXQ6dHJ1ZX0pO3ZhciBlPW5ldyBhLkRFUlNlcXVlbmNlKHthcnJheTpbdGhpcy5kQ29udGVudFR5cGUsZl19KTt0aGlzLmhUTFY9ZS5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIHRoaXMuaFRMVn07aWYodHlwZW9mIGMhPSJ1bmRlZmluZWQiKXtpZihjLnR5cGUpe3RoaXMuc2V0Q29udGVudFR5cGUoYy50eXBlKX1pZihjLm9iaiYmYy5vYmogaW5zdGFuY2VvZiBhLkFTTjFPYmplY3Qpe3RoaXMuZENvbnRlbnQ9Yy5vYmp9fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLmNtcy5Db250ZW50SW5mbyxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLmNtcy5TaWduZWREYXRhPWZ1bmN0aW9uKGMpe0tKVVIuYXNuMS5jbXMuU2lnbmVkRGF0YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGE9S0pVUi5hc24xO3ZhciBiPUtKVVIuYXNuMS5jbXM7dmFyIGQ9S0pVUi5hc24xLng1MDk7dGhpcy5kQ01TVmVyc2lvbj1uZXcgYS5ERVJJbnRlZ2VyKHsiaW50IjoxfSk7dGhpcy5kRGlnZXN0QWxncz1udWxsO3RoaXMuZGlnZXN0QWxnTmFtZUxpc3Q9W107dGhpcy5kRW5jYXBDb250ZW50SW5mbz1uZXcgYi5FbmNhcHN1bGF0ZWRDb250ZW50SW5mbygpO3RoaXMuZENlcnRzPW51bGw7dGhpcy5jZXJ0aWZpY2F0ZUxpc3Q9W107dGhpcy5jcmxMaXN0PVtdO3RoaXMuc2lnbmVySW5mb0xpc3Q9W25ldyBiLlNpZ25lckluZm8oKV07dGhpcy5hZGRDZXJ0aWZpY2F0ZXNCeVBFTT1mdW5jdGlvbihlKXt2YXIgZj1LRVlVVElMLmdldEhleEZyb21QRU0oZSk7dmFyIGc9bmV3IGEuQVNOMU9iamVjdCgpO2cuaFRMVj1mO3RoaXMuY2VydGlmaWNhdGVMaXN0LnB1c2goZyl9O3RoaXMuZ2V0RW5jb2RlZEhleD1mdW5jdGlvbigpe2lmKHR5cGVvZiB0aGlzLmhUTFY9PSJzdHJpbmciKXtyZXR1cm4gdGhpcy5oVExWfWlmKHRoaXMuZERpZ2VzdEFsZ3M9PW51bGwpe3ZhciBrPVtdO2Zvcih2YXIgaj0wO2o8dGhpcy5kaWdlc3RBbGdOYW1lTGlzdC5sZW5ndGg7aisrKXt2YXIgaD10aGlzLmRpZ2VzdEFsZ05hbWVMaXN0W2pdO3ZhciBtPW5ldyBkLkFsZ29yaXRobUlkZW50aWZpZXIoe25hbWU6aH0pO2sucHVzaChtKX10aGlzLmREaWdlc3RBbGdzPW5ldyBhLkRFUlNldCh7YXJyYXk6a30pfXZhciBlPVt0aGlzLmRDTVNWZXJzaW9uLHRoaXMuZERpZ2VzdEFsZ3MsdGhpcy5kRW5jYXBDb250ZW50SW5mb107aWYodGhpcy5kQ2VydHM9PW51bGwpe2lmKHRoaXMuY2VydGlmaWNhdGVMaXN0Lmxlbmd0aD4wKXt2YXIgbD1uZXcgYS5ERVJTZXQoe2FycmF5OnRoaXMuY2VydGlmaWNhdGVMaXN0fSk7dGhpcy5kQ2VydHM9bmV3IGEuREVSVGFnZ2VkT2JqZWN0KHtvYmo6bCx0YWc6ImEwIixleHBsaWNpdDpmYWxzZX0pfX1pZih0aGlzLmRDZXJ0cyE9bnVsbCl7ZS5wdXNoKHRoaXMuZENlcnRzKX12YXIgZz1uZXcgYS5ERVJTZXQoe2FycmF5OnRoaXMuc2lnbmVySW5mb0xpc3R9KTtlLnB1c2goZyk7dmFyIGY9bmV3IGEuREVSU2VxdWVuY2Uoe2FycmF5OmV9KTt0aGlzLmhUTFY9Zi5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIHRoaXMuaFRMVn07dGhpcy5nZXRDb250ZW50SW5mbz1mdW5jdGlvbigpe3RoaXMuZ2V0RW5jb2RlZEhleCgpO3ZhciBlPW5ldyBiLkNvbnRlbnRJbmZvKHt0eXBlOiJzaWduZWQtZGF0YSIsb2JqOnRoaXN9KTtyZXR1cm4gZX07dGhpcy5nZXRDb250ZW50SW5mb0VuY29kZWRIZXg9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmdldENvbnRlbnRJbmZvKCk7dmFyIGY9ZS5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIGZ9O3RoaXMuZ2V0UEVNPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5nZXRDb250ZW50SW5mb0VuY29kZWRIZXgoKTt2YXIgZj1hLkFTTjFVdGlsLmdldFBFTVN0cmluZ0Zyb21IZXgoZSwiQ01TIik7cmV0dXJuIGZ9fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuY21zLlNpZ25lZERhdGEsS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS5jbXMuQ01TVXRpbD1uZXcgZnVuY3Rpb24oKXt9O0tKVVIuYXNuMS5jbXMuQ01TVXRpbC5uZXdTaWduZWREYXRhPWZ1bmN0aW9uKGEpe3ZhciBoPUtKVVIuYXNuMS5jbXM7dmFyIGc9S0pVUi5hc24xLmNhZGVzO3ZhciBmPW5ldyBoLlNpZ25lZERhdGEoKTtmLmRFbmNhcENvbnRlbnRJbmZvLnNldENvbnRlbnRWYWx1ZShhLmNvbnRlbnQpO2lmKHR5cGVvZiBhLmNlcnRzPT0ib2JqZWN0Iil7Zm9yKHZhciBiPTA7YjxhLmNlcnRzLmxlbmd0aDtiKyspe2YuYWRkQ2VydGlmaWNhdGVzQnlQRU0oYS5jZXJ0c1tiXSl9fWYuc2lnbmVySW5mb0xpc3Q9W107Zm9yKHZhciBiPTA7YjxhLnNpZ25lckluZm9zLmxlbmd0aDtiKyspe3ZhciBkPWEuc2lnbmVySW5mb3NbYl07dmFyIGM9bmV3IGguU2lnbmVySW5mbygpO2Muc2V0U2lnbmVySWRlbnRpZmllcihkLnNpZ25lckNlcnQpO2Muc2V0Rm9yQ29udGVudEFuZEhhc2goe3NkT2JqOmYsZWNpT2JqOmYuZEVuY2FwQ29udGVudEluZm8saGFzaEFsZzpkLmhhc2hBbGd9KTtmb3IoYXR0ck5hbWUgaW4gZC5zQXR0cil7dmFyIGo9ZC5zQXR0clthdHRyTmFtZV07aWYoYXR0ck5hbWU9PSJTaWduaW5nVGltZSIpe3ZhciBlPW5ldyBoLlNpZ25pbmdUaW1lKGopO2MuZFNpZ25lZEF0dHJzLmFkZChlKX1pZihhdHRyTmFtZT09IlNpZ25pbmdDZXJ0aWZpY2F0ZSIpe3ZhciBlPW5ldyBoLlNpZ25pbmdDZXJ0aWZpY2F0ZShqKTtjLmRTaWduZWRBdHRycy5hZGQoZSl9aWYoYXR0ck5hbWU9PSJTaWduaW5nQ2VydGlmaWNhdGVWMiIpe3ZhciBlPW5ldyBoLlNpZ25pbmdDZXJ0aWZpY2F0ZVYyKGopO2MuZFNpZ25lZEF0dHJzLmFkZChlKX1pZihhdHRyTmFtZT09IlNpZ25hdHVyZVBvbGljeUlkZW50aWZpZXIiKXt2YXIgZT1uZXcgZy5TaWduYXR1cmVQb2xpY3lJZGVudGlmaWVyKGopO2MuZFNpZ25lZEF0dHJzLmFkZChlKX19Yy5zaWduKGQuc2lnbmVyUHJ2S2V5LGQuc2lnQWxnKTtmLnNpZ25lckluZm9MaXN0LnB1c2goYyl9cmV0dXJuIGZ9Ow0KLyohIGFzbjF0c3AtMS4wLjEuanMgKGMpIDIwMTQgS2VuamkgVXJ1c2hpbWEgfCBranVyLmdpdGh1Yi5jb20vanNyc2FzaWduL2xpY2Vuc2UNCiAqLw0KaWYodHlwZW9mIEtKVVI9PSJ1bmRlZmluZWQifHwhS0pVUil7S0pVUj17fX1pZih0eXBlb2YgS0pVUi5hc24xPT0idW5kZWZpbmVkInx8IUtKVVIuYXNuMSl7S0pVUi5hc24xPXt9fWlmKHR5cGVvZiBLSlVSLmFzbjEudHNwPT0idW5kZWZpbmVkInx8IUtKVVIuYXNuMS50c3Ape0tKVVIuYXNuMS50c3A9e319S0pVUi5hc24xLnRzcC5BY2N1cmFjeT1mdW5jdGlvbihiKXtLSlVSLmFzbjEudHNwLkFjY3VyYWN5LnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt2YXIgYT1LSlVSLmFzbjE7dGhpcy5zZWNvbmRzPW51bGw7dGhpcy5taWxsaXM9bnVsbDt0aGlzLm1pY3Jvcz1udWxsO3RoaXMuZ2V0RW5jb2RlZEhleD1mdW5jdGlvbigpe3ZhciBlPW51bGw7dmFyIGc9bnVsbDt2YXIgaT1udWxsO3ZhciBjPVtdO2lmKHRoaXMuc2Vjb25kcyE9bnVsbCl7ZT1uZXcgYS5ERVJJbnRlZ2VyKHsiaW50Ijp0aGlzLnNlY29uZHN9KTtjLnB1c2goZSl9aWYodGhpcy5taWxsaXMhPW51bGwpe3ZhciBoPW5ldyBhLkRFUkludGVnZXIoeyJpbnQiOnRoaXMubWlsbGlzfSk7Zz1uZXcgYS5ERVJUYWdnZWRPYmplY3Qoe29iajpoLHRhZzoiODAiLGV4cGxpY2l0OmZhbHNlfSk7Yy5wdXNoKGcpfWlmKHRoaXMubWljcm9zIT1udWxsKXt2YXIgZj1uZXcgYS5ERVJJbnRlZ2VyKHsiaW50Ijp0aGlzLm1pY3Jvc30pO2k9bmV3IGEuREVSVGFnZ2VkT2JqZWN0KHtvYmo6Zix0YWc6IjgxIixleHBsaWNpdDpmYWxzZX0pO2MucHVzaChpKX12YXIgZD1uZXcgYS5ERVJTZXF1ZW5jZSh7YXJyYXk6Y30pO3RoaXMuaFRMVj1kLmdldEVuY29kZWRIZXgoKTtyZXR1cm4gdGhpcy5oVExWfTtpZih0eXBlb2YgYiE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBiLnNlY29uZHM9PSJudW1iZXIiKXt0aGlzLnNlY29uZHM9Yi5zZWNvbmRzfWlmKHR5cGVvZiBiLm1pbGxpcz09Im51bWJlciIpe3RoaXMubWlsbGlzPWIubWlsbGlzfWlmKHR5cGVvZiBiLm1pY3Jvcz09Im51bWJlciIpe3RoaXMubWljcm9zPWIubWljcm9zfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS50c3AuQWNjdXJhY3ksS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS50c3AuTWVzc2FnZUltcHJpbnQ9ZnVuY3Rpb24oYil7S0pVUi5hc24xLnRzcC5NZXNzYWdlSW1wcmludC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGE9S0pVUi5hc24xO3ZhciBjPUtKVVIuYXNuMS54NTA5O3RoaXMuZEhhc2hBbGc9bnVsbDt0aGlzLmRIYXNoVmFsdWU9bnVsbDt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXtpZih0eXBlb2YgdGhpcy5oVExWPT0ic3RyaW5nIil7cmV0dXJuIHRoaXMuaFRMVn12YXIgZD1uZXcgYS5ERVJTZXF1ZW5jZSh7YXJyYXk6W3RoaXMuZEhhc2hBbGcsdGhpcy5kSGFzaFZhbHVlXX0pO3JldHVybiBkLmdldEVuY29kZWRIZXgoKX07aWYodHlwZW9mIGIhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgYi5oYXNoQWxnPT0ic3RyaW5nIil7dGhpcy5kSGFzaEFsZz1uZXcgYy5BbGdvcml0aG1JZGVudGlmaWVyKHtuYW1lOmIuaGFzaEFsZ30pfWlmKHR5cGVvZiBiLmhhc2hWYWx1ZT09InN0cmluZyIpe3RoaXMuZEhhc2hWYWx1ZT1uZXcgYS5ERVJPY3RldFN0cmluZyh7aGV4OmIuaGFzaFZhbHVlfSl9fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLnRzcC5NZXNzYWdlSW1wcmludCxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLnRzcC5UaW1lU3RhbXBSZXE9ZnVuY3Rpb24oYyl7S0pVUi5hc24xLnRzcC5UaW1lU3RhbXBSZXEuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBhPUtKVVIuYXNuMTt2YXIgYj1LSlVSLmFzbjEudHNwO3RoaXMuZFZlcnNpb249bmV3IGEuREVSSW50ZWdlcih7ImludCI6MX0pO3RoaXMuZE1lc3NhZ2VJbXByaW50PW51bGw7dGhpcy5kUG9saWN5PW51bGw7dGhpcy5kTm9uY2U9bnVsbDt0aGlzLmNlcnRSZXE9dHJ1ZTt0aGlzLnNldE1lc3NhZ2VJbXByaW50PWZ1bmN0aW9uKGQpe2lmKGQgaW5zdGFuY2VvZiBLSlVSLmFzbjEudHNwLk1lc3NhZ2VJbXByaW50KXt0aGlzLmRNZXNzYWdlSW1wcmludD1kO3JldHVybn1pZih0eXBlb2YgZD09Im9iamVjdCIpe3RoaXMuZE1lc3NhZ2VJbXByaW50PW5ldyBiLk1lc3NhZ2VJbXByaW50KGQpfX07dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7aWYodGhpcy5kTWVzc2FnZUltcHJpbnQ9PW51bGwpe3Rocm93Im1lc3NhZ2VJbXByaW50IHNoYWxsIGJlIHNwZWNpZmllZCJ9dmFyIGQ9W3RoaXMuZFZlcnNpb24sdGhpcy5kTWVzc2FnZUltcHJpbnRdO2lmKHRoaXMuZFBvbGljeSE9bnVsbCl7ZC5wdXNoKHRoaXMuZFBvbGljeSl9aWYodGhpcy5kTm9uY2UhPW51bGwpe2QucHVzaCh0aGlzLmROb25jZSl9aWYodGhpcy5jZXJ0UmVxKXtkLnB1c2gobmV3IGEuREVSQm9vbGVhbigpKX12YXIgZT1uZXcgYS5ERVJTZXF1ZW5jZSh7YXJyYXk6ZH0pO3RoaXMuaFRMVj1lLmdldEVuY29kZWRIZXgoKTtyZXR1cm4gdGhpcy5oVExWfTtpZih0eXBlb2YgYyE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBjLm1pPT0ib2JqZWN0Iil7dGhpcy5zZXRNZXNzYWdlSW1wcmludChjLm1pKX1pZih0eXBlb2YgYy5wb2xpY3k9PSJvYmplY3QiKXt0aGlzLmRQb2xpY3k9bmV3IGEuREVST2JqZWN0SWRlbnRpZmllcihjLnBvbGljeSl9aWYodHlwZW9mIGMubm9uY2U9PSJvYmplY3QiKXt0aGlzLmROb25jZT1uZXcgYS5ERVJJbnRlZ2VyKGMubm9uY2UpfWlmKHR5cGVvZiBjLmNlcnRyZXE9PSJib29sZWFuIil7dGhpcy5jZXJ0UmVxPWMuY2VydHJlcX19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEudHNwLlRpbWVTdGFtcFJlcSxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLnRzcC5UU1RJbmZvPWZ1bmN0aW9uKGMpe0tKVVIuYXNuMS50c3AuVFNUSW5mby5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGE9S0pVUi5hc24xO3ZhciBkPUtKVVIuYXNuMS54NTA5O3ZhciBiPUtKVVIuYXNuMS50c3A7dGhpcy5kVmVyc2lvbj1uZXcgYS5ERVJJbnRlZ2VyKHsiaW50IjoxfSk7dGhpcy5kUG9saWN5PW51bGw7dGhpcy5kTWVzc2FnZUltcHJpbnQ9bnVsbDt0aGlzLmRTZXJpYWxOdW1iZXI9bnVsbDt0aGlzLmRHZW5UaW1lPW51bGw7dGhpcy5kQWNjdXJhY3k9bnVsbDt0aGlzLmRPcmRlcmluZz1udWxsO3RoaXMuZE5vbmNlPW51bGw7dGhpcy5kVHNhPW51bGw7dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7dmFyIGU9W3RoaXMuZFZlcnNpb25dO2lmKHRoaXMuZFBvbGljeT09bnVsbCl7dGhyb3cicG9saWN5IHNoYWxsIGJlIHNwZWNpZmllZC4ifWUucHVzaCh0aGlzLmRQb2xpY3kpO2lmKHRoaXMuZE1lc3NhZ2VJbXByaW50PT1udWxsKXt0aHJvdyJtZXNzYWdlSW1wcmludCBzaGFsbCBiZSBzcGVjaWZpZWQuIn1lLnB1c2godGhpcy5kTWVzc2FnZUltcHJpbnQpO2lmKHRoaXMuZFNlcmlhbE51bWJlcj09bnVsbCl7dGhyb3cic2VyaWFsTnVtYmVyIHNoYWxsIGJlIHNwZWNpZmllZC4ifWUucHVzaCh0aGlzLmRTZXJpYWxOdW1iZXIpO2lmKHRoaXMuZEdlblRpbWU9PW51bGwpe3Rocm93ImdlblRpbWUgc2hhbGwgYmUgc3BlY2lmaWVkLiJ9ZS5wdXNoKHRoaXMuZEdlblRpbWUpO2lmKHRoaXMuZEFjY3VyYWN5IT1udWxsKXtlLnB1c2godGhpcy5kQWNjdXJhY3kpfWlmKHRoaXMuZE9yZGVyaW5nIT1udWxsKXtlLnB1c2godGhpcy5kT3JkZXJpbmcpfWlmKHRoaXMuZE5vbmNlIT1udWxsKXtlLnB1c2godGhpcy5kTm9uY2UpfWlmKHRoaXMuZFRzYSE9bnVsbCl7ZS5wdXNoKHRoaXMuZFRzYSl9dmFyIGY9bmV3IGEuREVSU2VxdWVuY2Uoe2FycmF5OmV9KTt0aGlzLmhUTFY9Zi5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIHRoaXMuaFRMVn07aWYodHlwZW9mIGMhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgYy5wb2xpY3k9PSJzdHJpbmciKXtpZighYy5wb2xpY3kubWF0Y2goL15bMC05Ll0rJC8pKXt0aHJvdyJwb2xpY3kgc2hhbGwgYmUgb2lkIGxpa2UgMC4xLjQuMTM0In10aGlzLmRQb2xpY3k9bmV3IGEuREVST2JqZWN0SWRlbnRpZmllcih7b2lkOmMucG9saWN5fSl9aWYodHlwZW9mIGMubWVzc2FnZUltcHJpbnQhPSJ1bmRlZmluZWQiKXt0aGlzLmRNZXNzYWdlSW1wcmludD1uZXcgYi5NZXNzYWdlSW1wcmludChjLm1lc3NhZ2VJbXByaW50KX1pZih0eXBlb2YgYy5zZXJpYWxOdW1iZXIhPSJ1bmRlZmluZWQiKXt0aGlzLmRTZXJpYWxOdW1iZXI9bmV3IGEuREVSSW50ZWdlcihjLnNlcmlhbE51bWJlcil9aWYodHlwZW9mIGMuZ2VuVGltZSE9InVuZGVmaW5lZCIpe3RoaXMuZEdlblRpbWU9bmV3IGEuREVSR2VuZXJhbGl6ZWRUaW1lKGMuZ2VuVGltZSl9aWYodHlwZW9mIGMuYWNjdXJhY3khPSJ1bmRlZmluZCIpe3RoaXMuZEFjY3VyYWN5PW5ldyBiLkFjY3VyYWN5KGMuYWNjdXJhY3kpfWlmKHR5cGVvZiBjLm9yZGVyaW5nIT0idW5kZWZpbmVkIiYmYy5vcmRlcmluZz09dHJ1ZSl7dGhpcy5kT3JkZXJpbmc9bmV3IGEuREVSQm9vbGVhbigpfWlmKHR5cGVvZiBjLm5vbmNlIT0idW5kZWZpbmVkIil7dGhpcy5kTm9uY2U9bmV3IGEuREVSSW50ZWdlcihjLm5vbmNlKX1pZih0eXBlb2YgYy50c2EhPSJ1bmRlZmluZWQiKXt0aGlzLmRUc2E9bmV3IGQuWDUwME5hbWUoYy50c2EpfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS50c3AuVFNUSW5mbyxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLnRzcC5UaW1lU3RhbXBSZXNwPWZ1bmN0aW9uKGMpe0tKVVIuYXNuMS50c3AuVGltZVN0YW1wUmVzcC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGE9S0pVUi5hc24xO3ZhciBiPUtKVVIuYXNuMS50c3A7dGhpcy5kU3RhdHVzPW51bGw7dGhpcy5kVFNUPW51bGw7dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7aWYodGhpcy5kU3RhdHVzPT1udWxsKXt0aHJvdyJzdGF0dXMgc2hhbGwgYmUgc3BlY2lmaWVkIn12YXIgZD1bdGhpcy5kU3RhdHVzXTtpZih0aGlzLmRUU1QhPW51bGwpe2QucHVzaCh0aGlzLmRUU1QpfXZhciBlPW5ldyBhLkRFUlNlcXVlbmNlKHthcnJheTpkfSk7dGhpcy5oVExWPWUuZ2V0RW5jb2RlZEhleCgpO3JldHVybiB0aGlzLmhUTFZ9O2lmKHR5cGVvZiBjIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGMuc3RhdHVzPT0ib2JqZWN0Iil7dGhpcy5kU3RhdHVzPW5ldyBiLlBLSVN0YXR1c0luZm8oYy5zdGF0dXMpfWlmKHR5cGVvZiBjLnRzdCE9InVuZGVmaW5lZCImJmMudHN0IGluc3RhbmNlb2YgS0pVUi5hc24xLkFTTjFPYmplY3Qpe3RoaXMuZFRTVD1jLnRzdC5nZXRDb250ZW50SW5mbygpfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS50c3AuVGltZVN0YW1wUmVzcCxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLnRzcC5QS0lTdGF0dXNJbmZvPWZ1bmN0aW9uKGMpe0tKVVIuYXNuMS50c3AuUEtJU3RhdHVzSW5mby5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGE9S0pVUi5hc24xO3ZhciBiPUtKVVIuYXNuMS50c3A7dGhpcy5kU3RhdHVzPW51bGw7dGhpcy5kU3RhdHVzU3RyaW5nPW51bGw7dGhpcy5kRmFpbHVyZUluZm89bnVsbDt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXtpZih0aGlzLmRTdGF0dXM9PW51bGwpe3Rocm93InN0YXR1cyBzaGFsbCBiZSBzcGVjaWZpZWQifXZhciBkPVt0aGlzLmRTdGF0dXNdO2lmKHRoaXMuZFN0YXR1c1N0cmluZyE9bnVsbCl7ZC5wdXNoKHRoaXMuZFN0YXR1c1N0cmluZyl9aWYodGhpcy5kRmFpbHVyZUluZm8hPW51bGwpe2QucHVzaCh0aGlzLmRGYWlsdXJlSW5mbyl9dmFyIGU9bmV3IGEuREVSU2VxdWVuY2Uoe2FycmF5OmR9KTt0aGlzLmhUTFY9ZS5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIHRoaXMuaFRMVn07aWYodHlwZW9mIGMhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgYy5zdGF0dXM9PSJvYmplY3QiKXt0aGlzLmRTdGF0dXM9bmV3IGIuUEtJU3RhdHVzKGMuc3RhdHVzKX1pZih0eXBlb2YgYy5zdGF0c3RyPT0ib2JqZWN0Iil7dGhpcy5kU3RhdHVzU3RyaW5nPW5ldyBiLlBLSUZyZWVUZXh0KHthcnJheTpjLnN0YXRzdHJ9KX1pZih0eXBlb2YgYy5mYWlsaW5mbz09Im9iamVjdCIpe3RoaXMuZEZhaWx1cmVJbmZvPW5ldyBiLlBLSUZhaWx1cmVJbmZvKGMuZmFpbGluZm8pfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS50c3AuUEtJU3RhdHVzSW5mbyxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLnRzcC5QS0lTdGF0dXM9ZnVuY3Rpb24oZSl7S0pVUi5hc24xLnRzcC5QS0lTdGF0dXMuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBhPUtKVVIuYXNuMTt2YXIgYj1LSlVSLmFzbjEudHNwO3ZhciBkPW51bGw7dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7dGhpcy5oVExWPXRoaXMuZFN0YXR1cy5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIHRoaXMuaFRMVn07aWYodHlwZW9mIGUhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgZS5uYW1lIT0idW5kZWZpbmVkIil7dmFyIGM9Yi5QS0lTdGF0dXMudmFsdWVMaXN0O2lmKHR5cGVvZiBjW2UubmFtZV09PSJ1bmRlZmluZWQiKXt0aHJvdyJuYW1lIHVuZGVmaW5lZDogIitlLm5hbWV9dGhpcy5kU3RhdHVzPW5ldyBhLkRFUkludGVnZXIoeyJpbnQiOmNbZS5uYW1lXX0pfWVsc2V7dGhpcy5kU3RhdHVzPW5ldyBhLkRFUkludGVnZXIoZSl9fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLnRzcC5QS0lTdGF0dXMsS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS50c3AuUEtJU3RhdHVzLnZhbHVlTGlzdD17Z3JhbnRlZDowLGdyYW50ZWRXaXRoTW9kczoxLHJlamVjdGlvbjoyLHdhaXRpbmc6MyxyZXZvY2F0aW9uV2FybmluZzo0LHJldm9jYXRpb25Ob3RpZmljYXRpb246NX07S0pVUi5hc24xLnRzcC5QS0lGcmVlVGV4dD1mdW5jdGlvbihiKXtLSlVSLmFzbjEudHNwLlBLSUZyZWVUZXh0LnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt2YXIgYT1LSlVSLmFzbjE7dGhpcy50ZXh0TGlzdD1bXTt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXt2YXIgYz1bXTtmb3IodmFyIGU9MDtlPHRoaXMudGV4dExpc3QubGVuZ3RoO2UrKyl7Yy5wdXNoKG5ldyBhLkRFUlVURjhTdHJpbmcoe3N0cjp0aGlzLnRleHRMaXN0W2VdfSkpfXZhciBkPW5ldyBhLkRFUlNlcXVlbmNlKHthcnJheTpjfSk7dGhpcy5oVExWPWQuZ2V0RW5jb2RlZEhleCgpO3JldHVybiB0aGlzLmhUTFZ9O2lmKHR5cGVvZiBiIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGIuYXJyYXk9PSJvYmplY3QiKXt0aGlzLnRleHRMaXN0PWIuYXJyYXl9fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLnRzcC5QS0lGcmVlVGV4dCxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLnRzcC5QS0lGYWlsdXJlSW5mbz1mdW5jdGlvbihkKXtLSlVSLmFzbjEudHNwLlBLSUZhaWx1cmVJbmZvLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt2YXIgYT1LSlVSLmFzbjE7dmFyIGI9S0pVUi5hc24xLnRzcDt0aGlzLnZhbHVlPW51bGw7dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7aWYodGhpcy52YWx1ZT09bnVsbCl7dGhyb3cidmFsdWUgc2hhbGwgYmUgc3BlY2lmaWVkIn12YXIgZT1uZXcgTnVtYmVyKHRoaXMudmFsdWUpLnRvU3RyaW5nKDIpO3ZhciBmPW5ldyBhLkRFUkJpdFN0cmluZygpO2Yuc2V0QnlCaW5hcnlTdHJpbmcoZSk7dGhpcy5oVExWPWYuZ2V0RW5jb2RlZEhleCgpO3JldHVybiB0aGlzLmhUTFZ9O2lmKHR5cGVvZiBkIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGQubmFtZT09InN0cmluZyIpe3ZhciBjPWIuUEtJRmFpbHVyZUluZm8udmFsdWVMaXN0O2lmKHR5cGVvZiBjW2QubmFtZV09PSJ1bmRlZmluZWQiKXt0aHJvdyJuYW1lIHVuZGVmaW5lZDogIitkLm5hbWV9dGhpcy52YWx1ZT1jW2QubmFtZV19ZWxzZXtpZih0eXBlb2YgZFsiaW50Il09PSJudW1iZXIiKXt0aGlzLnZhbHVlPWRbImludCJdfX19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEudHNwLlBLSUZhaWx1cmVJbmZvLEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEudHNwLlBLSUZhaWx1cmVJbmZvLnZhbHVlTGlzdD17YmFkQWxnOjAsYmFkUmVxdWVzdDoyLGJhZERhdGFGb3JtYXQ6NSx0aW1lTm90QXZhaWxhYmxlOjE0LHVuYWNjZXB0ZWRQb2xpY3k6MTUsdW5hY2NlcHRlZEV4dGVuc2lvbjoxNixhZGRJbmZvTm90QXZhaWxhYmxlOjE3LHN5c3RlbUZhaWx1cmU6MjV9O0tKVVIuYXNuMS50c3AuQWJzdHJhY3RUU0FBZGFwdGVyPWZ1bmN0aW9uKGEpe3RoaXMuZ2V0VFNUSGV4PWZ1bmN0aW9uKGMsYil7dGhyb3cibm90IGltcGxlbWVudGVkIHlldCJ9fTtLSlVSLmFzbjEudHNwLlNpbXBsZVRTQUFkYXB0ZXI9ZnVuY3Rpb24oYSl7S0pVUi5hc24xLnRzcC5TaW1wbGVUU0FBZGFwdGVyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt0aGlzLnBhcmFtcz1udWxsO3RoaXMuc2VyaWFsPTA7dGhpcy5nZXRUU1RIZXg9ZnVuY3Rpb24oYyxiKXt2YXIgZT1LSlVSLmNyeXB0by5VdGlsLmhhc2hIZXgoYyxiKTt0aGlzLnBhcmFtcy50c3RJbmZvLm1lc3NhZ2VJbXByaW50PXtoYXNoQWxnOmIsaGFzaFZhbHVlOmV9O3RoaXMucGFyYW1zLnRzdEluZm8uc2VyaWFsTnVtYmVyPXsiaW50Ijp0aGlzLnNlcmlhbCsrfTt2YXIgZD1NYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMTAwMDAwMDAwMCk7dGhpcy5wYXJhbXMudHN0SW5mby5ub25jZT17ImludCI6ZH07dmFyIGY9S0pVUi5hc24xLnRzcC5UU1BVdGlsLm5ld1RpbWVTdGFtcFRva2VuKHRoaXMucGFyYW1zKTtyZXR1cm4gZi5nZXRDb250ZW50SW5mb0VuY29kZWRIZXgoKX07aWYodHlwZW9mIGEhPSJ1bmRlZmluZWQiKXt0aGlzLnBhcmFtcz1hfX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLnRzcC5TaW1wbGVUU0FBZGFwdGVyLEtKVVIuYXNuMS50c3AuQWJzdHJhY3RUU0FBZGFwdGVyKTtLSlVSLmFzbjEudHNwLkZpeGVkVFNBQWRhcHRlcj1mdW5jdGlvbihhKXtLSlVSLmFzbjEudHNwLkZpeGVkVFNBQWRhcHRlci5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dGhpcy5wYXJhbXM9bnVsbDt0aGlzLmdldFRTVEhleD1mdW5jdGlvbihjLGIpe3ZhciBkPUtKVVIuY3J5cHRvLlV0aWwuaGFzaEhleChjLGIpO3RoaXMucGFyYW1zLnRzdEluZm8ubWVzc2FnZUltcHJpbnQ9e2hhc2hBbGc6YixoYXNoVmFsdWU6ZH07dmFyIGU9S0pVUi5hc24xLnRzcC5UU1BVdGlsLm5ld1RpbWVTdGFtcFRva2VuKHRoaXMucGFyYW1zKTtyZXR1cm4gZS5nZXRDb250ZW50SW5mb0VuY29kZWRIZXgoKX07aWYodHlwZW9mIGEhPSJ1bmRlZmluZWQiKXt0aGlzLnBhcmFtcz1hfX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLnRzcC5GaXhlZFRTQUFkYXB0ZXIsS0pVUi5hc24xLnRzcC5BYnN0cmFjdFRTQUFkYXB0ZXIpO0tKVVIuYXNuMS50c3AuVFNQVXRpbD1uZXcgZnVuY3Rpb24oKXt9O0tKVVIuYXNuMS50c3AuVFNQVXRpbC5uZXdUaW1lU3RhbXBUb2tlbj1mdW5jdGlvbihiKXt2YXIgaj1LSlVSLmFzbjEuY21zO3ZhciBhPUtKVVIuYXNuMS50c3A7dmFyIGc9bmV3IGouU2lnbmVkRGF0YSgpO3ZhciBlPW5ldyBhLlRTVEluZm8oYi50c3RJbmZvKTt2YXIgZj1lLmdldEVuY29kZWRIZXgoKTtnLmRFbmNhcENvbnRlbnRJbmZvLnNldENvbnRlbnRWYWx1ZSh7aGV4OmZ9KTtnLmRFbmNhcENvbnRlbnRJbmZvLnNldENvbnRlbnRUeXBlKCJ0c3RpbmZvIik7aWYodHlwZW9mIGIuY2VydHM9PSJvYmplY3QiKXtmb3IodmFyIGM9MDtjPGIuY2VydHMubGVuZ3RoO2MrKyl7Zy5hZGRDZXJ0aWZpY2F0ZXNCeVBFTShiLmNlcnRzW2NdKX19dmFyIGQ9Zy5zaWduZXJJbmZvTGlzdFswXTtkLnNldFNpZ25lcklkZW50aWZpZXIoYi5zaWduZXJDZXJ0KTtkLnNldEZvckNvbnRlbnRBbmRIYXNoKHtzZE9iajpnLGVjaU9iajpnLmRFbmNhcENvbnRlbnRJbmZvLGhhc2hBbGc6Yi5oYXNoQWxnfSk7dmFyIGg9bmV3IGouU2lnbmluZ0NlcnRpZmljYXRlKHthcnJheTpbYi5zaWduZXJDZXJ0XX0pO2QuZFNpZ25lZEF0dHJzLmFkZChoKTtkLnNpZ24oYi5zaWduZXJQcnZLZXksYi5zaWdBbGcpO3JldHVybiBnfTtLSlVSLmFzbjEudHNwLlRTUFV0aWwucGFyc2VUaW1lU3RhbXBSZXE9ZnVuY3Rpb24oZCl7dmFyIGY9e307Zi5jZXJ0cmVxPWZhbHNlO3ZhciBoPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKGQsMCk7aWYoaC5sZW5ndGg8Mil7dGhyb3ciVGltZVN0YW1wUmVxIG11c3QgaGF2ZSBhdCBsZWFzdCAyIGl0ZW1zIn12YXIgYz1BU04xSEVYLmdldEhleE9mVExWX0F0T2JqKGQsaFsxXSk7Zi5taT1LSlVSLmFzbjEudHNwLlRTUFV0aWwucGFyc2VNZXNzYWdlSW1wcmludChjKTtmb3IodmFyIGU9MjtlPGgubGVuZ3RoO2UrKyl7dmFyIGI9aFtlXTt2YXIgYT1kLnN1YnN0cihiLDIpO2lmKGE9PSIwNiIpe3ZhciBnPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGQsYik7Zi5wb2xpY3k9QVNOMUhFWC5oZXh0b29pZHN0cihnKX1pZihhPT0iMDIiKXtmLm5vbmNlPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGQsYil9aWYoYT09IjAxIil7Zi5jZXJ0cmVxPXRydWV9fXJldHVybiBmfTtLSlVSLmFzbjEudHNwLlRTUFV0aWwucGFyc2VNZXNzYWdlSW1wcmludD1mdW5jdGlvbihjKXt2YXIgaD17fTtpZihjLnN1YnN0cigwLDIpIT0iMzAiKXt0aHJvdyJoZWFkIG9mIG1lc3NhZ2VJbXByaW50IGhleCBzaGFsbCBiZSAnMzAnIn12YXIgYT1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihjLDApO3ZhciBpPUFTTjFIRVguZ2V0RGVjZW5kYW50SW5kZXhCeU50aExpc3QoYywwLFswLDBdKTt2YXIgZD1BU04xSEVYLmdldEhleE9mVl9BdE9iaihjLGkpO3ZhciBlPUFTTjFIRVguaGV4dG9vaWRzdHIoZCk7dmFyIGc9S0pVUi5hc24xLng1MDkuT0lELm9pZDJuYW1lKGUpO2lmKGc9PSIiKXt0aHJvdyJoYXNoQWxnIG5hbWUgdW5kZWZpbmVkOiAiK2V9dmFyIGI9Zzt2YXIgZj1BU04xSEVYLmdldERlY2VuZGFudEluZGV4QnlOdGhMaXN0KGMsMCxbMV0pO2guaGFzaEFsZz1iO2guaGFzaFZhbHVlPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGMsZik7cmV0dXJuIGh9Ow0KLyohIGFzbjFjYWRlcy0xLjAuMC5qcyAoYykgMjAxMy0yMDE0IEtlbmppIFVydXNoaW1hIHwga2p1ci5naXRodWIuY29tL2pzcnNhc2lnbi9saWNlbnNlDQogKi8NCmlmKHR5cGVvZiBLSlVSPT0idW5kZWZpbmVkInx8IUtKVVIpe0tKVVI9e319aWYodHlwZW9mIEtKVVIuYXNuMT09InVuZGVmaW5lZCJ8fCFLSlVSLmFzbjEpe0tKVVIuYXNuMT17fX1pZih0eXBlb2YgS0pVUi5hc24xLmNhZGVzPT0idW5kZWZpbmVkInx8IUtKVVIuYXNuMS5jYWRlcyl7S0pVUi5hc24xLmNhZGVzPXt9fUtKVVIuYXNuMS5jYWRlcy5TaWduYXR1cmVQb2xpY3lJZGVudGlmaWVyPWZ1bmN0aW9uKGUpe0tKVVIuYXNuMS5jYWRlcy5TaWduYXR1cmVQb2xpY3lJZGVudGlmaWVyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt0aGlzLmF0dHJUeXBlT2lkPSIxLjIuODQwLjExMzU0OS4xLjkuMTYuMi4xNSI7dmFyIGI9S0pVUi5hc24xO3ZhciBkPUtKVVIuYXNuMS5jYWRlcztpZih0eXBlb2YgZSE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBlLm9pZD09InN0cmluZyImJnR5cGVvZiBlLmhhc2g9PSJvYmplY3QiKXt2YXIgZj1uZXcgYi5ERVJPYmplY3RJZGVudGlmaWVyKHtvaWQ6ZS5vaWR9KTt2YXIgYT1uZXcgZC5PdGhlckhhc2hBbGdBbmRWYWx1ZShlLmhhc2gpO3ZhciBjPW5ldyBiLkRFUlNlcXVlbmNlKHthcnJheTpbZixhXX0pO3RoaXMudmFsdWVMaXN0PVtjXX19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuY2FkZXMuU2lnbmF0dXJlUG9saWN5SWRlbnRpZmllcixLSlVSLmFzbjEuY21zLkF0dHJpYnV0ZSk7S0pVUi5hc24xLmNhZGVzLk90aGVySGFzaEFsZ0FuZFZhbHVlPWZ1bmN0aW9uKGIpe0tKVVIuYXNuMS5jYWRlcy5PdGhlckhhc2hBbGdBbmRWYWx1ZS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGE9S0pVUi5hc24xO3ZhciBjPUtKVVIuYXNuMS54NTA5O3RoaXMuZEFsZz1udWxsO3RoaXMuZEhhc2g9bnVsbDt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXt2YXIgZD1uZXcgYS5ERVJTZXF1ZW5jZSh7YXJyYXk6W3RoaXMuZEFsZyx0aGlzLmRIYXNoXX0pO3RoaXMuaFRMVj1kLmdldEVuY29kZWRIZXgoKTtyZXR1cm4gdGhpcy5oVExWfTtpZih0eXBlb2YgYiE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBiLmFsZz09InN0cmluZyImJnR5cGVvZiBiLmhhc2g9PSJzdHJpbmciKXt0aGlzLmRBbGc9bmV3IGMuQWxnb3JpdGhtSWRlbnRpZmllcih7bmFtZTpiLmFsZ30pO3RoaXMuZEhhc2g9bmV3IGEuREVST2N0ZXRTdHJpbmcoe2hleDpiLmhhc2h9KX19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuY2FkZXMuT3RoZXJIYXNoQWxnQW5kVmFsdWUsS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS5jYWRlcy5TaWduYXR1cmVUaW1lU3RhbXA9ZnVuY3Rpb24oYyl7S0pVUi5hc24xLmNhZGVzLlNpZ25hdHVyZVRpbWVTdGFtcC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dGhpcy5hdHRyVHlwZU9pZD0iMS4yLjg0MC4xMTM1NDkuMS45LjE2LjIuMTQiO3RoaXMudHN0SGV4PW51bGw7dmFyIGE9S0pVUi5hc24xO2lmKHR5cGVvZiBjIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGMucmVzIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGMucmVzPT0ic3RyaW5nIiYmYy5yZXMubWF0Y2goL15bMC05QS1GYS1mXSskLykpe31lbHNle2lmKGMucmVzIGluc3RhbmNlb2YgS0pVUi5hc24xLkFTTjFPYmplY3Qpe31lbHNle3Rocm93InJlcyBwYXJhbSBzaGFsbCBiZSBBU04xT2JqZWN0IG9yIGhleCBzdHJpbmcifX19aWYodHlwZW9mIGMudHN0IT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGMudHN0PT0ic3RyaW5nIiYmYy50c3QubWF0Y2goL15bMC05QS1GYS1mXSskLykpe3ZhciBiPW5ldyBhLkFTTjFPYmplY3QoKTt0aGlzLnRzdEhleD1jLnRzdDtiLmhUTFY9dGhpcy50c3RIZXg7Yi5nZXRFbmNvZGVkSGV4KCk7dGhpcy52YWx1ZUxpc3Q9W2JdfWVsc2V7aWYoYy50c3QgaW5zdGFuY2VvZiBLSlVSLmFzbjEuQVNOMU9iamVjdCl7fWVsc2V7dGhyb3cidHN0IHBhcmFtIHNoYWxsIGJlIEFTTjFPYmplY3Qgb3IgaGV4IHN0cmluZyJ9fX19fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuY2FkZXMuU2lnbmF0dXJlVGltZVN0YW1wLEtKVVIuYXNuMS5jbXMuQXR0cmlidXRlKTtLSlVSLmFzbjEuY2FkZXMuQ29tcGxldGVDZXJ0aWZpY2F0ZVJlZnM9ZnVuY3Rpb24oYyl7S0pVUi5hc24xLmNhZGVzLkNvbXBsZXRlQ2VydGlmaWNhdGVSZWZzLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt0aGlzLmF0dHJUeXBlT2lkPSIxLjIuODQwLjExMzU0OS4xLjkuMTYuMi4yMSI7dmFyIGE9S0pVUi5hc24xO3ZhciBiPUtKVVIuYXNuMS5jYWRlczt0aGlzLnNldEJ5QXJyYXk9ZnVuY3Rpb24oZCl7dGhpcy52YWx1ZUxpc3Q9W107Zm9yKHZhciBlPTA7ZTxkLmxlbmd0aDtlKyspe3ZhciBmPW5ldyBiLk90aGVyQ2VydElEKGRbZV0pO3RoaXMudmFsdWVMaXN0LnB1c2goZil9fTtpZih0eXBlb2YgYyE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBjPT0ib2JqZWN0IiYmdHlwZW9mIGMubGVuZ3RoPT0ibnVtYmVyIil7dGhpcy5zZXRCeUFycmF5KGMpfX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5jYWRlcy5Db21wbGV0ZUNlcnRpZmljYXRlUmVmcyxLSlVSLmFzbjEuY21zLkF0dHJpYnV0ZSk7S0pVUi5hc24xLmNhZGVzLk90aGVyQ2VydElEPWZ1bmN0aW9uKGQpe0tKVVIuYXNuMS5jYWRlcy5PdGhlckNlcnRJRC5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dmFyIGE9S0pVUi5hc24xO3ZhciBjPUtKVVIuYXNuMS5jbXM7dmFyIGI9S0pVUi5hc24xLmNhZGVzO3RoaXMuaGFzSXNzdWVyU2VyaWFsPXRydWU7dGhpcy5kT3RoZXJDZXJ0SGFzaD1udWxsO3RoaXMuZElzc3VlclNlcmlhbD1udWxsO3RoaXMuc2V0QnlDZXJ0UEVNPWZ1bmN0aW9uKGUpe3RoaXMuZE90aGVyQ2VydEhhc2g9bmV3IGIuT3RoZXJIYXNoKGUpO2lmKHRoaXMuaGFzSXNzdWVyU2VyaWFsKXt0aGlzLmRJc3N1ZXJTZXJpYWw9bmV3IGMuSXNzdWVyQW5kU2VyaWFsTnVtYmVyKGUpfX07dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7aWYodGhpcy5oVExWIT1udWxsKXtyZXR1cm4gdGhpcy5oVExWfWlmKHRoaXMuZE90aGVyQ2VydEhhc2g9PW51bGwpe3Rocm93Im90aGVyQ2VydEhhc2ggbm90IHNldCJ9dmFyIGU9W3RoaXMuZE90aGVyQ2VydEhhc2hdO2lmKHRoaXMuZElzc3VlclNlcmlhbCE9bnVsbCl7ZS5wdXNoKHRoaXMuZElzc3VlclNlcmlhbCl9dmFyIGY9bmV3IGEuREVSU2VxdWVuY2Uoe2FycmF5OmV9KTt0aGlzLmhUTFY9Zi5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIHRoaXMuaFRMVn07aWYodHlwZW9mIGQhPSJ1bmRlZmluZWQiKXtpZih0eXBlb2YgZD09InN0cmluZyImJmQuaW5kZXhPZigiLS0tLS1CRUdJTiAiKSE9LTEpe3RoaXMuc2V0QnlDZXJ0UEVNKGQpfWlmKHR5cGVvZiBkPT0ib2JqZWN0Iil7aWYoZC5oYXNpcz09PWZhbHNlKXt0aGlzLmhhc0lzc3VlclNlcmlhbD1mYWxzZX1pZih0eXBlb2YgZC5jZXJ0PT0ic3RyaW5nIil7dGhpcy5zZXRCeUNlcnRQRU0oZC5jZXJ0KX19fX07WUFIT08ubGFuZy5leHRlbmQoS0pVUi5hc24xLmNhZGVzLk90aGVyQ2VydElELEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEuY2FkZXMuT3RoZXJIYXNoPWZ1bmN0aW9uKGMpe0tKVVIuYXNuMS5jYWRlcy5PdGhlckhhc2guc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO3ZhciBhPUtKVVIuYXNuMTt2YXIgYj1LSlVSLmFzbjEuY2FkZXM7dGhpcy5hbGc9InNoYTI1NiI7dGhpcy5kT3RoZXJIYXNoPW51bGw7dGhpcy5zZXRCeUNlcnRQRU09ZnVuY3Rpb24oZCl7aWYoZC5pbmRleE9mKCItLS0tLUJFR0lOICIpPT0tMSl7dGhyb3ciY2VydFBFTSBub3QgdG8gc2VlbSBQRU0gZm9ybWF0In12YXIgZT1YNTA5LnBlbVRvSGV4KGQpO3ZhciBmPUtKVVIuY3J5cHRvLlV0aWwuaGFzaEhleChlLHRoaXMuYWxnKTt0aGlzLmRPdGhlckhhc2g9bmV3IGIuT3RoZXJIYXNoQWxnQW5kVmFsdWUoe2FsZzp0aGlzLmFsZyxoYXNoOmZ9KX07dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7aWYodGhpcy5kT3RoZXJIYXNoPT1udWxsKXt0aHJvdyJPdGhlckhhc2ggbm90IHNldCJ9cmV0dXJuIHRoaXMuZE90aGVySGFzaC5nZXRFbmNvZGVkSGV4KCl9O2lmKHR5cGVvZiBjIT0idW5kZWZpbmVkIil7aWYodHlwZW9mIGM9PSJzdHJpbmciKXtpZihjLmluZGV4T2YoIi0tLS0tQkVHSU4gIikhPS0xKXt0aGlzLnNldEJ5Q2VydFBFTShjKX1lbHNle2lmKGMubWF0Y2goL15bMC05QS1GYS1mXSskLykpe3RoaXMuZE90aGVySGFzaD1uZXcgYS5ERVJPY3RldFN0cmluZyh7aGV4OmN9KX1lbHNle3Rocm93InVuc3VwcG9ydGVkIHN0cmluZyB2YWx1ZSBmb3IgcGFyYW1zIn19fWVsc2V7aWYodHlwZW9mIGM9PSJvYmplY3QiKXtpZih0eXBlb2YgYy5jZXJ0PT0ic3RyaW5nIil7aWYodHlwZW9mIGMuYWxnPT0ic3RyaW5nIil7dGhpcy5hbGc9Yy5hbGd9dGhpcy5zZXRCeUNlcnRQRU0oYy5jZXJ0KX1lbHNle3RoaXMuZE90aGVySGFzaD1uZXcgYi5PdGhlckhhc2hBbGdBbmRWYWx1ZShjKX19fX19O1lBSE9PLmxhbmcuZXh0ZW5kKEtKVVIuYXNuMS5jYWRlcy5PdGhlckhhc2gsS0pVUi5hc24xLkFTTjFPYmplY3QpO0tKVVIuYXNuMS5jYWRlcy5DQWRFU1V0aWw9bmV3IGZ1bmN0aW9uKCl7fTtLSlVSLmFzbjEuY2FkZXMuQ0FkRVNVdGlsLmFkZFNpZ1RTPWZ1bmN0aW9uKGMsYixhKXt9O0tKVVIuYXNuMS5jYWRlcy5DQWRFU1V0aWwucGFyc2VTaWduZWREYXRhRm9yQWRkaW5nVW5zaWduZWQ9ZnVuY3Rpb24oZCl7dmFyIHE9S0pVUi5hc24xO3ZhciBwPUtKVVIuYXNuMS5jbXM7dmFyIGM9S0pVUi5hc24xLmNhZGVzLkNBZEVTVXRpbDt2YXIgYT17fTtpZihBU04xSEVYLmdldERlY2VuZGFudEhleFRMVkJ5TnRoTGlzdChkLDAsWzBdKSE9IjA2MDkyYTg2NDg4NmY3MGQwMTA3MDIiKXt0aHJvdyJoZXggaXMgbm90IENNUyBTaWduZWREYXRhIn12YXIgcz1BU04xSEVYLmdldERlY2VuZGFudEluZGV4QnlOdGhMaXN0KGQsMCxbMSwwXSk7dmFyIGI9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmooZCxzKTtpZihiLmxlbmd0aDw0KXt0aHJvdyJudW0gb2YgU2lnbmVkRGF0YSBlbGVtIHNoYWxsIGJlIDQgYXQgbGVhc3QifXZhciBmPWIuc2hpZnQoKTthLnZlcnNpb249QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaihkLGYpO3ZhciBsPWIuc2hpZnQoKTthLmFsZ3M9QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaihkLGwpO3ZhciBtPWIuc2hpZnQoKTthLmVuY2FwY29udGVudD1BU04xSEVYLmdldEhleE9mVExWX0F0T2JqKGQsbSk7YS5jZXJ0cz1udWxsO2EucmV2cz1udWxsO2Euc2k9W107dmFyIG49Yi5zaGlmdCgpO2lmKGQuc3Vic3RyKG4sMik9PSJhMCIpe2EuY2VydHM9QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaihkLG4pO249Yi5zaGlmdCgpfWlmKGQuc3Vic3RyKG4sMik9PSJhMSIpe2EucmV2cz1BU04xSEVYLmdldEhleE9mVExWX0F0T2JqKGQsbik7bj1iLnNoaWZ0KCl9dmFyIGs9bjtpZihkLnN1YnN0cihrLDIpIT0iMzEiKXt0aHJvdyJDYW4ndCBmaW5kIHNpZ25lckluZm9zIn12YXIgaj1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihkLGspO2Zvcih2YXIgaD0wO2g8ai5sZW5ndGg7aCsrKXt2YXIgbz1qW2hdO3ZhciBlPWMucGFyc2VTaWduZXJJbmZvRm9yQWRkaW5nVW5zaWduZWQoZCxvLGgpO2Euc2lbaF09ZX12YXIgZz1udWxsO2Eub2JqPW5ldyBwLlNpZ25lZERhdGEoKTtnPW5ldyBxLkFTTjFPYmplY3QoKTtnLmhUTFY9YS52ZXJzaW9uO2Eub2JqLmRDTVNWZXJzaW9uPWc7Zz1uZXcgcS5BU04xT2JqZWN0KCk7Zy5oVExWPWEuYWxnczthLm9iai5kRGlnZXN0QWxncz1nO2c9bmV3IHEuQVNOMU9iamVjdCgpO2cuaFRMVj1hLmVuY2FwY29udGVudDthLm9iai5kRW5jYXBDb250ZW50SW5mbz1nO2c9bmV3IHEuQVNOMU9iamVjdCgpO2cuaFRMVj1hLmNlcnRzO2Eub2JqLmRDZXJ0cz1nO2Eub2JqLnNpZ25lckluZm9MaXN0PVtdO2Zvcih2YXIgaD0wO2g8YS5zaS5sZW5ndGg7aCsrKXthLm9iai5zaWduZXJJbmZvTGlzdC5wdXNoKGEuc2lbaF0ub2JqKX1yZXR1cm4gYX07S0pVUi5hc24xLmNhZGVzLkNBZEVTVXRpbC5wYXJzZVNpZ25lckluZm9Gb3JBZGRpbmdVbnNpZ25lZD1mdW5jdGlvbihkLGssYSl7dmFyIG09S0pVUi5hc24xO3ZhciBsPUtKVVIuYXNuMS5jbXM7dmFyIGI9e307dmFyIGU9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmooZCxrKTtpZihlLmxlbmd0aCE9Nil7dGhyb3cibm90IHN1cHBvcnRlZCBpdGVtcyBmb3IgU2lnbmVySW5mbyAoIT02KSJ9dmFyIGY9ZS5zaGlmdCgpO2IudmVyc2lvbj1BU04xSEVYLmdldEhleE9mVExWX0F0T2JqKGQsZik7dmFyIG49ZS5zaGlmdCgpO2Iuc2k9QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaihkLG4pO3ZhciBoPWUuc2hpZnQoKTtiLmRpZ2FsZz1BU04xSEVYLmdldEhleE9mVExWX0F0T2JqKGQsaCk7dmFyIGM9ZS5zaGlmdCgpO2Iuc2F0dHJzPUFTTjFIRVguZ2V0SGV4T2ZUTFZfQXRPYmooZCxjKTt2YXIgaT1lLnNoaWZ0KCk7Yi5zaWdhbGc9QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaihkLGkpO3ZhciBqPWUuc2hpZnQoKTtiLnNpZz1BU04xSEVYLmdldEhleE9mVExWX0F0T2JqKGQsaik7Yi5zaWd2YWw9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooZCxqKTt2YXIgZz1udWxsO2Iub2JqPW5ldyBsLlNpZ25lckluZm8oKTtnPW5ldyBtLkFTTjFPYmplY3QoKTtnLmhUTFY9Yi52ZXJzaW9uO2Iub2JqLmRDTVNWZXJzaW9uPWc7Zz1uZXcgbS5BU04xT2JqZWN0KCk7Zy5oVExWPWIuc2k7Yi5vYmouZFNpZ25lcklkZW50aWZpZXI9ZztnPW5ldyBtLkFTTjFPYmplY3QoKTtnLmhUTFY9Yi5kaWdhbGc7Yi5vYmouZERpZ2VzdEFsZ29yaXRobT1nO2c9bmV3IG0uQVNOMU9iamVjdCgpO2cuaFRMVj1iLnNhdHRycztiLm9iai5kU2lnbmVkQXR0cnM9ZztnPW5ldyBtLkFTTjFPYmplY3QoKTtnLmhUTFY9Yi5zaWdhbGc7Yi5vYmouZFNpZ0FsZz1nO2c9bmV3IG0uQVNOMU9iamVjdCgpO2cuaFRMVj1iLnNpZztiLm9iai5kU2lnPWc7Yi5vYmouZFVuc2lnbmVkQXR0cnM9bmV3IGwuQXR0cmlidXRlTGlzdCgpO3JldHVybiBifTsNCi8qISBhc24xY3NyLTEuMC4wLmpzIChjKSAyMDE1IEtlbmppIFVydXNoaW1hIHwga2p1ci5naXRodWIuY29tL2pzcnNhc2lnbi9saWNlbnNlDQogKi8NCmlmKHR5cGVvZiBLSlVSLmFzbjEuY3NyPT0idW5kZWZpbmVkInx8IUtKVVIuYXNuMS5jc3Ipe0tKVVIuYXNuMS5jc3I9e319S0pVUi5hc24xLmNzci5DZXJ0aWZpY2F0aW9uUmVxdWVzdD1mdW5jdGlvbihmKXtLSlVSLmFzbjEuY3NyLkNlcnRpZmljYXRpb25SZXF1ZXN0LnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzKTt2YXIgYj1udWxsO3ZhciBkPW51bGw7dmFyIGU9bnVsbDt2YXIgYz1udWxsO3ZhciBhPW51bGw7dGhpcy5zaWduPWZ1bmN0aW9uKGksaCl7aWYodGhpcy5wcnZLZXk9PW51bGwpe3RoaXMucHJ2S2V5PWh9dGhpcy5hc24xU2lnbmF0dXJlQWxnPW5ldyBLSlVSLmFzbjEueDUwOS5BbGdvcml0aG1JZGVudGlmaWVyKHtuYW1lOml9KTtzaWc9bmV3IEtKVVIuY3J5cHRvLlNpZ25hdHVyZSh7YWxnOml9KTtzaWcuaW5pdFNpZ24odGhpcy5wcnZLZXkpO3NpZy51cGRhdGVIZXgodGhpcy5hc24xQ1NSSW5mby5nZXRFbmNvZGVkSGV4KCkpO3RoaXMuaGV4U2lnPXNpZy5zaWduKCk7dGhpcy5hc24xU2lnPW5ldyBLSlVSLmFzbjEuREVSQml0U3RyaW5nKHtoZXg6IjAwIit0aGlzLmhleFNpZ30pO3ZhciBnPW5ldyBLSlVSLmFzbjEuREVSU2VxdWVuY2Uoe2FycmF5Olt0aGlzLmFzbjFDU1JJbmZvLHRoaXMuYXNuMVNpZ25hdHVyZUFsZyx0aGlzLmFzbjFTaWddfSk7dGhpcy5oVExWPWcuZ2V0RW5jb2RlZEhleCgpO3RoaXMuaXNNb2RpZmllZD1mYWxzZX07dGhpcy5nZXRQRU1TdHJpbmc9ZnVuY3Rpb24oKXt2YXIgZz1LSlVSLmFzbjEuQVNOMVV0aWwuZ2V0UEVNU3RyaW5nRnJvbUhleCh0aGlzLmdldEVuY29kZWRIZXgoKSwiQ0VSVElGSUNBVEUgUkVRVUVTVCIpO3JldHVybiBnfTt0aGlzLmdldEVuY29kZWRIZXg9ZnVuY3Rpb24oKXtpZih0aGlzLmlzTW9kaWZpZWQ9PWZhbHNlJiZ0aGlzLmhUTFYhPW51bGwpe3JldHVybiB0aGlzLmhUTFZ9dGhyb3cibm90IHNpZ25lZCB5ZXQifTtpZih0eXBlb2YgZiE9InVuZGVmaW5lZCIpe2lmKHR5cGVvZiBmLmNzcmluZm8hPSJ1bmRlZmluZWQiKXt0aGlzLmFzbjFDU1JJbmZvPWYuY3NyaW5mb319fTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuY3NyLkNlcnRpZmljYXRpb25SZXF1ZXN0LEtKVVIuYXNuMS5BU04xT2JqZWN0KTtLSlVSLmFzbjEuY3NyLkNlcnRpZmljYXRpb25SZXF1ZXN0SW5mbz1mdW5jdGlvbihhKXtLSlVSLmFzbjEuY3NyLkNlcnRpZmljYXRpb25SZXF1ZXN0SW5mby5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7dGhpcy5faW5pdGlhbGl6ZT1mdW5jdGlvbigpe3RoaXMuYXNuMUFycmF5PW5ldyBBcnJheSgpO3RoaXMuYXNuMVZlcnNpb249bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKHsiaW50IjowfSk7dGhpcy5hc24xU3ViamVjdD1udWxsO3RoaXMuYXNuMVN1YmpQS2V5PW51bGw7dGhpcy5leHRlbnNpb25zQXJyYXk9bmV3IEFycmF5KCl9O3RoaXMuc2V0U3ViamVjdEJ5UGFyYW09ZnVuY3Rpb24oYil7dGhpcy5hc24xU3ViamVjdD1uZXcgS0pVUi5hc24xLng1MDkuWDUwME5hbWUoYil9O3RoaXMuc2V0U3ViamVjdFB1YmxpY0tleUJ5R2V0S2V5PWZ1bmN0aW9uKGMpe3ZhciBiPUtFWVVUSUwuZ2V0S2V5KGMpO3RoaXMuYXNuMVN1YmpQS2V5PW5ldyBLSlVSLmFzbjEueDUwOS5TdWJqZWN0UHVibGljS2V5SW5mbyhiKX07dGhpcy5nZXRFbmNvZGVkSGV4PWZ1bmN0aW9uKCl7dGhpcy5hc24xQXJyYXk9bmV3IEFycmF5KCk7dGhpcy5hc24xQXJyYXkucHVzaCh0aGlzLmFzbjFWZXJzaW9uKTt0aGlzLmFzbjFBcnJheS5wdXNoKHRoaXMuYXNuMVN1YmplY3QpO3RoaXMuYXNuMUFycmF5LnB1c2godGhpcy5hc24xU3VialBLZXkpO3ZhciBjPW5ldyBLSlVSLmFzbjEuREVSU2VxdWVuY2Uoe2FycmF5OnRoaXMuZXh0ZW5zaW9uc0FycmF5fSk7dmFyIGI9bmV3IEtKVVIuYXNuMS5ERVJUYWdnZWRPYmplY3Qoe2V4cGxpY2l0OmZhbHNlLHRhZzoiYTAiLG9iajpjfSk7dGhpcy5hc24xQXJyYXkucHVzaChiKTt2YXIgZD1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTp0aGlzLmFzbjFBcnJheX0pO3RoaXMuaFRMVj1kLmdldEVuY29kZWRIZXgoKTt0aGlzLmlzTW9kaWZpZWQ9ZmFsc2U7cmV0dXJuIHRoaXMuaFRMVn07dGhpcy5faW5pdGlhbGl6ZSgpfTtZQUhPTy5sYW5nLmV4dGVuZChLSlVSLmFzbjEuY3NyLkNlcnRpZmljYXRpb25SZXF1ZXN0SW5mbyxLSlVSLmFzbjEuQVNOMU9iamVjdCk7S0pVUi5hc24xLmNzci5DU1JVdGlsPW5ldyBmdW5jdGlvbigpe307S0pVUi5hc24xLmNzci5DU1JVdGlsLm5ld0NTUlBFTT1mdW5jdGlvbihmKXt2YXIgYz1LSlVSLmFzbjEuY3NyO2lmKGYuc3ViamVjdD09PXVuZGVmaW5lZCl7dGhyb3cicGFyYW1ldGVyIHN1YmplY3QgdW5kZWZpbmVkIn1pZihmLnNianB1YmtleT09PXVuZGVmaW5lZCl7dGhyb3cicGFyYW1ldGVyIHNianB1YmtleSB1bmRlZmluZWQifWlmKGYuc2lnYWxnPT09dW5kZWZpbmVkKXt0aHJvdyJwYXJhbWV0ZXIgc2lnYWxnIHVuZGVmaW5lZCJ9aWYoZi5zYmpwcnZrZXk9PT11bmRlZmluZWQpe3Rocm93InBhcmFtZXRlciBzYmpwdWJrZXkgdW5kZWZpbmVkIn12YXIgYj1uZXcgYy5DZXJ0aWZpY2F0aW9uUmVxdWVzdEluZm8oKTtiLnNldFN1YmplY3RCeVBhcmFtKGYuc3ViamVjdCk7Yi5zZXRTdWJqZWN0UHVibGljS2V5QnlHZXRLZXkoZi5zYmpwdWJrZXkpO3ZhciBkPW5ldyBjLkNlcnRpZmljYXRpb25SZXF1ZXN0KHtjc3JpbmZvOmJ9KTt2YXIgYT1LRVlVVElMLmdldEtleShmLnNianBydmtleSk7ZC5zaWduKGYuc2lnYWxnLGEpO3ZhciBlPWQuZ2V0UEVNU3RyaW5nKCk7cmV0dXJuIGV9Ow0KLyohIGJhc2U2NHgtMS4xLjYgKGMpIDIwMTItMjAxNSBLZW5qaSBVcnVzaGltYSB8IGtqdXIuZ2l0aHViLmNvbS9qc3JzYXNpZ24vbGljZW5zZQ0KICovDQpmdW5jdGlvbiBCYXNlNjR4KCl7fWZ1bmN0aW9uIHN0b0JBKGQpe3ZhciBiPW5ldyBBcnJheSgpO2Zvcih2YXIgYz0wO2M8ZC5sZW5ndGg7YysrKXtiW2NdPWQuY2hhckNvZGVBdChjKX1yZXR1cm4gYn1mdW5jdGlvbiBCQXRvcyhiKXt2YXIgZD0iIjtmb3IodmFyIGM9MDtjPGIubGVuZ3RoO2MrKyl7ZD1kK1N0cmluZy5mcm9tQ2hhckNvZGUoYltjXSl9cmV0dXJuIGR9ZnVuY3Rpb24gQkF0b2hleChiKXt2YXIgZT0iIjtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGM9YltkXS50b1N0cmluZygxNik7aWYoYy5sZW5ndGg9PTEpe2M9IjAiK2N9ZT1lK2N9cmV0dXJuIGV9ZnVuY3Rpb24gc3RvaGV4KGEpe3JldHVybiBCQXRvaGV4KHN0b0JBKGEpKX1mdW5jdGlvbiBzdG9iNjQoYSl7cmV0dXJuIGhleDJiNjQoc3RvaGV4KGEpKX1mdW5jdGlvbiBzdG9iNjR1KGEpe3JldHVybiBiNjR0b2I2NHUoaGV4MmI2NChzdG9oZXgoYSkpKX1mdW5jdGlvbiBiNjR1dG9zKGEpe3JldHVybiBCQXRvcyhiNjR0b0JBKGI2NHV0b2I2NChhKSkpfWZ1bmN0aW9uIGI2NHRvYjY0dShhKXthPWEucmVwbGFjZSgvXD0vZywiIik7YT1hLnJlcGxhY2UoL1wrL2csIi0iKTthPWEucmVwbGFjZSgvXC8vZywiXyIpO3JldHVybiBhfWZ1bmN0aW9uIGI2NHV0b2I2NChhKXtpZihhLmxlbmd0aCU0PT0yKXthPWErIj09In1lbHNle2lmKGEubGVuZ3RoJTQ9PTMpe2E9YSsiPSJ9fWE9YS5yZXBsYWNlKC8tL2csIisiKTthPWEucmVwbGFjZSgvXy9nLCIvIik7cmV0dXJuIGF9ZnVuY3Rpb24gaGV4dG9iNjR1KGEpe2lmKGEubGVuZ3RoJTI9PTEpe2E9IjAiK2F9cmV0dXJuIGI2NHRvYjY0dShoZXgyYjY0KGEpKX1mdW5jdGlvbiBiNjR1dG9oZXgoYSl7cmV0dXJuIGI2NHRvaGV4KGI2NHV0b2I2NChhKSl9dmFyIHV0Zjh0b2I2NHUsYjY0dXRvdXRmODtpZih0eXBlb2YgQnVmZmVyPT09ImZ1bmN0aW9uIil7dXRmOHRvYjY0dT1mdW5jdGlvbihhKXtyZXR1cm4gYjY0dG9iNjR1KG5ldyBCdWZmZXIoYSwidXRmOCIpLnRvU3RyaW5nKCJiYXNlNjQiKSl9O2I2NHV0b3V0Zjg9ZnVuY3Rpb24oYSl7cmV0dXJuIG5ldyBCdWZmZXIoYjY0dXRvYjY0KGEpLCJiYXNlNjQiKS50b1N0cmluZygidXRmOCIpfX1lbHNle3V0Zjh0b2I2NHU9ZnVuY3Rpb24oYSl7cmV0dXJuIGhleHRvYjY0dSh1cmljbXB0b2hleChlbmNvZGVVUklDb21wb25lbnRBbGwoYSkpKX07YjY0dXRvdXRmOD1mdW5jdGlvbihhKXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGhleHRvdXJpY21wKGI2NHV0b2hleChhKSkpfX1mdW5jdGlvbiB1dGY4dG9iNjQoYSl7cmV0dXJuIGhleDJiNjQodXJpY21wdG9oZXgoZW5jb2RlVVJJQ29tcG9uZW50QWxsKGEpKSl9ZnVuY3Rpb24gYjY0dG91dGY4KGEpe3JldHVybiBkZWNvZGVVUklDb21wb25lbnQoaGV4dG91cmljbXAoYjY0dG9oZXgoYSkpKX1mdW5jdGlvbiB1dGY4dG9oZXgoYSl7cmV0dXJuIHVyaWNtcHRvaGV4KGVuY29kZVVSSUNvbXBvbmVudEFsbChhKSl9ZnVuY3Rpb24gaGV4dG91dGY4KGEpe3JldHVybiBkZWNvZGVVUklDb21wb25lbnQoaGV4dG91cmljbXAoYSkpfWZ1bmN0aW9uIGhleHRvcnN0cihjKXt2YXIgYj0iIjtmb3IodmFyIGE9MDthPGMubGVuZ3RoLTE7YSs9Mil7Yis9U3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChjLnN1YnN0cihhLDIpLDE2KSl9cmV0dXJuIGJ9ZnVuY3Rpb24gcnN0cnRvaGV4KGMpe3ZhciBhPSIiO2Zvcih2YXIgYj0wO2I8Yy5sZW5ndGg7YisrKXthKz0oIjAiK2MuY2hhckNvZGVBdChiKS50b1N0cmluZygxNikpLnNsaWNlKC0yKX1yZXR1cm4gYX1mdW5jdGlvbiBoZXh0b2I2NChhKXtyZXR1cm4gaGV4MmI2NChhKX1mdW5jdGlvbiBoZXh0b2I2NG5sKGIpe3ZhciBhPWhleHRvYjY0KGIpO3ZhciBjPWEucmVwbGFjZSgvKC57NjR9KS9nLCIkMVxyXG4iKTtjPWMucmVwbGFjZSgvXHJcbiQvLCIiKTtyZXR1cm4gY31mdW5jdGlvbiBiNjRubHRvaGV4KGIpe3ZhciBhPWIucmVwbGFjZSgvW14wLTlBLVphLXpcLys9XSovZywiIik7dmFyIGM9YjY0dG9oZXgoYSk7cmV0dXJuIGN9ZnVuY3Rpb24gdXJpY21wdG9oZXgoYSl7cmV0dXJuIGEucmVwbGFjZSgvJS9nLCIiKX1mdW5jdGlvbiBoZXh0b3VyaWNtcChhKXtyZXR1cm4gYS5yZXBsYWNlKC8oLi4pL2csIiUkMSIpfWZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudEFsbChhKXt2YXIgZD1lbmNvZGVVUklDb21wb25lbnQoYSk7dmFyIGI9IiI7Zm9yKHZhciBjPTA7YzxkLmxlbmd0aDtjKyspe2lmKGRbY109PSIlIil7Yj1iK2Quc3Vic3RyKGMsMyk7Yz1jKzJ9ZWxzZXtiPWIrIiUiK3N0b2hleChkW2NdKX19cmV0dXJuIGJ9ZnVuY3Rpb24gbmV3bGluZV90b1VuaXgoYSl7YT1hLnJlcGxhY2UoL1xyXG4vbWcsIlxuIik7cmV0dXJuIGF9ZnVuY3Rpb24gbmV3bGluZV90b0RvcyhhKXthPWEucmVwbGFjZSgvXHJcbi9tZywiXG4iKTthPWEucmVwbGFjZSgvXG4vbWcsIlxyXG4iKTtyZXR1cm4gYX1mdW5jdGlvbiBpbnRhcnlzdHJ0b2hleChiKXtiPWIucmVwbGFjZSgvXlxzKlxbXHMqLywiIik7Yj1iLnJlcGxhY2UoL1xzKlxdXHMqJC8sIiIpO2I9Yi5yZXBsYWNlKC9ccyovZywiIik7dHJ5e3ZhciBjPWIuc3BsaXQoLywvKS5tYXAoZnVuY3Rpb24oZyxlLGgpe3ZhciBmPXBhcnNlSW50KGcpO2lmKGY8MHx8MjU1PGYpe3Rocm93ImludGVnZXIgbm90IGluIHJhbmdlIDAtMjU1In12YXIgZD0oIjAwIitmLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTIpO3JldHVybiBkfSkuam9pbigiIik7cmV0dXJuIGN9Y2F0Y2goYSl7dGhyb3cibWFsZm9ybWVkIGludGVnZXIgYXJyYXkgc3RyaW5nOiAiK2F9fXZhciBzdHJkaWZmaWR4PWZ1bmN0aW9uKGMsYSl7dmFyIGQ9Yy5sZW5ndGg7aWYoYy5sZW5ndGg+YS5sZW5ndGgpe2Q9YS5sZW5ndGh9Zm9yKHZhciBiPTA7YjxkO2IrKyl7aWYoYy5jaGFyQ29kZUF0KGIpIT1hLmNoYXJDb2RlQXQoYikpe3JldHVybiBifX1pZihjLmxlbmd0aCE9YS5sZW5ndGgpe3JldHVybiBkfXJldHVybiAtMX07DQovKiEgY3J5cHRvLTEuMS44LmpzIChjKSAyMDEzLTIwMTYgS2VuamkgVXJ1c2hpbWEgfCBranVyLmdpdGh1Yi5jb20vanNyc2FzaWduL2xpY2Vuc2UNCiAqLw0KaWYodHlwZW9mIEtKVVI9PSJ1bmRlZmluZWQifHwhS0pVUil7S0pVUj17fX1pZih0eXBlb2YgS0pVUi5jcnlwdG89PSJ1bmRlZmluZWQifHwhS0pVUi5jcnlwdG8pe0tKVVIuY3J5cHRvPXt9fUtKVVIuY3J5cHRvLlV0aWw9bmV3IGZ1bmN0aW9uKCl7dGhpcy5ESUdFU1RJTkZPSEVBRD17c2hhMToiMzAyMTMwMDkwNjA1MmIwZTAzMDIxYTA1MDAwNDE0IixzaGEyMjQ6IjMwMmQzMDBkMDYwOTYwODY0ODAxNjUwMzA0MDIwNDA1MDAwNDFjIixzaGEyNTY6IjMwMzEzMDBkMDYwOTYwODY0ODAxNjUwMzA0MDIwMTA1MDAwNDIwIixzaGEzODQ6IjMwNDEzMDBkMDYwOTYwODY0ODAxNjUwMzA0MDIwMjA1MDAwNDMwIixzaGE1MTI6IjMwNTEzMDBkMDYwOTYwODY0ODAxNjUwMzA0MDIwMzA1MDAwNDQwIixtZDI6IjMwMjAzMDBjMDYwODJhODY0ODg2ZjcwZDAyMDIwNTAwMDQxMCIsbWQ1OiIzMDIwMzAwYzA2MDgyYTg2NDg4NmY3MGQwMjA1MDUwMDA0MTAiLHJpcGVtZDE2MDoiMzAyMTMwMDkwNjA1MmIyNDAzMDIwMTA1MDAwNDE0Iix9O3RoaXMuREVGQVVMVFBST1ZJREVSPXttZDU6ImNyeXB0b2pzIixzaGExOiJjcnlwdG9qcyIsc2hhMjI0OiJjcnlwdG9qcyIsc2hhMjU2OiJjcnlwdG9qcyIsc2hhMzg0OiJjcnlwdG9qcyIsc2hhNTEyOiJjcnlwdG9qcyIscmlwZW1kMTYwOiJjcnlwdG9qcyIsaG1hY21kNToiY3J5cHRvanMiLGhtYWNzaGExOiJjcnlwdG9qcyIsaG1hY3NoYTIyNDoiY3J5cHRvanMiLGhtYWNzaGEyNTY6ImNyeXB0b2pzIixobWFjc2hhMzg0OiJjcnlwdG9qcyIsaG1hY3NoYTUxMjoiY3J5cHRvanMiLGhtYWNyaXBlbWQxNjA6ImNyeXB0b2pzIixNRDV3aXRoUlNBOiJjcnlwdG9qcy9qc3JzYSIsU0hBMXdpdGhSU0E6ImNyeXB0b2pzL2pzcnNhIixTSEEyMjR3aXRoUlNBOiJjcnlwdG9qcy9qc3JzYSIsU0hBMjU2d2l0aFJTQToiY3J5cHRvanMvanNyc2EiLFNIQTM4NHdpdGhSU0E6ImNyeXB0b2pzL2pzcnNhIixTSEE1MTJ3aXRoUlNBOiJjcnlwdG9qcy9qc3JzYSIsUklQRU1EMTYwd2l0aFJTQToiY3J5cHRvanMvanNyc2EiLE1ENXdpdGhFQ0RTQToiY3J5cHRvanMvanNyc2EiLFNIQTF3aXRoRUNEU0E6ImNyeXB0b2pzL2pzcnNhIixTSEEyMjR3aXRoRUNEU0E6ImNyeXB0b2pzL2pzcnNhIixTSEEyNTZ3aXRoRUNEU0E6ImNyeXB0b2pzL2pzcnNhIixTSEEzODR3aXRoRUNEU0E6ImNyeXB0b2pzL2pzcnNhIixTSEE1MTJ3aXRoRUNEU0E6ImNyeXB0b2pzL2pzcnNhIixSSVBFTUQxNjB3aXRoRUNEU0E6ImNyeXB0b2pzL2pzcnNhIixTSEExd2l0aERTQToiY3J5cHRvanMvanNyc2EiLFNIQTIyNHdpdGhEU0E6ImNyeXB0b2pzL2pzcnNhIixTSEEyNTZ3aXRoRFNBOiJjcnlwdG9qcy9qc3JzYSIsTUQ1d2l0aFJTQWFuZE1HRjE6ImNyeXB0b2pzL2pzcnNhIixTSEExd2l0aFJTQWFuZE1HRjE6ImNyeXB0b2pzL2pzcnNhIixTSEEyMjR3aXRoUlNBYW5kTUdGMToiY3J5cHRvanMvanNyc2EiLFNIQTI1NndpdGhSU0FhbmRNR0YxOiJjcnlwdG9qcy9qc3JzYSIsU0hBMzg0d2l0aFJTQWFuZE1HRjE6ImNyeXB0b2pzL2pzcnNhIixTSEE1MTJ3aXRoUlNBYW5kTUdGMToiY3J5cHRvanMvanNyc2EiLFJJUEVNRDE2MHdpdGhSU0FhbmRNR0YxOiJjcnlwdG9qcy9qc3JzYSIsfTt0aGlzLkNSWVBUT0pTTUVTU0FHRURJR0VTVE5BTUU9e21kNTpDcnlwdG9KUy5hbGdvLk1ENSxzaGExOkNyeXB0b0pTLmFsZ28uU0hBMSxzaGEyMjQ6Q3J5cHRvSlMuYWxnby5TSEEyMjQsc2hhMjU2OkNyeXB0b0pTLmFsZ28uU0hBMjU2LHNoYTM4NDpDcnlwdG9KUy5hbGdvLlNIQTM4NCxzaGE1MTI6Q3J5cHRvSlMuYWxnby5TSEE1MTIscmlwZW1kMTYwOkNyeXB0b0pTLmFsZ28uUklQRU1EMTYwfTt0aGlzLmdldERpZ2VzdEluZm9IZXg9ZnVuY3Rpb24oYSxiKXtpZih0eXBlb2YgdGhpcy5ESUdFU1RJTkZPSEVBRFtiXT09InVuZGVmaW5lZCIpe3Rocm93ImFsZyBub3Qgc3VwcG9ydGVkIGluIFV0aWwuRElHRVNUSU5GT0hFQUQ6ICIrYn1yZXR1cm4gdGhpcy5ESUdFU1RJTkZPSEVBRFtiXSthfTt0aGlzLmdldFBhZGRlZERpZ2VzdEluZm9IZXg9ZnVuY3Rpb24oaCxhLGope3ZhciBjPXRoaXMuZ2V0RGlnZXN0SW5mb0hleChoLGEpO3ZhciBkPWovNDtpZihjLmxlbmd0aCsyMj5kKXt0aHJvdyJrZXkgaXMgdG9vIHNob3J0IGZvciBTaWdBbGc6IGtleWxlbj0iK2orIiwiK2F9dmFyIGI9IjAwMDEiO3ZhciBrPSIwMCIrYzt2YXIgZz0iIjt2YXIgbD1kLWIubGVuZ3RoLWsubGVuZ3RoO2Zvcih2YXIgZj0wO2Y8bDtmKz0yKXtnKz0iZmYifXZhciBlPWIrZytrO3JldHVybiBlfTt0aGlzLmhhc2hTdHJpbmc9ZnVuY3Rpb24oYSxjKXt2YXIgYj1uZXcgS0pVUi5jcnlwdG8uTWVzc2FnZURpZ2VzdCh7YWxnOmN9KTtyZXR1cm4gYi5kaWdlc3RTdHJpbmcoYSl9O3RoaXMuaGFzaEhleD1mdW5jdGlvbihiLGMpe3ZhciBhPW5ldyBLSlVSLmNyeXB0by5NZXNzYWdlRGlnZXN0KHthbGc6Y30pO3JldHVybiBhLmRpZ2VzdEhleChiKX07dGhpcy5zaGExPWZ1bmN0aW9uKGEpe3ZhciBiPW5ldyBLSlVSLmNyeXB0by5NZXNzYWdlRGlnZXN0KHthbGc6InNoYTEiLHByb3Y6ImNyeXB0b2pzIn0pO3JldHVybiBiLmRpZ2VzdFN0cmluZyhhKX07dGhpcy5zaGEyNTY9ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IEtKVVIuY3J5cHRvLk1lc3NhZ2VEaWdlc3Qoe2FsZzoic2hhMjU2Iixwcm92OiJjcnlwdG9qcyJ9KTtyZXR1cm4gYi5kaWdlc3RTdHJpbmcoYSl9O3RoaXMuc2hhMjU2SGV4PWZ1bmN0aW9uKGEpe3ZhciBiPW5ldyBLSlVSLmNyeXB0by5NZXNzYWdlRGlnZXN0KHthbGc6InNoYTI1NiIscHJvdjoiY3J5cHRvanMifSk7cmV0dXJuIGIuZGlnZXN0SGV4KGEpfTt0aGlzLnNoYTUxMj1mdW5jdGlvbihhKXt2YXIgYj1uZXcgS0pVUi5jcnlwdG8uTWVzc2FnZURpZ2VzdCh7YWxnOiJzaGE1MTIiLHByb3Y6ImNyeXB0b2pzIn0pO3JldHVybiBiLmRpZ2VzdFN0cmluZyhhKX07dGhpcy5zaGE1MTJIZXg9ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IEtKVVIuY3J5cHRvLk1lc3NhZ2VEaWdlc3Qoe2FsZzoic2hhNTEyIixwcm92OiJjcnlwdG9qcyJ9KTtyZXR1cm4gYi5kaWdlc3RIZXgoYSl9O3RoaXMubWQ1PWZ1bmN0aW9uKGEpe3ZhciBiPW5ldyBLSlVSLmNyeXB0by5NZXNzYWdlRGlnZXN0KHthbGc6Im1kNSIscHJvdjoiY3J5cHRvanMifSk7cmV0dXJuIGIuZGlnZXN0U3RyaW5nKGEpfTt0aGlzLnJpcGVtZDE2MD1mdW5jdGlvbihhKXt2YXIgYj1uZXcgS0pVUi5jcnlwdG8uTWVzc2FnZURpZ2VzdCh7YWxnOiJyaXBlbWQxNjAiLHByb3Y6ImNyeXB0b2pzIn0pO3JldHVybiBiLmRpZ2VzdFN0cmluZyhhKX07dGhpcy5nZXRDcnlwdG9KU01EQnlOYW1lPWZ1bmN0aW9uKGEpe319O0tKVVIuY3J5cHRvLk1lc3NhZ2VEaWdlc3Q9ZnVuY3Rpb24oYyl7dmFyIGI9bnVsbDt2YXIgYT1udWxsO3ZhciBkPW51bGw7dGhpcy5zZXRBbGdBbmRQcm92aWRlcj1mdW5jdGlvbihnLGYpe2lmKGchPW51bGwmJmY9PT11bmRlZmluZWQpe2Y9S0pVUi5jcnlwdG8uVXRpbC5ERUZBVUxUUFJPVklERVJbZ119aWYoIjptZDU6c2hhMTpzaGEyMjQ6c2hhMjU2OnNoYTM4NDpzaGE1MTI6cmlwZW1kMTYwOiIuaW5kZXhPZihnKSE9LTEmJmY9PSJjcnlwdG9qcyIpe3RyeXt0aGlzLm1kPUtKVVIuY3J5cHRvLlV0aWwuQ1JZUFRPSlNNRVNTQUdFRElHRVNUTkFNRVtnXS5jcmVhdGUoKX1jYXRjaChlKXt0aHJvdyJzZXRBbGdBbmRQcm92aWRlciBoYXNoIGFsZyBzZXQgZmFpbCBhbGc9IitnKyIvIitlfXRoaXMudXBkYXRlU3RyaW5nPWZ1bmN0aW9uKGgpe3RoaXMubWQudXBkYXRlKGgpfTt0aGlzLnVwZGF0ZUhleD1mdW5jdGlvbihoKXt2YXIgaT1DcnlwdG9KUy5lbmMuSGV4LnBhcnNlKGgpO3RoaXMubWQudXBkYXRlKGkpfTt0aGlzLmRpZ2VzdD1mdW5jdGlvbigpe3ZhciBoPXRoaXMubWQuZmluYWxpemUoKTtyZXR1cm4gaC50b1N0cmluZyhDcnlwdG9KUy5lbmMuSGV4KX07dGhpcy5kaWdlc3RTdHJpbmc9ZnVuY3Rpb24oaCl7dGhpcy51cGRhdGVTdHJpbmcoaCk7cmV0dXJuIHRoaXMuZGlnZXN0KCl9O3RoaXMuZGlnZXN0SGV4PWZ1bmN0aW9uKGgpe3RoaXMudXBkYXRlSGV4KGgpO3JldHVybiB0aGlzLmRpZ2VzdCgpfX1pZigiOnNoYTI1NjoiLmluZGV4T2YoZykhPS0xJiZmPT0ic2pjbCIpe3RyeXt0aGlzLm1kPW5ldyBzamNsLmhhc2guc2hhMjU2KCl9Y2F0Y2goZSl7dGhyb3cic2V0QWxnQW5kUHJvdmlkZXIgaGFzaCBhbGcgc2V0IGZhaWwgYWxnPSIrZysiLyIrZX10aGlzLnVwZGF0ZVN0cmluZz1mdW5jdGlvbihoKXt0aGlzLm1kLnVwZGF0ZShoKX07dGhpcy51cGRhdGVIZXg9ZnVuY3Rpb24oaSl7dmFyIGg9c2pjbC5jb2RlYy5oZXgudG9CaXRzKGkpO3RoaXMubWQudXBkYXRlKGgpfTt0aGlzLmRpZ2VzdD1mdW5jdGlvbigpe3ZhciBoPXRoaXMubWQuZmluYWxpemUoKTtyZXR1cm4gc2pjbC5jb2RlYy5oZXguZnJvbUJpdHMoaCl9O3RoaXMuZGlnZXN0U3RyaW5nPWZ1bmN0aW9uKGgpe3RoaXMudXBkYXRlU3RyaW5nKGgpO3JldHVybiB0aGlzLmRpZ2VzdCgpfTt0aGlzLmRpZ2VzdEhleD1mdW5jdGlvbihoKXt0aGlzLnVwZGF0ZUhleChoKTtyZXR1cm4gdGhpcy5kaWdlc3QoKX19fTt0aGlzLnVwZGF0ZVN0cmluZz1mdW5jdGlvbihlKXt0aHJvdyJ1cGRhdGVTdHJpbmcoc3RyKSBub3Qgc3VwcG9ydGVkIGZvciB0aGlzIGFsZy9wcm92OiAiK3RoaXMuYWxnTmFtZSsiLyIrdGhpcy5wcm92TmFtZX07dGhpcy51cGRhdGVIZXg9ZnVuY3Rpb24oZSl7dGhyb3cidXBkYXRlSGV4KGhleCkgbm90IHN1cHBvcnRlZCBmb3IgdGhpcyBhbGcvcHJvdjogIit0aGlzLmFsZ05hbWUrIi8iK3RoaXMucHJvdk5hbWV9O3RoaXMuZGlnZXN0PWZ1bmN0aW9uKCl7dGhyb3ciZGlnZXN0KCkgbm90IHN1cHBvcnRlZCBmb3IgdGhpcyBhbGcvcHJvdjogIit0aGlzLmFsZ05hbWUrIi8iK3RoaXMucHJvdk5hbWV9O3RoaXMuZGlnZXN0U3RyaW5nPWZ1bmN0aW9uKGUpe3Rocm93ImRpZ2VzdFN0cmluZyhzdHIpIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgYWxnL3Byb3Y6ICIrdGhpcy5hbGdOYW1lKyIvIit0aGlzLnByb3ZOYW1lfTt0aGlzLmRpZ2VzdEhleD1mdW5jdGlvbihlKXt0aHJvdyJkaWdlc3RIZXgoaGV4KSBub3Qgc3VwcG9ydGVkIGZvciB0aGlzIGFsZy9wcm92OiAiK3RoaXMuYWxnTmFtZSsiLyIrdGhpcy5wcm92TmFtZX07aWYoYyE9PXVuZGVmaW5lZCl7aWYoYy5hbGchPT11bmRlZmluZWQpe3RoaXMuYWxnTmFtZT1jLmFsZztpZihjLnByb3Y9PT11bmRlZmluZWQpe3RoaXMucHJvdk5hbWU9S0pVUi5jcnlwdG8uVXRpbC5ERUZBVUxUUFJPVklERVJbdGhpcy5hbGdOYW1lXX10aGlzLnNldEFsZ0FuZFByb3ZpZGVyKHRoaXMuYWxnTmFtZSx0aGlzLnByb3ZOYW1lKX19fTtLSlVSLmNyeXB0by5NYWM9ZnVuY3Rpb24oZCl7dmFyIGY9bnVsbDt2YXIgYz1udWxsO3ZhciBhPW51bGw7dmFyIGU9bnVsbDt2YXIgYj1udWxsO3RoaXMuc2V0QWxnQW5kUHJvdmlkZXI9ZnVuY3Rpb24oayxpKXtrPWsudG9Mb3dlckNhc2UoKTtpZihrPT1udWxsKXtrPSJobWFjc2hhMSJ9az1rLnRvTG93ZXJDYXNlKCk7aWYoay5zdWJzdHIoMCw0KSE9ImhtYWMiKXt0aHJvdyJzZXRBbGdBbmRQcm92aWRlciB1bnN1cHBvcnRlZCBITUFDIGFsZzogIitrfWlmKGk9PT11bmRlZmluZWQpe2k9S0pVUi5jcnlwdG8uVXRpbC5ERUZBVUxUUFJPVklERVJba119dGhpcy5hbGdQcm92PWsrIi8iK2k7dmFyIGc9ay5zdWJzdHIoNCk7aWYoIjptZDU6c2hhMTpzaGEyMjQ6c2hhMjU2OnNoYTM4NDpzaGE1MTI6cmlwZW1kMTYwOiIuaW5kZXhPZihnKSE9LTEmJmk9PSJjcnlwdG9qcyIpe3RyeXt2YXIgaj1LSlVSLmNyeXB0by5VdGlsLkNSWVBUT0pTTUVTU0FHRURJR0VTVE5BTUVbZ107dGhpcy5tYWM9Q3J5cHRvSlMuYWxnby5ITUFDLmNyZWF0ZShqLHRoaXMucGFzcyl9Y2F0Y2goaCl7dGhyb3cic2V0QWxnQW5kUHJvdmlkZXIgaGFzaCBhbGcgc2V0IGZhaWwgaGFzaEFsZz0iK2crIi8iK2h9dGhpcy51cGRhdGVTdHJpbmc9ZnVuY3Rpb24obCl7dGhpcy5tYWMudXBkYXRlKGwpfTt0aGlzLnVwZGF0ZUhleD1mdW5jdGlvbihsKXt2YXIgbT1DcnlwdG9KUy5lbmMuSGV4LnBhcnNlKGwpO3RoaXMubWFjLnVwZGF0ZShtKX07dGhpcy5kb0ZpbmFsPWZ1bmN0aW9uKCl7dmFyIGw9dGhpcy5tYWMuZmluYWxpemUoKTtyZXR1cm4gbC50b1N0cmluZyhDcnlwdG9KUy5lbmMuSGV4KX07dGhpcy5kb0ZpbmFsU3RyaW5nPWZ1bmN0aW9uKGwpe3RoaXMudXBkYXRlU3RyaW5nKGwpO3JldHVybiB0aGlzLmRvRmluYWwoKX07dGhpcy5kb0ZpbmFsSGV4PWZ1bmN0aW9uKGwpe3RoaXMudXBkYXRlSGV4KGwpO3JldHVybiB0aGlzLmRvRmluYWwoKX19fTt0aGlzLnVwZGF0ZVN0cmluZz1mdW5jdGlvbihnKXt0aHJvdyJ1cGRhdGVTdHJpbmcoc3RyKSBub3Qgc3VwcG9ydGVkIGZvciB0aGlzIGFsZy9wcm92OiAiK3RoaXMuYWxnUHJvdn07dGhpcy51cGRhdGVIZXg9ZnVuY3Rpb24oZyl7dGhyb3cidXBkYXRlSGV4KGhleCkgbm90IHN1cHBvcnRlZCBmb3IgdGhpcyBhbGcvcHJvdjogIit0aGlzLmFsZ1Byb3Z9O3RoaXMuZG9GaW5hbD1mdW5jdGlvbigpe3Rocm93ImRpZ2VzdCgpIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgYWxnL3Byb3Y6ICIrdGhpcy5hbGdQcm92fTt0aGlzLmRvRmluYWxTdHJpbmc9ZnVuY3Rpb24oZyl7dGhyb3ciZGlnZXN0U3RyaW5nKHN0cikgbm90IHN1cHBvcnRlZCBmb3IgdGhpcyBhbGcvcHJvdjogIit0aGlzLmFsZ1Byb3Z9O3RoaXMuZG9GaW5hbEhleD1mdW5jdGlvbihnKXt0aHJvdyJkaWdlc3RIZXgoaGV4KSBub3Qgc3VwcG9ydGVkIGZvciB0aGlzIGFsZy9wcm92OiAiK3RoaXMuYWxnUHJvdn07dGhpcy5zZXRQYXNzd29yZD1mdW5jdGlvbihoKXtpZih0eXBlb2YgaD09InN0cmluZyIpe3ZhciBnPWg7aWYoaC5sZW5ndGglMj09MXx8IWgubWF0Y2goL15bMC05QS1GYS1mXSskLykpe2c9cnN0cnRvaGV4KGgpfXRoaXMucGFzcz1DcnlwdG9KUy5lbmMuSGV4LnBhcnNlKGcpO3JldHVybn1pZih0eXBlb2YgaCE9Im9iamVjdCIpe3Rocm93IktKVVIuY3J5cHRvLk1hYyB1bnN1cHBvcnRlZCBwYXNzd29yZCB0eXBlOiAiK2h9dmFyIGc9bnVsbDtpZihoLmhleCE9PXVuZGVmaW5lZCl7aWYoaC5oZXgubGVuZ3RoJTIhPTB8fCFoLmhleC5tYXRjaCgvXlswLTlBLUZhLWZdKyQvKSl7dGhyb3ciTWFjOiB3cm9uZyBoZXggcGFzc3dvcmQ6ICIraC5oZXh9Zz1oLmhleH1pZihoLnV0ZjghPT11bmRlZmluZWQpe2c9dXRmOHRvaGV4KGgudXRmOCl9aWYoaC5yc3RyIT09dW5kZWZpbmVkKXtnPXJzdHJ0b2hleChoLnJzdHIpfWlmKGguYjY0IT09dW5kZWZpbmVkKXtnPWI2NHRvaGV4KGguYjY0KX1pZihoLmI2NHUhPT11bmRlZmluZWQpe2c9YjY0dXRvaGV4KGguYjY0dSl9aWYoZz09bnVsbCl7dGhyb3ciS0pVUi5jcnlwdG8uTWFjIHVuc3VwcG9ydGVkIHBhc3N3b3JkIHR5cGU6ICIraH10aGlzLnBhc3M9Q3J5cHRvSlMuZW5jLkhleC5wYXJzZShnKX07aWYoZCE9PXVuZGVmaW5lZCl7aWYoZC5wYXNzIT09dW5kZWZpbmVkKXt0aGlzLnNldFBhc3N3b3JkKGQucGFzcyl9aWYoZC5hbGchPT11bmRlZmluZWQpe3RoaXMuYWxnTmFtZT1kLmFsZztpZihkLnByb3Y9PT11bmRlZmluZWQpe3RoaXMucHJvdk5hbWU9S0pVUi5jcnlwdG8uVXRpbC5ERUZBVUxUUFJPVklERVJbdGhpcy5hbGdOYW1lXX10aGlzLnNldEFsZ0FuZFByb3ZpZGVyKHRoaXMuYWxnTmFtZSx0aGlzLnByb3ZOYW1lKX19fTtLSlVSLmNyeXB0by5TaWduYXR1cmU9ZnVuY3Rpb24obyl7dmFyIHE9bnVsbDt2YXIgbj1udWxsO3ZhciByPW51bGw7dmFyIGM9bnVsbDt2YXIgbD1udWxsO3ZhciBkPW51bGw7dmFyIGs9bnVsbDt2YXIgaD1udWxsO3ZhciBwPW51bGw7dmFyIGU9bnVsbDt2YXIgYj0tMTt2YXIgZz1udWxsO3ZhciBqPW51bGw7dmFyIGE9bnVsbDt2YXIgaT1udWxsO3ZhciBmPW51bGw7dGhpcy5fc2V0QWxnTmFtZXM9ZnVuY3Rpb24oKXtpZih0aGlzLmFsZ05hbWUubWF0Y2goL14oLispd2l0aCguKykkLykpe3RoaXMubWRBbGdOYW1lPVJlZ0V4cC4kMS50b0xvd2VyQ2FzZSgpO3RoaXMucHVia2V5QWxnTmFtZT1SZWdFeHAuJDIudG9Mb3dlckNhc2UoKX19O3RoaXMuX3plcm9QYWRkaW5nT2ZTaWduYXR1cmU9ZnVuY3Rpb24oeCx3KXt2YXIgdj0iIjt2YXIgdD13LzQteC5sZW5ndGg7Zm9yKHZhciB1PTA7dTx0O3UrKyl7dj12KyIwIn1yZXR1cm4gdit4fTt0aGlzLnNldEFsZ0FuZFByb3ZpZGVyPWZ1bmN0aW9uKHUsdCl7dGhpcy5fc2V0QWxnTmFtZXMoKTtpZih0IT0iY3J5cHRvanMvanNyc2EiKXt0aHJvdyJwcm92aWRlciBub3Qgc3VwcG9ydGVkOiAiK3R9aWYoIjptZDU6c2hhMTpzaGEyMjQ6c2hhMjU2OnNoYTM4NDpzaGE1MTI6cmlwZW1kMTYwOiIuaW5kZXhPZih0aGlzLm1kQWxnTmFtZSkhPS0xKXt0cnl7dGhpcy5tZD1uZXcgS0pVUi5jcnlwdG8uTWVzc2FnZURpZ2VzdCh7YWxnOnRoaXMubWRBbGdOYW1lfSl9Y2F0Y2gocyl7dGhyb3cic2V0QWxnQW5kUHJvdmlkZXIgaGFzaCBhbGcgc2V0IGZhaWwgYWxnPSIrdGhpcy5tZEFsZ05hbWUrIi8iK3N9dGhpcy5pbml0PWZ1bmN0aW9uKHcseCl7dmFyIHk9bnVsbDt0cnl7aWYoeD09PXVuZGVmaW5lZCl7eT1LRVlVVElMLmdldEtleSh3KX1lbHNle3k9S0VZVVRJTC5nZXRLZXkodyx4KX19Y2F0Y2godil7dGhyb3ciaW5pdCBmYWlsZWQ6Iit2fWlmKHkuaXNQcml2YXRlPT09dHJ1ZSl7dGhpcy5wcnZLZXk9eTt0aGlzLnN0YXRlPSJTSUdOIn1lbHNle2lmKHkuaXNQdWJsaWM9PT10cnVlKXt0aGlzLnB1YktleT15O3RoaXMuc3RhdGU9IlZFUklGWSJ9ZWxzZXt0aHJvdyJpbml0IGZhaWxlZC46Iit5fX19O3RoaXMuaW5pdFNpZ249ZnVuY3Rpb24odil7aWYodHlwZW9mIHYuZWNwcnZoZXg9PSJzdHJpbmciJiZ0eXBlb2Ygdi5lY2N1cnZlbmFtZT09InN0cmluZyIpe3RoaXMuZWNwcnZoZXg9di5lY3BydmhleDt0aGlzLmVjY3VydmVuYW1lPXYuZWNjdXJ2ZW5hbWV9ZWxzZXt0aGlzLnBydktleT12fXRoaXMuc3RhdGU9IlNJR04ifTt0aGlzLmluaXRWZXJpZnlCeVB1YmxpY0tleT1mdW5jdGlvbih2KXtpZih0eXBlb2Ygdi5lY3B1YmhleD09InN0cmluZyImJnR5cGVvZiB2LmVjY3VydmVuYW1lPT0ic3RyaW5nIil7dGhpcy5lY3B1YmhleD12LmVjcHViaGV4O3RoaXMuZWNjdXJ2ZW5hbWU9di5lY2N1cnZlbmFtZX1lbHNle2lmKHYgaW5zdGFuY2VvZiBLSlVSLmNyeXB0by5FQ0RTQSl7dGhpcy5wdWJLZXk9dn1lbHNle2lmKHYgaW5zdGFuY2VvZiBSU0FLZXkpe3RoaXMucHViS2V5PXZ9fX10aGlzLnN0YXRlPSJWRVJJRlkifTt0aGlzLmluaXRWZXJpZnlCeUNlcnRpZmljYXRlUEVNPWZ1bmN0aW9uKHYpe3ZhciB3PW5ldyBYNTA5KCk7dy5yZWFkQ2VydFBFTSh2KTt0aGlzLnB1YktleT13LnN1YmplY3RQdWJsaWNLZXlSU0E7dGhpcy5zdGF0ZT0iVkVSSUZZIn07dGhpcy51cGRhdGVTdHJpbmc9ZnVuY3Rpb24odil7dGhpcy5tZC51cGRhdGVTdHJpbmcodil9O3RoaXMudXBkYXRlSGV4PWZ1bmN0aW9uKHYpe3RoaXMubWQudXBkYXRlSGV4KHYpfTt0aGlzLnNpZ249ZnVuY3Rpb24oKXt0aGlzLnNIYXNoSGV4PXRoaXMubWQuZGlnZXN0KCk7aWYodHlwZW9mIHRoaXMuZWNwcnZoZXghPSJ1bmRlZmluZWQiJiZ0eXBlb2YgdGhpcy5lY2N1cnZlbmFtZSE9InVuZGVmaW5lZCIpe3ZhciB2PW5ldyBLSlVSLmNyeXB0by5FQ0RTQSh7Y3VydmU6dGhpcy5lY2N1cnZlbmFtZX0pO3RoaXMuaFNpZ249di5zaWduSGV4KHRoaXMuc0hhc2hIZXgsdGhpcy5lY3BydmhleCl9ZWxzZXtpZih0aGlzLnBydktleSBpbnN0YW5jZW9mIFJTQUtleSYmdGhpcy5wdWJrZXlBbGdOYW1lPT0icnNhYW5kbWdmMSIpe3RoaXMuaFNpZ249dGhpcy5wcnZLZXkuc2lnbldpdGhNZXNzYWdlSGFzaFBTUyh0aGlzLnNIYXNoSGV4LHRoaXMubWRBbGdOYW1lLHRoaXMucHNzU2FsdExlbil9ZWxzZXtpZih0aGlzLnBydktleSBpbnN0YW5jZW9mIFJTQUtleSYmdGhpcy5wdWJrZXlBbGdOYW1lPT0icnNhIil7dGhpcy5oU2lnbj10aGlzLnBydktleS5zaWduV2l0aE1lc3NhZ2VIYXNoKHRoaXMuc0hhc2hIZXgsdGhpcy5tZEFsZ05hbWUpfWVsc2V7aWYodGhpcy5wcnZLZXkgaW5zdGFuY2VvZiBLSlVSLmNyeXB0by5FQ0RTQSl7dGhpcy5oU2lnbj10aGlzLnBydktleS5zaWduV2l0aE1lc3NhZ2VIYXNoKHRoaXMuc0hhc2hIZXgpfWVsc2V7aWYodGhpcy5wcnZLZXkgaW5zdGFuY2VvZiBLSlVSLmNyeXB0by5EU0Epe3RoaXMuaFNpZ249dGhpcy5wcnZLZXkuc2lnbldpdGhNZXNzYWdlSGFzaCh0aGlzLnNIYXNoSGV4KX1lbHNle3Rocm93IlNpZ25hdHVyZTogdW5zdXBwb3J0ZWQgcHVibGljIGtleSBhbGc6ICIrdGhpcy5wdWJrZXlBbGdOYW1lfX19fX1yZXR1cm4gdGhpcy5oU2lnbn07dGhpcy5zaWduU3RyaW5nPWZ1bmN0aW9uKHYpe3RoaXMudXBkYXRlU3RyaW5nKHYpO3JldHVybiB0aGlzLnNpZ24oKX07dGhpcy5zaWduSGV4PWZ1bmN0aW9uKHYpe3RoaXMudXBkYXRlSGV4KHYpO3JldHVybiB0aGlzLnNpZ24oKX07dGhpcy52ZXJpZnk9ZnVuY3Rpb24odil7dGhpcy5zSGFzaEhleD10aGlzLm1kLmRpZ2VzdCgpO2lmKHR5cGVvZiB0aGlzLmVjcHViaGV4IT0idW5kZWZpbmVkIiYmdHlwZW9mIHRoaXMuZWNjdXJ2ZW5hbWUhPSJ1bmRlZmluZWQiKXt2YXIgdz1uZXcgS0pVUi5jcnlwdG8uRUNEU0Eoe2N1cnZlOnRoaXMuZWNjdXJ2ZW5hbWV9KTtyZXR1cm4gdy52ZXJpZnlIZXgodGhpcy5zSGFzaEhleCx2LHRoaXMuZWNwdWJoZXgpfWVsc2V7aWYodGhpcy5wdWJLZXkgaW5zdGFuY2VvZiBSU0FLZXkmJnRoaXMucHVia2V5QWxnTmFtZT09InJzYWFuZG1nZjEiKXtyZXR1cm4gdGhpcy5wdWJLZXkudmVyaWZ5V2l0aE1lc3NhZ2VIYXNoUFNTKHRoaXMuc0hhc2hIZXgsdix0aGlzLm1kQWxnTmFtZSx0aGlzLnBzc1NhbHRMZW4pfWVsc2V7aWYodGhpcy5wdWJLZXkgaW5zdGFuY2VvZiBSU0FLZXkmJnRoaXMucHVia2V5QWxnTmFtZT09InJzYSIpe3JldHVybiB0aGlzLnB1YktleS52ZXJpZnlXaXRoTWVzc2FnZUhhc2godGhpcy5zSGFzaEhleCx2KX1lbHNle2lmKHRoaXMucHViS2V5IGluc3RhbmNlb2YgS0pVUi5jcnlwdG8uRUNEU0Epe3JldHVybiB0aGlzLnB1YktleS52ZXJpZnlXaXRoTWVzc2FnZUhhc2godGhpcy5zSGFzaEhleCx2KX1lbHNle2lmKHRoaXMucHViS2V5IGluc3RhbmNlb2YgS0pVUi5jcnlwdG8uRFNBKXtyZXR1cm4gdGhpcy5wdWJLZXkudmVyaWZ5V2l0aE1lc3NhZ2VIYXNoKHRoaXMuc0hhc2hIZXgsdil9ZWxzZXt0aHJvdyJTaWduYXR1cmU6IHVuc3VwcG9ydGVkIHB1YmxpYyBrZXkgYWxnOiAiK3RoaXMucHVia2V5QWxnTmFtZX19fX19fX19O3RoaXMuaW5pdD1mdW5jdGlvbihzLHQpe3Rocm93ImluaXQoa2V5LCBwYXNzKSBub3Qgc3VwcG9ydGVkIGZvciB0aGlzIGFsZzpwcm92PSIrdGhpcy5hbGdQcm92TmFtZX07dGhpcy5pbml0VmVyaWZ5QnlQdWJsaWNLZXk9ZnVuY3Rpb24ocyl7dGhyb3ciaW5pdFZlcmlmeUJ5UHVibGljS2V5KHJzYVB1YktleXkpIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgYWxnOnByb3Y9Iit0aGlzLmFsZ1Byb3ZOYW1lfTt0aGlzLmluaXRWZXJpZnlCeUNlcnRpZmljYXRlUEVNPWZ1bmN0aW9uKHMpe3Rocm93ImluaXRWZXJpZnlCeUNlcnRpZmljYXRlUEVNKGNlcnRQRU0pIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgYWxnOnByb3Y9Iit0aGlzLmFsZ1Byb3ZOYW1lfTt0aGlzLmluaXRTaWduPWZ1bmN0aW9uKHMpe3Rocm93ImluaXRTaWduKHBydktleSkgbm90IHN1cHBvcnRlZCBmb3IgdGhpcyBhbGc6cHJvdj0iK3RoaXMuYWxnUHJvdk5hbWV9O3RoaXMudXBkYXRlU3RyaW5nPWZ1bmN0aW9uKHMpe3Rocm93InVwZGF0ZVN0cmluZyhzdHIpIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgYWxnOnByb3Y9Iit0aGlzLmFsZ1Byb3ZOYW1lfTt0aGlzLnVwZGF0ZUhleD1mdW5jdGlvbihzKXt0aHJvdyJ1cGRhdGVIZXgoaGV4KSBub3Qgc3VwcG9ydGVkIGZvciB0aGlzIGFsZzpwcm92PSIrdGhpcy5hbGdQcm92TmFtZX07dGhpcy5zaWduPWZ1bmN0aW9uKCl7dGhyb3cic2lnbigpIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgYWxnOnByb3Y9Iit0aGlzLmFsZ1Byb3ZOYW1lfTt0aGlzLnNpZ25TdHJpbmc9ZnVuY3Rpb24ocyl7dGhyb3ciZGlnZXN0U3RyaW5nKHN0cikgbm90IHN1cHBvcnRlZCBmb3IgdGhpcyBhbGc6cHJvdj0iK3RoaXMuYWxnUHJvdk5hbWV9O3RoaXMuc2lnbkhleD1mdW5jdGlvbihzKXt0aHJvdyJkaWdlc3RIZXgoaGV4KSBub3Qgc3VwcG9ydGVkIGZvciB0aGlzIGFsZzpwcm92PSIrdGhpcy5hbGdQcm92TmFtZX07dGhpcy52ZXJpZnk9ZnVuY3Rpb24ocyl7dGhyb3cidmVyaWZ5KGhTaWdWYWwpIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgYWxnOnByb3Y9Iit0aGlzLmFsZ1Byb3ZOYW1lfTt0aGlzLmluaXRQYXJhbXM9bztpZihvIT09dW5kZWZpbmVkKXtpZihvLmFsZyE9PXVuZGVmaW5lZCl7dGhpcy5hbGdOYW1lPW8uYWxnO2lmKG8ucHJvdj09PXVuZGVmaW5lZCl7dGhpcy5wcm92TmFtZT1LSlVSLmNyeXB0by5VdGlsLkRFRkFVTFRQUk9WSURFUlt0aGlzLmFsZ05hbWVdfWVsc2V7dGhpcy5wcm92TmFtZT1vLnByb3Z9dGhpcy5hbGdQcm92TmFtZT10aGlzLmFsZ05hbWUrIjoiK3RoaXMucHJvdk5hbWU7dGhpcy5zZXRBbGdBbmRQcm92aWRlcih0aGlzLmFsZ05hbWUsdGhpcy5wcm92TmFtZSk7dGhpcy5fc2V0QWxnTmFtZXMoKX1pZihvLnBzc3NhbHRsZW4hPT11bmRlZmluZWQpe3RoaXMucHNzU2FsdExlbj1vLnBzc3NhbHRsZW59aWYoby5wcnZrZXlwZW0hPT11bmRlZmluZWQpe2lmKG8ucHJ2a2V5cGFzIT09dW5kZWZpbmVkKXt0aHJvdyJib3RoIHBydmtleXBlbSBhbmQgcHJ2a2V5cGFzIHBhcmFtZXRlcnMgbm90IHN1cHBvcnRlZCJ9ZWxzZXt0cnl7dmFyIHE9bmV3IFJTQUtleSgpO3EucmVhZFByaXZhdGVLZXlGcm9tUEVNU3RyaW5nKG8ucHJ2a2V5cGVtKTt0aGlzLmluaXRTaWduKHEpfWNhdGNoKG0pe3Rocm93ImZhdGFsIGVycm9yIHRvIGxvYWQgcGVtIHByaXZhdGUga2V5OiAiK219fX19fTtLSlVSLmNyeXB0by5PSUQ9bmV3IGZ1bmN0aW9uKCl7dGhpcy5vaWRoZXgybmFtZT17IjJhODY0ODg2ZjcwZDAxMDEwMSI6InJzYUVuY3J5cHRpb24iLCIyYTg2NDhjZTNkMDIwMSI6ImVjUHVibGljS2V5IiwiMmE4NjQ4Y2UzODA0MDEiOiJkc2EiLCIyYTg2NDhjZTNkMDMwMTA3Ijoic2VjcDI1NnIxIiwiMmI4MTA0MDAxZiI6InNlY3AxOTJrMSIsIjJiODEwNDAwMjEiOiJzZWNwMjI0cjEiLCIyYjgxMDQwMDBhIjoic2VjcDI1NmsxIiwiMmI4MTA0MDAyMyI6InNlY3A1MjFyMSIsIjJiODEwNDAwMjIiOiJzZWNwMzg0cjEiLCIyYTg2NDhjZTM4MDQwMyI6IlNIQTF3aXRoRFNBIiwiNjA4NjQ4MDE2NTAzMDQwMzAxIjoiU0hBMjI0d2l0aERTQSIsIjYwODY0ODAxNjUwMzA0MDMwMiI6IlNIQTI1NndpdGhEU0EiLH19Ow0KLyohIGVjZHNhLW1vZGlmaWVkLTEuMC40LmpzIChjKSBTdGVwaGFuIFRob21hcywgS2VuamkgVXJ1c2hpbWEgfCBnaXRodWIuY29tL2JpdGNvaW5qcy9iaXRjb2luanMtbGliL2Jsb2IvbWFzdGVyL0xJQ0VOU0UNCiAqLw0KaWYodHlwZW9mIEtKVVI9PSJ1bmRlZmluZWQifHwhS0pVUil7S0pVUj17fX1pZih0eXBlb2YgS0pVUi5jcnlwdG89PSJ1bmRlZmluZWQifHwhS0pVUi5jcnlwdG8pe0tKVVIuY3J5cHRvPXt9fUtKVVIuY3J5cHRvLkVDRFNBPWZ1bmN0aW9uKGgpe3ZhciBlPSJzZWNwMjU2cjEiO3ZhciBnPW51bGw7dmFyIGI9bnVsbDt2YXIgZj1udWxsO3ZhciBhPW5ldyBTZWN1cmVSYW5kb20oKTt2YXIgZD1udWxsO3RoaXMudHlwZT0iRUMiO2Z1bmN0aW9uIGMocyxvLHIsbil7dmFyIGo9TWF0aC5tYXgoby5iaXRMZW5ndGgoKSxuLmJpdExlbmd0aCgpKTt2YXIgdD1zLmFkZDJEKHIpO3ZhciBxPXMuY3VydmUuZ2V0SW5maW5pdHkoKTtmb3IodmFyIHA9ai0xO3A+PTA7LS1wKXtxPXEudHdpY2UyRCgpO3Euej1CaWdJbnRlZ2VyLk9ORTtpZihvLnRlc3RCaXQocCkpe2lmKG4udGVzdEJpdChwKSl7cT1xLmFkZDJEKHQpfWVsc2V7cT1xLmFkZDJEKHMpfX1lbHNle2lmKG4udGVzdEJpdChwKSl7cT1xLmFkZDJEKHIpfX19cmV0dXJuIHF9dGhpcy5nZXRCaWdSYW5kb209ZnVuY3Rpb24oaSl7cmV0dXJuIG5ldyBCaWdJbnRlZ2VyKGkuYml0TGVuZ3RoKCksYSkubW9kKGkuc3VidHJhY3QoQmlnSW50ZWdlci5PTkUpKS5hZGQoQmlnSW50ZWdlci5PTkUpfTt0aGlzLnNldE5hbWVkQ3VydmU9ZnVuY3Rpb24oaSl7dGhpcy5lY3BhcmFtcz1LSlVSLmNyeXB0by5FQ1BhcmFtZXRlckRCLmdldEJ5TmFtZShpKTt0aGlzLnBydktleUhleD1udWxsO3RoaXMucHViS2V5SGV4PW51bGw7dGhpcy5jdXJ2ZU5hbWU9aX07dGhpcy5zZXRQcml2YXRlS2V5SGV4PWZ1bmN0aW9uKGkpe3RoaXMuaXNQcml2YXRlPXRydWU7dGhpcy5wcnZLZXlIZXg9aX07dGhpcy5zZXRQdWJsaWNLZXlIZXg9ZnVuY3Rpb24oaSl7dGhpcy5pc1B1YmxpYz10cnVlO3RoaXMucHViS2V5SGV4PWl9O3RoaXMuZ2VuZXJhdGVLZXlQYWlySGV4PWZ1bmN0aW9uKCl7dmFyIGs9dGhpcy5lY3BhcmFtcy5uO3ZhciBuPXRoaXMuZ2V0QmlnUmFuZG9tKGspO3ZhciBsPXRoaXMuZWNwYXJhbXMuRy5tdWx0aXBseShuKTt2YXIgcT1sLmdldFgoKS50b0JpZ0ludGVnZXIoKTt2YXIgbz1sLmdldFkoKS50b0JpZ0ludGVnZXIoKTt2YXIgaT10aGlzLmVjcGFyYW1zLmtleWxlbi80O3ZhciBtPSgiMDAwMDAwMDAwMCIrbi50b1N0cmluZygxNikpLnNsaWNlKC1pKTt2YXIgcj0oIjAwMDAwMDAwMDAiK3EudG9TdHJpbmcoMTYpKS5zbGljZSgtaSk7dmFyIHA9KCIwMDAwMDAwMDAwIitvLnRvU3RyaW5nKDE2KSkuc2xpY2UoLWkpO3ZhciBqPSIwNCIrcitwO3RoaXMuc2V0UHJpdmF0ZUtleUhleChtKTt0aGlzLnNldFB1YmxpY0tleUhleChqKTtyZXR1cm57ZWNwcnZoZXg6bSxlY3B1YmhleDpqfX07dGhpcy5zaWduV2l0aE1lc3NhZ2VIYXNoPWZ1bmN0aW9uKGkpe3JldHVybiB0aGlzLnNpZ25IZXgoaSx0aGlzLnBydktleUhleCl9O3RoaXMuc2lnbkhleD1mdW5jdGlvbihvLGope3ZhciB0PW5ldyBCaWdJbnRlZ2VyKGosMTYpO3ZhciBsPXRoaXMuZWNwYXJhbXMubjt2YXIgcT1uZXcgQmlnSW50ZWdlcihvLDE2KTtkb3t2YXIgbT10aGlzLmdldEJpZ1JhbmRvbShsKTt2YXIgdT10aGlzLmVjcGFyYW1zLkc7dmFyIHA9dS5tdWx0aXBseShtKTt2YXIgaT1wLmdldFgoKS50b0JpZ0ludGVnZXIoKS5tb2QobCl9d2hpbGUoaS5jb21wYXJlVG8oQmlnSW50ZWdlci5aRVJPKTw9MCk7dmFyIHY9bS5tb2RJbnZlcnNlKGwpLm11bHRpcGx5KHEuYWRkKHQubXVsdGlwbHkoaSkpKS5tb2QobCk7cmV0dXJuIEtKVVIuY3J5cHRvLkVDRFNBLmJpUlNTaWdUb0FTTjFTaWcoaSx2KX07dGhpcy5zaWduPWZ1bmN0aW9uKG0sdSl7dmFyIHE9dTt2YXIgaj10aGlzLmVjcGFyYW1zLm47dmFyIHA9QmlnSW50ZWdlci5mcm9tQnl0ZUFycmF5VW5zaWduZWQobSk7ZG97dmFyIGw9dGhpcy5nZXRCaWdSYW5kb20oaik7dmFyIHQ9dGhpcy5lY3BhcmFtcy5HO3ZhciBvPXQubXVsdGlwbHkobCk7dmFyIGk9by5nZXRYKCkudG9CaWdJbnRlZ2VyKCkubW9kKGopfXdoaWxlKGkuY29tcGFyZVRvKEJpZ0ludGVnZXIuWkVSTyk8PTApO3ZhciB2PWwubW9kSW52ZXJzZShqKS5tdWx0aXBseShwLmFkZChxLm11bHRpcGx5KGkpKSkubW9kKGopO3JldHVybiB0aGlzLnNlcmlhbGl6ZVNpZyhpLHYpfTt0aGlzLnZlcmlmeVdpdGhNZXNzYWdlSGFzaD1mdW5jdGlvbihqLGkpe3JldHVybiB0aGlzLnZlcmlmeUhleChqLGksdGhpcy5wdWJLZXlIZXgpfTt0aGlzLnZlcmlmeUhleD1mdW5jdGlvbihtLGkscCl7dmFyIGwsajt2YXIgbz1LSlVSLmNyeXB0by5FQ0RTQS5wYXJzZVNpZ0hleChpKTtsPW8ucjtqPW8uczt2YXIgaztrPUVDUG9pbnRGcC5kZWNvZGVGcm9tSGV4KHRoaXMuZWNwYXJhbXMuY3VydmUscCk7dmFyIG49bmV3IEJpZ0ludGVnZXIobSwxNik7cmV0dXJuIHRoaXMudmVyaWZ5UmF3KG4sbCxqLGspfTt0aGlzLnZlcmlmeT1mdW5jdGlvbihvLHAsail7dmFyIGwsaTtpZihCaXRjb2luLlV0aWwuaXNBcnJheShwKSl7dmFyIG49dGhpcy5wYXJzZVNpZyhwKTtsPW4ucjtpPW4uc31lbHNle2lmKCJvYmplY3QiPT09dHlwZW9mIHAmJnAuciYmcC5zKXtsPXAucjtpPXAuc31lbHNle3Rocm93IkludmFsaWQgdmFsdWUgZm9yIHNpZ25hdHVyZSJ9fXZhciBrO2lmKGogaW5zdGFuY2VvZiBFQ1BvaW50RnApe2s9an1lbHNle2lmKEJpdGNvaW4uVXRpbC5pc0FycmF5KGopKXtrPUVDUG9pbnRGcC5kZWNvZGVGcm9tKHRoaXMuZWNwYXJhbXMuY3VydmUsail9ZWxzZXt0aHJvdyJJbnZhbGlkIGZvcm1hdCBmb3IgcHVia2V5IHZhbHVlLCBtdXN0IGJlIGJ5dGUgYXJyYXkgb3IgRUNQb2ludEZwIn19dmFyIG09QmlnSW50ZWdlci5mcm9tQnl0ZUFycmF5VW5zaWduZWQobyk7cmV0dXJuIHRoaXMudmVyaWZ5UmF3KG0sbCxpLGspfTt0aGlzLnZlcmlmeVJhdz1mdW5jdGlvbihvLGksdyxtKXt2YXIgbD10aGlzLmVjcGFyYW1zLm47dmFyIHU9dGhpcy5lY3BhcmFtcy5HO2lmKGkuY29tcGFyZVRvKEJpZ0ludGVnZXIuT05FKTwwfHxpLmNvbXBhcmVUbyhsKT49MCl7cmV0dXJuIGZhbHNlfWlmKHcuY29tcGFyZVRvKEJpZ0ludGVnZXIuT05FKTwwfHx3LmNvbXBhcmVUbyhsKT49MCl7cmV0dXJuIGZhbHNlfXZhciBwPXcubW9kSW52ZXJzZShsKTt2YXIgaz1vLm11bHRpcGx5KHApLm1vZChsKTt2YXIgaj1pLm11bHRpcGx5KHApLm1vZChsKTt2YXIgcT11Lm11bHRpcGx5KGspLmFkZChtLm11bHRpcGx5KGopKTt2YXIgdD1xLmdldFgoKS50b0JpZ0ludGVnZXIoKS5tb2QobCk7cmV0dXJuIHQuZXF1YWxzKGkpfTt0aGlzLnNlcmlhbGl6ZVNpZz1mdW5jdGlvbihrLGope3ZhciBsPWsudG9CeXRlQXJyYXlTaWduZWQoKTt2YXIgaT1qLnRvQnl0ZUFycmF5U2lnbmVkKCk7dmFyIG09W107bS5wdXNoKDIpO20ucHVzaChsLmxlbmd0aCk7bT1tLmNvbmNhdChsKTttLnB1c2goMik7bS5wdXNoKGkubGVuZ3RoKTttPW0uY29uY2F0KGkpO20udW5zaGlmdChtLmxlbmd0aCk7bS51bnNoaWZ0KDQ4KTtyZXR1cm4gbX07dGhpcy5wYXJzZVNpZz1mdW5jdGlvbihuKXt2YXIgbTtpZihuWzBdIT00OCl7dGhyb3cgbmV3IEVycm9yKCJTaWduYXR1cmUgbm90IGEgdmFsaWQgREVSU2VxdWVuY2UiKX1tPTI7aWYoblttXSE9Mil7dGhyb3cgbmV3IEVycm9yKCJGaXJzdCBlbGVtZW50IGluIHNpZ25hdHVyZSBtdXN0IGJlIGEgREVSSW50ZWdlciIpfXZhciBsPW4uc2xpY2UobSsyLG0rMituW20rMV0pO20rPTIrblttKzFdO2lmKG5bbV0hPTIpe3Rocm93IG5ldyBFcnJvcigiU2Vjb25kIGVsZW1lbnQgaW4gc2lnbmF0dXJlIG11c3QgYmUgYSBERVJJbnRlZ2VyIil9dmFyIGk9bi5zbGljZShtKzIsbSsyK25bbSsxXSk7bSs9MituW20rMV07dmFyIGs9QmlnSW50ZWdlci5mcm9tQnl0ZUFycmF5VW5zaWduZWQobCk7dmFyIGo9QmlnSW50ZWdlci5mcm9tQnl0ZUFycmF5VW5zaWduZWQoaSk7cmV0dXJue3I6ayxzOmp9fTt0aGlzLnBhcnNlU2lnQ29tcGFjdD1mdW5jdGlvbihtKXtpZihtLmxlbmd0aCE9PTY1KXt0aHJvdyJTaWduYXR1cmUgaGFzIHRoZSB3cm9uZyBsZW5ndGgifXZhciBqPW1bMF0tMjc7aWYoajwwfHxqPjcpe3Rocm93IkludmFsaWQgc2lnbmF0dXJlIHR5cGUifXZhciBvPXRoaXMuZWNwYXJhbXMubjt2YXIgbD1CaWdJbnRlZ2VyLmZyb21CeXRlQXJyYXlVbnNpZ25lZChtLnNsaWNlKDEsMzMpKS5tb2Qobyk7dmFyIGs9QmlnSW50ZWdlci5mcm9tQnl0ZUFycmF5VW5zaWduZWQobS5zbGljZSgzMyw2NSkpLm1vZChvKTtyZXR1cm57cjpsLHM6ayxpOmp9fTtpZihoIT09dW5kZWZpbmVkKXtpZihoLmN1cnZlIT09dW5kZWZpbmVkKXt0aGlzLmN1cnZlTmFtZT1oLmN1cnZlfX1pZih0aGlzLmN1cnZlTmFtZT09PXVuZGVmaW5lZCl7dGhpcy5jdXJ2ZU5hbWU9ZX10aGlzLnNldE5hbWVkQ3VydmUodGhpcy5jdXJ2ZU5hbWUpO2lmKGghPT11bmRlZmluZWQpe2lmKGgucHJ2IT09dW5kZWZpbmVkKXt0aGlzLnNldFByaXZhdGVLZXlIZXgoaC5wcnYpfWlmKGgucHViIT09dW5kZWZpbmVkKXt0aGlzLnNldFB1YmxpY0tleUhleChoLnB1Yil9fX07S0pVUi5jcnlwdG8uRUNEU0EucGFyc2VTaWdIZXg9ZnVuY3Rpb24oYSl7dmFyIGI9S0pVUi5jcnlwdG8uRUNEU0EucGFyc2VTaWdIZXhJbkhleFJTKGEpO3ZhciBkPW5ldyBCaWdJbnRlZ2VyKGIuciwxNik7dmFyIGM9bmV3IEJpZ0ludGVnZXIoYi5zLDE2KTtyZXR1cm57cjpkLHM6Y319O0tKVVIuY3J5cHRvLkVDRFNBLnBhcnNlU2lnSGV4SW5IZXhSUz1mdW5jdGlvbihjKXtpZihjLnN1YnN0cigwLDIpIT0iMzAiKXt0aHJvdyJzaWduYXR1cmUgaXMgbm90IGEgQVNOLjEgc2VxdWVuY2UifXZhciBiPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKGMsMCk7aWYoYi5sZW5ndGghPTIpe3Rocm93Im51bWJlciBvZiBzaWduYXR1cmUgQVNOLjEgc2VxdWVuY2UgZWxlbWVudHMgc2VlbSB3cm9uZyJ9dmFyIGc9YlswXTt2YXIgZj1iWzFdO2lmKGMuc3Vic3RyKGcsMikhPSIwMiIpe3Rocm93IjFzdCBpdGVtIG9mIHNlcXVlbmUgb2Ygc2lnbmF0dXJlIGlzIG5vdCBBU04uMSBpbnRlZ2VyIn1pZihjLnN1YnN0cihmLDIpIT0iMDIiKXt0aHJvdyIybmQgaXRlbSBvZiBzZXF1ZW5lIG9mIHNpZ25hdHVyZSBpcyBub3QgQVNOLjEgaW50ZWdlciJ9dmFyIGU9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooYyxnKTt2YXIgZD1BU04xSEVYLmdldEhleE9mVl9BdE9iaihjLGYpO3JldHVybntyOmUsczpkfX07S0pVUi5jcnlwdG8uRUNEU0EuYXNuMVNpZ1RvQ29uY2F0U2lnPWZ1bmN0aW9uKGMpe3ZhciBkPUtKVVIuY3J5cHRvLkVDRFNBLnBhcnNlU2lnSGV4SW5IZXhSUyhjKTt2YXIgYj1kLnI7dmFyIGE9ZC5zO2lmKGIuc3Vic3RyKDAsMik9PSIwMCImJigoKGIubGVuZ3RoLzIpKjgpJSgxNio4KSk9PTgpe2I9Yi5zdWJzdHIoMil9aWYoYS5zdWJzdHIoMCwyKT09IjAwIiYmKCgoYS5sZW5ndGgvMikqOCklKDE2KjgpKT09OCl7YT1hLnN1YnN0cigyKX1pZigoKChiLmxlbmd0aC8yKSo4KSUoMTYqOCkpIT0wKXt0aHJvdyJ1bmtub3duIEVDRFNBIHNpZyByIGxlbmd0aCBlcnJvciJ9aWYoKCgoYS5sZW5ndGgvMikqOCklKDE2KjgpKSE9MCl7dGhyb3cidW5rbm93biBFQ0RTQSBzaWcgcyBsZW5ndGggZXJyb3IifXJldHVybiBiK2F9O0tKVVIuY3J5cHRvLkVDRFNBLmNvbmNhdFNpZ1RvQVNOMVNpZz1mdW5jdGlvbihhKXtpZigoKChhLmxlbmd0aC8yKSo4KSUoMTYqOCkpIT0wKXt0aHJvdyJ1bmtub3duIEVDRFNBIGNvbmNhdGluYXRlZCByLXMgc2lnICBsZW5ndGggZXJyb3IifXZhciBjPWEuc3Vic3RyKDAsYS5sZW5ndGgvMik7dmFyIGI9YS5zdWJzdHIoYS5sZW5ndGgvMik7cmV0dXJuIEtKVVIuY3J5cHRvLkVDRFNBLmhleFJTU2lnVG9BU04xU2lnKGMsYil9O0tKVVIuY3J5cHRvLkVDRFNBLmhleFJTU2lnVG9BU04xU2lnPWZ1bmN0aW9uKGIsYSl7dmFyIGQ9bmV3IEJpZ0ludGVnZXIoYiwxNik7dmFyIGM9bmV3IEJpZ0ludGVnZXIoYSwxNik7cmV0dXJuIEtKVVIuY3J5cHRvLkVDRFNBLmJpUlNTaWdUb0FTTjFTaWcoZCxjKX07S0pVUi5jcnlwdG8uRUNEU0EuYmlSU1NpZ1RvQVNOMVNpZz1mdW5jdGlvbihlLGMpe3ZhciBiPW5ldyBLSlVSLmFzbjEuREVSSW50ZWdlcih7YmlnaW50OmV9KTt2YXIgYT1uZXcgS0pVUi5hc24xLkRFUkludGVnZXIoe2JpZ2ludDpjfSk7dmFyIGQ9bmV3IEtKVVIuYXNuMS5ERVJTZXF1ZW5jZSh7YXJyYXk6W2IsYV19KTtyZXR1cm4gZC5nZXRFbmNvZGVkSGV4KCl9Ow0KLyohIGVjcGFyYW0tMS4wLjAuanMgKGMpIDIwMTMgS2VuamkgVXJ1c2hpbWEgfCBranVyLmdpdGh1Yi5jb20vanNyc2FzaWduL2xpY2Vuc2UNCiAqLw0KaWYodHlwZW9mIEtKVVI9PSJ1bmRlZmluZWQifHwhS0pVUil7S0pVUj17fX1pZih0eXBlb2YgS0pVUi5jcnlwdG89PSJ1bmRlZmluZWQifHwhS0pVUi5jcnlwdG8pe0tKVVIuY3J5cHRvPXt9fUtKVVIuY3J5cHRvLkVDUGFyYW1ldGVyREI9bmV3IGZ1bmN0aW9uKCl7dmFyIGI9e307dmFyIGM9e307ZnVuY3Rpb24gYShkKXtyZXR1cm4gbmV3IEJpZ0ludGVnZXIoZCwxNil9dGhpcy5nZXRCeU5hbWU9ZnVuY3Rpb24oZSl7dmFyIGQ9ZTtpZih0eXBlb2YgY1tkXSE9InVuZGVmaW5lZCIpe2Q9Y1tlXX1pZih0eXBlb2YgYltkXSE9InVuZGVmaW5lZCIpe3JldHVybiBiW2RdfXRocm93InVucmVnaXN0ZXJlZCBFQyBjdXJ2ZSBuYW1lOiAiK2R9O3RoaXMucmVnaXN0PWZ1bmN0aW9uKEEsbCxvLGcsbSxlLGosZixrLHUsZCx4KXtiW0FdPXt9O3ZhciBzPWEobyk7dmFyIHo9YShnKTt2YXIgeT1hKG0pO3ZhciB0PWEoZSk7dmFyIHc9YShqKTt2YXIgcj1uZXcgRUNDdXJ2ZUZwKHMseix5KTt2YXIgcT1yLmRlY29kZVBvaW50SGV4KCIwNCIrZitrKTtiW0FdWyJuYW1lIl09QTtiW0FdWyJrZXlsZW4iXT1sO2JbQV1bImN1cnZlIl09cjtiW0FdWyJHIl09cTtiW0FdWyJuIl09dDtiW0FdWyJoIl09dztiW0FdWyJvaWQiXT1kO2JbQV1bImluZm8iXT14O2Zvcih2YXIgdj0wO3Y8dS5sZW5ndGg7disrKXtjW3Vbdl1dPUF9fX07S0pVUi5jcnlwdG8uRUNQYXJhbWV0ZXJEQi5yZWdpc3QoInNlY3AxMjhyMSIsMTI4LCJGRkZGRkZGREZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRiIsIkZGRkZGRkZERkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZDIiwiRTg3NTc5QzExMDc5RjQzREQ4MjQ5OTNDMkNFRTVFRDMiLCJGRkZGRkZGRTAwMDAwMDAwNzVBMzBEMUI5MDM4QTExNSIsIjEiLCIxNjFGRjc1MjhCODk5QjJEMEMyODYwN0NBNTJDNUI4NiIsIkNGNUFDODM5NUJBRkVCMTNDMDJEQTI5MkRERUQ3QTgzIixbXSwiIiwic2VjcDEyOHIxIDogU0VDRyBjdXJ2ZSBvdmVyIGEgMTI4IGJpdCBwcmltZSBmaWVsZCIpO0tKVVIuY3J5cHRvLkVDUGFyYW1ldGVyREIucmVnaXN0KCJzZWNwMTYwazEiLDE2MCwiRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkVGRkZGQUM3MyIsIjAiLCI3IiwiMDEwMDAwMDAwMDAwMDAwMDAwMDAwMUI4RkExNkRGQUI5QUNBMTZCNkIzIiwiMSIsIjNCNEMzODJDRTM3QUExOTJBNDAxOUU3NjMwMzZGNEY1REQ0RDdFQkIiLCI5MzhDRjkzNTMxOEZEQ0VENkJDMjgyODY1MzE3MzNDM0YwM0M0RkVFIixbXSwiIiwic2VjcDE2MGsxIDogU0VDRyBjdXJ2ZSBvdmVyIGEgMTYwIGJpdCBwcmltZSBmaWVsZCIpO0tKVVIuY3J5cHRvLkVDUGFyYW1ldGVyREIucmVnaXN0KCJzZWNwMTYwcjEiLDE2MCwiRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkY3RkZGRkZGRiIsIkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGN0ZGRkZGRkMiLCIxQzk3QkVGQzU0QkQ3QThCNjVBQ0Y4OUY4MUQ0RDRBREM1NjVGQTQ1IiwiMDEwMDAwMDAwMDAwMDAwMDAwMDAwMUY0QzhGOTI3QUVEM0NBNzUyMjU3IiwiMSIsIjRBOTZCNTY4OEVGNTczMjg0NjY0Njk4OTY4QzM4QkI5MTNDQkZDODIiLCIyM0E2Mjg1NTMxNjg5NDdENTlEQ0M5MTIwNDIzNTEzNzdBQzVGQjMyIixbXSwiIiwic2VjcDE2MHIxIDogU0VDRyBjdXJ2ZSBvdmVyIGEgMTYwIGJpdCBwcmltZSBmaWVsZCIpO0tKVVIuY3J5cHRvLkVDUGFyYW1ldGVyREIucmVnaXN0KCJzZWNwMTkyazEiLDE5MiwiRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRUZGRkZFRTM3IiwiMCIsIjMiLCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkUyNkYyRkMxNzBGNjk0NjZBNzRERUZEOEQiLCIxIiwiREI0RkYxMEVDMDU3RTlBRTI2QjA3RDAyODBCN0Y0MzQxREE1RDFCMUVBRTA2QzdEIiwiOUIyRjJGNkQ5QzU2MjhBNzg0NDE2M0QwMTVCRTg2MzQ0MDgyQUE4OEQ5NUUyRjlEIixbXSk7S0pVUi5jcnlwdG8uRUNQYXJhbWV0ZXJEQi5yZWdpc3QoInNlY3AxOTJyMSIsMTkyLCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRUZGRkZGRkZGRkZGRkZGRkYiLCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRUZGRkZGRkZGRkZGRkZGRkMiLCI2NDIxMDUxOUU1OUM4MEU3MEZBN0U5QUI3MjI0MzA0OUZFQjhERUVDQzE0NkI5QjEiLCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkY5OURFRjgzNjE0NkJDOUIxQjREMjI4MzEiLCIxIiwiMTg4REE4MEVCMDMwOTBGNjdDQkYyMEVCNDNBMTg4MDBGNEZGMEFGRDgyRkYxMDEyIiwiMDcxOTJCOTVGRkM4REE3ODYzMTAxMUVENkIyNENERDU3M0Y5NzdBMTFFNzk0ODExIixbXSk7S0pVUi5jcnlwdG8uRUNQYXJhbWV0ZXJEQi5yZWdpc3QoInNlY3AyMjRyMSIsMjI0LCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsIkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZFRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZFIiwiQjQwNTBBODUwQzA0QjNBQkY1NDEzMjU2NTA0NEIwQjdEN0JGRDhCQTI3MEIzOTQzMjM1NUZGQjQiLCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGMTZBMkUwQjhGMDNFMTNERDI5NDU1QzVDMkEzRCIsIjEiLCJCNzBFMENCRDZCQjRCRjdGMzIxMzkwQjk0QTAzQzFEMzU2QzIxMTIyMzQzMjgwRDYxMTVDMUQyMSIsIkJEMzc2Mzg4QjVGNzIzRkI0QzIyREZFNkNENDM3NUEwNUEwNzQ3NjQ0NEQ1ODE5OTg1MDA3RTM0IixbXSk7S0pVUi5jcnlwdG8uRUNQYXJhbWV0ZXJEQi5yZWdpc3QoInNlY3AyNTZrMSIsMjU2LCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRUZGRkZGQzJGIiwiMCIsIjciLCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRUJBQUVEQ0U2QUY0OEEwM0JCRkQyNUU4Q0QwMzY0MTQxIiwiMSIsIjc5QkU2NjdFRjlEQ0JCQUM1NUEwNjI5NUNFODcwQjA3MDI5QkZDREIyRENFMjhEOTU5RjI4MTVCMTZGODE3OTgiLCI0ODNBREE3NzI2QTNDNDY1NURBNEZCRkMwRTExMDhBOEZEMTdCNDQ4QTY4NTU0MTk5QzQ3RDA4RkZCMTBENEI4IixbXSk7S0pVUi5jcnlwdG8uRUNQYXJhbWV0ZXJEQi5yZWdpc3QoInNlY3AyNTZyMSIsMjU2LCJGRkZGRkZGRjAwMDAwMDAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGIiwiRkZGRkZGRkYwMDAwMDAwMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQyIsIjVBQzYzNUQ4QUEzQTkzRTdCM0VCQkQ1NTc2OTg4NkJDNjUxRDA2QjBDQzUzQjBGNjNCQ0UzQzNFMjdEMjYwNEIiLCJGRkZGRkZGRjAwMDAwMDAwRkZGRkZGRkZGRkZGRkZGRkJDRTZGQUFEQTcxNzlFODRGM0I5Q0FDMkZDNjMyNTUxIiwiMSIsIjZCMTdEMUYyRTEyQzQyNDdGOEJDRTZFNTYzQTQ0MEYyNzcwMzdEODEyREVCMzNBMEY0QTEzOTQ1RDg5OEMyOTYiLCI0RkUzNDJFMkZFMUE3RjlCOEVFN0VCNEE3QzBGOUUxNjJCQ0UzMzU3NkIzMTVFQ0VDQkI2NDA2ODM3QkY1MUY1IixbIk5JU1QgUC0yNTYiLCJQLTI1NiIsInByaW1lMjU2djEiXSk7S0pVUi5jcnlwdG8uRUNQYXJhbWV0ZXJEQi5yZWdpc3QoInNlY3AzODRyMSIsMzg0LCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZFRkZGRkZGRkYwMDAwMDAwMDAwMDAwMDAwRkZGRkZGRkYiLCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZFRkZGRkZGRkYwMDAwMDAwMDAwMDAwMDAwRkZGRkZGRkMiLCJCMzMxMkZBN0UyM0VFN0U0OTg4RTA1NkJFM0Y4MkQxOTE4MUQ5QzZFRkU4MTQxMTIwMzE0MDg4RjUwMTM4NzVBQzY1NjM5OEQ4QTJFRDE5RDJBODVDOEVERDNFQzJBRUYiLCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZDNzYzNEQ4MUY0MzcyRERGNTgxQTBEQjI0OEIwQTc3QUVDRUMxOTZBQ0NDNTI5NzMiLCIxIiwiQUE4N0NBMjJCRThCMDUzNzhFQjFDNzFFRjMyMEFENzQ2RTFEM0I2MjhCQTc5Qjk4NTlGNzQxRTA4MjU0MkEzODU1MDJGMjVEQkY1NTI5NkMzQTU0NUUzODcyNzYwQUI3IiwiMzYxN2RlNGE5NjI2MmM2ZjVkOWU5OGJmOTI5MmRjMjlmOGY0MWRiZDI4OWExNDdjZTlkYTMxMTNiNWYwYjhjMDBhNjBiMWNlMWQ3ZTgxOWQ3YTQzMWQ3YzkwZWEwZTVmIixbIk5JU1QgUC0zODQiLCJQLTM4NCJdKTtLSlVSLmNyeXB0by5FQ1BhcmFtZXRlckRCLnJlZ2lzdCgic2VjcDUyMXIxIiw1MjEsIjFGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGIiwiMUZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkMiLCIwNTE5NTNFQjk2MThFMUM5QTFGOTI5QTIxQTBCNjg1NDBFRUEyREE3MjVCOTlCMzE1RjNCOEI0ODk5MThFRjEwOUUxNTYxOTM5NTFFQzdFOTM3QjE2NTJDMEJEM0JCMUJGMDczNTczREY4ODNEMkMzNEYxRUY0NTFGRDQ2QjUwM0YwMCIsIjFGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkE1MTg2ODc4M0JGMkY5NjZCN0ZDQzAxNDhGNzA5QTVEMDNCQjVDOUI4ODk5QzQ3QUVCQjZGQjcxRTkxMzg2NDA5IiwiMSIsIkM2ODU4RTA2QjcwNDA0RTlDRDlFM0VDQjY2MjM5NUI0NDI5QzY0ODEzOTA1M0ZCNTIxRjgyOEFGNjA2QjREM0RCQUExNEI1RTc3RUZFNzU5MjhGRTFEQzEyN0EyRkZBOERFMzM0OEIzQzE4NTZBNDI5QkY5N0U3RTMxQzJFNUJENjYiLCIwMTE4MzkyOTZhNzg5YTNiYzAwNDVjOGE1ZmI0MmM3ZDFiZDk5OGY1NDQ0OTU3OWI0NDY4MTdhZmJkMTcyNzNlNjYyYzk3ZWU3Mjk5NWVmNDI2NDBjNTUwYjkwMTNmYWQwNzYxMzUzYzcwODZhMjcyYzI0MDg4YmU5NDc2OWZkMTY2NTAiLFsiTklTVCBQLTUyMSIsIlAtNTIxIl0pOw0KLyohIGRzYS1tb2RpZmllZC0xLjAuMS5qcyAoYykgUmVjdXJpdHkgTGFicyBHbWJILCBLZW5qaSBVcnVzaGltbWEgfCBnaXRodWIuY29tL29wZW5wZ3Bqcy9vcGVucGdwanMvYmxvYi9tYXN0ZXIvTElDRU5TRQ0KICovDQppZih0eXBlb2YgS0pVUj09InVuZGVmaW5lZCJ8fCFLSlVSKXtLSlVSPXt9fWlmKHR5cGVvZiBLSlVSLmNyeXB0bz09InVuZGVmaW5lZCJ8fCFLSlVSLmNyeXB0byl7S0pVUi5jcnlwdG89e319S0pVUi5jcnlwdG8uRFNBPWZ1bmN0aW9uKCl7dGhpcy5wPW51bGw7dGhpcy5xPW51bGw7dGhpcy5nPW51bGw7dGhpcy55PW51bGw7dGhpcy54PW51bGw7dGhpcy50eXBlPSJEU0EiO3RoaXMuc2V0UHJpdmF0ZT1mdW5jdGlvbih6LHcsdixBLHUpe3RoaXMuaXNQcml2YXRlPXRydWU7dGhpcy5wPXo7dGhpcy5xPXc7dGhpcy5nPXY7dGhpcy55PUE7dGhpcy54PXV9O3RoaXMuc2V0UHVibGljPWZ1bmN0aW9uKHcsdix1LHope3RoaXMuaXNQdWJsaWM9dHJ1ZTt0aGlzLnA9dzt0aGlzLnE9djt0aGlzLmc9dTt0aGlzLnk9ejt0aGlzLng9bnVsbH07dGhpcy5zaWduV2l0aE1lc3NhZ2VIYXNoPWZ1bmN0aW9uKHope3ZhciB2PXRoaXMucDt2YXIgdT10aGlzLnE7dmFyIEM9dGhpcy5nO3ZhciBEPXRoaXMueTt2YXIgRT10aGlzLng7dmFyIEE9ei5zdWJzdHIoMCx1LmJpdExlbmd0aCgpLzQpO3ZhciBCPW5ldyBCaWdJbnRlZ2VyKHosMTYpO3ZhciB3PW4oQmlnSW50ZWdlci5PTkUuYWRkKEJpZ0ludGVnZXIuT05FKSx1LnN1YnRyYWN0KEJpZ0ludGVnZXIuT05FKSk7dmFyIEc9KEMubW9kUG93KHcsdikpLm1vZCh1KTt2YXIgRj0ody5tb2RJbnZlcnNlKHUpLm11bHRpcGx5KEIuYWRkKEUubXVsdGlwbHkoRykpKSkubW9kKHUpO3ZhciBIPUtKVVIuYXNuMS5BU04xVXRpbC5qc29uVG9BU04xSEVYKHtzZXE6W3siaW50Ijp7YmlnaW50Okd9fSx7ImludCI6e2JpZ2ludDpGfX1dfSk7cmV0dXJuIEh9O3RoaXMudmVyaWZ5V2l0aE1lc3NhZ2VIYXNoPWZ1bmN0aW9uKEMsQil7dmFyIHo9dGhpcy5wO3ZhciB1PXRoaXMucTt2YXIgRz10aGlzLmc7dmFyIEg9dGhpcy55O3ZhciBFPXRoaXMucGFyc2VBU04xU2lnbmF0dXJlKEIpO3ZhciBLPUVbMF07dmFyIEo9RVsxXTt2YXIgQz1DLnN1YnN0cigwLHUuYml0TGVuZ3RoKCkvNCk7dmFyIEQ9bmV3IEJpZ0ludGVnZXIoQywxNik7aWYoQmlnSW50ZWdlci5aRVJPLmNvbXBhcmVUbyhLKT4wfHxLLmNvbXBhcmVUbyh1KT4wfHxCaWdJbnRlZ2VyLlpFUk8uY29tcGFyZVRvKEopPjB8fEouY29tcGFyZVRvKHUpPjApe3Rocm93ImludmFsaWQgRFNBIHNpZ25hdHVyZSJ9dmFyIEk9Si5tb2RJbnZlcnNlKHUpO3ZhciBBPUQubXVsdGlwbHkoSSkubW9kKHUpO3ZhciB2PUsubXVsdGlwbHkoSSkubW9kKHUpO3ZhciBGPUcubW9kUG93KEEseikubXVsdGlwbHkoSC5tb2RQb3codix6KSkubW9kKHopLm1vZCh1KTtyZXR1cm4gRi5jb21wYXJlVG8oSyk9PTB9O3RoaXMucGFyc2VBU04xU2lnbmF0dXJlPWZ1bmN0aW9uKHUpe3RyeXt2YXIgeT1uZXcgQmlnSW50ZWdlcihBU04xSEVYLmdldFZieUxpc3QodSwwLFswXSwiMDIiKSwxNik7dmFyIHY9bmV3IEJpZ0ludGVnZXIoQVNOMUhFWC5nZXRWYnlMaXN0KHUsMCxbMV0sIjAyIiksMTYpO3JldHVyblt5LHZdfWNhdGNoKHcpe3Rocm93Im1hbGZvcm1lZCBEU0Egc2lnbmF0dXJlIn19O2Z1bmN0aW9uIGQoRSx3LEIsdix1LEMpe3ZhciB6PUtKVVIuY3J5cHRvLlV0aWwuaGFzaFN0cmluZyh3LEUudG9Mb3dlckNhc2UoKSk7dmFyIHo9ei5zdWJzdHIoMCx1LmJpdExlbmd0aCgpLzQpO3ZhciBBPW5ldyBCaWdJbnRlZ2VyKHosMTYpO3ZhciB5PW4oQmlnSW50ZWdlci5PTkUuYWRkKEJpZ0ludGVnZXIuT05FKSx1LnN1YnRyYWN0KEJpZ0ludGVnZXIuT05FKSk7dmFyIEY9KEIubW9kUG93KHksdikpLm1vZCh1KTt2YXIgRD0oeS5tb2RJbnZlcnNlKHUpLm11bHRpcGx5KEEuYWRkKEMubXVsdGlwbHkoRikpKSkubW9kKHUpO3ZhciBHPW5ldyBBcnJheSgpO0dbMF09RjtHWzFdPUQ7cmV0dXJuIEd9ZnVuY3Rpb24gcih2KXt2YXIgdT1vcGVucGdwLmNvbmZpZy5jb25maWcucHJlZmVyX2hhc2hfYWxnb3JpdGhtO3N3aXRjaChNYXRoLnJvdW5kKHYuYml0TGVuZ3RoKCkvOCkpe2Nhc2UgMjA6aWYodSE9MiYmdT4xMSYmdSE9MTAmJnU8OCl7cmV0dXJuIDJ9cmV0dXJuIHU7Y2FzZSAyODppZih1PjExJiZ1PDgpe3JldHVybiAxMX1yZXR1cm4gdTtjYXNlIDMyOmlmKHU+MTAmJnU8OCl7cmV0dXJuIDh9cmV0dXJuIHU7ZGVmYXVsdDp1dGlsLnByaW50X2RlYnVnKCJEU0Egc2VsZWN0IGhhc2ggYWxnb3JpdGhtOiByZXR1cm5pbmcgbnVsbCBmb3IgYW4gdW5rbm93biBsZW5ndGggb2YgcSIpO3JldHVybiBudWxsfX10aGlzLnNlbGVjdF9oYXNoX2FsZ29yaXRobT1yO2Z1bmN0aW9uIG0oSSxLLEosQix6LHUsRixHKXt2YXIgQz1LSlVSLmNyeXB0by5VdGlsLmhhc2hTdHJpbmcoQixJLnRvTG93ZXJDYXNlKCkpO3ZhciBDPUMuc3Vic3RyKDAsdS5iaXRMZW5ndGgoKS80KTt2YXIgRD1uZXcgQmlnSW50ZWdlcihDLDE2KTtpZihCaWdJbnRlZ2VyLlpFUk8uY29tcGFyZVRvKEspPjB8fEsuY29tcGFyZVRvKHUpPjB8fEJpZ0ludGVnZXIuWkVSTy5jb21wYXJlVG8oSik+MHx8Si5jb21wYXJlVG8odSk+MCl7dXRpbC5wcmludF9lcnJvcigiaW52YWxpZCBEU0EgU2lnbmF0dXJlIik7cmV0dXJuIG51bGx9dmFyIEg9Si5tb2RJbnZlcnNlKHUpO3ZhciBBPUQubXVsdGlwbHkoSCkubW9kKHUpO3ZhciB2PUsubXVsdGlwbHkoSCkubW9kKHUpO3ZhciBFPUYubW9kUG93KEEseikubXVsdGlwbHkoRy5tb2RQb3codix6KSkubW9kKHopLm1vZCh1KTtyZXR1cm4gRS5jb21wYXJlVG8oSyk9PTB9ZnVuY3Rpb24gYSh6KXt2YXIgQT1uZXcgQmlnSW50ZWdlcih6LHByaW1lQ2VudGVyaWUpO3ZhciB5PWoocSw1MTIpO3ZhciB1PXQocCxxLHopO3ZhciB2O2Rve3Y9bmV3IEJpZ0ludGVnZXIocS5iaXRDb3VudCgpLHJhbmQpfXdoaWxlKHguY29tcGFyZVRvKEJpZ0ludGVnZXIuWkVSTykhPTEmJnguY29tcGFyZVRvKHEpIT0tMSk7dmFyIHc9Zy5tb2RQb3coeCxwKTtyZXR1cm57eDp2LHE6QSxwOnksZzp1LHk6d319ZnVuY3Rpb24gaih5LHosdyl7aWYoeiU2NCE9MCl7cmV0dXJuIGZhbHNlfXZhciB1O3ZhciB2O2Rve3U9dyhiaXRjb3VudCx0cnVlKTt2PXUuc3VidHJhY3QoQmlnSW50ZWdlci5PTkUpO3U9dS5zdWJ0cmFjdCh2LnJlbWFpbmRlcih5KSl9d2hpbGUoIXUuaXNQcm9iYWJsZVByaW1lKHByaW1lQ2VudGVyaWUpfHx1LmJpdExlbmd0aCgpIT1sKTtyZXR1cm4gdX1mdW5jdGlvbiB0KEIseixBLHcpe3ZhciB1PUIuc3VidHJhY3QoQmlnSW50ZWdlci5PTkUpO3ZhciB5PXUuZGl2aWRlKHopO3ZhciB2O2Rve3Y9dyhBKX13aGlsZSh2LmNvbXBhcmVUbyh1KSE9LTEmJnYuY29tcGFyZVRvKEJpZ0ludGVnZXIuT05FKSE9MSk7cmV0dXJuIHYubW9kUG93KHksQil9ZnVuY3Rpb24gbyh3LHksdSl7dmFyIHY7ZG97dj11KHksZmFsc2UpfXdoaWxlKHYuY29tcGFyZVRvKHcpIT0tMSYmdi5jb21wYXJlVG8oQmlnSW50ZWdlci5aRVJPKSE9MSk7cmV0dXJuIHZ9ZnVuY3Rpb24gaSh2LHcpe2s9byh2KTt2YXIgdT1nLm1vZFBvdyhrLHcpLm1vZCh2KTtyZXR1cm4gdX1mdW5jdGlvbiBoKEIsdyx5LHYseix1KXt2YXIgQT1CKHYpO3M9KHcubW9kSW52ZXJzZSh6KS5tdWx0aXBseShBLmFkZCh1Lm11bHRpcGx5KHkpKSkpLm1vZCh6KTtyZXR1cm4gc310aGlzLnNpZ249ZDt0aGlzLnZlcmlmeT1tO2Z1bmN0aW9uIG4odyx1KXtpZih1LmNvbXBhcmVUbyh3KTw9MCl7cmV0dXJufXZhciB2PXUuc3VidHJhY3Qodyk7dmFyIHk9ZSh2LmJpdExlbmd0aCgpKTt3aGlsZSh5PnYpe3k9ZSh2LmJpdExlbmd0aCgpKX1yZXR1cm4gdy5hZGQoeSl9ZnVuY3Rpb24gZSh3KXtpZih3PDApe3JldHVybiBudWxsfXZhciB1PU1hdGguZmxvb3IoKHcrNykvOCk7dmFyIHY9Yyh1KTtpZih3JTg+MCl7dj1TdHJpbmcuZnJvbUNoYXJDb2RlKChNYXRoLnBvdygyLHclOCktMSkmdi5jaGFyQ29kZUF0KDApKSt2LnN1YnN0cmluZygxKX1yZXR1cm4gbmV3IEJpZ0ludGVnZXIoZih2KSwxNil9ZnVuY3Rpb24gYyh3KXt2YXIgdT0iIjtmb3IodmFyIHY9MDt2PHc7disrKXt1Kz1TdHJpbmcuZnJvbUNoYXJDb2RlKGIoKSl9cmV0dXJuIHV9ZnVuY3Rpb24gYigpe3ZhciB1PW5ldyBVaW50MzJBcnJheSgxKTt3aW5kb3cuY3J5cHRvLmdldFJhbmRvbVZhbHVlcyh1KTtyZXR1cm4gdVswXSYyNTV9ZnVuY3Rpb24gZih5KXtpZih5PT1udWxsKXtyZXR1cm4iIn12YXIgdj1bXTt2YXIgdz15Lmxlbmd0aDt2YXIgej0wO3ZhciB1O3doaWxlKHo8dyl7dT15W3orK10uY2hhckNvZGVBdCgpLnRvU3RyaW5nKDE2KTt3aGlsZSh1Lmxlbmd0aDwyKXt1PSIwIit1fXYucHVzaCgiIit1KX1yZXR1cm4gdi5qb2luKCIiKX10aGlzLmdldFJhbmRvbUJpZ0ludGVnZXJJblJhbmdlPW47dGhpcy5nZXRSYW5kb21CaWdJbnRlZ2VyPWU7dGhpcy5nZXRSYW5kb21CeXRlcz1jfTsNCi8qISBwa2NzNXBrZXktMS4wLjYuanMgKGMpIDIwMTMtMjAxNCBLZW5qaSBVcnVzaGltYSB8IGtqdXIuZ2l0aHViLmNvbS9qc3JzYXNpZ24vbGljZW5zZQ0KICovDQp2YXIgUEtDUzVQS0VZPWZ1bmN0aW9uKCl7dmFyIGM9ZnVuY3Rpb24obixwLG8pe3JldHVybiBpKENyeXB0b0pTLkFFUyxuLHAsbyl9O3ZhciBkPWZ1bmN0aW9uKG4scCxvKXtyZXR1cm4gaShDcnlwdG9KUy5UcmlwbGVERVMsbixwLG8pfTt2YXIgaT1mdW5jdGlvbihxLHYscyxvKXt2YXIgcD1DcnlwdG9KUy5lbmMuSGV4LnBhcnNlKHYpO3ZhciB1PUNyeXB0b0pTLmVuYy5IZXgucGFyc2Uocyk7dmFyIG49Q3J5cHRvSlMuZW5jLkhleC5wYXJzZShvKTt2YXIgcj17fTtyLmtleT11O3IuaXY9bjtyLmNpcGhlcnRleHQ9cDt2YXIgdD1xLmRlY3J5cHQocix1LHtpdjpufSk7cmV0dXJuIENyeXB0b0pTLmVuYy5IZXguc3RyaW5naWZ5KHQpfTt2YXIgaj1mdW5jdGlvbihuLHAsbyl7cmV0dXJuIGUoQ3J5cHRvSlMuQUVTLG4scCxvKX07dmFyIG09ZnVuY3Rpb24obixwLG8pe3JldHVybiBlKENyeXB0b0pTLlRyaXBsZURFUyxuLHAsbyl9O3ZhciBlPWZ1bmN0aW9uKHMseCx2LHApe3ZhciByPUNyeXB0b0pTLmVuYy5IZXgucGFyc2UoeCk7dmFyIHc9Q3J5cHRvSlMuZW5jLkhleC5wYXJzZSh2KTt2YXIgbz1DcnlwdG9KUy5lbmMuSGV4LnBhcnNlKHApO3ZhciBuPXt9O3ZhciB1PXMuZW5jcnlwdChyLHcse2l2Om99KTt2YXIgcT1DcnlwdG9KUy5lbmMuSGV4LnBhcnNlKHUudG9TdHJpbmcoKSk7dmFyIHQ9Q3J5cHRvSlMuZW5jLkJhc2U2NC5zdHJpbmdpZnkocSk7cmV0dXJuIHR9O3ZhciBnPXsiQUVTLTI1Ni1DQkMiOntwcm9jOmMsZXByb2M6aixrZXlsZW46MzIsaXZsZW46MTZ9LCJBRVMtMTkyLUNCQyI6e3Byb2M6YyxlcHJvYzpqLGtleWxlbjoyNCxpdmxlbjoxNn0sIkFFUy0xMjgtQ0JDIjp7cHJvYzpjLGVwcm9jOmosa2V5bGVuOjE2LGl2bGVuOjE2fSwiREVTLUVERTMtQ0JDIjp7cHJvYzpkLGVwcm9jOm0sa2V5bGVuOjI0LGl2bGVuOjh9fTt2YXIgYj1mdW5jdGlvbihuKXtyZXR1cm4gZ1tuXVsicHJvYyJdfTt2YXIgaz1mdW5jdGlvbihuKXt2YXIgcD1DcnlwdG9KUy5saWIuV29yZEFycmF5LnJhbmRvbShuKTt2YXIgbz1DcnlwdG9KUy5lbmMuSGV4LnN0cmluZ2lmeShwKTtyZXR1cm4gb307dmFyIGw9ZnVuY3Rpb24ocSl7dmFyIHI9e307aWYocS5tYXRjaChuZXcgUmVnRXhwKCJERUstSW5mbzogKFteLF0rKSwoWzAtOUEtRmEtZl0rKSIsIm0iKSkpe3IuY2lwaGVyPVJlZ0V4cC4kMTtyLml2c2FsdD1SZWdFeHAuJDJ9aWYocS5tYXRjaChuZXcgUmVnRXhwKCItLS0tLUJFR0lOIChbQS1aXSspIFBSSVZBVEUgS0VZLS0tLS0iKSkpe3IudHlwZT1SZWdFeHAuJDF9dmFyIHA9LTE7dmFyIHQ9MDtpZihxLmluZGV4T2YoIlxyXG5cclxuIikhPS0xKXtwPXEuaW5kZXhPZigiXHJcblxyXG4iKTt0PTJ9aWYocS5pbmRleE9mKCJcblxuIikhPS0xKXtwPXEuaW5kZXhPZigiXG5cbiIpO3Q9MX12YXIgbz1xLmluZGV4T2YoIi0tLS0tRU5EIik7aWYocCE9LTEmJm8hPS0xKXt2YXIgbj1xLnN1YnN0cmluZyhwK3QqMixvLXQpO249bi5yZXBsYWNlKC9ccysvZywiIik7ci5kYXRhPW59cmV0dXJuIHJ9O3ZhciBoPWZ1bmN0aW9uKG8sdyxuKXt2YXIgdD1uLnN1YnN0cmluZygwLDE2KTt2YXIgcj1DcnlwdG9KUy5lbmMuSGV4LnBhcnNlKHQpO3ZhciBwPUNyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKHcpO3ZhciBzPWdbb11bImtleWxlbiJdK2dbb11bIml2bGVuIl07dmFyIHY9IiI7dmFyIHU9bnVsbDtmb3IoOzspe3ZhciBxPUNyeXB0b0pTLmFsZ28uTUQ1LmNyZWF0ZSgpO2lmKHUhPW51bGwpe3EudXBkYXRlKHUpfXEudXBkYXRlKHApO3EudXBkYXRlKHIpO3U9cS5maW5hbGl6ZSgpO3Y9ditDcnlwdG9KUy5lbmMuSGV4LnN0cmluZ2lmeSh1KTtpZih2Lmxlbmd0aD49cyoyKXticmVha319dmFyIHg9e307eC5rZXloZXg9di5zdWJzdHIoMCxnW29dWyJrZXlsZW4iXSoyKTt4Lml2aGV4PXYuc3Vic3RyKGdbb11bImtleWxlbiJdKjIsZ1tvXVsiaXZsZW4iXSoyKTtyZXR1cm4geH07dmFyIGE9ZnVuY3Rpb24obix0LHAsdSl7dmFyIHE9Q3J5cHRvSlMuZW5jLkJhc2U2NC5wYXJzZShuKTt2YXIgbz1DcnlwdG9KUy5lbmMuSGV4LnN0cmluZ2lmeShxKTt2YXIgcz1nW3RdWyJwcm9jIl07dmFyIHI9cyhvLHAsdSk7cmV0dXJuIHJ9O3ZhciBmPWZ1bmN0aW9uKG4scSxvLHMpe3ZhciBwPWdbcV1bImVwcm9jIl07dmFyIHI9cChuLG8scyk7cmV0dXJuIHJ9O3JldHVybnt2ZXJzaW9uOiIxLjAuNSIsZ2V0SGV4RnJvbVBFTTpmdW5jdGlvbihvLHIpe3ZhciBwPW87aWYocC5pbmRleE9mKCJCRUdJTiAiK3IpPT0tMSl7dGhyb3ciY2FuJ3QgZmluZCBQRU0gaGVhZGVyOiAiK3J9cD1wLnJlcGxhY2UoIi0tLS0tQkVHSU4gIityKyItLS0tLSIsIiIpO3A9cC5yZXBsYWNlKCItLS0tLUVORCAiK3IrIi0tLS0tIiwiIik7dmFyIHE9cC5yZXBsYWNlKC9ccysvZywiIik7dmFyIG49YjY0dG9oZXgocSk7cmV0dXJuIG59LGdldERlY3J5cHRlZEtleUhleEJ5S2V5SVY6ZnVuY3Rpb24obyxyLHEscCl7dmFyIG49YihyKTtyZXR1cm4gbihvLHEscCl9LHBhcnNlUEtDUzVQRU06ZnVuY3Rpb24obil7cmV0dXJuIGwobil9LGdldEtleUFuZFVudXNlZEl2QnlQYXNzY29kZUFuZEl2c2FsdDpmdW5jdGlvbihvLG4scCl7cmV0dXJuIGgobyxuLHApfSxkZWNyeXB0S2V5QjY0OmZ1bmN0aW9uKG4scCxvLHEpe3JldHVybiBhKG4scCxvLHEpfSxnZXREZWNyeXB0ZWRLZXlIZXg6ZnVuY3Rpb24odyx2KXt2YXIgbz1sKHcpO3ZhciByPW8udHlwZTt2YXIgcD1vLmNpcGhlcjt2YXIgbj1vLml2c2FsdDt2YXIgcT1vLmRhdGE7dmFyIHU9aChwLHYsbik7dmFyIHQ9dS5rZXloZXg7dmFyIHM9YShxLHAsdCxuKTtyZXR1cm4gc30sZ2V0UlNBS2V5RnJvbUVuY3J5cHRlZFBLQ1M1UEVNOmZ1bmN0aW9uKHAsbyl7dmFyIHE9dGhpcy5nZXREZWNyeXB0ZWRLZXlIZXgocCxvKTt2YXIgbj1uZXcgUlNBS2V5KCk7bi5yZWFkUHJpdmF0ZUtleUZyb21BU04xSGV4U3RyaW5nKHEpO3JldHVybiBufSxnZXRFcnlwdGVkUEtDUzVQRU1Gcm9tUHJ2S2V5SGV4OmZ1bmN0aW9uKHEseCxyLHApe3ZhciBuPSIiO2lmKHR5cGVvZiByPT0idW5kZWZpbmVkInx8cj09bnVsbCl7cj0iQUVTLTI1Ni1DQkMifWlmKHR5cGVvZiBnW3JdPT0idW5kZWZpbmVkIil7dGhyb3ciUEtDUzVQS0VZIHVuc3VwcG9ydGVkIGFsZ29yaXRobTogIityfWlmKHR5cGVvZiBwPT0idW5kZWZpbmVkInx8cD09bnVsbCl7dmFyIHQ9Z1tyXVsiaXZsZW4iXTt2YXIgcz1rKHQpO3A9cy50b1VwcGVyQ2FzZSgpfXZhciB3PWgocix4LHApO3ZhciB2PXcua2V5aGV4O3ZhciB1PWYocSxyLHYscCk7dmFyIG89dS5yZXBsYWNlKC8oLns2NH0pL2csIiQxXHJcbiIpO3ZhciBuPSItLS0tLUJFR0lOIFJTQSBQUklWQVRFIEtFWS0tLS0tXHJcbiI7bis9IlByb2MtVHlwZTogNCxFTkNSWVBURURcclxuIjtuKz0iREVLLUluZm86ICIrcisiLCIrcCsiXHJcbiI7bis9IlxyXG4iO24rPW87bis9IlxyXG4tLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLVxyXG4iO3JldHVybiBufSxnZXRFcnlwdGVkUEtDUzVQRU1Gcm9tUlNBS2V5OmZ1bmN0aW9uKEMsRCxvLHMpe3ZhciBBPW5ldyBLSlVSLmFzbjEuREVSSW50ZWdlcih7ImludCI6MH0pO3ZhciB2PW5ldyBLSlVSLmFzbjEuREVSSW50ZWdlcih7YmlnaW50OkMubn0pO3ZhciB6PW5ldyBLSlVSLmFzbjEuREVSSW50ZWdlcih7ImludCI6Qy5lfSk7dmFyIEI9bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKHtiaWdpbnQ6Qy5kfSk7dmFyIHQ9bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKHtiaWdpbnQ6Qy5wfSk7dmFyIHI9bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKHtiaWdpbnQ6Qy5xfSk7dmFyIHk9bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKHtiaWdpbnQ6Qy5kbXAxfSk7dmFyIHU9bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKHtiaWdpbnQ6Qy5kbXExfSk7dmFyIHg9bmV3IEtKVVIuYXNuMS5ERVJJbnRlZ2VyKHtiaWdpbnQ6Qy5jb2VmZn0pO3ZhciBFPW5ldyBLSlVSLmFzbjEuREVSU2VxdWVuY2Uoe2FycmF5OltBLHYseixCLHQscix5LHUseF19KTt2YXIgdz1FLmdldEVuY29kZWRIZXgoKTtyZXR1cm4gdGhpcy5nZXRFcnlwdGVkUEtDUzVQRU1Gcm9tUHJ2S2V5SGV4KHcsRCxvLHMpfSxuZXdFbmNyeXB0ZWRQS0NTNVBFTTpmdW5jdGlvbihuLG8scixzKXtpZih0eXBlb2Ygbz09InVuZGVmaW5lZCJ8fG89PW51bGwpe289MTAyNH1pZih0eXBlb2Ygcj09InVuZGVmaW5lZCJ8fHI9PW51bGwpe3I9IjEwMDAxIn12YXIgcD1uZXcgUlNBS2V5KCk7cC5nZW5lcmF0ZShvLHIpO3ZhciBxPW51bGw7aWYodHlwZW9mIHM9PSJ1bmRlZmluZWQifHxzPT1udWxsKXtxPXRoaXMuZ2V0RW5jcnlwdGVkUEtDUzVQRU1Gcm9tUlNBS2V5KHBrZXksbil9ZWxzZXtxPXRoaXMuZ2V0RW5jcnlwdGVkUEtDUzVQRU1Gcm9tUlNBS2V5KHBrZXksbixzKX1yZXR1cm4gcX0sZ2V0UlNBS2V5RnJvbVBsYWluUEtDUzhQRU06ZnVuY3Rpb24ocCl7aWYocC5tYXRjaCgvRU5DUllQVEVELykpe3Rocm93InBlbSBzaGFsbCBiZSBub3QgRU5DUllQVEVEIn12YXIgbz10aGlzLmdldEhleEZyb21QRU0ocCwiUFJJVkFURSBLRVkiKTt2YXIgbj10aGlzLmdldFJTQUtleUZyb21QbGFpblBLQ1M4SGV4KG8pO3JldHVybiBufSxnZXRSU0FLZXlGcm9tUGxhaW5QS0NTOEhleDpmdW5jdGlvbihxKXt2YXIgcD1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihxLDApO2lmKHAubGVuZ3RoIT0zKXt0aHJvdyJvdXRlciBERVJTZXF1ZW5jZSBzaGFsbCBoYXZlIDMgZWxlbWVudHM6ICIrcC5sZW5ndGh9dmFyIG89QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaihxLHBbMV0pO2lmKG8hPSIzMDBkMDYwOTJhODY0ODg2ZjcwZDAxMDEwMTA1MDAiKXt0aHJvdyJQS0NTOCBBbGdvcml0aG1JZGVudGlmaWVyIGlzIG5vdCByc2FFbmM6ICIrb312YXIgbz1BU04xSEVYLmdldEhleE9mVExWX0F0T2JqKHEscFsxXSk7dmFyIHI9QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaihxLHBbMl0pO3ZhciBzPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHIsMCk7dmFyIG49bmV3IFJTQUtleSgpO24ucmVhZFByaXZhdGVLZXlGcm9tQVNOMUhleFN0cmluZyhzKTtyZXR1cm4gbn0scGFyc2VIZXhPZkVuY3J5cHRlZFBLQ1M4OmZ1bmN0aW9uKHUpe3ZhciBxPXt9O3ZhciBwPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKHUsMCk7aWYocC5sZW5ndGghPTIpe3Rocm93Im1hbGZvcm1lZCBmb3JtYXQ6IFNFUVVFTkNFKDApLml0ZW1zICE9IDI6ICIrcC5sZW5ndGh9cS5jaXBoZXJ0ZXh0PUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHUscFsxXSk7dmFyIHc9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmoodSxwWzBdKTtpZih3Lmxlbmd0aCE9Mil7dGhyb3cibWFsZm9ybWVkIGZvcm1hdDogU0VRVUVOQ0UoMC4wKS5pdGVtcyAhPSAyOiAiK3cubGVuZ3RofWlmKEFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHUsd1swXSkhPSIyYTg2NDg4NmY3MGQwMTA1MGQiKXt0aHJvdyJ0aGlzIG9ubHkgc3VwcG9ydHMgcGtjczVQQkVTMiJ9dmFyIG49QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmoodSx3WzFdKTtpZih3Lmxlbmd0aCE9Mil7dGhyb3cibWFsZm9ybWVkIGZvcm1hdDogU0VRVUVOQ0UoMC4wLjEpLml0ZW1zICE9IDI6ICIrbi5sZW5ndGh9dmFyIG89QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmoodSxuWzFdKTtpZihvLmxlbmd0aCE9Mil7dGhyb3cibWFsZm9ybWVkIGZvcm1hdDogU0VRVUVOQ0UoMC4wLjEuMSkuaXRlbXMgIT0gMjogIitvLmxlbmd0aH1pZihBU04xSEVYLmdldEhleE9mVl9BdE9iaih1LG9bMF0pIT0iMmE4NjQ4ODZmNzBkMDMwNyIpe3Rocm93InRoaXMgb25seSBzdXBwb3J0cyBUcmlwbGVERVMifXEuZW5jcnlwdGlvblNjaGVtZUFsZz0iVHJpcGxlREVTIjtxLmVuY3J5cHRpb25TY2hlbWVJVj1BU04xSEVYLmdldEhleE9mVl9BdE9iaih1LG9bMV0pO3ZhciByPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKHUsblswXSk7aWYoci5sZW5ndGghPTIpe3Rocm93Im1hbGZvcm1lZCBmb3JtYXQ6IFNFUVVFTkNFKDAuMC4xLjApLml0ZW1zICE9IDI6ICIrci5sZW5ndGh9aWYoQVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoodSxyWzBdKSE9IjJhODY0ODg2ZjcwZDAxMDUwYyIpe3Rocm93InRoaXMgb25seSBzdXBwb3J0cyBwa2NzNVBCS0RGMiJ9dmFyIHY9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmoodSxyWzFdKTtpZih2Lmxlbmd0aDwyKXt0aHJvdyJtYWxmb3JtZWQgZm9ybWF0OiBTRVFVRU5DRSgwLjAuMS4wLjEpLml0ZW1zIDwgMjogIit2Lmxlbmd0aH1xLnBia2RmMlNhbHQ9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoodSx2WzBdKTt2YXIgcz1BU04xSEVYLmdldEhleE9mVl9BdE9iaih1LHZbMV0pO3RyeXtxLnBia2RmMkl0ZXI9cGFyc2VJbnQocywxNil9Y2F0Y2godCl7dGhyb3cibWFsZm9ybWVkIGZvcm1hdCBwYmtkZjJJdGVyOiAiK3N9cmV0dXJuIHF9LGdldFBCS0RGMktleUhleEZyb21QYXJhbTpmdW5jdGlvbihzLG4pe3ZhciByPUNyeXB0b0pTLmVuYy5IZXgucGFyc2Uocy5wYmtkZjJTYWx0KTt2YXIgbz1zLnBia2RmMkl0ZXI7dmFyIHE9Q3J5cHRvSlMuUEJLREYyKG4scix7a2V5U2l6ZToxOTIvMzIsaXRlcmF0aW9uczpvfSk7dmFyIHA9Q3J5cHRvSlMuZW5jLkhleC5zdHJpbmdpZnkocSk7cmV0dXJuIHB9LGdldFBsYWluUEtDUzhIZXhGcm9tRW5jcnlwdGVkUEtDUzhQRU06ZnVuY3Rpb24odix3KXt2YXIgcD10aGlzLmdldEhleEZyb21QRU0odiwiRU5DUllQVEVEIFBSSVZBVEUgS0VZIik7dmFyIG49dGhpcy5wYXJzZUhleE9mRW5jcnlwdGVkUEtDUzgocCk7dmFyIHM9UEtDUzVQS0VZLmdldFBCS0RGMktleUhleEZyb21QYXJhbShuLHcpO3ZhciB0PXt9O3QuY2lwaGVydGV4dD1DcnlwdG9KUy5lbmMuSGV4LnBhcnNlKG4uY2lwaGVydGV4dCk7dmFyIHI9Q3J5cHRvSlMuZW5jLkhleC5wYXJzZShzKTt2YXIgcT1DcnlwdG9KUy5lbmMuSGV4LnBhcnNlKG4uZW5jcnlwdGlvblNjaGVtZUlWKTt2YXIgdT1DcnlwdG9KUy5UcmlwbGVERVMuZGVjcnlwdCh0LHIse2l2OnF9KTt2YXIgbz1DcnlwdG9KUy5lbmMuSGV4LnN0cmluZ2lmeSh1KTtyZXR1cm4gb30sZ2V0UlNBS2V5RnJvbUVuY3J5cHRlZFBLQ1M4UEVNOmZ1bmN0aW9uKHEscCl7dmFyIG89dGhpcy5nZXRQbGFpblBLQ1M4SGV4RnJvbUVuY3J5cHRlZFBLQ1M4UEVNKHEscCk7dmFyIG49dGhpcy5nZXRSU0FLZXlGcm9tUGxhaW5QS0NTOEhleChvKTtyZXR1cm4gbn0sZ2V0S2V5RnJvbUVuY3J5cHRlZFBLQ1M4UEVNOmZ1bmN0aW9uKHEsbyl7dmFyIG49dGhpcy5nZXRQbGFpblBLQ1M4SGV4RnJvbUVuY3J5cHRlZFBLQ1M4UEVNKHEsbyk7dmFyIHA9dGhpcy5nZXRLZXlGcm9tUGxhaW5Qcml2YXRlUEtDUzhIZXgobik7cmV0dXJuIHB9LHBhcnNlUGxhaW5Qcml2YXRlUEtDUzhIZXg6ZnVuY3Rpb24ocSl7dmFyIG89e307by5hbGdwYXJhbT1udWxsO2lmKHEuc3Vic3RyKDAsMikhPSIzMCIpe3Rocm93Im1hbGZvcm1lZCBwbGFpbiBQS0NTOCBwcml2YXRlIGtleShjb2RlOjAwMSkifXZhciBwPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKHEsMCk7aWYocC5sZW5ndGghPTMpe3Rocm93Im1hbGZvcm1lZCBwbGFpbiBQS0NTOCBwcml2YXRlIGtleShjb2RlOjAwMikifWlmKHEuc3Vic3RyKHBbMV0sMikhPSIzMCIpe3Rocm93Im1hbGZvcm1lZCBQS0NTOCBwcml2YXRlIGtleShjb2RlOjAwMykifXZhciBuPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKHEscFsxXSk7aWYobi5sZW5ndGghPTIpe3Rocm93Im1hbGZvcm1lZCBQS0NTOCBwcml2YXRlIGtleShjb2RlOjAwNCkifWlmKHEuc3Vic3RyKG5bMF0sMikhPSIwNiIpe3Rocm93Im1hbGZvcm1lZCBQS0NTOCBwcml2YXRlIGtleShjb2RlOjAwNSkifW8uYWxnb2lkPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHEsblswXSk7aWYocS5zdWJzdHIoblsxXSwyKT09IjA2Iil7by5hbGdwYXJhbT1BU04xSEVYLmdldEhleE9mVl9BdE9iaihxLG5bMV0pfWlmKHEuc3Vic3RyKHBbMl0sMikhPSIwNCIpe3Rocm93Im1hbGZvcm1lZCBQS0NTOCBwcml2YXRlIGtleShjb2RlOjAwNikifW8ua2V5aWR4PUFTTjFIRVguZ2V0U3RhcnRQb3NPZlZfQXRPYmoocSxwWzJdKTtyZXR1cm4gb30sZ2V0S2V5RnJvbVBsYWluUHJpdmF0ZVBLQ1M4UEVNOmZ1bmN0aW9uKG8pe3ZhciBuPXRoaXMuZ2V0SGV4RnJvbVBFTShvLCJQUklWQVRFIEtFWSIpO3ZhciBwPXRoaXMuZ2V0S2V5RnJvbVBsYWluUHJpdmF0ZVBLQ1M4SGV4KG4pO3JldHVybiBwfSxnZXRLZXlGcm9tUGxhaW5Qcml2YXRlUEtDUzhIZXg6ZnVuY3Rpb24obil7dmFyIHA9dGhpcy5wYXJzZVBsYWluUHJpdmF0ZVBLQ1M4SGV4KG4pO2lmKHAuYWxnb2lkPT0iMmE4NjQ4ODZmNzBkMDEwMTAxIil7dGhpcy5wYXJzZVByaXZhdGVSYXdSU0FLZXlIZXhBdE9iaihuLHApO3ZhciBvPXAua2V5O3ZhciBxPW5ldyBSU0FLZXkoKTtxLnNldFByaXZhdGVFeChvLm4sby5lLG8uZCxvLnAsby5xLG8uZHAsby5kcSxvLmNvKTtyZXR1cm4gcX1lbHNle2lmKHAuYWxnb2lkPT0iMmE4NjQ4Y2UzZDAyMDEiKXt0aGlzLnBhcnNlUHJpdmF0ZVJhd0VDS2V5SGV4QXRPYmoobixwKTtpZihLSlVSLmNyeXB0by5PSUQub2lkaGV4Mm5hbWVbcC5hbGdwYXJhbV09PT11bmRlZmluZWQpe3Rocm93IktKVVIuY3J5cHRvLk9JRC5vaWRoZXgybmFtZSB1bmRlZmluZWQ6ICIrcC5hbGdwYXJhbX12YXIgcj1LSlVSLmNyeXB0by5PSUQub2lkaGV4Mm5hbWVbcC5hbGdwYXJhbV07dmFyIHE9bmV3IEtKVVIuY3J5cHRvLkVDRFNBKHtjdXJ2ZTpyLHBydjpwLmtleX0pO3JldHVybiBxfWVsc2V7dGhyb3cidW5zdXBwb3J0ZWQgcHJpdmF0ZSBrZXkgYWxnb3JpdGhtIn19fSxnZXRSU0FLZXlGcm9tUHVibGljUEtDUzhQRU06ZnVuY3Rpb24obyl7dmFyIHA9dGhpcy5nZXRIZXhGcm9tUEVNKG8sIlBVQkxJQyBLRVkiKTt2YXIgbj10aGlzLmdldFJTQUtleUZyb21QdWJsaWNQS0NTOEhleChwKTtyZXR1cm4gbn0sZ2V0S2V5RnJvbVB1YmxpY1BLQ1M4UEVNOmZ1bmN0aW9uKG8pe3ZhciBwPXRoaXMuZ2V0SGV4RnJvbVBFTShvLCJQVUJMSUMgS0VZIik7dmFyIG49dGhpcy5nZXRLZXlGcm9tUHVibGljUEtDUzhIZXgocCk7cmV0dXJuIG59LGdldEtleUZyb21QdWJsaWNQS0NTOEhleDpmdW5jdGlvbihvKXt2YXIgbj10aGlzLnBhcnNlUHVibGljUEtDUzhIZXgobyk7aWYobi5hbGdvaWQ9PSIyYTg2NDg4NmY3MGQwMTAxMDEiKXt2YXIgcj10aGlzLnBhcnNlUHVibGljUmF3UlNBS2V5SGV4KG4ua2V5KTt2YXIgcD1uZXcgUlNBS2V5KCk7cC5zZXRQdWJsaWMoci5uLHIuZSk7cmV0dXJuIHB9ZWxzZXtpZihuLmFsZ29pZD09IjJhODY0OGNlM2QwMjAxIil7aWYoS0pVUi5jcnlwdG8uT0lELm9pZGhleDJuYW1lW24uYWxncGFyYW1dPT09dW5kZWZpbmVkKXt0aHJvdyJLSlVSLmNyeXB0by5PSUQub2lkaGV4Mm5hbWUgdW5kZWZpbmVkOiAiK24uYWxncGFyYW19dmFyIHE9S0pVUi5jcnlwdG8uT0lELm9pZGhleDJuYW1lW24uYWxncGFyYW1dO3ZhciBwPW5ldyBLSlVSLmNyeXB0by5FQ0RTQSh7Y3VydmU6cSxwdWI6bi5rZXl9KTtyZXR1cm4gcH1lbHNle3Rocm93InVuc3VwcG9ydGVkIHB1YmxpYyBrZXkgYWxnb3JpdGhtIn19fSxwYXJzZVB1YmxpY1Jhd1JTQUtleUhleDpmdW5jdGlvbihwKXt2YXIgbj17fTtpZihwLnN1YnN0cigwLDIpIT0iMzAiKXt0aHJvdyJtYWxmb3JtZWQgUlNBIGtleShjb2RlOjAwMSkifXZhciBvPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKHAsMCk7aWYoby5sZW5ndGghPTIpe3Rocm93Im1hbGZvcm1lZCBSU0Ega2V5KGNvZGU6MDAyKSJ9aWYocC5zdWJzdHIob1swXSwyKSE9IjAyIil7dGhyb3cibWFsZm9ybWVkIFJTQSBrZXkoY29kZTowMDMpIn1uLm49QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoocCxvWzBdKTtpZihwLnN1YnN0cihvWzFdLDIpIT0iMDIiKXt0aHJvdyJtYWxmb3JtZWQgUlNBIGtleShjb2RlOjAwNCkifW4uZT1BU04xSEVYLmdldEhleE9mVl9BdE9iaihwLG9bMV0pO3JldHVybiBufSxwYXJzZVByaXZhdGVSYXdSU0FLZXlIZXhBdE9iajpmdW5jdGlvbihvLHEpe3ZhciBwPXEua2V5aWR4O2lmKG8uc3Vic3RyKHAsMikhPSIzMCIpe3Rocm93Im1hbGZvcm1lZCBSU0EgcHJpdmF0ZSBrZXkoY29kZTowMDEpIn12YXIgbj1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihvLHApO2lmKG4ubGVuZ3RoIT05KXt0aHJvdyJtYWxmb3JtZWQgUlNBIHByaXZhdGUga2V5KGNvZGU6MDAyKSJ9cS5rZXk9e307cS5rZXkubj1BU04xSEVYLmdldEhleE9mVl9BdE9iaihvLG5bMV0pO3Eua2V5LmU9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoobyxuWzJdKTtxLmtleS5kPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKG8sblszXSk7cS5rZXkucD1BU04xSEVYLmdldEhleE9mVl9BdE9iaihvLG5bNF0pO3Eua2V5LnE9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoobyxuWzVdKTtxLmtleS5kcD1BU04xSEVYLmdldEhleE9mVl9BdE9iaihvLG5bNl0pO3Eua2V5LmRxPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKG8sbls3XSk7cS5rZXkuY289QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoobyxuWzhdKX0scGFyc2VQcml2YXRlUmF3RUNLZXlIZXhBdE9iajpmdW5jdGlvbihvLHEpe3ZhciBwPXEua2V5aWR4O2lmKG8uc3Vic3RyKHAsMikhPSIzMCIpe3Rocm93Im1hbGZvcm1lZCBFQ0MgcHJpdmF0ZSBrZXkoY29kZTowMDEpIn12YXIgbj1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihvLHApO2lmKG4ubGVuZ3RoIT0zKXt0aHJvdyJtYWxmb3JtZWQgRUNDIHByaXZhdGUga2V5KGNvZGU6MDAyKSJ9aWYoby5zdWJzdHIoblsxXSwyKSE9IjA0Iil7dGhyb3cibWFsZm9ybWVkIEVDQyBwcml2YXRlIGtleShjb2RlOjAwMykifXEua2V5PUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKG8sblsxXSl9LHBhcnNlUHVibGljUEtDUzhIZXg6ZnVuY3Rpb24ocSl7dmFyIG89e307by5hbGdwYXJhbT1udWxsO3ZhciBwPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKHEsMCk7aWYocC5sZW5ndGghPTIpe3Rocm93Im91dGVyIERFUlNlcXVlbmNlIHNoYWxsIGhhdmUgMiBlbGVtZW50czogIitwLmxlbmd0aH12YXIgcj1wWzBdO2lmKHEuc3Vic3RyKHIsMikhPSIzMCIpe3Rocm93Im1hbGZvcm1lZCBQS0NTOCBwdWJsaWMga2V5KGNvZGU6MDAxKSJ9dmFyIG49QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmoocSxyKTtpZihuLmxlbmd0aCE9Mil7dGhyb3cibWFsZm9ybWVkIFBLQ1M4IHB1YmxpYyBrZXkoY29kZTowMDIpIn1pZihxLnN1YnN0cihuWzBdLDIpIT0iMDYiKXt0aHJvdyJtYWxmb3JtZWQgUEtDUzggcHVibGljIGtleShjb2RlOjAwMykifW8uYWxnb2lkPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHEsblswXSk7aWYocS5zdWJzdHIoblsxXSwyKT09IjA2Iil7by5hbGdwYXJhbT1BU04xSEVYLmdldEhleE9mVl9BdE9iaihxLG5bMV0pfWlmKHEuc3Vic3RyKHBbMV0sMikhPSIwMyIpe3Rocm93Im1hbGZvcm1lZCBQS0NTOCBwdWJsaWMga2V5KGNvZGU6MDA0KSJ9by5rZXk9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoocSxwWzFdKS5zdWJzdHIoMik7cmV0dXJuIG99LGdldFJTQUtleUZyb21QdWJsaWNQS0NTOEhleDpmdW5jdGlvbihyKXt2YXIgcT1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihyLDApO2lmKHEubGVuZ3RoIT0yKXt0aHJvdyJvdXRlciBERVJTZXF1ZW5jZSBzaGFsbCBoYXZlIDIgZWxlbWVudHM6ICIrcS5sZW5ndGh9dmFyIHA9QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaihyLHFbMF0pO2lmKHAhPSIzMDBkMDYwOTJhODY0ODg2ZjcwZDAxMDEwMTA1MDAiKXt0aHJvdyJQS0NTOCBBbGdvcml0aG1JZCBpcyBub3QgcnNhRW5jcnlwdGlvbiJ9aWYoci5zdWJzdHIocVsxXSwyKSE9IjAzIil7dGhyb3ciUEtDUzggUHVibGljIEtleSBpcyBub3QgQklUU1RSSU5HIGVuY2Fwc2xhdGVkLiJ9dmFyIHQ9QVNOMUhFWC5nZXRTdGFydFBvc09mVl9BdE9iaihyLHFbMV0pKzI7aWYoci5zdWJzdHIodCwyKSE9IjMwIil7dGhyb3ciUEtDUzggUHVibGljIEtleSBpcyBub3QgU0VRVUVOQ0UuIn12YXIgbj1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihyLHQpO2lmKG4ubGVuZ3RoIT0yKXt0aHJvdyJpbm5lciBERVJTZXF1ZW5jZSBzaGFsbCBoYXZlIDIgZWxlbWVudHM6ICIrbi5sZW5ndGh9aWYoci5zdWJzdHIoblswXSwyKSE9IjAyIil7dGhyb3ciTiBpcyBub3QgQVNOLjEgSU5URUdFUiJ9aWYoci5zdWJzdHIoblsxXSwyKSE9IjAyIil7dGhyb3ciRSBpcyBub3QgQVNOLjEgSU5URUdFUiJ9dmFyIHU9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoocixuWzBdKTt2YXIgcz1BU04xSEVYLmdldEhleE9mVl9BdE9iaihyLG5bMV0pO3ZhciBvPW5ldyBSU0FLZXkoKTtvLnNldFB1YmxpYyh1LHMpO3JldHVybiBvfSx9fSgpOw0KLyohIGtleXV0aWwtMS4wLjEyLmpzIChjKSAyMDEzLTIwMTUgS2VuamkgVXJ1c2hpbWEgfCBranVyLmdpdGh1Yi5jb20vanNyc2FzaWduL2xpY2Vuc2UNCiAqLw0KdmFyIEtFWVVUSUw9ZnVuY3Rpb24oKXt2YXIgZD1mdW5jdGlvbihwLHIscSl7cmV0dXJuIGsoQ3J5cHRvSlMuQUVTLHAscixxKX07dmFyIGU9ZnVuY3Rpb24ocCxyLHEpe3JldHVybiBrKENyeXB0b0pTLlRyaXBsZURFUyxwLHIscSl9O3ZhciBhPWZ1bmN0aW9uKHAscixxKXtyZXR1cm4gayhDcnlwdG9KUy5ERVMscCxyLHEpfTt2YXIgaz1mdW5jdGlvbihzLHgsdSxxKXt2YXIgcj1DcnlwdG9KUy5lbmMuSGV4LnBhcnNlKHgpO3ZhciB3PUNyeXB0b0pTLmVuYy5IZXgucGFyc2UodSk7dmFyIHA9Q3J5cHRvSlMuZW5jLkhleC5wYXJzZShxKTt2YXIgdD17fTt0LmtleT13O3QuaXY9cDt0LmNpcGhlcnRleHQ9cjt2YXIgdj1zLmRlY3J5cHQodCx3LHtpdjpwfSk7cmV0dXJuIENyeXB0b0pTLmVuYy5IZXguc3RyaW5naWZ5KHYpfTt2YXIgbD1mdW5jdGlvbihwLHIscSl7cmV0dXJuIGcoQ3J5cHRvSlMuQUVTLHAscixxKX07dmFyIG89ZnVuY3Rpb24ocCxyLHEpe3JldHVybiBnKENyeXB0b0pTLlRyaXBsZURFUyxwLHIscSl9O3ZhciBmPWZ1bmN0aW9uKHAscixxKXtyZXR1cm4gZyhDcnlwdG9KUy5ERVMscCxyLHEpfTt2YXIgZz1mdW5jdGlvbih0LHksdixxKXt2YXIgcz1DcnlwdG9KUy5lbmMuSGV4LnBhcnNlKHkpO3ZhciB4PUNyeXB0b0pTLmVuYy5IZXgucGFyc2Uodik7dmFyIHA9Q3J5cHRvSlMuZW5jLkhleC5wYXJzZShxKTt2YXIgdz10LmVuY3J5cHQocyx4LHtpdjpwfSk7dmFyIHI9Q3J5cHRvSlMuZW5jLkhleC5wYXJzZSh3LnRvU3RyaW5nKCkpO3ZhciB1PUNyeXB0b0pTLmVuYy5CYXNlNjQuc3RyaW5naWZ5KHIpO3JldHVybiB1fTt2YXIgaT17IkFFUy0yNTYtQ0JDIjp7cHJvYzpkLGVwcm9jOmwsa2V5bGVuOjMyLGl2bGVuOjE2fSwiQUVTLTE5Mi1DQkMiOntwcm9jOmQsZXByb2M6bCxrZXlsZW46MjQsaXZsZW46MTZ9LCJBRVMtMTI4LUNCQyI6e3Byb2M6ZCxlcHJvYzpsLGtleWxlbjoxNixpdmxlbjoxNn0sIkRFUy1FREUzLUNCQyI6e3Byb2M6ZSxlcHJvYzpvLGtleWxlbjoyNCxpdmxlbjo4fSwiREVTLUNCQyI6e3Byb2M6YSxlcHJvYzpmLGtleWxlbjo4LGl2bGVuOjh9fTt2YXIgYz1mdW5jdGlvbihwKXtyZXR1cm4gaVtwXVsicHJvYyJdfTt2YXIgbT1mdW5jdGlvbihwKXt2YXIgcj1DcnlwdG9KUy5saWIuV29yZEFycmF5LnJhbmRvbShwKTt2YXIgcT1DcnlwdG9KUy5lbmMuSGV4LnN0cmluZ2lmeShyKTtyZXR1cm4gcX07dmFyIG49ZnVuY3Rpb24odCl7dmFyIHU9e307aWYodC5tYXRjaChuZXcgUmVnRXhwKCJERUstSW5mbzogKFteLF0rKSwoWzAtOUEtRmEtZl0rKSIsIm0iKSkpe3UuY2lwaGVyPVJlZ0V4cC4kMTt1Lml2c2FsdD1SZWdFeHAuJDJ9aWYodC5tYXRjaChuZXcgUmVnRXhwKCItLS0tLUJFR0lOIChbQS1aXSspIFBSSVZBVEUgS0VZLS0tLS0iKSkpe3UudHlwZT1SZWdFeHAuJDF9dmFyIHI9LTE7dmFyIHY9MDtpZih0LmluZGV4T2YoIlxyXG5cclxuIikhPS0xKXtyPXQuaW5kZXhPZigiXHJcblxyXG4iKTt2PTJ9aWYodC5pbmRleE9mKCJcblxuIikhPS0xKXtyPXQuaW5kZXhPZigiXG5cbiIpO3Y9MX12YXIgcT10LmluZGV4T2YoIi0tLS0tRU5EIik7aWYociE9LTEmJnEhPS0xKXt2YXIgcD10LnN1YnN0cmluZyhyK3YqMixxLXYpO3A9cC5yZXBsYWNlKC9ccysvZywiIik7dS5kYXRhPXB9cmV0dXJuIHV9O3ZhciBqPWZ1bmN0aW9uKHEseSxwKXt2YXIgdj1wLnN1YnN0cmluZygwLDE2KTt2YXIgdD1DcnlwdG9KUy5lbmMuSGV4LnBhcnNlKHYpO3ZhciByPUNyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKHkpO3ZhciB1PWlbcV1bImtleWxlbiJdK2lbcV1bIml2bGVuIl07dmFyIHg9IiI7dmFyIHc9bnVsbDtmb3IoOzspe3ZhciBzPUNyeXB0b0pTLmFsZ28uTUQ1LmNyZWF0ZSgpO2lmKHchPW51bGwpe3MudXBkYXRlKHcpfXMudXBkYXRlKHIpO3MudXBkYXRlKHQpO3c9cy5maW5hbGl6ZSgpO3g9eCtDcnlwdG9KUy5lbmMuSGV4LnN0cmluZ2lmeSh3KTtpZih4Lmxlbmd0aD49dSoyKXticmVha319dmFyIHo9e307ei5rZXloZXg9eC5zdWJzdHIoMCxpW3FdWyJrZXlsZW4iXSoyKTt6Lml2aGV4PXguc3Vic3RyKGlbcV1bImtleWxlbiJdKjIsaVtxXVsiaXZsZW4iXSoyKTtyZXR1cm4gen07dmFyIGI9ZnVuY3Rpb24ocCx2LHIsdyl7dmFyIHM9Q3J5cHRvSlMuZW5jLkJhc2U2NC5wYXJzZShwKTt2YXIgcT1DcnlwdG9KUy5lbmMuSGV4LnN0cmluZ2lmeShzKTt2YXIgdT1pW3ZdWyJwcm9jIl07dmFyIHQ9dShxLHIsdyk7cmV0dXJuIHR9O3ZhciBoPWZ1bmN0aW9uKHAscyxxLHUpe3ZhciByPWlbc11bImVwcm9jIl07dmFyIHQ9cihwLHEsdSk7cmV0dXJuIHR9O3JldHVybnt2ZXJzaW9uOiIxLjAuMCIsZ2V0SGV4RnJvbVBFTTpmdW5jdGlvbihxLHUpe3ZhciByPXE7aWYoci5pbmRleE9mKCItLS0tLUJFR0lOICIpPT0tMSl7dGhyb3ciY2FuJ3QgZmluZCBQRU0gaGVhZGVyOiAiK3V9aWYodHlwZW9mIHU9PSJzdHJpbmciJiZ1IT0iIil7cj1yLnJlcGxhY2UoIi0tLS0tQkVHSU4gIit1KyItLS0tLSIsIiIpO3I9ci5yZXBsYWNlKCItLS0tLUVORCAiK3UrIi0tLS0tIiwiIil9ZWxzZXtyPXIucmVwbGFjZSgvLS0tLS1CRUdJTiBbXi1dKy0tLS0tLywiIik7cj1yLnJlcGxhY2UoLy0tLS0tRU5EIFteLV0rLS0tLS0vLCIiKX12YXIgdD1yLnJlcGxhY2UoL1xzKy9nLCIiKTt2YXIgcD1iNjR0b2hleCh0KTtyZXR1cm4gcH0sZ2V0RGVjcnlwdGVkS2V5SGV4QnlLZXlJVjpmdW5jdGlvbihxLHQscyxyKXt2YXIgcD1jKHQpO3JldHVybiBwKHEscyxyKX0scGFyc2VQS0NTNVBFTTpmdW5jdGlvbihwKXtyZXR1cm4gbihwKX0sZ2V0S2V5QW5kVW51c2VkSXZCeVBhc3Njb2RlQW5kSXZzYWx0OmZ1bmN0aW9uKHEscCxyKXtyZXR1cm4gaihxLHAscil9LGRlY3J5cHRLZXlCNjQ6ZnVuY3Rpb24ocCxyLHEscyl7cmV0dXJuIGIocCxyLHEscyl9LGdldERlY3J5cHRlZEtleUhleDpmdW5jdGlvbih5LHgpe3ZhciBxPW4oeSk7dmFyIHQ9cS50eXBlO3ZhciByPXEuY2lwaGVyO3ZhciBwPXEuaXZzYWx0O3ZhciBzPXEuZGF0YTt2YXIgdz1qKHIseCxwKTt2YXIgdj13LmtleWhleDt2YXIgdT1iKHMscix2LHApO3JldHVybiB1fSxnZXRSU0FLZXlGcm9tRW5jcnlwdGVkUEtDUzVQRU06ZnVuY3Rpb24ocixxKXt2YXIgcz10aGlzLmdldERlY3J5cHRlZEtleUhleChyLHEpO3ZhciBwPW5ldyBSU0FLZXkoKTtwLnJlYWRQcml2YXRlS2V5RnJvbUFTTjFIZXhTdHJpbmcocyk7cmV0dXJuIHB9LGdldEVuY3J5cHRlZFBLQ1M1UEVNRnJvbVBydktleUhleDpmdW5jdGlvbih4LHMsQSx0LHIpe3ZhciBwPSIiO2lmKHR5cGVvZiB0PT0idW5kZWZpbmVkInx8dD09bnVsbCl7dD0iQUVTLTI1Ni1DQkMifWlmKHR5cGVvZiBpW3RdPT0idW5kZWZpbmVkIil7dGhyb3ciS0VZVVRJTCB1bnN1cHBvcnRlZCBhbGdvcml0aG06ICIrdH1pZih0eXBlb2Ygcj09InVuZGVmaW5lZCJ8fHI9PW51bGwpe3ZhciB2PWlbdF1bIml2bGVuIl07dmFyIHU9bSh2KTtyPXUudG9VcHBlckNhc2UoKX12YXIgej1qKHQsQSxyKTt2YXIgeT16LmtleWhleDt2YXIgdz1oKHMsdCx5LHIpO3ZhciBxPXcucmVwbGFjZSgvKC57NjR9KS9nLCIkMVxyXG4iKTt2YXIgcD0iLS0tLS1CRUdJTiAiK3grIiBQUklWQVRFIEtFWS0tLS0tXHJcbiI7cCs9IlByb2MtVHlwZTogNCxFTkNSWVBURURcclxuIjtwKz0iREVLLUluZm86ICIrdCsiLCIrcisiXHJcbiI7cCs9IlxyXG4iO3ArPXE7cCs9IlxyXG4tLS0tLUVORCAiK3grIiBQUklWQVRFIEtFWS0tLS0tXHJcbiI7cmV0dXJuIHB9LGdldEVuY3J5cHRlZFBLQ1M1UEVNRnJvbVJTQUtleTpmdW5jdGlvbihELEUscix0KXt2YXIgQj1uZXcgS0pVUi5hc24xLkRFUkludGVnZXIoeyJpbnQiOjB9KTt2YXIgdz1uZXcgS0pVUi5hc24xLkRFUkludGVnZXIoe2JpZ2ludDpELm59KTt2YXIgQT1uZXcgS0pVUi5hc24xLkRFUkludGVnZXIoeyJpbnQiOkQuZX0pO3ZhciBDPW5ldyBLSlVSLmFzbjEuREVSSW50ZWdlcih7YmlnaW50OkQuZH0pO3ZhciB1PW5ldyBLSlVSLmFzbjEuREVSSW50ZWdlcih7YmlnaW50OkQucH0pO3ZhciBzPW5ldyBLSlVSLmFzbjEuREVSSW50ZWdlcih7YmlnaW50OkQucX0pO3ZhciB6PW5ldyBLSlVSLmFzbjEuREVSSW50ZWdlcih7YmlnaW50OkQuZG1wMX0pO3ZhciB2PW5ldyBLSlVSLmFzbjEuREVSSW50ZWdlcih7YmlnaW50OkQuZG1xMX0pO3ZhciB5PW5ldyBLSlVSLmFzbjEuREVSSW50ZWdlcih7YmlnaW50OkQuY29lZmZ9KTt2YXIgRj1uZXcgS0pVUi5hc24xLkRFUlNlcXVlbmNlKHthcnJheTpbQix3LEEsQyx1LHMseix2LHldfSk7dmFyIHg9Ri5nZXRFbmNvZGVkSGV4KCk7cmV0dXJuIHRoaXMuZ2V0RW5jcnlwdGVkUEtDUzVQRU1Gcm9tUHJ2S2V5SGV4KCJSU0EiLHgsRSxyLHQpfSxuZXdFbmNyeXB0ZWRQS0NTNVBFTTpmdW5jdGlvbihwLHEsdCx1KXtpZih0eXBlb2YgcT09InVuZGVmaW5lZCJ8fHE9PW51bGwpe3E9MTAyNH1pZih0eXBlb2YgdD09InVuZGVmaW5lZCJ8fHQ9PW51bGwpe3Q9IjEwMDAxIn12YXIgcj1uZXcgUlNBS2V5KCk7ci5nZW5lcmF0ZShxLHQpO3ZhciBzPW51bGw7aWYodHlwZW9mIHU9PSJ1bmRlZmluZWQifHx1PT1udWxsKXtzPXRoaXMuZ2V0RW5jcnlwdGVkUEtDUzVQRU1Gcm9tUlNBS2V5KHIscCl9ZWxzZXtzPXRoaXMuZ2V0RW5jcnlwdGVkUEtDUzVQRU1Gcm9tUlNBS2V5KHIscCx1KX1yZXR1cm4gc30sZ2V0UlNBS2V5RnJvbVBsYWluUEtDUzhQRU06ZnVuY3Rpb24ocil7aWYoci5tYXRjaCgvRU5DUllQVEVELykpe3Rocm93InBlbSBzaGFsbCBiZSBub3QgRU5DUllQVEVEIn12YXIgcT10aGlzLmdldEhleEZyb21QRU0ociwiUFJJVkFURSBLRVkiKTt2YXIgcD10aGlzLmdldFJTQUtleUZyb21QbGFpblBLQ1M4SGV4KHEpO3JldHVybiBwfSxnZXRSU0FLZXlGcm9tUGxhaW5QS0NTOEhleDpmdW5jdGlvbihzKXt2YXIgcj1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihzLDApO2lmKHIubGVuZ3RoIT0zKXt0aHJvdyJvdXRlciBERVJTZXF1ZW5jZSBzaGFsbCBoYXZlIDMgZWxlbWVudHM6ICIrci5sZW5ndGh9dmFyIHE9QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaihzLHJbMV0pO2lmKHEhPSIzMDBkMDYwOTJhODY0ODg2ZjcwZDAxMDEwMTA1MDAiKXt0aHJvdyJQS0NTOCBBbGdvcml0aG1JZGVudGlmaWVyIGlzIG5vdCByc2FFbmM6ICIrcX12YXIgcT1BU04xSEVYLmdldEhleE9mVExWX0F0T2JqKHMsclsxXSk7dmFyIHQ9QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaihzLHJbMl0pO3ZhciB1PUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHQsMCk7dmFyIHA9bmV3IFJTQUtleSgpO3AucmVhZFByaXZhdGVLZXlGcm9tQVNOMUhleFN0cmluZyh1KTtyZXR1cm4gcH0scGFyc2VIZXhPZkVuY3J5cHRlZFBLQ1M4OmZ1bmN0aW9uKHcpe3ZhciBzPXt9O3ZhciByPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKHcsMCk7aWYoci5sZW5ndGghPTIpe3Rocm93Im1hbGZvcm1lZCBmb3JtYXQ6IFNFUVVFTkNFKDApLml0ZW1zICE9IDI6ICIrci5sZW5ndGh9cy5jaXBoZXJ0ZXh0PUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHcsclsxXSk7dmFyIHk9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmoodyxyWzBdKTtpZih5Lmxlbmd0aCE9Mil7dGhyb3cibWFsZm9ybWVkIGZvcm1hdDogU0VRVUVOQ0UoMC4wKS5pdGVtcyAhPSAyOiAiK3kubGVuZ3RofWlmKEFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHcseVswXSkhPSIyYTg2NDg4NmY3MGQwMTA1MGQiKXt0aHJvdyJ0aGlzIG9ubHkgc3VwcG9ydHMgcGtjczVQQkVTMiJ9dmFyIHA9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmoodyx5WzFdKTtpZih5Lmxlbmd0aCE9Mil7dGhyb3cibWFsZm9ybWVkIGZvcm1hdDogU0VRVUVOQ0UoMC4wLjEpLml0ZW1zICE9IDI6ICIrcC5sZW5ndGh9dmFyIHE9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmoodyxwWzFdKTtpZihxLmxlbmd0aCE9Mil7dGhyb3cibWFsZm9ybWVkIGZvcm1hdDogU0VRVUVOQ0UoMC4wLjEuMSkuaXRlbXMgIT0gMjogIitxLmxlbmd0aH1pZihBU04xSEVYLmdldEhleE9mVl9BdE9iaih3LHFbMF0pIT0iMmE4NjQ4ODZmNzBkMDMwNyIpe3Rocm93InRoaXMgb25seSBzdXBwb3J0cyBUcmlwbGVERVMifXMuZW5jcnlwdGlvblNjaGVtZUFsZz0iVHJpcGxlREVTIjtzLmVuY3J5cHRpb25TY2hlbWVJVj1BU04xSEVYLmdldEhleE9mVl9BdE9iaih3LHFbMV0pO3ZhciB0PUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKHcscFswXSk7aWYodC5sZW5ndGghPTIpe3Rocm93Im1hbGZvcm1lZCBmb3JtYXQ6IFNFUVVFTkNFKDAuMC4xLjApLml0ZW1zICE9IDI6ICIrdC5sZW5ndGh9aWYoQVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoodyx0WzBdKSE9IjJhODY0ODg2ZjcwZDAxMDUwYyIpe3Rocm93InRoaXMgb25seSBzdXBwb3J0cyBwa2NzNVBCS0RGMiJ9dmFyIHg9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmoodyx0WzFdKTtpZih4Lmxlbmd0aDwyKXt0aHJvdyJtYWxmb3JtZWQgZm9ybWF0OiBTRVFVRU5DRSgwLjAuMS4wLjEpLml0ZW1zIDwgMjogIit4Lmxlbmd0aH1zLnBia2RmMlNhbHQ9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoodyx4WzBdKTt2YXIgdT1BU04xSEVYLmdldEhleE9mVl9BdE9iaih3LHhbMV0pO3RyeXtzLnBia2RmMkl0ZXI9cGFyc2VJbnQodSwxNil9Y2F0Y2godil7dGhyb3cibWFsZm9ybWVkIGZvcm1hdCBwYmtkZjJJdGVyOiAiK3V9cmV0dXJuIHN9LGdldFBCS0RGMktleUhleEZyb21QYXJhbTpmdW5jdGlvbih1LHApe3ZhciB0PUNyeXB0b0pTLmVuYy5IZXgucGFyc2UodS5wYmtkZjJTYWx0KTt2YXIgcT11LnBia2RmMkl0ZXI7dmFyIHM9Q3J5cHRvSlMuUEJLREYyKHAsdCx7a2V5U2l6ZToxOTIvMzIsaXRlcmF0aW9uczpxfSk7dmFyIHI9Q3J5cHRvSlMuZW5jLkhleC5zdHJpbmdpZnkocyk7cmV0dXJuIHJ9LGdldFBsYWluUEtDUzhIZXhGcm9tRW5jcnlwdGVkUEtDUzhQRU06ZnVuY3Rpb24oeCx5KXt2YXIgcj10aGlzLmdldEhleEZyb21QRU0oeCwiRU5DUllQVEVEIFBSSVZBVEUgS0VZIik7dmFyIHA9dGhpcy5wYXJzZUhleE9mRW5jcnlwdGVkUEtDUzgocik7dmFyIHU9S0VZVVRJTC5nZXRQQktERjJLZXlIZXhGcm9tUGFyYW0ocCx5KTt2YXIgdj17fTt2LmNpcGhlcnRleHQ9Q3J5cHRvSlMuZW5jLkhleC5wYXJzZShwLmNpcGhlcnRleHQpO3ZhciB0PUNyeXB0b0pTLmVuYy5IZXgucGFyc2UodSk7dmFyIHM9Q3J5cHRvSlMuZW5jLkhleC5wYXJzZShwLmVuY3J5cHRpb25TY2hlbWVJVik7dmFyIHc9Q3J5cHRvSlMuVHJpcGxlREVTLmRlY3J5cHQodix0LHtpdjpzfSk7dmFyIHE9Q3J5cHRvSlMuZW5jLkhleC5zdHJpbmdpZnkodyk7cmV0dXJuIHF9LGdldFJTQUtleUZyb21FbmNyeXB0ZWRQS0NTOFBFTTpmdW5jdGlvbihzLHIpe3ZhciBxPXRoaXMuZ2V0UGxhaW5QS0NTOEhleEZyb21FbmNyeXB0ZWRQS0NTOFBFTShzLHIpO3ZhciBwPXRoaXMuZ2V0UlNBS2V5RnJvbVBsYWluUEtDUzhIZXgocSk7cmV0dXJuIHB9LGdldEtleUZyb21FbmNyeXB0ZWRQS0NTOFBFTTpmdW5jdGlvbihzLHEpe3ZhciBwPXRoaXMuZ2V0UGxhaW5QS0NTOEhleEZyb21FbmNyeXB0ZWRQS0NTOFBFTShzLHEpO3ZhciByPXRoaXMuZ2V0S2V5RnJvbVBsYWluUHJpdmF0ZVBLQ1M4SGV4KHApO3JldHVybiByfSxwYXJzZVBsYWluUHJpdmF0ZVBLQ1M4SGV4OmZ1bmN0aW9uKHMpe3ZhciBxPXt9O3EuYWxncGFyYW09bnVsbDtpZihzLnN1YnN0cigwLDIpIT0iMzAiKXt0aHJvdyJtYWxmb3JtZWQgcGxhaW4gUEtDUzggcHJpdmF0ZSBrZXkoY29kZTowMDEpIn12YXIgcj1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihzLDApO2lmKHIubGVuZ3RoIT0zKXt0aHJvdyJtYWxmb3JtZWQgcGxhaW4gUEtDUzggcHJpdmF0ZSBrZXkoY29kZTowMDIpIn1pZihzLnN1YnN0cihyWzFdLDIpIT0iMzAiKXt0aHJvdyJtYWxmb3JtZWQgUEtDUzggcHJpdmF0ZSBrZXkoY29kZTowMDMpIn12YXIgcD1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihzLHJbMV0pO2lmKHAubGVuZ3RoIT0yKXt0aHJvdyJtYWxmb3JtZWQgUEtDUzggcHJpdmF0ZSBrZXkoY29kZTowMDQpIn1pZihzLnN1YnN0cihwWzBdLDIpIT0iMDYiKXt0aHJvdyJtYWxmb3JtZWQgUEtDUzggcHJpdmF0ZSBrZXkoY29kZTowMDUpIn1xLmFsZ29pZD1BU04xSEVYLmdldEhleE9mVl9BdE9iaihzLHBbMF0pO2lmKHMuc3Vic3RyKHBbMV0sMik9PSIwNiIpe3EuYWxncGFyYW09QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoocyxwWzFdKX1pZihzLnN1YnN0cihyWzJdLDIpIT0iMDQiKXt0aHJvdyJtYWxmb3JtZWQgUEtDUzggcHJpdmF0ZSBrZXkoY29kZTowMDYpIn1xLmtleWlkeD1BU04xSEVYLmdldFN0YXJ0UG9zT2ZWX0F0T2JqKHMsclsyXSk7cmV0dXJuIHF9LGdldEtleUZyb21QbGFpblByaXZhdGVQS0NTOFBFTTpmdW5jdGlvbihxKXt2YXIgcD10aGlzLmdldEhleEZyb21QRU0ocSwiUFJJVkFURSBLRVkiKTt2YXIgcj10aGlzLmdldEtleUZyb21QbGFpblByaXZhdGVQS0NTOEhleChwKTtyZXR1cm4gcn0sZ2V0S2V5RnJvbVBsYWluUHJpdmF0ZVBLQ1M4SGV4OmZ1bmN0aW9uKHApe3ZhciB3PXRoaXMucGFyc2VQbGFpblByaXZhdGVQS0NTOEhleChwKTtpZih3LmFsZ29pZD09IjJhODY0ODg2ZjcwZDAxMDEwMSIpe3RoaXMucGFyc2VQcml2YXRlUmF3UlNBS2V5SGV4QXRPYmoocCx3KTt2YXIgdT13LmtleTt2YXIgej1uZXcgUlNBS2V5KCk7ei5zZXRQcml2YXRlRXgodS5uLHUuZSx1LmQsdS5wLHUucSx1LmRwLHUuZHEsdS5jbyk7cmV0dXJuIHp9ZWxzZXtpZih3LmFsZ29pZD09IjJhODY0OGNlM2QwMjAxIil7dGhpcy5wYXJzZVByaXZhdGVSYXdFQ0tleUhleEF0T2JqKHAsdyk7aWYoS0pVUi5jcnlwdG8uT0lELm9pZGhleDJuYW1lW3cuYWxncGFyYW1dPT09dW5kZWZpbmVkKXt0aHJvdyJLSlVSLmNyeXB0by5PSUQub2lkaGV4Mm5hbWUgdW5kZWZpbmVkOiAiK3cuYWxncGFyYW19dmFyIHY9S0pVUi5jcnlwdG8uT0lELm9pZGhleDJuYW1lW3cuYWxncGFyYW1dO3ZhciB6PW5ldyBLSlVSLmNyeXB0by5FQ0RTQSh7Y3VydmU6dn0pO3ouc2V0UHVibGljS2V5SGV4KHcucHVia2V5KTt6LnNldFByaXZhdGVLZXlIZXgody5rZXkpO3ouaXNQdWJsaWM9ZmFsc2U7cmV0dXJuIHp9ZWxzZXtpZih3LmFsZ29pZD09IjJhODY0OGNlMzgwNDAxIil7dmFyIHQ9QVNOMUhFWC5nZXRWYnlMaXN0KHAsMCxbMSwxLDBdLCIwMiIpO3ZhciBzPUFTTjFIRVguZ2V0VmJ5TGlzdChwLDAsWzEsMSwxXSwiMDIiKTt2YXIgeT1BU04xSEVYLmdldFZieUxpc3QocCwwLFsxLDEsMl0sIjAyIik7dmFyIEI9QVNOMUhFWC5nZXRWYnlMaXN0KHAsMCxbMiwwXSwiMDIiKTt2YXIgcj1uZXcgQmlnSW50ZWdlcih0LDE2KTt2YXIgcT1uZXcgQmlnSW50ZWdlcihzLDE2KTt2YXIgeD1uZXcgQmlnSW50ZWdlcih5LDE2KTt2YXIgQT1uZXcgQmlnSW50ZWdlcihCLDE2KTt2YXIgej1uZXcgS0pVUi5jcnlwdG8uRFNBKCk7ei5zZXRQcml2YXRlKHIscSx4LG51bGwsQSk7cmV0dXJuIHp9ZWxzZXt0aHJvdyJ1bnN1cHBvcnRlZCBwcml2YXRlIGtleSBhbGdvcml0aG0ifX19fSxnZXRSU0FLZXlGcm9tUHVibGljUEtDUzhQRU06ZnVuY3Rpb24ocSl7dmFyIHI9dGhpcy5nZXRIZXhGcm9tUEVNKHEsIlBVQkxJQyBLRVkiKTt2YXIgcD10aGlzLmdldFJTQUtleUZyb21QdWJsaWNQS0NTOEhleChyKTtyZXR1cm4gcH0sZ2V0S2V5RnJvbVB1YmxpY1BLQ1M4UEVNOmZ1bmN0aW9uKHEpe3ZhciByPXRoaXMuZ2V0SGV4RnJvbVBFTShxLCJQVUJMSUMgS0VZIik7dmFyIHA9dGhpcy5nZXRLZXlGcm9tUHVibGljUEtDUzhIZXgocik7cmV0dXJuIHB9LGdldEtleUZyb21QdWJsaWNQS0NTOEhleDpmdW5jdGlvbihxKXt2YXIgcD10aGlzLnBhcnNlUHVibGljUEtDUzhIZXgocSk7aWYocC5hbGdvaWQ9PSIyYTg2NDg4NmY3MGQwMTAxMDEiKXt2YXIgdT10aGlzLnBhcnNlUHVibGljUmF3UlNBS2V5SGV4KHAua2V5KTt2YXIgcj1uZXcgUlNBS2V5KCk7ci5zZXRQdWJsaWModS5uLHUuZSk7cmV0dXJuIHJ9ZWxzZXtpZihwLmFsZ29pZD09IjJhODY0OGNlM2QwMjAxIil7aWYoS0pVUi5jcnlwdG8uT0lELm9pZGhleDJuYW1lW3AuYWxncGFyYW1dPT09dW5kZWZpbmVkKXt0aHJvdyJLSlVSLmNyeXB0by5PSUQub2lkaGV4Mm5hbWUgdW5kZWZpbmVkOiAiK3AuYWxncGFyYW19dmFyIHM9S0pVUi5jcnlwdG8uT0lELm9pZGhleDJuYW1lW3AuYWxncGFyYW1dO3ZhciByPW5ldyBLSlVSLmNyeXB0by5FQ0RTQSh7Y3VydmU6cyxwdWI6cC5rZXl9KTtyZXR1cm4gcn1lbHNle2lmKHAuYWxnb2lkPT0iMmE4NjQ4Y2UzODA0MDEiKXt2YXIgdD1wLmFsZ3BhcmFtO3ZhciB2PUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHAua2V5LDApO3ZhciByPW5ldyBLSlVSLmNyeXB0by5EU0EoKTtyLnNldFB1YmxpYyhuZXcgQmlnSW50ZWdlcih0LnAsMTYpLG5ldyBCaWdJbnRlZ2VyKHQucSwxNiksbmV3IEJpZ0ludGVnZXIodC5nLDE2KSxuZXcgQmlnSW50ZWdlcih2LDE2KSk7cmV0dXJuIHJ9ZWxzZXt0aHJvdyJ1bnN1cHBvcnRlZCBwdWJsaWMga2V5IGFsZ29yaXRobSJ9fX19LHBhcnNlUHVibGljUmF3UlNBS2V5SGV4OmZ1bmN0aW9uKHIpe3ZhciBwPXt9O2lmKHIuc3Vic3RyKDAsMikhPSIzMCIpe3Rocm93Im1hbGZvcm1lZCBSU0Ega2V5KGNvZGU6MDAxKSJ9dmFyIHE9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmoociwwKTtpZihxLmxlbmd0aCE9Mil7dGhyb3cibWFsZm9ybWVkIFJTQSBrZXkoY29kZTowMDIpIn1pZihyLnN1YnN0cihxWzBdLDIpIT0iMDIiKXt0aHJvdyJtYWxmb3JtZWQgUlNBIGtleShjb2RlOjAwMykifXAubj1BU04xSEVYLmdldEhleE9mVl9BdE9iaihyLHFbMF0pO2lmKHIuc3Vic3RyKHFbMV0sMikhPSIwMiIpe3Rocm93Im1hbGZvcm1lZCBSU0Ega2V5KGNvZGU6MDA0KSJ9cC5lPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHIscVsxXSk7cmV0dXJuIHB9LHBhcnNlUHJpdmF0ZVJhd1JTQUtleUhleEF0T2JqOmZ1bmN0aW9uKHEscyl7dmFyIHI9cy5rZXlpZHg7aWYocS5zdWJzdHIociwyKSE9IjMwIil7dGhyb3cibWFsZm9ybWVkIFJTQSBwcml2YXRlIGtleShjb2RlOjAwMSkifXZhciBwPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKHEscik7aWYocC5sZW5ndGghPTkpe3Rocm93Im1hbGZvcm1lZCBSU0EgcHJpdmF0ZSBrZXkoY29kZTowMDIpIn1zLmtleT17fTtzLmtleS5uPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHEscFsxXSk7cy5rZXkuZT1BU04xSEVYLmdldEhleE9mVl9BdE9iaihxLHBbMl0pO3Mua2V5LmQ9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoocSxwWzNdKTtzLmtleS5wPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHEscFs0XSk7cy5rZXkucT1BU04xSEVYLmdldEhleE9mVl9BdE9iaihxLHBbNV0pO3Mua2V5LmRwPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKHEscFs2XSk7cy5rZXkuZHE9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoocSxwWzddKTtzLmtleS5jbz1BU04xSEVYLmdldEhleE9mVl9BdE9iaihxLHBbOF0pfSxwYXJzZVByaXZhdGVSYXdFQ0tleUhleEF0T2JqOmZ1bmN0aW9uKHAsdCl7dmFyIHE9dC5rZXlpZHg7dmFyIHI9QVNOMUhFWC5nZXRWYnlMaXN0KHAscSxbMV0sIjA0Iik7dmFyIHM9QVNOMUhFWC5nZXRWYnlMaXN0KHAscSxbMiwwXSwiMDMiKS5zdWJzdHIoMik7dC5rZXk9cjt0LnB1YmtleT1zfSxwYXJzZVB1YmxpY1BLQ1M4SGV4OmZ1bmN0aW9uKHMpe3ZhciBxPXt9O3EuYWxncGFyYW09bnVsbDt2YXIgcj1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihzLDApO2lmKHIubGVuZ3RoIT0yKXt0aHJvdyJvdXRlciBERVJTZXF1ZW5jZSBzaGFsbCBoYXZlIDIgZWxlbWVudHM6ICIrci5sZW5ndGh9dmFyIHQ9clswXTtpZihzLnN1YnN0cih0LDIpIT0iMzAiKXt0aHJvdyJtYWxmb3JtZWQgUEtDUzggcHVibGljIGtleShjb2RlOjAwMSkifXZhciBwPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKHMsdCk7aWYocC5sZW5ndGghPTIpe3Rocm93Im1hbGZvcm1lZCBQS0NTOCBwdWJsaWMga2V5KGNvZGU6MDAyKSJ9aWYocy5zdWJzdHIocFswXSwyKSE9IjA2Iil7dGhyb3cibWFsZm9ybWVkIFBLQ1M4IHB1YmxpYyBrZXkoY29kZTowMDMpIn1xLmFsZ29pZD1BU04xSEVYLmdldEhleE9mVl9BdE9iaihzLHBbMF0pO2lmKHMuc3Vic3RyKHBbMV0sMik9PSIwNiIpe3EuYWxncGFyYW09QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoocyxwWzFdKX1lbHNle2lmKHMuc3Vic3RyKHBbMV0sMik9PSIzMCIpe3EuYWxncGFyYW09e307cS5hbGdwYXJhbS5wPUFTTjFIRVguZ2V0VmJ5TGlzdChzLHBbMV0sWzBdLCIwMiIpO3EuYWxncGFyYW0ucT1BU04xSEVYLmdldFZieUxpc3QocyxwWzFdLFsxXSwiMDIiKTtxLmFsZ3BhcmFtLmc9QVNOMUhFWC5nZXRWYnlMaXN0KHMscFsxXSxbMl0sIjAyIil9fWlmKHMuc3Vic3RyKHJbMV0sMikhPSIwMyIpe3Rocm93Im1hbGZvcm1lZCBQS0NTOCBwdWJsaWMga2V5KGNvZGU6MDA0KSJ9cS5rZXk9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoocyxyWzFdKS5zdWJzdHIoMik7cmV0dXJuIHF9LGdldFJTQUtleUZyb21QdWJsaWNQS0NTOEhleDpmdW5jdGlvbih0KXt2YXIgcz1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaih0LDApO2lmKHMubGVuZ3RoIT0yKXt0aHJvdyJvdXRlciBERVJTZXF1ZW5jZSBzaGFsbCBoYXZlIDIgZWxlbWVudHM6ICIrcy5sZW5ndGh9dmFyIHI9QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaih0LHNbMF0pO2lmKHIhPSIzMDBkMDYwOTJhODY0ODg2ZjcwZDAxMDEwMTA1MDAiKXt0aHJvdyJQS0NTOCBBbGdvcml0aG1JZCBpcyBub3QgcnNhRW5jcnlwdGlvbiJ9aWYodC5zdWJzdHIoc1sxXSwyKSE9IjAzIil7dGhyb3ciUEtDUzggUHVibGljIEtleSBpcyBub3QgQklUU1RSSU5HIGVuY2Fwc2xhdGVkLiJ9dmFyIHY9QVNOMUhFWC5nZXRTdGFydFBvc09mVl9BdE9iaih0LHNbMV0pKzI7aWYodC5zdWJzdHIodiwyKSE9IjMwIil7dGhyb3ciUEtDUzggUHVibGljIEtleSBpcyBub3QgU0VRVUVOQ0UuIn12YXIgcD1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaih0LHYpO2lmKHAubGVuZ3RoIT0yKXt0aHJvdyJpbm5lciBERVJTZXF1ZW5jZSBzaGFsbCBoYXZlIDIgZWxlbWVudHM6ICIrcC5sZW5ndGh9aWYodC5zdWJzdHIocFswXSwyKSE9IjAyIil7dGhyb3ciTiBpcyBub3QgQVNOLjEgSU5URUdFUiJ9aWYodC5zdWJzdHIocFsxXSwyKSE9IjAyIil7dGhyb3ciRSBpcyBub3QgQVNOLjEgSU5URUdFUiJ9dmFyIHc9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoodCxwWzBdKTt2YXIgdT1BU04xSEVYLmdldEhleE9mVl9BdE9iaih0LHBbMV0pO3ZhciBxPW5ldyBSU0FLZXkoKTtxLnNldFB1YmxpYyh3LHUpO3JldHVybiBxfSx9fSgpO0tFWVVUSUwuZ2V0S2V5PWZ1bmN0aW9uKGYsZSxoKXtpZih0eXBlb2YgUlNBS2V5IT0idW5kZWZpbmVkIiYmZiBpbnN0YW5jZW9mIFJTQUtleSl7cmV0dXJuIGZ9aWYodHlwZW9mIEtKVVIuY3J5cHRvLkVDRFNBIT0idW5kZWZpbmVkIiYmZiBpbnN0YW5jZW9mIEtKVVIuY3J5cHRvLkVDRFNBKXtyZXR1cm4gZn1pZih0eXBlb2YgS0pVUi5jcnlwdG8uRFNBIT0idW5kZWZpbmVkIiYmZiBpbnN0YW5jZW9mIEtKVVIuY3J5cHRvLkRTQSl7cmV0dXJuIGZ9aWYoZi5jdXJ2ZSE9PXVuZGVmaW5lZCYmZi54eSE9PXVuZGVmaW5lZCYmZi5kPT09dW5kZWZpbmVkKXtyZXR1cm4gbmV3IEtKVVIuY3J5cHRvLkVDRFNBKHtwdWI6Zi54eSxjdXJ2ZTpmLmN1cnZlfSl9aWYoZi5jdXJ2ZSE9PXVuZGVmaW5lZCYmZi5kIT09dW5kZWZpbmVkKXtyZXR1cm4gbmV3IEtKVVIuY3J5cHRvLkVDRFNBKHtwcnY6Zi5kLGN1cnZlOmYuY3VydmV9KX1pZihmLmt0eT09PXVuZGVmaW5lZCYmZi5uIT09dW5kZWZpbmVkJiZmLmUhPT11bmRlZmluZWQmJmYuZD09PXVuZGVmaW5lZCl7dmFyIHc9bmV3IFJTQUtleSgpO3cuc2V0UHVibGljKGYubixmLmUpO3JldHVybiB3fWlmKGYua3R5PT09dW5kZWZpbmVkJiZmLm4hPT11bmRlZmluZWQmJmYuZSE9PXVuZGVmaW5lZCYmZi5kIT09dW5kZWZpbmVkJiZmLnAhPT11bmRlZmluZWQmJmYucSE9PXVuZGVmaW5lZCYmZi5kcCE9PXVuZGVmaW5lZCYmZi5kcSE9PXVuZGVmaW5lZCYmZi5jbyE9PXVuZGVmaW5lZCYmZi5xaT09PXVuZGVmaW5lZCl7dmFyIHc9bmV3IFJTQUtleSgpO3cuc2V0UHJpdmF0ZUV4KGYubixmLmUsZi5kLGYucCxmLnEsZi5kcCxmLmRxLGYuY28pO3JldHVybiB3fWlmKGYua3R5PT09dW5kZWZpbmVkJiZmLm4hPT11bmRlZmluZWQmJmYuZSE9PXVuZGVmaW5lZCYmZi5kIT09dW5kZWZpbmVkJiZmLnA9PT11bmRlZmluZWQpe3ZhciB3PW5ldyBSU0FLZXkoKTt3LnNldFByaXZhdGUoZi5uLGYuZSxmLmQpO3JldHVybiB3fWlmKGYucCE9PXVuZGVmaW5lZCYmZi5xIT09dW5kZWZpbmVkJiZmLmchPT11bmRlZmluZWQmJmYueSE9PXVuZGVmaW5lZCYmZi54PT09dW5kZWZpbmVkKXt2YXIgdz1uZXcgS0pVUi5jcnlwdG8uRFNBKCk7dy5zZXRQdWJsaWMoZi5wLGYucSxmLmcsZi55KTtyZXR1cm4gd31pZihmLnAhPT11bmRlZmluZWQmJmYucSE9PXVuZGVmaW5lZCYmZi5nIT09dW5kZWZpbmVkJiZmLnkhPT11bmRlZmluZWQmJmYueCE9PXVuZGVmaW5lZCl7dmFyIHc9bmV3IEtKVVIuY3J5cHRvLkRTQSgpO3cuc2V0UHJpdmF0ZShmLnAsZi5xLGYuZyxmLnksZi54KTtyZXR1cm4gd31pZihmLmt0eT09PSJSU0EiJiZmLm4hPT11bmRlZmluZWQmJmYuZSE9PXVuZGVmaW5lZCYmZi5kPT09dW5kZWZpbmVkKXt2YXIgdz1uZXcgUlNBS2V5KCk7dy5zZXRQdWJsaWMoYjY0dXRvaGV4KGYubiksYjY0dXRvaGV4KGYuZSkpO3JldHVybiB3fWlmKGYua3R5PT09IlJTQSImJmYubiE9PXVuZGVmaW5lZCYmZi5lIT09dW5kZWZpbmVkJiZmLmQhPT11bmRlZmluZWQmJmYucCE9PXVuZGVmaW5lZCYmZi5xIT09dW5kZWZpbmVkJiZmLmRwIT09dW5kZWZpbmVkJiZmLmRxIT09dW5kZWZpbmVkJiZmLnFpIT09dW5kZWZpbmVkKXt2YXIgdz1uZXcgUlNBS2V5KCk7dy5zZXRQcml2YXRlRXgoYjY0dXRvaGV4KGYubiksYjY0dXRvaGV4KGYuZSksYjY0dXRvaGV4KGYuZCksYjY0dXRvaGV4KGYucCksYjY0dXRvaGV4KGYucSksYjY0dXRvaGV4KGYuZHApLGI2NHV0b2hleChmLmRxKSxiNjR1dG9oZXgoZi5xaSkpO3JldHVybiB3fWlmKGYua3R5PT09IlJTQSImJmYubiE9PXVuZGVmaW5lZCYmZi5lIT09dW5kZWZpbmVkJiZmLmQhPT11bmRlZmluZWQpe3ZhciB3PW5ldyBSU0FLZXkoKTt3LnNldFByaXZhdGUoYjY0dXRvaGV4KGYubiksYjY0dXRvaGV4KGYuZSksYjY0dXRvaGV4KGYuZCkpO3JldHVybiB3fWlmKGYua3R5PT09IkVDIiYmZi5jcnYhPT11bmRlZmluZWQmJmYueCE9PXVuZGVmaW5lZCYmZi55IT09dW5kZWZpbmVkJiZmLmQ9PT11bmRlZmluZWQpe3ZhciBkPW5ldyBLSlVSLmNyeXB0by5FQ0RTQSh7Y3VydmU6Zi5jcnZ9KTt2YXIgbD1kLmVjcGFyYW1zLmtleWxlbi80O3ZhciByPSgiMDAwMDAwMDAwMCIrYjY0dXRvaGV4KGYueCkpLnNsaWNlKC1sKTt2YXIgbj0oIjAwMDAwMDAwMDAiK2I2NHV0b2hleChmLnkpKS5zbGljZSgtbCk7dmFyIG09IjA0IityK247ZC5zZXRQdWJsaWNLZXlIZXgobSk7cmV0dXJuIGR9aWYoZi5rdHk9PT0iRUMiJiZmLmNydiE9PXVuZGVmaW5lZCYmZi54IT09dW5kZWZpbmVkJiZmLnkhPT11bmRlZmluZWQmJmYuZCE9PXVuZGVmaW5lZCl7dmFyIGQ9bmV3IEtKVVIuY3J5cHRvLkVDRFNBKHtjdXJ2ZTpmLmNydn0pO3ZhciBsPWQuZWNwYXJhbXMua2V5bGVuLzQ7dmFyIGE9KCIwMDAwMDAwMDAwIitiNjR1dG9oZXgoZi5kKSkuc2xpY2UoLWwpO2Quc2V0UHJpdmF0ZUtleUhleChhKTtyZXR1cm4gZH1pZihmLmluZGV4T2YoIi1FTkQgQ0VSVElGSUNBVEUtIiwwKSE9LTF8fGYuaW5kZXhPZigiLUVORCBYNTA5IENFUlRJRklDQVRFLSIsMCkhPS0xfHxmLmluZGV4T2YoIi1FTkQgVFJVU1RFRCBDRVJUSUZJQ0FURS0iLDApIT0tMSl7cmV0dXJuIFg1MDkuZ2V0UHVibGljS2V5RnJvbUNlcnRQRU0oZil9aWYoaD09PSJwa2NzOHB1YiIpe3JldHVybiBLRVlVVElMLmdldEtleUZyb21QdWJsaWNQS0NTOEhleChmKX1pZihmLmluZGV4T2YoIi1FTkQgUFVCTElDIEtFWS0iKSE9LTEpe3JldHVybiBLRVlVVElMLmdldEtleUZyb21QdWJsaWNQS0NTOFBFTShmKX1pZihoPT09InBrY3M1cHJ2Iil7dmFyIHc9bmV3IFJTQUtleSgpO3cucmVhZFByaXZhdGVLZXlGcm9tQVNOMUhleFN0cmluZyhmKTtyZXR1cm4gd31pZihoPT09InBrY3M1cHJ2Iil7dmFyIHc9bmV3IFJTQUtleSgpO3cucmVhZFByaXZhdGVLZXlGcm9tQVNOMUhleFN0cmluZyhmKTtyZXR1cm4gd31pZihmLmluZGV4T2YoIi1FTkQgUlNBIFBSSVZBVEUgS0VZLSIpIT0tMSYmZi5pbmRleE9mKCI0LEVOQ1JZUFRFRCIpPT0tMSl7dmFyIGk9S0VZVVRJTC5nZXRIZXhGcm9tUEVNKGYsIlJTQSBQUklWQVRFIEtFWSIpO3JldHVybiBLRVlVVElMLmdldEtleShpLG51bGwsInBrY3M1cHJ2Iil9aWYoZi5pbmRleE9mKCItRU5EIERTQSBQUklWQVRFIEtFWS0iKSE9LTEmJmYuaW5kZXhPZigiNCxFTkNSWVBURUQiKT09LTEpe3ZhciB1PXRoaXMuZ2V0SGV4RnJvbVBFTShmLCJEU0EgUFJJVkFURSBLRVkiKTt2YXIgdD1BU04xSEVYLmdldFZieUxpc3QodSwwLFsxXSwiMDIiKTt2YXIgcz1BU04xSEVYLmdldFZieUxpc3QodSwwLFsyXSwiMDIiKTt2YXIgdj1BU04xSEVYLmdldFZieUxpc3QodSwwLFszXSwiMDIiKTt2YXIgaj1BU04xSEVYLmdldFZieUxpc3QodSwwLFs0XSwiMDIiKTt2YXIgaz1BU04xSEVYLmdldFZieUxpc3QodSwwLFs1XSwiMDIiKTt2YXIgdz1uZXcgS0pVUi5jcnlwdG8uRFNBKCk7dy5zZXRQcml2YXRlKG5ldyBCaWdJbnRlZ2VyKHQsMTYpLG5ldyBCaWdJbnRlZ2VyKHMsMTYpLG5ldyBCaWdJbnRlZ2VyKHYsMTYpLG5ldyBCaWdJbnRlZ2VyKGosMTYpLG5ldyBCaWdJbnRlZ2VyKGssMTYpKTtyZXR1cm4gd31pZihmLmluZGV4T2YoIi1FTkQgUFJJVkFURSBLRVktIikhPS0xKXtyZXR1cm4gS0VZVVRJTC5nZXRLZXlGcm9tUGxhaW5Qcml2YXRlUEtDUzhQRU0oZil9aWYoZi5pbmRleE9mKCItRU5EIFJTQSBQUklWQVRFIEtFWS0iKSE9LTEmJmYuaW5kZXhPZigiNCxFTkNSWVBURUQiKSE9LTEpe3JldHVybiBLRVlVVElMLmdldFJTQUtleUZyb21FbmNyeXB0ZWRQS0NTNVBFTShmLGUpfWlmKGYuaW5kZXhPZigiLUVORCBFQyBQUklWQVRFIEtFWS0iKSE9LTEmJmYuaW5kZXhPZigiNCxFTkNSWVBURUQiKSE9LTEpe3ZhciB1PUtFWVVUSUwuZ2V0RGVjcnlwdGVkS2V5SGV4KGYsZSk7dmFyIHc9QVNOMUhFWC5nZXRWYnlMaXN0KHUsMCxbMV0sIjA0Iik7dmFyIGM9QVNOMUhFWC5nZXRWYnlMaXN0KHUsMCxbMiwwXSwiMDYiKTt2YXIgbz1BU04xSEVYLmdldFZieUxpc3QodSwwLFszLDBdLCIwMyIpLnN1YnN0cigyKTt2YXIgYj0iIjtpZihLSlVSLmNyeXB0by5PSUQub2lkaGV4Mm5hbWVbY10hPT11bmRlZmluZWQpe2I9S0pVUi5jcnlwdG8uT0lELm9pZGhleDJuYW1lW2NdfWVsc2V7dGhyb3cidW5kZWZpbmVkIE9JRChoZXgpIGluIEtKVVIuY3J5cHRvLk9JRDogIitjfXZhciBkPW5ldyBLSlVSLmNyeXB0by5FQ0RTQSh7bmFtZTpifSk7ZC5zZXRQdWJsaWNLZXlIZXgobyk7ZC5zZXRQcml2YXRlS2V5SGV4KHcpO2QuaXNQdWJsaWM9ZmFsc2U7cmV0dXJuIGR9aWYoZi5pbmRleE9mKCItRU5EIERTQSBQUklWQVRFIEtFWS0iKSE9LTEmJmYuaW5kZXhPZigiNCxFTkNSWVBURUQiKSE9LTEpe3ZhciB1PUtFWVVUSUwuZ2V0RGVjcnlwdGVkS2V5SGV4KGYsZSk7dmFyIHQ9QVNOMUhFWC5nZXRWYnlMaXN0KHUsMCxbMV0sIjAyIik7dmFyIHM9QVNOMUhFWC5nZXRWYnlMaXN0KHUsMCxbMl0sIjAyIik7dmFyIHY9QVNOMUhFWC5nZXRWYnlMaXN0KHUsMCxbM10sIjAyIik7dmFyIGo9QVNOMUhFWC5nZXRWYnlMaXN0KHUsMCxbNF0sIjAyIik7dmFyIGs9QVNOMUhFWC5nZXRWYnlMaXN0KHUsMCxbNV0sIjAyIik7dmFyIHc9bmV3IEtKVVIuY3J5cHRvLkRTQSgpO3cuc2V0UHJpdmF0ZShuZXcgQmlnSW50ZWdlcih0LDE2KSxuZXcgQmlnSW50ZWdlcihzLDE2KSxuZXcgQmlnSW50ZWdlcih2LDE2KSxuZXcgQmlnSW50ZWdlcihqLDE2KSxuZXcgQmlnSW50ZWdlcihrLDE2KSk7cmV0dXJuIHd9aWYoZi5pbmRleE9mKCItRU5EIEVOQ1JZUFRFRCBQUklWQVRFIEtFWS0iKSE9LTEpe3JldHVybiBLRVlVVElMLmdldEtleUZyb21FbmNyeXB0ZWRQS0NTOFBFTShmLGUpfXRocm93Im5vdCBzdXBwb3J0ZWQgYXJndW1lbnQifTtLRVlVVElMLmdlbmVyYXRlS2V5cGFpcj1mdW5jdGlvbihhLGMpe2lmKGE9PSJSU0EiKXt2YXIgYj1jO3ZhciBoPW5ldyBSU0FLZXkoKTtoLmdlbmVyYXRlKGIsIjEwMDAxIik7aC5pc1ByaXZhdGU9dHJ1ZTtoLmlzUHVibGljPXRydWU7dmFyIGY9bmV3IFJTQUtleSgpO3ZhciBlPWgubi50b1N0cmluZygxNik7dmFyIGk9aC5lLnRvU3RyaW5nKDE2KTtmLnNldFB1YmxpYyhlLGkpO2YuaXNQcml2YXRlPWZhbHNlO2YuaXNQdWJsaWM9dHJ1ZTt2YXIgaz17fTtrLnBydktleU9iaj1oO2sucHViS2V5T2JqPWY7cmV0dXJuIGt9ZWxzZXtpZihhPT0iRUMiKXt2YXIgZD1jO3ZhciBnPW5ldyBLSlVSLmNyeXB0by5FQ0RTQSh7Y3VydmU6ZH0pO3ZhciBqPWcuZ2VuZXJhdGVLZXlQYWlySGV4KCk7dmFyIGg9bmV3IEtKVVIuY3J5cHRvLkVDRFNBKHtjdXJ2ZTpkfSk7aC5zZXRQcml2YXRlS2V5SGV4KGouZWNwcnZoZXgpO2guaXNQcml2YXRlPXRydWU7aC5pc1B1YmxpYz1mYWxzZTt2YXIgZj1uZXcgS0pVUi5jcnlwdG8uRUNEU0Eoe2N1cnZlOmR9KTtmLnNldFB1YmxpY0tleUhleChqLmVjcHViaGV4KTtmLmlzUHJpdmF0ZT1mYWxzZTtmLmlzUHVibGljPXRydWU7dmFyIGs9e307ay5wcnZLZXlPYmo9aDtrLnB1YktleU9iaj1mO3JldHVybiBrfWVsc2V7dGhyb3cidW5rbm93biBhbGdvcml0aG06ICIrYX19fTtLRVlVVElMLmdldFBFTT1mdW5jdGlvbihhLHIsbyxnLGope3ZhciB2PUtKVVIuYXNuMTt2YXIgdT1LSlVSLmNyeXB0bztmdW5jdGlvbiBwKHMpe3ZhciB3PUtKVVIuYXNuMS5BU04xVXRpbC5uZXdPYmplY3Qoe3NlcTpbeyJpbnQiOjB9LHsiaW50Ijp7YmlnaW50OnMubn19LHsiaW50IjpzLmV9LHsiaW50Ijp7YmlnaW50OnMuZH19LHsiaW50Ijp7YmlnaW50OnMucH19LHsiaW50Ijp7YmlnaW50OnMucX19LHsiaW50Ijp7YmlnaW50OnMuZG1wMX19LHsiaW50Ijp7YmlnaW50OnMuZG1xMX19LHsiaW50Ijp7YmlnaW50OnMuY29lZmZ9fV19KTtyZXR1cm4gd31mdW5jdGlvbiBxKHcpe3ZhciBzPUtKVVIuYXNuMS5BU04xVXRpbC5uZXdPYmplY3Qoe3NlcTpbeyJpbnQiOjF9LHtvY3RzdHI6e2hleDp3LnBydktleUhleH19LHt0YWc6WyJhMCIsdHJ1ZSx7b2lkOntuYW1lOncuY3VydmVOYW1lfX1dfSx7dGFnOlsiYTEiLHRydWUse2JpdHN0cjp7aGV4OiIwMCIrdy5wdWJLZXlIZXh9fV19XX0pO3JldHVybiBzfWZ1bmN0aW9uIG4ocyl7dmFyIHc9S0pVUi5hc24xLkFTTjFVdGlsLm5ld09iamVjdCh7c2VxOlt7ImludCI6MH0seyJpbnQiOntiaWdpbnQ6cy5wfX0seyJpbnQiOntiaWdpbnQ6cy5xfX0seyJpbnQiOntiaWdpbnQ6cy5nfX0seyJpbnQiOntiaWdpbnQ6cy55fX0seyJpbnQiOntiaWdpbnQ6cy54fX1dfSk7cmV0dXJuIHd9aWYoKCh0eXBlb2YgUlNBS2V5IT0idW5kZWZpbmVkIiYmYSBpbnN0YW5jZW9mIFJTQUtleSl8fCh0eXBlb2YgdS5EU0EhPSJ1bmRlZmluZWQiJiZhIGluc3RhbmNlb2YgdS5EU0EpfHwodHlwZW9mIHUuRUNEU0EhPSJ1bmRlZmluZWQiJiZhIGluc3RhbmNlb2YgdS5FQ0RTQSkpJiZhLmlzUHVibGljPT10cnVlJiYocj09PXVuZGVmaW5lZHx8cj09IlBLQ1M4UFVCIikpe3ZhciB0PW5ldyBLSlVSLmFzbjEueDUwOS5TdWJqZWN0UHVibGljS2V5SW5mbyhhKTt2YXIgbT10LmdldEVuY29kZWRIZXgoKTtyZXR1cm4gdi5BU04xVXRpbC5nZXRQRU1TdHJpbmdGcm9tSGV4KG0sIlBVQkxJQyBLRVkiKX1pZihyPT0iUEtDUzFQUlYiJiZ0eXBlb2YgUlNBS2V5IT0idW5kZWZpbmVkIiYmYSBpbnN0YW5jZW9mIFJTQUtleSYmKG89PT11bmRlZmluZWR8fG89PW51bGwpJiZhLmlzUHJpdmF0ZT09dHJ1ZSl7dmFyIHQ9cChhKTt2YXIgbT10LmdldEVuY29kZWRIZXgoKTtyZXR1cm4gdi5BU04xVXRpbC5nZXRQRU1TdHJpbmdGcm9tSGV4KG0sIlJTQSBQUklWQVRFIEtFWSIpfWlmKHI9PSJQS0NTMVBSViImJnR5cGVvZiBSU0FLZXkhPSJ1bmRlZmluZWQiJiZhIGluc3RhbmNlb2YgS0pVUi5jcnlwdG8uRUNEU0EmJihvPT09dW5kZWZpbmVkfHxvPT1udWxsKSYmYS5pc1ByaXZhdGU9PXRydWUpe3ZhciBmPW5ldyBLSlVSLmFzbjEuREVST2JqZWN0SWRlbnRpZmllcih7bmFtZTphLmN1cnZlTmFtZX0pO3ZhciBsPWYuZ2V0RW5jb2RlZEhleCgpO3ZhciBlPXEoYSk7dmFyIGs9ZS5nZXRFbmNvZGVkSGV4KCk7dmFyIGk9IiI7aSs9di5BU04xVXRpbC5nZXRQRU1TdHJpbmdGcm9tSGV4KGwsIkVDIFBBUkFNRVRFUlMiKTtpKz12LkFTTjFVdGlsLmdldFBFTVN0cmluZ0Zyb21IZXgoaywiRUMgUFJJVkFURSBLRVkiKTtyZXR1cm4gaX1pZihyPT0iUEtDUzFQUlYiJiZ0eXBlb2YgS0pVUi5jcnlwdG8uRFNBIT0idW5kZWZpbmVkIiYmYSBpbnN0YW5jZW9mIEtKVVIuY3J5cHRvLkRTQSYmKG89PT11bmRlZmluZWR8fG89PW51bGwpJiZhLmlzUHJpdmF0ZT09dHJ1ZSl7dmFyIHQ9bihhKTt2YXIgbT10LmdldEVuY29kZWRIZXgoKTtyZXR1cm4gdi5BU04xVXRpbC5nZXRQRU1TdHJpbmdGcm9tSGV4KG0sIkRTQSBQUklWQVRFIEtFWSIpfWlmKHI9PSJQS0NTNVBSViImJnR5cGVvZiBSU0FLZXkhPSJ1bmRlZmluZWQiJiZhIGluc3RhbmNlb2YgUlNBS2V5JiYobyE9PXVuZGVmaW5lZCYmbyE9bnVsbCkmJmEuaXNQcml2YXRlPT10cnVlKXt2YXIgdD1wKGEpO3ZhciBtPXQuZ2V0RW5jb2RlZEhleCgpO2lmKGc9PT11bmRlZmluZWQpe2c9IkRFUy1FREUzLUNCQyJ9cmV0dXJuIHRoaXMuZ2V0RW5jcnlwdGVkUEtDUzVQRU1Gcm9tUHJ2S2V5SGV4KCJSU0EiLG0sbyxnKX1pZihyPT0iUEtDUzVQUlYiJiZ0eXBlb2YgS0pVUi5jcnlwdG8uRUNEU0EhPSJ1bmRlZmluZWQiJiZhIGluc3RhbmNlb2YgS0pVUi5jcnlwdG8uRUNEU0EmJihvIT09dW5kZWZpbmVkJiZvIT1udWxsKSYmYS5pc1ByaXZhdGU9PXRydWUpe3ZhciB0PXEoYSk7dmFyIG09dC5nZXRFbmNvZGVkSGV4KCk7aWYoZz09PXVuZGVmaW5lZCl7Zz0iREVTLUVERTMtQ0JDIn1yZXR1cm4gdGhpcy5nZXRFbmNyeXB0ZWRQS0NTNVBFTUZyb21QcnZLZXlIZXgoIkVDIixtLG8sZyl9aWYocj09IlBLQ1M1UFJWIiYmdHlwZW9mIEtKVVIuY3J5cHRvLkRTQSE9InVuZGVmaW5lZCImJmEgaW5zdGFuY2VvZiBLSlVSLmNyeXB0by5EU0EmJihvIT09dW5kZWZpbmVkJiZvIT1udWxsKSYmYS5pc1ByaXZhdGU9PXRydWUpe3ZhciB0PW4oYSk7dmFyIG09dC5nZXRFbmNvZGVkSGV4KCk7aWYoZz09PXVuZGVmaW5lZCl7Zz0iREVTLUVERTMtQ0JDIn1yZXR1cm4gdGhpcy5nZXRFbmNyeXB0ZWRQS0NTNVBFTUZyb21QcnZLZXlIZXgoIkRTQSIsbSxvLGcpfXZhciBoPWZ1bmN0aW9uKHcscyl7dmFyIHk9Yih3LHMpO3ZhciB4PW5ldyBLSlVSLmFzbjEuQVNOMVV0aWwubmV3T2JqZWN0KHtzZXE6W3tzZXE6W3tvaWQ6e25hbWU6InBrY3M1UEJFUzIifX0se3NlcTpbe3NlcTpbe29pZDp7bmFtZToicGtjczVQQktERjIifX0se3NlcTpbe29jdHN0cjp7aGV4OnkucGJrZGYyU2FsdH19LHsiaW50Ijp5LnBia2RmMkl0ZXJ9XX1dfSx7c2VxOlt7b2lkOntuYW1lOiJkZXMtRURFMy1DQkMifX0se29jdHN0cjp7aGV4OnkuZW5jcnlwdGlvblNjaGVtZUlWfX1dfV19XX0se29jdHN0cjp7aGV4OnkuY2lwaGVydGV4dH19XX0pO3JldHVybiB4LmdldEVuY29kZWRIZXgoKX07dmFyIGI9ZnVuY3Rpb24oRCxFKXt2YXIgeD0xMDA7dmFyIEM9Q3J5cHRvSlMubGliLldvcmRBcnJheS5yYW5kb20oOCk7dmFyIEI9IkRFUy1FREUzLUNCQyI7dmFyIHM9Q3J5cHRvSlMubGliLldvcmRBcnJheS5yYW5kb20oOCk7dmFyIHk9Q3J5cHRvSlMuUEJLREYyKEUsQyx7a2V5U2l6ZToxOTIvMzIsaXRlcmF0aW9uczp4fSk7dmFyIHo9Q3J5cHRvSlMuZW5jLkhleC5wYXJzZShEKTt2YXIgQT1DcnlwdG9KUy5UcmlwbGVERVMuZW5jcnlwdCh6LHkse2l2OnN9KSsiIjt2YXIgdz17fTt3LmNpcGhlcnRleHQ9QTt3LnBia2RmMlNhbHQ9Q3J5cHRvSlMuZW5jLkhleC5zdHJpbmdpZnkoQyk7dy5wYmtkZjJJdGVyPXg7dy5lbmNyeXB0aW9uU2NoZW1lQWxnPUI7dy5lbmNyeXB0aW9uU2NoZW1lSVY9Q3J5cHRvSlMuZW5jLkhleC5zdHJpbmdpZnkocyk7cmV0dXJuIHd9O2lmKHI9PSJQS0NTOFBSViImJnR5cGVvZiBSU0FLZXkhPSJ1bmRlZmluZWQiJiZhIGluc3RhbmNlb2YgUlNBS2V5JiZhLmlzUHJpdmF0ZT09dHJ1ZSl7dmFyIGQ9cChhKTt2YXIgYz1kLmdldEVuY29kZWRIZXgoKTt2YXIgdD1LSlVSLmFzbjEuQVNOMVV0aWwubmV3T2JqZWN0KHtzZXE6W3siaW50IjowfSx7c2VxOlt7b2lkOntuYW1lOiJyc2FFbmNyeXB0aW9uIn19LHsibnVsbCI6dHJ1ZX1dfSx7b2N0c3RyOntoZXg6Y319XX0pO3ZhciBtPXQuZ2V0RW5jb2RlZEhleCgpO2lmKG89PT11bmRlZmluZWR8fG89PW51bGwpe3JldHVybiB2LkFTTjFVdGlsLmdldFBFTVN0cmluZ0Zyb21IZXgobSwiUFJJVkFURSBLRVkiKX1lbHNle3ZhciBrPWgobSxvKTtyZXR1cm4gdi5BU04xVXRpbC5nZXRQRU1TdHJpbmdGcm9tSGV4KGssIkVOQ1JZUFRFRCBQUklWQVRFIEtFWSIpfX1pZihyPT0iUEtDUzhQUlYiJiZ0eXBlb2YgS0pVUi5jcnlwdG8uRUNEU0EhPSJ1bmRlZmluZWQiJiZhIGluc3RhbmNlb2YgS0pVUi5jcnlwdG8uRUNEU0EmJmEuaXNQcml2YXRlPT10cnVlKXt2YXIgZD1uZXcgS0pVUi5hc24xLkFTTjFVdGlsLm5ld09iamVjdCh7c2VxOlt7ImludCI6MX0se29jdHN0cjp7aGV4OmEucHJ2S2V5SGV4fX0se3RhZzpbImExIix0cnVlLHtiaXRzdHI6e2hleDoiMDAiK2EucHViS2V5SGV4fX1dfV19KTt2YXIgYz1kLmdldEVuY29kZWRIZXgoKTt2YXIgdD1LSlVSLmFzbjEuQVNOMVV0aWwubmV3T2JqZWN0KHtzZXE6W3siaW50IjowfSx7c2VxOlt7b2lkOntuYW1lOiJlY1B1YmxpY0tleSJ9fSx7b2lkOntuYW1lOmEuY3VydmVOYW1lfX1dfSx7b2N0c3RyOntoZXg6Y319XX0pO3ZhciBtPXQuZ2V0RW5jb2RlZEhleCgpO2lmKG89PT11bmRlZmluZWR8fG89PW51bGwpe3JldHVybiB2LkFTTjFVdGlsLmdldFBFTVN0cmluZ0Zyb21IZXgobSwiUFJJVkFURSBLRVkiKX1lbHNle3ZhciBrPWgobSxvKTtyZXR1cm4gdi5BU04xVXRpbC5nZXRQRU1TdHJpbmdGcm9tSGV4KGssIkVOQ1JZUFRFRCBQUklWQVRFIEtFWSIpfX1pZihyPT0iUEtDUzhQUlYiJiZ0eXBlb2YgS0pVUi5jcnlwdG8uRFNBIT0idW5kZWZpbmVkIiYmYSBpbnN0YW5jZW9mIEtKVVIuY3J5cHRvLkRTQSYmYS5pc1ByaXZhdGU9PXRydWUpe3ZhciBkPW5ldyBLSlVSLmFzbjEuREVSSW50ZWdlcih7YmlnaW50OmEueH0pO3ZhciBjPWQuZ2V0RW5jb2RlZEhleCgpO3ZhciB0PUtKVVIuYXNuMS5BU04xVXRpbC5uZXdPYmplY3Qoe3NlcTpbeyJpbnQiOjB9LHtzZXE6W3tvaWQ6e25hbWU6ImRzYSJ9fSx7c2VxOlt7ImludCI6e2JpZ2ludDphLnB9fSx7ImludCI6e2JpZ2ludDphLnF9fSx7ImludCI6e2JpZ2ludDphLmd9fV19XX0se29jdHN0cjp7aGV4OmN9fV19KTt2YXIgbT10LmdldEVuY29kZWRIZXgoKTtpZihvPT09dW5kZWZpbmVkfHxvPT1udWxsKXtyZXR1cm4gdi5BU04xVXRpbC5nZXRQRU1TdHJpbmdGcm9tSGV4KG0sIlBSSVZBVEUgS0VZIil9ZWxzZXt2YXIgaz1oKG0sbyk7cmV0dXJuIHYuQVNOMVV0aWwuZ2V0UEVNU3RyaW5nRnJvbUhleChrLCJFTkNSWVBURUQgUFJJVkFURSBLRVkiKX19dGhyb3cidW5zdXBwb3J0ZWQgb2JqZWN0IG5vciBmb3JtYXQifTtLRVlVVElMLmdldEtleUZyb21DU1JQRU09ZnVuY3Rpb24oYil7dmFyIGE9S0VZVVRJTC5nZXRIZXhGcm9tUEVNKGIsIkNFUlRJRklDQVRFIFJFUVVFU1QiKTt2YXIgYz1LRVlVVElMLmdldEtleUZyb21DU1JIZXgoYSk7cmV0dXJuIGN9O0tFWVVUSUwuZ2V0S2V5RnJvbUNTUkhleD1mdW5jdGlvbihhKXt2YXIgYz1LRVlVVElMLnBhcnNlQ1NSSGV4KGEpO3ZhciBiPUtFWVVUSUwuZ2V0S2V5KGMucDhwdWJrZXloZXgsbnVsbCwicGtjczhwdWIiKTtyZXR1cm4gYn07S0VZVVRJTC5wYXJzZUNTUkhleD1mdW5jdGlvbihjKXt2YXIgYj17fTt2YXIgZT1jO2lmKGUuc3Vic3RyKDAsMikhPSIzMCIpe3Rocm93Im1hbGZvcm1lZCBDU1IoY29kZTowMDEpIn12YXIgZD1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihlLDApO2lmKGQubGVuZ3RoPDEpe3Rocm93Im1hbGZvcm1lZCBDU1IoY29kZTowMDIpIn1pZihlLnN1YnN0cihkWzBdLDIpIT0iMzAiKXt0aHJvdyJtYWxmb3JtZWQgQ1NSKGNvZGU6MDAzKSJ9dmFyIGE9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmooZSxkWzBdKTtpZihhLmxlbmd0aDwzKXt0aHJvdyJtYWxmb3JtZWQgQ1NSKGNvZGU6MDA0KSJ9Yi5wOHB1YmtleWhleD1BU04xSEVYLmdldEhleE9mVExWX0F0T2JqKGUsYVsyXSk7cmV0dXJuIGJ9Ow0KLyohIHJzYXBlbS0xLjEuanMgKGMpIDIwMTIgS2VuamkgVXJ1c2hpbWEgfCBranVyLmdpdGh1Yi5jb20vanNyc2FzaWduL2xpY2Vuc2UNCiAqLw0KZnVuY3Rpb24gX3JzYXBlbV9wZW1Ub0Jhc2U2NChiKXt2YXIgYT1iO2E9YS5yZXBsYWNlKCItLS0tLUJFR0lOIFJTQSBQUklWQVRFIEtFWS0tLS0tIiwiIik7YT1hLnJlcGxhY2UoIi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tIiwiIik7YT1hLnJlcGxhY2UoL1sgXG5dKy9nLCIiKTtyZXR1cm4gYX1mdW5jdGlvbiBfcnNhcGVtX2dldFBvc0FycmF5T2ZDaGlsZHJlbkZyb21IZXgoZCl7dmFyIGo9bmV3IEFycmF5KCk7dmFyIGs9QVNOMUhFWC5nZXRTdGFydFBvc09mVl9BdE9iaihkLDApO3ZhciBmPUFTTjFIRVguZ2V0UG9zT2ZOZXh0U2libGluZ19BdE9iaihkLGspO3ZhciBoPUFTTjFIRVguZ2V0UG9zT2ZOZXh0U2libGluZ19BdE9iaihkLGYpO3ZhciBiPUFTTjFIRVguZ2V0UG9zT2ZOZXh0U2libGluZ19BdE9iaihkLGgpO3ZhciBsPUFTTjFIRVguZ2V0UG9zT2ZOZXh0U2libGluZ19BdE9iaihkLGIpO3ZhciBlPUFTTjFIRVguZ2V0UG9zT2ZOZXh0U2libGluZ19BdE9iaihkLGwpO3ZhciBnPUFTTjFIRVguZ2V0UG9zT2ZOZXh0U2libGluZ19BdE9iaihkLGUpO3ZhciBjPUFTTjFIRVguZ2V0UG9zT2ZOZXh0U2libGluZ19BdE9iaihkLGcpO3ZhciBpPUFTTjFIRVguZ2V0UG9zT2ZOZXh0U2libGluZ19BdE9iaihkLGMpO2oucHVzaChrLGYsaCxiLGwsZSxnLGMsaSk7cmV0dXJuIGp9ZnVuY3Rpb24gX3JzYXBlbV9nZXRIZXhWYWx1ZUFycmF5T2ZDaGlsZHJlbkZyb21IZXgoaSl7dmFyIG89X3JzYXBlbV9nZXRQb3NBcnJheU9mQ2hpbGRyZW5Gcm9tSGV4KGkpO3ZhciByPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGksb1swXSk7dmFyIGY9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooaSxvWzFdKTt2YXIgaj1BU04xSEVYLmdldEhleE9mVl9BdE9iaihpLG9bMl0pO3ZhciBrPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGksb1szXSk7dmFyIGM9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooaSxvWzRdKTt2YXIgYj1BU04xSEVYLmdldEhleE9mVl9BdE9iaihpLG9bNV0pO3ZhciBoPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGksb1s2XSk7dmFyIGc9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooaSxvWzddKTt2YXIgbD1BU04xSEVYLmdldEhleE9mVl9BdE9iaihpLG9bOF0pO3ZhciBtPW5ldyBBcnJheSgpO20ucHVzaChyLGYsaixrLGMsYixoLGcsbCk7cmV0dXJuIG19ZnVuY3Rpb24gX3JzYXBlbV9yZWFkUHJpdmF0ZUtleUZyb21BU04xSGV4U3RyaW5nKGMpe3ZhciBiPV9yc2FwZW1fZ2V0SGV4VmFsdWVBcnJheU9mQ2hpbGRyZW5Gcm9tSGV4KGMpO3RoaXMuc2V0UHJpdmF0ZUV4KGJbMV0sYlsyXSxiWzNdLGJbNF0sYls1XSxiWzZdLGJbN10sYls4XSl9ZnVuY3Rpb24gX3JzYXBlbV9yZWFkUHJpdmF0ZUtleUZyb21QRU1TdHJpbmcoZSl7dmFyIGM9X3JzYXBlbV9wZW1Ub0Jhc2U2NChlKTt2YXIgZD1iNjR0b2hleChjKTt2YXIgYj1fcnNhcGVtX2dldEhleFZhbHVlQXJyYXlPZkNoaWxkcmVuRnJvbUhleChkKTt0aGlzLnNldFByaXZhdGVFeChiWzFdLGJbMl0sYlszXSxiWzRdLGJbNV0sYls2XSxiWzddLGJbOF0pfVJTQUtleS5wcm90b3R5cGUucmVhZFByaXZhdGVLZXlGcm9tUEVNU3RyaW5nPV9yc2FwZW1fcmVhZFByaXZhdGVLZXlGcm9tUEVNU3RyaW5nO1JTQUtleS5wcm90b3R5cGUucmVhZFByaXZhdGVLZXlGcm9tQVNOMUhleFN0cmluZz1fcnNhcGVtX3JlYWRQcml2YXRlS2V5RnJvbUFTTjFIZXhTdHJpbmc7DQovKiEgcnNhc2lnbi0xLjIuNy5qcyAoYykgMjAxMiBLZW5qaSBVcnVzaGltYSB8IGtqdXIuZ2l0aHViLmNvbS9qc3JzYXNpZ24vbGljZW5zZQ0KICovDQp2YXIgX1JFX0hFWERFQ09OTFk9bmV3IFJlZ0V4cCgiIik7X1JFX0hFWERFQ09OTFkuY29tcGlsZSgiW14wLTlhLWZdIiwiZ2kiKTtmdW5jdGlvbiBfcnNhc2lnbl9nZXRIZXhQYWRkZWREaWdlc3RJbmZvRm9yU3RyaW5nKGQsZSxhKXt2YXIgYj1mdW5jdGlvbihmKXtyZXR1cm4gS0pVUi5jcnlwdG8uVXRpbC5oYXNoU3RyaW5nKGYsYSl9O3ZhciBjPWIoZCk7cmV0dXJuIEtKVVIuY3J5cHRvLlV0aWwuZ2V0UGFkZGVkRGlnZXN0SW5mb0hleChjLGEsZSl9ZnVuY3Rpb24gX3plcm9QYWRkaW5nT2ZTaWduYXR1cmUoZSxkKXt2YXIgYz0iIjt2YXIgYT1kLzQtZS5sZW5ndGg7Zm9yKHZhciBiPTA7YjxhO2IrKyl7Yz1jKyIwIn1yZXR1cm4gYytlfWZ1bmN0aW9uIF9yc2FzaWduX3NpZ25TdHJpbmcoZCxhKXt2YXIgYj1mdW5jdGlvbihlKXtyZXR1cm4gS0pVUi5jcnlwdG8uVXRpbC5oYXNoU3RyaW5nKGUsYSl9O3ZhciBjPWIoZCk7cmV0dXJuIHRoaXMuc2lnbldpdGhNZXNzYWdlSGFzaChjLGEpfWZ1bmN0aW9uIF9yc2FzaWduX3NpZ25XaXRoTWVzc2FnZUhhc2goZSxjKXt2YXIgZj1LSlVSLmNyeXB0by5VdGlsLmdldFBhZGRlZERpZ2VzdEluZm9IZXgoZSxjLHRoaXMubi5iaXRMZW5ndGgoKSk7dmFyIGI9cGFyc2VCaWdJbnQoZiwxNik7dmFyIGQ9dGhpcy5kb1ByaXZhdGUoYik7dmFyIGE9ZC50b1N0cmluZygxNik7cmV0dXJuIF96ZXJvUGFkZGluZ09mU2lnbmF0dXJlKGEsdGhpcy5uLmJpdExlbmd0aCgpKX1mdW5jdGlvbiBfcnNhc2lnbl9zaWduU3RyaW5nV2l0aFNIQTEoYSl7cmV0dXJuIF9yc2FzaWduX3NpZ25TdHJpbmcuY2FsbCh0aGlzLGEsInNoYTEiKX1mdW5jdGlvbiBfcnNhc2lnbl9zaWduU3RyaW5nV2l0aFNIQTI1NihhKXtyZXR1cm4gX3JzYXNpZ25fc2lnblN0cmluZy5jYWxsKHRoaXMsYSwic2hhMjU2Iil9ZnVuY3Rpb24gcHNzX21nZjFfc3RyKGMsYSxlKXt2YXIgYj0iIixkPTA7d2hpbGUoYi5sZW5ndGg8YSl7Yis9aGV4dG9yc3RyKGUocnN0cnRvaGV4KGMrU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsWyhkJjQyNzgxOTAwODApPj4yNCwoZCYxNjcxMTY4MCk+PjE2LChkJjY1MjgwKT4+OCxkJjI1NV0pKSkpO2QrPTF9cmV0dXJuIGJ9ZnVuY3Rpb24gX3JzYXNpZ25fc2lnblN0cmluZ1BTUyhlLGEsZCl7dmFyIGM9ZnVuY3Rpb24oZil7cmV0dXJuIEtKVVIuY3J5cHRvLlV0aWwuaGFzaEhleChmLGEpfTt2YXIgYj1jKHJzdHJ0b2hleChlKSk7aWYoZD09PXVuZGVmaW5lZCl7ZD0tMX1yZXR1cm4gdGhpcy5zaWduV2l0aE1lc3NhZ2VIYXNoUFNTKGIsYSxkKX1mdW5jdGlvbiBfcnNhc2lnbl9zaWduV2l0aE1lc3NhZ2VIYXNoUFNTKGwsYSxrKXt2YXIgYj1oZXh0b3JzdHIobCk7dmFyIGc9Yi5sZW5ndGg7dmFyIG09dGhpcy5uLmJpdExlbmd0aCgpLTE7dmFyIGM9TWF0aC5jZWlsKG0vOCk7dmFyIGQ7dmFyIG89ZnVuY3Rpb24oaSl7cmV0dXJuIEtKVVIuY3J5cHRvLlV0aWwuaGFzaEhleChpLGEpfTtpZihrPT09LTF8fGs9PT11bmRlZmluZWQpe2s9Z31lbHNle2lmKGs9PT0tMil7az1jLWctMn1lbHNle2lmKGs8LTIpe3Rocm93ImludmFsaWQgc2FsdCBsZW5ndGgifX19aWYoYzwoZytrKzIpKXt0aHJvdyJkYXRhIHRvbyBsb25nIn12YXIgZj0iIjtpZihrPjApe2Y9bmV3IEFycmF5KGspO25ldyBTZWN1cmVSYW5kb20oKS5uZXh0Qnl0ZXMoZik7Zj1TdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyxmKX12YXIgbj1oZXh0b3JzdHIobyhyc3RydG9oZXgoIlx4MDBceDAwXHgwMFx4MDBceDAwXHgwMFx4MDBceDAwIitiK2YpKSk7dmFyIGo9W107Zm9yKGQ9MDtkPGMtay1nLTI7ZCs9MSl7altkXT0wfXZhciBlPVN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLGopKyJceDAxIitmO3ZhciBoPXBzc19tZ2YxX3N0cihuLGUubGVuZ3RoLG8pO3ZhciBxPVtdO2ZvcihkPTA7ZDxlLmxlbmd0aDtkKz0xKXtxW2RdPWUuY2hhckNvZGVBdChkKV5oLmNoYXJDb2RlQXQoZCl9dmFyIHA9KDY1MjgwPj4oOCpjLW0pKSYyNTU7cVswXSY9fnA7Zm9yKGQ9MDtkPGc7ZCsrKXtxLnB1c2gobi5jaGFyQ29kZUF0KGQpKX1xLnB1c2goMTg4KTtyZXR1cm4gX3plcm9QYWRkaW5nT2ZTaWduYXR1cmUodGhpcy5kb1ByaXZhdGUobmV3IEJpZ0ludGVnZXIocSkpLnRvU3RyaW5nKDE2KSx0aGlzLm4uYml0TGVuZ3RoKCkpfWZ1bmN0aW9uIF9yc2FzaWduX2dldERlY3J5cHRTaWduYXR1cmVCSShhLGQsYyl7dmFyIGI9bmV3IFJTQUtleSgpO2Iuc2V0UHVibGljKGQsYyk7dmFyIGU9Yi5kb1B1YmxpYyhhKTtyZXR1cm4gZX1mdW5jdGlvbiBfcnNhc2lnbl9nZXRIZXhEaWdlc3RJbmZvRnJvbVNpZyhhLGMsYil7dmFyIGU9X3JzYXNpZ25fZ2V0RGVjcnlwdFNpZ25hdHVyZUJJKGEsYyxiKTt2YXIgZD1lLnRvU3RyaW5nKDE2KS5yZXBsYWNlKC9eMWYrMDAvLCIiKTtyZXR1cm4gZH1mdW5jdGlvbiBfcnNhc2lnbl9nZXRBbGdOYW1lQW5kSGFzaEZyb21IZXhEaXNnZXN0SW5mbyhmKXtmb3IodmFyIGUgaW4gS0pVUi5jcnlwdG8uVXRpbC5ESUdFU1RJTkZPSEVBRCl7dmFyIGQ9S0pVUi5jcnlwdG8uVXRpbC5ESUdFU1RJTkZPSEVBRFtlXTt2YXIgYj1kLmxlbmd0aDtpZihmLnN1YnN0cmluZygwLGIpPT1kKXt2YXIgYz1bZSxmLnN1YnN0cmluZyhiKV07cmV0dXJuIGN9fXJldHVybltdfWZ1bmN0aW9uIF9yc2FzaWduX3ZlcmlmeVNpZ25hdHVyZVdpdGhBcmdzKGYsYixnLGope3ZhciBlPV9yc2FzaWduX2dldEhleERpZ2VzdEluZm9Gcm9tU2lnKGIsZyxqKTt2YXIgaD1fcnNhc2lnbl9nZXRBbGdOYW1lQW5kSGFzaEZyb21IZXhEaXNnZXN0SW5mbyhlKTtpZihoLmxlbmd0aD09MCl7cmV0dXJuIGZhbHNlfXZhciBkPWhbMF07dmFyIGk9aFsxXTt2YXIgYT1mdW5jdGlvbihrKXtyZXR1cm4gS0pVUi5jcnlwdG8uVXRpbC5oYXNoU3RyaW5nKGssZCl9O3ZhciBjPWEoZik7cmV0dXJuKGk9PWMpfWZ1bmN0aW9uIF9yc2FzaWduX3ZlcmlmeUhleFNpZ25hdHVyZUZvck1lc3NhZ2UoYyxiKXt2YXIgZD1wYXJzZUJpZ0ludChjLDE2KTt2YXIgYT1fcnNhc2lnbl92ZXJpZnlTaWduYXR1cmVXaXRoQXJncyhiLGQsdGhpcy5uLnRvU3RyaW5nKDE2KSx0aGlzLmUudG9TdHJpbmcoMTYpKTtyZXR1cm4gYX1mdW5jdGlvbiBfcnNhc2lnbl92ZXJpZnlTdHJpbmcoZixqKXtqPWoucmVwbGFjZShfUkVfSEVYREVDT05MWSwiIik7aj1qLnJlcGxhY2UoL1sgXG5dKy9nLCIiKTt2YXIgYj1wYXJzZUJpZ0ludChqLDE2KTtpZihiLmJpdExlbmd0aCgpPnRoaXMubi5iaXRMZW5ndGgoKSl7cmV0dXJuIDB9dmFyIGk9dGhpcy5kb1B1YmxpYyhiKTt2YXIgZT1pLnRvU3RyaW5nKDE2KS5yZXBsYWNlKC9eMWYrMDAvLCIiKTt2YXIgZz1fcnNhc2lnbl9nZXRBbGdOYW1lQW5kSGFzaEZyb21IZXhEaXNnZXN0SW5mbyhlKTtpZihnLmxlbmd0aD09MCl7cmV0dXJuIGZhbHNlfXZhciBkPWdbMF07dmFyIGg9Z1sxXTt2YXIgYT1mdW5jdGlvbihrKXtyZXR1cm4gS0pVUi5jcnlwdG8uVXRpbC5oYXNoU3RyaW5nKGssZCl9O3ZhciBjPWEoZik7cmV0dXJuKGg9PWMpfWZ1bmN0aW9uIF9yc2FzaWduX3ZlcmlmeVdpdGhNZXNzYWdlSGFzaChlLGEpe2E9YS5yZXBsYWNlKF9SRV9IRVhERUNPTkxZLCIiKTthPWEucmVwbGFjZSgvWyBcbl0rL2csIiIpO3ZhciBiPXBhcnNlQmlnSW50KGEsMTYpO2lmKGIuYml0TGVuZ3RoKCk+dGhpcy5uLmJpdExlbmd0aCgpKXtyZXR1cm4gMH12YXIgaD10aGlzLmRvUHVibGljKGIpO3ZhciBnPWgudG9TdHJpbmcoMTYpLnJlcGxhY2UoL14xZiswMC8sIiIpO3ZhciBjPV9yc2FzaWduX2dldEFsZ05hbWVBbmRIYXNoRnJvbUhleERpc2dlc3RJbmZvKGcpO2lmKGMubGVuZ3RoPT0wKXtyZXR1cm4gZmFsc2V9dmFyIGQ9Y1swXTt2YXIgZj1jWzFdO3JldHVybihmPT1lKX1mdW5jdGlvbiBfcnNhc2lnbl92ZXJpZnlTdHJpbmdQU1MoYyxiLGEsZil7dmFyIGU9ZnVuY3Rpb24oZyl7cmV0dXJuIEtKVVIuY3J5cHRvLlV0aWwuaGFzaEhleChnLGEpfTt2YXIgZD1lKHJzdHJ0b2hleChjKSk7aWYoZj09PXVuZGVmaW5lZCl7Zj0tMX1yZXR1cm4gdGhpcy52ZXJpZnlXaXRoTWVzc2FnZUhhc2hQU1MoZCxiLGEsZil9ZnVuY3Rpb24gX3JzYXNpZ25fdmVyaWZ5V2l0aE1lc3NhZ2VIYXNoUFNTKGYscyxsLGMpe3ZhciBrPW5ldyBCaWdJbnRlZ2VyKHMsMTYpO2lmKGsuYml0TGVuZ3RoKCk+dGhpcy5uLmJpdExlbmd0aCgpKXtyZXR1cm4gZmFsc2V9dmFyIHI9ZnVuY3Rpb24oaSl7cmV0dXJuIEtKVVIuY3J5cHRvLlV0aWwuaGFzaEhleChpLGwpfTt2YXIgaj1oZXh0b3JzdHIoZik7dmFyIGg9ai5sZW5ndGg7dmFyIGc9dGhpcy5uLmJpdExlbmd0aCgpLTE7dmFyIG09TWF0aC5jZWlsKGcvOCk7dmFyIHE7aWYoYz09PS0xfHxjPT09dW5kZWZpbmVkKXtjPWh9ZWxzZXtpZihjPT09LTIpe2M9bS1oLTJ9ZWxzZXtpZihjPC0yKXt0aHJvdyJpbnZhbGlkIHNhbHQgbGVuZ3RoIn19fWlmKG08KGgrYysyKSl7dGhyb3ciZGF0YSB0b28gbG9uZyJ9dmFyIGE9dGhpcy5kb1B1YmxpYyhrKS50b0J5dGVBcnJheSgpO2ZvcihxPTA7cTxhLmxlbmd0aDtxKz0xKXthW3FdJj0yNTV9d2hpbGUoYS5sZW5ndGg8bSl7YS51bnNoaWZ0KDApfWlmKGFbbS0xXSE9PTE4OCl7dGhyb3ciZW5jb2RlZCBtZXNzYWdlIGRvZXMgbm90IGVuZCBpbiAweGJjIn1hPVN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLGEpO3ZhciBkPWEuc3Vic3RyKDAsbS1oLTEpO3ZhciBlPWEuc3Vic3RyKGQubGVuZ3RoLGgpO3ZhciBwPSg2NTI4MD4+KDgqbS1nKSkmMjU1O2lmKChkLmNoYXJDb2RlQXQoMCkmcCkhPT0wKXt0aHJvdyJiaXRzIGJleW9uZCBrZXlzaXplIG5vdCB6ZXJvIn12YXIgbj1wc3NfbWdmMV9zdHIoZSxkLmxlbmd0aCxyKTt2YXIgbz1bXTtmb3IocT0wO3E8ZC5sZW5ndGg7cSs9MSl7b1txXT1kLmNoYXJDb2RlQXQocSlebi5jaGFyQ29kZUF0KHEpfW9bMF0mPX5wO3ZhciBiPW0taC1jLTI7Zm9yKHE9MDtxPGI7cSs9MSl7aWYob1txXSE9PTApe3Rocm93ImxlZnRtb3N0IG9jdGV0cyBub3QgemVybyJ9fWlmKG9bYl0hPT0xKXt0aHJvdyIweDAxIG1hcmtlciBub3QgZm91bmQifXJldHVybiBlPT09aGV4dG9yc3RyKHIocnN0cnRvaGV4KCJceDAwXHgwMFx4MDBceDAwXHgwMFx4MDBceDAwXHgwMCIraitTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyxvLnNsaWNlKC1jKSkpKSl9UlNBS2V5LnByb3RvdHlwZS5zaWduV2l0aE1lc3NhZ2VIYXNoPV9yc2FzaWduX3NpZ25XaXRoTWVzc2FnZUhhc2g7UlNBS2V5LnByb3RvdHlwZS5zaWduU3RyaW5nPV9yc2FzaWduX3NpZ25TdHJpbmc7UlNBS2V5LnByb3RvdHlwZS5zaWduU3RyaW5nV2l0aFNIQTE9X3JzYXNpZ25fc2lnblN0cmluZ1dpdGhTSEExO1JTQUtleS5wcm90b3R5cGUuc2lnblN0cmluZ1dpdGhTSEEyNTY9X3JzYXNpZ25fc2lnblN0cmluZ1dpdGhTSEEyNTY7UlNBS2V5LnByb3RvdHlwZS5zaWduPV9yc2FzaWduX3NpZ25TdHJpbmc7UlNBS2V5LnByb3RvdHlwZS5zaWduV2l0aFNIQTE9X3JzYXNpZ25fc2lnblN0cmluZ1dpdGhTSEExO1JTQUtleS5wcm90b3R5cGUuc2lnbldpdGhTSEEyNTY9X3JzYXNpZ25fc2lnblN0cmluZ1dpdGhTSEEyNTY7UlNBS2V5LnByb3RvdHlwZS5zaWduV2l0aE1lc3NhZ2VIYXNoUFNTPV9yc2FzaWduX3NpZ25XaXRoTWVzc2FnZUhhc2hQU1M7UlNBS2V5LnByb3RvdHlwZS5zaWduU3RyaW5nUFNTPV9yc2FzaWduX3NpZ25TdHJpbmdQU1M7UlNBS2V5LnByb3RvdHlwZS5zaWduUFNTPV9yc2FzaWduX3NpZ25TdHJpbmdQU1M7UlNBS2V5LlNBTFRfTEVOX0hMRU49LTE7UlNBS2V5LlNBTFRfTEVOX01BWD0tMjtSU0FLZXkucHJvdG90eXBlLnZlcmlmeVdpdGhNZXNzYWdlSGFzaD1fcnNhc2lnbl92ZXJpZnlXaXRoTWVzc2FnZUhhc2g7UlNBS2V5LnByb3RvdHlwZS52ZXJpZnlTdHJpbmc9X3JzYXNpZ25fdmVyaWZ5U3RyaW5nO1JTQUtleS5wcm90b3R5cGUudmVyaWZ5SGV4U2lnbmF0dXJlRm9yTWVzc2FnZT1fcnNhc2lnbl92ZXJpZnlIZXhTaWduYXR1cmVGb3JNZXNzYWdlO1JTQUtleS5wcm90b3R5cGUudmVyaWZ5PV9yc2FzaWduX3ZlcmlmeVN0cmluZztSU0FLZXkucHJvdG90eXBlLnZlcmlmeUhleFNpZ25hdHVyZUZvckJ5dGVBcnJheU1lc3NhZ2U9X3JzYXNpZ25fdmVyaWZ5SGV4U2lnbmF0dXJlRm9yTWVzc2FnZTtSU0FLZXkucHJvdG90eXBlLnZlcmlmeVdpdGhNZXNzYWdlSGFzaFBTUz1fcnNhc2lnbl92ZXJpZnlXaXRoTWVzc2FnZUhhc2hQU1M7UlNBS2V5LnByb3RvdHlwZS52ZXJpZnlTdHJpbmdQU1M9X3JzYXNpZ25fdmVyaWZ5U3RyaW5nUFNTO1JTQUtleS5wcm90b3R5cGUudmVyaWZ5UFNTPV9yc2FzaWduX3ZlcmlmeVN0cmluZ1BTUztSU0FLZXkuU0FMVF9MRU5fUkVDT1ZFUj0tMjsNCi8qISB4NTA5LTEuMS45LmpzIChjKSAyMDEyLTIwMTYgS2VuamkgVXJ1c2hpbWEgfCBranVyLmdpdGh1Yi5jb20vanNyc2FzaWduL2xpY2Vuc2UNCiAqLw0KZnVuY3Rpb24gWDUwOSgpe3RoaXMuc3ViamVjdFB1YmxpY0tleVJTQT1udWxsO3RoaXMuc3ViamVjdFB1YmxpY0tleVJTQV9oTj1udWxsO3RoaXMuc3ViamVjdFB1YmxpY0tleVJTQV9oRT1udWxsO3RoaXMuaGV4PW51bGw7dGhpcy5nZXRTZXJpYWxOdW1iZXJIZXg9ZnVuY3Rpb24oKXtyZXR1cm4gQVNOMUhFWC5nZXREZWNlbmRhbnRIZXhWQnlOdGhMaXN0KHRoaXMuaGV4LDAsWzAsMV0pfTt0aGlzLmdldFNpZ25hdHVyZUFsZ29yaXRobUZpZWxkPWZ1bmN0aW9uKCl7dmFyIGI9QVNOMUhFWC5nZXREZWNlbmRhbnRIZXhWQnlOdGhMaXN0KHRoaXMuaGV4LDAsWzAsMiwwXSk7dmFyIGE9S0pVUi5hc24xLkFTTjFVdGlsLm9pZEhleFRvSW50KGIpO3ZhciBjPUtKVVIuYXNuMS54NTA5Lk9JRC5vaWQybmFtZShhKTtyZXR1cm4gY307dGhpcy5nZXRJc3N1ZXJIZXg9ZnVuY3Rpb24oKXtyZXR1cm4gQVNOMUhFWC5nZXREZWNlbmRhbnRIZXhUTFZCeU50aExpc3QodGhpcy5oZXgsMCxbMCwzXSl9O3RoaXMuZ2V0SXNzdWVyU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIFg1MDkuaGV4MmRuKEFTTjFIRVguZ2V0RGVjZW5kYW50SGV4VExWQnlOdGhMaXN0KHRoaXMuaGV4LDAsWzAsM10pKX07dGhpcy5nZXRTdWJqZWN0SGV4PWZ1bmN0aW9uKCl7cmV0dXJuIEFTTjFIRVguZ2V0RGVjZW5kYW50SGV4VExWQnlOdGhMaXN0KHRoaXMuaGV4LDAsWzAsNV0pfTt0aGlzLmdldFN1YmplY3RTdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gWDUwOS5oZXgyZG4oQVNOMUhFWC5nZXREZWNlbmRhbnRIZXhUTFZCeU50aExpc3QodGhpcy5oZXgsMCxbMCw1XSkpfTt0aGlzLmdldE5vdEJlZm9yZT1mdW5jdGlvbigpe3ZhciBhPUFTTjFIRVguZ2V0RGVjZW5kYW50SGV4VkJ5TnRoTGlzdCh0aGlzLmhleCwwLFswLDQsMF0pO2E9YS5yZXBsYWNlKC8oLi4pL2csIiUkMSIpO2E9ZGVjb2RlVVJJQ29tcG9uZW50KGEpO3JldHVybiBhfTt0aGlzLmdldE5vdEFmdGVyPWZ1bmN0aW9uKCl7dmFyIGE9QVNOMUhFWC5nZXREZWNlbmRhbnRIZXhWQnlOdGhMaXN0KHRoaXMuaGV4LDAsWzAsNCwxXSk7YT1hLnJlcGxhY2UoLyguLikvZywiJSQxIik7YT1kZWNvZGVVUklDb21wb25lbnQoYSk7cmV0dXJuIGF9O3RoaXMucmVhZENlcnRQRU09ZnVuY3Rpb24oYyl7dmFyIGU9WDUwOS5wZW1Ub0hleChjKTt2YXIgYj1YNTA5LmdldFB1YmxpY0tleUhleEFycmF5RnJvbUNlcnRIZXgoZSk7dmFyIGQ9bmV3IFJTQUtleSgpO2Quc2V0UHVibGljKGJbMF0sYlsxXSk7dGhpcy5zdWJqZWN0UHVibGljS2V5UlNBPWQ7dGhpcy5zdWJqZWN0UHVibGljS2V5UlNBX2hOPWJbMF07dGhpcy5zdWJqZWN0UHVibGljS2V5UlNBX2hFPWJbMV07dGhpcy5oZXg9ZX07dGhpcy5yZWFkQ2VydFBFTVdpdGhvdXRSU0FJbml0PWZ1bmN0aW9uKGMpe3ZhciBkPVg1MDkucGVtVG9IZXgoYyk7dmFyIGI9WDUwOS5nZXRQdWJsaWNLZXlIZXhBcnJheUZyb21DZXJ0SGV4KGQpO3RoaXMuc3ViamVjdFB1YmxpY0tleVJTQS5zZXRQdWJsaWMoYlswXSxiWzFdKTt0aGlzLnN1YmplY3RQdWJsaWNLZXlSU0FfaE49YlswXTt0aGlzLnN1YmplY3RQdWJsaWNLZXlSU0FfaEU9YlsxXTt0aGlzLmhleD1kfTt0aGlzLmdldEluZm89ZnVuY3Rpb24oKXt2YXIgcD0iQmFzaWMgRmllbGRzXG4iO3ArPSIgIHNlcmlhbCBudW1iZXI6ICIrdGhpcy5nZXRTZXJpYWxOdW1iZXJIZXgoKSsiXG4iO3ArPSIgIHNpZ25hdHVyZSBhbGdvcml0aG06ICIrdGhpcy5nZXRTaWduYXR1cmVBbGdvcml0aG1GaWVsZCgpKyJcbiI7cCs9IiAgaXNzdWVyOiAiK3RoaXMuZ2V0SXNzdWVyU3RyaW5nKCkrIlxuIjtwKz0iICBub3RCZWZvcmU6ICIrdGhpcy5nZXROb3RCZWZvcmUoKSsiXG4iO3ArPSIgIG5vdEFmdGVyOiAiK3RoaXMuZ2V0Tm90QWZ0ZXIoKSsiXG4iO3ArPSIgIHN1YmplY3Q6ICIrdGhpcy5nZXRTdWJqZWN0U3RyaW5nKCkrIlxuIjtwKz0iICBzdWJqZWN0IHB1YmxpYyBrZXkgaW5mbzogXG4iO3ZhciBqPVg1MDkuZ2V0U3ViamVjdFB1YmxpY0tleUluZm9Qb3NGcm9tQ2VydEhleCh0aGlzLmhleCk7dmFyIGQ9QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaih0aGlzLmhleCxqKTt2YXIgbj1LRVlVVElMLmdldEtleShkLG51bGwsInBrY3M4cHViIik7aWYobiBpbnN0YW5jZW9mIFJTQUtleSl7cCs9IiAgICBrZXkgYWxnb3JpdGhtOiBSU0FcbiI7cCs9IiAgICBuPSIrbi5uLnRvU3RyaW5nKDE2KS5zdWJzdHIoMCwxNikrIi4uLlxuIjtwKz0iICAgIGU9IituLmUudG9TdHJpbmcoMTYpKyJcbiJ9cCs9Ilg1MDl2MyBFeHRlbnNpb25zOlxuIjt2YXIgbT1YNTA5LmdldFYzRXh0SW5mb0xpc3RPZkNlcnRIZXgodGhpcy5oZXgpO2Zvcih2YXIgZT0wO2U8bS5sZW5ndGg7ZSsrKXt2YXIgYj1tW2VdO3ZhciBvPUtKVVIuYXNuMS54NTA5Lk9JRC5vaWQybmFtZShiLm9pZCk7aWYobz09PSIiKXtvPWIub2lkfXZhciBrPSIiO2lmKGIuY3JpdGljYWw9PT10cnVlKXtrPSJDUklUSUNBTCJ9cCs9IiAgIitvKyIgIitrKyI6XG4iO2lmKG89PT0iYmFzaWNDb25zdHJhaW50cyIpe3ZhciBnPVg1MDkuZ2V0RXh0QmFzaWNDb25zdHJhaW50cyh0aGlzLmhleCk7aWYoZy5jQT09PXVuZGVmaW5lZCl7cCs9IiAgICB7fVxuIn1lbHNle3ArPSIgICAgY0E9dHJ1ZSI7aWYoZy5wYXRoTGVuIT09dW5kZWZpbmVkKXtwKz0iLCBwYXRoTGVuPSIrZy5wYXRoTGVufXArPSJcbiJ9fWVsc2V7aWYobz09PSJrZXlVc2FnZSIpe3ArPSIgICAgIitYNTA5LmdldEV4dEtleVVzYWdlU3RyaW5nKHRoaXMuaGV4KSsiXG4ifWVsc2V7aWYobz09PSJzdWJqZWN0S2V5SWRlbnRpZmllciIpe3ArPSIgICAgIitYNTA5LmdldEV4dFN1YmplY3RLZXlJZGVudGlmaWVyKHRoaXMuaGV4KSsiXG4ifWVsc2V7aWYobz09PSJhdXRob3JpdHlLZXlJZGVudGlmaWVyIil7dmFyIGE9WDUwOS5nZXRFeHRBdXRob3JpdHlLZXlJZGVudGlmaWVyKHRoaXMuaGV4KTtpZihhLmtpZCE9PXVuZGVmaW5lZCl7cCs9IiAgICBraWQ9IithLmtpZCsiXG4ifX1lbHNle2lmKG89PT0iZXh0S2V5VXNhZ2UiKXt2YXIgaD1YNTA5LmdldEV4dEV4dEtleVVzYWdlTmFtZSh0aGlzLmhleCk7cCs9IiAgICAiK2guam9pbigiLCAiKSsiXG4ifWVsc2V7aWYobz09PSJzdWJqZWN0QWx0TmFtZSIpe3ZhciBmPVg1MDkuZ2V0RXh0U3ViamVjdEFsdE5hbWUodGhpcy5oZXgpO3ArPSIgICAgIitmLmpvaW4oIiwgIikrIlxuIn1lbHNle2lmKG89PT0iY1JMRGlzdHJpYnV0aW9uUG9pbnRzIil7dmFyIGw9WDUwOS5nZXRFeHRDUkxEaXN0cmlidXRpb25Qb2ludHNVUkkodGhpcy5oZXgpO3ArPSIgICAgIitsKyJcbiJ9ZWxzZXtpZihvPT09ImF1dGhvcml0eUluZm9BY2Nlc3MiKXt2YXIgYz1YNTA5LmdldEV4dEFJQUluZm8odGhpcy5oZXgpO2lmKGMub2NzcCE9PXVuZGVmaW5lZCl7cCs9IiAgICBvY3NwOiAiK2Mub2NzcC5qb2luKCIsIikrIlxuIn1pZihjLmNhaXNzdWVyIT09dW5kZWZpbmVkKXtwKz0iICAgIGNhaXNzdWVyOiAiK2MuY2Fpc3N1ZXIuam9pbigiLCIpKyJcbiJ9fX19fX19fX19cCs9InNpZ25hdHVyZSBhbGdvcml0aG06ICIrWDUwOS5nZXRTaWduYXR1cmVBbGdvcml0aG1OYW1lKHRoaXMuaGV4KSsiXG4iO3ArPSJzaWduYXR1cmU6ICIrWDUwOS5nZXRTaWduYXR1cmVWYWx1ZUhleCh0aGlzLmhleCkuc3Vic3RyKDAsMTYpKyIuLi5cbiI7cmV0dXJuIHB9fVg1MDkucGVtVG9CYXNlNjQ9ZnVuY3Rpb24oYSl7dmFyIGI9YTtiPWIucmVwbGFjZSgiLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tIiwiIik7Yj1iLnJlcGxhY2UoIi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0iLCIiKTtiPWIucmVwbGFjZSgvWyBcbl0rL2csIiIpO3JldHVybiBifTtYNTA5LnBlbVRvSGV4PWZ1bmN0aW9uKGEpe3ZhciBjPVg1MDkucGVtVG9CYXNlNjQoYSk7dmFyIGI9YjY0dG9oZXgoYyk7cmV0dXJuIGJ9O1g1MDkuZ2V0U3ViamVjdFB1YmxpY0tleVBvc0Zyb21DZXJ0SGV4PWZ1bmN0aW9uKGYpe3ZhciBlPVg1MDkuZ2V0U3ViamVjdFB1YmxpY0tleUluZm9Qb3NGcm9tQ2VydEhleChmKTtpZihlPT0tMSl7cmV0dXJuIC0xfXZhciBiPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKGYsZSk7aWYoYi5sZW5ndGghPTIpe3JldHVybiAtMX12YXIgZD1iWzFdO2lmKGYuc3Vic3RyaW5nKGQsZCsyKSE9IjAzIil7cmV0dXJuIC0xfXZhciBjPUFTTjFIRVguZ2V0U3RhcnRQb3NPZlZfQXRPYmooZixkKTtpZihmLnN1YnN0cmluZyhjLGMrMikhPSIwMCIpe3JldHVybiAtMX1yZXR1cm4gYysyfTtYNTA5LmdldFN1YmplY3RQdWJsaWNLZXlJbmZvUG9zRnJvbUNlcnRIZXg9ZnVuY3Rpb24oZCl7dmFyIGM9QVNOMUhFWC5nZXRTdGFydFBvc09mVl9BdE9iaihkLDApO3ZhciBiPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKGQsYyk7aWYoYi5sZW5ndGg8MSl7cmV0dXJuIC0xfWlmKGQuc3Vic3RyaW5nKGJbMF0sYlswXSsxMCk9PSJhMDAzMDIwMTAyIil7aWYoYi5sZW5ndGg8Nil7cmV0dXJuIC0xfXJldHVybiBiWzZdfWVsc2V7aWYoYi5sZW5ndGg8NSl7cmV0dXJuIC0xfXJldHVybiBiWzVdfX07WDUwOS5nZXRQdWJsaWNLZXlIZXhBcnJheUZyb21DZXJ0SGV4PWZ1bmN0aW9uKGYpe3ZhciBlPVg1MDkuZ2V0U3ViamVjdFB1YmxpY0tleVBvc0Zyb21DZXJ0SGV4KGYpO3ZhciBiPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKGYsZSk7aWYoYi5sZW5ndGghPTIpe3JldHVybltdfXZhciBkPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGYsYlswXSk7dmFyIGM9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooZixiWzFdKTtpZihkIT1udWxsJiZjIT1udWxsKXtyZXR1cm5bZCxjXX1lbHNle3JldHVybltdfX07WDUwOS5nZXRIZXhUYnNDZXJ0aWZpY2F0ZUZyb21DZXJ0PWZ1bmN0aW9uKGIpe3ZhciBhPUFTTjFIRVguZ2V0U3RhcnRQb3NPZlZfQXRPYmooYiwwKTtyZXR1cm4gYX07WDUwOS5nZXRQdWJsaWNLZXlIZXhBcnJheUZyb21DZXJ0UEVNPWZ1bmN0aW9uKGMpe3ZhciBkPVg1MDkucGVtVG9IZXgoYyk7dmFyIGI9WDUwOS5nZXRQdWJsaWNLZXlIZXhBcnJheUZyb21DZXJ0SGV4KGQpO3JldHVybiBifTtYNTA5LmhleDJkbj1mdW5jdGlvbihlKXt2YXIgZj0iIjt2YXIgYz1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihlLDApO2Zvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCsrKXt2YXIgYj1BU04xSEVYLmdldEhleE9mVExWX0F0T2JqKGUsY1tkXSk7Zj1mKyIvIitYNTA5LmhleDJyZG4oYil9cmV0dXJuIGZ9O1g1MDkuaGV4MnJkbj1mdW5jdGlvbihhKXt2YXIgZj1BU04xSEVYLmdldERlY2VuZGFudEhleFRMVkJ5TnRoTGlzdChhLDAsWzAsMF0pO3ZhciBlPUFTTjFIRVguZ2V0RGVjZW5kYW50SGV4VkJ5TnRoTGlzdChhLDAsWzAsMV0pO3ZhciBjPSIiO3RyeXtjPVg1MDkuRE5fQVRUUkhFWFtmXX1jYXRjaChiKXtjPWZ9ZT1lLnJlcGxhY2UoLyguLikvZywiJSQxIik7dmFyIGQ9ZGVjb2RlVVJJQ29tcG9uZW50KGUpO3JldHVybiBjKyI9IitkfTtYNTA5LkROX0FUVFJIRVg9eyIwNjAzNTUwNDA2IjoiQyIsIjA2MDM1NTA0MGEiOiJPIiwiMDYwMzU1MDQwYiI6Ik9VIiwiMDYwMzU1MDQwMyI6IkNOIiwiMDYwMzU1MDQwNSI6IlNOIiwiMDYwMzU1MDQwOCI6IlNUIiwiMDYwMzU1MDQwNyI6IkwiLCIwNjAzNTUwNDA5Ijoic3RyZWV0QWRkcmVzcyIsIjA2MDM1NTA0MGYiOiJidXNpbmVzc0NhdGVnb3J5IiwiMDYwMzU1MDQxMSI6InBvc3RhbENvZGUiLCIwNjBiMmIwNjAxMDQwMTgyMzczYzAyMDEwMiI6Imp1cmlzZGljdGlvbk9mSW5jb3Jwb3JhdGlvblNQIiwiMDYwYjJiMDYwMTA0MDE4MjM3M2MwMjAxMDMiOiJqdXJpc2RpY3Rpb25PZkluY29ycG9yYXRpb25DIix9O1g1MDkuZ2V0UHVibGljS2V5RnJvbUNlcnRQRU09ZnVuY3Rpb24oZil7dmFyIGM9WDUwOS5nZXRQdWJsaWNLZXlJbmZvUHJvcE9mQ2VydFBFTShmKTtpZihjLmFsZ29pZD09IjJhODY0ODg2ZjcwZDAxMDEwMSIpe3ZhciBpPUtFWVVUSUwucGFyc2VQdWJsaWNSYXdSU0FLZXlIZXgoYy5rZXloZXgpO3ZhciBqPW5ldyBSU0FLZXkoKTtqLnNldFB1YmxpYyhpLm4saS5lKTtyZXR1cm4gan1lbHNle2lmKGMuYWxnb2lkPT0iMmE4NjQ4Y2UzZDAyMDEiKXt2YXIgZT1LSlVSLmNyeXB0by5PSUQub2lkaGV4Mm5hbWVbYy5hbGdwYXJhbV07dmFyIGo9bmV3IEtKVVIuY3J5cHRvLkVDRFNBKHtjdXJ2ZTplLGluZm86Yy5rZXloZXh9KTtqLnNldFB1YmxpY0tleUhleChjLmtleWhleCk7cmV0dXJuIGp9ZWxzZXtpZihjLmFsZ29pZD09IjJhODY0OGNlMzgwNDAxIil7dmFyIGI9QVNOMUhFWC5nZXRWYnlMaXN0KGMuYWxncGFyYW0sMCxbMF0sIjAyIik7dmFyIGE9QVNOMUhFWC5nZXRWYnlMaXN0KGMuYWxncGFyYW0sMCxbMV0sIjAyIik7dmFyIGQ9QVNOMUhFWC5nZXRWYnlMaXN0KGMuYWxncGFyYW0sMCxbMl0sIjAyIik7dmFyIGg9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooYy5rZXloZXgsMCk7aD1oLnN1YnN0cigyKTt2YXIgaj1uZXcgS0pVUi5jcnlwdG8uRFNBKCk7ai5zZXRQdWJsaWMobmV3IEJpZ0ludGVnZXIoYiwxNiksbmV3IEJpZ0ludGVnZXIoYSwxNiksbmV3IEJpZ0ludGVnZXIoZCwxNiksbmV3IEJpZ0ludGVnZXIoaCwxNikpO3JldHVybiBqfWVsc2V7dGhyb3cidW5zdXBwb3J0ZWQga2V5In19fX07WDUwOS5nZXRQdWJsaWNLZXlJbmZvUHJvcE9mQ2VydFBFTT1mdW5jdGlvbihlKXt2YXIgaT17fTtpLmFsZ3BhcmFtPW51bGw7dmFyIGY9WDUwOS5wZW1Ub0hleChlKTt2YXIgZD1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihmLDApO2lmKGQubGVuZ3RoIT0zKXt0aHJvdyJtYWxmb3JtZWQgWC41MDkgY2VydGlmaWNhdGUgUEVNIChjb2RlOjAwMSkifWlmKGYuc3Vic3RyKGRbMF0sMikhPSIzMCIpe3Rocm93Im1hbGZvcm1lZCBYLjUwOSBjZXJ0aWZpY2F0ZSBQRU0gKGNvZGU6MDAyKSJ9dmFyIGM9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmooZixkWzBdKTt2YXIgZz02O2lmKGYuc3Vic3RyKGNbMF0sMikhPT0iYTAiKXtnPTV9aWYoYy5sZW5ndGg8ZysxKXt0aHJvdyJtYWxmb3JtZWQgWC41MDkgY2VydGlmaWNhdGUgUEVNIChjb2RlOjAwMykifXZhciBhPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKGYsY1tnXSk7aWYoYS5sZW5ndGghPTIpe3Rocm93Im1hbGZvcm1lZCBYLjUwOSBjZXJ0aWZpY2F0ZSBQRU0gKGNvZGU6MDA0KSJ9dmFyIGg9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmooZixhWzBdKTtpZihoLmxlbmd0aCE9Mil7dGhyb3cibWFsZm9ybWVkIFguNTA5IGNlcnRpZmljYXRlIFBFTSAoY29kZTowMDUpIn1pLmFsZ29pZD1BU04xSEVYLmdldEhleE9mVl9BdE9iaihmLGhbMF0pO2lmKGYuc3Vic3RyKGhbMV0sMik9PSIwNiIpe2kuYWxncGFyYW09QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooZixoWzFdKX1lbHNle2lmKGYuc3Vic3RyKGhbMV0sMik9PSIzMCIpe2kuYWxncGFyYW09QVNOMUhFWC5nZXRIZXhPZlRMVl9BdE9iaihmLGhbMV0pfX1pZihmLnN1YnN0cihhWzFdLDIpIT0iMDMiKXt0aHJvdyJtYWxmb3JtZWQgWC41MDkgY2VydGlmaWNhdGUgUEVNIChjb2RlOjAwNikifXZhciBiPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGYsYVsxXSk7aS5rZXloZXg9Yi5zdWJzdHIoMik7cmV0dXJuIGl9O1g1MDkuZ2V0UHVibGljS2V5SW5mb1Bvc09mQ2VydEhFWD1mdW5jdGlvbihjKXt2YXIgYj1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihjLDApO2lmKGIubGVuZ3RoIT0zKXt0aHJvdyJtYWxmb3JtZWQgWC41MDkgY2VydGlmaWNhdGUgUEVNIChjb2RlOjAwMSkifWlmKGMuc3Vic3RyKGJbMF0sMikhPSIzMCIpe3Rocm93Im1hbGZvcm1lZCBYLjUwOSBjZXJ0aWZpY2F0ZSBQRU0gKGNvZGU6MDAyKSJ9dmFyIGE9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmooYyxiWzBdKTtpZihhLmxlbmd0aDw3KXt0aHJvdyJtYWxmb3JtZWQgWC41MDkgY2VydGlmaWNhdGUgUEVNIChjb2RlOjAwMykifXJldHVybiBhWzZdfTtYNTA5LmdldFYzRXh0SW5mb0xpc3RPZkNlcnRIZXg9ZnVuY3Rpb24oZyl7dmFyIGI9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmooZywwKTtpZihiLmxlbmd0aCE9Myl7dGhyb3cibWFsZm9ybWVkIFguNTA5IGNlcnRpZmljYXRlIFBFTSAoY29kZTowMDEpIn1pZihnLnN1YnN0cihiWzBdLDIpIT0iMzAiKXt0aHJvdyJtYWxmb3JtZWQgWC41MDkgY2VydGlmaWNhdGUgUEVNIChjb2RlOjAwMikifXZhciBhPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKGcsYlswXSk7aWYoYS5sZW5ndGg8OCl7dGhyb3cibWFsZm9ybWVkIFguNTA5IGNlcnRpZmljYXRlIFBFTSAoY29kZTowMDMpIn1pZihnLnN1YnN0cihhWzddLDIpIT0iYTMiKXt0aHJvdyJtYWxmb3JtZWQgWC41MDkgY2VydGlmaWNhdGUgUEVNIChjb2RlOjAwNCkifXZhciBoPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKGcsYVs3XSk7aWYoaC5sZW5ndGghPTEpe3Rocm93Im1hbGZvcm1lZCBYLjUwOSBjZXJ0aWZpY2F0ZSBQRU0gKGNvZGU6MDA1KSJ9aWYoZy5zdWJzdHIoaFswXSwyKSE9IjMwIil7dGhyb3cibWFsZm9ybWVkIFguNTA5IGNlcnRpZmljYXRlIFBFTSAoY29kZTowMDYpIn12YXIgZj1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihnLGhbMF0pO3ZhciBlPWYubGVuZ3RoO3ZhciBkPW5ldyBBcnJheShlKTtmb3IodmFyIGM9MDtjPGU7YysrKXtkW2NdPVg1MDkuZ2V0VjNFeHRJdGVtSW5mb19BdE9iaihnLGZbY10pfXJldHVybiBkfTtYNTA5LmdldFYzRXh0SXRlbUluZm9fQXRPYmo9ZnVuY3Rpb24oZixnKXt2YXIgZT17fTtlLnBvc1RMVj1nO3ZhciBiPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKGYsZyk7aWYoYi5sZW5ndGghPTImJmIubGVuZ3RoIT0zKXt0aHJvdyJtYWxmb3JtZWQgWC41MDl2MyBFeHQgKGNvZGU6MDAxKSJ9aWYoZi5zdWJzdHIoYlswXSwyKSE9IjA2Iil7dGhyb3cibWFsZm9ybWVkIFguNTA5djMgRXh0IChjb2RlOjAwMikifXZhciBkPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGYsYlswXSk7ZS5vaWQ9QVNOMUhFWC5oZXh0b29pZHN0cihkKTtlLmNyaXRpY2FsPWZhbHNlO2lmKGIubGVuZ3RoPT0zKXtlLmNyaXRpY2FsPXRydWV9dmFyIGM9YltiLmxlbmd0aC0xXTtpZihmLnN1YnN0cihjLDIpIT0iMDQiKXt0aHJvdyJtYWxmb3JtZWQgWC41MDl2MyBFeHQgKGNvZGU6MDAzKSJ9ZS5wb3NWPUFTTjFIRVguZ2V0U3RhcnRQb3NPZlZfQXRPYmooZixjKTtyZXR1cm4gZX07WDUwOS5nZXRIZXhPZlRMVl9WM0V4dFZhbHVlPWZ1bmN0aW9uKGIsYSl7dmFyIGM9WDUwOS5nZXRQb3NPZlRMVl9WM0V4dFZhbHVlKGIsYSk7aWYoYz09LTEpe3JldHVybiBudWxsfXJldHVybiBBU04xSEVYLmdldEhleE9mVExWX0F0T2JqKGIsYyl9O1g1MDkuZ2V0SGV4T2ZWX1YzRXh0VmFsdWU9ZnVuY3Rpb24oYixhKXt2YXIgYz1YNTA5LmdldFBvc09mVExWX1YzRXh0VmFsdWUoYixhKTtpZihjPT0tMSl7cmV0dXJuIG51bGx9cmV0dXJuIEFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGIsYyl9O1g1MDkuZ2V0UG9zT2ZUTFZfVjNFeHRWYWx1ZT1mdW5jdGlvbihmLGIpe3ZhciBkPWI7aWYoIWIubWF0Y2goL15bMC05Ll0rJC8pKXtkPUtKVVIuYXNuMS54NTA5Lk9JRC5uYW1lMm9pZChiKX1pZihkPT0iIil7cmV0dXJuIC0xfXZhciBjPVg1MDkuZ2V0VjNFeHRJbmZvTGlzdE9mQ2VydEhleChmKTtmb3IodmFyIGE9MDthPGMubGVuZ3RoO2ErKyl7dmFyIGU9Y1thXTtpZihlLm9pZD09ZCl7cmV0dXJuIGUucG9zVn19cmV0dXJuIC0xfTtYNTA5LmdldEV4dEJhc2ljQ29uc3RyYWludHM9ZnVuY3Rpb24oZCl7dmFyIGE9WDUwOS5nZXRIZXhPZlZfVjNFeHRWYWx1ZShkLCJiYXNpY0NvbnN0cmFpbnRzIik7aWYoYT09PW51bGwpe3JldHVybiBudWxsfWlmKGE9PT0iIil7cmV0dXJue319aWYoYT09PSIwMTAxZmYiKXtyZXR1cm57Y0E6dHJ1ZX19aWYoYS5zdWJzdHIoMCw4KT09PSIwMTAxZmYwMiIpe3ZhciBjPUFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGEsNik7dmFyIGI9cGFyc2VJbnQoYywxNik7cmV0dXJue2NBOnRydWUscGF0aExlbjpifX10aHJvdyJ1bmtub3duIGVycm9yIn07WDUwOS5LRVlVU0FHRV9OQU1FPVsiZGlnaXRhbFNpZ25hdHVyZSIsIm5vblJlcHVkaWF0aW9uIiwia2V5RW5jaXBoZXJtZW50IiwiZGF0YUVuY2lwaGVybWVudCIsImtleUFncmVlbWVudCIsImtleUNlcnRTaWduIiwiY1JMU2lnbiIsImVuY2lwaGVyT25seSIsImRlY2lwaGVyT25seSJdO1g1MDkuZ2V0RXh0S2V5VXNhZ2VCaW49ZnVuY3Rpb24oZCl7dmFyIGI9WDUwOS5nZXRIZXhPZlZfVjNFeHRWYWx1ZShkLCJrZXlVc2FnZSIpO2lmKGI9PSIiKXtyZXR1cm4iIn1pZihiLmxlbmd0aCUyIT0wfHxiLmxlbmd0aDw9Mil7dGhyb3cibWFsZm9ybWVkIGtleSB1c2FnZSB2YWx1ZSJ9dmFyIGE9cGFyc2VJbnQoYi5zdWJzdHIoMCwyKSk7dmFyIGM9cGFyc2VJbnQoYi5zdWJzdHIoMiksMTYpLnRvU3RyaW5nKDIpO3JldHVybiBjLnN1YnN0cigwLGMubGVuZ3RoLWEpfTtYNTA5LmdldEV4dEtleVVzYWdlU3RyaW5nPWZ1bmN0aW9uKGUpe3ZhciBkPVg1MDkuZ2V0RXh0S2V5VXNhZ2VCaW4oZSk7dmFyIGI9bmV3IEFycmF5KCk7Zm9yKHZhciBjPTA7YzxkLmxlbmd0aDtjKyspe2lmKGQuc3Vic3RyKGMsMSk9PSIxIil7Yi5wdXNoKFg1MDkuS0VZVVNBR0VfTkFNRVtjXSl9fXJldHVybiBiLmpvaW4oIiwiKX07WDUwOS5nZXRFeHRTdWJqZWN0S2V5SWRlbnRpZmllcj1mdW5jdGlvbihiKXt2YXIgYT1YNTA5LmdldEhleE9mVl9WM0V4dFZhbHVlKGIsInN1YmplY3RLZXlJZGVudGlmaWVyIik7cmV0dXJuIGF9O1g1MDkuZ2V0RXh0QXV0aG9yaXR5S2V5SWRlbnRpZmllcj1mdW5jdGlvbihmKXt2YXIgYj17fTt2YXIgZT1YNTA5LmdldEhleE9mVExWX1YzRXh0VmFsdWUoZiwiYXV0aG9yaXR5S2V5SWRlbnRpZmllciIpO2lmKGU9PT1udWxsKXtyZXR1cm4gbnVsbH12YXIgYz1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihlLDApO2Zvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCsrKXtpZihlLnN1YnN0cihjW2RdLDIpPT09IjgwIil7Yi5raWQ9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooZSxjW2RdKX19cmV0dXJuIGJ9O1g1MDkuZ2V0RXh0RXh0S2V5VXNhZ2VOYW1lPWZ1bmN0aW9uKGspe3ZhciBiPW5ldyBBcnJheSgpO3ZhciBmPVg1MDkuZ2V0SGV4T2ZUTFZfVjNFeHRWYWx1ZShrLCJleHRLZXlVc2FnZSIpO2lmKGY9PT1udWxsKXtyZXR1cm4gbnVsbH12YXIgYz1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihmLDApO2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKXt2YXIgaj1BU04xSEVYLmdldEhleE9mVl9BdE9iaihmLGNbZV0pO3ZhciBnPUtKVVIuYXNuMS5BU04xVXRpbC5vaWRIZXhUb0ludChqKTt2YXIgZD1LSlVSLmFzbjEueDUwOS5PSUQub2lkMm5hbWUoZyk7Yi5wdXNoKGQpfXJldHVybiBifTtYNTA5LmdldEV4dFN1YmplY3RBbHROYW1lPWZ1bmN0aW9uKGcpe3ZhciBiPW5ldyBBcnJheSgpO3ZhciBmPVg1MDkuZ2V0SGV4T2ZUTFZfVjNFeHRWYWx1ZShnLCJzdWJqZWN0QWx0TmFtZSIpO3ZhciBjPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKGYsMCk7Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspe2lmKGYuc3Vic3RyKGNbZV0sMik9PT0iODIiKXt2YXIgZD1oZXh0b3V0ZjgoQVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooZixjW2VdKSk7Yi5wdXNoKGQpfX1yZXR1cm4gYn07WDUwOS5nZXRFeHRDUkxEaXN0cmlidXRpb25Qb2ludHNVUkk9ZnVuY3Rpb24obil7dmFyIHA9bmV3IEFycmF5KCk7dmFyIGs9WDUwOS5nZXRIZXhPZlRMVl9WM0V4dFZhbHVlKG4sImNSTERpc3RyaWJ1dGlvblBvaW50cyIpO3ZhciBvPUFTTjFIRVguZ2V0UG9zQXJyYXlPZkNoaWxkcmVuX0F0T2JqKGssMCk7Zm9yKHZhciBnPTA7ZzxvLmxlbmd0aDtnKyspe3ZhciBsPUFTTjFIRVguZ2V0SGV4T2ZUTFZfQXRPYmooayxvW2ddKTt2YXIgYj1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihsLDApO2Zvcih2YXIgZT0wO2U8Yi5sZW5ndGg7ZSsrKXtpZihsLnN1YnN0cihiW2VdLDIpPT09ImEwIil7dmFyIGY9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmoobCxiW2VdKTtpZihmLnN1YnN0cigwLDIpPT09ImEwIil7dmFyIGM9QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooZiwwKTtpZihjLnN1YnN0cigwLDIpPT09Ijg2Iil7dmFyIG09QVNOMUhFWC5nZXRIZXhPZlZfQXRPYmooYywwKTt2YXIgZD1oZXh0b3V0ZjgobSk7cC5wdXNoKGQpfX19fX1yZXR1cm4gcH07WDUwOS5nZXRFeHRBSUFJbmZvPWZ1bmN0aW9uKGcpe3ZhciBqPXt9O2oub2NzcD1bXTtqLmNhaXNzdWVyPVtdO3ZhciBoPVg1MDkuZ2V0UG9zT2ZUTFZfVjNFeHRWYWx1ZShnLCJhdXRob3JpdHlJbmZvQWNjZXNzIik7aWYoaD09LTEpe3JldHVybiBudWxsfWlmKGcuc3Vic3RyKGgsMikhPSIzMCIpe3Rocm93Im1hbGZvcm1lZCBBSUEgRXh0biBWYWx1ZSJ9dmFyIGQ9QVNOMUhFWC5nZXRQb3NBcnJheU9mQ2hpbGRyZW5fQXRPYmooZyxoKTtmb3IodmFyIGM9MDtjPGQubGVuZ3RoO2MrKyl7dmFyIGE9ZFtjXTt2YXIgYj1BU04xSEVYLmdldFBvc0FycmF5T2ZDaGlsZHJlbl9BdE9iaihnLGEpO2lmKGIubGVuZ3RoIT0yKXt0aHJvdyJtYWxmb3JtZWQgQWNjZXNzRGVzY3JpcHRpb24gb2YgQUlBIEV4dG4ifXZhciBlPWJbMF07dmFyIGY9YlsxXTtpZihBU04xSEVYLmdldEhleE9mVl9BdE9iaihnLGUpPT0iMmIwNjAxMDUwNTA3MzAwMSIpe2lmKGcuc3Vic3RyKGYsMik9PSI4NiIpe2oub2NzcC5wdXNoKGhleHRvdXRmOChBU04xSEVYLmdldEhleE9mVl9BdE9iaihnLGYpKSl9fWlmKEFTTjFIRVguZ2V0SGV4T2ZWX0F0T2JqKGcsZSk9PSIyYjA2MDEwNTA1MDczMDAyIil7aWYoZy5zdWJzdHIoZiwyKT09Ijg2Iil7ai5jYWlzc3Vlci5wdXNoKGhleHRvdXRmOChBU04xSEVYLmdldEhleE9mVl9BdE9iaihnLGYpKSl9fX1yZXR1cm4gan07WDUwOS5nZXRTaWduYXR1cmVBbGdvcml0aG1OYW1lPWZ1bmN0aW9uKGQpe3ZhciBiPUFTTjFIRVguZ2V0RGVjZW5kYW50SGV4VkJ5TnRoTGlzdChkLDAsWzEsMF0pO3ZhciBhPUtKVVIuYXNuMS5BU04xVXRpbC5vaWRIZXhUb0ludChiKTt2YXIgYz1LSlVSLmFzbjEueDUwOS5PSUQub2lkMm5hbWUoYSk7cmV0dXJuIGN9O1g1MDkuZ2V0U2lnbmF0dXJlVmFsdWVIZXg9ZnVuY3Rpb24oYil7dmFyIGE9QVNOMUhFWC5nZXREZWNlbmRhbnRIZXhWQnlOdGhMaXN0KGIsMCxbMl0pO2lmKGEuc3Vic3RyKDAsMikhPT0iMDAiKXt0aHJvdyJjYW4ndCBnZXQgc2lnbmF0dXJlIHZhbHVlIn1yZXR1cm4gYS5zdWJzdHIoMil9O1g1MDkuZ2V0U2VyaWFsTnVtYmVySGV4PWZ1bmN0aW9uKGEpe3JldHVybiBBU04xSEVYLmdldERlY2VuZGFudEhleFZCeU50aExpc3QoYSwwLFswLDFdKX07DQovKiEgandzLTMuMy40IChjKSAyMDEzLTIwMTYgS2VuamkgVXJ1c2hpbWEgfCBranVyLmdpdGh1Yi5jb20vanNyc2FzaWduL2xpY2Vuc2UNCiAqLw0KaWYodHlwZW9mIEtKVVI9PSJ1bmRlZmluZWQifHwhS0pVUil7S0pVUj17fX1pZih0eXBlb2YgS0pVUi5qd3M9PSJ1bmRlZmluZWQifHwhS0pVUi5qd3Mpe0tKVVIuandzPXt9fUtKVVIuandzLkpXUz1mdW5jdGlvbigpe3ZhciBhPUtKVVIuandzLkpXUzt0aGlzLnBhcnNlSldTPWZ1bmN0aW9uKGUsZyl7aWYoKHRoaXMucGFyc2VkSldTIT09dW5kZWZpbmVkKSYmKGd8fCh0aGlzLnBhcnNlZEpXUy5zaWd2YWxIIT09dW5kZWZpbmVkKSkpe3JldHVybn1pZihlLm1hdGNoKC9eKFteLl0rKVwuKFteLl0rKVwuKFteLl0rKSQvKT09bnVsbCl7dGhyb3ciSldTIHNpZ25hdHVyZSBpcyBub3QgYSBmb3JtIG9mICdIZWFkLlBheWxvYWQuU2lnVmFsdWUnLiJ9dmFyIGg9UmVnRXhwLiQxO3ZhciBjPVJlZ0V4cC4kMjt2YXIgaT1SZWdFeHAuJDM7dmFyIGs9aCsiLiIrYzt0aGlzLnBhcnNlZEpXUz17fTt0aGlzLnBhcnNlZEpXUy5oZWFkQjY0VT1oO3RoaXMucGFyc2VkSldTLnBheWxvYWRCNjRVPWM7dGhpcy5wYXJzZWRKV1Muc2lndmFsQjY0VT1pO3RoaXMucGFyc2VkSldTLnNpPWs7aWYoIWcpe3ZhciBmPWI2NHV0b2hleChpKTt2YXIgZD1wYXJzZUJpZ0ludChmLDE2KTt0aGlzLnBhcnNlZEpXUy5zaWd2YWxIPWY7dGhpcy5wYXJzZWRKV1Muc2lndmFsQkk9ZH12YXIgYj1iNjR1dG91dGY4KGgpO3ZhciBqPWI2NHV0b3V0ZjgoYyk7dGhpcy5wYXJzZWRKV1MuaGVhZFM9Yjt0aGlzLnBhcnNlZEpXUy5wYXlsb2FkUz1qO2lmKCFhLmlzU2FmZUpTT05TdHJpbmcoYix0aGlzLnBhcnNlZEpXUywiaGVhZFAiKSl7dGhyb3cibWFsZm9ybWVkIEpTT04gc3RyaW5nIGZvciBKV1MgSGVhZDogIitifX19O0tKVVIuandzLkpXUy5zaWduPWZ1bmN0aW9uKGEsaSxjLG0sbCl7dmFyIGs9S0pVUi5qd3MuSldTO3ZhciBxLGUsajtpZih0eXBlb2YgaSE9InN0cmluZyImJnR5cGVvZiBpIT0ib2JqZWN0Iil7dGhyb3cic3BIZWFkZXIgbXVzdCBiZSBKU09OIHN0cmluZyBvciBvYmplY3Q6ICIraX1pZih0eXBlb2YgaT09Im9iamVjdCIpe2U9aTtxPUpTT04uc3RyaW5naWZ5KGUpfWlmKHR5cGVvZiBpPT0ic3RyaW5nIil7cT1pO2lmKCFrLmlzU2FmZUpTT05TdHJpbmcocSkpe3Rocm93IkpXUyBIZWFkIGlzIG5vdCBzYWZlIEpTT04gc3RyaW5nOiAiK3F9ZT1rLnJlYWRTYWZlSlNPTlN0cmluZyhxKX1qPWM7aWYodHlwZW9mIGM9PSJvYmplY3QiKXtqPUpTT04uc3RyaW5naWZ5KGMpfWlmKChhPT0iInx8YT09bnVsbCkmJmUuYWxnIT09dW5kZWZpbmVkKXthPWUuYWxnfWlmKChhIT0iIiYmYSE9bnVsbCkmJmUuYWxnPT09dW5kZWZpbmVkKXtlLmFsZz1hO3E9SlNPTi5zdHJpbmdpZnkoZSl9aWYoYSE9PWUuYWxnKXt0aHJvdyJhbGcgYW5kIHNIZWFkZXIuYWxnIGRvZXNuJ3QgbWF0Y2g6ICIrYSsiIT0iK2UuYWxnfXZhciBkPW51bGw7aWYoay5qd3NhbGcyc2lnYWxnW2FdPT09dW5kZWZpbmVkKXt0aHJvdyJ1bnN1cHBvcnRlZCBhbGcgbmFtZTogIithfWVsc2V7ZD1rLmp3c2FsZzJzaWdhbGdbYV19dmFyIGI9dXRmOHRvYjY0dShxKTt2YXIgZz11dGY4dG9iNjR1KGopO3ZhciBvPWIrIi4iK2c7dmFyIG49IiI7aWYoZC5zdWJzdHIoMCw0KT09IkhtYWMiKXtpZihtPT09dW5kZWZpbmVkKXt0aHJvdyJtYWMga2V5IHNoYWxsIGJlIHNwZWNpZmllZCBmb3IgSFMqIGFsZyJ9dmFyIGg9bmV3IEtKVVIuY3J5cHRvLk1hYyh7YWxnOmQscHJvdjoiY3J5cHRvanMiLHBhc3M6bX0pO2gudXBkYXRlU3RyaW5nKG8pO249aC5kb0ZpbmFsKCl9ZWxzZXtpZihkLmluZGV4T2YoIndpdGhFQ0RTQSIpIT0tMSl7dmFyIHA9bmV3IEtKVVIuY3J5cHRvLlNpZ25hdHVyZSh7YWxnOmR9KTtwLmluaXQobSxsKTtwLnVwZGF0ZVN0cmluZyhvKTtoQVNOMVNpZz1wLnNpZ24oKTtuPUtKVVIuY3J5cHRvLkVDRFNBLmFzbjFTaWdUb0NvbmNhdFNpZyhoQVNOMVNpZyl9ZWxzZXtpZihkIT0ibm9uZSIpe3ZhciBwPW5ldyBLSlVSLmNyeXB0by5TaWduYXR1cmUoe2FsZzpkfSk7cC5pbml0KG0sbCk7cC51cGRhdGVTdHJpbmcobyk7bj1wLnNpZ24oKX19fXZhciBmPWhleHRvYjY0dShuKTtyZXR1cm4gbysiLiIrZn07S0pVUi5qd3MuSldTLnZlcmlmeT1mdW5jdGlvbihwLHQsail7dmFyIG09S0pVUi5qd3MuSldTO3ZhciBxPXAuc3BsaXQoIi4iKTt2YXIgZD1xWzBdO3ZhciBsPXFbMV07dmFyIGI9ZCsiLiIrbDt2YXIgcj1iNjR1dG9oZXgocVsyXSk7dmFyIGk9bS5yZWFkU2FmZUpTT05TdHJpbmcoYjY0dXRvdXRmOChxWzBdKSk7dmFyIGg9bnVsbDt2YXIgcz1udWxsO2lmKGkuYWxnPT09dW5kZWZpbmVkKXt0aHJvdyJhbGdvcml0aG0gbm90IHNwZWNpZmllZCBpbiBoZWFkZXIifWVsc2V7aD1pLmFsZztzPWguc3Vic3RyKDAsMil9aWYoaiE9bnVsbCYmT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGopPT09IltvYmplY3QgQXJyYXldIiYmai5sZW5ndGg+MCl7dmFyIGM9IjoiK2ouam9pbigiOiIpKyI6IjtpZihjLmluZGV4T2YoIjoiK2grIjoiKT09LTEpe3Rocm93ImFsZ29yaXRobSAnIitoKyInIG5vdCBhY2NlcHRlZCBpbiB0aGUgbGlzdCJ9fWlmKGghPSJub25lIiYmdD09PW51bGwpe3Rocm93ImtleSBzaGFsbCBiZSBzcGVjaWZpZWQgdG8gdmVyaWZ5LiJ9aWYodHlwZW9mIHQ9PSJzdHJpbmciJiZ0LmluZGV4T2YoIi0tLS0tQkVHSU4gIikhPS0xKXt0PUtFWVVUSUwuZ2V0S2V5KHQpfWlmKHM9PSJSUyJ8fHM9PSJQUyIpe2lmKCEodCBpbnN0YW5jZW9mIFJTQUtleSkpe3Rocm93ImtleSBzaGFsbCBiZSBhIFJTQUtleSBvYmogZm9yIFJTKiBhbmQgUFMqIGFsZ3MifX1pZihzPT0iRVMiKXtpZighKHQgaW5zdGFuY2VvZiBLSlVSLmNyeXB0by5FQ0RTQSkpe3Rocm93ImtleSBzaGFsbCBiZSBhIEVDRFNBIG9iaiBmb3IgRVMqIGFsZ3MifX1pZihoPT0ibm9uZSIpe312YXIgbj1udWxsO2lmKG0uandzYWxnMnNpZ2FsZ1tpLmFsZ109PT11bmRlZmluZWQpe3Rocm93InVuc3VwcG9ydGVkIGFsZyBuYW1lOiAiK2h9ZWxzZXtuPW0uandzYWxnMnNpZ2FsZ1toXX1pZihuPT0ibm9uZSIpe3Rocm93Im5vdCBzdXBwb3J0ZWQifWVsc2V7aWYobi5zdWJzdHIoMCw0KT09IkhtYWMiKXt2YXIgaz1udWxsO2lmKHQ9PT11bmRlZmluZWQpe3Rocm93ImhleGFkZWNpbWFsIGtleSBzaGFsbCBiZSBzcGVjaWZpZWQgZm9yIEhNQUMifXZhciBnPW5ldyBLSlVSLmNyeXB0by5NYWMoe2FsZzpuLHBhc3M6dH0pO2cudXBkYXRlU3RyaW5nKGIpO2s9Zy5kb0ZpbmFsKCk7cmV0dXJuIHI9PWt9ZWxzZXtpZihuLmluZGV4T2YoIndpdGhFQ0RTQSIpIT0tMSl7dmFyIGY9bnVsbDt0cnl7Zj1LSlVSLmNyeXB0by5FQ0RTQS5jb25jYXRTaWdUb0FTTjFTaWcocil9Y2F0Y2gobyl7cmV0dXJuIGZhbHNlfXZhciBlPW5ldyBLSlVSLmNyeXB0by5TaWduYXR1cmUoe2FsZzpufSk7ZS5pbml0KHQpO2UudXBkYXRlU3RyaW5nKGIpO3JldHVybiBlLnZlcmlmeShmKX1lbHNle3ZhciBlPW5ldyBLSlVSLmNyeXB0by5TaWduYXR1cmUoe2FsZzpufSk7ZS5pbml0KHQpO2UudXBkYXRlU3RyaW5nKGIpO3JldHVybiBlLnZlcmlmeShyKX19fX07S0pVUi5qd3MuSldTLnBhcnNlPWZ1bmN0aW9uKGcpe3ZhciBjPWcuc3BsaXQoIi4iKTt2YXIgYj17fTt2YXIgZixlLGQ7aWYoYy5sZW5ndGghPTImJmMubGVuZ3RoIT0zKXt0aHJvdyJtYWxmb3JtZWQgc0pXUzogd3JvbmcgbnVtYmVyIG9mICcuJyBzcGxpdHRlZCBlbGVtZW50cyJ9Zj1jWzBdO2U9Y1sxXTtpZihjLmxlbmd0aD09Myl7ZD1jWzJdfWIuaGVhZGVyT2JqPUtKVVIuandzLkpXUy5yZWFkU2FmZUpTT05TdHJpbmcoYjY0dXRvdXRmOChmKSk7Yi5wYXlsb2FkT2JqPUtKVVIuandzLkpXUy5yZWFkU2FmZUpTT05TdHJpbmcoYjY0dXRvdXRmOChlKSk7Yi5oZWFkZXJQUD1KU09OLnN0cmluZ2lmeShiLmhlYWRlck9iaixudWxsLCIgICIpO2lmKGIucGF5bG9hZE9iaj09bnVsbCl7Yi5wYXlsb2FkUFA9YjY0dXRvdXRmOChlKX1lbHNle2IucGF5bG9hZFBQPUpTT04uc3RyaW5naWZ5KGIucGF5bG9hZE9iaixudWxsLCIgICIpfWlmKGQhPT11bmRlZmluZWQpe2Iuc2lnSGV4PWI2NHV0b2hleChkKX1yZXR1cm4gYn07S0pVUi5qd3MuSldTLnZlcmlmeUpXVD1mdW5jdGlvbihkLGosbCl7dmFyIGg9S0pVUi5qd3MuSldTO3ZhciBpPWQuc3BsaXQoIi4iKTt2YXIgYz1pWzBdO3ZhciBnPWlbMV07dmFyIG09YysiLiIrZzt2YXIgaz1iNjR1dG9oZXgoaVsyXSk7dmFyIGY9aC5yZWFkU2FmZUpTT05TdHJpbmcoYjY0dXRvdXRmOChjKSk7dmFyIGU9aC5yZWFkU2FmZUpTT05TdHJpbmcoYjY0dXRvdXRmOChnKSk7aWYoZi5hbGc9PT11bmRlZmluZWQpe3JldHVybiBmYWxzZX1pZihsLmFsZz09PXVuZGVmaW5lZCl7dGhyb3ciYWNjZXB0RmllbGQuYWxnIHNoYWxsIGJlIHNwZWNpZmllZCJ9aWYoIWguaW5BcnJheShmLmFsZyxsLmFsZykpe3JldHVybiBmYWxzZX1pZihlLmlzcyE9PXVuZGVmaW5lZCYmdHlwZW9mIGwuaXNzPT09Im9iamVjdCIpe2lmKCFoLmluQXJyYXkoZS5pc3MsbC5pc3MpKXtyZXR1cm4gZmFsc2V9fWlmKGUuc3ViIT09dW5kZWZpbmVkJiZ0eXBlb2YgbC5zdWI9PT0ib2JqZWN0Iil7aWYoIWguaW5BcnJheShlLnN1YixsLnN1Yikpe3JldHVybiBmYWxzZX19aWYoZS5hdWQhPT11bmRlZmluZWQmJnR5cGVvZiBsLmF1ZD09PSJvYmplY3QiKXtpZih0eXBlb2YgZS5hdWQ9PSJzdHJpbmciKXtpZighaC5pbkFycmF5KGUuYXVkLGwuYXVkKSl7cmV0dXJuIGZhbHNlfX1lbHNle2lmKHR5cGVvZiBlLmF1ZD09Im9iamVjdCIpe2lmKCFoLmluY2x1ZGVkQXJyYXkoZS5hdWQsbC5hdWQpKXtyZXR1cm4gZmFsc2V9fX19dmFyIGI9S0pVUi5qd3MuSW50RGF0ZS5nZXROb3coKTtpZihsLnZlcmlmeUF0IT09dW5kZWZpbmVkJiZ0eXBlb2YgbC52ZXJpZnlBdD09PSJudW1iZXIiKXtiPWwudmVyaWZ5QXR9aWYobC5ncmFjZVBlcmlvZD09PXVuZGVmaW5lZHx8dHlwZW9mIGwuZ3JhY2VQZXJpb2QhPT0ibnVtYmVyIil7bC5ncmFjZVBlcmlvZD0wfWlmKGUuZXhwIT09dW5kZWZpbmVkJiZ0eXBlb2YgZS5leHA9PSJudW1iZXIiKXtpZihlLmV4cCtsLmdyYWNlUGVyaW9kPGIpe3JldHVybiBmYWxzZX19aWYoZS5uYmYhPT11bmRlZmluZWQmJnR5cGVvZiBlLm5iZj09Im51bWJlciIpe2lmKGI8ZS5uYmYtbC5ncmFjZVBlcmlvZCl7cmV0dXJuIGZhbHNlfX1pZihlLmlhdCE9PXVuZGVmaW5lZCYmdHlwZW9mIGUuaWF0PT0ibnVtYmVyIil7aWYoYjxlLmlhdC1sLmdyYWNlUGVyaW9kKXtyZXR1cm4gZmFsc2V9fWlmKGUuanRpIT09dW5kZWZpbmVkJiZsLmp0aSE9PXVuZGVmaW5lZCl7aWYoZS5qdGkhPT1sLmp0aSl7cmV0dXJuIGZhbHNlfX1pZighS0pVUi5qd3MuSldTLnZlcmlmeShkLGosbC5hbGcpKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9O0tKVVIuandzLkpXUy5pbmNsdWRlZEFycmF5PWZ1bmN0aW9uKGIsYSl7dmFyIGQ9S0pVUi5qd3MuSldTLmluQXJyYXk7aWYoYj09PW51bGwpe3JldHVybiBmYWxzZX1pZih0eXBlb2YgYiE9PSJvYmplY3QiKXtyZXR1cm4gZmFsc2V9aWYodHlwZW9mIGIubGVuZ3RoIT09Im51bWJlciIpe3JldHVybiBmYWxzZX1mb3IodmFyIGM9MDtjPGIubGVuZ3RoO2MrKyl7aWYoIWQoYltjXSxhKSl7cmV0dXJuIGZhbHNlfX1yZXR1cm4gdHJ1ZX07S0pVUi5qd3MuSldTLmluQXJyYXk9ZnVuY3Rpb24oZCxiKXtpZihiPT09bnVsbCl7cmV0dXJuIGZhbHNlfWlmKHR5cGVvZiBiIT09Im9iamVjdCIpe3JldHVybiBmYWxzZX1pZih0eXBlb2YgYi5sZW5ndGghPT0ibnVtYmVyIil7cmV0dXJuIGZhbHNlfWZvcih2YXIgYz0wO2M8Yi5sZW5ndGg7YysrKXtpZihiW2NdPT1kKXtyZXR1cm4gdHJ1ZX19cmV0dXJuIGZhbHNlfTtLSlVSLmp3cy5KV1MuandzYWxnMnNpZ2FsZz17SFMyNTY6IkhtYWNTSEEyNTYiLEhTMzg0OiJIbWFjU0hBMzg0IixIUzUxMjoiSG1hY1NIQTUxMiIsUlMyNTY6IlNIQTI1NndpdGhSU0EiLFJTMzg0OiJTSEEzODR3aXRoUlNBIixSUzUxMjoiU0hBNTEyd2l0aFJTQSIsRVMyNTY6IlNIQTI1NndpdGhFQ0RTQSIsRVMzODQ6IlNIQTM4NHdpdGhFQ0RTQSIsUFMyNTY6IlNIQTI1NndpdGhSU0FhbmRNR0YxIixQUzM4NDoiU0hBMzg0d2l0aFJTQWFuZE1HRjEiLFBTNTEyOiJTSEE1MTJ3aXRoUlNBYW5kTUdGMSIsbm9uZToibm9uZSIsfTtLSlVSLmp3cy5KV1MuaXNTYWZlSlNPTlN0cmluZz1mdW5jdGlvbihjLGIsZCl7dmFyIGU9bnVsbDt0cnl7ZT1qc29uUGFyc2UoYyk7aWYodHlwZW9mIGUhPSJvYmplY3QiKXtyZXR1cm4gMH1pZihlLmNvbnN0cnVjdG9yPT09QXJyYXkpe3JldHVybiAwfWlmKGIpe2JbZF09ZX1yZXR1cm4gMX1jYXRjaChhKXtyZXR1cm4gMH19O0tKVVIuandzLkpXUy5yZWFkU2FmZUpTT05TdHJpbmc9ZnVuY3Rpb24oYil7dmFyIGM9bnVsbDt0cnl7Yz1qc29uUGFyc2UoYik7aWYodHlwZW9mIGMhPSJvYmplY3QiKXtyZXR1cm4gbnVsbH1pZihjLmNvbnN0cnVjdG9yPT09QXJyYXkpe3JldHVybiBudWxsfXJldHVybiBjfWNhdGNoKGEpe3JldHVybiBudWxsfX07S0pVUi5qd3MuSldTLmdldEVuY29kZWRTaWduYXR1cmVWYWx1ZUZyb21KV1M9ZnVuY3Rpb24oYSl7aWYoYS5tYXRjaCgvXlteLl0rXC5bXi5dK1wuKFteLl0rKSQvKT09bnVsbCl7dGhyb3ciSldTIHNpZ25hdHVyZSBpcyBub3QgYSBmb3JtIG9mICdIZWFkLlBheWxvYWQuU2lnVmFsdWUnLiJ9cmV0dXJuIFJlZ0V4cC4kMX07S0pVUi5qd3MuSldTLmdldEpXS3RodW1icHJpbnQ9ZnVuY3Rpb24oZCl7aWYoZC5rdHkhPT0iUlNBIiYmZC5rdHkhPT0iRUMiJiZkLmt0eSE9PSJvY3QiKXt0aHJvdyJ1bnN1cHBvcnRlZCBhbGdvcml0aG0gZm9yIEpXSyBUaHVtcHJpbnQifXZhciBhPSJ7IjtpZihkLmt0eT09PSJSU0EiKXtpZih0eXBlb2YgZC5uIT0ic3RyaW5nInx8dHlwZW9mIGQuZSE9InN0cmluZyIpe3Rocm93Indyb25nIG4gYW5kIGUgdmFsdWUgZm9yIFJTQSBrZXkifWErPSciZSI6IicrZC5lKyciLCc7YSs9JyJrdHkiOiInK2Qua3R5KyciLCc7YSs9JyJuIjoiJytkLm4rJyJ9J31lbHNle2lmKGQua3R5PT09IkVDIil7aWYodHlwZW9mIGQuY3J2IT0ic3RyaW5nInx8dHlwZW9mIGQueCE9InN0cmluZyJ8fHR5cGVvZiBkLnkhPSJzdHJpbmciKXt0aHJvdyJ3cm9uZyBjcnYsIHggYW5kIHkgdmFsdWUgZm9yIEVDIGtleSJ9YSs9JyJjcnYiOiInK2QuY3J2KyciLCc7YSs9JyJrdHkiOiInK2Qua3R5KyciLCc7YSs9JyJ4IjoiJytkLngrJyIsJzthKz0nInkiOiInK2QueSsnIn0nfWVsc2V7aWYoZC5rdHk9PT0ib2N0Iil7aWYodHlwZW9mIGQuayE9InN0cmluZyIpe3Rocm93Indyb25nIGsgdmFsdWUgZm9yIG9jdChzeW1tZXRyaWMpIGtleSJ9YSs9JyJrdHkiOiInK2Qua3R5KyciLCc7YSs9JyJrIjoiJytkLmsrJyJ9J319fXZhciBiPXJzdHJ0b2hleChhKTt2YXIgYz1LSlVSLmNyeXB0by5VdGlsLmhhc2hIZXgoYiwic2hhMjU2Iik7dmFyIGU9aGV4dG9iNjR1KGMpO3JldHVybiBlfTtLSlVSLmp3cy5JbnREYXRlPXt9O0tKVVIuandzLkludERhdGUuZ2V0PWZ1bmN0aW9uKGEpe2lmKGE9PSJub3ciKXtyZXR1cm4gS0pVUi5qd3MuSW50RGF0ZS5nZXROb3coKX1lbHNle2lmKGE9PSJub3cgKyAxaG91ciIpe3JldHVybiBLSlVSLmp3cy5JbnREYXRlLmdldE5vdygpKzYwKjYwfWVsc2V7aWYoYT09Im5vdyArIDFkYXkiKXtyZXR1cm4gS0pVUi5qd3MuSW50RGF0ZS5nZXROb3coKSs2MCo2MCoyNH1lbHNle2lmKGE9PSJub3cgKyAxbW9udGgiKXtyZXR1cm4gS0pVUi5qd3MuSW50RGF0ZS5nZXROb3coKSs2MCo2MCoyNCozMH1lbHNle2lmKGE9PSJub3cgKyAxeWVhciIpe3JldHVybiBLSlVSLmp3cy5JbnREYXRlLmdldE5vdygpKzYwKjYwKjI0KjM2NX1lbHNle2lmKGEubWF0Y2goL1okLykpe3JldHVybiBLSlVSLmp3cy5JbnREYXRlLmdldFp1bHUoYSl9ZWxzZXtpZihhLm1hdGNoKC9eWzAtOV0rJC8pKXtyZXR1cm4gcGFyc2VJbnQoYSl9fX19fX19dGhyb3cidW5zdXBwb3J0ZWQgZm9ybWF0OiAiK2F9O0tKVVIuandzLkludERhdGUuZ2V0WnVsdT1mdW5jdGlvbihsKXt2YXIgaztpZihrPWwubWF0Y2goLyhcZCspKFxkXGQpKFxkXGQpKFxkXGQpKFxkXGQpKFxkXGQpWi8pKXt2YXIgYj1SZWdFeHAuJDE7dmFyIGk9cGFyc2VJbnQoYik7aWYoYi5sZW5ndGg9PTQpe31lbHNle2lmKGIubGVuZ3RoPT0yKXtpZig1MDw9aSYmaTwxMDApe2k9MTkwMCtpfWVsc2V7aWYoMDw9aSYmaTw1MCl7aT0yMDAwK2l9ZWxzZXt0aHJvdyJtYWxmb3JtZWQgeWVhciBzdHJpbmcgZm9yIFVUQ1RpbWUifX19ZWxzZXt0aHJvdyJtYWxmb3JtZWQgeWVhciBzdHJpbmcifX12YXIgZz1wYXJzZUludChSZWdFeHAuJDIpLTE7dmFyIGo9cGFyc2VJbnQoUmVnRXhwLiQzKTt2YXIgYz1wYXJzZUludChSZWdFeHAuJDQpO3ZhciBlPXBhcnNlSW50KFJlZ0V4cC4kNSk7dmFyIGY9cGFyc2VJbnQoUmVnRXhwLiQ2KTt2YXIgaD1uZXcgRGF0ZShEYXRlLlVUQyhpLGcsaixjLGUsZikpO3JldHVybiB+fihoLzEwMDApfXRocm93InVuc3VwcG9ydGVkIGZvcm1hdDogIitsfTtLSlVSLmp3cy5JbnREYXRlLmdldE5vdz1mdW5jdGlvbigpe3ZhciBhPX5+KG5ldyBEYXRlKCkvMTAwMCk7cmV0dXJuIGF9O0tKVVIuandzLkludERhdGUuaW50RGF0ZTJVVENTdHJpbmc9ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IERhdGUoYSoxMDAwKTtyZXR1cm4gYi50b1VUQ1N0cmluZygpfTtLSlVSLmp3cy5JbnREYXRlLmludERhdGUyWnVsdT1mdW5jdGlvbihlKXt2YXIgaT1uZXcgRGF0ZShlKjEwMDApO3ZhciBoPSgiMDAwMCIraS5nZXRVVENGdWxsWWVhcigpKS5zbGljZSgtNCk7dmFyIGc9KCIwMCIrKGkuZ2V0VVRDTW9udGgoKSsxKSkuc2xpY2UoLTIpO3ZhciBiPSgiMDAiK2kuZ2V0VVRDRGF0ZSgpKS5zbGljZSgtMik7dmFyIGE9KCIwMCIraS5nZXRVVENIb3VycygpKS5zbGljZSgtMik7dmFyIGM9KCIwMCIraS5nZXRVVENNaW51dGVzKCkpLnNsaWNlKC0yKTt2YXIgZj0oIjAwIitpLmdldFVUQ1NlY29uZHMoKSkuc2xpY2UoLTIpO3JldHVybiBoK2crYithK2MrZisiWiJ9Ow0KLyohIGp3c2pzLTIuMC4xIChjKSAyMDEwLTIwMTUgS2VuamkgVXJ1c2hpbWEgfCBranVyLmdpdGh1Yi5jb20vanNqd3MvbGljZW5zZQ0KICovDQppZih0eXBlb2YgS0pVUj09InVuZGVmaW5lZCJ8fCFLSlVSKXtLSlVSPXt9fWlmKHR5cGVvZiBLSlVSLmp3cz09InVuZGVmaW5lZCJ8fCFLSlVSLmp3cyl7S0pVUi5qd3M9e319S0pVUi5qd3MuSldTSlM9ZnVuY3Rpb24oKXt2YXIgYT1LSlVSLmp3cy5KV1M7dGhpcy5hSGVhZGVyPVtdO3RoaXMuc1BheWxvYWQ9IiI7dGhpcy5hU2lnbmF0dXJlPVtdO3RoaXMuaW5pdD1mdW5jdGlvbigpe3RoaXMuYUhlYWRlcj1bXTt0aGlzLnNQYXlsb2FkPSIiO3RoaXMuYVNpZ25hdHVyZT1bXX07dGhpcy5pbml0V2l0aEpXUz1mdW5jdGlvbihjKXt0aGlzLmluaXQoKTt2YXIgYj1uZXcgS0pVUi5qd3MuSldTKCk7Yi5wYXJzZUpXUyhjKTt0aGlzLmFIZWFkZXIucHVzaChiLnBhcnNlZEpXUy5oZWFkQjY0VSk7dGhpcy5zUGF5bG9hZD1iLnBhcnNlZEpXUy5wYXlsb2FkQjY0VTt0aGlzLmFTaWduYXR1cmUucHVzaChiLnBhcnNlZEpXUy5zaWd2YWxCNjRVKX07dGhpcy5hZGRTaWduYXR1cmVCeUhlYWRlcktleT1mdW5jdGlvbihlLGIpe3ZhciBkPWI2NHV0b3V0ZjgodGhpcy5zUGF5bG9hZCk7dmFyIGM9bmV3IEtKVVIuandzLkpXUygpO3ZhciBmPWMuZ2VuZXJhdGVKV1NCeVAxUHJ2S2V5KGUsZCxiKTt0aGlzLmFIZWFkZXIucHVzaChjLnBhcnNlZEpXUy5oZWFkQjY0VSk7dGhpcy5hU2lnbmF0dXJlLnB1c2goYy5wYXJzZWRKV1Muc2lndmFsQjY0VSl9O3RoaXMuYWRkU2lnbmF0dXJlQnlIZWFkZXJQYXlsb2FkS2V5PWZ1bmN0aW9uKGUsZCxiKXt2YXIgYz1uZXcgS0pVUi5qd3MuSldTKCk7dmFyIGY9Yy5nZW5lcmF0ZUpXU0J5UDFQcnZLZXkoZSxkLGIpO3RoaXMuYUhlYWRlci5wdXNoKGMucGFyc2VkSldTLmhlYWRCNjRVKTt0aGlzLnNQYXlsb2FkPWMucGFyc2VkSldTLnBheWxvYWRCNjRVO3RoaXMuYVNpZ25hdHVyZS5wdXNoKGMucGFyc2VkSldTLnNpZ3ZhbEI2NFUpfTt0aGlzLnZlcmlmeVdpdGhDZXJ0cz1mdW5jdGlvbihjKXtpZih0aGlzLmFIZWFkZXIubGVuZ3RoIT1jLmxlbmd0aCl7dGhyb3cibnVtIGhlYWRlcnMgZG9lcyBub3QgbWF0Y2ggd2l0aCBudW0gY2VydHMifWlmKHRoaXMuYVNpZ25hdHVyZS5sZW5ndGghPWMubGVuZ3RoKXt0aHJvdyJudW0gc2lnbmF0dXJlcyBkb2VzIG5vdCBtYXRjaCB3aXRoIG51bSBjZXJ0cyJ9dmFyIGs9dGhpcy5zUGF5bG9hZDt2YXIgZz0iIjtmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXTt2YXIgZj10aGlzLmFIZWFkZXJbZF07dmFyIG09dGhpcy5hU2lnbmF0dXJlW2RdO3ZhciBiPWYrIi4iK2srIi4iK207dmFyIGo9bmV3IEtKVVIuandzLkpXUygpO3RyeXt2YXIgbD1qLnZlcmlmeUpXU0J5UGVtWDUwOUNlcnQoYixlKTtpZihsIT0xKXtnKz0oZCsxKSsidGggc2lnbmF0dXJlIHVubWF0Y2guICJ9fWNhdGNoKGgpe2crPShkKzEpKyJ0aCBzaWduYXR1cmUgZmFpbCgiK2grIikuICJ9fWlmKGc9PSIiKXtyZXR1cm4gMX1lbHNle3Rocm93IGd9fTt0aGlzLnJlYWRKV1NKUz1mdW5jdGlvbihiKXt2YXIgYz1hLnJlYWRTYWZlSlNPTlN0cmluZyhiKTtpZihjPT1udWxsKXt0aHJvdyJhcmd1bWVudCBpcyBub3QgSlNPTiBzdHJpbmc6ICIrYn10aGlzLmFIZWFkZXI9Yy5oZWFkZXJzO3RoaXMuc1BheWxvYWQ9Yy5wYXlsb2FkO3RoaXMuYVNpZ25hdHVyZT1jLnNpZ25hdHVyZXN9O3RoaXMuZ2V0SlNPTj1mdW5jdGlvbigpe3JldHVybntoZWFkZXJzOnRoaXMuYUhlYWRlcixwYXlsb2FkOnRoaXMuc1BheWxvYWQsc2lnbmF0dXJlczp0aGlzLmFTaWduYXR1cmV9fTt0aGlzLmlzRW1wdHk9ZnVuY3Rpb24oKXtpZih0aGlzLmFIZWFkZXIubGVuZ3RoPT0wKXtyZXR1cm4gMX1yZXR1cm4gMH19Ow0KLyohIG5vZGV1dGlsLTEuMC4wIChjKSAyMDE1IEtlbmppIFVydXNoaW1hIHwga2p1ci5naXRodWIuY29tL2pzcnNhc2lnbi9saWNlbnNlDQogKi8NCmZ1bmN0aW9uIHJlYWRGaWxlVVRGOChhKXtyZXR1cm4gcmVxdWlyZSgiZnMiKS5yZWFkRmlsZVN5bmMoYSwidXRmOCIpfWZ1bmN0aW9uIHJlYWRGaWxlSGV4QnlCaW4oYyl7dmFyIGI9cmVxdWlyZSgianNyc2FzaWduIik7dmFyIGE9cmVxdWlyZSgiZnMiKTtyZXR1cm4gYi5yc3RydG9oZXgoYS5yZWFkRmlsZVN5bmMoYywiYmluYXJ5IikpfWZ1bmN0aW9uIHJlYWRGaWxlKGIpe3ZhciBhPXJlcXVpcmUoImZzIik7cmV0dXJuIGEucmVhZEZpbGVTeW5jKGIsImJpbmFyeSIpfWZ1bmN0aW9uIHNhdmVGaWxlKGMsYil7dmFyIGE9cmVxdWlyZSgiZnMiKTthLndyaXRlRmlsZVN5bmMoYyxiLCJiaW5hcnkiKX1mdW5jdGlvbiBzYXZlRmlsZUJpbkJ5SGV4KGUsYil7dmFyIGE9cmVxdWlyZSgiZnMiKTt2YXIgYz1yZXF1aXJlKCJqc3JzYXNpZ24iKTt2YXIgZD1jLmhleHRvcnN0cihiKTthLndyaXRlRmlsZVN5bmMoZSxkLCJiaW5hcnkiKX07DQpleHBvcnRzLlNlY3VyZVJhbmRvbSA9IFNlY3VyZVJhbmRvbTsNCmV4cG9ydHMucm5nX3NlZWRfdGltZSA9IHJuZ19zZWVkX3RpbWU7DQoNCmV4cG9ydHMuQmlnSW50ZWdlciA9IEJpZ0ludGVnZXI7DQpleHBvcnRzLlJTQUtleSA9IFJTQUtleTsNCmV4cG9ydHMuRUNEU0EgPSBLSlVSLmNyeXB0by5FQ0RTQTsNCmV4cG9ydHMuRFNBID0gS0pVUi5jcnlwdG8uRFNBOw0KZXhwb3J0cy5TaWduYXR1cmUgPSBLSlVSLmNyeXB0by5TaWduYXR1cmU7DQpleHBvcnRzLk1lc3NhZ2VEaWdlc3QgPSBLSlVSLmNyeXB0by5NZXNzYWdlRGlnZXN0Ow0KZXhwb3J0cy5NYWMgPSBLSlVSLmNyeXB0by5NYWM7DQpleHBvcnRzLktFWVVUSUwgPSBLRVlVVElMOw0KZXhwb3J0cy5BU04xSEVYID0gQVNOMUhFWDsNCmV4cG9ydHMuWDUwOSA9IFg1MDk7DQpleHBvcnRzLkNyeXB0b0pTID0gQ3J5cHRvSlM7DQoNCi8vIGV4dC9iYXNlNjQuanMNCmV4cG9ydHMuYjY0dG9oZXggPSBiNjR0b2hleDsNCmV4cG9ydHMuYjY0dG9CQSA9IGI2NHRvQkE7DQoNCi8vIGJhc2U2NHguanMNCmV4cG9ydHMuc3RvQkEgPSBzdG9CQTsNCmV4cG9ydHMuQkF0b3MgPSBCQXRvczsNCmV4cG9ydHMuQkF0b2hleCA9IEJBdG9oZXg7DQpleHBvcnRzLnN0b2hleCA9IHN0b2hleDsNCmV4cG9ydHMuc3RvYjY0ID0gc3RvYjY0Ow0KZXhwb3J0cy5zdG9iNjR1ID0gc3RvYjY0dTsNCmV4cG9ydHMuYjY0dXRvcyA9IGI2NHV0b3M7DQpleHBvcnRzLmI2NHRvYjY0dSA9IGI2NHRvYjY0dTsNCmV4cG9ydHMuYjY0dXRvYjY0ID0gYjY0dXRvYjY0Ow0KZXhwb3J0cy5oZXgyYjY0ID0gaGV4MmI2NDsNCmV4cG9ydHMuaGV4dG9iNjR1ID0gaGV4dG9iNjR1Ow0KZXhwb3J0cy5iNjR1dG9oZXggPSBiNjR1dG9oZXg7DQpleHBvcnRzLmI2NHRvaGV4ID0gYjY0dG9oZXg7DQpleHBvcnRzLnV0Zjh0b2I2NHUgPSB1dGY4dG9iNjR1Ow0KZXhwb3J0cy5iNjR1dG91dGY4ID0gYjY0dXRvdXRmODsNCmV4cG9ydHMudXRmOHRvYjY0ID0gdXRmOHRvYjY0Ow0KZXhwb3J0cy5iNjR0b3V0ZjggPSBiNjR0b3V0Zjg7DQpleHBvcnRzLnV0Zjh0b2hleCA9IHV0Zjh0b2hleDsNCmV4cG9ydHMuaGV4dG91dGY4ID0gaGV4dG91dGY4Ow0KZXhwb3J0cy5oZXh0b3JzdHIgPSBoZXh0b3JzdHI7DQpleHBvcnRzLnJzdHJ0b2hleCA9IHJzdHJ0b2hleDsNCmV4cG9ydHMubmV3bGluZV90b1VuaXggPSBuZXdsaW5lX3RvVW5peDsNCmV4cG9ydHMubmV3bGluZV90b0RvcyA9IG5ld2xpbmVfdG9Eb3M7DQpleHBvcnRzLmludGFyeXN0cnRvaGV4ID0gaW50YXJ5c3RydG9oZXg7DQpleHBvcnRzLnN0cmRpZmZpZHggPSBzdHJkaWZmaWR4Ow0KDQpleHBvcnRzLmNyeXB0byA9IEtKVVIuY3J5cHRvOw0KZXhwb3J0cy5hc24xID0gS0pVUi5hc24xOw0KZXhwb3J0cy5qd3MgPSBLSlVSLmp3czsNCg0KZXhwb3J0cy5yZWFkRmlsZVVURjggPSByZWFkRmlsZVVURjg7DQpleHBvcnRzLnJlYWRGaWxlSGV4QnlCaW4gPSByZWFkRmlsZUhleEJ5QmluOw0KZXhwb3J0cy5yZWFkRmlsZSA9IHJlYWRGaWxlOw0KZXhwb3J0cy5zYXZlRmlsZSA9IHNhdmVGaWxlOw0KZXhwb3J0cy5zYXZlRmlsZUJpbkJ5SGV4ID0gc2F2ZUZpbGVCaW5CeUhleDsNCg0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7ImJ1ZmZlciI6OTMsImZzIjo4NiwianNyc2FzaWduIjo1NDB9XSw1NDE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGJuID0gcmVxdWlyZSgnYm4uanMnKTsNCnZhciBicm9yYW5kID0gcmVxdWlyZSgnYnJvcmFuZCcpOw0KDQpmdW5jdGlvbiBNaWxsZXJSYWJpbihyYW5kKSB7DQogIHRoaXMucmFuZCA9IHJhbmQgfHwgbmV3IGJyb3JhbmQuUmFuZCgpOw0KfQ0KbW9kdWxlLmV4cG9ydHMgPSBNaWxsZXJSYWJpbjsNCg0KTWlsbGVyUmFiaW4uY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKHJhbmQpIHsNCiAgcmV0dXJuIG5ldyBNaWxsZXJSYWJpbihyYW5kKTsNCn07DQoNCk1pbGxlclJhYmluLnByb3RvdHlwZS5fcmFuZCA9IGZ1bmN0aW9uIF9yYW5kKG4pIHsNCiAgdmFyIGxlbiA9IG4uYml0TGVuZ3RoKCk7DQogIHZhciBidWYgPSB0aGlzLnJhbmQuZ2VuZXJhdGUoTWF0aC5jZWlsKGxlbiAvIDgpKTsNCg0KICAvLyBTZXQgbG93IGJpdHMNCiAgYnVmWzBdIHw9IDM7DQoNCiAgLy8gTWFzayBoaWdoIGJpdHMNCiAgdmFyIG1hc2sgPSBsZW4gJiAweDc7DQogIGlmIChtYXNrICE9PSAwKQ0KICAgIGJ1ZltidWYubGVuZ3RoIC0gMV0gPj49IDcgLSBtYXNrOw0KDQogIHJldHVybiBuZXcgYm4oYnVmKTsNCn0NCg0KTWlsbGVyUmFiaW4ucHJvdG90eXBlLnRlc3QgPSBmdW5jdGlvbiB0ZXN0KG4sIGssIGNiKSB7DQogIHZhciBsZW4gPSBuLmJpdExlbmd0aCgpOw0KICB2YXIgcmVkID0gYm4ubW9udChuKTsNCiAgdmFyIHJvbmUgPSBuZXcgYm4oMSkudG9SZWQocmVkKTsNCg0KICBpZiAoIWspDQogICAgayA9IE1hdGgubWF4KDEsIChsZW4gLyA0OCkgfCAwKTsNCg0KICAvLyBGaW5kIGQgYW5kIHMsIChuIC0gMSkgPSAoMiBeIHMpICogZDsNCiAgdmFyIG4xID0gbi5zdWJuKDEpOw0KICB2YXIgbjIgPSBuMS5zdWJuKDEpOw0KICBmb3IgKHZhciBzID0gMDsgIW4xLnRlc3RuKHMpOyBzKyspIHt9DQogIHZhciBkID0gbi5zaHJuKHMpOw0KDQogIHZhciBybjEgPSBuMS50b1JlZChyZWQpOw0KDQogIHZhciBwcmltZSA9IHRydWU7DQogIGZvciAoOyBrID4gMDsgay0tKSB7DQogICAgdmFyIGEgPSB0aGlzLl9yYW5kKG4yKTsNCiAgICBpZiAoY2IpDQogICAgICBjYihhKTsNCg0KICAgIHZhciB4ID0gYS50b1JlZChyZWQpLnJlZFBvdyhkKTsNCiAgICBpZiAoeC5jbXAocm9uZSkgPT09IDAgfHwgeC5jbXAocm4xKSA9PT0gMCkNCiAgICAgIGNvbnRpbnVlOw0KDQogICAgZm9yICh2YXIgaSA9IDE7IGkgPCBzOyBpKyspIHsNCiAgICAgIHggPSB4LnJlZFNxcigpOw0KDQogICAgICBpZiAoeC5jbXAocm9uZSkgPT09IDApDQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgIGlmICh4LmNtcChybjEpID09PSAwKQ0KICAgICAgICBicmVhazsNCiAgICB9DQoNCiAgICBpZiAoaSA9PT0gcykNCiAgICAgIHJldHVybiBmYWxzZTsNCiAgfQ0KDQogIHJldHVybiBwcmltZTsNCn07DQoNCk1pbGxlclJhYmluLnByb3RvdHlwZS5nZXREaXZpc29yID0gZnVuY3Rpb24gZ2V0RGl2aXNvcihuLCBrKSB7DQogIHZhciBsZW4gPSBuLmJpdExlbmd0aCgpOw0KICB2YXIgcmVkID0gYm4ubW9udChuKTsNCiAgdmFyIHJvbmUgPSBuZXcgYm4oMSkudG9SZWQocmVkKTsNCg0KICBpZiAoIWspDQogICAgayA9IE1hdGgubWF4KDEsIChsZW4gLyA0OCkgfCAwKTsNCg0KICAvLyBGaW5kIGQgYW5kIHMsIChuIC0gMSkgPSAoMiBeIHMpICogZDsNCiAgdmFyIG4xID0gbi5zdWJuKDEpOw0KICB2YXIgbjIgPSBuMS5zdWJuKDEpOw0KICBmb3IgKHZhciBzID0gMDsgIW4xLnRlc3RuKHMpOyBzKyspIHt9DQogIHZhciBkID0gbi5zaHJuKHMpOw0KDQogIHZhciBybjEgPSBuMS50b1JlZChyZWQpOw0KDQogIGZvciAoOyBrID4gMDsgay0tKSB7DQogICAgdmFyIGEgPSB0aGlzLl9yYW5kKG4yKTsNCg0KICAgIHZhciBnID0gbi5nY2QoYSk7DQogICAgaWYgKGcuY21wbigxKSAhPT0gMCkNCiAgICAgIHJldHVybiBnOw0KDQogICAgdmFyIHggPSBhLnRvUmVkKHJlZCkucmVkUG93KGQpOw0KICAgIGlmICh4LmNtcChyb25lKSA9PT0gMCB8fCB4LmNtcChybjEpID09PSAwKQ0KICAgICAgY29udGludWU7DQoNCiAgICBmb3IgKHZhciBpID0gMTsgaSA8IHM7IGkrKykgew0KICAgICAgeCA9IHgucmVkU3FyKCk7DQoNCiAgICAgIGlmICh4LmNtcChyb25lKSA9PT0gMCkNCiAgICAgICAgcmV0dXJuIHguZnJvbVJlZCgpLnN1Ym4oMSkuZ2NkKG4pOw0KICAgICAgaWYgKHguY21wKHJuMSkgPT09IDApDQogICAgICAgIGJyZWFrOw0KICAgIH0NCg0KICAgIGlmIChpID09PSBzKSB7DQogICAgICB4ID0geC5yZWRTcXIoKTsNCiAgICAgIHJldHVybiB4LmZyb21SZWQoKS5zdWJuKDEpLmdjZChuKTsNCiAgICB9DQogIH0NCg0KICByZXR1cm4gZmFsc2U7DQp9Ow0KDQp9LHsiYm4uanMiOjU5LCJicm9yYW5kIjo2MH1dLDU0MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IGFzc2VydDsNCg0KZnVuY3Rpb24gYXNzZXJ0KHZhbCwgbXNnKSB7DQogIGlmICghdmFsKQ0KICAgIHRocm93IG5ldyBFcnJvcihtc2cgfHwgJ0Fzc2VydGlvbiBmYWlsZWQnKTsNCn0NCg0KYXNzZXJ0LmVxdWFsID0gZnVuY3Rpb24gYXNzZXJ0RXF1YWwobCwgciwgbXNnKSB7DQogIGlmIChsICE9IHIpDQogICAgdGhyb3cgbmV3IEVycm9yKG1zZyB8fCAoJ0Fzc2VydGlvbiBmYWlsZWQ6ICcgKyBsICsgJyAhPSAnICsgcikpOw0KfTsNCg0KfSx7fV0sNTQzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAocHJvY2Vzcyl7DQovLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuOS4wDQooZnVuY3Rpb24oKSB7DQogIHZhciBKU09OU3RvcmFnZSwgTG9jYWxTdG9yYWdlLCBRVU9UQV9FWENFRURFRF9FUlIsIFN0b3JhZ2VFdmVudCwgZXZlbnRzLCBmcywgcGF0aCwgX2VtcHR5RGlyZWN0b3J5LCBfcm0sDQogICAgX19leHRlbmRzID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChfX2hhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sDQogICAgX19oYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7DQoNCiAgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTsNCg0KICBmcyA9IHJlcXVpcmUoJ2ZzJyk7DQoNCiAgZXZlbnRzID0gcmVxdWlyZSgnZXZlbnRzJyk7DQoNCiAgX2VtcHR5RGlyZWN0b3J5ID0gZnVuY3Rpb24odGFyZ2V0KSB7DQogICAgdmFyIHAsIF9pLCBfbGVuLCBfcmVmLCBfcmVzdWx0czsNCiAgICBfcmVmID0gZnMucmVhZGRpclN5bmModGFyZ2V0KTsNCiAgICBfcmVzdWx0cyA9IFtdOw0KICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZi5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykgew0KICAgICAgcCA9IF9yZWZbX2ldOw0KICAgICAgX3Jlc3VsdHMucHVzaChfcm0ocGF0aC5qb2luKHRhcmdldCwgcCkpKTsNCiAgICB9DQogICAgcmV0dXJuIF9yZXN1bHRzOw0KICB9Ow0KDQogIF9ybSA9IGZ1bmN0aW9uKHRhcmdldCkgew0KICAgIGlmIChmcy5zdGF0U3luYyh0YXJnZXQpLmlzRGlyZWN0b3J5KCkpIHsNCiAgICAgIF9lbXB0eURpcmVjdG9yeSh0YXJnZXQpOw0KICAgICAgcmV0dXJuIGZzLnJtZGlyU3luYyh0YXJnZXQpOw0KICAgIH0gZWxzZSB7DQogICAgICByZXR1cm4gZnMudW5saW5rU3luYyh0YXJnZXQpOw0KICAgIH0NCiAgfTsNCg0KICBRVU9UQV9FWENFRURFRF9FUlIgPSAoZnVuY3Rpb24oX3N1cGVyKSB7DQogICAgX19leHRlbmRzKFFVT1RBX0VYQ0VFREVEX0VSUiwgX3N1cGVyKTsNCg0KICAgIGZ1bmN0aW9uIFFVT1RBX0VYQ0VFREVEX0VSUihfYXRfbWVzc2FnZSkgew0KICAgICAgdGhpcy5tZXNzYWdlID0gX2F0X21lc3NhZ2UgIT0gbnVsbCA/IF9hdF9tZXNzYWdlIDogJ1Vua25vd24gZXJyb3IuJzsNCiAgICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSAhPSBudWxsKSB7DQogICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIHRoaXMuY29uc3RydWN0b3IpOw0KICAgICAgfQ0KICAgICAgdGhpcy5uYW1lID0gdGhpcy5jb25zdHJ1Y3Rvci5uYW1lOw0KICAgIH0NCg0KICAgIFFVT1RBX0VYQ0VFREVEX0VSUi5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHsNCiAgICAgIHJldHVybiB0aGlzLm5hbWUgKyAiOiAiICsgdGhpcy5tZXNzYWdlOw0KICAgIH07DQoNCiAgICByZXR1cm4gUVVPVEFfRVhDRUVERURfRVJSOw0KDQogIH0pKEVycm9yKTsNCg0KICBTdG9yYWdlRXZlbnQgPSAoZnVuY3Rpb24oKSB7DQogICAgZnVuY3Rpb24gU3RvcmFnZUV2ZW50KF9hdF9rZXksIF9hdF9vbGRWYWx1ZSwgX2F0X25ld1ZhbHVlLCBfYXRfdXJsLCBfYXRfc3RvcmFnZUFyZWEpIHsNCiAgICAgIHRoaXMua2V5ID0gX2F0X2tleTsNCiAgICAgIHRoaXMub2xkVmFsdWUgPSBfYXRfb2xkVmFsdWU7DQogICAgICB0aGlzLm5ld1ZhbHVlID0gX2F0X25ld1ZhbHVlOw0KICAgICAgdGhpcy51cmwgPSBfYXRfdXJsOw0KICAgICAgdGhpcy5zdG9yYWdlQXJlYSA9IF9hdF9zdG9yYWdlQXJlYSAhPSBudWxsID8gX2F0X3N0b3JhZ2VBcmVhIDogJ2xvY2FsU3RvcmFnZSc7DQogICAgfQ0KDQogICAgcmV0dXJuIFN0b3JhZ2VFdmVudDsNCg0KICB9KSgpOw0KDQogIExvY2FsU3RvcmFnZSA9IChmdW5jdGlvbihfc3VwZXIpIHsNCiAgICB2YXIgTWV0YUtleSwgY3JlYXRlTWFwOw0KDQogICAgX19leHRlbmRzKExvY2FsU3RvcmFnZSwgX3N1cGVyKTsNCg0KICAgIGZ1bmN0aW9uIExvY2FsU3RvcmFnZShfYXRfbG9jYXRpb24sIF9hdF9xdW90YSkgew0KICAgICAgdGhpcy5sb2NhdGlvbiA9IF9hdF9sb2NhdGlvbjsNCiAgICAgIHRoaXMucXVvdGEgPSBfYXRfcXVvdGEgIT0gbnVsbCA/IF9hdF9xdW90YSA6IDUgKiAxMDI0ICogMTAyNDsNCiAgICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBMb2NhbFN0b3JhZ2UpKSB7DQogICAgICAgIHJldHVybiBuZXcgTG9jYWxTdG9yYWdlKHRoaXMubG9jYXRpb24sIHRoaXMucXVvdGEpOw0KICAgICAgfQ0KICAgICAgdGhpcy5sZW5ndGggPSAwOw0KICAgICAgdGhpcy5ieXRlc0luVXNlID0gMDsNCiAgICAgIHRoaXMua2V5cyA9IFtdOw0KICAgICAgdGhpcy5tZXRhS2V5TWFwID0gY3JlYXRlTWFwKCk7DQogICAgICB0aGlzLmV2ZW50VXJsID0gInBpZDoiICsgcHJvY2Vzcy5waWQ7DQogICAgICB0aGlzLl9pbml0KCk7DQogICAgICB0aGlzLlFVT1RBX0VYQ0VFREVEX0VSUiA9IFFVT1RBX0VYQ0VFREVEX0VSUjsNCiAgICB9DQoNCiAgICBNZXRhS2V5ID0gKGZ1bmN0aW9uKCkgew0KICAgICAgZnVuY3Rpb24gTWV0YUtleShfYXRfa2V5LCBfYXRfaW5kZXgpIHsNCiAgICAgICAgdGhpcy5rZXkgPSBfYXRfa2V5Ow0KICAgICAgICB0aGlzLmluZGV4ID0gX2F0X2luZGV4Ow0KICAgICAgICBpZiAoISh0aGlzIGluc3RhbmNlb2YgTWV0YUtleSkpIHsNCiAgICAgICAgICByZXR1cm4gbmV3IE1ldGFLZXkodGhpcy5rZXksIHRoaXMuaW5kZXgpOw0KICAgICAgICB9DQogICAgICB9DQoNCiAgICAgIHJldHVybiBNZXRhS2V5Ow0KDQogICAgfSkoKTsNCg0KICAgIGNyZWF0ZU1hcCA9IGZ1bmN0aW9uKCkgew0KICAgICAgdmFyIE1hcDsNCiAgICAgIE1hcCA9IGZ1bmN0aW9uKCkge307DQogICAgICBNYXAucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShudWxsKTsNCiAgICAgIHJldHVybiBuZXcgTWFwKCk7DQogICAgfTsNCg0KICAgIExvY2FsU3RvcmFnZS5wcm90b3R5cGUuX2luaXQgPSBmdW5jdGlvbigpIHsNCiAgICAgIHZhciBpbmRleCwgaywgc3RhdCwgX01ldGFLZXksIF9kZWNvZGVkS2V5LCBfaSwgX2tleXMsIF9sZW47DQogICAgICBpZiAoZnMuZXhpc3RzU3luYyh0aGlzLmxvY2F0aW9uKSkgew0KICAgICAgICBpZiAoIWZzLnN0YXRTeW5jKHRoaXMubG9jYXRpb24pLmlzRGlyZWN0b3J5KCkpIHsNCiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIkEgZmlsZSBleGlzdHMgYXQgdGhlIGxvY2F0aW9uICciICsgdGhpcy5sb2NhdGlvbiArICInIHdoZW4gdHJ5aW5nIHRvIGNyZWF0ZS9vcGVuIGxvY2FsU3RvcmFnZSIpOw0KICAgICAgICB9DQogICAgICB9DQogICAgICB0aGlzLmJ5dGVzSW5Vc2UgPSAwOw0KICAgICAgdGhpcy5sZW5ndGggPSAwOw0KICAgICAgaWYgKCFmcy5leGlzdHNTeW5jKHRoaXMubG9jYXRpb24pKSB7DQogICAgICAgIGZzLm1rZGlyU3luYyh0aGlzLmxvY2F0aW9uKTsNCiAgICAgICAgcmV0dXJuOw0KICAgICAgfQ0KICAgICAgX2tleXMgPSBmcy5yZWFkZGlyU3luYyh0aGlzLmxvY2F0aW9uKTsNCiAgICAgIGZvciAoaW5kZXggPSBfaSA9IDAsIF9sZW4gPSBfa2V5cy5sZW5ndGg7IF9pIDwgX2xlbjsgaW5kZXggPSArK19pKSB7DQogICAgICAgIGsgPSBfa2V5c1tpbmRleF07DQogICAgICAgIF9kZWNvZGVkS2V5ID0gZGVjb2RlVVJJQ29tcG9uZW50KGspOw0KICAgICAgICB0aGlzLmtleXMucHVzaChfZGVjb2RlZEtleSk7DQogICAgICAgIF9NZXRhS2V5ID0gbmV3IE1ldGFLZXkoaywgaW5kZXgpOw0KICAgICAgICB0aGlzLm1ldGFLZXlNYXBbX2RlY29kZWRLZXldID0gX01ldGFLZXk7DQogICAgICAgIHN0YXQgPSB0aGlzLmdldFN0YXQoayk7DQogICAgICAgIGlmICgoc3RhdCAhPSBudWxsID8gc3RhdC5zaXplIDogdm9pZCAwKSAhPSBudWxsKSB7DQogICAgICAgICAgX01ldGFLZXkuc2l6ZSA9IHN0YXQuc2l6ZTsNCiAgICAgICAgICB0aGlzLmJ5dGVzSW5Vc2UgKz0gc3RhdC5zaXplOw0KICAgICAgICB9DQogICAgICB9DQogICAgICByZXR1cm4gdGhpcy5sZW5ndGggPSBfa2V5cy5sZW5ndGg7DQogICAgfTsNCg0KICAgIExvY2FsU3RvcmFnZS5wcm90b3R5cGUuc2V0SXRlbSA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsNCiAgICAgIHZhciBlbmNvZGVkS2V5LCBldm50LCBleGlzdHNCZWZvcmVTZXQsIGZpbGVuYW1lLCBoYXNMaXN0ZW5lcnMsIG1ldGFLZXksIG9sZExlbmd0aCwgb2xkVmFsdWUsIHZhbHVlU3RyaW5nLCB2YWx1ZVN0cmluZ0xlbmd0aDsNCiAgICAgIGhhc0xpc3RlbmVycyA9IGV2ZW50cy5FdmVudEVtaXR0ZXIubGlzdGVuZXJDb3VudCh0aGlzLCAnc3RvcmFnZScpOw0KICAgICAgb2xkVmFsdWUgPSBudWxsOw0KICAgICAgaWYgKGhhc0xpc3RlbmVycykgew0KICAgICAgICBvbGRWYWx1ZSA9IHRoaXMuZ2V0SXRlbShrZXkpOw0KICAgICAgfQ0KICAgICAga2V5ID0ga2V5LnRvU3RyaW5nKCk7DQogICAgICBlbmNvZGVkS2V5ID0gZW5jb2RlVVJJQ29tcG9uZW50KGtleSk7DQogICAgICBmaWxlbmFtZSA9IHBhdGguam9pbih0aGlzLmxvY2F0aW9uLCBlbmNvZGVkS2V5KTsNCiAgICAgIHZhbHVlU3RyaW5nID0gdmFsdWUudG9TdHJpbmcoKTsNCiAgICAgIHZhbHVlU3RyaW5nTGVuZ3RoID0gdmFsdWVTdHJpbmcubGVuZ3RoOw0KICAgICAgbWV0YUtleSA9IHRoaXMubWV0YUtleU1hcFtrZXldOw0KICAgICAgZXhpc3RzQmVmb3JlU2V0ID0gISFtZXRhS2V5Ow0KICAgICAgaWYgKGV4aXN0c0JlZm9yZVNldCkgew0KICAgICAgICBvbGRMZW5ndGggPSBtZXRhS2V5LnNpemU7DQogICAgICB9IGVsc2Ugew0KICAgICAgICBvbGRMZW5ndGggPSAwOw0KICAgICAgfQ0KICAgICAgaWYgKHRoaXMuYnl0ZXNJblVzZSAtIG9sZExlbmd0aCArIHZhbHVlU3RyaW5nTGVuZ3RoID4gdGhpcy5xdW90YSkgew0KICAgICAgICB0aHJvdyBuZXcgUVVPVEFfRVhDRUVERURfRVJSKCk7DQogICAgICB9DQogICAgICBmcy53cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCB2YWx1ZVN0cmluZywgJ3V0ZjgnKTsNCiAgICAgIGlmICghZXhpc3RzQmVmb3JlU2V0KSB7DQogICAgICAgIG1ldGFLZXkgPSBuZXcgTWV0YUtleShlbmNvZGVkS2V5LCAodGhpcy5rZXlzLnB1c2goa2V5KSkgLSAxKTsNCiAgICAgICAgbWV0YUtleS5zaXplID0gdmFsdWVTdHJpbmdMZW5ndGg7DQogICAgICAgIHRoaXMubWV0YUtleU1hcFtrZXldID0gbWV0YUtleTsNCiAgICAgICAgdGhpcy5sZW5ndGggKz0gMTsNCiAgICAgICAgdGhpcy5ieXRlc0luVXNlICs9IHZhbHVlU3RyaW5nTGVuZ3RoOw0KICAgICAgfQ0KICAgICAgaWYgKGhhc0xpc3RlbmVycykgew0KICAgICAgICBldm50ID0gbmV3IFN0b3JhZ2VFdmVudChrZXksIG9sZFZhbHVlLCB2YWx1ZSwgdGhpcy5ldmVudFVybCk7DQogICAgICAgIHJldHVybiB0aGlzLmVtaXQoJ3N0b3JhZ2UnLCBldm50KTsNCiAgICAgIH0NCiAgICB9Ow0KDQogICAgTG9jYWxTdG9yYWdlLnByb3RvdHlwZS5nZXRJdGVtID0gZnVuY3Rpb24oa2V5KSB7DQogICAgICB2YXIgZmlsZW5hbWUsIG1ldGFLZXk7DQogICAgICBrZXkgPSBrZXkudG9TdHJpbmcoKTsNCiAgICAgIG1ldGFLZXkgPSB0aGlzLm1ldGFLZXlNYXBba2V5XTsNCiAgICAgIGlmICghIW1ldGFLZXkpIHsNCiAgICAgICAgZmlsZW5hbWUgPSBwYXRoLmpvaW4odGhpcy5sb2NhdGlvbiwgbWV0YUtleS5rZXkpOw0KICAgICAgICByZXR1cm4gZnMucmVhZEZpbGVTeW5jKGZpbGVuYW1lLCAndXRmOCcpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICB9DQogICAgfTsNCg0KICAgIExvY2FsU3RvcmFnZS5wcm90b3R5cGUuZ2V0U3RhdCA9IGZ1bmN0aW9uKGtleSkgew0KICAgICAgdmFyIGZpbGVuYW1lOw0KICAgICAga2V5ID0ga2V5LnRvU3RyaW5nKCk7DQogICAgICBmaWxlbmFtZSA9IHBhdGguam9pbih0aGlzLmxvY2F0aW9uLCBlbmNvZGVVUklDb21wb25lbnQoa2V5KSk7DQogICAgICBpZiAoZnMuZXhpc3RzU3luYyhmaWxlbmFtZSkpIHsNCiAgICAgICAgcmV0dXJuIGZzLnN0YXRTeW5jKGZpbGVuYW1lKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiBudWxsOw0KICAgICAgfQ0KICAgIH07DQoNCiAgICBMb2NhbFN0b3JhZ2UucHJvdG90eXBlLnJlbW92ZUl0ZW0gPSBmdW5jdGlvbihrZXkpIHsNCiAgICAgIHZhciBldm50LCBmaWxlbmFtZSwgaGFzTGlzdGVuZXJzLCBrLCBtZXRhLCBtZXRhS2V5LCBvbGRWYWx1ZSwgdiwgX3JlZjsNCiAgICAgIGtleSA9IGtleS50b1N0cmluZygpOw0KICAgICAgbWV0YUtleSA9IHRoaXMubWV0YUtleU1hcFtrZXldOw0KICAgICAgaWYgKCEhbWV0YUtleSkgew0KICAgICAgICBoYXNMaXN0ZW5lcnMgPSBldmVudHMuRXZlbnRFbWl0dGVyLmxpc3RlbmVyQ291bnQodGhpcywgJ3N0b3JhZ2UnKTsNCiAgICAgICAgb2xkVmFsdWUgPSBudWxsOw0KICAgICAgICBpZiAoaGFzTGlzdGVuZXJzKSB7DQogICAgICAgICAgb2xkVmFsdWUgPSB0aGlzLmdldEl0ZW0oa2V5KTsNCiAgICAgICAgfQ0KICAgICAgICBkZWxldGUgdGhpcy5tZXRhS2V5TWFwW2tleV07DQogICAgICAgIHRoaXMubGVuZ3RoIC09IDE7DQogICAgICAgIHRoaXMuYnl0ZXNJblVzZSAtPSBtZXRhS2V5LnNpemU7DQogICAgICAgIGZpbGVuYW1lID0gcGF0aC5qb2luKHRoaXMubG9jYXRpb24sIG1ldGFLZXkua2V5KTsNCiAgICAgICAgdGhpcy5rZXlzLnNwbGljZShtZXRhS2V5LmluZGV4LCAxKTsNCiAgICAgICAgX3JlZiA9IHRoaXMubWV0YUtleU1hcDsNCiAgICAgICAgZm9yIChrIGluIF9yZWYpIHsNCiAgICAgICAgICB2ID0gX3JlZltrXTsNCiAgICAgICAgICBtZXRhID0gdGhpcy5tZXRhS2V5TWFwW2tdOw0KICAgICAgICAgIGlmIChtZXRhLmluZGV4ID4gbWV0YUtleS5pbmRleCkgew0KICAgICAgICAgICAgbWV0YS5pbmRleCAtPSAxOw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBfcm0oZmlsZW5hbWUpOw0KICAgICAgICBpZiAoaGFzTGlzdGVuZXJzKSB7DQogICAgICAgICAgZXZudCA9IG5ldyBTdG9yYWdlRXZlbnQoa2V5LCBvbGRWYWx1ZSwgbnVsbCwgdGhpcy5ldmVudFVybCk7DQogICAgICAgICAgcmV0dXJuIHRoaXMuZW1pdCgnc3RvcmFnZScsIGV2bnQpOw0KICAgICAgICB9DQogICAgICB9DQogICAgfTsNCg0KICAgIExvY2FsU3RvcmFnZS5wcm90b3R5cGUua2V5ID0gZnVuY3Rpb24obikgew0KICAgICAgcmV0dXJuIHRoaXMua2V5c1tuXTsNCiAgICB9Ow0KDQogICAgTG9jYWxTdG9yYWdlLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKCkgew0KICAgICAgdmFyIGV2bnQ7DQogICAgICBfZW1wdHlEaXJlY3RvcnkodGhpcy5sb2NhdGlvbik7DQogICAgICB0aGlzLm1ldGFLZXlNYXAgPSBjcmVhdGVNYXAoKTsNCiAgICAgIHRoaXMua2V5cyA9IFtdOw0KICAgICAgdGhpcy5sZW5ndGggPSAwOw0KICAgICAgdGhpcy5ieXRlc0luVXNlID0gMDsNCiAgICAgIGlmIChldmVudHMuRXZlbnRFbWl0dGVyLmxpc3RlbmVyQ291bnQodGhpcywgJ3N0b3JhZ2UnKSkgew0KICAgICAgICBldm50ID0gbmV3IFN0b3JhZ2VFdmVudChudWxsLCBudWxsLCBudWxsLCB0aGlzLmV2ZW50VXJsKTsNCiAgICAgICAgcmV0dXJuIHRoaXMuZW1pdCgnc3RvcmFnZScsIGV2bnQpOw0KICAgICAgfQ0KICAgIH07DQoNCiAgICBMb2NhbFN0b3JhZ2UucHJvdG90eXBlLmdldEJ5dGVzSW5Vc2UgPSBmdW5jdGlvbigpIHsNCiAgICAgIHJldHVybiB0aGlzLmJ5dGVzSW5Vc2U7DQogICAgfTsNCg0KICAgIExvY2FsU3RvcmFnZS5wcm90b3R5cGUuX2RlbGV0ZUxvY2F0aW9uID0gZnVuY3Rpb24oKSB7DQogICAgICBfcm0odGhpcy5sb2NhdGlvbik7DQogICAgICB0aGlzLm1ldGFLZXlNYXAgPSB7fTsNCiAgICAgIHRoaXMua2V5cyA9IFtdOw0KICAgICAgdGhpcy5sZW5ndGggPSAwOw0KICAgICAgcmV0dXJuIHRoaXMuYnl0ZXNJblVzZSA9IDA7DQogICAgfTsNCg0KICAgIHJldHVybiBMb2NhbFN0b3JhZ2U7DQoNCiAgfSkoZXZlbnRzLkV2ZW50RW1pdHRlcik7DQoNCiAgSlNPTlN0b3JhZ2UgPSAoZnVuY3Rpb24oX3N1cGVyKSB7DQogICAgX19leHRlbmRzKEpTT05TdG9yYWdlLCBfc3VwZXIpOw0KDQogICAgZnVuY3Rpb24gSlNPTlN0b3JhZ2UoKSB7DQogICAgICByZXR1cm4gSlNPTlN0b3JhZ2UuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7DQogICAgfQ0KDQogICAgSlNPTlN0b3JhZ2UucHJvdG90eXBlLnNldEl0ZW0gPSBmdW5jdGlvbihrZXksIHZhbHVlKSB7DQogICAgICB2YXIgbmV3VmFsdWU7DQogICAgICBuZXdWYWx1ZSA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKTsNCiAgICAgIHJldHVybiBKU09OU3RvcmFnZS5fX3N1cGVyX18uc2V0SXRlbS5jYWxsKHRoaXMsIGtleSwgbmV3VmFsdWUpOw0KICAgIH07DQoNCiAgICBKU09OU3RvcmFnZS5wcm90b3R5cGUuZ2V0SXRlbSA9IGZ1bmN0aW9uKGtleSkgew0KICAgICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTlN0b3JhZ2UuX19zdXBlcl9fLmdldEl0ZW0uY2FsbCh0aGlzLCBrZXkpKTsNCiAgICB9Ow0KDQogICAgcmV0dXJuIEpTT05TdG9yYWdlOw0KDQogIH0pKExvY2FsU3RvcmFnZSk7DQoNCiAgZXhwb3J0cy5Mb2NhbFN0b3JhZ2UgPSBMb2NhbFN0b3JhZ2U7DQoNCiAgZXhwb3J0cy5KU09OU3RvcmFnZSA9IEpTT05TdG9yYWdlOw0KDQogIGV4cG9ydHMuUVVPVEFfRVhDRUVERURfRVJSID0gUVVPVEFfRVhDRUVERURfRVJSOw0KDQp9KS5jYWxsKHRoaXMpOw0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgnX3Byb2Nlc3MnKSkNCn0seyJfcHJvY2VzcyI6NTUxLCJldmVudHMiOjUyNSwiZnMiOjg2LCJwYXRoIjo1NDh9XSw1NDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHM9eyIyLjE2Ljg0MC4xLjEwMS4zLjQuMS4xIjogImFlcy0xMjgtZWNiIiwNCiIyLjE2Ljg0MC4xLjEwMS4zLjQuMS4yIjogImFlcy0xMjgtY2JjIiwNCiIyLjE2Ljg0MC4xLjEwMS4zLjQuMS4zIjogImFlcy0xMjgtb2ZiIiwNCiIyLjE2Ljg0MC4xLjEwMS4zLjQuMS40IjogImFlcy0xMjgtY2ZiIiwNCiIyLjE2Ljg0MC4xLjEwMS4zLjQuMS4yMSI6ICJhZXMtMTkyLWVjYiIsDQoiMi4xNi44NDAuMS4xMDEuMy40LjEuMjIiOiAiYWVzLTE5Mi1jYmMiLA0KIjIuMTYuODQwLjEuMTAxLjMuNC4xLjIzIjogImFlcy0xOTItb2ZiIiwNCiIyLjE2Ljg0MC4xLjEwMS4zLjQuMS4yNCI6ICJhZXMtMTkyLWNmYiIsDQoiMi4xNi44NDAuMS4xMDEuMy40LjEuNDEiOiAiYWVzLTI1Ni1lY2IiLA0KIjIuMTYuODQwLjEuMTAxLjMuNC4xLjQyIjogImFlcy0yNTYtY2JjIiwNCiIyLjE2Ljg0MC4xLjEwMS4zLjQuMS40MyI6ICJhZXMtMjU2LW9mYiIsDQoiMi4xNi44NDAuMS4xMDEuMy40LjEuNDQiOiAiYWVzLTI1Ni1jZmIiDQp9DQp9LHt9XSw1NDU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vaW5kdXRueS9zZWxmLXNpZ25lZC9ibG9iL2doLXBhZ2VzL2xpYi9hc24xLmpzDQovLyBGZWRvciwgeW91IGFyZSBhbWF6aW5nLg0KDQp2YXIgYXNuMSA9IHJlcXVpcmUoJ2FzbjEuanMnKQ0KDQp2YXIgUlNBUHJpdmF0ZUtleSA9IGFzbjEuZGVmaW5lKCdSU0FQcml2YXRlS2V5JywgZnVuY3Rpb24gKCkgew0KICB0aGlzLnNlcSgpLm9iaigNCiAgICB0aGlzLmtleSgndmVyc2lvbicpLmludCgpLA0KICAgIHRoaXMua2V5KCdtb2R1bHVzJykuaW50KCksDQogICAgdGhpcy5rZXkoJ3B1YmxpY0V4cG9uZW50JykuaW50KCksDQogICAgdGhpcy5rZXkoJ3ByaXZhdGVFeHBvbmVudCcpLmludCgpLA0KICAgIHRoaXMua2V5KCdwcmltZTEnKS5pbnQoKSwNCiAgICB0aGlzLmtleSgncHJpbWUyJykuaW50KCksDQogICAgdGhpcy5rZXkoJ2V4cG9uZW50MScpLmludCgpLA0KICAgIHRoaXMua2V5KCdleHBvbmVudDInKS5pbnQoKSwNCiAgICB0aGlzLmtleSgnY29lZmZpY2llbnQnKS5pbnQoKQ0KICApDQp9KQ0KZXhwb3J0cy5SU0FQcml2YXRlS2V5ID0gUlNBUHJpdmF0ZUtleQ0KDQp2YXIgUlNBUHVibGljS2V5ID0gYXNuMS5kZWZpbmUoJ1JTQVB1YmxpY0tleScsIGZ1bmN0aW9uICgpIHsNCiAgdGhpcy5zZXEoKS5vYmooDQogICAgdGhpcy5rZXkoJ21vZHVsdXMnKS5pbnQoKSwNCiAgICB0aGlzLmtleSgncHVibGljRXhwb25lbnQnKS5pbnQoKQ0KICApDQp9KQ0KZXhwb3J0cy5SU0FQdWJsaWNLZXkgPSBSU0FQdWJsaWNLZXkNCg0KdmFyIFB1YmxpY0tleSA9IGFzbjEuZGVmaW5lKCdTdWJqZWN0UHVibGljS2V5SW5mbycsIGZ1bmN0aW9uICgpIHsNCiAgdGhpcy5zZXEoKS5vYmooDQogICAgdGhpcy5rZXkoJ2FsZ29yaXRobScpLnVzZShBbGdvcml0aG1JZGVudGlmaWVyKSwNCiAgICB0aGlzLmtleSgnc3ViamVjdFB1YmxpY0tleScpLmJpdHN0cigpDQogICkNCn0pDQpleHBvcnRzLlB1YmxpY0tleSA9IFB1YmxpY0tleQ0KDQp2YXIgQWxnb3JpdGhtSWRlbnRpZmllciA9IGFzbjEuZGVmaW5lKCdBbGdvcml0aG1JZGVudGlmaWVyJywgZnVuY3Rpb24gKCkgew0KICB0aGlzLnNlcSgpLm9iaigNCiAgICB0aGlzLmtleSgnYWxnb3JpdGhtJykub2JqaWQoKSwNCiAgICB0aGlzLmtleSgnbm9uZScpLm51bGxfKCkub3B0aW9uYWwoKSwNCiAgICB0aGlzLmtleSgnY3VydmUnKS5vYmppZCgpLm9wdGlvbmFsKCksDQogICAgdGhpcy5rZXkoJ3BhcmFtcycpLnNlcSgpLm9iaigNCiAgICAgIHRoaXMua2V5KCdwJykuaW50KCksDQogICAgICB0aGlzLmtleSgncScpLmludCgpLA0KICAgICAgdGhpcy5rZXkoJ2cnKS5pbnQoKQ0KICAgICkub3B0aW9uYWwoKQ0KICApDQp9KQ0KDQp2YXIgUHJpdmF0ZUtleUluZm8gPSBhc24xLmRlZmluZSgnUHJpdmF0ZUtleUluZm8nLCBmdW5jdGlvbiAoKSB7DQogIHRoaXMuc2VxKCkub2JqKA0KICAgIHRoaXMua2V5KCd2ZXJzaW9uJykuaW50KCksDQogICAgdGhpcy5rZXkoJ2FsZ29yaXRobScpLnVzZShBbGdvcml0aG1JZGVudGlmaWVyKSwNCiAgICB0aGlzLmtleSgnc3ViamVjdFByaXZhdGVLZXknKS5vY3RzdHIoKQ0KICApDQp9KQ0KZXhwb3J0cy5Qcml2YXRlS2V5ID0gUHJpdmF0ZUtleUluZm8NCnZhciBFbmNyeXB0ZWRQcml2YXRlS2V5SW5mbyA9IGFzbjEuZGVmaW5lKCdFbmNyeXB0ZWRQcml2YXRlS2V5SW5mbycsIGZ1bmN0aW9uICgpIHsNCiAgdGhpcy5zZXEoKS5vYmooDQogICAgdGhpcy5rZXkoJ2FsZ29yaXRobScpLnNlcSgpLm9iaigNCiAgICAgIHRoaXMua2V5KCdpZCcpLm9iamlkKCksDQogICAgICB0aGlzLmtleSgnZGVjcnlwdCcpLnNlcSgpLm9iaigNCiAgICAgICAgdGhpcy5rZXkoJ2tkZScpLnNlcSgpLm9iaigNCiAgICAgICAgICB0aGlzLmtleSgnaWQnKS5vYmppZCgpLA0KICAgICAgICAgIHRoaXMua2V5KCdrZGVwYXJhbXMnKS5zZXEoKS5vYmooDQogICAgICAgICAgICB0aGlzLmtleSgnc2FsdCcpLm9jdHN0cigpLA0KICAgICAgICAgICAgdGhpcy5rZXkoJ2l0ZXJzJykuaW50KCkNCiAgICAgICAgICApDQogICAgICAgICksDQogICAgICAgIHRoaXMua2V5KCdjaXBoZXInKS5zZXEoKS5vYmooDQogICAgICAgICAgdGhpcy5rZXkoJ2FsZ28nKS5vYmppZCgpLA0KICAgICAgICAgIHRoaXMua2V5KCdpdicpLm9jdHN0cigpDQogICAgICAgICkNCiAgICAgICkNCiAgICApLA0KICAgIHRoaXMua2V5KCdzdWJqZWN0UHJpdmF0ZUtleScpLm9jdHN0cigpDQogICkNCn0pDQoNCmV4cG9ydHMuRW5jcnlwdGVkUHJpdmF0ZUtleSA9IEVuY3J5cHRlZFByaXZhdGVLZXlJbmZvDQoNCnZhciBEU0FQcml2YXRlS2V5ID0gYXNuMS5kZWZpbmUoJ0RTQVByaXZhdGVLZXknLCBmdW5jdGlvbiAoKSB7DQogIHRoaXMuc2VxKCkub2JqKA0KICAgIHRoaXMua2V5KCd2ZXJzaW9uJykuaW50KCksDQogICAgdGhpcy5rZXkoJ3AnKS5pbnQoKSwNCiAgICB0aGlzLmtleSgncScpLmludCgpLA0KICAgIHRoaXMua2V5KCdnJykuaW50KCksDQogICAgdGhpcy5rZXkoJ3B1Yl9rZXknKS5pbnQoKSwNCiAgICB0aGlzLmtleSgncHJpdl9rZXknKS5pbnQoKQ0KICApDQp9KQ0KZXhwb3J0cy5EU0FQcml2YXRlS2V5ID0gRFNBUHJpdmF0ZUtleQ0KDQpleHBvcnRzLkRTQXBhcmFtID0gYXNuMS5kZWZpbmUoJ0RTQXBhcmFtJywgZnVuY3Rpb24gKCkgew0KICB0aGlzLmludCgpDQp9KQ0KdmFyIEVDUHJpdmF0ZUtleSA9IGFzbjEuZGVmaW5lKCdFQ1ByaXZhdGVLZXknLCBmdW5jdGlvbiAoKSB7DQogIHRoaXMuc2VxKCkub2JqKA0KICAgIHRoaXMua2V5KCd2ZXJzaW9uJykuaW50KCksDQogICAgdGhpcy5rZXkoJ3ByaXZhdGVLZXknKS5vY3RzdHIoKSwNCiAgICB0aGlzLmtleSgncGFyYW1ldGVycycpLm9wdGlvbmFsKCkuZXhwbGljaXQoMCkudXNlKEVDUGFyYW1ldGVycyksDQogICAgdGhpcy5rZXkoJ3B1YmxpY0tleScpLm9wdGlvbmFsKCkuZXhwbGljaXQoMSkuYml0c3RyKCkNCiAgKQ0KfSkNCmV4cG9ydHMuRUNQcml2YXRlS2V5ID0gRUNQcml2YXRlS2V5DQp2YXIgRUNQYXJhbWV0ZXJzID0gYXNuMS5kZWZpbmUoJ0VDUGFyYW1ldGVycycsIGZ1bmN0aW9uICgpIHsNCiAgdGhpcy5jaG9pY2Uoew0KICAgIG5hbWVkQ3VydmU6IHRoaXMub2JqaWQoKQ0KICB9KQ0KfSkNCg0KZXhwb3J0cy5zaWduYXR1cmUgPSBhc24xLmRlZmluZSgnc2lnbmF0dXJlJywgZnVuY3Rpb24gKCkgew0KICB0aGlzLnNlcSgpLm9iaigNCiAgICB0aGlzLmtleSgncicpLmludCgpLA0KICAgIHRoaXMua2V5KCdzJykuaW50KCkNCiAgKQ0KfSkNCg0KfSx7ImFzbjEuanMiOjF9XSw1NDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KLy8gYWRhcHRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hcGF0aWwvcGVtc3RyaXANCnZhciBmaW5kUHJvYyA9IC9Qcm9jLVR5cGU6IDQsRU5DUllQVEVEXHI/XG5ERUstSW5mbzogQUVTLSgoPzoxMjgpfCg/OjE5Mil8KD86MjU2KSktQ0JDLChbMC05QS1IXSspXHI/XG5ccj9cbihbMC05QS16XG5cclwrXC9cPV0rKVxyP1xuL20NCnZhciBzdGFydFJlZ2V4ID0gL14tLS0tLUJFR0lOICguKikgS0VZLS0tLS1ccj9cbi9tDQp2YXIgZnVsbFJlZ2V4ID0gL14tLS0tLUJFR0lOICguKikgS0VZLS0tLS1ccj9cbihbMC05QS16XG5cclwrXC9cPV0rKVxyP1xuLS0tLS1FTkQgXDEgS0VZLS0tLS0kL20NCnZhciBldnAgPSByZXF1aXJlKCdldnBfYnl0ZXN0b2tleScpDQp2YXIgY2lwaGVycyA9IHJlcXVpcmUoJ2Jyb3dzZXJpZnktYWVzJykNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9rZXksIHBhc3N3b3JkKSB7DQogIHZhciBrZXkgPSBva2V5LnRvU3RyaW5nKCkNCiAgdmFyIG1hdGNoID0ga2V5Lm1hdGNoKGZpbmRQcm9jKQ0KICB2YXIgZGVjcnlwdGVkDQogIGlmICghbWF0Y2gpIHsNCiAgICB2YXIgbWF0Y2gyID0ga2V5Lm1hdGNoKGZ1bGxSZWdleCkNCiAgICBkZWNyeXB0ZWQgPSBuZXcgQnVmZmVyKG1hdGNoMlsyXS5yZXBsYWNlKC9ccj9cbi9nLCAnJyksICdiYXNlNjQnKQ0KICB9IGVsc2Ugew0KICAgIHZhciBzdWl0ZSA9ICdhZXMnICsgbWF0Y2hbMV0NCiAgICB2YXIgaXYgPSBuZXcgQnVmZmVyKG1hdGNoWzJdLCAnaGV4JykNCiAgICB2YXIgY2lwaGVyVGV4dCA9IG5ldyBCdWZmZXIobWF0Y2hbM10ucmVwbGFjZSgvXHI/XG4vZywgJycpLCAnYmFzZTY0JykNCiAgICB2YXIgY2lwaGVyS2V5ID0gZXZwKHBhc3N3b3JkLCBpdi5zbGljZSgwLCA4KSwgcGFyc2VJbnQobWF0Y2hbMV0sIDEwKSkua2V5DQogICAgdmFyIG91dCA9IFtdDQogICAgdmFyIGNpcGhlciA9IGNpcGhlcnMuY3JlYXRlRGVjaXBoZXJpdihzdWl0ZSwgY2lwaGVyS2V5LCBpdikNCiAgICBvdXQucHVzaChjaXBoZXIudXBkYXRlKGNpcGhlclRleHQpKQ0KICAgIG91dC5wdXNoKGNpcGhlci5maW5hbCgpKQ0KICAgIGRlY3J5cHRlZCA9IEJ1ZmZlci5jb25jYXQob3V0KQ0KICB9DQogIHZhciB0YWcgPSBrZXkubWF0Y2goc3RhcnRSZWdleClbMV0gKyAnIEtFWScNCiAgcmV0dXJuIHsNCiAgICB0YWc6IHRhZywNCiAgICBkYXRhOiBkZWNyeXB0ZWQNCiAgfQ0KfQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7ImJyb3dzZXJpZnktYWVzIjo2NCwiYnVmZmVyIjo5MywiZXZwX2J5dGVzdG9rZXkiOjUyNn1dLDU0NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQp2YXIgYXNuMSA9IHJlcXVpcmUoJy4vYXNuMScpDQp2YXIgYWVzaWQgPSByZXF1aXJlKCcuL2Flc2lkLmpzb24nKQ0KdmFyIGZpeFByb2MgPSByZXF1aXJlKCcuL2ZpeFByb2MnKQ0KdmFyIGNpcGhlcnMgPSByZXF1aXJlKCdicm93c2VyaWZ5LWFlcycpDQp2YXIgY29tcGF0ID0gcmVxdWlyZSgncGJrZGYyJykNCm1vZHVsZS5leHBvcnRzID0gcGFyc2VLZXlzDQoNCmZ1bmN0aW9uIHBhcnNlS2V5cyAoYnVmZmVyKSB7DQogIHZhciBwYXNzd29yZA0KICBpZiAodHlwZW9mIGJ1ZmZlciA9PT0gJ29iamVjdCcgJiYgIUJ1ZmZlci5pc0J1ZmZlcihidWZmZXIpKSB7DQogICAgcGFzc3dvcmQgPSBidWZmZXIucGFzc3BocmFzZQ0KICAgIGJ1ZmZlciA9IGJ1ZmZlci5rZXkNCiAgfQ0KICBpZiAodHlwZW9mIGJ1ZmZlciA9PT0gJ3N0cmluZycpIHsNCiAgICBidWZmZXIgPSBuZXcgQnVmZmVyKGJ1ZmZlcikNCiAgfQ0KDQogIHZhciBzdHJpcHBlZCA9IGZpeFByb2MoYnVmZmVyLCBwYXNzd29yZCkNCg0KICB2YXIgdHlwZSA9IHN0cmlwcGVkLnRhZw0KICB2YXIgZGF0YSA9IHN0cmlwcGVkLmRhdGENCiAgdmFyIHN1YnR5cGUsIG5kYXRhDQogIHN3aXRjaCAodHlwZSkgew0KICAgIGNhc2UgJ1BVQkxJQyBLRVknOg0KICAgICAgbmRhdGEgPSBhc24xLlB1YmxpY0tleS5kZWNvZGUoZGF0YSwgJ2RlcicpDQogICAgICBzdWJ0eXBlID0gbmRhdGEuYWxnb3JpdGhtLmFsZ29yaXRobS5qb2luKCcuJykNCiAgICAgIHN3aXRjaCAoc3VidHlwZSkgew0KICAgICAgICBjYXNlICcxLjIuODQwLjExMzU0OS4xLjEuMSc6DQogICAgICAgICAgcmV0dXJuIGFzbjEuUlNBUHVibGljS2V5LmRlY29kZShuZGF0YS5zdWJqZWN0UHVibGljS2V5LmRhdGEsICdkZXInKQ0KICAgICAgICBjYXNlICcxLjIuODQwLjEwMDQ1LjIuMSc6DQogICAgICAgICAgbmRhdGEuc3ViamVjdFByaXZhdGVLZXkgPSBuZGF0YS5zdWJqZWN0UHVibGljS2V5DQogICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIHR5cGU6ICdlYycsDQogICAgICAgICAgICBkYXRhOiBuZGF0YQ0KICAgICAgICAgIH0NCiAgICAgICAgY2FzZSAnMS4yLjg0MC4xMDA0MC40LjEnOg0KICAgICAgICAgIG5kYXRhLmFsZ29yaXRobS5wYXJhbXMucHViX2tleSA9IGFzbjEuRFNBcGFyYW0uZGVjb2RlKG5kYXRhLnN1YmplY3RQdWJsaWNLZXkuZGF0YSwgJ2RlcicpDQogICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIHR5cGU6ICdkc2EnLA0KICAgICAgICAgICAgZGF0YTogbmRhdGEuYWxnb3JpdGhtLnBhcmFtcw0KICAgICAgICAgIH0NCiAgICAgICAgZGVmYXVsdDogdGhyb3cgbmV3IEVycm9yKCd1bmtub3duIGtleSBpZCAnICsgc3VidHlwZSkNCiAgICAgIH0NCiAgICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biBrZXkgdHlwZSAnICsgdHlwZSkNCiAgICBjYXNlICdFTkNSWVBURUQgUFJJVkFURSBLRVknOg0KICAgICAgZGF0YSA9IGFzbjEuRW5jcnlwdGVkUHJpdmF0ZUtleS5kZWNvZGUoZGF0YSwgJ2RlcicpDQogICAgICBkYXRhID0gZGVjcnlwdChkYXRhLCBwYXNzd29yZCkNCiAgICAgIC8vIGZhbGxzIHRocm91Z2gNCiAgICBjYXNlICdQUklWQVRFIEtFWSc6DQogICAgICBuZGF0YSA9IGFzbjEuUHJpdmF0ZUtleS5kZWNvZGUoZGF0YSwgJ2RlcicpDQogICAgICBzdWJ0eXBlID0gbmRhdGEuYWxnb3JpdGhtLmFsZ29yaXRobS5qb2luKCcuJykNCiAgICAgIHN3aXRjaCAoc3VidHlwZSkgew0KICAgICAgICBjYXNlICcxLjIuODQwLjExMzU0OS4xLjEuMSc6DQogICAgICAgICAgcmV0dXJuIGFzbjEuUlNBUHJpdmF0ZUtleS5kZWNvZGUobmRhdGEuc3ViamVjdFByaXZhdGVLZXksICdkZXInKQ0KICAgICAgICBjYXNlICcxLjIuODQwLjEwMDQ1LjIuMSc6DQogICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIGN1cnZlOiBuZGF0YS5hbGdvcml0aG0uY3VydmUsDQogICAgICAgICAgICBwcml2YXRlS2V5OiBhc24xLkVDUHJpdmF0ZUtleS5kZWNvZGUobmRhdGEuc3ViamVjdFByaXZhdGVLZXksICdkZXInKS5wcml2YXRlS2V5DQogICAgICAgICAgfQ0KICAgICAgICBjYXNlICcxLjIuODQwLjEwMDQwLjQuMSc6DQogICAgICAgICAgbmRhdGEuYWxnb3JpdGhtLnBhcmFtcy5wcml2X2tleSA9IGFzbjEuRFNBcGFyYW0uZGVjb2RlKG5kYXRhLnN1YmplY3RQcml2YXRlS2V5LCAnZGVyJykNCiAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgdHlwZTogJ2RzYScsDQogICAgICAgICAgICBwYXJhbXM6IG5kYXRhLmFsZ29yaXRobS5wYXJhbXMNCiAgICAgICAgICB9DQogICAgICAgIGRlZmF1bHQ6IHRocm93IG5ldyBFcnJvcigndW5rbm93biBrZXkgaWQgJyArIHN1YnR5cGUpDQogICAgICB9DQogICAgICB0aHJvdyBuZXcgRXJyb3IoJ3Vua25vd24ga2V5IHR5cGUgJyArIHR5cGUpDQogICAgY2FzZSAnUlNBIFBVQkxJQyBLRVknOg0KICAgICAgcmV0dXJuIGFzbjEuUlNBUHVibGljS2V5LmRlY29kZShkYXRhLCAnZGVyJykNCiAgICBjYXNlICdSU0EgUFJJVkFURSBLRVknOg0KICAgICAgcmV0dXJuIGFzbjEuUlNBUHJpdmF0ZUtleS5kZWNvZGUoZGF0YSwgJ2RlcicpDQogICAgY2FzZSAnRFNBIFBSSVZBVEUgS0VZJzoNCiAgICAgIHJldHVybiB7DQogICAgICAgIHR5cGU6ICdkc2EnLA0KICAgICAgICBwYXJhbXM6IGFzbjEuRFNBUHJpdmF0ZUtleS5kZWNvZGUoZGF0YSwgJ2RlcicpDQogICAgICB9DQogICAgY2FzZSAnRUMgUFJJVkFURSBLRVknOg0KICAgICAgZGF0YSA9IGFzbjEuRUNQcml2YXRlS2V5LmRlY29kZShkYXRhLCAnZGVyJykNCiAgICAgIHJldHVybiB7DQogICAgICAgIGN1cnZlOiBkYXRhLnBhcmFtZXRlcnMudmFsdWUsDQogICAgICAgIHByaXZhdGVLZXk6IGRhdGEucHJpdmF0ZUtleQ0KICAgICAgfQ0KICAgIGRlZmF1bHQ6IHRocm93IG5ldyBFcnJvcigndW5rbm93biBrZXkgdHlwZSAnICsgdHlwZSkNCiAgfQ0KfQ0KcGFyc2VLZXlzLnNpZ25hdHVyZSA9IGFzbjEuc2lnbmF0dXJlDQpmdW5jdGlvbiBkZWNyeXB0IChkYXRhLCBwYXNzd29yZCkgew0KICB2YXIgc2FsdCA9IGRhdGEuYWxnb3JpdGhtLmRlY3J5cHQua2RlLmtkZXBhcmFtcy5zYWx0DQogIHZhciBpdGVycyA9IHBhcnNlSW50KGRhdGEuYWxnb3JpdGhtLmRlY3J5cHQua2RlLmtkZXBhcmFtcy5pdGVycy50b1N0cmluZygpLCAxMCkNCiAgdmFyIGFsZ28gPSBhZXNpZFtkYXRhLmFsZ29yaXRobS5kZWNyeXB0LmNpcGhlci5hbGdvLmpvaW4oJy4nKV0NCiAgdmFyIGl2ID0gZGF0YS5hbGdvcml0aG0uZGVjcnlwdC5jaXBoZXIuaXYNCiAgdmFyIGNpcGhlclRleHQgPSBkYXRhLnN1YmplY3RQcml2YXRlS2V5DQogIHZhciBrZXlsZW4gPSBwYXJzZUludChhbGdvLnNwbGl0KCctJylbMV0sIDEwKSAvIDgNCiAgdmFyIGtleSA9IGNvbXBhdC5wYmtkZjJTeW5jKHBhc3N3b3JkLCBzYWx0LCBpdGVycywga2V5bGVuKQ0KICB2YXIgY2lwaGVyID0gY2lwaGVycy5jcmVhdGVEZWNpcGhlcml2KGFsZ28sIGtleSwgaXYpDQogIHZhciBvdXQgPSBbXQ0KICBvdXQucHVzaChjaXBoZXIudXBkYXRlKGNpcGhlclRleHQpKQ0KICBvdXQucHVzaChjaXBoZXIuZmluYWwoKSkNCiAgcmV0dXJuIEJ1ZmZlci5jb25jYXQob3V0KQ0KfQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vYWVzaWQuanNvbiI6NTQ0LCIuL2FzbjEiOjU0NSwiLi9maXhQcm9jIjo1NDYsImJyb3dzZXJpZnktYWVzIjo2NCwiYnVmZmVyIjo5MywicGJrZGYyIjo1NDl9XSw1NDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChwcm9jZXNzKXsNCi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLg0KLy8NCi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhDQovLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlDQovLyAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nDQovLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsDQovLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0DQovLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUNCi8vIGZvbGxvd2luZyBjb25kaXRpb25zOg0KLy8NCi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkDQovLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4NCi8vDQovLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUw0KLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRg0KLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTg0KLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sDQovLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1INCi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUNCi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuDQoNCi8vIHJlc29sdmVzIC4gYW5kIC4uIGVsZW1lbnRzIGluIGEgcGF0aCBhcnJheSB3aXRoIGRpcmVjdG9yeSBuYW1lcyB0aGVyZQ0KLy8gbXVzdCBiZSBubyBzbGFzaGVzLCBlbXB0eSBlbGVtZW50cywgb3IgZGV2aWNlIG5hbWVzIChjOlwpIGluIHRoZSBhcnJheQ0KLy8gKHNvIGFsc28gbm8gbGVhZGluZyBhbmQgdHJhaWxpbmcgc2xhc2hlcyAtIGl0IGRvZXMgbm90IGRpc3Rpbmd1aXNoDQovLyByZWxhdGl2ZSBhbmQgYWJzb2x1dGUgcGF0aHMpDQpmdW5jdGlvbiBub3JtYWxpemVBcnJheShwYXJ0cywgYWxsb3dBYm92ZVJvb3QpIHsNCiAgLy8gaWYgdGhlIHBhdGggdHJpZXMgdG8gZ28gYWJvdmUgdGhlIHJvb3QsIGB1cGAgZW5kcyB1cCA+IDANCiAgdmFyIHVwID0gMDsNCiAgZm9yICh2YXIgaSA9IHBhcnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7DQogICAgdmFyIGxhc3QgPSBwYXJ0c1tpXTsNCiAgICBpZiAobGFzdCA9PT0gJy4nKSB7DQogICAgICBwYXJ0cy5zcGxpY2UoaSwgMSk7DQogICAgfSBlbHNlIGlmIChsYXN0ID09PSAnLi4nKSB7DQogICAgICBwYXJ0cy5zcGxpY2UoaSwgMSk7DQogICAgICB1cCsrOw0KICAgIH0gZWxzZSBpZiAodXApIHsNCiAgICAgIHBhcnRzLnNwbGljZShpLCAxKTsNCiAgICAgIHVwLS07DQogICAgfQ0KICB9DQoNCiAgLy8gaWYgdGhlIHBhdGggaXMgYWxsb3dlZCB0byBnbyBhYm92ZSB0aGUgcm9vdCwgcmVzdG9yZSBsZWFkaW5nIC4ucw0KICBpZiAoYWxsb3dBYm92ZVJvb3QpIHsNCiAgICBmb3IgKDsgdXAtLTsgdXApIHsNCiAgICAgIHBhcnRzLnVuc2hpZnQoJy4uJyk7DQogICAgfQ0KICB9DQoNCiAgcmV0dXJuIHBhcnRzOw0KfQ0KDQovLyBTcGxpdCBhIGZpbGVuYW1lIGludG8gW3Jvb3QsIGRpciwgYmFzZW5hbWUsIGV4dF0sIHVuaXggdmVyc2lvbg0KLy8gJ3Jvb3QnIGlzIGp1c3QgYSBzbGFzaCwgb3Igbm90aGluZy4NCnZhciBzcGxpdFBhdGhSZSA9DQogICAgL14oXC8/fCkoW1xzXFNdKj8pKCg/OlwuezEsMn18W15cL10rP3wpKFwuW14uXC9dKnwpKSg/OltcL10qKSQvOw0KdmFyIHNwbGl0UGF0aCA9IGZ1bmN0aW9uKGZpbGVuYW1lKSB7DQogIHJldHVybiBzcGxpdFBhdGhSZS5leGVjKGZpbGVuYW1lKS5zbGljZSgxKTsNCn07DQoNCi8vIHBhdGgucmVzb2x2ZShbZnJvbSAuLi5dLCB0bykNCi8vIHBvc2l4IHZlcnNpb24NCmV4cG9ydHMucmVzb2x2ZSA9IGZ1bmN0aW9uKCkgew0KICB2YXIgcmVzb2x2ZWRQYXRoID0gJycsDQogICAgICByZXNvbHZlZEFic29sdXRlID0gZmFsc2U7DQoNCiAgZm9yICh2YXIgaSA9IGFyZ3VtZW50cy5sZW5ndGggLSAxOyBpID49IC0xICYmICFyZXNvbHZlZEFic29sdXRlOyBpLS0pIHsNCiAgICB2YXIgcGF0aCA9IChpID49IDApID8gYXJndW1lbnRzW2ldIDogcHJvY2Vzcy5jd2QoKTsNCg0KICAgIC8vIFNraXAgZW1wdHkgYW5kIGludmFsaWQgZW50cmllcw0KICAgIGlmICh0eXBlb2YgcGF0aCAhPT0gJ3N0cmluZycpIHsNCiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50cyB0byBwYXRoLnJlc29sdmUgbXVzdCBiZSBzdHJpbmdzJyk7DQogICAgfSBlbHNlIGlmICghcGF0aCkgew0KICAgICAgY29udGludWU7DQogICAgfQ0KDQogICAgcmVzb2x2ZWRQYXRoID0gcGF0aCArICcvJyArIHJlc29sdmVkUGF0aDsNCiAgICByZXNvbHZlZEFic29sdXRlID0gcGF0aC5jaGFyQXQoMCkgPT09ICcvJzsNCiAgfQ0KDQogIC8vIEF0IHRoaXMgcG9pbnQgdGhlIHBhdGggc2hvdWxkIGJlIHJlc29sdmVkIHRvIGEgZnVsbCBhYnNvbHV0ZSBwYXRoLCBidXQNCiAgLy8gaGFuZGxlIHJlbGF0aXZlIHBhdGhzIHRvIGJlIHNhZmUgKG1pZ2h0IGhhcHBlbiB3aGVuIHByb2Nlc3MuY3dkKCkgZmFpbHMpDQoNCiAgLy8gTm9ybWFsaXplIHRoZSBwYXRoDQogIHJlc29sdmVkUGF0aCA9IG5vcm1hbGl6ZUFycmF5KGZpbHRlcihyZXNvbHZlZFBhdGguc3BsaXQoJy8nKSwgZnVuY3Rpb24ocCkgew0KICAgIHJldHVybiAhIXA7DQogIH0pLCAhcmVzb2x2ZWRBYnNvbHV0ZSkuam9pbignLycpOw0KDQogIHJldHVybiAoKHJlc29sdmVkQWJzb2x1dGUgPyAnLycgOiAnJykgKyByZXNvbHZlZFBhdGgpIHx8ICcuJzsNCn07DQoNCi8vIHBhdGgubm9ybWFsaXplKHBhdGgpDQovLyBwb3NpeCB2ZXJzaW9uDQpleHBvcnRzLm5vcm1hbGl6ZSA9IGZ1bmN0aW9uKHBhdGgpIHsNCiAgdmFyIGlzQWJzb2x1dGUgPSBleHBvcnRzLmlzQWJzb2x1dGUocGF0aCksDQogICAgICB0cmFpbGluZ1NsYXNoID0gc3Vic3RyKHBhdGgsIC0xKSA9PT0gJy8nOw0KDQogIC8vIE5vcm1hbGl6ZSB0aGUgcGF0aA0KICBwYXRoID0gbm9ybWFsaXplQXJyYXkoZmlsdGVyKHBhdGguc3BsaXQoJy8nKSwgZnVuY3Rpb24ocCkgew0KICAgIHJldHVybiAhIXA7DQogIH0pLCAhaXNBYnNvbHV0ZSkuam9pbignLycpOw0KDQogIGlmICghcGF0aCAmJiAhaXNBYnNvbHV0ZSkgew0KICAgIHBhdGggPSAnLic7DQogIH0NCiAgaWYgKHBhdGggJiYgdHJhaWxpbmdTbGFzaCkgew0KICAgIHBhdGggKz0gJy8nOw0KICB9DQoNCiAgcmV0dXJuIChpc0Fic29sdXRlID8gJy8nIDogJycpICsgcGF0aDsNCn07DQoNCi8vIHBvc2l4IHZlcnNpb24NCmV4cG9ydHMuaXNBYnNvbHV0ZSA9IGZ1bmN0aW9uKHBhdGgpIHsNCiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLyc7DQp9Ow0KDQovLyBwb3NpeCB2ZXJzaW9uDQpleHBvcnRzLmpvaW4gPSBmdW5jdGlvbigpIHsNCiAgdmFyIHBhdGhzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAwKTsNCiAgcmV0dXJuIGV4cG9ydHMubm9ybWFsaXplKGZpbHRlcihwYXRocywgZnVuY3Rpb24ocCwgaW5kZXgpIHsNCiAgICBpZiAodHlwZW9mIHAgIT09ICdzdHJpbmcnKSB7DQogICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudHMgdG8gcGF0aC5qb2luIG11c3QgYmUgc3RyaW5ncycpOw0KICAgIH0NCiAgICByZXR1cm4gcDsNCiAgfSkuam9pbignLycpKTsNCn07DQoNCg0KLy8gcGF0aC5yZWxhdGl2ZShmcm9tLCB0bykNCi8vIHBvc2l4IHZlcnNpb24NCmV4cG9ydHMucmVsYXRpdmUgPSBmdW5jdGlvbihmcm9tLCB0bykgew0KICBmcm9tID0gZXhwb3J0cy5yZXNvbHZlKGZyb20pLnN1YnN0cigxKTsNCiAgdG8gPSBleHBvcnRzLnJlc29sdmUodG8pLnN1YnN0cigxKTsNCg0KICBmdW5jdGlvbiB0cmltKGFycikgew0KICAgIHZhciBzdGFydCA9IDA7DQogICAgZm9yICg7IHN0YXJ0IDwgYXJyLmxlbmd0aDsgc3RhcnQrKykgew0KICAgICAgaWYgKGFycltzdGFydF0gIT09ICcnKSBicmVhazsNCiAgICB9DQoNCiAgICB2YXIgZW5kID0gYXJyLmxlbmd0aCAtIDE7DQogICAgZm9yICg7IGVuZCA+PSAwOyBlbmQtLSkgew0KICAgICAgaWYgKGFycltlbmRdICE9PSAnJykgYnJlYWs7DQogICAgfQ0KDQogICAgaWYgKHN0YXJ0ID4gZW5kKSByZXR1cm4gW107DQogICAgcmV0dXJuIGFyci5zbGljZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTsNCiAgfQ0KDQogIHZhciBmcm9tUGFydHMgPSB0cmltKGZyb20uc3BsaXQoJy8nKSk7DQogIHZhciB0b1BhcnRzID0gdHJpbSh0by5zcGxpdCgnLycpKTsNCg0KICB2YXIgbGVuZ3RoID0gTWF0aC5taW4oZnJvbVBhcnRzLmxlbmd0aCwgdG9QYXJ0cy5sZW5ndGgpOw0KICB2YXIgc2FtZVBhcnRzTGVuZ3RoID0gbGVuZ3RoOw0KICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7DQogICAgaWYgKGZyb21QYXJ0c1tpXSAhPT0gdG9QYXJ0c1tpXSkgew0KICAgICAgc2FtZVBhcnRzTGVuZ3RoID0gaTsNCiAgICAgIGJyZWFrOw0KICAgIH0NCiAgfQ0KDQogIHZhciBvdXRwdXRQYXJ0cyA9IFtdOw0KICBmb3IgKHZhciBpID0gc2FtZVBhcnRzTGVuZ3RoOyBpIDwgZnJvbVBhcnRzLmxlbmd0aDsgaSsrKSB7DQogICAgb3V0cHV0UGFydHMucHVzaCgnLi4nKTsNCiAgfQ0KDQogIG91dHB1dFBhcnRzID0gb3V0cHV0UGFydHMuY29uY2F0KHRvUGFydHMuc2xpY2Uoc2FtZVBhcnRzTGVuZ3RoKSk7DQoNCiAgcmV0dXJuIG91dHB1dFBhcnRzLmpvaW4oJy8nKTsNCn07DQoNCmV4cG9ydHMuc2VwID0gJy8nOw0KZXhwb3J0cy5kZWxpbWl0ZXIgPSAnOic7DQoNCmV4cG9ydHMuZGlybmFtZSA9IGZ1bmN0aW9uKHBhdGgpIHsNCiAgdmFyIHJlc3VsdCA9IHNwbGl0UGF0aChwYXRoKSwNCiAgICAgIHJvb3QgPSByZXN1bHRbMF0sDQogICAgICBkaXIgPSByZXN1bHRbMV07DQoNCiAgaWYgKCFyb290ICYmICFkaXIpIHsNCiAgICAvLyBObyBkaXJuYW1lIHdoYXRzb2V2ZXINCiAgICByZXR1cm4gJy4nOw0KICB9DQoNCiAgaWYgKGRpcikgew0KICAgIC8vIEl0IGhhcyBhIGRpcm5hbWUsIHN0cmlwIHRyYWlsaW5nIHNsYXNoDQogICAgZGlyID0gZGlyLnN1YnN0cigwLCBkaXIubGVuZ3RoIC0gMSk7DQogIH0NCg0KICByZXR1cm4gcm9vdCArIGRpcjsNCn07DQoNCg0KZXhwb3J0cy5iYXNlbmFtZSA9IGZ1bmN0aW9uKHBhdGgsIGV4dCkgew0KICB2YXIgZiA9IHNwbGl0UGF0aChwYXRoKVsyXTsNCiAgLy8gVE9ETzogbWFrZSB0aGlzIGNvbXBhcmlzb24gY2FzZS1pbnNlbnNpdGl2ZSBvbiB3aW5kb3dzPw0KICBpZiAoZXh0ICYmIGYuc3Vic3RyKC0xICogZXh0Lmxlbmd0aCkgPT09IGV4dCkgew0KICAgIGYgPSBmLnN1YnN0cigwLCBmLmxlbmd0aCAtIGV4dC5sZW5ndGgpOw0KICB9DQogIHJldHVybiBmOw0KfTsNCg0KDQpleHBvcnRzLmV4dG5hbWUgPSBmdW5jdGlvbihwYXRoKSB7DQogIHJldHVybiBzcGxpdFBhdGgocGF0aClbM107DQp9Ow0KDQpmdW5jdGlvbiBmaWx0ZXIgKHhzLCBmKSB7DQogICAgaWYgKHhzLmZpbHRlcikgcmV0dXJuIHhzLmZpbHRlcihmKTsNCiAgICB2YXIgcmVzID0gW107DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCB4cy5sZW5ndGg7IGkrKykgew0KICAgICAgICBpZiAoZih4c1tpXSwgaSwgeHMpKSByZXMucHVzaCh4c1tpXSk7DQogICAgfQ0KICAgIHJldHVybiByZXM7DQp9DQoNCi8vIFN0cmluZy5wcm90b3R5cGUuc3Vic3RyIC0gbmVnYXRpdmUgaW5kZXggZG9uJ3Qgd29yayBpbiBJRTgNCnZhciBzdWJzdHIgPSAnYWInLnN1YnN0cigtMSkgPT09ICdiJw0KICAgID8gZnVuY3Rpb24gKHN0ciwgc3RhcnQsIGxlbikgeyByZXR1cm4gc3RyLnN1YnN0cihzdGFydCwgbGVuKSB9DQogICAgOiBmdW5jdGlvbiAoc3RyLCBzdGFydCwgbGVuKSB7DQogICAgICAgIGlmIChzdGFydCA8IDApIHN0YXJ0ID0gc3RyLmxlbmd0aCArIHN0YXJ0Ow0KICAgICAgICByZXR1cm4gc3RyLnN1YnN0cihzdGFydCwgbGVuKTsNCiAgICB9DQo7DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCdfcHJvY2VzcycpKQ0KfSx7Il9wcm9jZXNzIjo1NTF9XSw1NDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIGNyZWF0ZUhtYWMgPSByZXF1aXJlKCdjcmVhdGUtaG1hYycpDQp2YXIgTUFYX0FMTE9DID0gTWF0aC5wb3coMiwgMzApIC0gMSAvLyBkZWZhdWx0IGluIGlvanMNCg0KZXhwb3J0cy5wYmtkZjIgPSBwYmtkZjINCmZ1bmN0aW9uIHBia2RmMiAocGFzc3dvcmQsIHNhbHQsIGl0ZXJhdGlvbnMsIGtleWxlbiwgZGlnZXN0LCBjYWxsYmFjaykgew0KICBpZiAodHlwZW9mIGRpZ2VzdCA9PT0gJ2Z1bmN0aW9uJykgew0KICAgIGNhbGxiYWNrID0gZGlnZXN0DQogICAgZGlnZXN0ID0gdW5kZWZpbmVkDQogIH0NCg0KICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSAnZnVuY3Rpb24nKSB7DQogICAgdGhyb3cgbmV3IEVycm9yKCdObyBjYWxsYmFjayBwcm92aWRlZCB0byBwYmtkZjInKQ0KICB9DQoNCiAgdmFyIHJlc3VsdCA9IHBia2RmMlN5bmMocGFzc3dvcmQsIHNhbHQsIGl0ZXJhdGlvbnMsIGtleWxlbiwgZGlnZXN0KQ0KICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsNCiAgICBjYWxsYmFjayh1bmRlZmluZWQsIHJlc3VsdCkNCiAgfSkNCn0NCg0KZXhwb3J0cy5wYmtkZjJTeW5jID0gcGJrZGYyU3luYw0KZnVuY3Rpb24gcGJrZGYyU3luYyAocGFzc3dvcmQsIHNhbHQsIGl0ZXJhdGlvbnMsIGtleWxlbiwgZGlnZXN0KSB7DQogIGlmICh0eXBlb2YgaXRlcmF0aW9ucyAhPT0gJ251bWJlcicpIHsNCiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJdGVyYXRpb25zIG5vdCBhIG51bWJlcicpDQogIH0NCg0KICBpZiAoaXRlcmF0aW9ucyA8IDApIHsNCiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdCYWQgaXRlcmF0aW9ucycpDQogIH0NCg0KICBpZiAodHlwZW9mIGtleWxlbiAhPT0gJ251bWJlcicpIHsNCiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdLZXkgbGVuZ3RoIG5vdCBhIG51bWJlcicpDQogIH0NCg0KICBpZiAoa2V5bGVuIDwgMCB8fCBrZXlsZW4gPiBNQVhfQUxMT0MpIHsNCiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdCYWQga2V5IGxlbmd0aCcpDQogIH0NCg0KICBkaWdlc3QgPSBkaWdlc3QgfHwgJ3NoYTEnDQoNCiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIocGFzc3dvcmQpKSBwYXNzd29yZCA9IG5ldyBCdWZmZXIocGFzc3dvcmQsICdiaW5hcnknKQ0KICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihzYWx0KSkgc2FsdCA9IG5ldyBCdWZmZXIoc2FsdCwgJ2JpbmFyeScpDQoNCiAgdmFyIGhMZW4NCiAgdmFyIGwgPSAxDQogIHZhciBESyA9IG5ldyBCdWZmZXIoa2V5bGVuKQ0KICB2YXIgYmxvY2sxID0gbmV3IEJ1ZmZlcihzYWx0Lmxlbmd0aCArIDQpDQogIHNhbHQuY29weShibG9jazEsIDAsIDAsIHNhbHQubGVuZ3RoKQ0KDQogIHZhciByDQogIHZhciBUDQoNCiAgZm9yICh2YXIgaSA9IDE7IGkgPD0gbDsgaSsrKSB7DQogICAgYmxvY2sxLndyaXRlVUludDMyQkUoaSwgc2FsdC5sZW5ndGgpDQogICAgdmFyIFUgPSBjcmVhdGVIbWFjKGRpZ2VzdCwgcGFzc3dvcmQpLnVwZGF0ZShibG9jazEpLmRpZ2VzdCgpDQoNCiAgICBpZiAoIWhMZW4pIHsNCiAgICAgIGhMZW4gPSBVLmxlbmd0aA0KICAgICAgVCA9IG5ldyBCdWZmZXIoaExlbikNCiAgICAgIGwgPSBNYXRoLmNlaWwoa2V5bGVuIC8gaExlbikNCiAgICAgIHIgPSBrZXlsZW4gLSAobCAtIDEpICogaExlbg0KICAgIH0NCg0KICAgIFUuY29weShULCAwLCAwLCBoTGVuKQ0KDQogICAgZm9yICh2YXIgaiA9IDE7IGogPCBpdGVyYXRpb25zOyBqKyspIHsNCiAgICAgIFUgPSBjcmVhdGVIbWFjKGRpZ2VzdCwgcGFzc3dvcmQpLnVwZGF0ZShVKS5kaWdlc3QoKQ0KDQogICAgICBmb3IgKHZhciBrID0gMDsgayA8IGhMZW47IGsrKykgew0KICAgICAgICBUW2tdIF49IFVba10NCiAgICAgIH0NCiAgICB9DQoNCiAgICB2YXIgZGVzdFBvcyA9IChpIC0gMSkgKiBoTGVuDQogICAgdmFyIGxlbiA9IChpID09PSBsID8gciA6IGhMZW4pDQogICAgVC5jb3B5KERLLCBkZXN0UG9zLCAwLCBsZW4pDQogIH0NCg0KICByZXR1cm4gREsNCn0NCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJidWZmZXIiOjkzLCJjcmVhdGUtaG1hYyI6NDkxfV0sNTUwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAocHJvY2Vzcyl7DQondXNlIHN0cmljdCc7DQoNCmlmICghcHJvY2Vzcy52ZXJzaW9uIHx8DQogICAgcHJvY2Vzcy52ZXJzaW9uLmluZGV4T2YoJ3YwLicpID09PSAwIHx8DQogICAgcHJvY2Vzcy52ZXJzaW9uLmluZGV4T2YoJ3YxLicpID09PSAwICYmIHByb2Nlc3MudmVyc2lvbi5pbmRleE9mKCd2MS44LicpICE9PSAwKSB7DQogIG1vZHVsZS5leHBvcnRzID0gbmV4dFRpY2s7DQp9IGVsc2Ugew0KICBtb2R1bGUuZXhwb3J0cyA9IHByb2Nlc3MubmV4dFRpY2s7DQp9DQoNCmZ1bmN0aW9uIG5leHRUaWNrKGZuLCBhcmcxLCBhcmcyLCBhcmczKSB7DQogIGlmICh0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHsNCiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCciY2FsbGJhY2siIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpOw0KICB9DQogIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoOw0KICB2YXIgYXJncywgaTsNCiAgc3dpdGNoIChsZW4pIHsNCiAgY2FzZSAwOg0KICBjYXNlIDE6DQogICAgcmV0dXJuIHByb2Nlc3MubmV4dFRpY2soZm4pOw0KICBjYXNlIDI6DQogICAgcmV0dXJuIHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24gYWZ0ZXJUaWNrT25lKCkgew0KICAgICAgZm4uY2FsbChudWxsLCBhcmcxKTsNCiAgICB9KTsNCiAgY2FzZSAzOg0KICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGlja1R3bygpIHsNCiAgICAgIGZuLmNhbGwobnVsbCwgYXJnMSwgYXJnMik7DQogICAgfSk7DQogIGNhc2UgNDoNCiAgICByZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiBhZnRlclRpY2tUaHJlZSgpIHsNCiAgICAgIGZuLmNhbGwobnVsbCwgYXJnMSwgYXJnMiwgYXJnMyk7DQogICAgfSk7DQogIGRlZmF1bHQ6DQogICAgYXJncyA9IG5ldyBBcnJheShsZW4gLSAxKTsNCiAgICBpID0gMDsNCiAgICB3aGlsZSAoaSA8IGFyZ3MubGVuZ3RoKSB7DQogICAgICBhcmdzW2krK10gPSBhcmd1bWVudHNbaV07DQogICAgfQ0KICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGljaygpIHsNCiAgICAgIGZuLmFwcGx5KG51bGwsIGFyZ3MpOw0KICAgIH0pOw0KICB9DQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCdfcHJvY2VzcycpKQ0KfSx7Il9wcm9jZXNzIjo1NTF9XSw1NTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyDQoNCnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTsNCnZhciBxdWV1ZSA9IFtdOw0KdmFyIGRyYWluaW5nID0gZmFsc2U7DQp2YXIgY3VycmVudFF1ZXVlOw0KdmFyIHF1ZXVlSW5kZXggPSAtMTsNCg0KZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkgew0KICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkgew0KICAgICAgICByZXR1cm47DQogICAgfQ0KICAgIGRyYWluaW5nID0gZmFsc2U7DQogICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHsNCiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTsNCiAgICB9IGVsc2Ugew0KICAgICAgICBxdWV1ZUluZGV4ID0gLTE7DQogICAgfQ0KICAgIGlmIChxdWV1ZS5sZW5ndGgpIHsNCiAgICAgICAgZHJhaW5RdWV1ZSgpOw0KICAgIH0NCn0NCg0KZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHsNCiAgICBpZiAoZHJhaW5pbmcpIHsNCiAgICAgICAgcmV0dXJuOw0KICAgIH0NCiAgICB2YXIgdGltZW91dCA9IHNldFRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTsNCiAgICBkcmFpbmluZyA9IHRydWU7DQoNCiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoOw0KICAgIHdoaWxlKGxlbikgew0KICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTsNCiAgICAgICAgcXVldWUgPSBbXTsNCiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikgew0KICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkgew0KICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBxdWV1ZUluZGV4ID0gLTE7DQogICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDsNCiAgICB9DQogICAgY3VycmVudFF1ZXVlID0gbnVsbDsNCiAgICBkcmFpbmluZyA9IGZhbHNlOw0KICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTsNCn0NCg0KcHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHsNCiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7DQogICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7DQogICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpOw0KICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7DQogICAgICAgIHNldFRpbWVvdXQoZHJhaW5RdWV1ZSwgMCk7DQogICAgfQ0KfTsNCg0KLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0cw0KZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7DQogICAgdGhpcy5mdW4gPSBmdW47DQogICAgdGhpcy5hcnJheSA9IGFycmF5Ow0KfQ0KSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkgew0KICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpOw0KfTsNCnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7DQpwcm9jZXNzLmJyb3dzZXIgPSB0cnVlOw0KcHJvY2Vzcy5lbnYgPSB7fTsNCnByb2Nlc3MuYXJndiA9IFtdOw0KcHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzDQpwcm9jZXNzLnZlcnNpb25zID0ge307DQoNCmZ1bmN0aW9uIG5vb3AoKSB7fQ0KDQpwcm9jZXNzLm9uID0gbm9vcDsNCnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wOw0KcHJvY2Vzcy5vbmNlID0gbm9vcDsNCnByb2Nlc3Mub2ZmID0gbm9vcDsNCnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wOw0KcHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wOw0KcHJvY2Vzcy5lbWl0ID0gbm9vcDsNCg0KcHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHsNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7DQp9Ow0KDQpwcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9Ow0KcHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHsNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpOw0KfTsNCnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07DQoNCn0se31dLDU1MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQpleHBvcnRzLnB1YmxpY0VuY3J5cHQgPSByZXF1aXJlKCcuL3B1YmxpY0VuY3J5cHQnKTsNCmV4cG9ydHMucHJpdmF0ZURlY3J5cHQgPSByZXF1aXJlKCcuL3ByaXZhdGVEZWNyeXB0Jyk7DQoNCmV4cG9ydHMucHJpdmF0ZUVuY3J5cHQgPSBmdW5jdGlvbiBwcml2YXRlRW5jcnlwdChrZXksIGJ1Zikgew0KICByZXR1cm4gZXhwb3J0cy5wdWJsaWNFbmNyeXB0KGtleSwgYnVmLCB0cnVlKTsNCn07DQoNCmV4cG9ydHMucHVibGljRGVjcnlwdCA9IGZ1bmN0aW9uIHB1YmxpY0RlY3J5cHQoa2V5LCBidWYpIHsNCiAgcmV0dXJuIGV4cG9ydHMucHJpdmF0ZURlY3J5cHQoa2V5LCBidWYsIHRydWUpOw0KfTsNCn0seyIuL3ByaXZhdGVEZWNyeXB0Ijo1NTQsIi4vcHVibGljRW5jcnlwdCI6NTU1fV0sNTUzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCnZhciBjcmVhdGVIYXNoID0gcmVxdWlyZSgnY3JlYXRlLWhhc2gnKTsNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHNlZWQsIGxlbikgew0KICB2YXIgdCA9IG5ldyBCdWZmZXIoJycpOw0KICB2YXIgIGkgPSAwLCBjOw0KICB3aGlsZSAodC5sZW5ndGggPCBsZW4pIHsNCiAgICBjID0gaTJvcHMoaSsrKTsNCiAgICB0ID0gQnVmZmVyLmNvbmNhdChbdCwgY3JlYXRlSGFzaCgnc2hhMScpLnVwZGF0ZShzZWVkKS51cGRhdGUoYykuZGlnZXN0KCldKTsNCiAgfQ0KICByZXR1cm4gdC5zbGljZSgwLCBsZW4pOw0KfTsNCg0KZnVuY3Rpb24gaTJvcHMoYykgew0KICB2YXIgb3V0ID0gbmV3IEJ1ZmZlcig0KTsNCiAgb3V0LndyaXRlVUludDMyQkUoYywwKTsNCiAgcmV0dXJuIG91dDsNCn0NCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiYnVmZmVyIjo5MywiY3JlYXRlLWhhc2giOjQ4OH1dLDU1NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQp2YXIgcGFyc2VLZXlzID0gcmVxdWlyZSgncGFyc2UtYXNuMScpOw0KdmFyIG1nZiA9IHJlcXVpcmUoJy4vbWdmJyk7DQp2YXIgeG9yID0gcmVxdWlyZSgnLi94b3InKTsNCnZhciBibiA9IHJlcXVpcmUoJ2JuLmpzJyk7DQp2YXIgY3J0ID0gcmVxdWlyZSgnYnJvd3NlcmlmeS1yc2EnKTsNCnZhciBjcmVhdGVIYXNoID0gcmVxdWlyZSgnY3JlYXRlLWhhc2gnKTsNCnZhciB3aXRoUHVibGljID0gcmVxdWlyZSgnLi93aXRoUHVibGljJyk7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHByaXZhdGVEZWNyeXB0KHByaXZhdGVfa2V5LCBlbmMsIHJldmVyc2UpIHsNCiAgdmFyIHBhZGRpbmc7DQogIGlmIChwcml2YXRlX2tleS5wYWRkaW5nKSB7DQogICAgcGFkZGluZyA9IHByaXZhdGVfa2V5LnBhZGRpbmc7DQogIH0gZWxzZSBpZiAocmV2ZXJzZSkgew0KICAgIHBhZGRpbmcgPSAxOw0KICB9IGVsc2Ugew0KICAgIHBhZGRpbmcgPSA0Ow0KICB9DQogIA0KICB2YXIga2V5ID0gcGFyc2VLZXlzKHByaXZhdGVfa2V5KTsNCiAgdmFyIGsgPSBrZXkubW9kdWx1cy5ieXRlTGVuZ3RoKCk7DQogIGlmIChlbmMubGVuZ3RoID4gayB8fCBuZXcgYm4oZW5jKS5jbXAoa2V5Lm1vZHVsdXMpID49IDApIHsNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ2RlY3J5cHRpb24gZXJyb3InKTsNCiAgfQ0KICB2YXIgbXNnOw0KICBpZiAocmV2ZXJzZSkgew0KICAgIG1zZyA9IHdpdGhQdWJsaWMobmV3IGJuKGVuYyksIGtleSk7DQogIH0gZWxzZSB7DQogICAgbXNnID0gY3J0KGVuYywga2V5KTsNCiAgfQ0KICB2YXIgekJ1ZmZlciA9IG5ldyBCdWZmZXIoayAtIG1zZy5sZW5ndGgpOw0KICB6QnVmZmVyLmZpbGwoMCk7DQogIG1zZyA9IEJ1ZmZlci5jb25jYXQoW3pCdWZmZXIsIG1zZ10sIGspOw0KICBpZiAocGFkZGluZyA9PT0gNCkgew0KICAgIHJldHVybiBvYWVwKGtleSwgbXNnKTsNCiAgfSBlbHNlIGlmIChwYWRkaW5nID09PSAxKSB7DQogICAgcmV0dXJuIHBrY3MxKGtleSwgbXNnLCByZXZlcnNlKTsNCiAgfSBlbHNlIGlmIChwYWRkaW5nID09PSAzKSB7DQogICAgcmV0dXJuIG1zZzsNCiAgfSBlbHNlIHsNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Vua25vd24gcGFkZGluZycpOw0KICB9DQp9Ow0KDQpmdW5jdGlvbiBvYWVwKGtleSwgbXNnKXsNCiAgdmFyIG4gPSBrZXkubW9kdWx1czsNCiAgdmFyIGsgPSBrZXkubW9kdWx1cy5ieXRlTGVuZ3RoKCk7DQogIHZhciBtTGVuID0gbXNnLmxlbmd0aDsNCiAgdmFyIGlIYXNoID0gY3JlYXRlSGFzaCgnc2hhMScpLnVwZGF0ZShuZXcgQnVmZmVyKCcnKSkuZGlnZXN0KCk7DQogIHZhciBoTGVuID0gaUhhc2gubGVuZ3RoOw0KICB2YXIgaExlbjIgPSAyICogaExlbjsNCiAgaWYgKG1zZ1swXSAhPT0gMCkgew0KICAgIHRocm93IG5ldyBFcnJvcignZGVjcnlwdGlvbiBlcnJvcicpOw0KICB9DQogIHZhciBtYXNrZWRTZWVkID0gbXNnLnNsaWNlKDEsIGhMZW4gKyAxKTsNCiAgdmFyIG1hc2tlZERiID0gIG1zZy5zbGljZShoTGVuICsgMSk7DQogIHZhciBzZWVkID0geG9yKG1hc2tlZFNlZWQsIG1nZihtYXNrZWREYiwgaExlbikpOw0KICB2YXIgZGIgPSB4b3IobWFza2VkRGIsIG1nZihzZWVkLCBrIC0gaExlbiAtIDEpKTsNCiAgaWYgKGNvbXBhcmUoaUhhc2gsIGRiLnNsaWNlKDAsIGhMZW4pKSkgew0KICAgIHRocm93IG5ldyBFcnJvcignZGVjcnlwdGlvbiBlcnJvcicpOw0KICB9DQogIHZhciBpID0gaExlbjsNCiAgd2hpbGUgKGRiW2ldID09PSAwKSB7DQogICAgaSsrOw0KICB9DQogIGlmIChkYltpKytdICE9PSAxKSB7DQogICAgdGhyb3cgbmV3IEVycm9yKCdkZWNyeXB0aW9uIGVycm9yJyk7DQogIH0NCiAgcmV0dXJuIGRiLnNsaWNlKGkpOw0KfQ0KDQpmdW5jdGlvbiBwa2NzMShrZXksIG1zZywgcmV2ZXJzZSl7DQogIHZhciBwMSA9IG1zZy5zbGljZSgwLCAyKTsNCiAgdmFyIGkgPSAyOw0KICB2YXIgc3RhdHVzID0gMDsNCiAgd2hpbGUgKG1zZ1tpKytdICE9PSAwKSB7DQogICAgaWYgKGkgPj0gbXNnLmxlbmd0aCkgew0KICAgICAgc3RhdHVzKys7DQogICAgICBicmVhazsNCiAgICB9DQogIH0NCiAgdmFyIHBzID0gbXNnLnNsaWNlKDIsIGkgLSAxKTsNCiAgdmFyIHAyID0gbXNnLnNsaWNlKGkgLSAxLCBpKTsNCg0KICBpZiAoKHAxLnRvU3RyaW5nKCdoZXgnKSAhPT0gJzAwMDInICYmICFyZXZlcnNlKSB8fCAocDEudG9TdHJpbmcoJ2hleCcpICE9PSAnMDAwMScgJiYgcmV2ZXJzZSkpew0KICAgIHN0YXR1cysrOw0KICB9DQogIGlmIChwcy5sZW5ndGggPCA4KSB7DQogICAgc3RhdHVzKys7DQogIH0NCiAgaWYgKHN0YXR1cykgew0KICAgIHRocm93IG5ldyBFcnJvcignZGVjcnlwdGlvbiBlcnJvcicpOw0KICB9DQogIHJldHVybiAgbXNnLnNsaWNlKGkpOw0KfQ0KZnVuY3Rpb24gY29tcGFyZShhLCBiKXsNCiAgYSA9IG5ldyBCdWZmZXIoYSk7DQogIGIgPSBuZXcgQnVmZmVyKGIpOw0KICB2YXIgZGlmID0gMDsNCiAgdmFyIGxlbiA9IGEubGVuZ3RoOw0KICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSB7DQogICAgZGlmKys7DQogICAgbGVuID0gTWF0aC5taW4oYS5sZW5ndGgsIGIubGVuZ3RoKTsNCiAgfQ0KICB2YXIgaSA9IC0xOw0KICB3aGlsZSAoKytpIDwgbGVuKSB7DQogICAgZGlmICs9IChhW2ldIF4gYltpXSk7DQogIH0NCiAgcmV0dXJuIGRpZjsNCn0NCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiLi9tZ2YiOjU1MywiLi93aXRoUHVibGljIjo1NTYsIi4veG9yIjo1NTcsImJuLmpzIjo1OSwiYnJvd3NlcmlmeS1yc2EiOjgwLCJidWZmZXIiOjkzLCJjcmVhdGUtaGFzaCI6NDg4LCJwYXJzZS1hc24xIjo1NDd9XSw1NTU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChCdWZmZXIpew0KdmFyIHBhcnNlS2V5cyA9IHJlcXVpcmUoJ3BhcnNlLWFzbjEnKTsNCnZhciByYW5kb21CeXRlcyA9IHJlcXVpcmUoJ3JhbmRvbWJ5dGVzJyk7DQp2YXIgY3JlYXRlSGFzaCA9IHJlcXVpcmUoJ2NyZWF0ZS1oYXNoJyk7DQp2YXIgbWdmID0gcmVxdWlyZSgnLi9tZ2YnKTsNCnZhciB4b3IgPSByZXF1aXJlKCcuL3hvcicpOw0KdmFyIGJuID0gcmVxdWlyZSgnYm4uanMnKTsNCnZhciB3aXRoUHVibGljID0gcmVxdWlyZSgnLi93aXRoUHVibGljJyk7DQp2YXIgY3J0ID0gcmVxdWlyZSgnYnJvd3NlcmlmeS1yc2EnKTsNCg0KdmFyIGNvbnN0YW50cyA9IHsNCiAgUlNBX1BLQ1MxX09BRVBfUEFERElORzogNCwNCiAgUlNBX1BLQ1MxX1BBRERJTjogMSwNCiAgUlNBX05PX1BBRERJTkc6IDMNCn07DQoNCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcHVibGljRW5jcnlwdChwdWJsaWNfa2V5LCBtc2csIHJldmVyc2UpIHsNCiAgdmFyIHBhZGRpbmc7DQogIGlmIChwdWJsaWNfa2V5LnBhZGRpbmcpIHsNCiAgICBwYWRkaW5nID0gcHVibGljX2tleS5wYWRkaW5nOw0KICB9IGVsc2UgaWYgKHJldmVyc2UpIHsNCiAgICBwYWRkaW5nID0gMTsNCiAgfSBlbHNlIHsNCiAgICBwYWRkaW5nID0gNDsNCiAgfQ0KICB2YXIga2V5ID0gcGFyc2VLZXlzKHB1YmxpY19rZXkpOw0KICB2YXIgcGFkZGVkTXNnOw0KICBpZiAocGFkZGluZyA9PT0gNCkgew0KICAgIHBhZGRlZE1zZyA9IG9hZXAoa2V5LCBtc2cpOw0KICB9IGVsc2UgaWYgKHBhZGRpbmcgPT09IDEpIHsNCiAgICBwYWRkZWRNc2cgPSBwa2NzMShrZXksIG1zZywgcmV2ZXJzZSk7DQogIH0gZWxzZSBpZiAocGFkZGluZyA9PT0gMykgew0KICAgIHBhZGRlZE1zZyA9IG5ldyBibihtc2cpOw0KICAgIGlmIChwYWRkZWRNc2cuY21wKGtleS5tb2R1bHVzKSA+PSAwKSB7DQogICAgICB0aHJvdyBuZXcgRXJyb3IoJ2RhdGEgdG9vIGxvbmcgZm9yIG1vZHVsdXMnKTsNCiAgICB9DQogIH0gZWxzZSB7DQogICAgdGhyb3cgbmV3IEVycm9yKCd1bmtub3duIHBhZGRpbmcnKTsNCiAgfQ0KICBpZiAocmV2ZXJzZSkgew0KICAgIHJldHVybiBjcnQocGFkZGVkTXNnLCBrZXkpOw0KICB9IGVsc2Ugew0KICAgIHJldHVybiB3aXRoUHVibGljKHBhZGRlZE1zZywga2V5KTsNCiAgfQ0KfTsNCg0KZnVuY3Rpb24gb2FlcChrZXksIG1zZyl7DQogIHZhciBrID0ga2V5Lm1vZHVsdXMuYnl0ZUxlbmd0aCgpOw0KICB2YXIgbUxlbiA9IG1zZy5sZW5ndGg7DQogIHZhciBpSGFzaCA9IGNyZWF0ZUhhc2goJ3NoYTEnKS51cGRhdGUobmV3IEJ1ZmZlcignJykpLmRpZ2VzdCgpOw0KICB2YXIgaExlbiA9IGlIYXNoLmxlbmd0aDsNCiAgdmFyIGhMZW4yID0gMiAqIGhMZW47DQogIGlmIChtTGVuID4gayAtIGhMZW4yIC0gMikgew0KICAgIHRocm93IG5ldyBFcnJvcignbWVzc2FnZSB0b28gbG9uZycpOw0KICB9DQogIHZhciBwcyA9IG5ldyBCdWZmZXIoayAtIG1MZW4gLSBoTGVuMiAtIDIpOw0KICBwcy5maWxsKDApOw0KICB2YXIgZGJsZW4gPSBrIC0gaExlbiAtIDE7DQogIHZhciBzZWVkID0gcmFuZG9tQnl0ZXMoaExlbik7DQogIHZhciBtYXNrZWREYiA9IHhvcihCdWZmZXIuY29uY2F0KFtpSGFzaCwgcHMsIG5ldyBCdWZmZXIoWzFdKSwgbXNnXSwgZGJsZW4pLCBtZ2Yoc2VlZCwgZGJsZW4pKTsNCiAgdmFyIG1hc2tlZFNlZWQgPSB4b3Ioc2VlZCwgbWdmKG1hc2tlZERiLCBoTGVuKSk7DQogIHJldHVybiBuZXcgYm4oQnVmZmVyLmNvbmNhdChbbmV3IEJ1ZmZlcihbMF0pLCBtYXNrZWRTZWVkLCBtYXNrZWREYl0sIGspKTsNCn0NCmZ1bmN0aW9uIHBrY3MxKGtleSwgbXNnLCByZXZlcnNlKXsNCiAgdmFyIG1MZW4gPSBtc2cubGVuZ3RoOw0KICB2YXIgayA9IGtleS5tb2R1bHVzLmJ5dGVMZW5ndGgoKTsNCiAgaWYgKG1MZW4gPiBrIC0gMTEpIHsNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ21lc3NhZ2UgdG9vIGxvbmcnKTsNCiAgfQ0KICB2YXIgcHM7DQogIGlmIChyZXZlcnNlKSB7DQogICAgcHMgPSBuZXcgQnVmZmVyKGsgLSBtTGVuIC0gMyk7DQogICAgcHMuZmlsbCgweGZmKTsNCiAgfSBlbHNlIHsNCiAgICBwcyA9IG5vblplcm8oayAtIG1MZW4gLSAzKTsNCiAgfQ0KICByZXR1cm4gbmV3IGJuKEJ1ZmZlci5jb25jYXQoW25ldyBCdWZmZXIoWzAsIHJldmVyc2U/MToyXSksIHBzLCBuZXcgQnVmZmVyKFswXSksIG1zZ10sIGspKTsNCn0NCmZ1bmN0aW9uIG5vblplcm8obGVuLCBjcnlwdG8pIHsNCiAgdmFyIG91dCA9IG5ldyBCdWZmZXIobGVuKTsNCiAgdmFyIGkgPSAwOw0KICB2YXIgY2FjaGUgPSByYW5kb21CeXRlcyhsZW4qMik7DQogIHZhciBjdXIgPSAwOw0KICB2YXIgbnVtOw0KICB3aGlsZSAoaSA8IGxlbikgew0KICAgIGlmIChjdXIgPT09IGNhY2hlLmxlbmd0aCkgew0KICAgICAgY2FjaGUgPSByYW5kb21CeXRlcyhsZW4qMik7DQogICAgICBjdXIgPSAwOw0KICAgIH0NCiAgICBudW0gPSBjYWNoZVtjdXIrK107DQogICAgaWYgKG51bSkgew0KICAgICAgb3V0W2krK10gPSBudW07DQogICAgfQ0KICB9DQogIHJldHVybiBvdXQ7DQp9DQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vbWdmIjo1NTMsIi4vd2l0aFB1YmxpYyI6NTU2LCIuL3hvciI6NTU3LCJibi5qcyI6NTksImJyb3dzZXJpZnktcnNhIjo4MCwiYnVmZmVyIjo5MywiY3JlYXRlLWhhc2giOjQ4OCwicGFyc2UtYXNuMSI6NTQ3LCJyYW5kb21ieXRlcyI6NTU4fV0sNTU2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCnZhciBibiA9IHJlcXVpcmUoJ2JuLmpzJyk7DQpmdW5jdGlvbiB3aXRoUHVibGljKHBhZGRlZE1zZywga2V5KSB7DQogIHJldHVybiBuZXcgQnVmZmVyKHBhZGRlZE1zZw0KICAgIC50b1JlZChibi5tb250KGtleS5tb2R1bHVzKSkNCiAgICAucmVkUG93KG5ldyBibihrZXkucHVibGljRXhwb25lbnQpKQ0KICAgIC5mcm9tUmVkKCkNCiAgICAudG9BcnJheSgpKTsNCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSB3aXRoUHVibGljOw0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyJibi5qcyI6NTksImJ1ZmZlciI6OTN9XSw1NTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4b3IoYSwgYikgew0KICB2YXIgbGVuID0gYS5sZW5ndGg7DQogIHZhciBpID0gLTE7DQogIHdoaWxlICgrK2kgPCBsZW4pIHsNCiAgICBhW2ldIF49IGJbaV07DQogIH0NCiAgcmV0dXJuIGENCn07DQp9LHt9XSw1NTg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChwcm9jZXNzLGdsb2JhbCxCdWZmZXIpew0KJ3VzZSBzdHJpY3QnDQoNCmZ1bmN0aW9uIG9sZEJyb3dzZXIgKCkgew0KICB0aHJvdyBuZXcgRXJyb3IoJ3NlY3VyZSByYW5kb20gbnVtYmVyIGdlbmVyYXRpb24gbm90IHN1cHBvcnRlZCBieSB0aGlzIGJyb3dzZXJcbnVzZSBjaHJvbWUsIEZpcmVGb3ggb3IgSW50ZXJuZXQgRXhwbG9yZXIgMTEnKQ0KfQ0KDQp2YXIgY3J5cHRvID0gZ2xvYmFsLmNyeXB0byB8fCBnbG9iYWwubXNDcnlwdG8NCg0KaWYgKGNyeXB0byAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKSB7DQogIG1vZHVsZS5leHBvcnRzID0gcmFuZG9tQnl0ZXMNCn0gZWxzZSB7DQogIG1vZHVsZS5leHBvcnRzID0gb2xkQnJvd3Nlcg0KfQ0KDQpmdW5jdGlvbiByYW5kb21CeXRlcyAoc2l6ZSwgY2IpIHsNCiAgLy8gcGhhbnRvbWpzIG5lZWRzIHRvIHRocm93DQogIGlmIChzaXplID4gNjU1MzYpIHRocm93IG5ldyBFcnJvcigncmVxdWVzdGVkIHRvbyBtYW55IHJhbmRvbSBieXRlcycpDQogIC8vIGluIGNhc2UgYnJvd3NlcmlmeSAgaXNuJ3QgdXNpbmcgdGhlIFVpbnQ4QXJyYXkgdmVyc2lvbg0KICB2YXIgcmF3Qnl0ZXMgPSBuZXcgZ2xvYmFsLlVpbnQ4QXJyYXkoc2l6ZSkNCg0KICAvLyBUaGlzIHdpbGwgbm90IHdvcmsgaW4gb2xkZXIgYnJvd3NlcnMuDQogIC8vIFNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvd2luZG93LmNyeXB0by5nZXRSYW5kb21WYWx1ZXMNCiAgaWYgKHNpemUgPiAwKSB7ICAvLyBnZXRSYW5kb21WYWx1ZXMgZmFpbHMgb24gSUUgaWYgc2l6ZSA9PSAwDQogICAgY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhyYXdCeXRlcykNCiAgfQ0KICAvLyBwaGFudG9tanMgZG9lc24ndCBsaWtlIGEgYnVmZmVyIGJlaW5nIHBhc3NlZCBoZXJlDQogIHZhciBieXRlcyA9IG5ldyBCdWZmZXIocmF3Qnl0ZXMuYnVmZmVyKQ0KDQogIGlmICh0eXBlb2YgY2IgPT09ICdmdW5jdGlvbicpIHsNCiAgICByZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiAoKSB7DQogICAgICBjYihudWxsLCBieXRlcykNCiAgICB9KQ0KICB9DQoNCiAgcmV0dXJuIGJ5dGVzDQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCdfcHJvY2VzcycpLHR5cGVvZiBnbG9iYWwgIT09ICJ1bmRlZmluZWQiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09ICJ1bmRlZmluZWQiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09ICJ1bmRlZmluZWQiID8gd2luZG93IDoge30scmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Il9wcm9jZXNzIjo1NTEsImJ1ZmZlciI6OTN9XSw1NTk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCIuL2xpYi9fc3RyZWFtX2R1cGxleC5qcyIpDQoNCn0seyIuL2xpYi9fc3RyZWFtX2R1cGxleC5qcyI6NTYwfV0sNTYwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIGEgZHVwbGV4IHN0cmVhbSBpcyBqdXN0IGEgc3RyZWFtIHRoYXQgaXMgYm90aCByZWFkYWJsZSBhbmQgd3JpdGFibGUuDQovLyBTaW5jZSBKUyBkb2Vzbid0IGhhdmUgbXVsdGlwbGUgcHJvdG90eXBhbCBpbmhlcml0YW5jZSwgdGhpcyBjbGFzcw0KLy8gcHJvdG90eXBhbGx5IGluaGVyaXRzIGZyb20gUmVhZGFibGUsIGFuZCB0aGVuIHBhcmFzaXRpY2FsbHkgZnJvbQ0KLy8gV3JpdGFibGUuDQoNCid1c2Ugc3RyaWN0JzsNCg0KLyo8cmVwbGFjZW1lbnQ+Ki8NCg0KdmFyIG9iamVjdEtleXMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiAob2JqKSB7DQogIHZhciBrZXlzID0gW107DQogIGZvciAodmFyIGtleSBpbiBvYmopIHsNCiAgICBrZXlzLnB1c2goa2V5KTsNCiAgfXJldHVybiBrZXlzOw0KfTsNCi8qPC9yZXBsYWNlbWVudD4qLw0KDQptb2R1bGUuZXhwb3J0cyA9IER1cGxleDsNCg0KLyo8cmVwbGFjZW1lbnQ+Ki8NCnZhciBwcm9jZXNzTmV4dFRpY2sgPSByZXF1aXJlKCdwcm9jZXNzLW5leHRpY2stYXJncycpOw0KLyo8L3JlcGxhY2VtZW50PiovDQoNCi8qPHJlcGxhY2VtZW50PiovDQp2YXIgdXRpbCA9IHJlcXVpcmUoJ2NvcmUtdXRpbC1pcycpOw0KdXRpbC5pbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7DQovKjwvcmVwbGFjZW1lbnQ+Ki8NCg0KdmFyIFJlYWRhYmxlID0gcmVxdWlyZSgnLi9fc3RyZWFtX3JlYWRhYmxlJyk7DQp2YXIgV3JpdGFibGUgPSByZXF1aXJlKCcuL19zdHJlYW1fd3JpdGFibGUnKTsNCg0KdXRpbC5pbmhlcml0cyhEdXBsZXgsIFJlYWRhYmxlKTsNCg0KdmFyIGtleXMgPSBvYmplY3RLZXlzKFdyaXRhYmxlLnByb3RvdHlwZSk7DQpmb3IgKHZhciB2ID0gMDsgdiA8IGtleXMubGVuZ3RoOyB2KyspIHsNCiAgdmFyIG1ldGhvZCA9IGtleXNbdl07DQogIGlmICghRHVwbGV4LnByb3RvdHlwZVttZXRob2RdKSBEdXBsZXgucHJvdG90eXBlW21ldGhvZF0gPSBXcml0YWJsZS5wcm90b3R5cGVbbWV0aG9kXTsNCn0NCg0KZnVuY3Rpb24gRHVwbGV4KG9wdGlvbnMpIHsNCiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIER1cGxleCkpIHJldHVybiBuZXcgRHVwbGV4KG9wdGlvbnMpOw0KDQogIFJlYWRhYmxlLmNhbGwodGhpcywgb3B0aW9ucyk7DQogIFdyaXRhYmxlLmNhbGwodGhpcywgb3B0aW9ucyk7DQoNCiAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5yZWFkYWJsZSA9PT0gZmFsc2UpIHRoaXMucmVhZGFibGUgPSBmYWxzZTsNCg0KICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLndyaXRhYmxlID09PSBmYWxzZSkgdGhpcy53cml0YWJsZSA9IGZhbHNlOw0KDQogIHRoaXMuYWxsb3dIYWxmT3BlbiA9IHRydWU7DQogIGlmIChvcHRpb25zICYmIG9wdGlvbnMuYWxsb3dIYWxmT3BlbiA9PT0gZmFsc2UpIHRoaXMuYWxsb3dIYWxmT3BlbiA9IGZhbHNlOw0KDQogIHRoaXMub25jZSgnZW5kJywgb25lbmQpOw0KfQ0KDQovLyB0aGUgbm8taGFsZi1vcGVuIGVuZm9yY2VyDQpmdW5jdGlvbiBvbmVuZCgpIHsNCiAgLy8gaWYgd2UgYWxsb3cgaGFsZi1vcGVuIHN0YXRlLCBvciBpZiB0aGUgd3JpdGFibGUgc2lkZSBlbmRlZCwNCiAgLy8gdGhlbiB3ZSdyZSBvay4NCiAgaWYgKHRoaXMuYWxsb3dIYWxmT3BlbiB8fCB0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkKSByZXR1cm47DQoNCiAgLy8gbm8gbW9yZSBkYXRhIGNhbiBiZSB3cml0dGVuLg0KICAvLyBCdXQgYWxsb3cgbW9yZSB3cml0ZXMgdG8gaGFwcGVuIGluIHRoaXMgdGljay4NCiAgcHJvY2Vzc05leHRUaWNrKG9uRW5kTlQsIHRoaXMpOw0KfQ0KDQpmdW5jdGlvbiBvbkVuZE5UKHNlbGYpIHsNCiAgc2VsZi5lbmQoKTsNCn0NCg0KZnVuY3Rpb24gZm9yRWFjaCh4cywgZikgew0KICBmb3IgKHZhciBpID0gMCwgbCA9IHhzLmxlbmd0aDsgaSA8IGw7IGkrKykgew0KICAgIGYoeHNbaV0sIGkpOw0KICB9DQp9DQp9LHsiLi9fc3RyZWFtX3JlYWRhYmxlIjo1NjIsIi4vX3N0cmVhbV93cml0YWJsZSI6NTY0LCJjb3JlLXV0aWwtaXMiOjQ4NiwiaW5oZXJpdHMiOjUzNywicHJvY2Vzcy1uZXh0aWNrLWFyZ3MiOjU1MH1dLDU2MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBhIHBhc3N0aHJvdWdoIHN0cmVhbS4NCi8vIGJhc2ljYWxseSBqdXN0IHRoZSBtb3N0IG1pbmltYWwgc29ydCBvZiBUcmFuc2Zvcm0gc3RyZWFtLg0KLy8gRXZlcnkgd3JpdHRlbiBjaHVuayBnZXRzIG91dHB1dCBhcy1pcy4NCg0KJ3VzZSBzdHJpY3QnOw0KDQptb2R1bGUuZXhwb3J0cyA9IFBhc3NUaHJvdWdoOw0KDQp2YXIgVHJhbnNmb3JtID0gcmVxdWlyZSgnLi9fc3RyZWFtX3RyYW5zZm9ybScpOw0KDQovKjxyZXBsYWNlbWVudD4qLw0KdmFyIHV0aWwgPSByZXF1aXJlKCdjb3JlLXV0aWwtaXMnKTsNCnV0aWwuaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpOw0KLyo8L3JlcGxhY2VtZW50PiovDQoNCnV0aWwuaW5oZXJpdHMoUGFzc1Rocm91Z2gsIFRyYW5zZm9ybSk7DQoNCmZ1bmN0aW9uIFBhc3NUaHJvdWdoKG9wdGlvbnMpIHsNCiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFBhc3NUaHJvdWdoKSkgcmV0dXJuIG5ldyBQYXNzVGhyb3VnaChvcHRpb25zKTsNCg0KICBUcmFuc2Zvcm0uY2FsbCh0aGlzLCBvcHRpb25zKTsNCn0NCg0KUGFzc1Rocm91Z2gucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYikgew0KICBjYihudWxsLCBjaHVuayk7DQp9Ow0KfSx7Ii4vX3N0cmVhbV90cmFuc2Zvcm0iOjU2MywiY29yZS11dGlsLWlzIjo0ODYsImluaGVyaXRzIjo1Mzd9XSw1NjI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChwcm9jZXNzKXsNCid1c2Ugc3RyaWN0JzsNCg0KbW9kdWxlLmV4cG9ydHMgPSBSZWFkYWJsZTsNCg0KLyo8cmVwbGFjZW1lbnQ+Ki8NCnZhciBwcm9jZXNzTmV4dFRpY2sgPSByZXF1aXJlKCdwcm9jZXNzLW5leHRpY2stYXJncycpOw0KLyo8L3JlcGxhY2VtZW50PiovDQoNCi8qPHJlcGxhY2VtZW50PiovDQp2YXIgaXNBcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKTsNCi8qPC9yZXBsYWNlbWVudD4qLw0KDQovKjxyZXBsYWNlbWVudD4qLw0KdmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ2J1ZmZlcicpLkJ1ZmZlcjsNCi8qPC9yZXBsYWNlbWVudD4qLw0KDQpSZWFkYWJsZS5SZWFkYWJsZVN0YXRlID0gUmVhZGFibGVTdGF0ZTsNCg0KdmFyIEVFID0gcmVxdWlyZSgnZXZlbnRzJyk7DQoNCi8qPHJlcGxhY2VtZW50PiovDQp2YXIgRUVsaXN0ZW5lckNvdW50ID0gZnVuY3Rpb24gKGVtaXR0ZXIsIHR5cGUpIHsNCiAgcmV0dXJuIGVtaXR0ZXIubGlzdGVuZXJzKHR5cGUpLmxlbmd0aDsNCn07DQovKjwvcmVwbGFjZW1lbnQ+Ki8NCg0KLyo8cmVwbGFjZW1lbnQ+Ki8NCnZhciBTdHJlYW07DQooZnVuY3Rpb24gKCkgew0KICB0cnkgew0KICAgIFN0cmVhbSA9IHJlcXVpcmUoJ3N0JyArICdyZWFtJyk7DQogIH0gY2F0Y2ggKF8pIHt9IGZpbmFsbHkgew0KICAgIGlmICghU3RyZWFtKSBTdHJlYW0gPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7DQogIH0NCn0pKCk7DQovKjwvcmVwbGFjZW1lbnQ+Ki8NCg0KdmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ2J1ZmZlcicpLkJ1ZmZlcjsNCg0KLyo8cmVwbGFjZW1lbnQ+Ki8NCnZhciB1dGlsID0gcmVxdWlyZSgnY29yZS11dGlsLWlzJyk7DQp1dGlsLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTsNCi8qPC9yZXBsYWNlbWVudD4qLw0KDQovKjxyZXBsYWNlbWVudD4qLw0KdmFyIGRlYnVnVXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTsNCnZhciBkZWJ1ZyA9IHVuZGVmaW5lZDsNCmlmIChkZWJ1Z1V0aWwgJiYgZGVidWdVdGlsLmRlYnVnbG9nKSB7DQogIGRlYnVnID0gZGVidWdVdGlsLmRlYnVnbG9nKCdzdHJlYW0nKTsNCn0gZWxzZSB7DQogIGRlYnVnID0gZnVuY3Rpb24gKCkge307DQp9DQovKjwvcmVwbGFjZW1lbnQ+Ki8NCg0KdmFyIFN0cmluZ0RlY29kZXI7DQoNCnV0aWwuaW5oZXJpdHMoUmVhZGFibGUsIFN0cmVhbSk7DQoNCnZhciBEdXBsZXg7DQpmdW5jdGlvbiBSZWFkYWJsZVN0YXRlKG9wdGlvbnMsIHN0cmVhbSkgew0KICBEdXBsZXggPSBEdXBsZXggfHwgcmVxdWlyZSgnLi9fc3RyZWFtX2R1cGxleCcpOw0KDQogIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9Ow0KDQogIC8vIG9iamVjdCBzdHJlYW0gZmxhZy4gVXNlZCB0byBtYWtlIHJlYWQobikgaWdub3JlIG4gYW5kIHRvDQogIC8vIG1ha2UgYWxsIHRoZSBidWZmZXIgbWVyZ2luZyBhbmQgbGVuZ3RoIGNoZWNrcyBnbyBhd2F5DQogIHRoaXMub2JqZWN0TW9kZSA9ICEhb3B0aW9ucy5vYmplY3RNb2RlOw0KDQogIGlmIChzdHJlYW0gaW5zdGFuY2VvZiBEdXBsZXgpIHRoaXMub2JqZWN0TW9kZSA9IHRoaXMub2JqZWN0TW9kZSB8fCAhIW9wdGlvbnMucmVhZGFibGVPYmplY3RNb2RlOw0KDQogIC8vIHRoZSBwb2ludCBhdCB3aGljaCBpdCBzdG9wcyBjYWxsaW5nIF9yZWFkKCkgdG8gZmlsbCB0aGUgYnVmZmVyDQogIC8vIE5vdGU6IDAgaXMgYSB2YWxpZCB2YWx1ZSwgbWVhbnMgImRvbid0IGNhbGwgX3JlYWQgcHJlZW1wdGl2ZWx5IGV2ZXIiDQogIHZhciBod20gPSBvcHRpb25zLmhpZ2hXYXRlck1hcms7DQogIHZhciBkZWZhdWx0SHdtID0gdGhpcy5vYmplY3RNb2RlID8gMTYgOiAxNiAqIDEwMjQ7DQogIHRoaXMuaGlnaFdhdGVyTWFyayA9IGh3bSB8fCBod20gPT09IDAgPyBod20gOiBkZWZhdWx0SHdtOw0KDQogIC8vIGNhc3QgdG8gaW50cy4NCiAgdGhpcy5oaWdoV2F0ZXJNYXJrID0gfiB+dGhpcy5oaWdoV2F0ZXJNYXJrOw0KDQogIHRoaXMuYnVmZmVyID0gW107DQogIHRoaXMubGVuZ3RoID0gMDsNCiAgdGhpcy5waXBlcyA9IG51bGw7DQogIHRoaXMucGlwZXNDb3VudCA9IDA7DQogIHRoaXMuZmxvd2luZyA9IG51bGw7DQogIHRoaXMuZW5kZWQgPSBmYWxzZTsNCiAgdGhpcy5lbmRFbWl0dGVkID0gZmFsc2U7DQogIHRoaXMucmVhZGluZyA9IGZhbHNlOw0KDQogIC8vIGEgZmxhZyB0byBiZSBhYmxlIHRvIHRlbGwgaWYgdGhlIG9ud3JpdGUgY2IgaXMgY2FsbGVkIGltbWVkaWF0ZWx5LA0KICAvLyBvciBvbiBhIGxhdGVyIHRpY2suICBXZSBzZXQgdGhpcyB0byB0cnVlIGF0IGZpcnN0LCBiZWNhdXNlIGFueQ0KICAvLyBhY3Rpb25zIHRoYXQgc2hvdWxkbid0IGhhcHBlbiB1bnRpbCAibGF0ZXIiIHNob3VsZCBnZW5lcmFsbHkgYWxzbw0KICAvLyBub3QgaGFwcGVuIGJlZm9yZSB0aGUgZmlyc3Qgd3JpdGUgY2FsbC4NCiAgdGhpcy5zeW5jID0gdHJ1ZTsNCg0KICAvLyB3aGVuZXZlciB3ZSByZXR1cm4gbnVsbCwgdGhlbiB3ZSBzZXQgYSBmbGFnIHRvIHNheQ0KICAvLyB0aGF0IHdlJ3JlIGF3YWl0aW5nIGEgJ3JlYWRhYmxlJyBldmVudCBlbWlzc2lvbi4NCiAgdGhpcy5uZWVkUmVhZGFibGUgPSBmYWxzZTsNCiAgdGhpcy5lbWl0dGVkUmVhZGFibGUgPSBmYWxzZTsNCiAgdGhpcy5yZWFkYWJsZUxpc3RlbmluZyA9IGZhbHNlOw0KICB0aGlzLnJlc3VtZVNjaGVkdWxlZCA9IGZhbHNlOw0KDQogIC8vIENyeXB0byBpcyBraW5kIG9mIG9sZCBhbmQgY3J1c3R5LiAgSGlzdG9yaWNhbGx5LCBpdHMgZGVmYXVsdCBzdHJpbmcNCiAgLy8gZW5jb2RpbmcgaXMgJ2JpbmFyeScgc28gd2UgaGF2ZSB0byBtYWtlIHRoaXMgY29uZmlndXJhYmxlLg0KICAvLyBFdmVyeXRoaW5nIGVsc2UgaW4gdGhlIHVuaXZlcnNlIHVzZXMgJ3V0ZjgnLCB0aG91Z2guDQogIHRoaXMuZGVmYXVsdEVuY29kaW5nID0gb3B0aW9ucy5kZWZhdWx0RW5jb2RpbmcgfHwgJ3V0ZjgnOw0KDQogIC8vIHdoZW4gcGlwaW5nLCB3ZSBvbmx5IGNhcmUgYWJvdXQgJ3JlYWRhYmxlJyBldmVudHMgdGhhdCBoYXBwZW4NCiAgLy8gYWZ0ZXIgcmVhZCgpaW5nIGFsbCB0aGUgYnl0ZXMgYW5kIG5vdCBnZXR0aW5nIGFueSBwdXNoYmFjay4NCiAgdGhpcy5yYW5PdXQgPSBmYWxzZTsNCg0KICAvLyB0aGUgbnVtYmVyIG9mIHdyaXRlcnMgdGhhdCBhcmUgYXdhaXRpbmcgYSBkcmFpbiBldmVudCBpbiAucGlwZSgpcw0KICB0aGlzLmF3YWl0RHJhaW4gPSAwOw0KDQogIC8vIGlmIHRydWUsIGEgbWF5YmVSZWFkTW9yZSBoYXMgYmVlbiBzY2hlZHVsZWQNCiAgdGhpcy5yZWFkaW5nTW9yZSA9IGZhbHNlOw0KDQogIHRoaXMuZGVjb2RlciA9IG51bGw7DQogIHRoaXMuZW5jb2RpbmcgPSBudWxsOw0KICBpZiAob3B0aW9ucy5lbmNvZGluZykgew0KICAgIGlmICghU3RyaW5nRGVjb2RlcikgU3RyaW5nRGVjb2RlciA9IHJlcXVpcmUoJ3N0cmluZ19kZWNvZGVyLycpLlN0cmluZ0RlY29kZXI7DQogICAgdGhpcy5kZWNvZGVyID0gbmV3IFN0cmluZ0RlY29kZXIob3B0aW9ucy5lbmNvZGluZyk7DQogICAgdGhpcy5lbmNvZGluZyA9IG9wdGlvbnMuZW5jb2Rpbmc7DQogIH0NCn0NCg0KdmFyIER1cGxleDsNCmZ1bmN0aW9uIFJlYWRhYmxlKG9wdGlvbnMpIHsNCiAgRHVwbGV4ID0gRHVwbGV4IHx8IHJlcXVpcmUoJy4vX3N0cmVhbV9kdXBsZXgnKTsNCg0KICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUmVhZGFibGUpKSByZXR1cm4gbmV3IFJlYWRhYmxlKG9wdGlvbnMpOw0KDQogIHRoaXMuX3JlYWRhYmxlU3RhdGUgPSBuZXcgUmVhZGFibGVTdGF0ZShvcHRpb25zLCB0aGlzKTsNCg0KICAvLyBsZWdhY3kNCiAgdGhpcy5yZWFkYWJsZSA9IHRydWU7DQoNCiAgaWYgKG9wdGlvbnMgJiYgdHlwZW9mIG9wdGlvbnMucmVhZCA9PT0gJ2Z1bmN0aW9uJykgdGhpcy5fcmVhZCA9IG9wdGlvbnMucmVhZDsNCg0KICBTdHJlYW0uY2FsbCh0aGlzKTsNCn0NCg0KLy8gTWFudWFsbHkgc2hvdmUgc29tZXRoaW5nIGludG8gdGhlIHJlYWQoKSBidWZmZXIuDQovLyBUaGlzIHJldHVybnMgdHJ1ZSBpZiB0aGUgaGlnaFdhdGVyTWFyayBoYXMgbm90IGJlZW4gaGl0IHlldCwNCi8vIHNpbWlsYXIgdG8gaG93IFdyaXRhYmxlLndyaXRlKCkgcmV0dXJucyB0cnVlIGlmIHlvdSBzaG91bGQNCi8vIHdyaXRlKCkgc29tZSBtb3JlLg0KUmVhZGFibGUucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nKSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX3JlYWRhYmxlU3RhdGU7DQoNCiAgaWYgKCFzdGF0ZS5vYmplY3RNb2RlICYmIHR5cGVvZiBjaHVuayA9PT0gJ3N0cmluZycpIHsNCiAgICBlbmNvZGluZyA9IGVuY29kaW5nIHx8IHN0YXRlLmRlZmF1bHRFbmNvZGluZzsNCiAgICBpZiAoZW5jb2RpbmcgIT09IHN0YXRlLmVuY29kaW5nKSB7DQogICAgICBjaHVuayA9IG5ldyBCdWZmZXIoY2h1bmssIGVuY29kaW5nKTsNCiAgICAgIGVuY29kaW5nID0gJyc7DQogICAgfQ0KICB9DQoNCiAgcmV0dXJuIHJlYWRhYmxlQWRkQ2h1bmsodGhpcywgc3RhdGUsIGNodW5rLCBlbmNvZGluZywgZmFsc2UpOw0KfTsNCg0KLy8gVW5zaGlmdCBzaG91bGQgKmFsd2F5cyogYmUgc29tZXRoaW5nIGRpcmVjdGx5IG91dCBvZiByZWFkKCkNClJlYWRhYmxlLnByb3RvdHlwZS51bnNoaWZ0ID0gZnVuY3Rpb24gKGNodW5rKSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX3JlYWRhYmxlU3RhdGU7DQogIHJldHVybiByZWFkYWJsZUFkZENodW5rKHRoaXMsIHN0YXRlLCBjaHVuaywgJycsIHRydWUpOw0KfTsNCg0KUmVhZGFibGUucHJvdG90eXBlLmlzUGF1c2VkID0gZnVuY3Rpb24gKCkgew0KICByZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nID09PSBmYWxzZTsNCn07DQoNCmZ1bmN0aW9uIHJlYWRhYmxlQWRkQ2h1bmsoc3RyZWFtLCBzdGF0ZSwgY2h1bmssIGVuY29kaW5nLCBhZGRUb0Zyb250KSB7DQogIHZhciBlciA9IGNodW5rSW52YWxpZChzdGF0ZSwgY2h1bmspOw0KICBpZiAoZXIpIHsNCiAgICBzdHJlYW0uZW1pdCgnZXJyb3InLCBlcik7DQogIH0gZWxzZSBpZiAoY2h1bmsgPT09IG51bGwpIHsNCiAgICBzdGF0ZS5yZWFkaW5nID0gZmFsc2U7DQogICAgb25Fb2ZDaHVuayhzdHJlYW0sIHN0YXRlKTsNCiAgfSBlbHNlIGlmIChzdGF0ZS5vYmplY3RNb2RlIHx8IGNodW5rICYmIGNodW5rLmxlbmd0aCA+IDApIHsNCiAgICBpZiAoc3RhdGUuZW5kZWQgJiYgIWFkZFRvRnJvbnQpIHsNCiAgICAgIHZhciBlID0gbmV3IEVycm9yKCdzdHJlYW0ucHVzaCgpIGFmdGVyIEVPRicpOw0KICAgICAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZSk7DQogICAgfSBlbHNlIGlmIChzdGF0ZS5lbmRFbWl0dGVkICYmIGFkZFRvRnJvbnQpIHsNCiAgICAgIHZhciBlID0gbmV3IEVycm9yKCdzdHJlYW0udW5zaGlmdCgpIGFmdGVyIGVuZCBldmVudCcpOw0KICAgICAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZSk7DQogICAgfSBlbHNlIHsNCiAgICAgIHZhciBza2lwQWRkOw0KICAgICAgaWYgKHN0YXRlLmRlY29kZXIgJiYgIWFkZFRvRnJvbnQgJiYgIWVuY29kaW5nKSB7DQogICAgICAgIGNodW5rID0gc3RhdGUuZGVjb2Rlci53cml0ZShjaHVuayk7DQogICAgICAgIHNraXBBZGQgPSAhc3RhdGUub2JqZWN0TW9kZSAmJiBjaHVuay5sZW5ndGggPT09IDA7DQogICAgICB9DQoNCiAgICAgIGlmICghYWRkVG9Gcm9udCkgc3RhdGUucmVhZGluZyA9IGZhbHNlOw0KDQogICAgICAvLyBEb24ndCBhZGQgdG8gdGhlIGJ1ZmZlciBpZiB3ZSd2ZSBkZWNvZGVkIHRvIGFuIGVtcHR5IHN0cmluZyBjaHVuayBhbmQNCiAgICAgIC8vIHdlJ3JlIG5vdCBpbiBvYmplY3QgbW9kZQ0KICAgICAgaWYgKCFza2lwQWRkKSB7DQogICAgICAgIC8vIGlmIHdlIHdhbnQgdGhlIGRhdGEgbm93LCBqdXN0IGVtaXQgaXQuDQogICAgICAgIGlmIChzdGF0ZS5mbG93aW5nICYmIHN0YXRlLmxlbmd0aCA9PT0gMCAmJiAhc3RhdGUuc3luYykgew0KICAgICAgICAgIHN0cmVhbS5lbWl0KCdkYXRhJywgY2h1bmspOw0KICAgICAgICAgIHN0cmVhbS5yZWFkKDApOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIC8vIHVwZGF0ZSB0aGUgYnVmZmVyIGluZm8uDQogICAgICAgICAgc3RhdGUubGVuZ3RoICs9IHN0YXRlLm9iamVjdE1vZGUgPyAxIDogY2h1bmsubGVuZ3RoOw0KICAgICAgICAgIGlmIChhZGRUb0Zyb250KSBzdGF0ZS5idWZmZXIudW5zaGlmdChjaHVuayk7ZWxzZSBzdGF0ZS5idWZmZXIucHVzaChjaHVuayk7DQoNCiAgICAgICAgICBpZiAoc3RhdGUubmVlZFJlYWRhYmxlKSBlbWl0UmVhZGFibGUoc3RyZWFtKTsNCiAgICAgICAgfQ0KICAgICAgfQ0KDQogICAgICBtYXliZVJlYWRNb3JlKHN0cmVhbSwgc3RhdGUpOw0KICAgIH0NCiAgfSBlbHNlIGlmICghYWRkVG9Gcm9udCkgew0KICAgIHN0YXRlLnJlYWRpbmcgPSBmYWxzZTsNCiAgfQ0KDQogIHJldHVybiBuZWVkTW9yZURhdGEoc3RhdGUpOw0KfQ0KDQovLyBpZiBpdCdzIHBhc3QgdGhlIGhpZ2ggd2F0ZXIgbWFyaywgd2UgY2FuIHB1c2ggaW4gc29tZSBtb3JlLg0KLy8gQWxzbywgaWYgd2UgaGF2ZSBubyBkYXRhIHlldCwgd2UgY2FuIHN0YW5kIHNvbWUNCi8vIG1vcmUgYnl0ZXMuICBUaGlzIGlzIHRvIHdvcmsgYXJvdW5kIGNhc2VzIHdoZXJlIGh3bT0wLA0KLy8gc3VjaCBhcyB0aGUgcmVwbC4gIEFsc28sIGlmIHRoZSBwdXNoKCkgdHJpZ2dlcmVkIGENCi8vIHJlYWRhYmxlIGV2ZW50LCBhbmQgdGhlIHVzZXIgY2FsbGVkIHJlYWQobGFyZ2VOdW1iZXIpIHN1Y2ggdGhhdA0KLy8gbmVlZFJlYWRhYmxlIHdhcyBzZXQsIHRoZW4gd2Ugb3VnaHQgdG8gcHVzaCBtb3JlLCBzbyB0aGF0IGFub3RoZXINCi8vICdyZWFkYWJsZScgZXZlbnQgd2lsbCBiZSB0cmlnZ2VyZWQuDQpmdW5jdGlvbiBuZWVkTW9yZURhdGEoc3RhdGUpIHsNCiAgcmV0dXJuICFzdGF0ZS5lbmRlZCAmJiAoc3RhdGUubmVlZFJlYWRhYmxlIHx8IHN0YXRlLmxlbmd0aCA8IHN0YXRlLmhpZ2hXYXRlck1hcmsgfHwgc3RhdGUubGVuZ3RoID09PSAwKTsNCn0NCg0KLy8gYmFja3dhcmRzIGNvbXBhdGliaWxpdHkuDQpSZWFkYWJsZS5wcm90b3R5cGUuc2V0RW5jb2RpbmcgPSBmdW5jdGlvbiAoZW5jKSB7DQogIGlmICghU3RyaW5nRGVjb2RlcikgU3RyaW5nRGVjb2RlciA9IHJlcXVpcmUoJ3N0cmluZ19kZWNvZGVyLycpLlN0cmluZ0RlY29kZXI7DQogIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVjb2RlciA9IG5ldyBTdHJpbmdEZWNvZGVyKGVuYyk7DQogIHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5jb2RpbmcgPSBlbmM7DQogIHJldHVybiB0aGlzOw0KfTsNCg0KLy8gRG9uJ3QgcmFpc2UgdGhlIGh3bSA+IDhNQg0KdmFyIE1BWF9IV00gPSAweDgwMDAwMDsNCmZ1bmN0aW9uIGNvbXB1dGVOZXdIaWdoV2F0ZXJNYXJrKG4pIHsNCiAgaWYgKG4gPj0gTUFYX0hXTSkgew0KICAgIG4gPSBNQVhfSFdNOw0KICB9IGVsc2Ugew0KICAgIC8vIEdldCB0aGUgbmV4dCBoaWdoZXN0IHBvd2VyIG9mIDINCiAgICBuLS07DQogICAgbiB8PSBuID4+PiAxOw0KICAgIG4gfD0gbiA+Pj4gMjsNCiAgICBuIHw9IG4gPj4+IDQ7DQogICAgbiB8PSBuID4+PiA4Ow0KICAgIG4gfD0gbiA+Pj4gMTY7DQogICAgbisrOw0KICB9DQogIHJldHVybiBuOw0KfQ0KDQpmdW5jdGlvbiBob3dNdWNoVG9SZWFkKG4sIHN0YXRlKSB7DQogIGlmIChzdGF0ZS5sZW5ndGggPT09IDAgJiYgc3RhdGUuZW5kZWQpIHJldHVybiAwOw0KDQogIGlmIChzdGF0ZS5vYmplY3RNb2RlKSByZXR1cm4gbiA9PT0gMCA/IDAgOiAxOw0KDQogIGlmIChuID09PSBudWxsIHx8IGlzTmFOKG4pKSB7DQogICAgLy8gb25seSBmbG93IG9uZSBidWZmZXIgYXQgYSB0aW1lDQogICAgaWYgKHN0YXRlLmZsb3dpbmcgJiYgc3RhdGUuYnVmZmVyLmxlbmd0aCkgcmV0dXJuIHN0YXRlLmJ1ZmZlclswXS5sZW5ndGg7ZWxzZSByZXR1cm4gc3RhdGUubGVuZ3RoOw0KICB9DQoNCiAgaWYgKG4gPD0gMCkgcmV0dXJuIDA7DQoNCiAgLy8gSWYgd2UncmUgYXNraW5nIGZvciBtb3JlIHRoYW4gdGhlIHRhcmdldCBidWZmZXIgbGV2ZWwsDQogIC8vIHRoZW4gcmFpc2UgdGhlIHdhdGVyIG1hcmsuICBCdW1wIHVwIHRvIHRoZSBuZXh0IGhpZ2hlc3QNCiAgLy8gcG93ZXIgb2YgMiwgdG8gcHJldmVudCBpbmNyZWFzaW5nIGl0IGV4Y2Vzc2l2ZWx5IGluIHRpbnkNCiAgLy8gYW1vdW50cy4NCiAgaWYgKG4gPiBzdGF0ZS5oaWdoV2F0ZXJNYXJrKSBzdGF0ZS5oaWdoV2F0ZXJNYXJrID0gY29tcHV0ZU5ld0hpZ2hXYXRlck1hcmsobik7DQoNCiAgLy8gZG9uJ3QgaGF2ZSB0aGF0IG11Y2guICByZXR1cm4gbnVsbCwgdW5sZXNzIHdlJ3ZlIGVuZGVkLg0KICBpZiAobiA+IHN0YXRlLmxlbmd0aCkgew0KICAgIGlmICghc3RhdGUuZW5kZWQpIHsNCiAgICAgIHN0YXRlLm5lZWRSZWFkYWJsZSA9IHRydWU7DQogICAgICByZXR1cm4gMDsNCiAgICB9IGVsc2Ugew0KICAgICAgcmV0dXJuIHN0YXRlLmxlbmd0aDsNCiAgICB9DQogIH0NCg0KICByZXR1cm4gbjsNCn0NCg0KLy8geW91IGNhbiBvdmVycmlkZSBlaXRoZXIgdGhpcyBtZXRob2QsIG9yIHRoZSBhc3luYyBfcmVhZChuKSBiZWxvdy4NClJlYWRhYmxlLnByb3RvdHlwZS5yZWFkID0gZnVuY3Rpb24gKG4pIHsNCiAgZGVidWcoJ3JlYWQnLCBuKTsNCiAgdmFyIHN0YXRlID0gdGhpcy5fcmVhZGFibGVTdGF0ZTsNCiAgdmFyIG5PcmlnID0gbjsNCg0KICBpZiAodHlwZW9mIG4gIT09ICdudW1iZXInIHx8IG4gPiAwKSBzdGF0ZS5lbWl0dGVkUmVhZGFibGUgPSBmYWxzZTsNCg0KICAvLyBpZiB3ZSdyZSBkb2luZyByZWFkKDApIHRvIHRyaWdnZXIgYSByZWFkYWJsZSBldmVudCwgYnV0IHdlDQogIC8vIGFscmVhZHkgaGF2ZSBhIGJ1bmNoIG9mIGRhdGEgaW4gdGhlIGJ1ZmZlciwgdGhlbiBqdXN0IHRyaWdnZXINCiAgLy8gdGhlICdyZWFkYWJsZScgZXZlbnQgYW5kIG1vdmUgb24uDQogIGlmIChuID09PSAwICYmIHN0YXRlLm5lZWRSZWFkYWJsZSAmJiAoc3RhdGUubGVuZ3RoID49IHN0YXRlLmhpZ2hXYXRlck1hcmsgfHwgc3RhdGUuZW5kZWQpKSB7DQogICAgZGVidWcoJ3JlYWQ6IGVtaXRSZWFkYWJsZScsIHN0YXRlLmxlbmd0aCwgc3RhdGUuZW5kZWQpOw0KICAgIGlmIChzdGF0ZS5sZW5ndGggPT09IDAgJiYgc3RhdGUuZW5kZWQpIGVuZFJlYWRhYmxlKHRoaXMpO2Vsc2UgZW1pdFJlYWRhYmxlKHRoaXMpOw0KICAgIHJldHVybiBudWxsOw0KICB9DQoNCiAgbiA9IGhvd011Y2hUb1JlYWQobiwgc3RhdGUpOw0KDQogIC8vIGlmIHdlJ3ZlIGVuZGVkLCBhbmQgd2UncmUgbm93IGNsZWFyLCB0aGVuIGZpbmlzaCBpdCB1cC4NCiAgaWYgKG4gPT09IDAgJiYgc3RhdGUuZW5kZWQpIHsNCiAgICBpZiAoc3RhdGUubGVuZ3RoID09PSAwKSBlbmRSZWFkYWJsZSh0aGlzKTsNCiAgICByZXR1cm4gbnVsbDsNCiAgfQ0KDQogIC8vIEFsbCB0aGUgYWN0dWFsIGNodW5rIGdlbmVyYXRpb24gbG9naWMgbmVlZHMgdG8gYmUNCiAgLy8gKmJlbG93KiB0aGUgY2FsbCB0byBfcmVhZC4gIFRoZSByZWFzb24gaXMgdGhhdCBpbiBjZXJ0YWluDQogIC8vIHN5bnRoZXRpYyBzdHJlYW0gY2FzZXMsIHN1Y2ggYXMgcGFzc3Rocm91Z2ggc3RyZWFtcywgX3JlYWQNCiAgLy8gbWF5IGJlIGEgY29tcGxldGVseSBzeW5jaHJvbm91cyBvcGVyYXRpb24gd2hpY2ggbWF5IGNoYW5nZQ0KICAvLyB0aGUgc3RhdGUgb2YgdGhlIHJlYWQgYnVmZmVyLCBwcm92aWRpbmcgZW5vdWdoIGRhdGEgd2hlbg0KICAvLyBiZWZvcmUgdGhlcmUgd2FzICpub3QqIGVub3VnaC4NCiAgLy8NCiAgLy8gU28sIHRoZSBzdGVwcyBhcmU6DQogIC8vIDEuIEZpZ3VyZSBvdXQgd2hhdCB0aGUgc3RhdGUgb2YgdGhpbmdzIHdpbGwgYmUgYWZ0ZXIgd2UgZG8NCiAgLy8gYSByZWFkIGZyb20gdGhlIGJ1ZmZlci4NCiAgLy8NCiAgLy8gMi4gSWYgdGhhdCByZXN1bHRpbmcgc3RhdGUgd2lsbCB0cmlnZ2VyIGEgX3JlYWQsIHRoZW4gY2FsbCBfcmVhZC4NCiAgLy8gTm90ZSB0aGF0IHRoaXMgbWF5IGJlIGFzeW5jaHJvbm91cywgb3Igc3luY2hyb25vdXMuICBZZXMsIGl0IGlzDQogIC8vIGRlZXBseSB1Z2x5IHRvIHdyaXRlIEFQSXMgdGhpcyB3YXksIGJ1dCB0aGF0IHN0aWxsIGRvZXNuJ3QgbWVhbg0KICAvLyB0aGF0IHRoZSBSZWFkYWJsZSBjbGFzcyBzaG91bGQgYmVoYXZlIGltcHJvcGVybHksIGFzIHN0cmVhbXMgYXJlDQogIC8vIGRlc2lnbmVkIHRvIGJlIHN5bmMvYXN5bmMgYWdub3N0aWMuDQogIC8vIFRha2Ugbm90ZSBpZiB0aGUgX3JlYWQgY2FsbCBpcyBzeW5jIG9yIGFzeW5jIChpZSwgaWYgdGhlIHJlYWQgY2FsbA0KICAvLyBoYXMgcmV0dXJuZWQgeWV0KSwgc28gdGhhdCB3ZSBrbm93IHdoZXRoZXIgb3Igbm90IGl0J3Mgc2FmZSB0byBlbWl0DQogIC8vICdyZWFkYWJsZScgZXRjLg0KICAvLw0KICAvLyAzLiBBY3R1YWxseSBwdWxsIHRoZSByZXF1ZXN0ZWQgY2h1bmtzIG91dCBvZiB0aGUgYnVmZmVyIGFuZCByZXR1cm4uDQoNCiAgLy8gaWYgd2UgbmVlZCBhIHJlYWRhYmxlIGV2ZW50LCB0aGVuIHdlIG5lZWQgdG8gZG8gc29tZSByZWFkaW5nLg0KICB2YXIgZG9SZWFkID0gc3RhdGUubmVlZFJlYWRhYmxlOw0KICBkZWJ1ZygnbmVlZCByZWFkYWJsZScsIGRvUmVhZCk7DQoNCiAgLy8gaWYgd2UgY3VycmVudGx5IGhhdmUgbGVzcyB0aGFuIHRoZSBoaWdoV2F0ZXJNYXJrLCB0aGVuIGFsc28gcmVhZCBzb21lDQogIGlmIChzdGF0ZS5sZW5ndGggPT09IDAgfHwgc3RhdGUubGVuZ3RoIC0gbiA8IHN0YXRlLmhpZ2hXYXRlck1hcmspIHsNCiAgICBkb1JlYWQgPSB0cnVlOw0KICAgIGRlYnVnKCdsZW5ndGggbGVzcyB0aGFuIHdhdGVybWFyaycsIGRvUmVhZCk7DQogIH0NCg0KICAvLyBob3dldmVyLCBpZiB3ZSd2ZSBlbmRlZCwgdGhlbiB0aGVyZSdzIG5vIHBvaW50LCBhbmQgaWYgd2UncmUgYWxyZWFkeQ0KICAvLyByZWFkaW5nLCB0aGVuIGl0J3MgdW5uZWNlc3NhcnkuDQogIGlmIChzdGF0ZS5lbmRlZCB8fCBzdGF0ZS5yZWFkaW5nKSB7DQogICAgZG9SZWFkID0gZmFsc2U7DQogICAgZGVidWcoJ3JlYWRpbmcgb3IgZW5kZWQnLCBkb1JlYWQpOw0KICB9DQoNCiAgaWYgKGRvUmVhZCkgew0KICAgIGRlYnVnKCdkbyByZWFkJyk7DQogICAgc3RhdGUucmVhZGluZyA9IHRydWU7DQogICAgc3RhdGUuc3luYyA9IHRydWU7DQogICAgLy8gaWYgdGhlIGxlbmd0aCBpcyBjdXJyZW50bHkgemVybywgdGhlbiB3ZSAqbmVlZCogYSByZWFkYWJsZSBldmVudC4NCiAgICBpZiAoc3RhdGUubGVuZ3RoID09PSAwKSBzdGF0ZS5uZWVkUmVhZGFibGUgPSB0cnVlOw0KICAgIC8vIGNhbGwgaW50ZXJuYWwgcmVhZCBtZXRob2QNCiAgICB0aGlzLl9yZWFkKHN0YXRlLmhpZ2hXYXRlck1hcmspOw0KICAgIHN0YXRlLnN5bmMgPSBmYWxzZTsNCiAgfQ0KDQogIC8vIElmIF9yZWFkIHB1c2hlZCBkYXRhIHN5bmNocm9ub3VzbHksIHRoZW4gYHJlYWRpbmdgIHdpbGwgYmUgZmFsc2UsDQogIC8vIGFuZCB3ZSBuZWVkIHRvIHJlLWV2YWx1YXRlIGhvdyBtdWNoIGRhdGEgd2UgY2FuIHJldHVybiB0byB0aGUgdXNlci4NCiAgaWYgKGRvUmVhZCAmJiAhc3RhdGUucmVhZGluZykgbiA9IGhvd011Y2hUb1JlYWQobk9yaWcsIHN0YXRlKTsNCg0KICB2YXIgcmV0Ow0KICBpZiAobiA+IDApIHJldCA9IGZyb21MaXN0KG4sIHN0YXRlKTtlbHNlIHJldCA9IG51bGw7DQoNCiAgaWYgKHJldCA9PT0gbnVsbCkgew0KICAgIHN0YXRlLm5lZWRSZWFkYWJsZSA9IHRydWU7DQogICAgbiA9IDA7DQogIH0NCg0KICBzdGF0ZS5sZW5ndGggLT0gbjsNCg0KICAvLyBJZiB3ZSBoYXZlIG5vdGhpbmcgaW4gdGhlIGJ1ZmZlciwgdGhlbiB3ZSB3YW50IHRvIGtub3cNCiAgLy8gYXMgc29vbiBhcyB3ZSAqZG8qIGdldCBzb21ldGhpbmcgaW50byB0aGUgYnVmZmVyLg0KICBpZiAoc3RhdGUubGVuZ3RoID09PSAwICYmICFzdGF0ZS5lbmRlZCkgc3RhdGUubmVlZFJlYWRhYmxlID0gdHJ1ZTsNCg0KICAvLyBJZiB3ZSB0cmllZCB0byByZWFkKCkgcGFzdCB0aGUgRU9GLCB0aGVuIGVtaXQgZW5kIG9uIHRoZSBuZXh0IHRpY2suDQogIGlmIChuT3JpZyAhPT0gbiAmJiBzdGF0ZS5lbmRlZCAmJiBzdGF0ZS5sZW5ndGggPT09IDApIGVuZFJlYWRhYmxlKHRoaXMpOw0KDQogIGlmIChyZXQgIT09IG51bGwpIHRoaXMuZW1pdCgnZGF0YScsIHJldCk7DQoNCiAgcmV0dXJuIHJldDsNCn07DQoNCmZ1bmN0aW9uIGNodW5rSW52YWxpZChzdGF0ZSwgY2h1bmspIHsNCiAgdmFyIGVyID0gbnVsbDsNCiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoY2h1bmspICYmIHR5cGVvZiBjaHVuayAhPT0gJ3N0cmluZycgJiYgY2h1bmsgIT09IG51bGwgJiYgY2h1bmsgIT09IHVuZGVmaW5lZCAmJiAhc3RhdGUub2JqZWN0TW9kZSkgew0KICAgIGVyID0gbmV3IFR5cGVFcnJvcignSW52YWxpZCBub24tc3RyaW5nL2J1ZmZlciBjaHVuaycpOw0KICB9DQogIHJldHVybiBlcjsNCn0NCg0KZnVuY3Rpb24gb25Fb2ZDaHVuayhzdHJlYW0sIHN0YXRlKSB7DQogIGlmIChzdGF0ZS5lbmRlZCkgcmV0dXJuOw0KICBpZiAoc3RhdGUuZGVjb2Rlcikgew0KICAgIHZhciBjaHVuayA9IHN0YXRlLmRlY29kZXIuZW5kKCk7DQogICAgaWYgKGNodW5rICYmIGNodW5rLmxlbmd0aCkgew0KICAgICAgc3RhdGUuYnVmZmVyLnB1c2goY2h1bmspOw0KICAgICAgc3RhdGUubGVuZ3RoICs9IHN0YXRlLm9iamVjdE1vZGUgPyAxIDogY2h1bmsubGVuZ3RoOw0KICAgIH0NCiAgfQ0KICBzdGF0ZS5lbmRlZCA9IHRydWU7DQoNCiAgLy8gZW1pdCAncmVhZGFibGUnIG5vdyB0byBtYWtlIHN1cmUgaXQgZ2V0cyBwaWNrZWQgdXAuDQogIGVtaXRSZWFkYWJsZShzdHJlYW0pOw0KfQ0KDQovLyBEb24ndCBlbWl0IHJlYWRhYmxlIHJpZ2h0IGF3YXkgaW4gc3luYyBtb2RlLCBiZWNhdXNlIHRoaXMgY2FuIHRyaWdnZXINCi8vIGFub3RoZXIgcmVhZCgpIGNhbGwgPT4gc3RhY2sgb3ZlcmZsb3cuICBUaGlzIHdheSwgaXQgbWlnaHQgdHJpZ2dlcg0KLy8gYSBuZXh0VGljayByZWN1cnNpb24gd2FybmluZywgYnV0IHRoYXQncyBub3Qgc28gYmFkLg0KZnVuY3Rpb24gZW1pdFJlYWRhYmxlKHN0cmVhbSkgew0KICB2YXIgc3RhdGUgPSBzdHJlYW0uX3JlYWRhYmxlU3RhdGU7DQogIHN0YXRlLm5lZWRSZWFkYWJsZSA9IGZhbHNlOw0KICBpZiAoIXN0YXRlLmVtaXR0ZWRSZWFkYWJsZSkgew0KICAgIGRlYnVnKCdlbWl0UmVhZGFibGUnLCBzdGF0ZS5mbG93aW5nKTsNCiAgICBzdGF0ZS5lbWl0dGVkUmVhZGFibGUgPSB0cnVlOw0KICAgIGlmIChzdGF0ZS5zeW5jKSBwcm9jZXNzTmV4dFRpY2soZW1pdFJlYWRhYmxlXywgc3RyZWFtKTtlbHNlIGVtaXRSZWFkYWJsZV8oc3RyZWFtKTsNCiAgfQ0KfQ0KDQpmdW5jdGlvbiBlbWl0UmVhZGFibGVfKHN0cmVhbSkgew0KICBkZWJ1ZygnZW1pdCByZWFkYWJsZScpOw0KICBzdHJlYW0uZW1pdCgncmVhZGFibGUnKTsNCiAgZmxvdyhzdHJlYW0pOw0KfQ0KDQovLyBhdCB0aGlzIHBvaW50LCB0aGUgdXNlciBoYXMgcHJlc3VtYWJseSBzZWVuIHRoZSAncmVhZGFibGUnIGV2ZW50LA0KLy8gYW5kIGNhbGxlZCByZWFkKCkgdG8gY29uc3VtZSBzb21lIGRhdGEuICB0aGF0IG1heSBoYXZlIHRyaWdnZXJlZA0KLy8gaW4gdHVybiBhbm90aGVyIF9yZWFkKG4pIGNhbGwsIGluIHdoaWNoIGNhc2UgcmVhZGluZyA9IHRydWUgaWYNCi8vIGl0J3MgaW4gcHJvZ3Jlc3MuDQovLyBIb3dldmVyLCBpZiB3ZSdyZSBub3QgZW5kZWQsIG9yIHJlYWRpbmcsIGFuZCB0aGUgbGVuZ3RoIDwgaHdtLA0KLy8gdGhlbiBnbyBhaGVhZCBhbmQgdHJ5IHRvIHJlYWQgc29tZSBtb3JlIHByZWVtcHRpdmVseS4NCmZ1bmN0aW9uIG1heWJlUmVhZE1vcmUoc3RyZWFtLCBzdGF0ZSkgew0KICBpZiAoIXN0YXRlLnJlYWRpbmdNb3JlKSB7DQogICAgc3RhdGUucmVhZGluZ01vcmUgPSB0cnVlOw0KICAgIHByb2Nlc3NOZXh0VGljayhtYXliZVJlYWRNb3JlXywgc3RyZWFtLCBzdGF0ZSk7DQogIH0NCn0NCg0KZnVuY3Rpb24gbWF5YmVSZWFkTW9yZV8oc3RyZWFtLCBzdGF0ZSkgew0KICB2YXIgbGVuID0gc3RhdGUubGVuZ3RoOw0KICB3aGlsZSAoIXN0YXRlLnJlYWRpbmcgJiYgIXN0YXRlLmZsb3dpbmcgJiYgIXN0YXRlLmVuZGVkICYmIHN0YXRlLmxlbmd0aCA8IHN0YXRlLmhpZ2hXYXRlck1hcmspIHsNCiAgICBkZWJ1ZygnbWF5YmVSZWFkTW9yZSByZWFkIDAnKTsNCiAgICBzdHJlYW0ucmVhZCgwKTsNCiAgICBpZiAobGVuID09PSBzdGF0ZS5sZW5ndGgpDQogICAgICAvLyBkaWRuJ3QgZ2V0IGFueSBkYXRhLCBzdG9wIHNwaW5uaW5nLg0KICAgICAgYnJlYWs7ZWxzZSBsZW4gPSBzdGF0ZS5sZW5ndGg7DQogIH0NCiAgc3RhdGUucmVhZGluZ01vcmUgPSBmYWxzZTsNCn0NCg0KLy8gYWJzdHJhY3QgbWV0aG9kLiAgdG8gYmUgb3ZlcnJpZGRlbiBpbiBzcGVjaWZpYyBpbXBsZW1lbnRhdGlvbiBjbGFzc2VzLg0KLy8gY2FsbCBjYihlciwgZGF0YSkgd2hlcmUgZGF0YSBpcyA8PSBuIGluIGxlbmd0aC4NCi8vIGZvciB2aXJ0dWFsIChub24tc3RyaW5nLCBub24tYnVmZmVyKSBzdHJlYW1zLCAibGVuZ3RoIiBpcyBzb21ld2hhdA0KLy8gYXJiaXRyYXJ5LCBhbmQgcGVyaGFwcyBub3QgdmVyeSBtZWFuaW5nZnVsLg0KUmVhZGFibGUucHJvdG90eXBlLl9yZWFkID0gZnVuY3Rpb24gKG4pIHsNCiAgdGhpcy5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcignbm90IGltcGxlbWVudGVkJykpOw0KfTsNCg0KUmVhZGFibGUucHJvdG90eXBlLnBpcGUgPSBmdW5jdGlvbiAoZGVzdCwgcGlwZU9wdHMpIHsNCiAgdmFyIHNyYyA9IHRoaXM7DQogIHZhciBzdGF0ZSA9IHRoaXMuX3JlYWRhYmxlU3RhdGU7DQoNCiAgc3dpdGNoIChzdGF0ZS5waXBlc0NvdW50KSB7DQogICAgY2FzZSAwOg0KICAgICAgc3RhdGUucGlwZXMgPSBkZXN0Ow0KICAgICAgYnJlYWs7DQogICAgY2FzZSAxOg0KICAgICAgc3RhdGUucGlwZXMgPSBbc3RhdGUucGlwZXMsIGRlc3RdOw0KICAgICAgYnJlYWs7DQogICAgZGVmYXVsdDoNCiAgICAgIHN0YXRlLnBpcGVzLnB1c2goZGVzdCk7DQogICAgICBicmVhazsNCiAgfQ0KICBzdGF0ZS5waXBlc0NvdW50ICs9IDE7DQogIGRlYnVnKCdwaXBlIGNvdW50PSVkIG9wdHM9JWonLCBzdGF0ZS5waXBlc0NvdW50LCBwaXBlT3B0cyk7DQoNCiAgdmFyIGRvRW5kID0gKCFwaXBlT3B0cyB8fCBwaXBlT3B0cy5lbmQgIT09IGZhbHNlKSAmJiBkZXN0ICE9PSBwcm9jZXNzLnN0ZG91dCAmJiBkZXN0ICE9PSBwcm9jZXNzLnN0ZGVycjsNCg0KICB2YXIgZW5kRm4gPSBkb0VuZCA/IG9uZW5kIDogY2xlYW51cDsNCiAgaWYgKHN0YXRlLmVuZEVtaXR0ZWQpIHByb2Nlc3NOZXh0VGljayhlbmRGbik7ZWxzZSBzcmMub25jZSgnZW5kJywgZW5kRm4pOw0KDQogIGRlc3Qub24oJ3VucGlwZScsIG9udW5waXBlKTsNCiAgZnVuY3Rpb24gb251bnBpcGUocmVhZGFibGUpIHsNCiAgICBkZWJ1Zygnb251bnBpcGUnKTsNCiAgICBpZiAocmVhZGFibGUgPT09IHNyYykgew0KICAgICAgY2xlYW51cCgpOw0KICAgIH0NCiAgfQ0KDQogIGZ1bmN0aW9uIG9uZW5kKCkgew0KICAgIGRlYnVnKCdvbmVuZCcpOw0KICAgIGRlc3QuZW5kKCk7DQogIH0NCg0KICAvLyB3aGVuIHRoZSBkZXN0IGRyYWlucywgaXQgcmVkdWNlcyB0aGUgYXdhaXREcmFpbiBjb3VudGVyDQogIC8vIG9uIHRoZSBzb3VyY2UuICBUaGlzIHdvdWxkIGJlIG1vcmUgZWxlZ2FudCB3aXRoIGEgLm9uY2UoKQ0KICAvLyBoYW5kbGVyIGluIGZsb3coKSwgYnV0IGFkZGluZyBhbmQgcmVtb3ZpbmcgcmVwZWF0ZWRseSBpcw0KICAvLyB0b28gc2xvdy4NCiAgdmFyIG9uZHJhaW4gPSBwaXBlT25EcmFpbihzcmMpOw0KICBkZXN0Lm9uKCdkcmFpbicsIG9uZHJhaW4pOw0KDQogIHZhciBjbGVhbmVkVXAgPSBmYWxzZTsNCiAgZnVuY3Rpb24gY2xlYW51cCgpIHsNCiAgICBkZWJ1ZygnY2xlYW51cCcpOw0KICAgIC8vIGNsZWFudXAgZXZlbnQgaGFuZGxlcnMgb25jZSB0aGUgcGlwZSBpcyBicm9rZW4NCiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIG9uY2xvc2UpOw0KICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2ZpbmlzaCcsIG9uZmluaXNoKTsNCiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdkcmFpbicsIG9uZHJhaW4pOw0KICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgb25lcnJvcik7DQogICAgZGVzdC5yZW1vdmVMaXN0ZW5lcigndW5waXBlJywgb251bnBpcGUpOw0KICAgIHNyYy5yZW1vdmVMaXN0ZW5lcignZW5kJywgb25lbmQpOw0KICAgIHNyYy5yZW1vdmVMaXN0ZW5lcignZW5kJywgY2xlYW51cCk7DQogICAgc3JjLnJlbW92ZUxpc3RlbmVyKCdkYXRhJywgb25kYXRhKTsNCg0KICAgIGNsZWFuZWRVcCA9IHRydWU7DQoNCiAgICAvLyBpZiB0aGUgcmVhZGVyIGlzIHdhaXRpbmcgZm9yIGEgZHJhaW4gZXZlbnQgZnJvbSB0aGlzDQogICAgLy8gc3BlY2lmaWMgd3JpdGVyLCB0aGVuIGl0IHdvdWxkIGNhdXNlIGl0IHRvIG5ldmVyIHN0YXJ0DQogICAgLy8gZmxvd2luZyBhZ2Fpbi4NCiAgICAvLyBTbywgaWYgdGhpcyBpcyBhd2FpdGluZyBhIGRyYWluLCB0aGVuIHdlIGp1c3QgY2FsbCBpdCBub3cuDQogICAgLy8gSWYgd2UgZG9uJ3Qga25vdywgdGhlbiBhc3N1bWUgdGhhdCB3ZSBhcmUgd2FpdGluZyBmb3Igb25lLg0KICAgIGlmIChzdGF0ZS5hd2FpdERyYWluICYmICghZGVzdC5fd3JpdGFibGVTdGF0ZSB8fCBkZXN0Ll93cml0YWJsZVN0YXRlLm5lZWREcmFpbikpIG9uZHJhaW4oKTsNCiAgfQ0KDQogIHNyYy5vbignZGF0YScsIG9uZGF0YSk7DQogIGZ1bmN0aW9uIG9uZGF0YShjaHVuaykgew0KICAgIGRlYnVnKCdvbmRhdGEnKTsNCiAgICB2YXIgcmV0ID0gZGVzdC53cml0ZShjaHVuayk7DQogICAgaWYgKGZhbHNlID09PSByZXQpIHsNCiAgICAgIC8vIElmIHRoZSB1c2VyIHVucGlwZWQgZHVyaW5nIGBkZXN0LndyaXRlKClgLCBpdCBpcyBwb3NzaWJsZQ0KICAgICAgLy8gdG8gZ2V0IHN0dWNrIGluIGEgcGVybWFuZW50bHkgcGF1c2VkIHN0YXRlIGlmIHRoYXQgd3JpdGUNCiAgICAgIC8vIGFsc28gcmV0dXJuZWQgZmFsc2UuDQogICAgICBpZiAoc3RhdGUucGlwZXNDb3VudCA9PT0gMSAmJiBzdGF0ZS5waXBlc1swXSA9PT0gZGVzdCAmJiBzcmMubGlzdGVuZXJDb3VudCgnZGF0YScpID09PSAxICYmICFjbGVhbmVkVXApIHsNCiAgICAgICAgZGVidWcoJ2ZhbHNlIHdyaXRlIHJlc3BvbnNlLCBwYXVzZScsIHNyYy5fcmVhZGFibGVTdGF0ZS5hd2FpdERyYWluKTsNCiAgICAgICAgc3JjLl9yZWFkYWJsZVN0YXRlLmF3YWl0RHJhaW4rKzsNCiAgICAgIH0NCiAgICAgIHNyYy5wYXVzZSgpOw0KICAgIH0NCiAgfQ0KDQogIC8vIGlmIHRoZSBkZXN0IGhhcyBhbiBlcnJvciwgdGhlbiBzdG9wIHBpcGluZyBpbnRvIGl0Lg0KICAvLyBob3dldmVyLCBkb24ndCBzdXBwcmVzcyB0aGUgdGhyb3dpbmcgYmVoYXZpb3IgZm9yIHRoaXMuDQogIGZ1bmN0aW9uIG9uZXJyb3IoZXIpIHsNCiAgICBkZWJ1Zygnb25lcnJvcicsIGVyKTsNCiAgICB1bnBpcGUoKTsNCiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpOw0KICAgIGlmIChFRWxpc3RlbmVyQ291bnQoZGVzdCwgJ2Vycm9yJykgPT09IDApIGRlc3QuZW1pdCgnZXJyb3InLCBlcik7DQogIH0NCiAgLy8gVGhpcyBpcyBhIGJydXRhbGx5IHVnbHkgaGFjayB0byBtYWtlIHN1cmUgdGhhdCBvdXIgZXJyb3IgaGFuZGxlcg0KICAvLyBpcyBhdHRhY2hlZCBiZWZvcmUgYW55IHVzZXJsYW5kIG9uZXMuICBORVZFUiBETyBUSElTLg0KICBpZiAoIWRlc3QuX2V2ZW50cyB8fCAhZGVzdC5fZXZlbnRzLmVycm9yKSBkZXN0Lm9uKCdlcnJvcicsIG9uZXJyb3IpO2Vsc2UgaWYgKGlzQXJyYXkoZGVzdC5fZXZlbnRzLmVycm9yKSkgZGVzdC5fZXZlbnRzLmVycm9yLnVuc2hpZnQob25lcnJvcik7ZWxzZSBkZXN0Ll9ldmVudHMuZXJyb3IgPSBbb25lcnJvciwgZGVzdC5fZXZlbnRzLmVycm9yXTsNCg0KICAvLyBCb3RoIGNsb3NlIGFuZCBmaW5pc2ggc2hvdWxkIHRyaWdnZXIgdW5waXBlLCBidXQgb25seSBvbmNlLg0KICBmdW5jdGlvbiBvbmNsb3NlKCkgew0KICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2ZpbmlzaCcsIG9uZmluaXNoKTsNCiAgICB1bnBpcGUoKTsNCiAgfQ0KICBkZXN0Lm9uY2UoJ2Nsb3NlJywgb25jbG9zZSk7DQogIGZ1bmN0aW9uIG9uZmluaXNoKCkgew0KICAgIGRlYnVnKCdvbmZpbmlzaCcpOw0KICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgb25jbG9zZSk7DQogICAgdW5waXBlKCk7DQogIH0NCiAgZGVzdC5vbmNlKCdmaW5pc2gnLCBvbmZpbmlzaCk7DQoNCiAgZnVuY3Rpb24gdW5waXBlKCkgew0KICAgIGRlYnVnKCd1bnBpcGUnKTsNCiAgICBzcmMudW5waXBlKGRlc3QpOw0KICB9DQoNCiAgLy8gdGVsbCB0aGUgZGVzdCB0aGF0IGl0J3MgYmVpbmcgcGlwZWQgdG8NCiAgZGVzdC5lbWl0KCdwaXBlJywgc3JjKTsNCg0KICAvLyBzdGFydCB0aGUgZmxvdyBpZiBpdCBoYXNuJ3QgYmVlbiBzdGFydGVkIGFscmVhZHkuDQogIGlmICghc3RhdGUuZmxvd2luZykgew0KICAgIGRlYnVnKCdwaXBlIHJlc3VtZScpOw0KICAgIHNyYy5yZXN1bWUoKTsNCiAgfQ0KDQogIHJldHVybiBkZXN0Ow0KfTsNCg0KZnVuY3Rpb24gcGlwZU9uRHJhaW4oc3JjKSB7DQogIHJldHVybiBmdW5jdGlvbiAoKSB7DQogICAgdmFyIHN0YXRlID0gc3JjLl9yZWFkYWJsZVN0YXRlOw0KICAgIGRlYnVnKCdwaXBlT25EcmFpbicsIHN0YXRlLmF3YWl0RHJhaW4pOw0KICAgIGlmIChzdGF0ZS5hd2FpdERyYWluKSBzdGF0ZS5hd2FpdERyYWluLS07DQogICAgaWYgKHN0YXRlLmF3YWl0RHJhaW4gPT09IDAgJiYgRUVsaXN0ZW5lckNvdW50KHNyYywgJ2RhdGEnKSkgew0KICAgICAgc3RhdGUuZmxvd2luZyA9IHRydWU7DQogICAgICBmbG93KHNyYyk7DQogICAgfQ0KICB9Ow0KfQ0KDQpSZWFkYWJsZS5wcm90b3R5cGUudW5waXBlID0gZnVuY3Rpb24gKGRlc3QpIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fcmVhZGFibGVTdGF0ZTsNCg0KICAvLyBpZiB3ZSdyZSBub3QgcGlwaW5nIGFueXdoZXJlLCB0aGVuIGRvIG5vdGhpbmcuDQogIGlmIChzdGF0ZS5waXBlc0NvdW50ID09PSAwKSByZXR1cm4gdGhpczsNCg0KICAvLyBqdXN0IG9uZSBkZXN0aW5hdGlvbi4gIG1vc3QgY29tbW9uIGNhc2UuDQogIGlmIChzdGF0ZS5waXBlc0NvdW50ID09PSAxKSB7DQogICAgLy8gcGFzc2VkIGluIG9uZSwgYnV0IGl0J3Mgbm90IHRoZSByaWdodCBvbmUuDQogICAgaWYgKGRlc3QgJiYgZGVzdCAhPT0gc3RhdGUucGlwZXMpIHJldHVybiB0aGlzOw0KDQogICAgaWYgKCFkZXN0KSBkZXN0ID0gc3RhdGUucGlwZXM7DQoNCiAgICAvLyBnb3QgYSBtYXRjaC4NCiAgICBzdGF0ZS5waXBlcyA9IG51bGw7DQogICAgc3RhdGUucGlwZXNDb3VudCA9IDA7DQogICAgc3RhdGUuZmxvd2luZyA9IGZhbHNlOw0KICAgIGlmIChkZXN0KSBkZXN0LmVtaXQoJ3VucGlwZScsIHRoaXMpOw0KICAgIHJldHVybiB0aGlzOw0KICB9DQoNCiAgLy8gc2xvdyBjYXNlLiBtdWx0aXBsZSBwaXBlIGRlc3RpbmF0aW9ucy4NCg0KICBpZiAoIWRlc3QpIHsNCiAgICAvLyByZW1vdmUgYWxsLg0KICAgIHZhciBkZXN0cyA9IHN0YXRlLnBpcGVzOw0KICAgIHZhciBsZW4gPSBzdGF0ZS5waXBlc0NvdW50Ow0KICAgIHN0YXRlLnBpcGVzID0gbnVsbDsNCiAgICBzdGF0ZS5waXBlc0NvdW50ID0gMDsNCiAgICBzdGF0ZS5mbG93aW5nID0gZmFsc2U7DQoNCiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGVuOyBfaSsrKSB7DQogICAgICBkZXN0c1tfaV0uZW1pdCgndW5waXBlJywgdGhpcyk7DQogICAgfXJldHVybiB0aGlzOw0KICB9DQoNCiAgLy8gdHJ5IHRvIGZpbmQgdGhlIHJpZ2h0IG9uZS4NCiAgdmFyIGkgPSBpbmRleE9mKHN0YXRlLnBpcGVzLCBkZXN0KTsNCiAgaWYgKGkgPT09IC0xKSByZXR1cm4gdGhpczsNCg0KICBzdGF0ZS5waXBlcy5zcGxpY2UoaSwgMSk7DQogIHN0YXRlLnBpcGVzQ291bnQgLT0gMTsNCiAgaWYgKHN0YXRlLnBpcGVzQ291bnQgPT09IDEpIHN0YXRlLnBpcGVzID0gc3RhdGUucGlwZXNbMF07DQoNCiAgZGVzdC5lbWl0KCd1bnBpcGUnLCB0aGlzKTsNCg0KICByZXR1cm4gdGhpczsNCn07DQoNCi8vIHNldCB1cCBkYXRhIGV2ZW50cyBpZiB0aGV5IGFyZSBhc2tlZCBmb3INCi8vIEVuc3VyZSByZWFkYWJsZSBsaXN0ZW5lcnMgZXZlbnR1YWxseSBnZXQgc29tZXRoaW5nDQpSZWFkYWJsZS5wcm90b3R5cGUub24gPSBmdW5jdGlvbiAoZXYsIGZuKSB7DQogIHZhciByZXMgPSBTdHJlYW0ucHJvdG90eXBlLm9uLmNhbGwodGhpcywgZXYsIGZuKTsNCg0KICAvLyBJZiBsaXN0ZW5pbmcgdG8gZGF0YSwgYW5kIGl0IGhhcyBub3QgZXhwbGljaXRseSBiZWVuIHBhdXNlZCwNCiAgLy8gdGhlbiBjYWxsIHJlc3VtZSB0byBzdGFydCB0aGUgZmxvdyBvZiBkYXRhIG9uIHRoZSBuZXh0IHRpY2suDQogIGlmIChldiA9PT0gJ2RhdGEnICYmIGZhbHNlICE9PSB0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcpIHsNCiAgICB0aGlzLnJlc3VtZSgpOw0KICB9DQoNCiAgaWYgKGV2ID09PSAncmVhZGFibGUnICYmICF0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZEVtaXR0ZWQpIHsNCiAgICB2YXIgc3RhdGUgPSB0aGlzLl9yZWFkYWJsZVN0YXRlOw0KICAgIGlmICghc3RhdGUucmVhZGFibGVMaXN0ZW5pbmcpIHsNCiAgICAgIHN0YXRlLnJlYWRhYmxlTGlzdGVuaW5nID0gdHJ1ZTsNCiAgICAgIHN0YXRlLmVtaXR0ZWRSZWFkYWJsZSA9IGZhbHNlOw0KICAgICAgc3RhdGUubmVlZFJlYWRhYmxlID0gdHJ1ZTsNCiAgICAgIGlmICghc3RhdGUucmVhZGluZykgew0KICAgICAgICBwcm9jZXNzTmV4dFRpY2soblJlYWRpbmdOZXh0VGljaywgdGhpcyk7DQogICAgICB9IGVsc2UgaWYgKHN0YXRlLmxlbmd0aCkgew0KICAgICAgICBlbWl0UmVhZGFibGUodGhpcywgc3RhdGUpOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KDQogIHJldHVybiByZXM7DQp9Ow0KUmVhZGFibGUucHJvdG90eXBlLmFkZExpc3RlbmVyID0gUmVhZGFibGUucHJvdG90eXBlLm9uOw0KDQpmdW5jdGlvbiBuUmVhZGluZ05leHRUaWNrKHNlbGYpIHsNCiAgZGVidWcoJ3JlYWRhYmxlIG5leHR0aWNrIHJlYWQgMCcpOw0KICBzZWxmLnJlYWQoMCk7DQp9DQoNCi8vIHBhdXNlKCkgYW5kIHJlc3VtZSgpIGFyZSByZW1uYW50cyBvZiB0aGUgbGVnYWN5IHJlYWRhYmxlIHN0cmVhbSBBUEkNCi8vIElmIHRoZSB1c2VyIHVzZXMgdGhlbSwgdGhlbiBzd2l0Y2ggaW50byBvbGQgbW9kZS4NClJlYWRhYmxlLnByb3RvdHlwZS5yZXN1bWUgPSBmdW5jdGlvbiAoKSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX3JlYWRhYmxlU3RhdGU7DQogIGlmICghc3RhdGUuZmxvd2luZykgew0KICAgIGRlYnVnKCdyZXN1bWUnKTsNCiAgICBzdGF0ZS5mbG93aW5nID0gdHJ1ZTsNCiAgICByZXN1bWUodGhpcywgc3RhdGUpOw0KICB9DQogIHJldHVybiB0aGlzOw0KfTsNCg0KZnVuY3Rpb24gcmVzdW1lKHN0cmVhbSwgc3RhdGUpIHsNCiAgaWYgKCFzdGF0ZS5yZXN1bWVTY2hlZHVsZWQpIHsNCiAgICBzdGF0ZS5yZXN1bWVTY2hlZHVsZWQgPSB0cnVlOw0KICAgIHByb2Nlc3NOZXh0VGljayhyZXN1bWVfLCBzdHJlYW0sIHN0YXRlKTsNCiAgfQ0KfQ0KDQpmdW5jdGlvbiByZXN1bWVfKHN0cmVhbSwgc3RhdGUpIHsNCiAgaWYgKCFzdGF0ZS5yZWFkaW5nKSB7DQogICAgZGVidWcoJ3Jlc3VtZSByZWFkIDAnKTsNCiAgICBzdHJlYW0ucmVhZCgwKTsNCiAgfQ0KDQogIHN0YXRlLnJlc3VtZVNjaGVkdWxlZCA9IGZhbHNlOw0KICBzdHJlYW0uZW1pdCgncmVzdW1lJyk7DQogIGZsb3coc3RyZWFtKTsNCiAgaWYgKHN0YXRlLmZsb3dpbmcgJiYgIXN0YXRlLnJlYWRpbmcpIHN0cmVhbS5yZWFkKDApOw0KfQ0KDQpSZWFkYWJsZS5wcm90b3R5cGUucGF1c2UgPSBmdW5jdGlvbiAoKSB7DQogIGRlYnVnKCdjYWxsIHBhdXNlIGZsb3dpbmc9JWonLCB0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcpOw0KICBpZiAoZmFsc2UgIT09IHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZykgew0KICAgIGRlYnVnKCdwYXVzZScpOw0KICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyA9IGZhbHNlOw0KICAgIHRoaXMuZW1pdCgncGF1c2UnKTsNCiAgfQ0KICByZXR1cm4gdGhpczsNCn07DQoNCmZ1bmN0aW9uIGZsb3coc3RyZWFtKSB7DQogIHZhciBzdGF0ZSA9IHN0cmVhbS5fcmVhZGFibGVTdGF0ZTsNCiAgZGVidWcoJ2Zsb3cnLCBzdGF0ZS5mbG93aW5nKTsNCiAgaWYgKHN0YXRlLmZsb3dpbmcpIHsNCiAgICBkbyB7DQogICAgICB2YXIgY2h1bmsgPSBzdHJlYW0ucmVhZCgpOw0KICAgIH0gd2hpbGUgKG51bGwgIT09IGNodW5rICYmIHN0YXRlLmZsb3dpbmcpOw0KICB9DQp9DQoNCi8vIHdyYXAgYW4gb2xkLXN0eWxlIHN0cmVhbSBhcyB0aGUgYXN5bmMgZGF0YSBzb3VyY2UuDQovLyBUaGlzIGlzICpub3QqIHBhcnQgb2YgdGhlIHJlYWRhYmxlIHN0cmVhbSBpbnRlcmZhY2UuDQovLyBJdCBpcyBhbiB1Z2x5IHVuZm9ydHVuYXRlIG1lc3Mgb2YgaGlzdG9yeS4NClJlYWRhYmxlLnByb3RvdHlwZS53cmFwID0gZnVuY3Rpb24gKHN0cmVhbSkgew0KICB2YXIgc3RhdGUgPSB0aGlzLl9yZWFkYWJsZVN0YXRlOw0KICB2YXIgcGF1c2VkID0gZmFsc2U7DQoNCiAgdmFyIHNlbGYgPSB0aGlzOw0KICBzdHJlYW0ub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHsNCiAgICBkZWJ1Zygnd3JhcHBlZCBlbmQnKTsNCiAgICBpZiAoc3RhdGUuZGVjb2RlciAmJiAhc3RhdGUuZW5kZWQpIHsNCiAgICAgIHZhciBjaHVuayA9IHN0YXRlLmRlY29kZXIuZW5kKCk7DQogICAgICBpZiAoY2h1bmsgJiYgY2h1bmsubGVuZ3RoKSBzZWxmLnB1c2goY2h1bmspOw0KICAgIH0NCg0KICAgIHNlbGYucHVzaChudWxsKTsNCiAgfSk7DQoNCiAgc3RyZWFtLm9uKCdkYXRhJywgZnVuY3Rpb24gKGNodW5rKSB7DQogICAgZGVidWcoJ3dyYXBwZWQgZGF0YScpOw0KICAgIGlmIChzdGF0ZS5kZWNvZGVyKSBjaHVuayA9IHN0YXRlLmRlY29kZXIud3JpdGUoY2h1bmspOw0KDQogICAgLy8gZG9uJ3Qgc2tpcCBvdmVyIGZhbHN5IHZhbHVlcyBpbiBvYmplY3RNb2RlDQogICAgaWYgKHN0YXRlLm9iamVjdE1vZGUgJiYgKGNodW5rID09PSBudWxsIHx8IGNodW5rID09PSB1bmRlZmluZWQpKSByZXR1cm47ZWxzZSBpZiAoIXN0YXRlLm9iamVjdE1vZGUgJiYgKCFjaHVuayB8fCAhY2h1bmsubGVuZ3RoKSkgcmV0dXJuOw0KDQogICAgdmFyIHJldCA9IHNlbGYucHVzaChjaHVuayk7DQogICAgaWYgKCFyZXQpIHsNCiAgICAgIHBhdXNlZCA9IHRydWU7DQogICAgICBzdHJlYW0ucGF1c2UoKTsNCiAgICB9DQogIH0pOw0KDQogIC8vIHByb3h5IGFsbCB0aGUgb3RoZXIgbWV0aG9kcy4NCiAgLy8gaW1wb3J0YW50IHdoZW4gd3JhcHBpbmcgZmlsdGVycyBhbmQgZHVwbGV4ZXMuDQogIGZvciAodmFyIGkgaW4gc3RyZWFtKSB7DQogICAgaWYgKHRoaXNbaV0gPT09IHVuZGVmaW5lZCAmJiB0eXBlb2Ygc3RyZWFtW2ldID09PSAnZnVuY3Rpb24nKSB7DQogICAgICB0aGlzW2ldID0gZnVuY3Rpb24gKG1ldGhvZCkgew0KICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgew0KICAgICAgICAgIHJldHVybiBzdHJlYW1bbWV0aG9kXS5hcHBseShzdHJlYW0sIGFyZ3VtZW50cyk7DQogICAgICAgIH07DQogICAgICB9KGkpOw0KICAgIH0NCiAgfQ0KDQogIC8vIHByb3h5IGNlcnRhaW4gaW1wb3J0YW50IGV2ZW50cy4NCiAgdmFyIGV2ZW50cyA9IFsnZXJyb3InLCAnY2xvc2UnLCAnZGVzdHJveScsICdwYXVzZScsICdyZXN1bWUnXTsNCiAgZm9yRWFjaChldmVudHMsIGZ1bmN0aW9uIChldikgew0KICAgIHN0cmVhbS5vbihldiwgc2VsZi5lbWl0LmJpbmQoc2VsZiwgZXYpKTsNCiAgfSk7DQoNCiAgLy8gd2hlbiB3ZSB0cnkgdG8gY29uc3VtZSBzb21lIG1vcmUgYnl0ZXMsIHNpbXBseSB1bnBhdXNlIHRoZQ0KICAvLyB1bmRlcmx5aW5nIHN0cmVhbS4NCiAgc2VsZi5fcmVhZCA9IGZ1bmN0aW9uIChuKSB7DQogICAgZGVidWcoJ3dyYXBwZWQgX3JlYWQnLCBuKTsNCiAgICBpZiAocGF1c2VkKSB7DQogICAgICBwYXVzZWQgPSBmYWxzZTsNCiAgICAgIHN0cmVhbS5yZXN1bWUoKTsNCiAgICB9DQogIH07DQoNCiAgcmV0dXJuIHNlbGY7DQp9Ow0KDQovLyBleHBvc2VkIGZvciB0ZXN0aW5nIHB1cnBvc2VzIG9ubHkuDQpSZWFkYWJsZS5fZnJvbUxpc3QgPSBmcm9tTGlzdDsNCg0KLy8gUGx1Y2sgb2ZmIG4gYnl0ZXMgZnJvbSBhbiBhcnJheSBvZiBidWZmZXJzLg0KLy8gTGVuZ3RoIGlzIHRoZSBjb21iaW5lZCBsZW5ndGhzIG9mIGFsbCB0aGUgYnVmZmVycyBpbiB0aGUgbGlzdC4NCmZ1bmN0aW9uIGZyb21MaXN0KG4sIHN0YXRlKSB7DQogIHZhciBsaXN0ID0gc3RhdGUuYnVmZmVyOw0KICB2YXIgbGVuZ3RoID0gc3RhdGUubGVuZ3RoOw0KICB2YXIgc3RyaW5nTW9kZSA9ICEhc3RhdGUuZGVjb2RlcjsNCiAgdmFyIG9iamVjdE1vZGUgPSAhIXN0YXRlLm9iamVjdE1vZGU7DQogIHZhciByZXQ7DQoNCiAgLy8gbm90aGluZyBpbiB0aGUgbGlzdCwgZGVmaW5pdGVseSBlbXB0eS4NCiAgaWYgKGxpc3QubGVuZ3RoID09PSAwKSByZXR1cm4gbnVsbDsNCg0KICBpZiAobGVuZ3RoID09PSAwKSByZXQgPSBudWxsO2Vsc2UgaWYgKG9iamVjdE1vZGUpIHJldCA9IGxpc3Quc2hpZnQoKTtlbHNlIGlmICghbiB8fCBuID49IGxlbmd0aCkgew0KICAgIC8vIHJlYWQgaXQgYWxsLCB0cnVuY2F0ZSB0aGUgYXJyYXkuDQogICAgaWYgKHN0cmluZ01vZGUpIHJldCA9IGxpc3Quam9pbignJyk7ZWxzZSBpZiAobGlzdC5sZW5ndGggPT09IDEpIHJldCA9IGxpc3RbMF07ZWxzZSByZXQgPSBCdWZmZXIuY29uY2F0KGxpc3QsIGxlbmd0aCk7DQogICAgbGlzdC5sZW5ndGggPSAwOw0KICB9IGVsc2Ugew0KICAgIC8vIHJlYWQganVzdCBzb21lIG9mIGl0Lg0KICAgIGlmIChuIDwgbGlzdFswXS5sZW5ndGgpIHsNCiAgICAgIC8vIGp1c3QgdGFrZSBhIHBhcnQgb2YgdGhlIGZpcnN0IGxpc3QgaXRlbS4NCiAgICAgIC8vIHNsaWNlIGlzIHRoZSBzYW1lIGZvciBidWZmZXJzIGFuZCBzdHJpbmdzLg0KICAgICAgdmFyIGJ1ZiA9IGxpc3RbMF07DQogICAgICByZXQgPSBidWYuc2xpY2UoMCwgbik7DQogICAgICBsaXN0WzBdID0gYnVmLnNsaWNlKG4pOw0KICAgIH0gZWxzZSBpZiAobiA9PT0gbGlzdFswXS5sZW5ndGgpIHsNCiAgICAgIC8vIGZpcnN0IGxpc3QgaXMgYSBwZXJmZWN0IG1hdGNoDQogICAgICByZXQgPSBsaXN0LnNoaWZ0KCk7DQogICAgfSBlbHNlIHsNCiAgICAgIC8vIGNvbXBsZXggY2FzZS4NCiAgICAgIC8vIHdlIGhhdmUgZW5vdWdoIHRvIGNvdmVyIGl0LCBidXQgaXQgc3BhbnMgcGFzdCB0aGUgZmlyc3QgYnVmZmVyLg0KICAgICAgaWYgKHN0cmluZ01vZGUpIHJldCA9ICcnO2Vsc2UgcmV0ID0gbmV3IEJ1ZmZlcihuKTsNCg0KICAgICAgdmFyIGMgPSAwOw0KICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBsaXN0Lmxlbmd0aDsgaSA8IGwgJiYgYyA8IG47IGkrKykgew0KICAgICAgICB2YXIgYnVmID0gbGlzdFswXTsNCiAgICAgICAgdmFyIGNweSA9IE1hdGgubWluKG4gLSBjLCBidWYubGVuZ3RoKTsNCg0KICAgICAgICBpZiAoc3RyaW5nTW9kZSkgcmV0ICs9IGJ1Zi5zbGljZSgwLCBjcHkpO2Vsc2UgYnVmLmNvcHkocmV0LCBjLCAwLCBjcHkpOw0KDQogICAgICAgIGlmIChjcHkgPCBidWYubGVuZ3RoKSBsaXN0WzBdID0gYnVmLnNsaWNlKGNweSk7ZWxzZSBsaXN0LnNoaWZ0KCk7DQoNCiAgICAgICAgYyArPSBjcHk7DQogICAgICB9DQogICAgfQ0KICB9DQoNCiAgcmV0dXJuIHJldDsNCn0NCg0KZnVuY3Rpb24gZW5kUmVhZGFibGUoc3RyZWFtKSB7DQogIHZhciBzdGF0ZSA9IHN0cmVhbS5fcmVhZGFibGVTdGF0ZTsNCg0KICAvLyBJZiB3ZSBnZXQgaGVyZSBiZWZvcmUgY29uc3VtaW5nIGFsbCB0aGUgYnl0ZXMsIHRoZW4gdGhhdCBpcyBhDQogIC8vIGJ1ZyBpbiBub2RlLiAgU2hvdWxkIG5ldmVyIGhhcHBlbi4NCiAgaWYgKHN0YXRlLmxlbmd0aCA+IDApIHRocm93IG5ldyBFcnJvcignZW5kUmVhZGFibGUgY2FsbGVkIG9uIG5vbi1lbXB0eSBzdHJlYW0nKTsNCg0KICBpZiAoIXN0YXRlLmVuZEVtaXR0ZWQpIHsNCiAgICBzdGF0ZS5lbmRlZCA9IHRydWU7DQogICAgcHJvY2Vzc05leHRUaWNrKGVuZFJlYWRhYmxlTlQsIHN0YXRlLCBzdHJlYW0pOw0KICB9DQp9DQoNCmZ1bmN0aW9uIGVuZFJlYWRhYmxlTlQoc3RhdGUsIHN0cmVhbSkgew0KICAvLyBDaGVjayB0aGF0IHdlIGRpZG4ndCBnZXQgb25lIGxhc3QgdW5zaGlmdC4NCiAgaWYgKCFzdGF0ZS5lbmRFbWl0dGVkICYmIHN0YXRlLmxlbmd0aCA9PT0gMCkgew0KICAgIHN0YXRlLmVuZEVtaXR0ZWQgPSB0cnVlOw0KICAgIHN0cmVhbS5yZWFkYWJsZSA9IGZhbHNlOw0KICAgIHN0cmVhbS5lbWl0KCdlbmQnKTsNCiAgfQ0KfQ0KDQpmdW5jdGlvbiBmb3JFYWNoKHhzLCBmKSB7DQogIGZvciAodmFyIGkgPSAwLCBsID0geHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7DQogICAgZih4c1tpXSwgaSk7DQogIH0NCn0NCg0KZnVuY3Rpb24gaW5kZXhPZih4cywgeCkgew0KICBmb3IgKHZhciBpID0gMCwgbCA9IHhzLmxlbmd0aDsgaSA8IGw7IGkrKykgew0KICAgIGlmICh4c1tpXSA9PT0geCkgcmV0dXJuIGk7DQogIH0NCiAgcmV0dXJuIC0xOw0KfQ0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoJ19wcm9jZXNzJykpDQp9LHsiLi9fc3RyZWFtX2R1cGxleCI6NTYwLCJfcHJvY2VzcyI6NTUxLCJidWZmZXIiOjkzLCJjb3JlLXV0aWwtaXMiOjQ4NiwiZXZlbnRzIjo1MjUsImluaGVyaXRzIjo1MzcsImlzYXJyYXkiOjUzOSwicHJvY2Vzcy1uZXh0aWNrLWFyZ3MiOjU1MCwic3RyaW5nX2RlY29kZXIvIjo1ODEsInV0aWwiOjYxfV0sNTYzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCi8vIGEgdHJhbnNmb3JtIHN0cmVhbSBpcyBhIHJlYWRhYmxlL3dyaXRhYmxlIHN0cmVhbSB3aGVyZSB5b3UgZG8NCi8vIHNvbWV0aGluZyB3aXRoIHRoZSBkYXRhLiAgU29tZXRpbWVzIGl0J3MgY2FsbGVkIGEgImZpbHRlciIsDQovLyBidXQgdGhhdCdzIG5vdCBhIGdyZWF0IG5hbWUgZm9yIGl0LCBzaW5jZSB0aGF0IGltcGxpZXMgYSB0aGluZyB3aGVyZQ0KLy8gc29tZSBiaXRzIHBhc3MgdGhyb3VnaCwgYW5kIG90aGVycyBhcmUgc2ltcGx5IGlnbm9yZWQuICAoVGhhdCB3b3VsZA0KLy8gYmUgYSB2YWxpZCBleGFtcGxlIG9mIGEgdHJhbnNmb3JtLCBvZiBjb3Vyc2UuKQ0KLy8NCi8vIFdoaWxlIHRoZSBvdXRwdXQgaXMgY2F1c2FsbHkgcmVsYXRlZCB0byB0aGUgaW5wdXQsIGl0J3Mgbm90IGENCi8vIG5lY2Vzc2FyaWx5IHN5bW1ldHJpYyBvciBzeW5jaHJvbm91cyB0cmFuc2Zvcm1hdGlvbi4gIEZvciBleGFtcGxlLA0KLy8gYSB6bGliIHN0cmVhbSBtaWdodCB0YWtlIG11bHRpcGxlIHBsYWluLXRleHQgd3JpdGVzKCksIGFuZCB0aGVuDQovLyBlbWl0IGEgc2luZ2xlIGNvbXByZXNzZWQgY2h1bmsgc29tZSB0aW1lIGluIHRoZSBmdXR1cmUuDQovLw0KLy8gSGVyZSdzIGhvdyB0aGlzIHdvcmtzOg0KLy8NCi8vIFRoZSBUcmFuc2Zvcm0gc3RyZWFtIGhhcyBhbGwgdGhlIGFzcGVjdHMgb2YgdGhlIHJlYWRhYmxlIGFuZCB3cml0YWJsZQ0KLy8gc3RyZWFtIGNsYXNzZXMuICBXaGVuIHlvdSB3cml0ZShjaHVuayksIHRoYXQgY2FsbHMgX3dyaXRlKGNodW5rLGNiKQ0KLy8gaW50ZXJuYWxseSwgYW5kIHJldHVybnMgZmFsc2UgaWYgdGhlcmUncyBhIGxvdCBvZiBwZW5kaW5nIHdyaXRlcw0KLy8gYnVmZmVyZWQgdXAuICBXaGVuIHlvdSBjYWxsIHJlYWQoKSwgdGhhdCBjYWxscyBfcmVhZChuKSB1bnRpbA0KLy8gdGhlcmUncyBlbm91Z2ggcGVuZGluZyByZWFkYWJsZSBkYXRhIGJ1ZmZlcmVkIHVwLg0KLy8NCi8vIEluIGEgdHJhbnNmb3JtIHN0cmVhbSwgdGhlIHdyaXR0ZW4gZGF0YSBpcyBwbGFjZWQgaW4gYSBidWZmZXIuICBXaGVuDQovLyBfcmVhZChuKSBpcyBjYWxsZWQsIGl0IHRyYW5zZm9ybXMgdGhlIHF1ZXVlZCB1cCBkYXRhLCBjYWxsaW5nIHRoZQ0KLy8gYnVmZmVyZWQgX3dyaXRlIGNiJ3MgYXMgaXQgY29uc3VtZXMgY2h1bmtzLiAgSWYgY29uc3VtaW5nIGEgc2luZ2xlDQovLyB3cml0dGVuIGNodW5rIHdvdWxkIHJlc3VsdCBpbiBtdWx0aXBsZSBvdXRwdXQgY2h1bmtzLCB0aGVuIHRoZSBmaXJzdA0KLy8gb3V0cHV0dGVkIGJpdCBjYWxscyB0aGUgcmVhZGNiLCBhbmQgc3Vic2VxdWVudCBjaHVua3MganVzdCBnbyBpbnRvDQovLyB0aGUgcmVhZCBidWZmZXIsIGFuZCB3aWxsIGNhdXNlIGl0IHRvIGVtaXQgJ3JlYWRhYmxlJyBpZiBuZWNlc3NhcnkuDQovLw0KLy8gVGhpcyB3YXksIGJhY2stcHJlc3N1cmUgaXMgYWN0dWFsbHkgZGV0ZXJtaW5lZCBieSB0aGUgcmVhZGluZyBzaWRlLA0KLy8gc2luY2UgX3JlYWQgaGFzIHRvIGJlIGNhbGxlZCB0byBzdGFydCBwcm9jZXNzaW5nIGEgbmV3IGNodW5rLiAgSG93ZXZlciwNCi8vIGEgcGF0aG9sb2dpY2FsIGluZmxhdGUgdHlwZSBvZiB0cmFuc2Zvcm0gY2FuIGNhdXNlIGV4Y2Vzc2l2ZSBidWZmZXJpbmcNCi8vIGhlcmUuICBGb3IgZXhhbXBsZSwgaW1hZ2luZSBhIHN0cmVhbSB3aGVyZSBldmVyeSBieXRlIG9mIGlucHV0IGlzDQovLyBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyIGZyb20gMC0yNTUsIGFuZCB0aGVuIHJlc3VsdHMgaW4gdGhhdCBtYW55DQovLyBieXRlcyBvZiBvdXRwdXQuICBXcml0aW5nIHRoZSA0IGJ5dGVzIHtmZixmZixmZixmZn0gd291bGQgcmVzdWx0IGluDQovLyAxa2Igb2YgZGF0YSBiZWluZyBvdXRwdXQuICBJbiB0aGlzIGNhc2UsIHlvdSBjb3VsZCB3cml0ZSBhIHZlcnkgc21hbGwNCi8vIGFtb3VudCBvZiBpbnB1dCwgYW5kIGVuZCB1cCB3aXRoIGEgdmVyeSBsYXJnZSBhbW91bnQgb2Ygb3V0cHV0LiAgSW4NCi8vIHN1Y2ggYSBwYXRob2xvZ2ljYWwgaW5mbGF0aW5nIG1lY2hhbmlzbSwgdGhlcmUnZCBiZSBubyB3YXkgdG8gdGVsbA0KLy8gdGhlIHN5c3RlbSB0byBzdG9wIGRvaW5nIHRoZSB0cmFuc2Zvcm0uICBBIHNpbmdsZSA0TUIgd3JpdGUgY291bGQNCi8vIGNhdXNlIHRoZSBzeXN0ZW0gdG8gcnVuIG91dCBvZiBtZW1vcnkuDQovLw0KLy8gSG93ZXZlciwgZXZlbiBpbiBzdWNoIGEgcGF0aG9sb2dpY2FsIGNhc2UsIG9ubHkgYSBzaW5nbGUgd3JpdHRlbiBjaHVuaw0KLy8gd291bGQgYmUgY29uc3VtZWQsIGFuZCB0aGVuIHRoZSByZXN0IHdvdWxkIHdhaXQgKHVuLXRyYW5zZm9ybWVkKSB1bnRpbA0KLy8gdGhlIHJlc3VsdHMgb2YgdGhlIHByZXZpb3VzIHRyYW5zZm9ybWVkIGNodW5rIHdlcmUgY29uc3VtZWQuDQoNCid1c2Ugc3RyaWN0JzsNCg0KbW9kdWxlLmV4cG9ydHMgPSBUcmFuc2Zvcm07DQoNCnZhciBEdXBsZXggPSByZXF1aXJlKCcuL19zdHJlYW1fZHVwbGV4Jyk7DQoNCi8qPHJlcGxhY2VtZW50PiovDQp2YXIgdXRpbCA9IHJlcXVpcmUoJ2NvcmUtdXRpbC1pcycpOw0KdXRpbC5pbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7DQovKjwvcmVwbGFjZW1lbnQ+Ki8NCg0KdXRpbC5pbmhlcml0cyhUcmFuc2Zvcm0sIER1cGxleCk7DQoNCmZ1bmN0aW9uIFRyYW5zZm9ybVN0YXRlKHN0cmVhbSkgew0KICB0aGlzLmFmdGVyVHJhbnNmb3JtID0gZnVuY3Rpb24gKGVyLCBkYXRhKSB7DQogICAgcmV0dXJuIGFmdGVyVHJhbnNmb3JtKHN0cmVhbSwgZXIsIGRhdGEpOw0KICB9Ow0KDQogIHRoaXMubmVlZFRyYW5zZm9ybSA9IGZhbHNlOw0KICB0aGlzLnRyYW5zZm9ybWluZyA9IGZhbHNlOw0KICB0aGlzLndyaXRlY2IgPSBudWxsOw0KICB0aGlzLndyaXRlY2h1bmsgPSBudWxsOw0KICB0aGlzLndyaXRlZW5jb2RpbmcgPSBudWxsOw0KfQ0KDQpmdW5jdGlvbiBhZnRlclRyYW5zZm9ybShzdHJlYW0sIGVyLCBkYXRhKSB7DQogIHZhciB0cyA9IHN0cmVhbS5fdHJhbnNmb3JtU3RhdGU7DQogIHRzLnRyYW5zZm9ybWluZyA9IGZhbHNlOw0KDQogIHZhciBjYiA9IHRzLndyaXRlY2I7DQoNCiAgaWYgKCFjYikgcmV0dXJuIHN0cmVhbS5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcignbm8gd3JpdGVjYiBpbiBUcmFuc2Zvcm0gY2xhc3MnKSk7DQoNCiAgdHMud3JpdGVjaHVuayA9IG51bGw7DQogIHRzLndyaXRlY2IgPSBudWxsOw0KDQogIGlmIChkYXRhICE9PSBudWxsICYmIGRhdGEgIT09IHVuZGVmaW5lZCkgc3RyZWFtLnB1c2goZGF0YSk7DQoNCiAgY2IoZXIpOw0KDQogIHZhciBycyA9IHN0cmVhbS5fcmVhZGFibGVTdGF0ZTsNCiAgcnMucmVhZGluZyA9IGZhbHNlOw0KICBpZiAocnMubmVlZFJlYWRhYmxlIHx8IHJzLmxlbmd0aCA8IHJzLmhpZ2hXYXRlck1hcmspIHsNCiAgICBzdHJlYW0uX3JlYWQocnMuaGlnaFdhdGVyTWFyayk7DQogIH0NCn0NCg0KZnVuY3Rpb24gVHJhbnNmb3JtKG9wdGlvbnMpIHsNCiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFRyYW5zZm9ybSkpIHJldHVybiBuZXcgVHJhbnNmb3JtKG9wdGlvbnMpOw0KDQogIER1cGxleC5jYWxsKHRoaXMsIG9wdGlvbnMpOw0KDQogIHRoaXMuX3RyYW5zZm9ybVN0YXRlID0gbmV3IFRyYW5zZm9ybVN0YXRlKHRoaXMpOw0KDQogIC8vIHdoZW4gdGhlIHdyaXRhYmxlIHNpZGUgZmluaXNoZXMsIHRoZW4gZmx1c2ggb3V0IGFueXRoaW5nIHJlbWFpbmluZy4NCiAgdmFyIHN0cmVhbSA9IHRoaXM7DQoNCiAgLy8gc3RhcnQgb3V0IGFza2luZyBmb3IgYSByZWFkYWJsZSBldmVudCBvbmNlIGRhdGEgaXMgdHJhbnNmb3JtZWQuDQogIHRoaXMuX3JlYWRhYmxlU3RhdGUubmVlZFJlYWRhYmxlID0gdHJ1ZTsNCg0KICAvLyB3ZSBoYXZlIGltcGxlbWVudGVkIHRoZSBfcmVhZCBtZXRob2QsIGFuZCBkb25lIHRoZSBvdGhlciB0aGluZ3MNCiAgLy8gdGhhdCBSZWFkYWJsZSB3YW50cyBiZWZvcmUgdGhlIGZpcnN0IF9yZWFkIGNhbGwsIHNvIHVuc2V0IHRoZQ0KICAvLyBzeW5jIGd1YXJkIGZsYWcuDQogIHRoaXMuX3JlYWRhYmxlU3RhdGUuc3luYyA9IGZhbHNlOw0KDQogIGlmIChvcHRpb25zKSB7DQogICAgaWYgKHR5cGVvZiBvcHRpb25zLnRyYW5zZm9ybSA9PT0gJ2Z1bmN0aW9uJykgdGhpcy5fdHJhbnNmb3JtID0gb3B0aW9ucy50cmFuc2Zvcm07DQoNCiAgICBpZiAodHlwZW9mIG9wdGlvbnMuZmx1c2ggPT09ICdmdW5jdGlvbicpIHRoaXMuX2ZsdXNoID0gb3B0aW9ucy5mbHVzaDsNCiAgfQ0KDQogIHRoaXMub25jZSgncHJlZmluaXNoJywgZnVuY3Rpb24gKCkgew0KICAgIGlmICh0eXBlb2YgdGhpcy5fZmx1c2ggPT09ICdmdW5jdGlvbicpIHRoaXMuX2ZsdXNoKGZ1bmN0aW9uIChlcikgew0KICAgICAgZG9uZShzdHJlYW0sIGVyKTsNCiAgICB9KTtlbHNlIGRvbmUoc3RyZWFtKTsNCiAgfSk7DQp9DQoNClRyYW5zZm9ybS5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uIChjaHVuaywgZW5jb2RpbmcpIHsNCiAgdGhpcy5fdHJhbnNmb3JtU3RhdGUubmVlZFRyYW5zZm9ybSA9IGZhbHNlOw0KICByZXR1cm4gRHVwbGV4LnByb3RvdHlwZS5wdXNoLmNhbGwodGhpcywgY2h1bmssIGVuY29kaW5nKTsNCn07DQoNCi8vIFRoaXMgaXMgdGhlIHBhcnQgd2hlcmUgeW91IGRvIHN0dWZmIQ0KLy8gb3ZlcnJpZGUgdGhpcyBmdW5jdGlvbiBpbiBpbXBsZW1lbnRhdGlvbiBjbGFzc2VzLg0KLy8gJ2NodW5rJyBpcyBhbiBpbnB1dCBjaHVuay4NCi8vDQovLyBDYWxsIGBwdXNoKG5ld0NodW5rKWAgdG8gcGFzcyBhbG9uZyB0cmFuc2Zvcm1lZCBvdXRwdXQNCi8vIHRvIHRoZSByZWFkYWJsZSBzaWRlLiAgWW91IG1heSBjYWxsICdwdXNoJyB6ZXJvIG9yIG1vcmUgdGltZXMuDQovLw0KLy8gQ2FsbCBgY2IoZXJyKWAgd2hlbiB5b3UgYXJlIGRvbmUgd2l0aCB0aGlzIGNodW5rLiAgSWYgeW91IHBhc3MNCi8vIGFuIGVycm9yLCB0aGVuIHRoYXQnbGwgcHV0IHRoZSBodXJ0IG9uIHRoZSB3aG9sZSBvcGVyYXRpb24uICBJZiB5b3UNCi8vIG5ldmVyIGNhbGwgY2IoKSwgdGhlbiB5b3UnbGwgbmV2ZXIgZ2V0IGFub3RoZXIgY2h1bmsuDQpUcmFuc2Zvcm0ucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYikgew0KICB0aHJvdyBuZXcgRXJyb3IoJ25vdCBpbXBsZW1lbnRlZCcpOw0KfTsNCg0KVHJhbnNmb3JtLnByb3RvdHlwZS5fd3JpdGUgPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYikgew0KICB2YXIgdHMgPSB0aGlzLl90cmFuc2Zvcm1TdGF0ZTsNCiAgdHMud3JpdGVjYiA9IGNiOw0KICB0cy53cml0ZWNodW5rID0gY2h1bms7DQogIHRzLndyaXRlZW5jb2RpbmcgPSBlbmNvZGluZzsNCiAgaWYgKCF0cy50cmFuc2Zvcm1pbmcpIHsNCiAgICB2YXIgcnMgPSB0aGlzLl9yZWFkYWJsZVN0YXRlOw0KICAgIGlmICh0cy5uZWVkVHJhbnNmb3JtIHx8IHJzLm5lZWRSZWFkYWJsZSB8fCBycy5sZW5ndGggPCBycy5oaWdoV2F0ZXJNYXJrKSB0aGlzLl9yZWFkKHJzLmhpZ2hXYXRlck1hcmspOw0KICB9DQp9Ow0KDQovLyBEb2Vzbid0IG1hdHRlciB3aGF0IHRoZSBhcmdzIGFyZSBoZXJlLg0KLy8gX3RyYW5zZm9ybSBkb2VzIGFsbCB0aGUgd29yay4NCi8vIFRoYXQgd2UgZ290IGhlcmUgbWVhbnMgdGhhdCB0aGUgcmVhZGFibGUgc2lkZSB3YW50cyBtb3JlIGRhdGEuDQpUcmFuc2Zvcm0ucHJvdG90eXBlLl9yZWFkID0gZnVuY3Rpb24gKG4pIHsNCiAgdmFyIHRzID0gdGhpcy5fdHJhbnNmb3JtU3RhdGU7DQoNCiAgaWYgKHRzLndyaXRlY2h1bmsgIT09IG51bGwgJiYgdHMud3JpdGVjYiAmJiAhdHMudHJhbnNmb3JtaW5nKSB7DQogICAgdHMudHJhbnNmb3JtaW5nID0gdHJ1ZTsNCiAgICB0aGlzLl90cmFuc2Zvcm0odHMud3JpdGVjaHVuaywgdHMud3JpdGVlbmNvZGluZywgdHMuYWZ0ZXJUcmFuc2Zvcm0pOw0KICB9IGVsc2Ugew0KICAgIC8vIG1hcmsgdGhhdCB3ZSBuZWVkIGEgdHJhbnNmb3JtLCBzbyB0aGF0IGFueSBkYXRhIHRoYXQgY29tZXMgaW4NCiAgICAvLyB3aWxsIGdldCBwcm9jZXNzZWQsIG5vdyB0aGF0IHdlJ3ZlIGFza2VkIGZvciBpdC4NCiAgICB0cy5uZWVkVHJhbnNmb3JtID0gdHJ1ZTsNCiAgfQ0KfTsNCg0KZnVuY3Rpb24gZG9uZShzdHJlYW0sIGVyKSB7DQogIGlmIChlcikgcmV0dXJuIHN0cmVhbS5lbWl0KCdlcnJvcicsIGVyKTsNCg0KICAvLyBpZiB0aGVyZSdzIG5vdGhpbmcgaW4gdGhlIHdyaXRlIGJ1ZmZlciwgdGhlbiB0aGF0IG1lYW5zDQogIC8vIHRoYXQgbm90aGluZyBtb3JlIHdpbGwgZXZlciBiZSBwcm92aWRlZA0KICB2YXIgd3MgPSBzdHJlYW0uX3dyaXRhYmxlU3RhdGU7DQogIHZhciB0cyA9IHN0cmVhbS5fdHJhbnNmb3JtU3RhdGU7DQoNCiAgaWYgKHdzLmxlbmd0aCkgdGhyb3cgbmV3IEVycm9yKCdjYWxsaW5nIHRyYW5zZm9ybSBkb25lIHdoZW4gd3MubGVuZ3RoICE9IDAnKTsNCg0KICBpZiAodHMudHJhbnNmb3JtaW5nKSB0aHJvdyBuZXcgRXJyb3IoJ2NhbGxpbmcgdHJhbnNmb3JtIGRvbmUgd2hlbiBzdGlsbCB0cmFuc2Zvcm1pbmcnKTsNCg0KICByZXR1cm4gc3RyZWFtLnB1c2gobnVsbCk7DQp9DQp9LHsiLi9fc3RyZWFtX2R1cGxleCI6NTYwLCJjb3JlLXV0aWwtaXMiOjQ4NiwiaW5oZXJpdHMiOjUzN31dLDU2NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKHByb2Nlc3Mpew0KLy8gQSBiaXQgc2ltcGxlciB0aGFuIHJlYWRhYmxlIHN0cmVhbXMuDQovLyBJbXBsZW1lbnQgYW4gYXN5bmMgLl93cml0ZShjaHVuaywgZW5jb2RpbmcsIGNiKSwgYW5kIGl0J2xsIGhhbmRsZSBhbGwNCi8vIHRoZSBkcmFpbiBldmVudCBlbWlzc2lvbiBhbmQgYnVmZmVyaW5nLg0KDQondXNlIHN0cmljdCc7DQoNCm1vZHVsZS5leHBvcnRzID0gV3JpdGFibGU7DQoNCi8qPHJlcGxhY2VtZW50PiovDQp2YXIgcHJvY2Vzc05leHRUaWNrID0gcmVxdWlyZSgncHJvY2Vzcy1uZXh0aWNrLWFyZ3MnKTsNCi8qPC9yZXBsYWNlbWVudD4qLw0KDQovKjxyZXBsYWNlbWVudD4qLw0KdmFyIGFzeW5jV3JpdGUgPSAhcHJvY2Vzcy5icm93c2VyICYmIFsndjAuMTAnLCAndjAuOS4nXS5pbmRleE9mKHByb2Nlc3MudmVyc2lvbi5zbGljZSgwLCA1KSkgPiAtMSA/IHNldEltbWVkaWF0ZSA6IHByb2Nlc3NOZXh0VGljazsNCi8qPC9yZXBsYWNlbWVudD4qLw0KDQovKjxyZXBsYWNlbWVudD4qLw0KdmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ2J1ZmZlcicpLkJ1ZmZlcjsNCi8qPC9yZXBsYWNlbWVudD4qLw0KDQpXcml0YWJsZS5Xcml0YWJsZVN0YXRlID0gV3JpdGFibGVTdGF0ZTsNCg0KLyo8cmVwbGFjZW1lbnQ+Ki8NCnZhciB1dGlsID0gcmVxdWlyZSgnY29yZS11dGlsLWlzJyk7DQp1dGlsLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTsNCi8qPC9yZXBsYWNlbWVudD4qLw0KDQovKjxyZXBsYWNlbWVudD4qLw0KdmFyIGludGVybmFsVXRpbCA9IHsNCiAgZGVwcmVjYXRlOiByZXF1aXJlKCd1dGlsLWRlcHJlY2F0ZScpDQp9Ow0KLyo8L3JlcGxhY2VtZW50PiovDQoNCi8qPHJlcGxhY2VtZW50PiovDQp2YXIgU3RyZWFtOw0KKGZ1bmN0aW9uICgpIHsNCiAgdHJ5IHsNCiAgICBTdHJlYW0gPSByZXF1aXJlKCdzdCcgKyAncmVhbScpOw0KICB9IGNhdGNoIChfKSB7fSBmaW5hbGx5IHsNCiAgICBpZiAoIVN0cmVhbSkgU3RyZWFtID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyOw0KICB9DQp9KSgpOw0KLyo8L3JlcGxhY2VtZW50PiovDQoNCnZhciBCdWZmZXIgPSByZXF1aXJlKCdidWZmZXInKS5CdWZmZXI7DQoNCnV0aWwuaW5oZXJpdHMoV3JpdGFibGUsIFN0cmVhbSk7DQoNCmZ1bmN0aW9uIG5vcCgpIHt9DQoNCmZ1bmN0aW9uIFdyaXRlUmVxKGNodW5rLCBlbmNvZGluZywgY2IpIHsNCiAgdGhpcy5jaHVuayA9IGNodW5rOw0KICB0aGlzLmVuY29kaW5nID0gZW5jb2Rpbmc7DQogIHRoaXMuY2FsbGJhY2sgPSBjYjsNCiAgdGhpcy5uZXh0ID0gbnVsbDsNCn0NCg0KdmFyIER1cGxleDsNCmZ1bmN0aW9uIFdyaXRhYmxlU3RhdGUob3B0aW9ucywgc3RyZWFtKSB7DQogIER1cGxleCA9IER1cGxleCB8fCByZXF1aXJlKCcuL19zdHJlYW1fZHVwbGV4Jyk7DQoNCiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307DQoNCiAgLy8gb2JqZWN0IHN0cmVhbSBmbGFnIHRvIGluZGljYXRlIHdoZXRoZXIgb3Igbm90IHRoaXMgc3RyZWFtDQogIC8vIGNvbnRhaW5zIGJ1ZmZlcnMgb3Igb2JqZWN0cy4NCiAgdGhpcy5vYmplY3RNb2RlID0gISFvcHRpb25zLm9iamVjdE1vZGU7DQoNCiAgaWYgKHN0cmVhbSBpbnN0YW5jZW9mIER1cGxleCkgdGhpcy5vYmplY3RNb2RlID0gdGhpcy5vYmplY3RNb2RlIHx8ICEhb3B0aW9ucy53cml0YWJsZU9iamVjdE1vZGU7DQoNCiAgLy8gdGhlIHBvaW50IGF0IHdoaWNoIHdyaXRlKCkgc3RhcnRzIHJldHVybmluZyBmYWxzZQ0KICAvLyBOb3RlOiAwIGlzIGEgdmFsaWQgdmFsdWUsIG1lYW5zIHRoYXQgd2UgYWx3YXlzIHJldHVybiBmYWxzZSBpZg0KICAvLyB0aGUgZW50aXJlIGJ1ZmZlciBpcyBub3QgZmx1c2hlZCBpbW1lZGlhdGVseSBvbiB3cml0ZSgpDQogIHZhciBod20gPSBvcHRpb25zLmhpZ2hXYXRlck1hcms7DQogIHZhciBkZWZhdWx0SHdtID0gdGhpcy5vYmplY3RNb2RlID8gMTYgOiAxNiAqIDEwMjQ7DQogIHRoaXMuaGlnaFdhdGVyTWFyayA9IGh3bSB8fCBod20gPT09IDAgPyBod20gOiBkZWZhdWx0SHdtOw0KDQogIC8vIGNhc3QgdG8gaW50cy4NCiAgdGhpcy5oaWdoV2F0ZXJNYXJrID0gfiB+dGhpcy5oaWdoV2F0ZXJNYXJrOw0KDQogIHRoaXMubmVlZERyYWluID0gZmFsc2U7DQogIC8vIGF0IHRoZSBzdGFydCBvZiBjYWxsaW5nIGVuZCgpDQogIHRoaXMuZW5kaW5nID0gZmFsc2U7DQogIC8vIHdoZW4gZW5kKCkgaGFzIGJlZW4gY2FsbGVkLCBhbmQgcmV0dXJuZWQNCiAgdGhpcy5lbmRlZCA9IGZhbHNlOw0KICAvLyB3aGVuICdmaW5pc2gnIGlzIGVtaXR0ZWQNCiAgdGhpcy5maW5pc2hlZCA9IGZhbHNlOw0KDQogIC8vIHNob3VsZCB3ZSBkZWNvZGUgc3RyaW5ncyBpbnRvIGJ1ZmZlcnMgYmVmb3JlIHBhc3NpbmcgdG8gX3dyaXRlPw0KICAvLyB0aGlzIGlzIGhlcmUgc28gdGhhdCBzb21lIG5vZGUtY29yZSBzdHJlYW1zIGNhbiBvcHRpbWl6ZSBzdHJpbmcNCiAgLy8gaGFuZGxpbmcgYXQgYSBsb3dlciBsZXZlbC4NCiAgdmFyIG5vRGVjb2RlID0gb3B0aW9ucy5kZWNvZGVTdHJpbmdzID09PSBmYWxzZTsNCiAgdGhpcy5kZWNvZGVTdHJpbmdzID0gIW5vRGVjb2RlOw0KDQogIC8vIENyeXB0byBpcyBraW5kIG9mIG9sZCBhbmQgY3J1c3R5LiAgSGlzdG9yaWNhbGx5LCBpdHMgZGVmYXVsdCBzdHJpbmcNCiAgLy8gZW5jb2RpbmcgaXMgJ2JpbmFyeScgc28gd2UgaGF2ZSB0byBtYWtlIHRoaXMgY29uZmlndXJhYmxlLg0KICAvLyBFdmVyeXRoaW5nIGVsc2UgaW4gdGhlIHVuaXZlcnNlIHVzZXMgJ3V0ZjgnLCB0aG91Z2guDQogIHRoaXMuZGVmYXVsdEVuY29kaW5nID0gb3B0aW9ucy5kZWZhdWx0RW5jb2RpbmcgfHwgJ3V0ZjgnOw0KDQogIC8vIG5vdCBhbiBhY3R1YWwgYnVmZmVyIHdlIGtlZXAgdHJhY2sgb2YsIGJ1dCBhIG1lYXN1cmVtZW50DQogIC8vIG9mIGhvdyBtdWNoIHdlJ3JlIHdhaXRpbmcgdG8gZ2V0IHB1c2hlZCB0byBzb21lIHVuZGVybHlpbmcNCiAgLy8gc29ja2V0IG9yIGZpbGUuDQogIHRoaXMubGVuZ3RoID0gMDsNCg0KICAvLyBhIGZsYWcgdG8gc2VlIHdoZW4gd2UncmUgaW4gdGhlIG1pZGRsZSBvZiBhIHdyaXRlLg0KICB0aGlzLndyaXRpbmcgPSBmYWxzZTsNCg0KICAvLyB3aGVuIHRydWUgYWxsIHdyaXRlcyB3aWxsIGJlIGJ1ZmZlcmVkIHVudGlsIC51bmNvcmsoKSBjYWxsDQogIHRoaXMuY29ya2VkID0gMDsNCg0KICAvLyBhIGZsYWcgdG8gYmUgYWJsZSB0byB0ZWxsIGlmIHRoZSBvbndyaXRlIGNiIGlzIGNhbGxlZCBpbW1lZGlhdGVseSwNCiAgLy8gb3Igb24gYSBsYXRlciB0aWNrLiAgV2Ugc2V0IHRoaXMgdG8gdHJ1ZSBhdCBmaXJzdCwgYmVjYXVzZSBhbnkNCiAgLy8gYWN0aW9ucyB0aGF0IHNob3VsZG4ndCBoYXBwZW4gdW50aWwgImxhdGVyIiBzaG91bGQgZ2VuZXJhbGx5IGFsc28NCiAgLy8gbm90IGhhcHBlbiBiZWZvcmUgdGhlIGZpcnN0IHdyaXRlIGNhbGwuDQogIHRoaXMuc3luYyA9IHRydWU7DQoNCiAgLy8gYSBmbGFnIHRvIGtub3cgaWYgd2UncmUgcHJvY2Vzc2luZyBwcmV2aW91c2x5IGJ1ZmZlcmVkIGl0ZW1zLCB3aGljaA0KICAvLyBtYXkgY2FsbCB0aGUgX3dyaXRlKCkgY2FsbGJhY2sgaW4gdGhlIHNhbWUgdGljaywgc28gdGhhdCB3ZSBkb24ndA0KICAvLyBlbmQgdXAgaW4gYW4gb3ZlcmxhcHBlZCBvbndyaXRlIHNpdHVhdGlvbi4NCiAgdGhpcy5idWZmZXJQcm9jZXNzaW5nID0gZmFsc2U7DQoNCiAgLy8gdGhlIGNhbGxiYWNrIHRoYXQncyBwYXNzZWQgdG8gX3dyaXRlKGNodW5rLGNiKQ0KICB0aGlzLm9ud3JpdGUgPSBmdW5jdGlvbiAoZXIpIHsNCiAgICBvbndyaXRlKHN0cmVhbSwgZXIpOw0KICB9Ow0KDQogIC8vIHRoZSBjYWxsYmFjayB0aGF0IHRoZSB1c2VyIHN1cHBsaWVzIHRvIHdyaXRlKGNodW5rLGVuY29kaW5nLGNiKQ0KICB0aGlzLndyaXRlY2IgPSBudWxsOw0KDQogIC8vIHRoZSBhbW91bnQgdGhhdCBpcyBiZWluZyB3cml0dGVuIHdoZW4gX3dyaXRlIGlzIGNhbGxlZC4NCiAgdGhpcy53cml0ZWxlbiA9IDA7DQoNCiAgdGhpcy5idWZmZXJlZFJlcXVlc3QgPSBudWxsOw0KICB0aGlzLmxhc3RCdWZmZXJlZFJlcXVlc3QgPSBudWxsOw0KDQogIC8vIG51bWJlciBvZiBwZW5kaW5nIHVzZXItc3VwcGxpZWQgd3JpdGUgY2FsbGJhY2tzDQogIC8vIHRoaXMgbXVzdCBiZSAwIGJlZm9yZSAnZmluaXNoJyBjYW4gYmUgZW1pdHRlZA0KICB0aGlzLnBlbmRpbmdjYiA9IDA7DQoNCiAgLy8gZW1pdCBwcmVmaW5pc2ggaWYgdGhlIG9ubHkgdGhpbmcgd2UncmUgd2FpdGluZyBmb3IgaXMgX3dyaXRlIGNicw0KICAvLyBUaGlzIGlzIHJlbGV2YW50IGZvciBzeW5jaHJvbm91cyBUcmFuc2Zvcm0gc3RyZWFtcw0KICB0aGlzLnByZWZpbmlzaGVkID0gZmFsc2U7DQoNCiAgLy8gVHJ1ZSBpZiB0aGUgZXJyb3Igd2FzIGFscmVhZHkgZW1pdHRlZCBhbmQgc2hvdWxkIG5vdCBiZSB0aHJvd24gYWdhaW4NCiAgdGhpcy5lcnJvckVtaXR0ZWQgPSBmYWxzZTsNCg0KICAvLyBjb3VudCBidWZmZXJlZCByZXF1ZXN0cw0KICB0aGlzLmJ1ZmZlcmVkUmVxdWVzdENvdW50ID0gMDsNCg0KICAvLyBjcmVhdGUgdGhlIHR3byBvYmplY3RzIG5lZWRlZCB0byBzdG9yZSB0aGUgY29ya2VkIHJlcXVlc3RzDQogIC8vIHRoZXkgYXJlIG5vdCBhIGxpbmtlZCBsaXN0LCBhcyBubyBuZXcgZWxlbWVudHMgYXJlIGluc2VydGVkIGluIHRoZXJlDQogIHRoaXMuY29ya2VkUmVxdWVzdHNGcmVlID0gbmV3IENvcmtlZFJlcXVlc3QodGhpcyk7DQogIHRoaXMuY29ya2VkUmVxdWVzdHNGcmVlLm5leHQgPSBuZXcgQ29ya2VkUmVxdWVzdCh0aGlzKTsNCn0NCg0KV3JpdGFibGVTdGF0ZS5wcm90b3R5cGUuZ2V0QnVmZmVyID0gZnVuY3Rpb24gd3JpdGFibGVTdGF0ZUdldEJ1ZmZlcigpIHsNCiAgdmFyIGN1cnJlbnQgPSB0aGlzLmJ1ZmZlcmVkUmVxdWVzdDsNCiAgdmFyIG91dCA9IFtdOw0KICB3aGlsZSAoY3VycmVudCkgew0KICAgIG91dC5wdXNoKGN1cnJlbnQpOw0KICAgIGN1cnJlbnQgPSBjdXJyZW50Lm5leHQ7DQogIH0NCiAgcmV0dXJuIG91dDsNCn07DQoNCihmdW5jdGlvbiAoKSB7DQogIHRyeSB7DQogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFdyaXRhYmxlU3RhdGUucHJvdG90eXBlLCAnYnVmZmVyJywgew0KICAgICAgZ2V0OiBpbnRlcm5hbFV0aWwuZGVwcmVjYXRlKGZ1bmN0aW9uICgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QnVmZmVyKCk7DQogICAgICB9LCAnX3dyaXRhYmxlU3RhdGUuYnVmZmVyIGlzIGRlcHJlY2F0ZWQuIFVzZSBfd3JpdGFibGVTdGF0ZS5nZXRCdWZmZXIgJyArICdpbnN0ZWFkLicpDQogICAgfSk7DQogIH0gY2F0Y2ggKF8pIHt9DQp9KSgpOw0KDQp2YXIgRHVwbGV4Ow0KZnVuY3Rpb24gV3JpdGFibGUob3B0aW9ucykgew0KICBEdXBsZXggPSBEdXBsZXggfHwgcmVxdWlyZSgnLi9fc3RyZWFtX2R1cGxleCcpOw0KDQogIC8vIFdyaXRhYmxlIGN0b3IgaXMgYXBwbGllZCB0byBEdXBsZXhlcywgdGhvdWdoIHRoZXkncmUgbm90DQogIC8vIGluc3RhbmNlb2YgV3JpdGFibGUsIHRoZXkncmUgaW5zdGFuY2VvZiBSZWFkYWJsZS4NCiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFdyaXRhYmxlKSAmJiAhKHRoaXMgaW5zdGFuY2VvZiBEdXBsZXgpKSByZXR1cm4gbmV3IFdyaXRhYmxlKG9wdGlvbnMpOw0KDQogIHRoaXMuX3dyaXRhYmxlU3RhdGUgPSBuZXcgV3JpdGFibGVTdGF0ZShvcHRpb25zLCB0aGlzKTsNCg0KICAvLyBsZWdhY3kuDQogIHRoaXMud3JpdGFibGUgPSB0cnVlOw0KDQogIGlmIChvcHRpb25zKSB7DQogICAgaWYgKHR5cGVvZiBvcHRpb25zLndyaXRlID09PSAnZnVuY3Rpb24nKSB0aGlzLl93cml0ZSA9IG9wdGlvbnMud3JpdGU7DQoNCiAgICBpZiAodHlwZW9mIG9wdGlvbnMud3JpdGV2ID09PSAnZnVuY3Rpb24nKSB0aGlzLl93cml0ZXYgPSBvcHRpb25zLndyaXRldjsNCiAgfQ0KDQogIFN0cmVhbS5jYWxsKHRoaXMpOw0KfQ0KDQovLyBPdGhlcndpc2UgcGVvcGxlIGNhbiBwaXBlIFdyaXRhYmxlIHN0cmVhbXMsIHdoaWNoIGlzIGp1c3Qgd3JvbmcuDQpXcml0YWJsZS5wcm90b3R5cGUucGlwZSA9IGZ1bmN0aW9uICgpIHsNCiAgdGhpcy5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcignQ2Fubm90IHBpcGUuIE5vdCByZWFkYWJsZS4nKSk7DQp9Ow0KDQpmdW5jdGlvbiB3cml0ZUFmdGVyRW5kKHN0cmVhbSwgY2IpIHsNCiAgdmFyIGVyID0gbmV3IEVycm9yKCd3cml0ZSBhZnRlciBlbmQnKTsNCiAgLy8gVE9ETzogZGVmZXIgZXJyb3IgZXZlbnRzIGNvbnNpc3RlbnRseSBldmVyeXdoZXJlLCBub3QganVzdCB0aGUgY2INCiAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXIpOw0KICBwcm9jZXNzTmV4dFRpY2soY2IsIGVyKTsNCn0NCg0KLy8gSWYgd2UgZ2V0IHNvbWV0aGluZyB0aGF0IGlzIG5vdCBhIGJ1ZmZlciwgc3RyaW5nLCBudWxsLCBvciB1bmRlZmluZWQsDQovLyBhbmQgd2UncmUgbm90IGluIG9iamVjdE1vZGUsIHRoZW4gdGhhdCdzIGFuIGVycm9yLg0KLy8gT3RoZXJ3aXNlIHN0cmVhbSBjaHVua3MgYXJlIGFsbCBjb25zaWRlcmVkIHRvIGJlIG9mIGxlbmd0aD0xLCBhbmQgdGhlDQovLyB3YXRlcm1hcmtzIGRldGVybWluZSBob3cgbWFueSBvYmplY3RzIHRvIGtlZXAgaW4gdGhlIGJ1ZmZlciwgcmF0aGVyIHRoYW4NCi8vIGhvdyBtYW55IGJ5dGVzIG9yIGNoYXJhY3RlcnMuDQpmdW5jdGlvbiB2YWxpZENodW5rKHN0cmVhbSwgc3RhdGUsIGNodW5rLCBjYikgew0KICB2YXIgdmFsaWQgPSB0cnVlOw0KDQogIGlmICghQnVmZmVyLmlzQnVmZmVyKGNodW5rKSAmJiB0eXBlb2YgY2h1bmsgIT09ICdzdHJpbmcnICYmIGNodW5rICE9PSBudWxsICYmIGNodW5rICE9PSB1bmRlZmluZWQgJiYgIXN0YXRlLm9iamVjdE1vZGUpIHsNCiAgICB2YXIgZXIgPSBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIG5vbi1zdHJpbmcvYnVmZmVyIGNodW5rJyk7DQogICAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXIpOw0KICAgIHByb2Nlc3NOZXh0VGljayhjYiwgZXIpOw0KICAgIHZhbGlkID0gZmFsc2U7DQogIH0NCiAgcmV0dXJuIHZhbGlkOw0KfQ0KDQpXcml0YWJsZS5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYikgew0KICB2YXIgc3RhdGUgPSB0aGlzLl93cml0YWJsZVN0YXRlOw0KICB2YXIgcmV0ID0gZmFsc2U7DQoNCiAgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ2Z1bmN0aW9uJykgew0KICAgIGNiID0gZW5jb2Rpbmc7DQogICAgZW5jb2RpbmcgPSBudWxsOw0KICB9DQoNCiAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihjaHVuaykpIGVuY29kaW5nID0gJ2J1ZmZlcic7ZWxzZSBpZiAoIWVuY29kaW5nKSBlbmNvZGluZyA9IHN0YXRlLmRlZmF1bHRFbmNvZGluZzsNCg0KICBpZiAodHlwZW9mIGNiICE9PSAnZnVuY3Rpb24nKSBjYiA9IG5vcDsNCg0KICBpZiAoc3RhdGUuZW5kZWQpIHdyaXRlQWZ0ZXJFbmQodGhpcywgY2IpO2Vsc2UgaWYgKHZhbGlkQ2h1bmsodGhpcywgc3RhdGUsIGNodW5rLCBjYikpIHsNCiAgICBzdGF0ZS5wZW5kaW5nY2IrKzsNCiAgICByZXQgPSB3cml0ZU9yQnVmZmVyKHRoaXMsIHN0YXRlLCBjaHVuaywgZW5jb2RpbmcsIGNiKTsNCiAgfQ0KDQogIHJldHVybiByZXQ7DQp9Ow0KDQpXcml0YWJsZS5wcm90b3R5cGUuY29yayA9IGZ1bmN0aW9uICgpIHsNCiAgdmFyIHN0YXRlID0gdGhpcy5fd3JpdGFibGVTdGF0ZTsNCg0KICBzdGF0ZS5jb3JrZWQrKzsNCn07DQoNCldyaXRhYmxlLnByb3RvdHlwZS51bmNvcmsgPSBmdW5jdGlvbiAoKSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX3dyaXRhYmxlU3RhdGU7DQoNCiAgaWYgKHN0YXRlLmNvcmtlZCkgew0KICAgIHN0YXRlLmNvcmtlZC0tOw0KDQogICAgaWYgKCFzdGF0ZS53cml0aW5nICYmICFzdGF0ZS5jb3JrZWQgJiYgIXN0YXRlLmZpbmlzaGVkICYmICFzdGF0ZS5idWZmZXJQcm9jZXNzaW5nICYmIHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdCkgY2xlYXJCdWZmZXIodGhpcywgc3RhdGUpOw0KICB9DQp9Ow0KDQpXcml0YWJsZS5wcm90b3R5cGUuc2V0RGVmYXVsdEVuY29kaW5nID0gZnVuY3Rpb24gc2V0RGVmYXVsdEVuY29kaW5nKGVuY29kaW5nKSB7DQogIC8vIG5vZGU6OlBhcnNlRW5jb2RpbmcoKSByZXF1aXJlcyBsb3dlciBjYXNlLg0KICBpZiAodHlwZW9mIGVuY29kaW5nID09PSAnc3RyaW5nJykgZW5jb2RpbmcgPSBlbmNvZGluZy50b0xvd2VyQ2FzZSgpOw0KICBpZiAoIShbJ2hleCcsICd1dGY4JywgJ3V0Zi04JywgJ2FzY2lpJywgJ2JpbmFyeScsICdiYXNlNjQnLCAndWNzMicsICd1Y3MtMicsICd1dGYxNmxlJywgJ3V0Zi0xNmxlJywgJ3JhdyddLmluZGV4T2YoKGVuY29kaW5nICsgJycpLnRvTG93ZXJDYXNlKCkpID4gLTEpKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdVbmtub3duIGVuY29kaW5nOiAnICsgZW5jb2RpbmcpOw0KICB0aGlzLl93cml0YWJsZVN0YXRlLmRlZmF1bHRFbmNvZGluZyA9IGVuY29kaW5nOw0KfTsNCg0KZnVuY3Rpb24gZGVjb2RlQ2h1bmsoc3RhdGUsIGNodW5rLCBlbmNvZGluZykgew0KICBpZiAoIXN0YXRlLm9iamVjdE1vZGUgJiYgc3RhdGUuZGVjb2RlU3RyaW5ncyAhPT0gZmFsc2UgJiYgdHlwZW9mIGNodW5rID09PSAnc3RyaW5nJykgew0KICAgIGNodW5rID0gbmV3IEJ1ZmZlcihjaHVuaywgZW5jb2RpbmcpOw0KICB9DQogIHJldHVybiBjaHVuazsNCn0NCg0KLy8gaWYgd2UncmUgYWxyZWFkeSB3cml0aW5nIHNvbWV0aGluZywgdGhlbiBqdXN0IHB1dCB0aGlzDQovLyBpbiB0aGUgcXVldWUsIGFuZCB3YWl0IG91ciB0dXJuLiAgT3RoZXJ3aXNlLCBjYWxsIF93cml0ZQ0KLy8gSWYgd2UgcmV0dXJuIGZhbHNlLCB0aGVuIHdlIG5lZWQgYSBkcmFpbiBldmVudCwgc28gc2V0IHRoYXQgZmxhZy4NCmZ1bmN0aW9uIHdyaXRlT3JCdWZmZXIoc3RyZWFtLCBzdGF0ZSwgY2h1bmssIGVuY29kaW5nLCBjYikgew0KICBjaHVuayA9IGRlY29kZUNodW5rKHN0YXRlLCBjaHVuaywgZW5jb2RpbmcpOw0KDQogIGlmIChCdWZmZXIuaXNCdWZmZXIoY2h1bmspKSBlbmNvZGluZyA9ICdidWZmZXInOw0KICB2YXIgbGVuID0gc3RhdGUub2JqZWN0TW9kZSA/IDEgOiBjaHVuay5sZW5ndGg7DQoNCiAgc3RhdGUubGVuZ3RoICs9IGxlbjsNCg0KICB2YXIgcmV0ID0gc3RhdGUubGVuZ3RoIDwgc3RhdGUuaGlnaFdhdGVyTWFyazsNCiAgLy8gd2UgbXVzdCBlbnN1cmUgdGhhdCBwcmV2aW91cyBuZWVkRHJhaW4gd2lsbCBub3QgYmUgcmVzZXQgdG8gZmFsc2UuDQogIGlmICghcmV0KSBzdGF0ZS5uZWVkRHJhaW4gPSB0cnVlOw0KDQogIGlmIChzdGF0ZS53cml0aW5nIHx8IHN0YXRlLmNvcmtlZCkgew0KICAgIHZhciBsYXN0ID0gc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdDsNCiAgICBzdGF0ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0ID0gbmV3IFdyaXRlUmVxKGNodW5rLCBlbmNvZGluZywgY2IpOw0KICAgIGlmIChsYXN0KSB7DQogICAgICBsYXN0Lm5leHQgPSBzdGF0ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0Ow0KICAgIH0gZWxzZSB7DQogICAgICBzdGF0ZS5idWZmZXJlZFJlcXVlc3QgPSBzdGF0ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0Ow0KICAgIH0NCiAgICBzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudCArPSAxOw0KICB9IGVsc2Ugew0KICAgIGRvV3JpdGUoc3RyZWFtLCBzdGF0ZSwgZmFsc2UsIGxlbiwgY2h1bmssIGVuY29kaW5nLCBjYik7DQogIH0NCg0KICByZXR1cm4gcmV0Ow0KfQ0KDQpmdW5jdGlvbiBkb1dyaXRlKHN0cmVhbSwgc3RhdGUsIHdyaXRldiwgbGVuLCBjaHVuaywgZW5jb2RpbmcsIGNiKSB7DQogIHN0YXRlLndyaXRlbGVuID0gbGVuOw0KICBzdGF0ZS53cml0ZWNiID0gY2I7DQogIHN0YXRlLndyaXRpbmcgPSB0cnVlOw0KICBzdGF0ZS5zeW5jID0gdHJ1ZTsNCiAgaWYgKHdyaXRldikgc3RyZWFtLl93cml0ZXYoY2h1bmssIHN0YXRlLm9ud3JpdGUpO2Vsc2Ugc3RyZWFtLl93cml0ZShjaHVuaywgZW5jb2RpbmcsIHN0YXRlLm9ud3JpdGUpOw0KICBzdGF0ZS5zeW5jID0gZmFsc2U7DQp9DQoNCmZ1bmN0aW9uIG9ud3JpdGVFcnJvcihzdHJlYW0sIHN0YXRlLCBzeW5jLCBlciwgY2IpIHsNCiAgLS1zdGF0ZS5wZW5kaW5nY2I7DQogIGlmIChzeW5jKSBwcm9jZXNzTmV4dFRpY2soY2IsIGVyKTtlbHNlIGNiKGVyKTsNCg0KICBzdHJlYW0uX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkID0gdHJ1ZTsNCiAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXIpOw0KfQ0KDQpmdW5jdGlvbiBvbndyaXRlU3RhdGVVcGRhdGUoc3RhdGUpIHsNCiAgc3RhdGUud3JpdGluZyA9IGZhbHNlOw0KICBzdGF0ZS53cml0ZWNiID0gbnVsbDsNCiAgc3RhdGUubGVuZ3RoIC09IHN0YXRlLndyaXRlbGVuOw0KICBzdGF0ZS53cml0ZWxlbiA9IDA7DQp9DQoNCmZ1bmN0aW9uIG9ud3JpdGUoc3RyZWFtLCBlcikgew0KICB2YXIgc3RhdGUgPSBzdHJlYW0uX3dyaXRhYmxlU3RhdGU7DQogIHZhciBzeW5jID0gc3RhdGUuc3luYzsNCiAgdmFyIGNiID0gc3RhdGUud3JpdGVjYjsNCg0KICBvbndyaXRlU3RhdGVVcGRhdGUoc3RhdGUpOw0KDQogIGlmIChlcikgb253cml0ZUVycm9yKHN0cmVhbSwgc3RhdGUsIHN5bmMsIGVyLCBjYik7ZWxzZSB7DQogICAgLy8gQ2hlY2sgaWYgd2UncmUgYWN0dWFsbHkgcmVhZHkgdG8gZmluaXNoLCBidXQgZG9uJ3QgZW1pdCB5ZXQNCiAgICB2YXIgZmluaXNoZWQgPSBuZWVkRmluaXNoKHN0YXRlKTsNCg0KICAgIGlmICghZmluaXNoZWQgJiYgIXN0YXRlLmNvcmtlZCAmJiAhc3RhdGUuYnVmZmVyUHJvY2Vzc2luZyAmJiBzdGF0ZS5idWZmZXJlZFJlcXVlc3QpIHsNCiAgICAgIGNsZWFyQnVmZmVyKHN0cmVhbSwgc3RhdGUpOw0KICAgIH0NCg0KICAgIGlmIChzeW5jKSB7DQogICAgICAvKjxyZXBsYWNlbWVudD4qLw0KICAgICAgYXN5bmNXcml0ZShhZnRlcldyaXRlLCBzdHJlYW0sIHN0YXRlLCBmaW5pc2hlZCwgY2IpOw0KICAgICAgLyo8L3JlcGxhY2VtZW50PiovDQogICAgfSBlbHNlIHsNCiAgICAgICAgYWZ0ZXJXcml0ZShzdHJlYW0sIHN0YXRlLCBmaW5pc2hlZCwgY2IpOw0KICAgICAgfQ0KICB9DQp9DQoNCmZ1bmN0aW9uIGFmdGVyV3JpdGUoc3RyZWFtLCBzdGF0ZSwgZmluaXNoZWQsIGNiKSB7DQogIGlmICghZmluaXNoZWQpIG9ud3JpdGVEcmFpbihzdHJlYW0sIHN0YXRlKTsNCiAgc3RhdGUucGVuZGluZ2NiLS07DQogIGNiKCk7DQogIGZpbmlzaE1heWJlKHN0cmVhbSwgc3RhdGUpOw0KfQ0KDQovLyBNdXN0IGZvcmNlIGNhbGxiYWNrIHRvIGJlIGNhbGxlZCBvbiBuZXh0VGljaywgc28gdGhhdCB3ZSBkb24ndA0KLy8gZW1pdCAnZHJhaW4nIGJlZm9yZSB0aGUgd3JpdGUoKSBjb25zdW1lciBnZXRzIHRoZSAnZmFsc2UnIHJldHVybg0KLy8gdmFsdWUsIGFuZCBoYXMgYSBjaGFuY2UgdG8gYXR0YWNoIGEgJ2RyYWluJyBsaXN0ZW5lci4NCmZ1bmN0aW9uIG9ud3JpdGVEcmFpbihzdHJlYW0sIHN0YXRlKSB7DQogIGlmIChzdGF0ZS5sZW5ndGggPT09IDAgJiYgc3RhdGUubmVlZERyYWluKSB7DQogICAgc3RhdGUubmVlZERyYWluID0gZmFsc2U7DQogICAgc3RyZWFtLmVtaXQoJ2RyYWluJyk7DQogIH0NCn0NCg0KLy8gaWYgdGhlcmUncyBzb21ldGhpbmcgaW4gdGhlIGJ1ZmZlciB3YWl0aW5nLCB0aGVuIHByb2Nlc3MgaXQNCmZ1bmN0aW9uIGNsZWFyQnVmZmVyKHN0cmVhbSwgc3RhdGUpIHsNCiAgc3RhdGUuYnVmZmVyUHJvY2Vzc2luZyA9IHRydWU7DQogIHZhciBlbnRyeSA9IHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdDsNCg0KICBpZiAoc3RyZWFtLl93cml0ZXYgJiYgZW50cnkgJiYgZW50cnkubmV4dCkgew0KICAgIC8vIEZhc3QgY2FzZSwgd3JpdGUgZXZlcnl0aGluZyB1c2luZyBfd3JpdGV2KCkNCiAgICB2YXIgbCA9IHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdENvdW50Ow0KICAgIHZhciBidWZmZXIgPSBuZXcgQXJyYXkobCk7DQogICAgdmFyIGhvbGRlciA9IHN0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZTsNCiAgICBob2xkZXIuZW50cnkgPSBlbnRyeTsNCg0KICAgIHZhciBjb3VudCA9IDA7DQogICAgd2hpbGUgKGVudHJ5KSB7DQogICAgICBidWZmZXJbY291bnRdID0gZW50cnk7DQogICAgICBlbnRyeSA9IGVudHJ5Lm5leHQ7DQogICAgICBjb3VudCArPSAxOw0KICAgIH0NCg0KICAgIGRvV3JpdGUoc3RyZWFtLCBzdGF0ZSwgdHJ1ZSwgc3RhdGUubGVuZ3RoLCBidWZmZXIsICcnLCBob2xkZXIuZmluaXNoKTsNCg0KICAgIC8vIGRvV3JpdGUgaXMgYWx3YXlzIGFzeW5jLCBkZWZlciB0aGVzZSB0byBzYXZlIGEgYml0IG9mIHRpbWUNCiAgICAvLyBhcyB0aGUgaG90IHBhdGggZW5kcyB3aXRoIGRvV3JpdGUNCiAgICBzdGF0ZS5wZW5kaW5nY2IrKzsNCiAgICBzdGF0ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0ID0gbnVsbDsNCiAgICBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUgPSBob2xkZXIubmV4dDsNCiAgICBob2xkZXIubmV4dCA9IG51bGw7DQogIH0gZWxzZSB7DQogICAgLy8gU2xvdyBjYXNlLCB3cml0ZSBjaHVua3Mgb25lLWJ5LW9uZQ0KICAgIHdoaWxlIChlbnRyeSkgew0KICAgICAgdmFyIGNodW5rID0gZW50cnkuY2h1bms7DQogICAgICB2YXIgZW5jb2RpbmcgPSBlbnRyeS5lbmNvZGluZzsNCiAgICAgIHZhciBjYiA9IGVudHJ5LmNhbGxiYWNrOw0KICAgICAgdmFyIGxlbiA9IHN0YXRlLm9iamVjdE1vZGUgPyAxIDogY2h1bmsubGVuZ3RoOw0KDQogICAgICBkb1dyaXRlKHN0cmVhbSwgc3RhdGUsIGZhbHNlLCBsZW4sIGNodW5rLCBlbmNvZGluZywgY2IpOw0KICAgICAgZW50cnkgPSBlbnRyeS5uZXh0Ow0KICAgICAgLy8gaWYgd2UgZGlkbid0IGNhbGwgdGhlIG9ud3JpdGUgaW1tZWRpYXRlbHksIHRoZW4NCiAgICAgIC8vIGl0IG1lYW5zIHRoYXQgd2UgbmVlZCB0byB3YWl0IHVudGlsIGl0IGRvZXMuDQogICAgICAvLyBhbHNvLCB0aGF0IG1lYW5zIHRoYXQgdGhlIGNodW5rIGFuZCBjYiBhcmUgY3VycmVudGx5DQogICAgICAvLyBiZWluZyBwcm9jZXNzZWQsIHNvIG1vdmUgdGhlIGJ1ZmZlciBjb3VudGVyIHBhc3QgdGhlbS4NCiAgICAgIGlmIChzdGF0ZS53cml0aW5nKSB7DQogICAgICAgIGJyZWFrOw0KICAgICAgfQ0KICAgIH0NCg0KICAgIGlmIChlbnRyeSA9PT0gbnVsbCkgc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdCA9IG51bGw7DQogIH0NCg0KICBzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudCA9IDA7DQogIHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdCA9IGVudHJ5Ow0KICBzdGF0ZS5idWZmZXJQcm9jZXNzaW5nID0gZmFsc2U7DQp9DQoNCldyaXRhYmxlLnByb3RvdHlwZS5fd3JpdGUgPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYikgew0KICBjYihuZXcgRXJyb3IoJ25vdCBpbXBsZW1lbnRlZCcpKTsNCn07DQoNCldyaXRhYmxlLnByb3RvdHlwZS5fd3JpdGV2ID0gbnVsbDsNCg0KV3JpdGFibGUucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uIChjaHVuaywgZW5jb2RpbmcsIGNiKSB7DQogIHZhciBzdGF0ZSA9IHRoaXMuX3dyaXRhYmxlU3RhdGU7DQoNCiAgaWYgKHR5cGVvZiBjaHVuayA9PT0gJ2Z1bmN0aW9uJykgew0KICAgIGNiID0gY2h1bms7DQogICAgY2h1bmsgPSBudWxsOw0KICAgIGVuY29kaW5nID0gbnVsbDsNCiAgfSBlbHNlIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdmdW5jdGlvbicpIHsNCiAgICBjYiA9IGVuY29kaW5nOw0KICAgIGVuY29kaW5nID0gbnVsbDsNCiAgfQ0KDQogIGlmIChjaHVuayAhPT0gbnVsbCAmJiBjaHVuayAhPT0gdW5kZWZpbmVkKSB0aGlzLndyaXRlKGNodW5rLCBlbmNvZGluZyk7DQoNCiAgLy8gLmVuZCgpIGZ1bGx5IHVuY29ya3MNCiAgaWYgKHN0YXRlLmNvcmtlZCkgew0KICAgIHN0YXRlLmNvcmtlZCA9IDE7DQogICAgdGhpcy51bmNvcmsoKTsNCiAgfQ0KDQogIC8vIGlnbm9yZSB1bm5lY2Vzc2FyeSBlbmQoKSBjYWxscy4NCiAgaWYgKCFzdGF0ZS5lbmRpbmcgJiYgIXN0YXRlLmZpbmlzaGVkKSBlbmRXcml0YWJsZSh0aGlzLCBzdGF0ZSwgY2IpOw0KfTsNCg0KZnVuY3Rpb24gbmVlZEZpbmlzaChzdGF0ZSkgew0KICByZXR1cm4gc3RhdGUuZW5kaW5nICYmIHN0YXRlLmxlbmd0aCA9PT0gMCAmJiBzdGF0ZS5idWZmZXJlZFJlcXVlc3QgPT09IG51bGwgJiYgIXN0YXRlLmZpbmlzaGVkICYmICFzdGF0ZS53cml0aW5nOw0KfQ0KDQpmdW5jdGlvbiBwcmVmaW5pc2goc3RyZWFtLCBzdGF0ZSkgew0KICBpZiAoIXN0YXRlLnByZWZpbmlzaGVkKSB7DQogICAgc3RhdGUucHJlZmluaXNoZWQgPSB0cnVlOw0KICAgIHN0cmVhbS5lbWl0KCdwcmVmaW5pc2gnKTsNCiAgfQ0KfQ0KDQpmdW5jdGlvbiBmaW5pc2hNYXliZShzdHJlYW0sIHN0YXRlKSB7DQogIHZhciBuZWVkID0gbmVlZEZpbmlzaChzdGF0ZSk7DQogIGlmIChuZWVkKSB7DQogICAgaWYgKHN0YXRlLnBlbmRpbmdjYiA9PT0gMCkgew0KICAgICAgcHJlZmluaXNoKHN0cmVhbSwgc3RhdGUpOw0KICAgICAgc3RhdGUuZmluaXNoZWQgPSB0cnVlOw0KICAgICAgc3RyZWFtLmVtaXQoJ2ZpbmlzaCcpOw0KICAgIH0gZWxzZSB7DQogICAgICBwcmVmaW5pc2goc3RyZWFtLCBzdGF0ZSk7DQogICAgfQ0KICB9DQogIHJldHVybiBuZWVkOw0KfQ0KDQpmdW5jdGlvbiBlbmRXcml0YWJsZShzdHJlYW0sIHN0YXRlLCBjYikgew0KICBzdGF0ZS5lbmRpbmcgPSB0cnVlOw0KICBmaW5pc2hNYXliZShzdHJlYW0sIHN0YXRlKTsNCiAgaWYgKGNiKSB7DQogICAgaWYgKHN0YXRlLmZpbmlzaGVkKSBwcm9jZXNzTmV4dFRpY2soY2IpO2Vsc2Ugc3RyZWFtLm9uY2UoJ2ZpbmlzaCcsIGNiKTsNCiAgfQ0KICBzdGF0ZS5lbmRlZCA9IHRydWU7DQogIHN0cmVhbS53cml0YWJsZSA9IGZhbHNlOw0KfQ0KDQovLyBJdCBzZWVtcyBhIGxpbmtlZCBsaXN0IGJ1dCBpdCBpcyBub3QNCi8vIHRoZXJlIHdpbGwgYmUgb25seSAyIG9mIHRoZXNlIGZvciBlYWNoIHN0cmVhbQ0KZnVuY3Rpb24gQ29ya2VkUmVxdWVzdChzdGF0ZSkgew0KICB2YXIgX3RoaXMgPSB0aGlzOw0KDQogIHRoaXMubmV4dCA9IG51bGw7DQogIHRoaXMuZW50cnkgPSBudWxsOw0KDQogIHRoaXMuZmluaXNoID0gZnVuY3Rpb24gKGVycikgew0KICAgIHZhciBlbnRyeSA9IF90aGlzLmVudHJ5Ow0KICAgIF90aGlzLmVudHJ5ID0gbnVsbDsNCiAgICB3aGlsZSAoZW50cnkpIHsNCiAgICAgIHZhciBjYiA9IGVudHJ5LmNhbGxiYWNrOw0KICAgICAgc3RhdGUucGVuZGluZ2NiLS07DQogICAgICBjYihlcnIpOw0KICAgICAgZW50cnkgPSBlbnRyeS5uZXh0Ow0KICAgIH0NCiAgICBpZiAoc3RhdGUuY29ya2VkUmVxdWVzdHNGcmVlKSB7DQogICAgICBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUubmV4dCA9IF90aGlzOw0KICAgIH0gZWxzZSB7DQogICAgICBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUgPSBfdGhpczsNCiAgICB9DQogIH07DQp9DQp9KS5jYWxsKHRoaXMscmVxdWlyZSgnX3Byb2Nlc3MnKSkNCn0seyIuL19zdHJlYW1fZHVwbGV4Ijo1NjAsIl9wcm9jZXNzIjo1NTEsImJ1ZmZlciI6OTMsImNvcmUtdXRpbC1pcyI6NDg2LCJldmVudHMiOjUyNSwiaW5oZXJpdHMiOjUzNywicHJvY2Vzcy1uZXh0aWNrLWFyZ3MiOjU1MCwidXRpbC1kZXByZWNhdGUiOjU4Nn1dLDU2NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoIi4vbGliL19zdHJlYW1fcGFzc3Rocm91Z2guanMiKQ0KDQp9LHsiLi9saWIvX3N0cmVhbV9wYXNzdGhyb3VnaC5qcyI6NTYxfV0sNTY2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAocHJvY2Vzcyl7DQp2YXIgU3RyZWFtID0gKGZ1bmN0aW9uICgpew0KICB0cnkgew0KICAgIHJldHVybiByZXF1aXJlKCdzdCcgKyAncmVhbScpOyAvLyBoYWNrIHRvIGZpeCBhIGNpcmN1bGFyIGRlcGVuZGVuY3kgaXNzdWUgd2hlbiB1c2VkIHdpdGggYnJvd3NlcmlmeQ0KICB9IGNhdGNoKF8pe30NCn0oKSk7DQpleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3JlYWRhYmxlLmpzJyk7DQpleHBvcnRzLlN0cmVhbSA9IFN0cmVhbSB8fCBleHBvcnRzOw0KZXhwb3J0cy5SZWFkYWJsZSA9IGV4cG9ydHM7DQpleHBvcnRzLldyaXRhYmxlID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV93cml0YWJsZS5qcycpOw0KZXhwb3J0cy5EdXBsZXggPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX2R1cGxleC5qcycpOw0KZXhwb3J0cy5UcmFuc2Zvcm0gPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3RyYW5zZm9ybS5qcycpOw0KZXhwb3J0cy5QYXNzVGhyb3VnaCA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fcGFzc3Rocm91Z2guanMnKTsNCg0KaWYgKCFwcm9jZXNzLmJyb3dzZXIgJiYgcHJvY2Vzcy5lbnYuUkVBREFCTEVfU1RSRUFNID09PSAnZGlzYWJsZScgJiYgU3RyZWFtKSB7DQogIG1vZHVsZS5leHBvcnRzID0gU3RyZWFtOw0KfQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgnX3Byb2Nlc3MnKSkNCn0seyIuL2xpYi9fc3RyZWFtX2R1cGxleC5qcyI6NTYwLCIuL2xpYi9fc3RyZWFtX3Bhc3N0aHJvdWdoLmpzIjo1NjEsIi4vbGliL19zdHJlYW1fcmVhZGFibGUuanMiOjU2MiwiLi9saWIvX3N0cmVhbV90cmFuc2Zvcm0uanMiOjU2MywiLi9saWIvX3N0cmVhbV93cml0YWJsZS5qcyI6NTY0LCJfcHJvY2VzcyI6NTUxfV0sNTY3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgiLi9saWIvX3N0cmVhbV90cmFuc2Zvcm0uanMiKQ0KDQp9LHsiLi9saWIvX3N0cmVhbV90cmFuc2Zvcm0uanMiOjU2M31dLDU2ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoIi4vbGliL19zdHJlYW1fd3JpdGFibGUuanMiKQ0KDQp9LHsiLi9saWIvX3N0cmVhbV93cml0YWJsZS5qcyI6NTY0fV0sNTY5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCi8qDQpDcnlwdG9KUyB2My4xLjINCmNvZGUuZ29vZ2xlLmNvbS9wL2NyeXB0by1qcw0KKGMpIDIwMDktMjAxMyBieSBKZWZmIE1vdHQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQpjb2RlLmdvb2dsZS5jb20vcC9jcnlwdG8tanMvd2lraS9MaWNlbnNlDQoqLw0KLyoqIEBwcmVzZXJ2ZQ0KKGMpIDIwMTIgYnkgQ8OpZHJpYyBNZXNuaWwuIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQoNClJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoNCg0KICAgIC0gUmVkaXN0cmlidXRpb25zIG9mIHNvdXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLg0KICAgIC0gUmVkaXN0cmlidXRpb25zIGluIGJpbmFyeSBmb3JtIG11c3QgcmVwcm9kdWNlIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZSBkb2N1bWVudGF0aW9uIGFuZC9vciBvdGhlciBtYXRlcmlhbHMgcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLg0KDQpUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTICJBUyBJUyIgQU5EIEFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRSBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkUgRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIChJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsIERBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBUT1JUIChJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRiBUSElTIFNPRlRXQVJFLCBFVkVOIElGIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLg0KKi8NCg0KLy8gY29uc3RhbnRzIHRhYmxlDQp2YXIgemwgPSBbDQogIDAsIDEsIDIsIDMsIDQsIDUsIDYsIDcsIDgsIDksIDEwLCAxMSwgMTIsIDEzLCAxNCwgMTUsDQogIDcsIDQsIDEzLCAxLCAxMCwgNiwgMTUsIDMsIDEyLCAwLCA5LCA1LCAyLCAxNCwgMTEsIDgsDQogIDMsIDEwLCAxNCwgNCwgOSwgMTUsIDgsIDEsIDIsIDcsIDAsIDYsIDEzLCAxMSwgNSwgMTIsDQogIDEsIDksIDExLCAxMCwgMCwgOCwgMTIsIDQsIDEzLCAzLCA3LCAxNSwgMTQsIDUsIDYsIDIsDQogIDQsIDAsIDUsIDksIDcsIDEyLCAyLCAxMCwgMTQsIDEsIDMsIDgsIDExLCA2LCAxNSwgMTMNCl0NCg0KdmFyIHpyID0gWw0KICA1LCAxNCwgNywgMCwgOSwgMiwgMTEsIDQsIDEzLCA2LCAxNSwgOCwgMSwgMTAsIDMsIDEyLA0KICA2LCAxMSwgMywgNywgMCwgMTMsIDUsIDEwLCAxNCwgMTUsIDgsIDEyLCA0LCA5LCAxLCAyLA0KICAxNSwgNSwgMSwgMywgNywgMTQsIDYsIDksIDExLCA4LCAxMiwgMiwgMTAsIDAsIDQsIDEzLA0KICA4LCA2LCA0LCAxLCAzLCAxMSwgMTUsIDAsIDUsIDEyLCAyLCAxMywgOSwgNywgMTAsIDE0LA0KICAxMiwgMTUsIDEwLCA0LCAxLCA1LCA4LCA3LCA2LCAyLCAxMywgMTQsIDAsIDMsIDksIDExDQpdDQoNCnZhciBzbCA9IFsNCiAgMTEsIDE0LCAxNSwgMTIsIDUsIDgsIDcsIDksIDExLCAxMywgMTQsIDE1LCA2LCA3LCA5LCA4LA0KICA3LCA2LCA4LCAxMywgMTEsIDksIDcsIDE1LCA3LCAxMiwgMTUsIDksIDExLCA3LCAxMywgMTIsDQogIDExLCAxMywgNiwgNywgMTQsIDksIDEzLCAxNSwgMTQsIDgsIDEzLCA2LCA1LCAxMiwgNywgNSwNCiAgMTEsIDEyLCAxNCwgMTUsIDE0LCAxNSwgOSwgOCwgOSwgMTQsIDUsIDYsIDgsIDYsIDUsIDEyLA0KICA5LCAxNSwgNSwgMTEsIDYsIDgsIDEzLCAxMiwgNSwgMTIsIDEzLCAxNCwgMTEsIDgsIDUsIDYNCl0NCg0KdmFyIHNyID0gWw0KICA4LCA5LCA5LCAxMSwgMTMsIDE1LCAxNSwgNSwgNywgNywgOCwgMTEsIDE0LCAxNCwgMTIsIDYsDQogIDksIDEzLCAxNSwgNywgMTIsIDgsIDksIDExLCA3LCA3LCAxMiwgNywgNiwgMTUsIDEzLCAxMSwNCiAgOSwgNywgMTUsIDExLCA4LCA2LCA2LCAxNCwgMTIsIDEzLCA1LCAxNCwgMTMsIDEzLCA3LCA1LA0KICAxNSwgNSwgOCwgMTEsIDE0LCAxNCwgNiwgMTQsIDYsIDksIDEyLCA5LCAxMiwgNSwgMTUsIDgsDQogIDgsIDUsIDEyLCA5LCAxMiwgNSwgMTQsIDYsIDgsIDEzLCA2LCA1LCAxNSwgMTMsIDExLCAxMQ0KXQ0KDQp2YXIgaGwgPSBbMHgwMDAwMDAwMCwgMHg1QTgyNzk5OSwgMHg2RUQ5RUJBMSwgMHg4RjFCQkNEQywgMHhBOTUzRkQ0RV0NCnZhciBociA9IFsweDUwQTI4QkU2LCAweDVDNEREMTI0LCAweDZENzAzRUYzLCAweDdBNkQ3NkU5LCAweDAwMDAwMDAwXQ0KDQpmdW5jdGlvbiBieXRlc1RvV29yZHMgKGJ5dGVzKSB7DQogIHZhciB3b3JkcyA9IFtdDQogIGZvciAodmFyIGkgPSAwLCBiID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSsrLCBiICs9IDgpIHsNCiAgICB3b3Jkc1tiID4+PiA1XSB8PSBieXRlc1tpXSA8PCAoMjQgLSBiICUgMzIpDQogIH0NCiAgcmV0dXJuIHdvcmRzDQp9DQoNCmZ1bmN0aW9uIHdvcmRzVG9CeXRlcyAod29yZHMpIHsNCiAgdmFyIGJ5dGVzID0gW10NCiAgZm9yICh2YXIgYiA9IDA7IGIgPCB3b3Jkcy5sZW5ndGggKiAzMjsgYiArPSA4KSB7DQogICAgYnl0ZXMucHVzaCgod29yZHNbYiA+Pj4gNV0gPj4+ICgyNCAtIGIgJSAzMikpICYgMHhGRikNCiAgfQ0KICByZXR1cm4gYnl0ZXMNCn0NCg0KZnVuY3Rpb24gcHJvY2Vzc0Jsb2NrIChILCBNLCBvZmZzZXQpIHsNCiAgLy8gc3dhcCBlbmRpYW4NCiAgZm9yICh2YXIgaSA9IDA7IGkgPCAxNjsgaSsrKSB7DQogICAgdmFyIG9mZnNldF9pID0gb2Zmc2V0ICsgaQ0KICAgIHZhciBNX29mZnNldF9pID0gTVtvZmZzZXRfaV0NCg0KICAgIC8vIFN3YXANCiAgICBNW29mZnNldF9pXSA9ICgNCiAgICAgICgoKE1fb2Zmc2V0X2kgPDwgOCkgfCAoTV9vZmZzZXRfaSA+Pj4gMjQpKSAmIDB4MDBmZjAwZmYpIHwNCiAgICAgICgoKE1fb2Zmc2V0X2kgPDwgMjQpIHwgKE1fb2Zmc2V0X2kgPj4+IDgpKSAmIDB4ZmYwMGZmMDApDQogICAgKQ0KICB9DQoNCiAgLy8gV29ya2luZyB2YXJpYWJsZXMNCiAgdmFyIGFsLCBibCwgY2wsIGRsLCBlbA0KICB2YXIgYXIsIGJyLCBjciwgZHIsIGVyDQoNCiAgYXIgPSBhbCA9IEhbMF0NCiAgYnIgPSBibCA9IEhbMV0NCiAgY3IgPSBjbCA9IEhbMl0NCiAgZHIgPSBkbCA9IEhbM10NCiAgZXIgPSBlbCA9IEhbNF0NCg0KICAvLyBjb21wdXRhdGlvbg0KICB2YXIgdA0KICBmb3IgKGkgPSAwOyBpIDwgODA7IGkgKz0gMSkgew0KICAgIHQgPSAoYWwgKyBNW29mZnNldCArIHpsW2ldXSkgfCAwDQogICAgaWYgKGkgPCAxNikgew0KICAgICAgdCArPSBmMShibCwgY2wsIGRsKSArIGhsWzBdDQogICAgfSBlbHNlIGlmIChpIDwgMzIpIHsNCiAgICAgIHQgKz0gZjIoYmwsIGNsLCBkbCkgKyBobFsxXQ0KICAgIH0gZWxzZSBpZiAoaSA8IDQ4KSB7DQogICAgICB0ICs9IGYzKGJsLCBjbCwgZGwpICsgaGxbMl0NCiAgICB9IGVsc2UgaWYgKGkgPCA2NCkgew0KICAgICAgdCArPSBmNChibCwgY2wsIGRsKSArIGhsWzNdDQogICAgfSBlbHNlIHsvLyBpZiAoaTw4MCkgew0KICAgICAgdCArPSBmNShibCwgY2wsIGRsKSArIGhsWzRdDQogICAgfQ0KICAgIHQgPSB0IHwgMA0KICAgIHQgPSByb3RsKHQsIHNsW2ldKQ0KICAgIHQgPSAodCArIGVsKSB8IDANCiAgICBhbCA9IGVsDQogICAgZWwgPSBkbA0KICAgIGRsID0gcm90bChjbCwgMTApDQogICAgY2wgPSBibA0KICAgIGJsID0gdA0KDQogICAgdCA9IChhciArIE1bb2Zmc2V0ICsgenJbaV1dKSB8IDANCiAgICBpZiAoaSA8IDE2KSB7DQogICAgICB0ICs9IGY1KGJyLCBjciwgZHIpICsgaHJbMF0NCiAgICB9IGVsc2UgaWYgKGkgPCAzMikgew0KICAgICAgdCArPSBmNChiciwgY3IsIGRyKSArIGhyWzFdDQogICAgfSBlbHNlIGlmIChpIDwgNDgpIHsNCiAgICAgIHQgKz0gZjMoYnIsIGNyLCBkcikgKyBoclsyXQ0KICAgIH0gZWxzZSBpZiAoaSA8IDY0KSB7DQogICAgICB0ICs9IGYyKGJyLCBjciwgZHIpICsgaHJbM10NCiAgICB9IGVsc2Ugey8vIGlmIChpPDgwKSB7DQogICAgICB0ICs9IGYxKGJyLCBjciwgZHIpICsgaHJbNF0NCiAgICB9DQoNCiAgICB0ID0gdCB8IDANCiAgICB0ID0gcm90bCh0LCBzcltpXSkNCiAgICB0ID0gKHQgKyBlcikgfCAwDQogICAgYXIgPSBlcg0KICAgIGVyID0gZHINCiAgICBkciA9IHJvdGwoY3IsIDEwKQ0KICAgIGNyID0gYnINCiAgICBiciA9IHQNCiAgfQ0KDQogIC8vIGludGVybWVkaWF0ZSBoYXNoIHZhbHVlDQogIHQgPSAoSFsxXSArIGNsICsgZHIpIHwgMA0KICBIWzFdID0gKEhbMl0gKyBkbCArIGVyKSB8IDANCiAgSFsyXSA9IChIWzNdICsgZWwgKyBhcikgfCAwDQogIEhbM10gPSAoSFs0XSArIGFsICsgYnIpIHwgMA0KICBIWzRdID0gKEhbMF0gKyBibCArIGNyKSB8IDANCiAgSFswXSA9IHQNCn0NCg0KZnVuY3Rpb24gZjEgKHgsIHksIHopIHsNCiAgcmV0dXJuICgoeCkgXiAoeSkgXiAoeikpDQp9DQoNCmZ1bmN0aW9uIGYyICh4LCB5LCB6KSB7DQogIHJldHVybiAoKCh4KSAmICh5KSkgfCAoKH54KSAmICh6KSkpDQp9DQoNCmZ1bmN0aW9uIGYzICh4LCB5LCB6KSB7DQogIHJldHVybiAoKCh4KSB8ICh+KHkpKSkgXiAoeikpDQp9DQoNCmZ1bmN0aW9uIGY0ICh4LCB5LCB6KSB7DQogIHJldHVybiAoKCh4KSAmICh6KSkgfCAoKHkpICYgKH4oeikpKSkNCn0NCg0KZnVuY3Rpb24gZjUgKHgsIHksIHopIHsNCiAgcmV0dXJuICgoeCkgXiAoKHkpIHwgKH4oeikpKSkNCn0NCg0KZnVuY3Rpb24gcm90bCAoeCwgbikgew0KICByZXR1cm4gKHggPDwgbikgfCAoeCA+Pj4gKDMyIC0gbikpDQp9DQoNCmZ1bmN0aW9uIHJpcGVtZDE2MCAobWVzc2FnZSkgew0KICB2YXIgSCA9IFsweDY3NDUyMzAxLCAweEVGQ0RBQjg5LCAweDk4QkFEQ0ZFLCAweDEwMzI1NDc2LCAweEMzRDJFMUYwXQ0KDQogIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycpIHsNCiAgICBtZXNzYWdlID0gbmV3IEJ1ZmZlcihtZXNzYWdlLCAndXRmOCcpDQogIH0NCg0KICB2YXIgbSA9IGJ5dGVzVG9Xb3JkcyhtZXNzYWdlKQ0KDQogIHZhciBuQml0c0xlZnQgPSBtZXNzYWdlLmxlbmd0aCAqIDgNCiAgdmFyIG5CaXRzVG90YWwgPSBtZXNzYWdlLmxlbmd0aCAqIDgNCg0KICAvLyBBZGQgcGFkZGluZw0KICBtW25CaXRzTGVmdCA+Pj4gNV0gfD0gMHg4MCA8PCAoMjQgLSBuQml0c0xlZnQgJSAzMikNCiAgbVsoKChuQml0c0xlZnQgKyA2NCkgPj4+IDkpIDw8IDQpICsgMTRdID0gKA0KICAgICgoKG5CaXRzVG90YWwgPDwgOCkgfCAobkJpdHNUb3RhbCA+Pj4gMjQpKSAmIDB4MDBmZjAwZmYpIHwNCiAgICAoKChuQml0c1RvdGFsIDw8IDI0KSB8IChuQml0c1RvdGFsID4+PiA4KSkgJiAweGZmMDBmZjAwKQ0KICApDQoNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBtLmxlbmd0aDsgaSArPSAxNikgew0KICAgIHByb2Nlc3NCbG9jayhILCBtLCBpKQ0KICB9DQoNCiAgLy8gc3dhcCBlbmRpYW4NCiAgZm9yIChpID0gMDsgaSA8IDU7IGkrKykgew0KICAgIC8vIHNob3J0Y3V0DQogICAgdmFyIEhfaSA9IEhbaV0NCg0KICAgIC8vIFN3YXANCiAgICBIW2ldID0gKCgoSF9pIDw8IDgpIHwgKEhfaSA+Pj4gMjQpKSAmIDB4MDBmZjAwZmYpIHwNCiAgICAgICgoKEhfaSA8PCAyNCkgfCAoSF9pID4+PiA4KSkgJiAweGZmMDBmZjAwKQ0KICB9DQoNCiAgdmFyIGRpZ2VzdGJ5dGVzID0gd29yZHNUb0J5dGVzKEgpDQogIHJldHVybiBuZXcgQnVmZmVyKGRpZ2VzdGJ5dGVzKQ0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IHJpcGVtZDE2MA0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7ImJ1ZmZlciI6OTN9XSw1NzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChnbG9iYWwpew0KLyoqDQoqIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRA0KKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0wNCiogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlYNCiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBDQoqIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUcNCiogQ29weXJpZ2h0IDIwMTYgQXBpemVlDQoqIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElODQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKiovDQoNCi8vIERpc3RyaWJ1dGlvbiBmaWxlIGZvciBNZXNzYWdlRmFjdG9yeS5qcyANCi8vIHZlcnNpb246IDAuMi4wDQoNCiFmdW5jdGlvbihlKXtpZigib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHMmJiJ1bmRlZmluZWQiIT10eXBlb2YgbW9kdWxlKW1vZHVsZS5leHBvcnRzPWUoKTtlbHNlIGlmKCJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQpZGVmaW5lKFtdLGUpO2Vsc2V7dmFyIHQ7dD0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsdC5NZXNzYWdlRmFjdG9yeT1lKCl9fShmdW5jdGlvbigpe3ZhciBlO3JldHVybiBmdW5jdGlvbiB0KGUscixuKXtmdW5jdGlvbiBvKGEscyl7aWYoIXJbYV0pe2lmKCFlW2FdKXt2YXIgdT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighcyYmdSlyZXR1cm4gdShhLCEwKTtpZihpKXJldHVybiBpKGEsITApO3ZhciBsPW5ldyBFcnJvcigiQ2Fubm90IGZpbmQgbW9kdWxlICciK2ErIiciKTt0aHJvdyBsLmNvZGU9Ik1PRFVMRV9OT1RfRk9VTkQiLGx9dmFyIGM9clthXT17ZXhwb3J0czp7fX07ZVthXVswXS5jYWxsKGMuZXhwb3J0cyxmdW5jdGlvbih0KXt2YXIgcj1lW2FdWzFdW3RdO3JldHVybiBvKHI/cjp0KX0sYyxjLmV4cG9ydHMsdCxlLHIsbil9cmV0dXJuIHJbYV0uZXhwb3J0c31mb3IodmFyIGk9ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsYT0wO2E8bi5sZW5ndGg7YSsrKW8oblthXSk7cmV0dXJuIG99KHsxOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9jcmVhdGUiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZSI6MTh9XSwyOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSI6MTl9XSwzOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9mcmVlemUiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2ZyZWV6ZSI6MjB9XSw0OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI6MjF9XSw1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIjoyMn1dLDY6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiOjIzfV0sNzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiI6MjR9XSw4OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZSI6MjV9XSw5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbCIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wiOjI2fV0sMTA6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ci5fX2VzTW9kdWxlPSEwLHJbImRlZmF1bHQiXT1mdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpfX0se31dLDExOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19ci5fX2VzTW9kdWxlPSEwO3ZhciBvPWUoIi4uL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSIpLGk9bihvKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBuPXRbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsInZhbHVlImluIG4mJihuLndyaXRhYmxlPSEwKSwoMCxpWyJkZWZhdWx0Il0pKGUsbi5rZXksbil9fXJldHVybiBmdW5jdGlvbih0LHIsbil7cmV0dXJuIHImJmUodC5wcm90b3R5cGUsciksbiYmZSh0LG4pLHR9fSgpfSx7Ii4uL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSI6Mn1dLDEyOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIilbImRlZmF1bHQiXTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbz0hMDtvOyl7dmFyIGk9ZSxhPXQscz1yO289ITEsbnVsbD09PWkmJihpPUZ1bmN0aW9uLnByb3RvdHlwZSk7dmFyIHU9bihpLGEpO2lmKHZvaWQgMCE9PXUpe2lmKCJ2YWx1ZSJpbiB1KXJldHVybiB1LnZhbHVlO3ZhciBsPXUuZ2V0O2lmKHZvaWQgMD09PWwpcmV0dXJuO3JldHVybiBsLmNhbGwocyl9dmFyIGM9T2JqZWN0LmdldFByb3RvdHlwZU9mKGkpO2lmKG51bGw9PT1jKXJldHVybjtlPWMsdD1hLHI9cyxvPSEwLHU9Yz12b2lkIDB9fSxyLl9fZXNNb2R1bGU9ITB9LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOjR9XSwxMzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2NyZWF0ZSIpWyJkZWZhdWx0Il0sbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2YiKVsiZGVmYXVsdCJdO3JbImRlZmF1bHQiXT1mdW5jdGlvbihlLHQpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90ICIrdHlwZW9mIHQpO2UucHJvdG90eXBlPW4odCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihvP28oZSx0KTplLl9fcHJvdG9fXz10KX0sci5fX2VzTW9kdWxlPSEwfSx7ImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvY3JlYXRlIjoxLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2YiOjd9XSwxNDpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbz1lKCIuLi9oZWxwZXJzL3R5cGVvZiIpLGk9bihvKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpO3JldHVybiF0fHwib2JqZWN0IiE9PSgidW5kZWZpbmVkIj09dHlwZW9mIHQ/InVuZGVmaW5lZCI6KDAsaVsiZGVmYXVsdCJdKSh0KSkmJiJmdW5jdGlvbiIhPXR5cGVvZiB0P2U6dH19LHsiLi4vaGVscGVycy90eXBlb2YiOjE1fV0sMTU6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL3N5bWJvbCIpWyJkZWZhdWx0Il07clsiZGVmYXVsdCJdPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLmNvbnN0cnVjdG9yPT09bj8ic3ltYm9sIjp0eXBlb2YgZX0sci5fX2VzTW9kdWxlPSEwfSx7ImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9zeW1ib2wiOjl9XSwxNjpbZnVuY3Rpb24oZSx0LHIpeyhmdW5jdGlvbihyKXt2YXIgbj0ib2JqZWN0Ij09dHlwZW9mIHI/cjoib2JqZWN0Ij09dHlwZW9mIHdpbmRvdz93aW5kb3c6Im9iamVjdCI9PXR5cGVvZiBzZWxmP3NlbGY6dGhpcyxvPW4ucmVnZW5lcmF0b3JSdW50aW1lJiZPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhuKS5pbmRleE9mKCJyZWdlbmVyYXRvclJ1bnRpbWUiKT49MCxpPW8mJm4ucmVnZW5lcmF0b3JSdW50aW1lO2lmKG4ucmVnZW5lcmF0b3JSdW50aW1lPXZvaWQgMCx0LmV4cG9ydHM9ZSgiLi9ydW50aW1lIiksbyluLnJlZ2VuZXJhdG9yUnVudGltZT1pO2Vsc2UgdHJ5e2RlbGV0ZSBuLnJlZ2VuZXJhdG9yUnVudGltZX1jYXRjaChhKXtuLnJlZ2VuZXJhdG9yUnVudGltZT12b2lkIDB9dC5leHBvcnRzPXsiZGVmYXVsdCI6dC5leHBvcnRzLF9fZXNNb2R1bGU6ITB9fSkuY2FsbCh0aGlzLCJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGY/c2VsZjoidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6e30pfSx7Ii4vcnVudGltZSI6MTd9XSwxNzpbZnVuY3Rpb24oZSx0LHIpeyhmdW5jdGlvbihyLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sIilbImRlZmF1bHQiXSxpPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvY3JlYXRlIilbImRlZmF1bHQiXSxhPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiIpWyJkZWZhdWx0Il0scz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSIpWyJkZWZhdWx0Il07IWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIG4oZSx0LHIsbil7dmFyIG89aSgodHx8bCkucHJvdG90eXBlKSxhPW5ldyBnKG58fFtdKTtyZXR1cm4gby5faW52b2tlPXkoZSxyLGEpLG99ZnVuY3Rpb24gdShlLHQscil7dHJ5e3JldHVybnt0eXBlOiJub3JtYWwiLGFyZzplLmNhbGwodCxyKX19Y2F0Y2gobil7cmV0dXJue3R5cGU6InRocm93Iixhcmc6bn19fWZ1bmN0aW9uIGwoKXt9ZnVuY3Rpb24gYygpe31mdW5jdGlvbiBmKCl7fWZ1bmN0aW9uIGgoZSl7WyJuZXh0IiwidGhyb3ciLCJyZXR1cm4iXS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2VbdF09ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2ludm9rZSh0LGUpfX0pfWZ1bmN0aW9uIHAoZSl7dGhpcy5hcmc9ZX1mdW5jdGlvbiBkKGUpe2Z1bmN0aW9uIHQocixuLG8saSl7dmFyIGE9dShlW3JdLGUsbik7aWYoInRocm93IiE9PWEudHlwZSl7dmFyIGw9YS5hcmcsYz1sLnZhbHVlO3JldHVybiBjIGluc3RhbmNlb2YgcD9zLnJlc29sdmUoYy5hcmcpLnRoZW4oZnVuY3Rpb24oZSl7dCgibmV4dCIsZSxvLGkpfSxmdW5jdGlvbihlKXt0KCJ0aHJvdyIsZSxvLGkpfSk6cy5yZXNvbHZlKGMpLnRoZW4oZnVuY3Rpb24oZSl7bC52YWx1ZT1lLG8obCl9LGkpfWkoYS5hcmcpfWZ1bmN0aW9uIG4oZSxyKXtmdW5jdGlvbiBuKCl7cmV0dXJuIG5ldyBzKGZ1bmN0aW9uKG4sbyl7dChlLHIsbixvKX0pfXJldHVybiBvPW8/by50aGVuKG4sbik6bigpfSJvYmplY3QiPT10eXBlb2YgciYmci5kb21haW4mJih0PXIuZG9tYWluLmJpbmQodCkpO3ZhciBvO3RoaXMuX2ludm9rZT1ufWZ1bmN0aW9uIHkoZSx0LHIpe3ZhciBuPVA7cmV0dXJuIGZ1bmN0aW9uKG8saSl7aWYobj09PWspdGhyb3cgbmV3IEVycm9yKCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBydW5uaW5nIik7aWYobj09PVMpe2lmKCJ0aHJvdyI9PT1vKXRocm93IGk7cmV0dXJuIEUoKX1mb3IoOzspe3ZhciBhPXIuZGVsZWdhdGU7aWYoYSl7aWYoInJldHVybiI9PT1vfHwidGhyb3ciPT09byYmYS5pdGVyYXRvcltvXT09PXcpe3IuZGVsZWdhdGU9bnVsbDt2YXIgcz1hLml0ZXJhdG9yWyJyZXR1cm4iXTtpZihzKXt2YXIgbD11KHMsYS5pdGVyYXRvcixpKTtpZigidGhyb3ciPT09bC50eXBlKXtvPSJ0aHJvdyIsaT1sLmFyZztjb250aW51ZX19aWYoInJldHVybiI9PT1vKWNvbnRpbnVlfXZhciBsPXUoYS5pdGVyYXRvcltvXSxhLml0ZXJhdG9yLGkpO2lmKCJ0aHJvdyI9PT1sLnR5cGUpe3IuZGVsZWdhdGU9bnVsbCxvPSJ0aHJvdyIsaT1sLmFyZztjb250aW51ZX1vPSJuZXh0IixpPXc7dmFyIGM9bC5hcmc7aWYoIWMuZG9uZSlyZXR1cm4gbj1SLGM7clthLnJlc3VsdE5hbWVdPWMudmFsdWUsci5uZXh0PWEubmV4dExvYyxyLmRlbGVnYXRlPW51bGx9aWYoIm5leHQiPT09byluPT09Uj9yLnNlbnQ9aTpyLnNlbnQ9dztlbHNlIGlmKCJ0aHJvdyI9PT1vKXtpZihuPT09UCl0aHJvdyBuPVMsaTtyLmRpc3BhdGNoRXhjZXB0aW9uKGkpJiYobz0ibmV4dCIsaT13KX1lbHNlInJldHVybiI9PT1vJiZyLmFicnVwdCgicmV0dXJuIixpKTtuPWs7dmFyIGw9dShlLHQscik7aWYoIm5vcm1hbCI9PT1sLnR5cGUpe249ci5kb25lP1M6Ujt2YXIgYz17dmFsdWU6bC5hcmcsZG9uZTpyLmRvbmV9O2lmKGwuYXJnIT09QSlyZXR1cm4gYztyLmRlbGVnYXRlJiYibmV4dCI9PT1vJiYoaT13KX1lbHNlInRocm93Ij09PWwudHlwZSYmKG49UyxvPSJ0aHJvdyIsaT1sLmFyZyl9fX1mdW5jdGlvbiBtKGUpe3ZhciB0PXt0cnlMb2M6ZVswXX07MSBpbiBlJiYodC5jYXRjaExvYz1lWzFdKSwyIGluIGUmJih0LmZpbmFsbHlMb2M9ZVsyXSx0LmFmdGVyTG9jPWVbM10pLHRoaXMudHJ5RW50cmllcy5wdXNoKHQpfWZ1bmN0aW9uIHYoZSl7dmFyIHQ9ZS5jb21wbGV0aW9ufHx7fTt0LnR5cGU9Im5vcm1hbCIsZGVsZXRlIHQuYXJnLGUuY29tcGxldGlvbj10fWZ1bmN0aW9uIGcoZSl7dGhpcy50cnlFbnRyaWVzPVt7dHJ5TG9jOiJyb290In1dLGUuZm9yRWFjaChtLHRoaXMpLHRoaXMucmVzZXQoITApfWZ1bmN0aW9uIGIoZSl7aWYoZSl7dmFyIHQ9ZVtNXTtpZih0KXJldHVybiB0LmNhbGwoZSk7aWYoImZ1bmN0aW9uIj09dHlwZW9mIGUubmV4dClyZXR1cm4gZTtpZighaXNOYU4oZS5sZW5ndGgpKXt2YXIgcj0tMSxuPWZ1bmN0aW9uIG8oKXtmb3IoOysrcjxlLmxlbmd0aDspaWYoJC5jYWxsKGUscikpcmV0dXJuIG8udmFsdWU9ZVtyXSxvLmRvbmU9ITEsbztyZXR1cm4gby52YWx1ZT13LG8uZG9uZT0hMCxvfTtyZXR1cm4gbi5uZXh0PW59fXJldHVybntuZXh0OkV9fWZ1bmN0aW9uIEUoKXtyZXR1cm57dmFsdWU6dyxkb25lOiEwfX12YXIgdywkPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksXz0iZnVuY3Rpb24iPT10eXBlb2Ygbz9vOnt9LE09Xy5pdGVyYXRvcnx8IkBAaXRlcmF0b3IiLE89Xy50b1N0cmluZ1RhZ3x8IkBAdG9TdHJpbmdUYWciLGo9Im9iamVjdCI9PXR5cGVvZiB0LHg9ZS5yZWdlbmVyYXRvclJ1bnRpbWU7aWYoeClyZXR1cm4gdm9pZChqJiYodC5leHBvcnRzPXgpKTt4PWUucmVnZW5lcmF0b3JSdW50aW1lPWo/dC5leHBvcnRzOnt9LHgud3JhcD1uO3ZhciBQPSJzdXNwZW5kZWRTdGFydCIsUj0ic3VzcGVuZGVkWWllbGQiLGs9ImV4ZWN1dGluZyIsUz0iY29tcGxldGVkIixBPXt9LFQ9Zi5wcm90b3R5cGU9bC5wcm90b3R5cGU7Yy5wcm90b3R5cGU9VC5jb25zdHJ1Y3Rvcj1mLGYuY29uc3RydWN0b3I9YyxmW09dPWMuZGlzcGxheU5hbWU9IkdlbmVyYXRvckZ1bmN0aW9uIix4LmlzR2VuZXJhdG9yRnVuY3Rpb249ZnVuY3Rpb24oZSl7dmFyIHQ9ImZ1bmN0aW9uIj09dHlwZW9mIGUmJmUuY29uc3RydWN0b3I7cmV0dXJuIHQ/dD09PWN8fCJHZW5lcmF0b3JGdW5jdGlvbiI9PT0odC5kaXNwbGF5TmFtZXx8dC5uYW1lKTohMX0seC5tYXJrPWZ1bmN0aW9uKGUpe3JldHVybiBhP2EoZSxmKTooZS5fX3Byb3RvX189ZixPIGluIGV8fChlW09dPSJHZW5lcmF0b3JGdW5jdGlvbiIpKSxlLnByb3RvdHlwZT1pKFQpLGV9LHguYXdyYXA9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBwKGUpfSxoKGQucHJvdG90eXBlKSx4LmFzeW5jPWZ1bmN0aW9uKGUsdCxyLG8pe3ZhciBpPW5ldyBkKG4oZSx0LHIsbykpO3JldHVybiB4LmlzR2VuZXJhdG9yRnVuY3Rpb24odCk/aTppLm5leHQoKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBlLmRvbmU/ZS52YWx1ZTppLm5leHQoKX0pfSxoKFQpLFRbTV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sVFtPXT0iR2VuZXJhdG9yIixULnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIltvYmplY3QgR2VuZXJhdG9yXSJ9LHgua2V5cz1mdW5jdGlvbihlKXt2YXIgdD1bXTtmb3IodmFyIHIgaW4gZSl0LnB1c2gocik7cmV0dXJuIHQucmV2ZXJzZSgpLGZ1bmN0aW9uIG4oKXtmb3IoO3QubGVuZ3RoOyl7dmFyIHI9dC5wb3AoKTtpZihyIGluIGUpcmV0dXJuIG4udmFsdWU9cixuLmRvbmU9ITEsbn1yZXR1cm4gbi5kb25lPSEwLG59fSx4LnZhbHVlcz1iLGcucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpnLHJlc2V0OmZ1bmN0aW9uKGUpe2lmKHRoaXMucHJldj0wLHRoaXMubmV4dD0wLHRoaXMuc2VudD13LHRoaXMuZG9uZT0hMSx0aGlzLmRlbGVnYXRlPW51bGwsdGhpcy50cnlFbnRyaWVzLmZvckVhY2godiksIWUpZm9yKHZhciB0IGluIHRoaXMpInQiPT09dC5jaGFyQXQoMCkmJiQuY2FsbCh0aGlzLHQpJiYhaXNOYU4oK3Quc2xpY2UoMSkpJiYodGhpc1t0XT13KX0sc3RvcDpmdW5jdGlvbigpe3RoaXMuZG9uZT0hMDt2YXIgZT10aGlzLnRyeUVudHJpZXNbMF0sdD1lLmNvbXBsZXRpb247aWYoInRocm93Ij09PXQudHlwZSl0aHJvdyB0LmFyZztyZXR1cm4gdGhpcy5ydmFsfSxkaXNwYXRjaEV4Y2VwdGlvbjpmdW5jdGlvbihlKXtmdW5jdGlvbiB0KHQsbil7cmV0dXJuIGkudHlwZT0idGhyb3ciLGkuYXJnPWUsci5uZXh0PXQsISFufWlmKHRoaXMuZG9uZSl0aHJvdyBlO2Zvcih2YXIgcj10aGlzLG49dGhpcy50cnlFbnRyaWVzLmxlbmd0aC0xO24+PTA7LS1uKXt2YXIgbz10aGlzLnRyeUVudHJpZXNbbl0saT1vLmNvbXBsZXRpb247aWYoInJvb3QiPT09by50cnlMb2MpcmV0dXJuIHQoImVuZCIpO2lmKG8udHJ5TG9jPD10aGlzLnByZXYpe3ZhciBhPSQuY2FsbChvLCJjYXRjaExvYyIpLHM9JC5jYWxsKG8sImZpbmFsbHlMb2MiKTtpZihhJiZzKXtpZih0aGlzLnByZXY8by5jYXRjaExvYylyZXR1cm4gdChvLmNhdGNoTG9jLCEwKTtpZih0aGlzLnByZXY8by5maW5hbGx5TG9jKXJldHVybiB0KG8uZmluYWxseUxvYyl9ZWxzZSBpZihhKXtpZih0aGlzLnByZXY8by5jYXRjaExvYylyZXR1cm4gdChvLmNhdGNoTG9jLCEwKX1lbHNle2lmKCFzKXRocm93IG5ldyBFcnJvcigidHJ5IHN0YXRlbWVudCB3aXRob3V0IGNhdGNoIG9yIGZpbmFsbHkiKTtpZih0aGlzLnByZXY8by5maW5hbGx5TG9jKXJldHVybiB0KG8uZmluYWxseUxvYyl9fX19LGFicnVwdDpmdW5jdGlvbihlLHQpe2Zvcih2YXIgcj10aGlzLnRyeUVudHJpZXMubGVuZ3RoLTE7cj49MDstLXIpe3ZhciBuPXRoaXMudHJ5RW50cmllc1tyXTtpZihuLnRyeUxvYzw9dGhpcy5wcmV2JiYkLmNhbGwobiwiZmluYWxseUxvYyIpJiZ0aGlzLnByZXY8bi5maW5hbGx5TG9jKXt2YXIgbz1uO2JyZWFrfX1vJiYoImJyZWFrIj09PWV8fCJjb250aW51ZSI9PT1lKSYmby50cnlMb2M8PXQmJnQ8PW8uZmluYWxseUxvYyYmKG89bnVsbCk7dmFyIGk9bz9vLmNvbXBsZXRpb246e307cmV0dXJuIGkudHlwZT1lLGkuYXJnPXQsbz90aGlzLm5leHQ9by5maW5hbGx5TG9jOnRoaXMuY29tcGxldGUoaSksQX0sY29tcGxldGU6ZnVuY3Rpb24oZSx0KXtpZigidGhyb3ciPT09ZS50eXBlKXRocm93IGUuYXJnOyJicmVhayI9PT1lLnR5cGV8fCJjb250aW51ZSI9PT1lLnR5cGU/dGhpcy5uZXh0PWUuYXJnOiJyZXR1cm4iPT09ZS50eXBlPyh0aGlzLnJ2YWw9ZS5hcmcsdGhpcy5uZXh0PSJlbmQiKToibm9ybWFsIj09PWUudHlwZSYmdCYmKHRoaXMubmV4dD10KX0sZmluaXNoOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzLnRyeUVudHJpZXMubGVuZ3RoLTE7dD49MDstLXQpe3ZhciByPXRoaXMudHJ5RW50cmllc1t0XTtpZihyLmZpbmFsbHlMb2M9PT1lKXJldHVybiB0aGlzLmNvbXBsZXRlKHIuY29tcGxldGlvbixyLmFmdGVyTG9jKSx2KHIpLEF9fSwiY2F0Y2giOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzLnRyeUVudHJpZXMubGVuZ3RoLTE7dD49MDstLXQpe3ZhciByPXRoaXMudHJ5RW50cmllc1t0XTtpZihyLnRyeUxvYz09PWUpe3ZhciBuPXIuY29tcGxldGlvbjtpZigidGhyb3ciPT09bi50eXBlKXt2YXIgbz1uLmFyZzt2KHIpfXJldHVybiBvfX10aHJvdyBuZXcgRXJyb3IoImlsbGVnYWwgY2F0Y2ggYXR0ZW1wdCIpfSxkZWxlZ2F0ZVlpZWxkOmZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gdGhpcy5kZWxlZ2F0ZT17aXRlcmF0b3I6YihlKSxyZXN1bHROYW1lOnQsbmV4dExvYzpyfSxBfX19KCJvYmplY3QiPT10eXBlb2Ygbj9uOiJvYmplY3QiPT10eXBlb2Ygd2luZG93P3dpbmRvdzoib2JqZWN0Ij09dHlwZW9mIHNlbGY/c2VsZjp2b2lkIDApfSkuY2FsbCh0aGlzLGUoIl9wcm9jZXNzIiksInVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fSl9LHtfcHJvY2Vzczo5MiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9jcmVhdGUiOjEsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiI6NywiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiOjgsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9zeW1ib2wiOjl9XSwxODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4uLy4uL21vZHVsZXMvJCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBuLmNyZWF0ZShlLHQpfX0seyIuLi8uLi9tb2R1bGVzLyQiOjU3fV0sMTk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLi8uLi9tb2R1bGVzLyQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBuLnNldERlc2MoZSx0LHIpfX0seyIuLi8uLi9tb2R1bGVzLyQiOjU3fV0sMjA6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZnJlZXplIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvJC5jb3JlIikuT2JqZWN0LmZyZWV6ZX0seyIuLi8uLi9tb2R1bGVzLyQuY29yZSI6MzIsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5mcmVlemUiOjgyfV0sMjE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLi8uLi9tb2R1bGVzLyQiKTtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIiksdC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4uZ2V0RGVzYyhlLHQpfX0seyIuLi8uLi9tb2R1bGVzLyQiOjU3LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjo4M31dLDIyOltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy8kLmNvcmUiKS5PYmplY3QuZ2V0UHJvdG90eXBlT2Z9LHsiLi4vLi4vbW9kdWxlcy8kLmNvcmUiOjMyLCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZiI6ODR9XSwyMzpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvJC5jb3JlIikuT2JqZWN0LmtleXN9LHsiLi4vLi4vbW9kdWxlcy8kLmNvcmUiOjMyLCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyI6ODV9XSwyNDpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvJC5jb3JlIikuT2JqZWN0LnNldFByb3RvdHlwZU9mfSx7Ii4uLy4uL21vZHVsZXMvJC5jb3JlIjozMiwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YiOjg2fV0sMjU6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIiksZSgiLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yIiksZSgiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIiksZSgiLi4vbW9kdWxlcy9lczYucHJvbWlzZSIpLHQuZXhwb3J0cz1lKCIuLi9tb2R1bGVzLyQuY29yZSIpLlByb21pc2V9LHsiLi4vbW9kdWxlcy8kLmNvcmUiOjMyLCIuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIjo4NywiLi4vbW9kdWxlcy9lczYucHJvbWlzZSI6ODgsIi4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciI6ODksIi4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI6OTF9XSwyNjpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2LnN5bWJvbCIpLGUoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy8kLmNvcmUiKS5TeW1ib2x9LHsiLi4vLi4vbW9kdWxlcy8kLmNvcmUiOjMyLCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIjo4NywiLi4vLi4vbW9kdWxlcy9lczYuc3ltYm9sIjo5MH1dLDI3OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGEgZnVuY3Rpb24hIik7cmV0dXJuIGV9fSx7fV0sMjg6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt9fSx7fV0sMjk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLyQuaXMtb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCFuKGUpKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGFuIG9iamVjdCEiKTtyZXR1cm4gZX19LHsiLi8kLmlzLW9iamVjdCI6NTB9XSwzMDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vJC5jb2YiKSxvPWUoIi4vJC53a3MiKSgidG9TdHJpbmdUYWciKSxpPSJBcmd1bWVudHMiPT1uKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSk7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0LHIsYTtyZXR1cm4gdm9pZCAwPT09ZT8iVW5kZWZpbmVkIjpudWxsPT09ZT8iTnVsbCI6InN0cmluZyI9PXR5cGVvZihyPSh0PU9iamVjdChlKSlbb10pP3I6aT9uKHQpOiJPYmplY3QiPT0oYT1uKHQpKSYmImZ1bmN0aW9uIj09dHlwZW9mIHQuY2FsbGVlPyJBcmd1bWVudHMiOmF9fSx7Ii4vJC5jb2YiOjMxLCIuLyQud2tzIjo3OX1dLDMxOltmdW5jdGlvbihlLHQscil7dmFyIG49e30udG9TdHJpbmc7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuLmNhbGwoZSkuc2xpY2UoOCwtMSl9fSx7fV0sMzI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj10LmV4cG9ydHM9e3ZlcnNpb246IjEuMi42In07Im51bWJlciI9PXR5cGVvZiBfX2UmJihfX2U9bil9LHt9XSwzMzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vJC5hLWZ1bmN0aW9uIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtpZihuKGUpLHZvaWQgMD09PXQpcmV0dXJuIGU7c3dpdGNoKHIpe2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIGUuY2FsbCh0LHIpfTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKHIsbil7cmV0dXJuIGUuY2FsbCh0LHIsbil9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24ocixuLG8pe3JldHVybiBlLmNhbGwodCxyLG4sbyl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBlLmFwcGx5KHQsYXJndW1lbnRzKX19fSx7Ii4vJC5hLWZ1bmN0aW9uIjoyN31dLDM0OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09ZSl0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNhbGwgbWV0aG9kIG9uICAiK2UpO3JldHVybiBlfX0se31dLDM1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPSFlKCIuLyQuZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LHsiLi8kLmZhaWxzIjozOX1dLDM2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi8kLmlzLW9iamVjdCIpLG89ZSgiLi8kLmdsb2JhbCIpLmRvY3VtZW50LGk9bihvKSYmbihvLmNyZWF0ZUVsZW1lbnQpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaT9vLmNyZWF0ZUVsZW1lbnQoZSk6e319fSx7Ii4vJC5nbG9iYWwiOjQyLCIuLyQuaXMtb2JqZWN0Ijo1MH1dLDM3OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi8kIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PW4uZ2V0S2V5cyhlKSxyPW4uZ2V0U3ltYm9scztpZihyKWZvcih2YXIgbyxpPXIoZSksYT1uLmlzRW51bSxzPTA7aS5sZW5ndGg+czspYS5jYWxsKGUsbz1pW3MrK10pJiZ0LnB1c2gobyk7cmV0dXJuIHR9fSx7Ii4vJCI6NTd9XSwzODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vJC5nbG9iYWwiKSxvPWUoIi4vJC5jb3JlIiksaT1lKCIuLyQuY3R4IiksYT0icHJvdG90eXBlIixzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgdSxsLGMsZj1lJnMuRixoPWUmcy5HLHA9ZSZzLlMsZD1lJnMuUCx5PWUmcy5CLG09ZSZzLlcsdj1oP286b1t0XXx8KG9bdF09e30pLGc9aD9uOnA/blt0XTooblt0XXx8e30pW2FdO2gmJihyPXQpO2Zvcih1IGluIHIpbD0hZiYmZyYmdSBpbiBnLGwmJnUgaW4gdnx8KGM9bD9nW3VdOnJbdV0sdlt1XT1oJiYiZnVuY3Rpb24iIT10eXBlb2YgZ1t1XT9yW3VdOnkmJmw/aShjLG4pOm0mJmdbdV09PWM/ZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBlP25ldyBlKHQpOmUodCl9O3JldHVybiB0W2FdPWVbYV0sdH0oYyk6ZCYmImZ1bmN0aW9uIj09dHlwZW9mIGM/aShGdW5jdGlvbi5jYWxsLGMpOmMsZCYmKCh2W2FdfHwodlthXT17fSkpW3VdPWMpKX07cy5GPTEscy5HPTIscy5TPTQscy5QPTgscy5CPTE2LHMuVz0zMix0LmV4cG9ydHM9c30seyIuLyQuY29yZSI6MzIsIi4vJC5jdHgiOjMzLCIuLyQuZ2xvYmFsIjo0Mn1dLDM5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4hIWUoKX1jYXRjaCh0KXtyZXR1cm4hMH19fSx7fV0sNDA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLyQuY3R4Iiksbz1lKCIuLyQuaXRlci1jYWxsIiksaT1lKCIuLyQuaXMtYXJyYXktaXRlciIpLGE9ZSgiLi8kLmFuLW9iamVjdCIpLHM9ZSgiLi8kLnRvLWxlbmd0aCIpLHU9ZSgiLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbCl7dmFyIGMsZixoLHA9dShlKSxkPW4ocixsLHQ/MjoxKSx5PTA7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHApdGhyb3cgVHlwZUVycm9yKGUrIiBpcyBub3QgaXRlcmFibGUhIik7aWYoaShwKSlmb3IoYz1zKGUubGVuZ3RoKTtjPnk7eSsrKXQ/ZChhKGY9ZVt5XSlbMF0sZlsxXSk6ZChlW3ldKTtlbHNlIGZvcihoPXAuY2FsbChlKTshKGY9aC5uZXh0KCkpLmRvbmU7KW8oaCxkLGYudmFsdWUsdCl9fSx7Ii4vJC5hbi1vYmplY3QiOjI5LCIuLyQuY3R4IjozMywiLi8kLmlzLWFycmF5LWl0ZXIiOjQ4LCIuLyQuaXRlci1jYWxsIjo1MSwiLi8kLnRvLWxlbmd0aCI6NzYsIi4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kIjo4MH1dLDQxOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi8kLnRvLWlvYmplY3QiKSxvPWUoIi4vJCIpLmdldE5hbWVzLGk9e30udG9TdHJpbmcsYT0ib2JqZWN0Ij09dHlwZW9mIHdpbmRvdyYmT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KTpbXSxzPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gbyhlKX1jYXRjaCh0KXtyZXR1cm4gYS5zbGljZSgpfX07dC5leHBvcnRzLmdldD1mdW5jdGlvbihlKXtyZXR1cm4gYSYmIltvYmplY3QgV2luZG93XSI9PWkuY2FsbChlKT9zKGUpOm8obihlKSl9fSx7Ii4vJCI6NTcsIi4vJC50by1pb2JqZWN0Ijo3NX1dLDQyOltmdW5jdGlvbihlLHQscil7dmFyIG49dC5leHBvcnRzPSJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuTWF0aD09TWF0aD93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmJiZzZWxmLk1hdGg9PU1hdGg/c2VsZjpGdW5jdGlvbigicmV0dXJuIHRoaXMiKSgpOyJudW1iZXIiPT10eXBlb2YgX19nJiYoX19nPW4pfSx7fV0sNDM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj17fS5oYXNPd25Qcm9wZXJ0eTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbi5jYWxsKGUsdCl9fSx7fV0sNDQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLyQiKSxvPWUoIi4vJC5wcm9wZXJ0eS1kZXNjIik7dC5leHBvcnRzPWUoIi4vJC5kZXNjcmlwdG9ycyIpP2Z1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5zZXREZXNjKGUsdCxvKDEscikpfTpmdW5jdGlvbihlLHQscil7cmV0dXJuIGVbdF09cixlfX0seyIuLyQiOjU3LCIuLyQuZGVzY3JpcHRvcnMiOjM1LCIuLyQucHJvcGVydHktZGVzYyI6NjJ9XSw0NTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1lKCIuLyQuZ2xvYmFsIikuZG9jdW1lbnQmJmRvY3VtZW50LmRvY3VtZW50RWxlbWVudH0seyIuLyQuZ2xvYmFsIjo0Mn1dLDQ2OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj12b2lkIDA9PT1yO3N3aXRjaCh0Lmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuP2UoKTplLmNhbGwocik7Y2FzZSAxOnJldHVybiBuP2UodFswXSk6ZS5jYWxsKHIsdFswXSk7Y2FzZSAyOnJldHVybiBuP2UodFswXSx0WzFdKTplLmNhbGwocix0WzBdLHRbMV0pO2Nhc2UgMzpyZXR1cm4gbj9lKHRbMF0sdFsxXSx0WzJdKTplLmNhbGwocix0WzBdLHRbMV0sdFsyXSk7Y2FzZSA0OnJldHVybiBuP2UodFswXSx0WzFdLHRbMl0sdFszXSk6ZS5jYWxsKHIsdFswXSx0WzFdLHRbMl0sdFszXSl9cmV0dXJuIGUuYXBwbHkocix0KX19LHt9XSw0NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vJC5jb2YiKTt0LmV4cG9ydHM9T2JqZWN0KCJ6IikucHJvcGVydHlJc0VudW1lcmFibGUoMCk/T2JqZWN0OmZ1bmN0aW9uKGUpe3JldHVybiJTdHJpbmciPT1uKGUpP2Uuc3BsaXQoIiIpOk9iamVjdChlKX19LHsiLi8kLmNvZiI6MzF9XSw0ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vJC5pdGVyYXRvcnMiKSxvPWUoIi4vJC53a3MiKSgiaXRlcmF0b3IiKSxpPUFycmF5LnByb3RvdHlwZTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PWUmJihuLkFycmF5PT09ZXx8aVtvXT09PWUpfX0seyIuLyQuaXRlcmF0b3JzIjo1NiwiLi8kLndrcyI6Nzl9XSw0OTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vJC5jb2YiKTt0LmV4cG9ydHM9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIkFycmF5Ij09bihlKX19LHsiLi8kLmNvZiI6MzF9XSw1MDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4ib2JqZWN0Ij09dHlwZW9mIGU/bnVsbCE9PWU6ImZ1bmN0aW9uIj09dHlwZW9mIGV9fSx7fV0sNTE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLyQuYW4tb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG8pe3RyeXtyZXR1cm4gbz90KG4ocilbMF0sclsxXSk6dChyKX1jYXRjaChpKXt2YXIgYT1lWyJyZXR1cm4iXTt0aHJvdyB2b2lkIDAhPT1hJiZuKGEuY2FsbChlKSksaX19fSx7Ii4vJC5hbi1vYmplY3QiOjI5fV0sNTI6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi8kIiksbz1lKCIuLyQucHJvcGVydHktZGVzYyIpLGk9ZSgiLi8kLnNldC10by1zdHJpbmctdGFnIiksYT17fTtlKCIuLyQuaGlkZSIpKGEsZSgiLi8kLndrcyIpKCJpdGVyYXRvciIpLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSx0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2UucHJvdG90eXBlPW4uY3JlYXRlKGEse25leHQ6bygxLHIpfSksaShlLHQrIiBJdGVyYXRvciIpfX0seyIuLyQiOjU3LCIuLyQuaGlkZSI6NDQsIi4vJC5wcm9wZXJ0eS1kZXNjIjo2MiwiLi8kLnNldC10by1zdHJpbmctdGFnIjo2OCwiLi8kLndrcyI6Nzl9XSw1MzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1lKCIuLyQubGlicmFyeSIpLG89ZSgiLi8kLmV4cG9ydCIpLGk9ZSgiLi8kLnJlZGVmaW5lIiksYT1lKCIuLyQuaGlkZSIpLHM9ZSgiLi8kLmhhcyIpLHU9ZSgiLi8kLml0ZXJhdG9ycyIpLGw9ZSgiLi8kLml0ZXItY3JlYXRlIiksYz1lKCIuLyQuc2V0LXRvLXN0cmluZy10YWciKSxmPWUoIi4vJCIpLmdldFByb3RvLGg9ZSgiLi8kLndrcyIpKCJpdGVyYXRvciIpLHA9IShbXS5rZXlzJiYibmV4dCJpbltdLmtleXMoKSksZD0iQEBpdGVyYXRvciIseT0ia2V5cyIsbT0idmFsdWVzIix2PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscixnLGIsRSx3KXtsKHIsdCxnKTt2YXIgJCxfLE09ZnVuY3Rpb24oZSl7aWYoIXAmJmUgaW4gUClyZXR1cm4gUFtlXTtzd2l0Y2goZSl7Y2FzZSB5OnJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfTtjYXNlIG06cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsZSl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfX0sTz10KyIgSXRlcmF0b3IiLGo9Yj09bSx4PSExLFA9ZS5wcm90b3R5cGUsUj1QW2hdfHxQW2RdfHxiJiZQW2JdLGs9Unx8TShiKTtpZihSKXt2YXIgUz1mKGsuY2FsbChuZXcgZSkpO2MoUyxPLCEwKSwhbiYmcyhQLGQpJiZhKFMsaCx2KSxqJiZSLm5hbWUhPT1tJiYoeD0hMCxrPWZ1bmN0aW9uKCl7cmV0dXJuIFIuY2FsbCh0aGlzKX0pfWlmKG4mJiF3fHwhcCYmIXgmJlBbaF18fGEoUCxoLGspLHVbdF09ayx1W09dPXYsYilpZigkPXt2YWx1ZXM6aj9rOk0obSksa2V5czpFP2s6TSh5KSxlbnRyaWVzOmo/TSgiZW50cmllcyIpOmt9LHcpZm9yKF8gaW4gJClfIGluIFB8fGkoUCxfLCRbX10pO2Vsc2UgbyhvLlArby5GKihwfHx4KSx0LCQpO3JldHVybiAkfX0seyIuLyQiOjU3LCIuLyQuZXhwb3J0IjozOCwiLi8kLmhhcyI6NDMsIi4vJC5oaWRlIjo0NCwiLi8kLml0ZXItY3JlYXRlIjo1MiwiLi8kLml0ZXJhdG9ycyI6NTYsIi4vJC5saWJyYXJ5Ijo1OSwiLi8kLnJlZGVmaW5lIjo2NCwiLi8kLnNldC10by1zdHJpbmctdGFnIjo2OCwiLi8kLndrcyI6Nzl9XSw1NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vJC53a3MiKSgiaXRlcmF0b3IiKSxvPSExO3RyeXt2YXIgaT1bN11bbl0oKTtpWyJyZXR1cm4iXT1mdW5jdGlvbigpe289ITB9LEFycmF5LmZyb20oaSxmdW5jdGlvbigpe3Rocm93IDJ9KX1jYXRjaChhKXt9dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIXQmJiFvKXJldHVybiExO3ZhciByPSExO3RyeXt2YXIgaT1bN10sYT1pW25dKCk7YS5uZXh0PWZ1bmN0aW9uKCl7cj0hMH0saVtuXT1mdW5jdGlvbigpe3JldHVybiBhfSxlKGkpfWNhdGNoKHMpe31yZXR1cm4gcn19LHsiLi8kLndrcyI6Nzl9XSw1NTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybnt2YWx1ZTp0LGRvbmU6ISFlfX19LHt9XSw1NjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17fX0se31dLDU3OltmdW5jdGlvbihlLHQscil7dmFyIG49T2JqZWN0O3QuZXhwb3J0cz17Y3JlYXRlOm4uY3JlYXRlLGdldFByb3RvOm4uZ2V0UHJvdG90eXBlT2YsaXNFbnVtOnt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLGdldERlc2M6bi5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Isc2V0RGVzYzpuLmRlZmluZVByb3BlcnR5LHNldERlc2NzOm4uZGVmaW5lUHJvcGVydGllcyxnZXRLZXlzOm4ua2V5cyxnZXROYW1lczpuLmdldE93blByb3BlcnR5TmFtZXMsZ2V0U3ltYm9sczpuLmdldE93blByb3BlcnR5U3ltYm9scyxlYWNoOltdLmZvckVhY2h9fSx7fV0sNTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLyQiKSxvPWUoIi4vJC50by1pb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByLGk9byhlKSxhPW4uZ2V0S2V5cyhpKSxzPWEubGVuZ3RoLHU9MDtzPnU7KWlmKGlbcj1hW3UrK11dPT09dClyZXR1cm4gcn19LHsiLi8kIjo1NywiLi8kLnRvLWlvYmplY3QiOjc1fV0sNTk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ITB9LHt9XSw2MDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuLG8saSxhPWUoIi4vJC5nbG9iYWwiKSxzPWUoIi4vJC50YXNrIikuc2V0LHU9YS5NdXRhdGlvbk9ic2VydmVyfHxhLldlYktpdE11dGF0aW9uT2JzZXJ2ZXIsbD1hLnByb2Nlc3MsYz1hLlByb21pc2UsZj0icHJvY2VzcyI9PWUoIi4vJC5jb2YiKShsKSxoPWZ1bmN0aW9uKCl7dmFyIGUsdCxyO2ZvcihmJiYoZT1sLmRvbWFpbikmJihsLmRvbWFpbj1udWxsLGUuZXhpdCgpKTtuOyl0PW4uZG9tYWluLHI9bi5mbix0JiZ0LmVudGVyKCkscigpLHQmJnQuZXhpdCgpLG49bi5uZXh0O289dm9pZCAwLGUmJmUuZW50ZXIoKX07aWYoZilpPWZ1bmN0aW9uKCl7bC5uZXh0VGljayhoKX07ZWxzZSBpZih1KXt2YXIgcD0xLGQ9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIiIpO25ldyB1KGgpLm9ic2VydmUoZCx7Y2hhcmFjdGVyRGF0YTohMH0pLGk9ZnVuY3Rpb24oKXtkLmRhdGE9cD0tcH19ZWxzZSBpPWMmJmMucmVzb2x2ZT9mdW5jdGlvbigpe2MucmVzb2x2ZSgpLnRoZW4oaCl9OmZ1bmN0aW9uKCl7cy5jYWxsKGEsaCl9O3QuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD17Zm46ZSxuZXh0OnZvaWQgMCxkb21haW46ZiYmbC5kb21haW59O28mJihvLm5leHQ9dCksbnx8KG49dCxpKCkpLG89dH19LHsiLi8kLmNvZiI6MzEsIi4vJC5nbG9iYWwiOjQyLCIuLyQudGFzayI6NzN9XSw2MTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vJC5leHBvcnQiKSxvPWUoIi4vJC5jb3JlIiksaT1lKCIuLyQuZmFpbHMiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj0oby5PYmplY3R8fHt9KVtlXXx8T2JqZWN0W2VdLGE9e307YVtlXT10KHIpLG4obi5TK24uRippKGZ1bmN0aW9uKCl7cigxKX0pLCJPYmplY3QiLGEpfX0seyIuLyQuY29yZSI6MzIsIi4vJC5leHBvcnQiOjM4LCIuLyQuZmFpbHMiOjM5fV0sNjI6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57ZW51bWVyYWJsZTohKDEmZSksY29uZmlndXJhYmxlOiEoMiZlKSx3cml0YWJsZTohKDQmZSksdmFsdWU6dH19fSx7fV0sNjM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLyQucmVkZWZpbmUiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHIgaW4gdCluKGUscix0W3JdKTtyZXR1cm4gZX19LHsiLi8kLnJlZGVmaW5lIjo2NH1dLDY0OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWUoIi4vJC5oaWRlIil9LHsiLi8kLmhpZGUiOjQ0fV0sNjU6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9T2JqZWN0LmlzfHxmdW5jdGlvbihlLHQpe3JldHVybiBlPT09dD8wIT09ZXx8MS9lPT09MS90OmUhPWUmJnQhPXR9fSx7fV0sNjY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLyQiKS5nZXREZXNjLG89ZSgiLi8kLmlzLW9iamVjdCIpLGk9ZSgiLi8kLmFuLW9iamVjdCIpLGE9ZnVuY3Rpb24oZSx0KXtpZihpKGUpLCFvKHQpJiZudWxsIT09dCl0aHJvdyBUeXBlRXJyb3IodCsiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlISIpfTt0LmV4cG9ydHM9e3NldDpPYmplY3Quc2V0UHJvdG90eXBlT2Z8fCgiX19wcm90b19fImlue30/ZnVuY3Rpb24odCxyLG8pe3RyeXtvPWUoIi4vJC5jdHgiKShGdW5jdGlvbi5jYWxsLG4oT2JqZWN0LnByb3RvdHlwZSwiX19wcm90b19fIikuc2V0LDIpLG8odCxbXSkscj0hKHQgaW5zdGFuY2VvZiBBcnJheSl9Y2F0Y2goaSl7cj0hMH1yZXR1cm4gZnVuY3Rpb24oZSx0KXtyZXR1cm4gYShlLHQpLHI/ZS5fX3Byb3RvX189dDpvKGUsdCksZX19KHt9LCExKTp2b2lkIDApLGNoZWNrOmF9fSx7Ii4vJCI6NTcsIi4vJC5hbi1vYmplY3QiOjI5LCIuLyQuY3R4IjozMywiLi8kLmlzLW9iamVjdCI6NTB9XSw2NzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1lKCIuLyQuY29yZSIpLG89ZSgiLi8kIiksaT1lKCIuLyQuZGVzY3JpcHRvcnMiKSxhPWUoIi4vJC53a3MiKSgic3BlY2llcyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1uW2VdO2kmJnQmJiF0W2FdJiZvLnNldERlc2ModCxhLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9fSl9fSx7Ii4vJCI6NTcsIi4vJC5jb3JlIjozMiwiLi8kLmRlc2NyaXB0b3JzIjozNSwiLi8kLndrcyI6Nzl9XSw2ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vJCIpLnNldERlc2Msbz1lKCIuLyQuaGFzIiksaT1lKCIuLyQud2tzIikoInRvU3RyaW5nVGFnIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtlJiYhbyhlPXI/ZTplLnByb3RvdHlwZSxpKSYmbihlLGkse2NvbmZpZ3VyYWJsZTohMCx2YWx1ZTp0fSl9fSx7Ii4vJCI6NTcsIi4vJC5oYXMiOjQzLCIuLyQud2tzIjo3OX1dLDY5OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi8kLmdsb2JhbCIpLG89Il9fY29yZS1qc19zaGFyZWRfXyIsaT1uW29dfHwobltvXT17fSk7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpW2VdfHwoaVtlXT17fSl9fSx7Ii4vJC5nbG9iYWwiOjQyfV0sNzA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLyQuYW4tb2JqZWN0Iiksbz1lKCIuLyQuYS1mdW5jdGlvbiIpLGk9ZSgiLi8kLndrcyIpKCJzcGVjaWVzIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsYT1uKGUpLmNvbnN0cnVjdG9yO3JldHVybiB2b2lkIDA9PT1hfHx2b2lkIDA9PShyPW4oYSlbaV0pP3Q6byhyKX19LHsiLi8kLmEtZnVuY3Rpb24iOjI3LCIuLyQuYW4tb2JqZWN0IjoyOSwiLi8kLndrcyI6Nzl9XSw3MTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgVHlwZUVycm9yKHIrIjogdXNlIHRoZSAnbmV3JyBvcGVyYXRvciEiKTtyZXR1cm4gZX19LHt9XSw3MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vJC50by1pbnRlZ2VyIiksbz1lKCIuLyQuZGVmaW5lZCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxyKXt2YXIgaSxhLHM9U3RyaW5nKG8odCkpLHU9bihyKSxsPXMubGVuZ3RoO3JldHVybiAwPnV8fHU+PWw/ZT8iIjp2b2lkIDA6KGk9cy5jaGFyQ29kZUF0KHUpLDU1Mjk2Pml8fGk+NTYzMTl8fHUrMT09PWx8fChhPXMuY2hhckNvZGVBdCh1KzEpKTw1NjMyMHx8YT41NzM0Mz9lP3MuY2hhckF0KHUpOmk6ZT9zLnNsaWNlKHUsdSsyKTooaS01NTI5Njw8MTApKyhhLTU2MzIwKSs2NTUzNil9fX0seyIuLyQuZGVmaW5lZCI6MzQsIi4vJC50by1pbnRlZ2VyIjo3NH1dLDczOltmdW5jdGlvbihlLHQscil7dmFyIG4sbyxpLGE9ZSgiLi8kLmN0eCIpLHM9ZSgiLi8kLmludm9rZSIpLHU9ZSgiLi8kLmh0bWwiKSxsPWUoIi4vJC5kb20tY3JlYXRlIiksYz1lKCIuLyQuZ2xvYmFsIiksZj1jLnByb2Nlc3MsaD1jLnNldEltbWVkaWF0ZSxwPWMuY2xlYXJJbW1lZGlhdGUsZD1jLk1lc3NhZ2VDaGFubmVsLHk9MCxtPXt9LHY9Im9ucmVhZHlzdGF0ZWNoYW5nZSIsZz1mdW5jdGlvbigpe3ZhciBlPSt0aGlzO2lmKG0uaGFzT3duUHJvcGVydHkoZSkpe3ZhciB0PW1bZV07ZGVsZXRlIG1bZV0sdCgpfX0sYj1mdW5jdGlvbihlKXtnLmNhbGwoZS5kYXRhKX07aCYmcHx8KGg9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLHI9MTthcmd1bWVudHMubGVuZ3RoPnI7KXQucHVzaChhcmd1bWVudHNbcisrXSk7cmV0dXJuIG1bKyt5XT1mdW5jdGlvbigpe3MoImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTpGdW5jdGlvbihlKSx0KX0sbih5KSx5fSxwPWZ1bmN0aW9uKGUpe2RlbGV0ZSBtW2VdfSwicHJvY2VzcyI9PWUoIi4vJC5jb2YiKShmKT9uPWZ1bmN0aW9uKGUpe2YubmV4dFRpY2soYShnLGUsMSkpfTpkPyhvPW5ldyBkLGk9by5wb3J0MixvLnBvcnQxLm9ubWVzc2FnZT1iLG49YShpLnBvc3RNZXNzYWdlLGksMSkpOmMuYWRkRXZlbnRMaXN0ZW5lciYmImZ1bmN0aW9uIj09dHlwZW9mIHBvc3RNZXNzYWdlJiYhYy5pbXBvcnRTY3JpcHRzPyhuPWZ1bmN0aW9uKGUpe2MucG9zdE1lc3NhZ2UoZSsiIiwiKiIpfSxjLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLGIsITEpKTpuPXYgaW4gbCgic2NyaXB0Iik/ZnVuY3Rpb24oZSl7dS5hcHBlbmRDaGlsZChsKCJzY3JpcHQiKSlbdl09ZnVuY3Rpb24oKXt1LnJlbW92ZUNoaWxkKHRoaXMpLGcuY2FsbChlKX19OmZ1bmN0aW9uKGUpe3NldFRpbWVvdXQoYShnLGUsMSksMCl9KSx0LmV4cG9ydHM9e3NldDpoLGNsZWFyOnB9fSx7Ii4vJC5jb2YiOjMxLCIuLyQuY3R4IjozMywiLi8kLmRvbS1jcmVhdGUiOjM2LCIuLyQuZ2xvYmFsIjo0MiwiLi8kLmh0bWwiOjQ1LCIuLyQuaW52b2tlIjo0Nn1dLDc0OltmdW5jdGlvbihlLHQscil7dmFyIG49TWF0aC5jZWlsLG89TWF0aC5mbG9vcjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGlzTmFOKGU9K2UpPzA6KGU+MD9vOm4pKGUpfX0se31dLDc1OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi8kLmlvYmplY3QiKSxvPWUoIi4vJC5kZWZpbmVkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuKG8oZSkpfX0seyIuLyQuZGVmaW5lZCI6MzQsIi4vJC5pb2JqZWN0Ijo0N31dLDc2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi8kLnRvLWludGVnZXIiKSxvPU1hdGgubWluO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZT4wP28obihlKSw5MDA3MTk5MjU0NzQwOTkxKTowfX0seyIuLyQudG8taW50ZWdlciI6NzR9XSw3NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vJC5kZWZpbmVkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QobihlKSl9fSx7Ii4vJC5kZWZpbmVkIjozNH1dLDc4OltmdW5jdGlvbihlLHQscil7dmFyIG49MCxvPU1hdGgucmFuZG9tKCk7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiJTeW1ib2woIi5jb25jYXQodm9pZCAwPT09ZT8iIjplLCIpXyIsKCsrbitvKS50b1N0cmluZygzNikpfX0se31dLDc5OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi8kLnNoYXJlZCIpKCJ3a3MiKSxvPWUoIi4vJC51aWQiKSxpPWUoIi4vJC5nbG9iYWwiKS5TeW1ib2w7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuW2VdfHwobltlXT1pJiZpW2VdfHwoaXx8bykoIlN5bWJvbC4iK2UpKX19LHsiLi8kLmdsb2JhbCI6NDIsIi4vJC5zaGFyZWQiOjY5LCIuLyQudWlkIjo3OH1dLDgwOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi8kLmNsYXNzb2YiKSxvPWUoIi4vJC53a3MiKSgiaXRlcmF0b3IiKSxpPWUoIi4vJC5pdGVyYXRvcnMiKTt0LmV4cG9ydHM9ZSgiLi8kLmNvcmUiKS5nZXRJdGVyYXRvck1ldGhvZD1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwIT1lP2Vbb118fGVbIkBAaXRlcmF0b3IiXXx8aVtuKGUpXTp2b2lkIDB9fSx7Ii4vJC5jbGFzc29mIjozMCwiLi8kLmNvcmUiOjMyLCIuLyQuaXRlcmF0b3JzIjo1NiwiLi8kLndrcyI6Nzl9XSw4MTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1lKCIuLyQuYWRkLXRvLXVuc2NvcGFibGVzIiksbz1lKCIuLyQuaXRlci1zdGVwIiksaT1lKCIuLyQuaXRlcmF0b3JzIiksYT1lKCIuLyQudG8taW9iamVjdCIpO3QuZXhwb3J0cz1lKCIuLyQuaXRlci1kZWZpbmUiKShBcnJheSwiQXJyYXkiLGZ1bmN0aW9uKGUsdCl7dGhpcy5fdD1hKGUpLHRoaXMuX2k9MCx0aGlzLl9rPXR9LGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fdCx0PXRoaXMuX2sscj10aGlzLl9pKys7cmV0dXJuIWV8fHI+PWUubGVuZ3RoPyh0aGlzLl90PXZvaWQgMCxvKDEpKToia2V5cyI9PXQ/bygwLHIpOiJ2YWx1ZXMiPT10P28oMCxlW3JdKTpvKDAsW3IsZVtyXV0pfSwidmFsdWVzIiksaS5Bcmd1bWVudHM9aS5BcnJheSxuKCJrZXlzIiksbigidmFsdWVzIiksbigiZW50cmllcyIpfSx7Ii4vJC5hZGQtdG8tdW5zY29wYWJsZXMiOjI4LCIuLyQuaXRlci1kZWZpbmUiOjUzLCIuLyQuaXRlci1zdGVwIjo1NSwiLi8kLml0ZXJhdG9ycyI6NTYsIi4vJC50by1pb2JqZWN0Ijo3NX1dLDgyOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi8kLmlzLW9iamVjdCIpO2UoIi4vJC5vYmplY3Qtc2FwIikoImZyZWV6ZSIsZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBlJiZuKHQpP2UodCk6dH19KX0seyIuLyQuaXMtb2JqZWN0Ijo1MCwiLi8kLm9iamVjdC1zYXAiOjYxfV0sODM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLyQudG8taW9iamVjdCIpO2UoIi4vJC5vYmplY3Qtc2FwIikoImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscil7cmV0dXJuIGUobih0KSxyKX19KX0seyIuLyQub2JqZWN0LXNhcCI6NjEsIi4vJC50by1pb2JqZWN0Ijo3NX1dLDg0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi8kLnRvLW9iamVjdCIpO2UoIi4vJC5vYmplY3Qtc2FwIikoImdldFByb3RvdHlwZU9mIixmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGUobih0KSl9fSl9LHsiLi8kLm9iamVjdC1zYXAiOjYxLCIuLyQudG8tb2JqZWN0Ijo3N31dLDg1OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi8kLnRvLW9iamVjdCIpO2UoIi4vJC5vYmplY3Qtc2FwIikoImtleXMiLGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gZShuKHQpKX19KX0seyIuLyQub2JqZWN0LXNhcCI6NjEsIi4vJC50by1vYmplY3QiOjc3fV0sODY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLyQuZXhwb3J0Iik7bihuLlMsIk9iamVjdCIse3NldFByb3RvdHlwZU9mOmUoIi4vJC5zZXQtcHJvdG8iKS5zZXR9KX0seyIuLyQuZXhwb3J0IjozOCwiLi8kLnNldC1wcm90byI6NjZ9XSw4NzpbZnVuY3Rpb24oZSx0LHIpe30se31dLDg4OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuLG89ZSgiLi8kIiksaT1lKCIuLyQubGlicmFyeSIpLGE9ZSgiLi8kLmdsb2JhbCIpLHM9ZSgiLi8kLmN0eCIpLHU9ZSgiLi8kLmNsYXNzb2YiKSxsPWUoIi4vJC5leHBvcnQiKSxjPWUoIi4vJC5pcy1vYmplY3QiKSxmPWUoIi4vJC5hbi1vYmplY3QiKSxoPWUoIi4vJC5hLWZ1bmN0aW9uIikscD1lKCIuLyQuc3RyaWN0LW5ldyIpLGQ9ZSgiLi8kLmZvci1vZiIpLHk9ZSgiLi8kLnNldC1wcm90byIpLnNldCxtPWUoIi4vJC5zYW1lLXZhbHVlIiksdj1lKCIuLyQud2tzIikoInNwZWNpZXMiKSxnPWUoIi4vJC5zcGVjaWVzLWNvbnN0cnVjdG9yIiksYj1lKCIuLyQubWljcm90YXNrIiksRT0iUHJvbWlzZSIsdz1hLnByb2Nlc3MsJD0icHJvY2VzcyI9PXUodyksXz1hW0VdLE09ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IF8oZnVuY3Rpb24oKXt9KTtyZXR1cm4gZSYmKHQuY29uc3RydWN0b3I9T2JqZWN0KSxfLnJlc29sdmUodCk9PT10fSxPPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChlKXt2YXIgcj1uZXcgXyhlKTtyZXR1cm4geShyLHQucHJvdG90eXBlKSxyfXZhciByPSExO3RyeXtpZihyPV8mJl8ucmVzb2x2ZSYmTSgpLHkodCxfKSx0LnByb3RvdHlwZT1vLmNyZWF0ZShfLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnR9fSksdC5yZXNvbHZlKDUpLnRoZW4oZnVuY3Rpb24oKXt9KWluc3RhbmNlb2YgdHx8KHI9ITEpLHImJmUoIi4vJC5kZXNjcmlwdG9ycyIpKXt2YXIgbj0hMTtfLnJlc29sdmUoby5zZXREZXNjKHt9LCJ0aGVuIix7Z2V0OmZ1bmN0aW9uKCl7bj0hMH19KSkscj1ufX1jYXRjaChpKXtyPSExfXJldHVybiByfSgpLGo9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaSYmZT09PV8mJnQ9PT1uPyEwOm0oZSx0KX0seD1mdW5jdGlvbihlKXt2YXIgdD1mKGUpW3ZdO3JldHVybiB2b2lkIDAhPXQ/dDplfSxQPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiBjKGUpJiYiZnVuY3Rpb24iPT10eXBlb2YodD1lLnRoZW4pP3Q6ITF9LFI9ZnVuY3Rpb24oZSl7dmFyIHQscjt0aGlzLnByb21pc2U9bmV3IGUoZnVuY3Rpb24oZSxuKXtpZih2b2lkIDAhPT10fHx2b2lkIDAhPT1yKXRocm93IFR5cGVFcnJvcigiQmFkIFByb21pc2UgY29uc3RydWN0b3IiKTt0PWUscj1ufSksdGhpcy5yZXNvbHZlPWgodCksdGhpcy5yZWplY3Q9aChyKX0saz1mdW5jdGlvbihlKXt0cnl7ZSgpfWNhdGNoKHQpe3JldHVybntlcnJvcjp0fX19LFM9ZnVuY3Rpb24oZSx0KXtpZighZS5uKXtlLm49ITA7dmFyIHI9ZS5jO2IoZnVuY3Rpb24oKXtmb3IodmFyIG49ZS52LG89MT09ZS5zLGk9MCxzPWZ1bmN0aW9uKHQpe3ZhciByLGksYT1vP3Qub2s6dC5mYWlsLHM9dC5yZXNvbHZlLHU9dC5yZWplY3Q7dHJ5e2E/KG98fChlLmg9ITApLHI9YT09PSEwP246YShuKSxyPT09dC5wcm9taXNlP3UoVHlwZUVycm9yKCJQcm9taXNlLWNoYWluIGN5Y2xlIikpOihpPVAocikpP2kuY2FsbChyLHMsdSk6cyhyKSk6dShuKX1jYXRjaChsKXt1KGwpfX07ci5sZW5ndGg+aTspcyhyW2krK10pO3IubGVuZ3RoPTAsZS5uPSExLHQmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgdCxyLG89ZS5wO0EobykmJigkP3cuZW1pdCgidW5oYW5kbGVkUmVqZWN0aW9uIixuLG8pOih0PWEub251bmhhbmRsZWRyZWplY3Rpb24pP3Qoe3Byb21pc2U6byxyZWFzb246bn0pOihyPWEuY29uc29sZSkmJnIuZXJyb3ImJnIuZXJyb3IoIlVuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbiIsbikpLGUuYT12b2lkIDB9LDEpfSl9fSxBPWZ1bmN0aW9uKGUpe3ZhciB0LHI9ZS5fZCxuPXIuYXx8ci5jLG89MDtpZihyLmgpcmV0dXJuITE7Zm9yKDtuLmxlbmd0aD5vOylpZih0PW5bbysrXSx0LmZhaWx8fCFBKHQucHJvbWlzZSkpcmV0dXJuITE7cmV0dXJuITB9LFQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0LmR8fCh0LmQ9ITAsdD10LnJ8fHQsdC52PWUsdC5zPTIsdC5hPXQuYy5zbGljZSgpLFModCwhMCkpfSxOPWZ1bmN0aW9uKGUpe3ZhciB0LHI9dGhpcztpZighci5kKXtyLmQ9ITAscj1yLnJ8fHI7dHJ5e2lmKHIucD09PWUpdGhyb3cgVHlwZUVycm9yKCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZiIpOyh0PVAoZSkpP2IoZnVuY3Rpb24oKXt2YXIgbj17cjpyLGQ6ITF9O3RyeXt0LmNhbGwoZSxzKE4sbiwxKSxzKFQsbiwxKSl9Y2F0Y2gobyl7VC5jYWxsKG4sbyl9fSk6KHIudj1lLHIucz0xLFMociwhMSkpfWNhdGNoKG4pe1QuY2FsbCh7cjpyLGQ6ITF9LG4pfX19O098fChfPWZ1bmN0aW9uKGUpe2goZSk7dmFyIHQ9dGhpcy5fZD17cDpwKHRoaXMsXyxFKSxjOltdLGE6dm9pZCAwLHM6MCxkOiExLHY6dm9pZCAwLGg6ITEsbjohMX07dHJ5e2UocyhOLHQsMSkscyhULHQsMSkpfWNhdGNoKHIpe1QuY2FsbCh0LHIpfX0sZSgiLi8kLnJlZGVmaW5lLWFsbCIpKF8ucHJvdG90eXBlLHt0aGVuOmZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IFIoZyh0aGlzLF8pKSxuPXIucHJvbWlzZSxvPXRoaXMuX2Q7cmV0dXJuIHIub2s9ImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTohMCxyLmZhaWw9ImZ1bmN0aW9uIj09dHlwZW9mIHQmJnQsby5jLnB1c2gociksby5hJiZvLmEucHVzaChyKSxvLnMmJlMobywhMSksbn0sImNhdGNoIjpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy50aGVuKHZvaWQgMCxlKX19KSksbChsLkcrbC5XK2wuRiohTyx7UHJvbWlzZTpffSksZSgiLi8kLnNldC10by1zdHJpbmctdGFnIikoXyxFKSxlKCIuLyQuc2V0LXNwZWNpZXMiKShFKSxuPWUoIi4vJC5jb3JlIilbRV0sbChsLlMrbC5GKiFPLEUse3JlamVjdDpmdW5jdGlvbihlKXt2YXIgdD1uZXcgUih0aGlzKSxyPXQucmVqZWN0O3JldHVybiByKGUpLHQucHJvbWlzZX19KSxsKGwuUytsLkYqKCFPfHxNKCEwKSksRSx7cmVzb2x2ZTpmdW5jdGlvbihlKXtpZihlIGluc3RhbmNlb2YgXyYmaihlLmNvbnN0cnVjdG9yLHRoaXMpKXJldHVybiBlO3ZhciB0PW5ldyBSKHRoaXMpLHI9dC5yZXNvbHZlO3JldHVybiByKGUpLHQucHJvbWlzZX19KSxsKGwuUytsLkYqIShPJiZlKCIuLyQuaXRlci1kZXRlY3QiKShmdW5jdGlvbihlKXtfLmFsbChlKVsiY2F0Y2giXShmdW5jdGlvbigpe30pfSkpLEUse2FsbDpmdW5jdGlvbihlKXt2YXIgdD14KHRoaXMpLHI9bmV3IFIodCksbj1yLnJlc29sdmUsaT1yLnJlamVjdCxhPVtdLHM9ayhmdW5jdGlvbigpe2QoZSwhMSxhLnB1c2gsYSk7dmFyIHI9YS5sZW5ndGgscz1BcnJheShyKTtyP28uZWFjaC5jYWxsKGEsZnVuY3Rpb24oZSxvKXt2YXIgYT0hMTt0LnJlc29sdmUoZSkudGhlbihmdW5jdGlvbihlKXthfHwoYT0hMCxzW29dPWUsLS1yfHxuKHMpKX0saSl9KTpuKHMpfSk7cmV0dXJuIHMmJmkocy5lcnJvciksci5wcm9taXNlfSxyYWNlOmZ1bmN0aW9uKGUpe3ZhciB0PXgodGhpcykscj1uZXcgUih0KSxuPXIucmVqZWN0LG89ayhmdW5jdGlvbigpe2QoZSwhMSxmdW5jdGlvbihlKXt0LnJlc29sdmUoZSkudGhlbihyLnJlc29sdmUsbil9KX0pO3JldHVybiBvJiZuKG8uZXJyb3IpLHIucHJvbWlzZX19KX0seyIuLyQiOjU3LCIuLyQuYS1mdW5jdGlvbiI6MjcsIi4vJC5hbi1vYmplY3QiOjI5LCIuLyQuY2xhc3NvZiI6MzAsIi4vJC5jb3JlIjozMiwiLi8kLmN0eCI6MzMsIi4vJC5kZXNjcmlwdG9ycyI6MzUsIi4vJC5leHBvcnQiOjM4LCIuLyQuZm9yLW9mIjo0MCwiLi8kLmdsb2JhbCI6NDIsIi4vJC5pcy1vYmplY3QiOjUwLCIuLyQuaXRlci1kZXRlY3QiOjU0LCIuLyQubGlicmFyeSI6NTksIi4vJC5taWNyb3Rhc2siOjYwLCIuLyQucmVkZWZpbmUtYWxsIjo2MywiLi8kLnNhbWUtdmFsdWUiOjY1LCIuLyQuc2V0LXByb3RvIjo2NiwiLi8kLnNldC1zcGVjaWVzIjo2NywiLi8kLnNldC10by1zdHJpbmctdGFnIjo2OCwiLi8kLnNwZWNpZXMtY29uc3RydWN0b3IiOjcwLCIuLyQuc3RyaWN0LW5ldyI6NzEsIi4vJC53a3MiOjc5fV0sODk6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi8kLnN0cmluZy1hdCIpKCEwKTtlKCIuLyQuaXRlci1kZWZpbmUiKShTdHJpbmcsIlN0cmluZyIsZnVuY3Rpb24oZSl7dGhpcy5fdD1TdHJpbmcoZSksdGhpcy5faT0wfSxmdW5jdGlvbigpe3ZhciBlLHQ9dGhpcy5fdCxyPXRoaXMuX2k7cmV0dXJuIHI+PXQubGVuZ3RoP3t2YWx1ZTp2b2lkIDAsZG9uZTohMH06KGU9bih0LHIpLHRoaXMuX2krPWUubGVuZ3RoLHt2YWx1ZTplLGRvbmU6ITF9KX0pfSx7Ii4vJC5pdGVyLWRlZmluZSI6NTMsIi4vJC5zdHJpbmctYXQiOjcyfV0sOTA6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi8kIiksbz1lKCIuLyQuZ2xvYmFsIiksaT1lKCIuLyQuaGFzIiksYT1lKCIuLyQuZGVzY3JpcHRvcnMiKSxzPWUoIi4vJC5leHBvcnQiKSx1PWUoIi4vJC5yZWRlZmluZSIpLGw9ZSgiLi8kLmZhaWxzIiksYz1lKCIuLyQuc2hhcmVkIiksZj1lKCIuLyQuc2V0LXRvLXN0cmluZy10YWciKSxoPWUoIi4vJC51aWQiKSxwPWUoIi4vJC53a3MiKSxkPWUoIi4vJC5rZXlvZiIpLHk9ZSgiLi8kLmdldC1uYW1lcyIpLG09ZSgiLi8kLmVudW0ta2V5cyIpLHY9ZSgiLi8kLmlzLWFycmF5IiksZz1lKCIuLyQuYW4tb2JqZWN0IiksYj1lKCIuLyQudG8taW9iamVjdCIpLEU9ZSgiLi8kLnByb3BlcnR5LWRlc2MiKSx3PW4uZ2V0RGVzYywkPW4uc2V0RGVzYyxfPW4uY3JlYXRlLE09eS5nZXQsTz1vLlN5bWJvbCxqPW8uSlNPTix4PWomJmouc3RyaW5naWZ5LFA9ITEsUj1wKCJfaGlkZGVuIiksaz1uLmlzRW51bSxTPWMoInN5bWJvbC1yZWdpc3RyeSIpLEE9Yygic3ltYm9scyIpLFQ9ImZ1bmN0aW9uIj09dHlwZW9mIE8sTj1PYmplY3QucHJvdG90eXBlLEk9YSYmbChmdW5jdGlvbigpe3JldHVybiA3IT1fKCQoe30sImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gJCh0aGlzLCJhIix7dmFsdWU6N30pLmF9fSkpLmE7DQp9KT9mdW5jdGlvbihlLHQscil7dmFyIG49dyhOLHQpO24mJmRlbGV0ZSBOW3RdLCQoZSx0LHIpLG4mJmUhPT1OJiYkKE4sdCxuKX06JCxVPWZ1bmN0aW9uKGUpe3ZhciB0PUFbZV09XyhPLnByb3RvdHlwZSk7cmV0dXJuIHQuX2s9ZSxhJiZQJiZJKE4sZSx7Y29uZmlndXJhYmxlOiEwLHNldDpmdW5jdGlvbih0KXtpKHRoaXMsUikmJmkodGhpc1tSXSxlKSYmKHRoaXNbUl1bZV09ITEpLEkodGhpcyxlLEUoMSx0KSl9fSksdH0sQz1mdW5jdGlvbihlKXtyZXR1cm4ic3ltYm9sIj09dHlwZW9mIGV9LEw9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiByJiZpKEEsdCk/KHIuZW51bWVyYWJsZT8oaShlLFIpJiZlW1JdW3RdJiYoZVtSXVt0XT0hMSkscj1fKHIse2VudW1lcmFibGU6RSgwLCExKX0pKTooaShlLFIpfHwkKGUsUixFKDEse30pKSxlW1JdW3RdPSEwKSxJKGUsdCxyKSk6JChlLHQscil9LEI9ZnVuY3Rpb24oZSx0KXtnKGUpO2Zvcih2YXIgcixuPW0odD1iKHQpKSxvPTAsaT1uLmxlbmd0aDtpPm87KUwoZSxyPW5bbysrXSx0W3JdKTtyZXR1cm4gZX0sRD1mdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10P18oZSk6QihfKGUpLHQpfSxGPWZ1bmN0aW9uKGUpe3ZhciB0PWsuY2FsbCh0aGlzLGUpO3JldHVybiB0fHwhaSh0aGlzLGUpfHwhaShBLGUpfHxpKHRoaXMsUikmJnRoaXNbUl1bZV0/dDohMH0sRz1mdW5jdGlvbihlLHQpe3ZhciByPXcoZT1iKGUpLHQpO3JldHVybiFyfHwhaShBLHQpfHxpKGUsUikmJmVbUl1bdF18fChyLmVudW1lcmFibGU9ITApLHJ9LEs9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9TShiKGUpKSxuPVtdLG89MDtyLmxlbmd0aD5vOylpKEEsdD1yW28rK10pfHx0PT1SfHxuLnB1c2godCk7cmV0dXJuIG59LFk9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9TShiKGUpKSxuPVtdLG89MDtyLmxlbmd0aD5vOylpKEEsdD1yW28rK10pJiZuLnB1c2goQVt0XSk7cmV0dXJuIG59LHE9ZnVuY3Rpb24oZSl7aWYodm9pZCAwIT09ZSYmIUMoZSkpe2Zvcih2YXIgdCxyLG49W2VdLG89MSxpPWFyZ3VtZW50cztpLmxlbmd0aD5vOyluLnB1c2goaVtvKytdKTtyZXR1cm4gdD1uWzFdLCJmdW5jdGlvbiI9PXR5cGVvZiB0JiYocj10KSwhciYmdih0KXx8KHQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gciYmKHQ9ci5jYWxsKHRoaXMsZSx0KSksQyh0KT92b2lkIDA6dH0pLG5bMV09dCx4LmFwcGx5KGosbil9fSx6PWwoZnVuY3Rpb24oKXt2YXIgZT1PKCk7cmV0dXJuIltudWxsXSIhPXgoW2VdKXx8Int9IiE9eCh7YTplfSl8fCJ7fSIhPXgoT2JqZWN0KGUpKX0pO1R8fChPPWZ1bmN0aW9uKCl7aWYoQyh0aGlzKSl0aHJvdyBUeXBlRXJyb3IoIlN5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciIpO3JldHVybiBVKGgoYXJndW1lbnRzLmxlbmd0aD4wP2FyZ3VtZW50c1swXTp2b2lkIDApKX0sdShPLnByb3RvdHlwZSwidG9TdHJpbmciLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2t9KSxDPWZ1bmN0aW9uKGUpe3JldHVybiBlIGluc3RhbmNlb2YgT30sbi5jcmVhdGU9RCxuLmlzRW51bT1GLG4uZ2V0RGVzYz1HLG4uc2V0RGVzYz1MLG4uc2V0RGVzY3M9QixuLmdldE5hbWVzPXkuZ2V0PUssbi5nZXRTeW1ib2xzPVksYSYmIWUoIi4vJC5saWJyYXJ5IikmJnUoTiwicHJvcGVydHlJc0VudW1lcmFibGUiLEYsITApKTt2YXIgSD17ImZvciI6ZnVuY3Rpb24oZSl7cmV0dXJuIGkoUyxlKz0iIik/U1tlXTpTW2VdPU8oZSl9LGtleUZvcjpmdW5jdGlvbihlKXtyZXR1cm4gZChTLGUpfSx1c2VTZXR0ZXI6ZnVuY3Rpb24oKXtQPSEwfSx1c2VTaW1wbGU6ZnVuY3Rpb24oKXtQPSExfX07bi5lYWNoLmNhbGwoImhhc0luc3RhbmNlLGlzQ29uY2F0U3ByZWFkYWJsZSxpdGVyYXRvcixtYXRjaCxyZXBsYWNlLHNlYXJjaCxzcGVjaWVzLHNwbGl0LHRvUHJpbWl0aXZlLHRvU3RyaW5nVGFnLHVuc2NvcGFibGVzIi5zcGxpdCgiLCIpLGZ1bmN0aW9uKGUpe3ZhciB0PXAoZSk7SFtlXT1UP3Q6VSh0KX0pLFA9ITAscyhzLkcrcy5XLHtTeW1ib2w6T30pLHMocy5TLCJTeW1ib2wiLEgpLHMocy5TK3MuRiohVCwiT2JqZWN0Iix7Y3JlYXRlOkQsZGVmaW5lUHJvcGVydHk6TCxkZWZpbmVQcm9wZXJ0aWVzOkIsZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOkcsZ2V0T3duUHJvcGVydHlOYW1lczpLLGdldE93blByb3BlcnR5U3ltYm9sczpZfSksaiYmcyhzLlMrcy5GKighVHx8eiksIkpTT04iLHtzdHJpbmdpZnk6cX0pLGYoTywiU3ltYm9sIiksZihNYXRoLCJNYXRoIiwhMCksZihvLkpTT04sIkpTT04iLCEwKX0seyIuLyQiOjU3LCIuLyQuYW4tb2JqZWN0IjoyOSwiLi8kLmRlc2NyaXB0b3JzIjozNSwiLi8kLmVudW0ta2V5cyI6MzcsIi4vJC5leHBvcnQiOjM4LCIuLyQuZmFpbHMiOjM5LCIuLyQuZ2V0LW5hbWVzIjo0MSwiLi8kLmdsb2JhbCI6NDIsIi4vJC5oYXMiOjQzLCIuLyQuaXMtYXJyYXkiOjQ5LCIuLyQua2V5b2YiOjU4LCIuLyQubGlicmFyeSI6NTksIi4vJC5wcm9wZXJ0eS1kZXNjIjo2MiwiLi8kLnJlZGVmaW5lIjo2NCwiLi8kLnNldC10by1zdHJpbmctdGFnIjo2OCwiLi8kLnNoYXJlZCI6NjksIi4vJC50by1pb2JqZWN0Ijo3NSwiLi8kLnVpZCI6NzgsIi4vJC53a3MiOjc5fV0sOTE6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuL2VzNi5hcnJheS5pdGVyYXRvciIpO3ZhciBuPWUoIi4vJC5pdGVyYXRvcnMiKTtuLk5vZGVMaXN0PW4uSFRNTENvbGxlY3Rpb249bi5BcnJheX0seyIuLyQuaXRlcmF0b3JzIjo1NiwiLi9lczYuYXJyYXkuaXRlcmF0b3IiOjgxfV0sOTI6W2Z1bmN0aW9uKGUsdCxyKXtmdW5jdGlvbiBuKCl7Yz0hMSxzLmxlbmd0aD9sPXMuY29uY2F0KGwpOmY9LTEsbC5sZW5ndGgmJm8oKX1mdW5jdGlvbiBvKCl7aWYoIWMpe3ZhciBlPXNldFRpbWVvdXQobik7Yz0hMDtmb3IodmFyIHQ9bC5sZW5ndGg7dDspe2ZvcihzPWwsbD1bXTsrK2Y8dDspcyYmc1tmXS5ydW4oKTtmPS0xLHQ9bC5sZW5ndGh9cz1udWxsLGM9ITEsY2xlYXJUaW1lb3V0KGUpfX1mdW5jdGlvbiBpKGUsdCl7dGhpcy5mdW49ZSx0aGlzLmFycmF5PXR9ZnVuY3Rpb24gYSgpe312YXIgcyx1PXQuZXhwb3J0cz17fSxsPVtdLGM9ITEsZj0tMTt1Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSlmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXRbci0xXT1hcmd1bWVudHNbcl07bC5wdXNoKG5ldyBpKGUsdCkpLDEhPT1sLmxlbmd0aHx8Y3x8c2V0VGltZW91dChvLDApfSxpLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfSx1LnRpdGxlPSJicm93c2VyIix1LmJyb3dzZXI9ITAsdS5lbnY9e30sdS5hcmd2PVtdLHUudmVyc2lvbj0iIix1LnZlcnNpb25zPXt9LHUub249YSx1LmFkZExpc3RlbmVyPWEsdS5vbmNlPWEsdS5vZmY9YSx1LnJlbW92ZUxpc3RlbmVyPWEsdS5yZW1vdmVBbGxMaXN0ZW5lcnM9YSx1LmVtaXQ9YSx1LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCIpfSx1LmN3ZD1mdW5jdGlvbigpe3JldHVybiIvIn0sdS5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoInByb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCIpfSx1LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fSx7fV0sOTM6W2Z1bmN0aW9uKHQscixuKXshZnVuY3Rpb24odCxuKXsiZnVuY3Rpb24iPT10eXBlb2YgZSYmZS5hbWQ/ZShbXSxuKToidW5kZWZpbmVkIiE9dHlwZW9mIHImJnIuZXhwb3J0cz9yLmV4cG9ydHM9bigpOnQudHY0PW4oKX0odGhpcyxmdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIGVuY29kZVVSSShlKS5yZXBsYWNlKC8lMjVbMC05XVswLTldL2csZnVuY3Rpb24oZSl7cmV0dXJuIiUiK2Uuc3Vic3RyaW5nKDMpfSl9ZnVuY3Rpb24gdCh0KXt2YXIgcj0iIjtoW3QuY2hhckF0KDApXSYmKHI9dC5jaGFyQXQoMCksdD10LnN1YnN0cmluZygxKSk7dmFyIG49IiIsbz0iIixpPSEwLGE9ITEscz0hMTsiKyI9PT1yP2k9ITE6Ii4iPT09cj8obz0iLiIsbj0iLiIpOiIvIj09PXI/KG89Ii8iLG49Ii8iKToiIyI9PT1yPyhvPSIjIixpPSExKToiOyI9PT1yPyhvPSI7IixuPSI7IixhPSEwLHM9ITApOiI/Ij09PXI/KG89Ij8iLG49IiYiLGE9ITApOiImIj09PXImJihvPSImIixuPSImIixhPSEwKTtmb3IodmFyIHU9W10sbD10LnNwbGl0KCIsIiksYz1bXSxmPXt9LGQ9MDtkPGwubGVuZ3RoO2QrKyl7dmFyIHk9bFtkXSxtPW51bGw7aWYoLTEhPT15LmluZGV4T2YoIjoiKSl7dmFyIHY9eS5zcGxpdCgiOiIpO3k9dlswXSxtPXBhcnNlSW50KHZbMV0sMTApfWZvcih2YXIgZz17fTtwW3kuY2hhckF0KHkubGVuZ3RoLTEpXTspZ1t5LmNoYXJBdCh5Lmxlbmd0aC0xKV09ITAseT15LnN1YnN0cmluZygwLHkubGVuZ3RoLTEpO3ZhciBiPXt0cnVuY2F0ZTptLG5hbWU6eSxzdWZmaWNlczpnfTtjLnB1c2goYiksZlt5XT1iLHUucHVzaCh5KX12YXIgRT1mdW5jdGlvbih0KXtmb3IodmFyIHI9IiIsdT0wLGw9MDtsPGMubGVuZ3RoO2wrKyl7dmFyIGY9Y1tsXSxoPXQoZi5uYW1lKTtpZihudWxsPT09aHx8dm9pZCAwPT09aHx8QXJyYXkuaXNBcnJheShoKSYmMD09PWgubGVuZ3RofHwib2JqZWN0Ij09dHlwZW9mIGgmJjA9PT1PYmplY3Qua2V5cyhoKS5sZW5ndGgpdSsrO2Vsc2UgaWYocis9bD09PXU/bzpufHwiLCIsQXJyYXkuaXNBcnJheShoKSl7YSYmKHIrPWYubmFtZSsiPSIpO2Zvcih2YXIgcD0wO3A8aC5sZW5ndGg7cCsrKXA+MCYmKHIrPWYuc3VmZmljZXNbIioiXT9ufHwiLCI6IiwiLGYuc3VmZmljZXNbIioiXSYmYSYmKHIrPWYubmFtZSsiPSIpKSxyKz1pP2VuY29kZVVSSUNvbXBvbmVudChoW3BdKS5yZXBsYWNlKC8hL2csIiUyMSIpOmUoaFtwXSl9ZWxzZSBpZigib2JqZWN0Ij09dHlwZW9mIGgpe2EmJiFmLnN1ZmZpY2VzWyIqIl0mJihyKz1mLm5hbWUrIj0iKTt2YXIgZD0hMDtmb3IodmFyIHkgaW4gaClkfHwocis9Zi5zdWZmaWNlc1siKiJdP258fCIsIjoiLCIpLGQ9ITEscis9aT9lbmNvZGVVUklDb21wb25lbnQoeSkucmVwbGFjZSgvIS9nLCIlMjEiKTplKHkpLHIrPWYuc3VmZmljZXNbIioiXT8iPSI6IiwiLHIrPWk/ZW5jb2RlVVJJQ29tcG9uZW50KGhbeV0pLnJlcGxhY2UoLyEvZywiJTIxIik6ZShoW3ldKX1lbHNlIGEmJihyKz1mLm5hbWUscyYmIiI9PT1ofHwocis9Ij0iKSksbnVsbCE9Zi50cnVuY2F0ZSYmKGg9aC5zdWJzdHJpbmcoMCxmLnRydW5jYXRlKSkscis9aT9lbmNvZGVVUklDb21wb25lbnQoaCkucmVwbGFjZSgvIS9nLCIlMjEiKTplKGgpfXJldHVybiByfTtyZXR1cm4gRS52YXJOYW1lcz11LHtwcmVmaXg6byxzdWJzdGl0dXRpb246RX19ZnVuY3Rpb24gcihlKXtpZighKHRoaXMgaW5zdGFuY2VvZiByKSlyZXR1cm4gbmV3IHIoZSk7Zm9yKHZhciBuPWUuc3BsaXQoInsiKSxvPVtuLnNoaWZ0KCldLGk9W10sYT1bXSxzPVtdO24ubGVuZ3RoPjA7KXt2YXIgdT1uLnNoaWZ0KCksbD11LnNwbGl0KCJ9IilbMF0sYz11LnN1YnN0cmluZyhsLmxlbmd0aCsxKSxmPXQobCk7YS5wdXNoKGYuc3Vic3RpdHV0aW9uKSxpLnB1c2goZi5wcmVmaXgpLG8ucHVzaChjKSxzPXMuY29uY2F0KGYuc3Vic3RpdHV0aW9uLnZhck5hbWVzKX10aGlzLmZpbGw9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PW9bMF0scj0wO3I8YS5sZW5ndGg7cisrKXt2YXIgbj1hW3JdO3QrPW4oZSksdCs9b1tyKzFdfXJldHVybiB0fSx0aGlzLnZhck5hbWVzPXMsdGhpcy50ZW1wbGF0ZT1lfWZ1bmN0aW9uIG4oZSx0KXtpZihlPT09dClyZXR1cm4hMDtpZihlJiZ0JiYib2JqZWN0Ij09dHlwZW9mIGUmJiJvYmplY3QiPT10eXBlb2YgdCl7aWYoQXJyYXkuaXNBcnJheShlKSE9PUFycmF5LmlzQXJyYXkodCkpcmV0dXJuITE7aWYoQXJyYXkuaXNBcnJheShlKSl7aWYoZS5sZW5ndGghPT10Lmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKylpZighbihlW3JdLHRbcl0pKXJldHVybiExfWVsc2V7dmFyIG87Zm9yKG8gaW4gZSlpZih2b2lkIDA9PT10W29dJiZ2b2lkIDAhPT1lW29dKXJldHVybiExO2ZvcihvIGluIHQpaWYodm9pZCAwPT09ZVtvXSYmdm9pZCAwIT09dFtvXSlyZXR1cm4hMTtmb3IobyBpbiBlKWlmKCFuKGVbb10sdFtvXSkpcmV0dXJuITF9cmV0dXJuITB9cmV0dXJuITF9ZnVuY3Rpb24gbyhlKXt2YXIgdD1TdHJpbmcoZSkucmVwbGFjZSgvXlxzK3xccyskL2csIiIpLm1hdGNoKC9eKFteOlwvPyNdKzopPyhcL1wvKD86W146QF0qKD86OlteOkBdKik/QCk/KChbXjpcLz8jXSopKD86OihcZCopKT8pKT8oW14/I10qKShcP1teI10qKT8oI1tcc1xTXSopPy8pO3JldHVybiB0P3tocmVmOnRbMF18fCIiLHByb3RvY29sOnRbMV18fCIiLGF1dGhvcml0eTp0WzJdfHwiIixob3N0OnRbM118fCIiLGhvc3RuYW1lOnRbNF18fCIiLHBvcnQ6dFs1XXx8IiIscGF0aG5hbWU6dFs2XXx8IiIsc2VhcmNoOnRbN118fCIiLGhhc2g6dFs4XXx8IiJ9Om51bGx9ZnVuY3Rpb24gaShlLHQpe2Z1bmN0aW9uIHIoZSl7dmFyIHQ9W107cmV0dXJuIGUucmVwbGFjZSgvXihcLlwuPyhcL3wkKSkrLywiIikucmVwbGFjZSgvXC8oXC4oXC98JCkpKy9nLCIvIikucmVwbGFjZSgvXC9cLlwuJC8sIi8uLi8iKS5yZXBsYWNlKC9cLz9bXlwvXSovZyxmdW5jdGlvbihlKXsiLy4uIj09PWU/dC5wb3AoKTp0LnB1c2goZSl9KSx0LmpvaW4oIiIpLnJlcGxhY2UoL15cLy8sIi8iPT09ZS5jaGFyQXQoMCk/Ii8iOiIiKX1yZXR1cm4gdD1vKHR8fCIiKSxlPW8oZXx8IiIpLHQmJmU/KHQucHJvdG9jb2x8fGUucHJvdG9jb2wpKyh0LnByb3RvY29sfHx0LmF1dGhvcml0eT90LmF1dGhvcml0eTplLmF1dGhvcml0eSkrcih0LnByb3RvY29sfHx0LmF1dGhvcml0eXx8Ii8iPT09dC5wYXRobmFtZS5jaGFyQXQoMCk/dC5wYXRobmFtZTp0LnBhdGhuYW1lPyhlLmF1dGhvcml0eSYmIWUucGF0aG5hbWU/Ii8iOiIiKStlLnBhdGhuYW1lLnNsaWNlKDAsZS5wYXRobmFtZS5sYXN0SW5kZXhPZigiLyIpKzEpK3QucGF0aG5hbWU6ZS5wYXRobmFtZSkrKHQucHJvdG9jb2x8fHQuYXV0aG9yaXR5fHx0LnBhdGhuYW1lP3Quc2VhcmNoOnQuc2VhcmNofHxlLnNlYXJjaCkrdC5oYXNoOm51bGx9ZnVuY3Rpb24gYShlKXtyZXR1cm4gZS5zcGxpdCgiIyIpWzBdfWZ1bmN0aW9uIHMoZSx0KXtpZihlJiYib2JqZWN0Ij09dHlwZW9mIGUpaWYodm9pZCAwPT09dD90PWUuaWQ6InN0cmluZyI9PXR5cGVvZiBlLmlkJiYodD1pKHQsZS5pZCksZS5pZD10KSxBcnJheS5pc0FycmF5KGUpKWZvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKXMoZVtyXSx0KTtlbHNleyJzdHJpbmciPT10eXBlb2YgZS4kcmVmJiYoZS4kcmVmPWkodCxlLiRyZWYpKTtmb3IodmFyIG4gaW4gZSkiZW51bSIhPT1uJiZzKGVbbl0sdCl9fWZ1bmN0aW9uIHUoZSl7ZT1lfHwiZW4iO3ZhciB0PXdbZV07cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciByPXRbZS5jb2RlXXx8RVtlLmNvZGVdO2lmKCJzdHJpbmciIT10eXBlb2YgcilyZXR1cm4iVW5rbm93biBlcnJvciBjb2RlICIrZS5jb2RlKyI6ICIrSlNPTi5zdHJpbmdpZnkoZS5tZXNzYWdlUGFyYW1zKTt2YXIgbj1lLnBhcmFtcztyZXR1cm4gci5yZXBsYWNlKC9ceyhbXnt9XSopXH0vZyxmdW5jdGlvbihlLHQpe3ZhciByPW5bdF07cmV0dXJuInN0cmluZyI9PXR5cGVvZiByfHwibnVtYmVyIj09dHlwZW9mIHI/cjplfSl9fWZ1bmN0aW9uIGwoZSx0LHIsbixvKXtpZihFcnJvci5jYWxsKHRoaXMpLHZvaWQgMD09PWUpdGhyb3cgbmV3IEVycm9yKCJObyBlcnJvciBjb2RlIHN1cHBsaWVkOiAiK24pO3RoaXMubWVzc2FnZT0iIix0aGlzLnBhcmFtcz10LHRoaXMuY29kZT1lLHRoaXMuZGF0YVBhdGg9cnx8IiIsdGhpcy5zY2hlbWFQYXRoPW58fCIiLHRoaXMuc3ViRXJyb3JzPW98fG51bGw7dmFyIGk9bmV3IEVycm9yKHRoaXMubWVzc2FnZSk7aWYodGhpcy5zdGFjaz1pLnN0YWNrfHxpLnN0YWNrdHJhY2UsIXRoaXMuc3RhY2spdHJ5e3Rocm93IGl9Y2F0Y2goaSl7dGhpcy5zdGFjaz1pLnN0YWNrfHxpLnN0YWNrdHJhY2V9fWZ1bmN0aW9uIGMoZSx0KXtpZih0LnN1YnN0cmluZygwLGUubGVuZ3RoKT09PWUpe3ZhciByPXQuc3Vic3RyaW5nKGUubGVuZ3RoKTtpZih0Lmxlbmd0aD4wJiYiLyI9PT10LmNoYXJBdChlLmxlbmd0aC0xKXx8IiMiPT09ci5jaGFyQXQoMCl8fCI/Ij09PXIuY2hhckF0KDApKXJldHVybiEwfXJldHVybiExfWZ1bmN0aW9uIGYoZSl7dmFyIHQscixuPW5ldyBkLG89e3NldEVycm9yUmVwb3J0ZXI6ZnVuY3Rpb24oZSl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiBlP3RoaXMubGFuZ3VhZ2UoZSk6KHI9ZSwhMCl9LGFkZEZvcm1hdDpmdW5jdGlvbigpe24uYWRkRm9ybWF0LmFwcGx5KG4sYXJndW1lbnRzKX0sbGFuZ3VhZ2U6ZnVuY3Rpb24oZSl7cmV0dXJuIGU/KHdbZV18fChlPWUuc3BsaXQoIi0iKVswXSksd1tlXT8odD1lLGUpOiExKTp0fSxhZGRMYW5ndWFnZTpmdW5jdGlvbihlLHQpe3ZhciByO2ZvcihyIGluIHYpdFtyXSYmIXRbdltyXV0mJih0W3Zbcl1dPXRbcl0pO3ZhciBuPWUuc3BsaXQoIi0iKVswXTtpZih3W25dKXt3W2VdPU9iamVjdC5jcmVhdGUod1tuXSk7Zm9yKHIgaW4gdCkidW5kZWZpbmVkIj09dHlwZW9mIHdbbl1bcl0mJih3W25dW3JdPXRbcl0pLHdbZV1bcl09dFtyXX1lbHNlIHdbZV09dCx3W25dPXQ7cmV0dXJuIHRoaXN9LGZyZXNoQXBpOmZ1bmN0aW9uKGUpe3ZhciB0PWYoKTtyZXR1cm4gZSYmdC5sYW5ndWFnZShlKSx0fSx2YWxpZGF0ZTpmdW5jdGlvbihlLG8saSxhKXt2YXIgcz11KHQpLGw9cj9mdW5jdGlvbihlLHQsbil7cmV0dXJuIHIoZSx0LG4pfHxzKGUsdCxuKX06cyxjPW5ldyBkKG4sITEsbCxpLGEpOyJzdHJpbmciPT10eXBlb2YgbyYmKG89eyRyZWY6b30pLGMuYWRkU2NoZW1hKCIiLG8pO3ZhciBmPWMudmFsaWRhdGVBbGwoZSxvLG51bGwsbnVsbCwiIik7cmV0dXJuIWYmJmEmJihmPWMuYmFuVW5rbm93blByb3BlcnRpZXMoZSxvKSksdGhpcy5lcnJvcj1mLHRoaXMubWlzc2luZz1jLm1pc3NpbmcsdGhpcy52YWxpZD1udWxsPT09Zix0aGlzLnZhbGlkfSx2YWxpZGF0ZVJlc3VsdDpmdW5jdGlvbigpe3ZhciBlPXt9O3JldHVybiB0aGlzLnZhbGlkYXRlLmFwcGx5KGUsYXJndW1lbnRzKSxlfSx2YWxpZGF0ZU11bHRpcGxlOmZ1bmN0aW9uKGUsbyxpLGEpe3ZhciBzPXUodCksbD1yP2Z1bmN0aW9uKGUsdCxuKXtyZXR1cm4gcihlLHQsbil8fHMoZSx0LG4pfTpzLGM9bmV3IGQobiwhMCxsLGksYSk7InN0cmluZyI9PXR5cGVvZiBvJiYobz17JHJlZjpvfSksYy5hZGRTY2hlbWEoIiIsbyksYy52YWxpZGF0ZUFsbChlLG8sbnVsbCxudWxsLCIiKSxhJiZjLmJhblVua25vd25Qcm9wZXJ0aWVzKGUsbyk7dmFyIGY9e307cmV0dXJuIGYuZXJyb3JzPWMuZXJyb3JzLGYubWlzc2luZz1jLm1pc3NpbmcsZi52YWxpZD0wPT09Zi5lcnJvcnMubGVuZ3RoLGZ9LGFkZFNjaGVtYTpmdW5jdGlvbigpe3JldHVybiBuLmFkZFNjaGVtYS5hcHBseShuLGFyZ3VtZW50cyl9LGdldFNjaGVtYTpmdW5jdGlvbigpe3JldHVybiBuLmdldFNjaGVtYS5hcHBseShuLGFyZ3VtZW50cyl9LGdldFNjaGVtYU1hcDpmdW5jdGlvbigpe3JldHVybiBuLmdldFNjaGVtYU1hcC5hcHBseShuLGFyZ3VtZW50cyl9LGdldFNjaGVtYVVyaXM6ZnVuY3Rpb24oKXtyZXR1cm4gbi5nZXRTY2hlbWFVcmlzLmFwcGx5KG4sYXJndW1lbnRzKX0sZ2V0TWlzc2luZ1VyaXM6ZnVuY3Rpb24oKXtyZXR1cm4gbi5nZXRNaXNzaW5nVXJpcy5hcHBseShuLGFyZ3VtZW50cyl9LGRyb3BTY2hlbWFzOmZ1bmN0aW9uKCl7bi5kcm9wU2NoZW1hcy5hcHBseShuLGFyZ3VtZW50cyl9LGRlZmluZUtleXdvcmQ6ZnVuY3Rpb24oKXtuLmRlZmluZUtleXdvcmQuYXBwbHkobixhcmd1bWVudHMpfSxkZWZpbmVFcnJvcjpmdW5jdGlvbihlLHQscil7aWYoInN0cmluZyIhPXR5cGVvZiBlfHwhL15bQS1aXSsoX1tBLVpdKykqJC8udGVzdChlKSl0aHJvdyBuZXcgRXJyb3IoIkNvZGUgbmFtZSBtdXN0IGJlIGEgc3RyaW5nIGluIFVQUEVSX0NBU0VfV0lUSF9VTkRFUlNDT1JFUyIpO2lmKCJudW1iZXIiIT10eXBlb2YgdHx8dCUxIT09MHx8MWU0PnQpdGhyb3cgbmV3IEVycm9yKCJDb2RlIG51bWJlciBtdXN0IGJlIGFuIGludGVnZXIgPiAxMDAwMCIpO2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgdltlXSl0aHJvdyBuZXcgRXJyb3IoIkVycm9yIGFscmVhZHkgZGVmaW5lZDogIitlKyIgYXMgIit2W2VdKTtpZigidW5kZWZpbmVkIiE9dHlwZW9mIGdbdF0pdGhyb3cgbmV3IEVycm9yKCJFcnJvciBjb2RlIGFscmVhZHkgdXNlZDogIitnW3RdKyIgYXMgIit0KTt2W2VdPXQsZ1t0XT1lLEVbZV09RVt0XT1yO2Zvcih2YXIgbiBpbiB3KXt2YXIgbz13W25dO29bZV0mJihvW3RdPW9bdF18fG9bZV0pfX0scmVzZXQ6ZnVuY3Rpb24oKXtuLnJlc2V0KCksdGhpcy5lcnJvcj1udWxsLHRoaXMubWlzc2luZz1bXSx0aGlzLnZhbGlkPSEwfSxtaXNzaW5nOltdLGVycm9yOm51bGwsdmFsaWQ6ITAsbm9ybVNjaGVtYTpzLHJlc29sdmVVcmw6aSxnZXREb2N1bWVudFVyaTphLGVycm9yQ29kZXM6dn07cmV0dXJuIG8ubGFuZ3VhZ2UoZXx8ImVuIiksb31PYmplY3Qua2V5c3x8KE9iamVjdC5rZXlzPWZ1bmN0aW9uKCl7dmFyIGU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSx0PSF7dG9TdHJpbmc6bnVsbH0ucHJvcGVydHlJc0VudW1lcmFibGUoInRvU3RyaW5nIikscj1bInRvU3RyaW5nIiwidG9Mb2NhbGVTdHJpbmciLCJ2YWx1ZU9mIiwiaGFzT3duUHJvcGVydHkiLCJpc1Byb3RvdHlwZU9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJjb25zdHJ1Y3RvciJdLG49ci5sZW5ndGg7cmV0dXJuIGZ1bmN0aW9uKG8pe2lmKCJvYmplY3QiIT10eXBlb2YgbyYmImZ1bmN0aW9uIiE9dHlwZW9mIG98fG51bGw9PT1vKXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5rZXlzIGNhbGxlZCBvbiBub24tb2JqZWN0Iik7dmFyIGk9W107Zm9yKHZhciBhIGluIG8pZS5jYWxsKG8sYSkmJmkucHVzaChhKTtpZih0KWZvcih2YXIgcz0wO24+cztzKyspZS5jYWxsKG8scltzXSkmJmkucHVzaChyW3NdKTtyZXR1cm4gaX19KCkpLE9iamVjdC5jcmVhdGV8fChPYmplY3QuY3JlYXRlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31yZXR1cm4gZnVuY3Rpb24odCl7aWYoMSE9PWFyZ3VtZW50cy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKCJPYmplY3QuY3JlYXRlIGltcGxlbWVudGF0aW9uIG9ubHkgYWNjZXB0cyBvbmUgcGFyYW1ldGVyLiIpO3JldHVybiBlLnByb3RvdHlwZT10LG5ldyBlfX0oKSksQXJyYXkuaXNBcnJheXx8KEFycmF5LmlzQXJyYXk9ZnVuY3Rpb24oZSl7cmV0dXJuIltvYmplY3QgQXJyYXldIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKX0pLEFycmF5LnByb3RvdHlwZS5pbmRleE9mfHwoQXJyYXkucHJvdG90eXBlLmluZGV4T2Y9ZnVuY3Rpb24oZSl7aWYobnVsbD09PXRoaXMpdGhyb3cgbmV3IFR5cGVFcnJvcjt2YXIgdD1PYmplY3QodGhpcykscj10Lmxlbmd0aD4+PjA7aWYoMD09PXIpcmV0dXJuLTE7dmFyIG49MDtpZihhcmd1bWVudHMubGVuZ3RoPjEmJihuPU51bWJlcihhcmd1bWVudHNbMV0pLG4hPT1uP249MDowIT09biYmbiE9PTEvMCYmbiE9PS0oMS8wKSYmKG49KG4+MHx8LTEpKk1hdGguZmxvb3IoTWF0aC5hYnMobikpKSksbj49cilyZXR1cm4tMTtmb3IodmFyIG89bj49MD9uOk1hdGgubWF4KHItTWF0aC5hYnMobiksMCk7cj5vO28rKylpZihvIGluIHQmJnRbb109PT1lKXJldHVybiBvO3JldHVybi0xfSksT2JqZWN0LmlzRnJvemVufHwoT2JqZWN0LmlzRnJvemVuPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0idHY0X3Rlc3RfZnJvemVuX2tleSI7ZS5oYXNPd25Qcm9wZXJ0eSh0KTspdCs9TWF0aC5yYW5kb20oKTt0cnl7cmV0dXJuIGVbdF09ITAsZGVsZXRlIGVbdF0sITF9Y2F0Y2gocil7cmV0dXJuITB9fSk7dmFyIGg9eyIrIjohMCwiIyI6ITAsIi4iOiEwLCIvIjohMCwiOyI6ITAsIj8iOiEwLCImIjohMH0scD17IioiOiEwfTtyLnByb3RvdHlwZT17dG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50ZW1wbGF0ZX0sZmlsbEZyb21PYmplY3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZmlsbChmdW5jdGlvbih0KXtyZXR1cm4gZVt0XX0pfX07dmFyIGQ9ZnVuY3Rpb24oZSx0LHIsbixvKXtpZih0aGlzLm1pc3Npbmc9W10sdGhpcy5taXNzaW5nTWFwPXt9LHRoaXMuZm9ybWF0VmFsaWRhdG9ycz1lP09iamVjdC5jcmVhdGUoZS5mb3JtYXRWYWxpZGF0b3JzKTp7fSx0aGlzLnNjaGVtYXM9ZT9PYmplY3QuY3JlYXRlKGUuc2NoZW1hcyk6e30sdGhpcy5jb2xsZWN0TXVsdGlwbGU9dCx0aGlzLmVycm9ycz1bXSx0aGlzLmhhbmRsZUVycm9yPXQ/dGhpcy5jb2xsZWN0RXJyb3I6dGhpcy5yZXR1cm5FcnJvcixuJiYodGhpcy5jaGVja1JlY3Vyc2l2ZT0hMCx0aGlzLnNjYW5uZWQ9W10sdGhpcy5zY2FubmVkRnJvemVuPVtdLHRoaXMuc2Nhbm5lZEZyb3plblNjaGVtYXM9W10sdGhpcy5zY2FubmVkRnJvemVuVmFsaWRhdGlvbkVycm9ycz1bXSx0aGlzLnZhbGlkYXRlZFNjaGVtYXNLZXk9InR2NF92YWxpZGF0aW9uX2lkIix0aGlzLnZhbGlkYXRpb25FcnJvcnNLZXk9InR2NF92YWxpZGF0aW9uX2Vycm9yc19pZCIpLG8mJih0aGlzLnRyYWNrVW5rbm93blByb3BlcnRpZXM9ITAsdGhpcy5rbm93blByb3BlcnR5UGF0aHM9e30sdGhpcy51bmtub3duUHJvcGVydHlQYXRocz17fSksdGhpcy5lcnJvclJlcG9ydGVyPXJ8fHUoImVuIiksInN0cmluZyI9PXR5cGVvZiB0aGlzLmVycm9yUmVwb3J0ZXIpdGhyb3cgbmV3IEVycm9yKCJkZWJ1ZyIpO2lmKHRoaXMuZGVmaW5lZEtleXdvcmRzPXt9LGUpZm9yKHZhciBpIGluIGUuZGVmaW5lZEtleXdvcmRzKXRoaXMuZGVmaW5lZEtleXdvcmRzW2ldPWUuZGVmaW5lZEtleXdvcmRzW2ldLnNsaWNlKDApfTtkLnByb3RvdHlwZS5kZWZpbmVLZXl3b3JkPWZ1bmN0aW9uKGUsdCl7dGhpcy5kZWZpbmVkS2V5d29yZHNbZV09dGhpcy5kZWZpbmVkS2V5d29yZHNbZV18fFtdLHRoaXMuZGVmaW5lZEtleXdvcmRzW2VdLnB1c2godCl9LGQucHJvdG90eXBlLmNyZWF0ZUVycm9yPWZ1bmN0aW9uKGUsdCxyLG4sbyxpLGEpe3ZhciBzPW5ldyBsKGUsdCxyLG4sbyk7cmV0dXJuIHMubWVzc2FnZT10aGlzLmVycm9yUmVwb3J0ZXIocyxpLGEpLHN9LGQucHJvdG90eXBlLnJldHVybkVycm9yPWZ1bmN0aW9uKGUpe3JldHVybiBlfSxkLnByb3RvdHlwZS5jb2xsZWN0RXJyb3I9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJnRoaXMuZXJyb3JzLnB1c2goZSksbnVsbH0sZC5wcm90b3R5cGUucHJlZml4RXJyb3JzPWZ1bmN0aW9uKGUsdCxyKXtmb3IodmFyIG49ZTtuPHRoaXMuZXJyb3JzLmxlbmd0aDtuKyspdGhpcy5lcnJvcnNbbl09dGhpcy5lcnJvcnNbbl0ucHJlZml4V2l0aCh0LHIpO3JldHVybiB0aGlzfSxkLnByb3RvdHlwZS5iYW5Vbmtub3duUHJvcGVydGllcz1mdW5jdGlvbihlLHQpe2Zvcih2YXIgciBpbiB0aGlzLnVua25vd25Qcm9wZXJ0eVBhdGhzKXt2YXIgbj10aGlzLmNyZWF0ZUVycm9yKHYuVU5LTk9XTl9QUk9QRVJUWSx7cGF0aDpyfSxyLCIiLG51bGwsZSx0KSxvPXRoaXMuaGFuZGxlRXJyb3Iobik7aWYobylyZXR1cm4gb31yZXR1cm4gbnVsbH0sZC5wcm90b3R5cGUuYWRkRm9ybWF0PWZ1bmN0aW9uKGUsdCl7aWYoIm9iamVjdCI9PXR5cGVvZiBlKXtmb3IodmFyIHIgaW4gZSl0aGlzLmFkZEZvcm1hdChyLGVbcl0pO3JldHVybiB0aGlzfXRoaXMuZm9ybWF0VmFsaWRhdG9yc1tlXT10fSxkLnByb3RvdHlwZS5yZXNvbHZlUmVmcz1mdW5jdGlvbihlLHQpe2lmKHZvaWQgMCE9PWUuJHJlZil7aWYodD10fHx7fSx0W2UuJHJlZl0pcmV0dXJuIHRoaXMuY3JlYXRlRXJyb3Iodi5DSVJDVUxBUl9SRUZFUkVOQ0Use3VybHM6T2JqZWN0LmtleXModCkuam9pbigiLCAiKX0sIiIsIiIsbnVsbCx2b2lkIDAsZSk7dFtlLiRyZWZdPSEwLGU9dGhpcy5nZXRTY2hlbWEoZS4kcmVmLHQpfXJldHVybiBlfSxkLnByb3RvdHlwZS5nZXRTY2hlbWE9ZnVuY3Rpb24oZSx0KXt2YXIgcjtpZih2b2lkIDAhPT10aGlzLnNjaGVtYXNbZV0pcmV0dXJuIHI9dGhpcy5zY2hlbWFzW2VdLHRoaXMucmVzb2x2ZVJlZnMocix0KTt2YXIgbj1lLG89IiI7aWYoLTEhPT1lLmluZGV4T2YoIiMiKSYmKG89ZS5zdWJzdHJpbmcoZS5pbmRleE9mKCIjIikrMSksbj1lLnN1YnN0cmluZygwLGUuaW5kZXhPZigiIyIpKSksIm9iamVjdCI9PXR5cGVvZiB0aGlzLnNjaGVtYXNbbl0pe3I9dGhpcy5zY2hlbWFzW25dO3ZhciBpPWRlY29kZVVSSUNvbXBvbmVudChvKTtpZigiIj09PWkpcmV0dXJuIHRoaXMucmVzb2x2ZVJlZnMocix0KTtpZigiLyIhPT1pLmNoYXJBdCgwKSlyZXR1cm47Zm9yKHZhciBhPWkuc3BsaXQoIi8iKS5zbGljZSgxKSxzPTA7czxhLmxlbmd0aDtzKyspe3ZhciB1PWFbc10ucmVwbGFjZSgvfjEvZywiLyIpLnJlcGxhY2UoL34wL2csIn4iKTtpZih2b2lkIDA9PT1yW3VdKXtyPXZvaWQgMDticmVha31yPXJbdV19aWYodm9pZCAwIT09cilyZXR1cm4gdGhpcy5yZXNvbHZlUmVmcyhyLHQpfXZvaWQgMD09PXRoaXMubWlzc2luZ1tuXSYmKHRoaXMubWlzc2luZy5wdXNoKG4pLHRoaXMubWlzc2luZ1tuXT1uLHRoaXMubWlzc2luZ01hcFtuXT1uKX0sZC5wcm90b3R5cGUuc2VhcmNoU2NoZW1hcz1mdW5jdGlvbihlLHQpe2lmKEFycmF5LmlzQXJyYXkoZSkpZm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspdGhpcy5zZWFyY2hTY2hlbWFzKGVbcl0sdCk7ZWxzZSBpZihlJiYib2JqZWN0Ij09dHlwZW9mIGUpeyJzdHJpbmciPT10eXBlb2YgZS5pZCYmYyh0LGUuaWQpJiZ2b2lkIDA9PT10aGlzLnNjaGVtYXNbZS5pZF0mJih0aGlzLnNjaGVtYXNbZS5pZF09ZSk7Zm9yKHZhciBuIGluIGUpaWYoImVudW0iIT09bilpZigib2JqZWN0Ij09dHlwZW9mIGVbbl0pdGhpcy5zZWFyY2hTY2hlbWFzKGVbbl0sdCk7ZWxzZSBpZigiJHJlZiI9PT1uKXt2YXIgbz1hKGVbbl0pO28mJnZvaWQgMD09PXRoaXMuc2NoZW1hc1tvXSYmdm9pZCAwPT09dGhpcy5taXNzaW5nTWFwW29dJiYodGhpcy5taXNzaW5nTWFwW29dPW8pfX19LGQucHJvdG90eXBlLmFkZFNjaGVtYT1mdW5jdGlvbihlLHQpe2lmKCJzdHJpbmciIT10eXBlb2YgZXx8InVuZGVmaW5lZCI9PXR5cGVvZiB0KXtpZigib2JqZWN0IiE9dHlwZW9mIGV8fCJzdHJpbmciIT10eXBlb2YgZS5pZClyZXR1cm47dD1lLGU9dC5pZH1lPT09YShlKSsiIyImJihlPWEoZSkpLHRoaXMuc2NoZW1hc1tlXT10LGRlbGV0ZSB0aGlzLm1pc3NpbmdNYXBbZV0scyh0LGUpLHRoaXMuc2VhcmNoU2NoZW1hcyh0LGUpfSxkLnByb3RvdHlwZS5nZXRTY2hlbWFNYXA9ZnVuY3Rpb24oKXt2YXIgZT17fTtmb3IodmFyIHQgaW4gdGhpcy5zY2hlbWFzKWVbdF09dGhpcy5zY2hlbWFzW3RdO3JldHVybiBlfSxkLnByb3RvdHlwZS5nZXRTY2hlbWFVcmlzPWZ1bmN0aW9uKGUpe3ZhciB0PVtdO2Zvcih2YXIgciBpbiB0aGlzLnNjaGVtYXMpZSYmIWUudGVzdChyKXx8dC5wdXNoKHIpO3JldHVybiB0fSxkLnByb3RvdHlwZS5nZXRNaXNzaW5nVXJpcz1mdW5jdGlvbihlKXt2YXIgdD1bXTtmb3IodmFyIHIgaW4gdGhpcy5taXNzaW5nTWFwKWUmJiFlLnRlc3Qocil8fHQucHVzaChyKTtyZXR1cm4gdH0sZC5wcm90b3R5cGUuZHJvcFNjaGVtYXM9ZnVuY3Rpb24oKXt0aGlzLnNjaGVtYXM9e30sdGhpcy5yZXNldCgpfSxkLnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbigpe3RoaXMubWlzc2luZz1bXSx0aGlzLm1pc3NpbmdNYXA9e30sdGhpcy5lcnJvcnM9W119LGQucHJvdG90eXBlLnZhbGlkYXRlQWxsPWZ1bmN0aW9uKGUsdCxyLG4sbyl7dmFyIGk7aWYodD10aGlzLnJlc29sdmVSZWZzKHQpLCF0KXJldHVybiBudWxsO2lmKHQgaW5zdGFuY2VvZiBsKXJldHVybiB0aGlzLmVycm9ycy5wdXNoKHQpLHQ7dmFyIGEscz10aGlzLmVycm9ycy5sZW5ndGgsdT1udWxsLGM9bnVsbDtpZih0aGlzLmNoZWNrUmVjdXJzaXZlJiZlJiYib2JqZWN0Ij09dHlwZW9mIGUpe2lmKGk9IXRoaXMuc2Nhbm5lZC5sZW5ndGgsZVt0aGlzLnZhbGlkYXRlZFNjaGVtYXNLZXldKXt2YXIgZj1lW3RoaXMudmFsaWRhdGVkU2NoZW1hc0tleV0uaW5kZXhPZih0KTtpZigtMSE9PWYpcmV0dXJuIHRoaXMuZXJyb3JzPXRoaXMuZXJyb3JzLmNvbmNhdChlW3RoaXMudmFsaWRhdGlvbkVycm9yc0tleV1bZl0pLG51bGx9aWYoT2JqZWN0LmlzRnJvemVuKGUpJiYoYT10aGlzLnNjYW5uZWRGcm96ZW4uaW5kZXhPZihlKSwtMSE9PWEpKXt2YXIgaD10aGlzLnNjYW5uZWRGcm96ZW5TY2hlbWFzW2FdLmluZGV4T2YodCk7aWYoLTEhPT1oKXJldHVybiB0aGlzLmVycm9ycz10aGlzLmVycm9ycy5jb25jYXQodGhpcy5zY2FubmVkRnJvemVuVmFsaWRhdGlvbkVycm9yc1thXVtoXSksbnVsbH1pZih0aGlzLnNjYW5uZWQucHVzaChlKSxPYmplY3QuaXNGcm96ZW4oZSkpLTE9PT1hJiYoYT10aGlzLnNjYW5uZWRGcm96ZW4ubGVuZ3RoLHRoaXMuc2Nhbm5lZEZyb3plbi5wdXNoKGUpLHRoaXMuc2Nhbm5lZEZyb3plblNjaGVtYXMucHVzaChbXSkpLHU9dGhpcy5zY2FubmVkRnJvemVuU2NoZW1hc1thXS5sZW5ndGgsdGhpcy5zY2FubmVkRnJvemVuU2NoZW1hc1thXVt1XT10LHRoaXMuc2Nhbm5lZEZyb3plblZhbGlkYXRpb25FcnJvcnNbYV1bdV09W107ZWxzZXtpZighZVt0aGlzLnZhbGlkYXRlZFNjaGVtYXNLZXldKXRyeXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0aGlzLnZhbGlkYXRlZFNjaGVtYXNLZXkse3ZhbHVlOltdLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHRoaXMudmFsaWRhdGlvbkVycm9yc0tleSx7dmFsdWU6W10sY29uZmlndXJhYmxlOiEwfSl9Y2F0Y2gocCl7ZVt0aGlzLnZhbGlkYXRlZFNjaGVtYXNLZXldPVtdLGVbdGhpcy52YWxpZGF0aW9uRXJyb3JzS2V5XT1bXX1jPWVbdGhpcy52YWxpZGF0ZWRTY2hlbWFzS2V5XS5sZW5ndGgsZVt0aGlzLnZhbGlkYXRlZFNjaGVtYXNLZXldW2NdPXQsZVt0aGlzLnZhbGlkYXRpb25FcnJvcnNLZXldW2NdPVtdfX12YXIgZD10aGlzLmVycm9ycy5sZW5ndGgseT10aGlzLnZhbGlkYXRlQmFzaWMoZSx0LG8pfHx0aGlzLnZhbGlkYXRlTnVtZXJpYyhlLHQsbyl8fHRoaXMudmFsaWRhdGVTdHJpbmcoZSx0LG8pfHx0aGlzLnZhbGlkYXRlQXJyYXkoZSx0LG8pfHx0aGlzLnZhbGlkYXRlT2JqZWN0KGUsdCxvKXx8dGhpcy52YWxpZGF0ZUNvbWJpbmF0aW9ucyhlLHQsbyl8fHRoaXMudmFsaWRhdGVIeXBlcm1lZGlhKGUsdCxvKXx8dGhpcy52YWxpZGF0ZUZvcm1hdChlLHQsbyl8fHRoaXMudmFsaWRhdGVEZWZpbmVkS2V5d29yZHMoZSx0LG8pfHxudWxsO2lmKGkpe2Zvcig7dGhpcy5zY2FubmVkLmxlbmd0aDspe3ZhciBtPXRoaXMuc2Nhbm5lZC5wb3AoKTtkZWxldGUgbVt0aGlzLnZhbGlkYXRlZFNjaGVtYXNLZXldfXRoaXMuc2Nhbm5lZEZyb3plbj1bXSx0aGlzLnNjYW5uZWRGcm96ZW5TY2hlbWFzPVtdfWlmKHl8fGQhPT10aGlzLmVycm9ycy5sZW5ndGgpZm9yKDtyJiZyLmxlbmd0aHx8biYmbi5sZW5ndGg7KXt2YXIgdj1yJiZyLmxlbmd0aD8iIityLnBvcCgpOm51bGwsZz1uJiZuLmxlbmd0aD8iIituLnBvcCgpOm51bGw7eSYmKHk9eS5wcmVmaXhXaXRoKHYsZykpLHRoaXMucHJlZml4RXJyb3JzKGQsdixnKX1yZXR1cm4gbnVsbCE9PXU/dGhpcy5zY2FubmVkRnJvemVuVmFsaWRhdGlvbkVycm9yc1thXVt1XT10aGlzLmVycm9ycy5zbGljZShzKTpudWxsIT09YyYmKGVbdGhpcy52YWxpZGF0aW9uRXJyb3JzS2V5XVtjXT10aGlzLmVycm9ycy5zbGljZShzKSksdGhpcy5oYW5kbGVFcnJvcih5KX0sZC5wcm90b3R5cGUudmFsaWRhdGVGb3JtYXQ9ZnVuY3Rpb24oZSx0KXtpZigic3RyaW5nIiE9dHlwZW9mIHQuZm9ybWF0fHwhdGhpcy5mb3JtYXRWYWxpZGF0b3JzW3QuZm9ybWF0XSlyZXR1cm4gbnVsbDt2YXIgcj10aGlzLmZvcm1hdFZhbGlkYXRvcnNbdC5mb3JtYXRdLmNhbGwobnVsbCxlLHQpO3JldHVybiJzdHJpbmciPT10eXBlb2Ygcnx8Im51bWJlciI9PXR5cGVvZiByP3RoaXMuY3JlYXRlRXJyb3Iodi5GT1JNQVRfQ1VTVE9NLHttZXNzYWdlOnJ9LCIiLCIvZm9ybWF0IixudWxsLGUsdCk6ciYmIm9iamVjdCI9PXR5cGVvZiByP3RoaXMuY3JlYXRlRXJyb3Iodi5GT1JNQVRfQ1VTVE9NLHttZXNzYWdlOnIubWVzc2FnZXx8Ij8ifSxyLmRhdGFQYXRofHwiIixyLnNjaGVtYVBhdGh8fCIvZm9ybWF0IixudWxsLGUsdCk6bnVsbH0sZC5wcm90b3R5cGUudmFsaWRhdGVEZWZpbmVkS2V5d29yZHM9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbiBpbiB0aGlzLmRlZmluZWRLZXl3b3JkcylpZigidW5kZWZpbmVkIiE9dHlwZW9mIHRbbl0pZm9yKHZhciBvPXRoaXMuZGVmaW5lZEtleXdvcmRzW25dLGk9MDtpPG8ubGVuZ3RoO2krKyl7dmFyIGE9b1tpXSxzPWEoZSx0W25dLHQscik7aWYoInN0cmluZyI9PXR5cGVvZiBzfHwibnVtYmVyIj09dHlwZW9mIHMpcmV0dXJuIHRoaXMuY3JlYXRlRXJyb3Iodi5LRVlXT1JEX0NVU1RPTSx7a2V5Om4sbWVzc2FnZTpzfSwiIiwiIixudWxsLGUsdCkucHJlZml4V2l0aChudWxsLG4pO2lmKHMmJiJvYmplY3QiPT10eXBlb2Ygcyl7dmFyIHU9cy5jb2RlO2lmKCJzdHJpbmciPT10eXBlb2YgdSl7aWYoIXZbdV0pdGhyb3cgbmV3IEVycm9yKCJVbmRlZmluZWQgZXJyb3IgY29kZSAodXNlIGRlZmluZUVycm9yKTogIit1KTt1PXZbdV19ZWxzZSJudW1iZXIiIT10eXBlb2YgdSYmKHU9di5LRVlXT1JEX0NVU1RPTSk7dmFyIGw9Im9iamVjdCI9PXR5cGVvZiBzLm1lc3NhZ2U/cy5tZXNzYWdlOntrZXk6bixtZXNzYWdlOnMubWVzc2FnZXx8Ij8ifSxjPXMuc2NoZW1hUGF0aHx8Ii8iK24ucmVwbGFjZSgvfi9nLCJ+MCIpLnJlcGxhY2UoL1wvL2csIn4xIik7cmV0dXJuIHRoaXMuY3JlYXRlRXJyb3IodSxsLHMuZGF0YVBhdGh8fG51bGwsYyxudWxsLGUsdCl9fXJldHVybiBudWxsfSxkLnByb3RvdHlwZS52YWxpZGF0ZUJhc2ljPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbjtyZXR1cm4obj10aGlzLnZhbGlkYXRlVHlwZShlLHQscikpP24ucHJlZml4V2l0aChudWxsLCJ0eXBlIik6KG49dGhpcy52YWxpZGF0ZUVudW0oZSx0LHIpKT9uLnByZWZpeFdpdGgobnVsbCwidHlwZSIpOm51bGx9LGQucHJvdG90eXBlLnZhbGlkYXRlVHlwZT1mdW5jdGlvbihlLHQpe2lmKHZvaWQgMD09PXQudHlwZSlyZXR1cm4gbnVsbDt2YXIgcj10eXBlb2YgZTtudWxsPT09ZT9yPSJudWxsIjpBcnJheS5pc0FycmF5KGUpJiYocj0iYXJyYXkiKTt2YXIgbj10LnR5cGU7QXJyYXkuaXNBcnJheShuKXx8KG49W25dKTtmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKyl7dmFyIGk9bltvXTtpZihpPT09cnx8ImludGVnZXIiPT09aSYmIm51bWJlciI9PT1yJiZlJTE9PT0wKXJldHVybiBudWxsfXJldHVybiB0aGlzLmNyZWF0ZUVycm9yKHYuSU5WQUxJRF9UWVBFLHt0eXBlOnIsZXhwZWN0ZWQ6bi5qb2luKCIvIil9LCIiLCIiLG51bGwsZSx0KX0sZC5wcm90b3R5cGUudmFsaWRhdGVFbnVtPWZ1bmN0aW9uKGUsdCl7aWYodm9pZCAwPT09dFsiZW51bSJdKXJldHVybiBudWxsO2Zvcih2YXIgcj0wO3I8dFsiZW51bSJdLmxlbmd0aDtyKyspe3ZhciBvPXRbImVudW0iXVtyXTtpZihuKGUsbykpcmV0dXJuIG51bGx9cmV0dXJuIHRoaXMuY3JlYXRlRXJyb3Iodi5FTlVNX01JU01BVENILHt2YWx1ZToidW5kZWZpbmVkIiE9dHlwZW9mIEpTT04/SlNPTi5zdHJpbmdpZnkoZSk6ZX0sIiIsIiIsbnVsbCxlLHQpfSxkLnByb3RvdHlwZS52YWxpZGF0ZU51bWVyaWM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiB0aGlzLnZhbGlkYXRlTXVsdGlwbGVPZihlLHQscil8fHRoaXMudmFsaWRhdGVNaW5NYXgoZSx0LHIpfHx0aGlzLnZhbGlkYXRlTmFOKGUsdCxyKXx8bnVsbH07dmFyIHk9TWF0aC5wb3coMiwtNTEpLG09MS15O2QucHJvdG90eXBlLnZhbGlkYXRlTXVsdGlwbGVPZj1mdW5jdGlvbihlLHQpe3ZhciByPXQubXVsdGlwbGVPZnx8dC5kaXZpc2libGVCeTtpZih2b2lkIDA9PT1yKXJldHVybiBudWxsO2lmKCJudW1iZXIiPT10eXBlb2YgZSl7dmFyIG49ZS9yJTE7aWYobj49eSYmbT5uKXJldHVybiB0aGlzLmNyZWF0ZUVycm9yKHYuTlVNQkVSX01VTFRJUExFX09GLHt2YWx1ZTplLG11bHRpcGxlT2Y6cn0sIiIsIiIsbnVsbCxlLHQpfXJldHVybiBudWxsfSxkLnByb3RvdHlwZS52YWxpZGF0ZU1pbk1heD1mdW5jdGlvbihlLHQpe2lmKCJudW1iZXIiIT10eXBlb2YgZSlyZXR1cm4gbnVsbDtpZih2b2lkIDAhPT10Lm1pbmltdW0pe2lmKGU8dC5taW5pbXVtKXJldHVybiB0aGlzLmNyZWF0ZUVycm9yKHYuTlVNQkVSX01JTklNVU0se3ZhbHVlOmUsbWluaW11bTp0Lm1pbmltdW19LCIiLCIvbWluaW11bSIsbnVsbCxlLHQpO2lmKHQuZXhjbHVzaXZlTWluaW11bSYmZT09PXQubWluaW11bSlyZXR1cm4gdGhpcy5jcmVhdGVFcnJvcih2Lk5VTUJFUl9NSU5JTVVNX0VYQ0xVU0lWRSx7dmFsdWU6ZSxtaW5pbXVtOnQubWluaW11bX0sIiIsIi9leGNsdXNpdmVNaW5pbXVtIixudWxsLGUsdCl9aWYodm9pZCAwIT09dC5tYXhpbXVtKXtpZihlPnQubWF4aW11bSlyZXR1cm4gdGhpcy5jcmVhdGVFcnJvcih2Lk5VTUJFUl9NQVhJTVVNLHt2YWx1ZTplLG1heGltdW06dC5tYXhpbXVtfSwiIiwiL21heGltdW0iLG51bGwsZSx0KTtpZih0LmV4Y2x1c2l2ZU1heGltdW0mJmU9PT10Lm1heGltdW0pcmV0dXJuIHRoaXMuY3JlYXRlRXJyb3Iodi5OVU1CRVJfTUFYSU1VTV9FWENMVVNJVkUse3ZhbHVlOmUsbWF4aW11bTp0Lm1heGltdW19LCIiLCIvZXhjbHVzaXZlTWF4aW11bSIsbnVsbCxlLHQpfXJldHVybiBudWxsfSxkLnByb3RvdHlwZS52YWxpZGF0ZU5hTj1mdW5jdGlvbihlLHQpe3JldHVybiJudW1iZXIiIT10eXBlb2YgZT9udWxsOmlzTmFOKGUpPT09ITB8fGU9PT0xLzB8fGU9PT0tKDEvMCk/dGhpcy5jcmVhdGVFcnJvcih2Lk5VTUJFUl9OT1RfQV9OVU1CRVIse3ZhbHVlOmV9LCIiLCIvdHlwZSIsbnVsbCxlLHQpOm51bGx9LGQucHJvdG90eXBlLnZhbGlkYXRlU3RyaW5nPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gdGhpcy52YWxpZGF0ZVN0cmluZ0xlbmd0aChlLHQscil8fHRoaXMudmFsaWRhdGVTdHJpbmdQYXR0ZXJuKGUsdCxyKXx8bnVsbH0sZC5wcm90b3R5cGUudmFsaWRhdGVTdHJpbmdMZW5ndGg9ZnVuY3Rpb24oZSx0KXtyZXR1cm4ic3RyaW5nIiE9dHlwZW9mIGU/bnVsbDp2b2lkIDAhPT10Lm1pbkxlbmd0aCYmZS5sZW5ndGg8dC5taW5MZW5ndGg/dGhpcy5jcmVhdGVFcnJvcih2LlNUUklOR19MRU5HVEhfU0hPUlQse2xlbmd0aDplLmxlbmd0aCxtaW5pbXVtOnQubWluTGVuZ3RofSwiIiwiL21pbkxlbmd0aCIsbnVsbCxlLHQpOnZvaWQgMCE9PXQubWF4TGVuZ3RoJiZlLmxlbmd0aD50Lm1heExlbmd0aD90aGlzLmNyZWF0ZUVycm9yKHYuU1RSSU5HX0xFTkdUSF9MT05HLHtsZW5ndGg6ZS5sZW5ndGgsbWF4aW11bTp0Lm1heExlbmd0aH0sIiIsIi9tYXhMZW5ndGgiLG51bGwsZSx0KTpudWxsfSxkLnByb3RvdHlwZS52YWxpZGF0ZVN0cmluZ1BhdHRlcm49ZnVuY3Rpb24oZSx0KXtpZigic3RyaW5nIiE9dHlwZW9mIGV8fCJzdHJpbmciIT10eXBlb2YgdC5wYXR0ZXJuJiYhKHQucGF0dGVybiBpbnN0YW5jZW9mIFJlZ0V4cCkpcmV0dXJuIG51bGw7dmFyIHI7aWYodC5wYXR0ZXJuIGluc3RhbmNlb2YgUmVnRXhwKXI9dC5wYXR0ZXJuO2Vsc2V7dmFyIG4sbz0iIixpPXQucGF0dGVybi5tYXRjaCgvXlwvKC4rKVwvKFtpbWddKikkLyk7aT8obj1pWzFdLG89aVsyXSk6bj10LnBhdHRlcm4scj1uZXcgUmVnRXhwKG4sbyl9cmV0dXJuIHIudGVzdChlKT9udWxsOnRoaXMuY3JlYXRlRXJyb3Iodi5TVFJJTkdfUEFUVEVSTix7cGF0dGVybjp0LnBhdHRlcm59LCIiLCIvcGF0dGVybiIsbnVsbCxlLHQpfSxkLnByb3RvdHlwZS52YWxpZGF0ZUFycmF5PWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKT90aGlzLnZhbGlkYXRlQXJyYXlMZW5ndGgoZSx0LHIpfHx0aGlzLnZhbGlkYXRlQXJyYXlVbmlxdWVJdGVtcyhlLHQscil8fHRoaXMudmFsaWRhdGVBcnJheUl0ZW1zKGUsdCxyKXx8bnVsbDpudWxsfSxkLnByb3RvdHlwZS52YWxpZGF0ZUFycmF5TGVuZ3RoPWZ1bmN0aW9uKGUsdCl7dmFyIHI7cmV0dXJuIHZvaWQgMCE9PXQubWluSXRlbXMmJmUubGVuZ3RoPHQubWluSXRlbXMmJihyPXRoaXMuY3JlYXRlRXJyb3Iodi5BUlJBWV9MRU5HVEhfU0hPUlQse2xlbmd0aDplLmxlbmd0aCxtaW5pbXVtOnQubWluSXRlbXN9LCIiLCIvbWluSXRlbXMiLG51bGwsZSx0KSx0aGlzLmhhbmRsZUVycm9yKHIpKT9yOnZvaWQgMCE9PXQubWF4SXRlbXMmJmUubGVuZ3RoPnQubWF4SXRlbXMmJihyPXRoaXMuY3JlYXRlRXJyb3Iodi5BUlJBWV9MRU5HVEhfTE9ORyx7bGVuZ3RoOmUubGVuZ3RoLG1heGltdW06dC5tYXhJdGVtc30sIiIsIi9tYXhJdGVtcyIsbnVsbCxlLHQpLHRoaXMuaGFuZGxlRXJyb3IocikpP3I6bnVsbH0sZC5wcm90b3R5cGUudmFsaWRhdGVBcnJheVVuaXF1ZUl0ZW1zPWZ1bmN0aW9uKGUsdCl7aWYodC51bmlxdWVJdGVtcylmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKylmb3IodmFyIG89cisxO288ZS5sZW5ndGg7bysrKWlmKG4oZVtyXSxlW29dKSl7dmFyIGk9dGhpcy5jcmVhdGVFcnJvcih2LkFSUkFZX1VOSVFVRSx7bWF0Y2gxOnIsbWF0Y2gyOm99LCIiLCIvdW5pcXVlSXRlbXMiLG51bGwsZSx0KTtpZih0aGlzLmhhbmRsZUVycm9yKGkpKXJldHVybiBpfXJldHVybiBudWxsfSxkLnByb3RvdHlwZS52YWxpZGF0ZUFycmF5SXRlbXM9ZnVuY3Rpb24oZSx0LHIpe2lmKHZvaWQgMD09PXQuaXRlbXMpcmV0dXJuIG51bGw7dmFyIG4sbztpZihBcnJheS5pc0FycmF5KHQuaXRlbXMpKXtmb3Iobz0wO288ZS5sZW5ndGg7bysrKWlmKG88dC5pdGVtcy5sZW5ndGgpe2lmKG49dGhpcy52YWxpZGF0ZUFsbChlW29dLHQuaXRlbXNbb10sW29dLFsiaXRlbXMiLG9dLHIrIi8iK28pKXJldHVybiBufWVsc2UgaWYodm9pZCAwIT09dC5hZGRpdGlvbmFsSXRlbXMpaWYoImJvb2xlYW4iPT10eXBlb2YgdC5hZGRpdGlvbmFsSXRlbXMpe2lmKCF0LmFkZGl0aW9uYWxJdGVtcyYmKG49dGhpcy5jcmVhdGVFcnJvcih2LkFSUkFZX0FERElUSU9OQUxfSVRFTVMse30sIi8iK28sIi9hZGRpdGlvbmFsSXRlbXMiLG51bGwsZSx0KSx0aGlzLmhhbmRsZUVycm9yKG4pKSlyZXR1cm4gbn1lbHNlIGlmKG49dGhpcy52YWxpZGF0ZUFsbChlW29dLHQuYWRkaXRpb25hbEl0ZW1zLFtvXSxbImFkZGl0aW9uYWxJdGVtcyJdLHIrIi8iK28pKXJldHVybiBufWVsc2UgZm9yKG89MDtvPGUubGVuZ3RoO28rKylpZihuPXRoaXMudmFsaWRhdGVBbGwoZVtvXSx0Lml0ZW1zLFtvXSxbIml0ZW1zIl0scisiLyIrbykpcmV0dXJuIG47cmV0dXJuIG51bGx9LGQucHJvdG90eXBlLnZhbGlkYXRlT2JqZWN0PWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4ib2JqZWN0IiE9dHlwZW9mIGV8fG51bGw9PT1lfHxBcnJheS5pc0FycmF5KGUpP251bGw6dGhpcy52YWxpZGF0ZU9iamVjdE1pbk1heFByb3BlcnRpZXMoZSx0LHIpfHx0aGlzLnZhbGlkYXRlT2JqZWN0UmVxdWlyZWRQcm9wZXJ0aWVzKGUsdCxyKXx8dGhpcy52YWxpZGF0ZU9iamVjdFByb3BlcnRpZXMoZSx0LHIpfHx0aGlzLnZhbGlkYXRlT2JqZWN0RGVwZW5kZW5jaWVzKGUsdCxyKXx8bnVsbH0sZC5wcm90b3R5cGUudmFsaWRhdGVPYmplY3RNaW5NYXhQcm9wZXJ0aWVzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbj1PYmplY3Qua2V5cyhlKTtyZXR1cm4gdm9pZCAwIT09dC5taW5Qcm9wZXJ0aWVzJiZuLmxlbmd0aDx0Lm1pblByb3BlcnRpZXMmJihyPXRoaXMuY3JlYXRlRXJyb3Iodi5PQkpFQ1RfUFJPUEVSVElFU19NSU5JTVVNLHtwcm9wZXJ0eUNvdW50Om4ubGVuZ3RoLG1pbmltdW06dC5taW5Qcm9wZXJ0aWVzfSwiIiwiL21pblByb3BlcnRpZXMiLG51bGwsZSx0KSx0aGlzLmhhbmRsZUVycm9yKHIpKT9yOnZvaWQgMCE9PXQubWF4UHJvcGVydGllcyYmbi5sZW5ndGg+dC5tYXhQcm9wZXJ0aWVzJiYocj10aGlzLmNyZWF0ZUVycm9yKHYuT0JKRUNUX1BST1BFUlRJRVNfTUFYSU1VTSx7cHJvcGVydHlDb3VudDpuLmxlbmd0aCxtYXhpbXVtOnQubWF4UHJvcGVydGllc30sIiIsIi9tYXhQcm9wZXJ0aWVzIixudWxsLGUsdCksdGhpcy5oYW5kbGVFcnJvcihyKSk/cjpudWxsfSxkLnByb3RvdHlwZS52YWxpZGF0ZU9iamVjdFJlcXVpcmVkUHJvcGVydGllcz1mdW5jdGlvbihlLHQpe2lmKHZvaWQgMCE9PXQucmVxdWlyZWQpZm9yKHZhciByPTA7cjx0LnJlcXVpcmVkLmxlbmd0aDtyKyspe3ZhciBuPXQucmVxdWlyZWRbcl07aWYodm9pZCAwPT09ZVtuXSl7dmFyIG89dGhpcy5jcmVhdGVFcnJvcih2Lk9CSkVDVF9SRVFVSVJFRCx7a2V5Om59LCIiLCIvcmVxdWlyZWQvIityLG51bGwsZSx0KTtpZih0aGlzLmhhbmRsZUVycm9yKG8pKXJldHVybiBvfX1yZXR1cm4gbnVsbH0sZC5wcm90b3R5cGUudmFsaWRhdGVPYmplY3RQcm9wZXJ0aWVzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbjtmb3IodmFyIG8gaW4gZSl7dmFyIGk9cisiLyIrby5yZXBsYWNlKC9+L2csIn4wIikucmVwbGFjZSgvXC8vZywifjEiKSxhPSExO2lmKHZvaWQgMCE9PXQucHJvcGVydGllcyYmdm9pZCAwIT09dC5wcm9wZXJ0aWVzW29dJiYoYT0hMCxuPXRoaXMudmFsaWRhdGVBbGwoZVtvXSx0LnByb3BlcnRpZXNbb10sW29dLFsicHJvcGVydGllcyIsb10saSkpKXJldHVybiBuO2lmKHZvaWQgMCE9PXQucGF0dGVyblByb3BlcnRpZXMpZm9yKHZhciBzIGluIHQucGF0dGVyblByb3BlcnRpZXMpe3ZhciB1PW5ldyBSZWdFeHAocyk7aWYodS50ZXN0KG8pJiYoYT0hMCxuPXRoaXMudmFsaWRhdGVBbGwoZVtvXSx0LnBhdHRlcm5Qcm9wZXJ0aWVzW3NdLFtvXSxbInBhdHRlcm5Qcm9wZXJ0aWVzIixzXSxpKSkpcmV0dXJuIG59aWYoYSl0aGlzLnRyYWNrVW5rbm93blByb3BlcnRpZXMmJih0aGlzLmtub3duUHJvcGVydHlQYXRoc1tpXT0hMCxkZWxldGUgdGhpcy51bmtub3duUHJvcGVydHlQYXRoc1tpXSk7ZWxzZSBpZih2b2lkIDAhPT10LmFkZGl0aW9uYWxQcm9wZXJ0aWVzKXtpZih0aGlzLnRyYWNrVW5rbm93blByb3BlcnRpZXMmJih0aGlzLmtub3duUHJvcGVydHlQYXRoc1tpXT0hMCxkZWxldGUgdGhpcy51bmtub3duUHJvcGVydHlQYXRoc1tpXSksImJvb2xlYW4iPT10eXBlb2YgdC5hZGRpdGlvbmFsUHJvcGVydGllcyl7aWYoIXQuYWRkaXRpb25hbFByb3BlcnRpZXMmJihuPXRoaXMuY3JlYXRlRXJyb3Iodi5PQkpFQ1RfQURESVRJT05BTF9QUk9QRVJUSUVTLHtrZXk6b30sIiIsIi9hZGRpdGlvbmFsUHJvcGVydGllcyIsbnVsbCxlLHQpLnByZWZpeFdpdGgobyxudWxsKSx0aGlzLmhhbmRsZUVycm9yKG4pKSlyZXR1cm4gbn1lbHNlIGlmKG49dGhpcy52YWxpZGF0ZUFsbChlW29dLHQuYWRkaXRpb25hbFByb3BlcnRpZXMsW29dLFsiYWRkaXRpb25hbFByb3BlcnRpZXMiXSxpKSlyZXR1cm4gbn1lbHNlIHRoaXMudHJhY2tVbmtub3duUHJvcGVydGllcyYmIXRoaXMua25vd25Qcm9wZXJ0eVBhdGhzW2ldJiYodGhpcy51bmtub3duUHJvcGVydHlQYXRoc1tpXT0hMCl9cmV0dXJuIG51bGx9LGQucHJvdG90eXBlLnZhbGlkYXRlT2JqZWN0RGVwZW5kZW5jaWVzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbjtpZih2b2lkIDAhPT10LmRlcGVuZGVuY2llcylmb3IodmFyIG8gaW4gdC5kZXBlbmRlbmNpZXMpaWYodm9pZCAwIT09ZVtvXSl7dmFyIGk9dC5kZXBlbmRlbmNpZXNbb107aWYoInN0cmluZyI9PXR5cGVvZiBpKXtpZih2b2lkIDA9PT1lW2ldJiYobj10aGlzLmNyZWF0ZUVycm9yKHYuT0JKRUNUX0RFUEVOREVOQ1lfS0VZLHtrZXk6byxtaXNzaW5nOml9LCIiLCIiLG51bGwsZSx0KS5wcmVmaXhXaXRoKG51bGwsbykucHJlZml4V2l0aChudWxsLCJkZXBlbmRlbmNpZXMiKSx0aGlzLmhhbmRsZUVycm9yKG4pKSlyZXR1cm4gbn1lbHNlIGlmKEFycmF5LmlzQXJyYXkoaSkpZm9yKHZhciBhPTA7YTxpLmxlbmd0aDthKyspe3ZhciBzPWlbYV07aWYodm9pZCAwPT09ZVtzXSYmKG49dGhpcy5jcmVhdGVFcnJvcih2Lk9CSkVDVF9ERVBFTkRFTkNZX0tFWSx7a2V5Om8sbWlzc2luZzpzfSwiIiwiLyIrYSxudWxsLGUsdCkucHJlZml4V2l0aChudWxsLG8pLnByZWZpeFdpdGgobnVsbCwiZGVwZW5kZW5jaWVzIiksdGhpcy5oYW5kbGVFcnJvcihuKSkpcmV0dXJuIG59ZWxzZSBpZihuPXRoaXMudmFsaWRhdGVBbGwoZSxpLFtdLFsiZGVwZW5kZW5jaWVzIixvXSxyKSlyZXR1cm4gbn1yZXR1cm4gbnVsbH0sZC5wcm90b3R5cGUudmFsaWRhdGVDb21iaW5hdGlvbnM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiB0aGlzLnZhbGlkYXRlQWxsT2YoZSx0LHIpfHx0aGlzLnZhbGlkYXRlQW55T2YoZSx0LHIpfHx0aGlzLnZhbGlkYXRlT25lT2YoZSx0LHIpfHx0aGlzLnZhbGlkYXRlTm90KGUsdCxyKXx8bnVsbH0sZC5wcm90b3R5cGUudmFsaWRhdGVBbGxPZj1mdW5jdGlvbihlLHQscil7aWYodm9pZCAwPT09dC5hbGxPZilyZXR1cm4gbnVsbDtmb3IodmFyIG4sbz0wO288dC5hbGxPZi5sZW5ndGg7bysrKXt2YXIgaT10LmFsbE9mW29dO2lmKG49dGhpcy52YWxpZGF0ZUFsbChlLGksW10sWyJhbGxPZiIsb10scikpcmV0dXJuIG59cmV0dXJuIG51bGx9LGQucHJvdG90eXBlLnZhbGlkYXRlQW55T2Y9ZnVuY3Rpb24oZSx0LHIpe2lmKHZvaWQgMD09PXQuYW55T2YpcmV0dXJuIG51bGw7dmFyIG4sbyxpPVtdLGE9dGhpcy5lcnJvcnMubGVuZ3RoO3RoaXMudHJhY2tVbmtub3duUHJvcGVydGllcyYmKG49dGhpcy51bmtub3duUHJvcGVydHlQYXRocyxvPXRoaXMua25vd25Qcm9wZXJ0eVBhdGhzKTtmb3IodmFyIHM9ITAsdT0wO3U8dC5hbnlPZi5sZW5ndGg7dSsrKXt0aGlzLnRyYWNrVW5rbm93blByb3BlcnRpZXMmJih0aGlzLnVua25vd25Qcm9wZXJ0eVBhdGhzPXt9LHRoaXMua25vd25Qcm9wZXJ0eVBhdGhzPXt9KTt2YXIgbD10LmFueU9mW3VdLGM9dGhpcy5lcnJvcnMubGVuZ3RoLGY9dGhpcy52YWxpZGF0ZUFsbChlLGwsW10sWyJhbnlPZiIsdV0scik7aWYobnVsbD09PWYmJmM9PT10aGlzLmVycm9ycy5sZW5ndGgpe2lmKHRoaXMuZXJyb3JzPXRoaXMuZXJyb3JzLnNsaWNlKDAsYSksdGhpcy50cmFja1Vua25vd25Qcm9wZXJ0aWVzKXtmb3IodmFyIGggaW4gdGhpcy5rbm93blByb3BlcnR5UGF0aHMpb1toXT0hMCxkZWxldGUgbltoXTtmb3IodmFyIHAgaW4gdGhpcy51bmtub3duUHJvcGVydHlQYXRocylvW3BdfHwobltwXT0hMCk7cz0hMTtjb250aW51ZX1yZXR1cm4gbnVsbH1mJiZpLnB1c2goZi5wcmVmaXhXaXRoKG51bGwsIiIrdSkucHJlZml4V2l0aChudWxsLCJhbnlPZiIpKX1yZXR1cm4gdGhpcy50cmFja1Vua25vd25Qcm9wZXJ0aWVzJiYodGhpcy51bmtub3duUHJvcGVydHlQYXRocz1uLHRoaXMua25vd25Qcm9wZXJ0eVBhdGhzPW8pLHM/KGk9aS5jb25jYXQodGhpcy5lcnJvcnMuc2xpY2UoYSkpLHRoaXMuZXJyb3JzPXRoaXMuZXJyb3JzLnNsaWNlKDAsYSksdGhpcy5jcmVhdGVFcnJvcih2LkFOWV9PRl9NSVNTSU5HLHt9LCIiLCIvYW55T2YiLGksZSx0KSk6dm9pZCAwfSxkLnByb3RvdHlwZS52YWxpZGF0ZU9uZU9mPWZ1bmN0aW9uKGUsdCxyKXtpZih2b2lkIDA9PT10Lm9uZU9mKXJldHVybiBudWxsO3ZhciBuLG8saT1udWxsLGE9W10scz10aGlzLmVycm9ycy5sZW5ndGg7dGhpcy50cmFja1Vua25vd25Qcm9wZXJ0aWVzJiYobj10aGlzLnVua25vd25Qcm9wZXJ0eVBhdGhzLG89dGhpcy5rbm93blByb3BlcnR5UGF0aHMpO2Zvcih2YXIgdT0wO3U8dC5vbmVPZi5sZW5ndGg7dSsrKXt0aGlzLnRyYWNrVW5rbm93blByb3BlcnRpZXMmJih0aGlzLnVua25vd25Qcm9wZXJ0eVBhdGhzPXt9LHRoaXMua25vd25Qcm9wZXJ0eVBhdGhzPXt9KTt2YXIgbD10Lm9uZU9mW3VdLGM9dGhpcy5lcnJvcnMubGVuZ3RoLGY9dGhpcy52YWxpZGF0ZUFsbChlLGwsW10sWyJvbmVPZiIsdV0scik7aWYobnVsbD09PWYmJmM9PT10aGlzLmVycm9ycy5sZW5ndGgpe2lmKG51bGwhPT1pKXJldHVybiB0aGlzLmVycm9ycz10aGlzLmVycm9ycy5zbGljZSgwLHMpLHRoaXMuY3JlYXRlRXJyb3Iodi5PTkVfT0ZfTVVMVElQTEUse2luZGV4MTppLGluZGV4Mjp1fSwiIiwiL29uZU9mIixudWxsLGUsdCk7aWYoaT11LHRoaXMudHJhY2tVbmtub3duUHJvcGVydGllcyl7Zm9yKHZhciBoIGluIHRoaXMua25vd25Qcm9wZXJ0eVBhdGhzKW9baF09ITAsZGVsZXRlIG5baF07Zm9yKHZhciBwIGluIHRoaXMudW5rbm93blByb3BlcnR5UGF0aHMpb1twXXx8KG5bcF09ITApfX1lbHNlIGYmJmEucHVzaChmKX1yZXR1cm4gdGhpcy50cmFja1Vua25vd25Qcm9wZXJ0aWVzJiYodGhpcy51bmtub3duUHJvcGVydHlQYXRocz1uLHRoaXMua25vd25Qcm9wZXJ0eVBhdGhzPW8pLG51bGw9PT1pPyhhPWEuY29uY2F0KHRoaXMuZXJyb3JzLnNsaWNlKHMpKSx0aGlzLmVycm9ycz10aGlzLmVycm9ycy5zbGljZSgwLHMpLHRoaXMuY3JlYXRlRXJyb3Iodi5PTkVfT0ZfTUlTU0lORyx7fSwiIiwiL29uZU9mIixhLGUsdCkpOih0aGlzLmVycm9ycz10aGlzLmVycm9ycy5zbGljZSgwLHMpLG51bGwpfSxkLnByb3RvdHlwZS52YWxpZGF0ZU5vdD1mdW5jdGlvbihlLHQscil7aWYodm9pZCAwPT09dC5ub3QpcmV0dXJuIG51bGw7dmFyIG4sbyxpPXRoaXMuZXJyb3JzLmxlbmd0aDt0aGlzLnRyYWNrVW5rbm93blByb3BlcnRpZXMmJihuPXRoaXMudW5rbm93blByb3BlcnR5UGF0aHMsbz10aGlzLmtub3duUHJvcGVydHlQYXRocyx0aGlzLnVua25vd25Qcm9wZXJ0eVBhdGhzPXt9LHRoaXMua25vd25Qcm9wZXJ0eVBhdGhzPXt9KTt2YXIgYT10aGlzLnZhbGlkYXRlQWxsKGUsdC5ub3QsbnVsbCxudWxsLHIpLHM9dGhpcy5lcnJvcnMuc2xpY2UoaSk7cmV0dXJuIHRoaXMuZXJyb3JzPXRoaXMuZXJyb3JzLnNsaWNlKDAsaSksdGhpcy50cmFja1Vua25vd25Qcm9wZXJ0aWVzJiYodGhpcy51bmtub3duUHJvcGVydHlQYXRocz1uLHRoaXMua25vd25Qcm9wZXJ0eVBhdGhzPW8pLG51bGw9PT1hJiYwPT09cy5sZW5ndGg/dGhpcy5jcmVhdGVFcnJvcih2Lk5PVF9QQVNTRUQse30sIiIsIi9ub3QiLG51bGwsZSx0KTpudWxsfSxkLnByb3RvdHlwZS52YWxpZGF0ZUh5cGVybWVkaWE9ZnVuY3Rpb24oZSx0LG4pe2lmKCF0LmxpbmtzKXJldHVybiBudWxsO2Zvcih2YXIgbyxpPTA7aTx0LmxpbmtzLmxlbmd0aDtpKyspe3ZhciBhPXQubGlua3NbaV07aWYoImRlc2NyaWJlZGJ5Ij09PWEucmVsKXtmb3IodmFyIHM9bmV3IHIoYS5ocmVmKSx1PSEwLGw9MDtsPHMudmFyTmFtZXMubGVuZ3RoO2wrKylpZighKHMudmFyTmFtZXNbbF1pbiBlKSl7dT0hMTticmVha31pZih1KXt2YXIgYz1zLmZpbGxGcm9tT2JqZWN0KGUpLGY9eyRyZWY6Y307aWYobz10aGlzLnZhbGlkYXRlQWxsKGUsZixbXSxbImxpbmtzIixpXSxuKSlyZXR1cm4gb319fX07dmFyIHY9e0lOVkFMSURfVFlQRTowLEVOVU1fTUlTTUFUQ0g6MSxBTllfT0ZfTUlTU0lORzoxMCxPTkVfT0ZfTUlTU0lORzoxMSxPTkVfT0ZfTVVMVElQTEU6MTIsTk9UX1BBU1NFRDoxMyxOVU1CRVJfTVVMVElQTEVfT0Y6MTAwLE5VTUJFUl9NSU5JTVVNOjEwMSxOVU1CRVJfTUlOSU1VTV9FWENMVVNJVkU6MTAyLE5VTUJFUl9NQVhJTVVNOjEwMyxOVU1CRVJfTUFYSU1VTV9FWENMVVNJVkU6MTA0LE5VTUJFUl9OT1RfQV9OVU1CRVI6MTA1LFNUUklOR19MRU5HVEhfU0hPUlQ6MjAwLFNUUklOR19MRU5HVEhfTE9ORzoyMDEsU1RSSU5HX1BBVFRFUk46MjAyLE9CSkVDVF9QUk9QRVJUSUVTX01JTklNVU06MzAwLE9CSkVDVF9QUk9QRVJUSUVTX01BWElNVU06MzAxLE9CSkVDVF9SRVFVSVJFRDozMDIsT0JKRUNUX0FERElUSU9OQUxfUFJPUEVSVElFUzozMDMsT0JKRUNUX0RFUEVOREVOQ1lfS0VZOjMwNCxBUlJBWV9MRU5HVEhfU0hPUlQ6NDAwLEFSUkFZX0xFTkdUSF9MT05HOjQwMSxBUlJBWV9VTklRVUU6NDAyLEFSUkFZX0FERElUSU9OQUxfSVRFTVM6NDAzLEZPUk1BVF9DVVNUT006NTAwLEtFWVdPUkRfQ1VTVE9NOjUwMSxDSVJDVUxBUl9SRUZFUkVOQ0U6NjAwLFVOS05PV05fUFJPUEVSVFk6MWUzfSxnPXt9O2Zvcih2YXIgYiBpbiB2KWdbdltiXV09Yjt2YXIgRT17SU5WQUxJRF9UWVBFOiJJbnZhbGlkIHR5cGU6IHt0eXBlfSAoZXhwZWN0ZWQge2V4cGVjdGVkfSkiLEVOVU1fTUlTTUFUQ0g6Ik5vIGVudW0gbWF0Y2ggZm9yOiB7dmFsdWV9IixBTllfT0ZfTUlTU0lORzonRGF0YSBkb2VzIG5vdCBtYXRjaCBhbnkgc2NoZW1hcyBmcm9tICJhbnlPZiInLE9ORV9PRl9NSVNTSU5HOidEYXRhIGRvZXMgbm90IG1hdGNoIGFueSBzY2hlbWFzIGZyb20gIm9uZU9mIicsT05FX09GX01VTFRJUExFOidEYXRhIGlzIHZhbGlkIGFnYWluc3QgbW9yZSB0aGFuIG9uZSBzY2hlbWEgZnJvbSAib25lT2YiOiBpbmRpY2VzIHtpbmRleDF9IGFuZCB7aW5kZXgyfScsTk9UX1BBU1NFRDonRGF0YSBtYXRjaGVzIHNjaGVtYSBmcm9tICJub3QiJyxOVU1CRVJfTVVMVElQTEVfT0Y6IlZhbHVlIHt2YWx1ZX0gaXMgbm90IGEgbXVsdGlwbGUgb2Yge211bHRpcGxlT2Z9IixOVU1CRVJfTUlOSU1VTToiVmFsdWUge3ZhbHVlfSBpcyBsZXNzIHRoYW4gbWluaW11bSB7bWluaW11bX0iLE5VTUJFUl9NSU5JTVVNX0VYQ0xVU0lWRToiVmFsdWUge3ZhbHVlfSBpcyBlcXVhbCB0byBleGNsdXNpdmUgbWluaW11bSB7bWluaW11bX0iLE5VTUJFUl9NQVhJTVVNOiJWYWx1ZSB7dmFsdWV9IGlzIGdyZWF0ZXIgdGhhbiBtYXhpbXVtIHttYXhpbXVtfSIsTlVNQkVSX01BWElNVU1fRVhDTFVTSVZFOiJWYWx1ZSB7dmFsdWV9IGlzIGVxdWFsIHRvIGV4Y2x1c2l2ZSBtYXhpbXVtIHttYXhpbXVtfSIsTlVNQkVSX05PVF9BX05VTUJFUjoiVmFsdWUge3ZhbHVlfSBpcyBub3QgYSB2YWxpZCBudW1iZXIiLFNUUklOR19MRU5HVEhfU0hPUlQ6IlN0cmluZyBpcyB0b28gc2hvcnQgKHtsZW5ndGh9IGNoYXJzKSwgbWluaW11bSB7bWluaW11bX0iLFNUUklOR19MRU5HVEhfTE9ORzoiU3RyaW5nIGlzIHRvbyBsb25nICh7bGVuZ3RofSBjaGFycyksIG1heGltdW0ge21heGltdW19IixTVFJJTkdfUEFUVEVSTjoiU3RyaW5nIGRvZXMgbm90IG1hdGNoIHBhdHRlcm46IHtwYXR0ZXJufSIsT0JKRUNUX1BST1BFUlRJRVNfTUlOSU1VTToiVG9vIGZldyBwcm9wZXJ0aWVzIGRlZmluZWQgKHtwcm9wZXJ0eUNvdW50fSksIG1pbmltdW0ge21pbmltdW19IixPQkpFQ1RfUFJPUEVSVElFU19NQVhJTVVNOiJUb28gbWFueSBwcm9wZXJ0aWVzIGRlZmluZWQgKHtwcm9wZXJ0eUNvdW50fSksIG1heGltdW0ge21heGltdW19IixPQkpFQ1RfUkVRVUlSRUQ6Ik1pc3NpbmcgcmVxdWlyZWQgcHJvcGVydHk6IHtrZXl9IixPQkpFQ1RfQURESVRJT05BTF9QUk9QRVJUSUVTOiJBZGRpdGlvbmFsIHByb3BlcnRpZXMgbm90IGFsbG93ZWQiLE9CSkVDVF9ERVBFTkRFTkNZX0tFWToiRGVwZW5kZW5jeSBmYWlsZWQgLSBrZXkgbXVzdCBleGlzdDoge21pc3Npbmd9IChkdWUgdG8ga2V5OiB7a2V5fSkiLEFSUkFZX0xFTkdUSF9TSE9SVDoiQXJyYXkgaXMgdG9vIHNob3J0ICh7bGVuZ3RofSksIG1pbmltdW0ge21pbmltdW19IixBUlJBWV9MRU5HVEhfTE9ORzoiQXJyYXkgaXMgdG9vIGxvbmcgKHtsZW5ndGh9KSwgbWF4aW11bSB7bWF4aW11bX0iLEFSUkFZX1VOSVFVRToiQXJyYXkgaXRlbXMgYXJlIG5vdCB1bmlxdWUgKGluZGljZXMge21hdGNoMX0gYW5kIHttYXRjaDJ9KSIsQVJSQVlfQURESVRJT05BTF9JVEVNUzoiQWRkaXRpb25hbCBpdGVtcyBub3QgYWxsb3dlZCIsRk9STUFUX0NVU1RPTToiRm9ybWF0IHZhbGlkYXRpb24gZmFpbGVkICh7bWVzc2FnZX0pIixLRVlXT1JEX0NVU1RPTToiS2V5d29yZCBmYWlsZWQ6IHtrZXl9ICh7bWVzc2FnZX0pIixDSVJDVUxBUl9SRUZFUkVOQ0U6IkNpcmN1bGFyICRyZWZzOiB7dXJsc30iLFVOS05PV05fUFJPUEVSVFk6IlVua25vd24gcHJvcGVydHkgKG5vdCBpbiBzY2hlbWEpIn07bC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShFcnJvci5wcm90b3R5cGUpLGwucHJvdG90eXBlLmNvbnN0cnVjdG9yPWwsbC5wcm90b3R5cGUubmFtZT0iVmFsaWRhdGlvbkVycm9yIixsLnByb3RvdHlwZS5wcmVmaXhXaXRoPWZ1bmN0aW9uKGUsdCl7DQppZihudWxsIT09ZSYmKGU9ZS5yZXBsYWNlKC9+L2csIn4wIikucmVwbGFjZSgvXC8vZywifjEiKSx0aGlzLmRhdGFQYXRoPSIvIitlK3RoaXMuZGF0YVBhdGgpLG51bGwhPT10JiYodD10LnJlcGxhY2UoL34vZywifjAiKS5yZXBsYWNlKC9cLy9nLCJ+MSIpLHRoaXMuc2NoZW1hUGF0aD0iLyIrdCt0aGlzLnNjaGVtYVBhdGgpLG51bGwhPT10aGlzLnN1YkVycm9ycylmb3IodmFyIHI9MDtyPHRoaXMuc3ViRXJyb3JzLmxlbmd0aDtyKyspdGhpcy5zdWJFcnJvcnNbcl0ucHJlZml4V2l0aChlLHQpO3JldHVybiB0aGlzfTt2YXIgdz17fSwkPWYoKTtyZXR1cm4gJC5hZGRMYW5ndWFnZSgiZW4tZ2IiLEUpLCQudHY0PSQsJH0pfSx7fV0sOTQ6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5NZXNzYWdlRmFjdG9yeT12b2lkIDA7dmFyIG89ZSgiLi9tZXNzYWdlLWZhY3RvcnkvTWVzc2FnZUZhY3RvcnkiKSxpPW4obyk7ci5NZXNzYWdlRmFjdG9yeT1pWyJkZWZhdWx0Il19LHsiLi9tZXNzYWdlLWZhY3RvcnkvTWVzc2FnZUZhY3RvcnkiOjk3fV0sOTU6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5NZXNzYWdlVHlwZT1yLk1lc3NhZ2U9dm9pZCAwO3ZhciBvPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLGk9bihvKSxhPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLHM9bihhKSx1PXIuTWVzc2FnZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG4sbyxhKXsoMCxpWyJkZWZhdWx0Il0pKHRoaXMsZSksdGhpcy5pZD10LHRoaXMuZnJvbT1yLHRoaXMudG89bix0aGlzLnR5cGU9byx0aGlzLmJvZHk9YX1yZXR1cm4oMCxzWyJkZWZhdWx0Il0pKGUsW3trZXk6ImFzc2VydElkZW50aXR5Iix2YWx1ZTpmdW5jdGlvbihlLHQpe2lmKCFlfHwhdCl0aHJvdyBuZXcgRXJyb3IoIm1lc3NhZ2UsIHRva2VuIHRvIGJlIHJlbW92ZWQsIGFuZCBhc3NlcnRlZElkZW50aXR5IG11c3QgYmUgcHJvdmlkZWQiKTt2YXIgcj10aGlzLmJvZHk7cmV0dXJuIHIuaWRUb2tlbj1udWxsLHIuYXNzZXJ0ZWRJZGVudGl0eT10LHRoaXMuYm9keT1yLHRoaXN9fSx7a2V5OiJhZGRJZFRva2VuIix2YWx1ZTpmdW5jdGlvbihlKXtpZighZSl0aHJvdyBuZXcgRXJyb3IoIm1lc3NhZ2UsIHRva2VuIHRvIGJlIGFkZGVkLCBtdXN0IGJlIHByb3ZpZGVkIik7dmFyIHQ9dGhpcy5ib2R5O3JldHVybiB0LmlkVG9rZW49ZSx0aGlzLmJvZHk9dCx0aGlzfX0se2tleToiYWRkQWNjZXNzVG9rZW4iLHZhbHVlOmZ1bmN0aW9uKGUpe2lmKCFlKXRocm93IG5ldyBFcnJvcigibWVzc2FnZSwgdG9rZW4gdG8gYmUgYWRkZWQsIG11c3QgYmUgcHJvdmlkZWQiKTt2YXIgdD10aGlzLmJvZHk7cmV0dXJuIHQuYWNjZXNzVG9rZW49ZSx0aGlzLmJvZHk9dCx0aGlzfX1dKSxlfSgpO3IuTWVzc2FnZVR5cGU9e0NSRUFURToiY3JlYXRlIixSRUFEOiJyZWFkIixVUERBVEU6InVwZGF0ZSIsREVMRVRFOiJkZWxldGUiLFNVQlNDUklCRToic3Vic2NyaWJlIixVTlNVQlNDUklCRToidW5zdWJzY3JpYmUiLFJFU1BPTlNFOiJyZXNwb25zZSIsRk9SV0FSRDoiZm9yd2FyZCIsRVhFQ1VURToiZXhlY3V0ZSJ9O3JbImRlZmF1bHQiXT11fSx7ImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MTAsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MTF9XSw5NjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fWZ1bmN0aW9uIG8oZSl7dmFyIHQ9KDAsdVsiZGVmYXVsdCJdKShlKS5yZWR1Y2UoZnVuY3Rpb24odCxyKXtyZXR1cm4gdFtlW3JdXT1yLHR9LHt9KTtyZXR1cm4oMCxhWyJkZWZhdWx0Il0pKCgwLHVbImRlZmF1bHQiXSkoZSkucmVkdWNlKGZ1bmN0aW9uKHQscil7cmV0dXJuIHRbcl09ZVtyXSx0fSxmdW5jdGlvbihlKXtyZXR1cm4gdFtlXX0pKX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5VUERBVEVfT1BFUkFUSU9OPXIuQVRUUklCVVRFX1RZUEU9ci5SRUFTT05fUEhSQVNFPXIuUkVTUE9OU0VfQ09ERT1yLkV4ZWN1dGVNZXNzYWdlQm9keT1yLlJlc3BvbnNlTWVzc2FnZUJvZHk9ci5Gb3J3YXJkTWVzc2FnZUJvZHk9ci5VcGRhdGVNZXNzYWdlQm9keT1yLkRlbGV0ZU1lc3NhZ2VCb2R5PXIuUmVhZE1lc3NhZ2VCb2R5PXIuQ3JlYXRlTWVzc2FnZUJvZHk9ci5NZXNzYWdlQm9keT12b2lkIDA7dmFyIGk9ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9mcmVlemUiKSxhPW4oaSkscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSx1PW4ocyksbD1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxjPW4obCksZj1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIpLGg9bihmKSxwPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cyIpLGQ9bihwKSx5PWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLG09bih5KSx2PWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGc9bih2KTtyLkVudW09bzt2YXIgYj1yLk1lc3NhZ2VCb2R5PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbixvLGkpeygwLG1bImRlZmF1bHQiXSkodGhpcyxlKSx0aGlzLmlkVG9rZW49dCx0aGlzLmFjY2Vzc1Rva2VuPXIsdGhpcy5yZXNvdXJjZT1uLHRoaXMuc2NoZW1hPW8sdGhpcy5hc3NlcnRlZElkZW50aXR5PWl9cmV0dXJuKDAsZ1siZGVmYXVsdCJdKShlLFt7a2V5OiJhZGRWaWEiLHZhbHVlOmZ1bmN0aW9uKGUpe2lmKCFlKXRocm93IG5ldyBFcnJvcigidmlhIFVSTCB0byBiZSBhZGRlZCwgbXVzdCBiZSBwcm92aWRlZCIpO3JldHVybiB0aGlzLnZpYT1lLHRoaXN9fV0pLGV9KCksRT0oci5DcmVhdGVNZXNzYWdlQm9keT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUscixuLG8saSxhLHMpe2lmKCgwLG1bImRlZmF1bHQiXSkodGhpcyx0KSwhZSl0aHJvdyBuZXcgRXJyb3IoIlRoZSB2YWx1ZSBwYXJhbWV0ZXIgaXMgbnVsbCIpO3ZhciB1PSgwLGhbImRlZmF1bHQiXSkodGhpcywoMCxjWyJkZWZhdWx0Il0pKHQpLmNhbGwodGhpcyxuLG8saSxhLHMsYSxzKSk7cmV0dXJuIHUudmFsdWU9ZSxyJiYodS5wb2xpY3k9ciksdX1yZXR1cm4oMCxkWyJkZWZhdWx0Il0pKHQsZSksdH0oYiksci5SZWFkTWVzc2FnZUJvZHk9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHIsbixvLGksYSxzLHUpeygwLG1bImRlZmF1bHQiXSkodGhpcyx0KTt2YXIgbD0oMCxoWyJkZWZhdWx0Il0pKHRoaXMsKDAsY1siZGVmYXVsdCJdKSh0KS5jYWxsKHRoaXMsZSxyLG4sbyxpKSk7cmV0dXJuIGEmJihsLmF0dHJpYnV0ZT1hKSxzJiYobC5jcml0ZXJpYVN5bnRheD1zKSx1JiYobC5jcml0ZXJpYT11KSxsfXJldHVybigwLGRbImRlZmF1bHQiXSkodCxlKSx0fShiKSxyLkRlbGV0ZU1lc3NhZ2VCb2R5PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyLG4sbyxpLGEpe2lmKCgwLG1bImRlZmF1bHQiXSkodGhpcyx0KSxuIGluc3RhbmNlb2YgQXJyYXkpe3ZhciBzPSgwLGhbImRlZmF1bHQiXSkodGhpcywoMCxjWyJkZWZhdWx0Il0pKHQpLmNhbGwodGhpcyxlLHIsbnVsbCxvLGkpKTtzLmNoaWxkcmVuUmVzb3VyY2VzPW59ZWxzZSB2YXIgcz0oMCxoWyJkZWZhdWx0Il0pKHRoaXMsKDAsY1siZGVmYXVsdCJdKSh0KS5jYWxsKHRoaXMsZSxyLG4sbyxpKSk7cmV0dXJuIGEmJihzLmF0dHJpYnV0ZT1hKSwoMCxoWyJkZWZhdWx0Il0pKHMpfXJldHVybigwLGRbImRlZmF1bHQiXSkodCxlKSx0fShiKSxyLlVwZGF0ZU1lc3NhZ2VCb2R5PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyLG4sbyxpLGEscyl7KDAsbVsiZGVmYXVsdCJdKSh0aGlzLHQpO3ZhciB1PSgwLGhbImRlZmF1bHQiXSkodGhpcywoMCxjWyJkZWZhdWx0Il0pKHQpLmNhbGwodGhpcyxlLHIsbixvLGkpKTtyZXR1cm4gdS5hdHRyaWJ1dGU9YSx1LnZhbHVlPXMsdX1yZXR1cm4oMCxkWyJkZWZhdWx0Il0pKHQsZSksKDAsZ1siZGVmYXVsdCJdKSh0LFt7a2V5OiJhZGRBdHRyaWJ1dGVUeXBlIix2YWx1ZTpmdW5jdGlvbihlKXtlJiYodGhpcy5hdHRyaWJ1dGVUeXBlPWUpfX0se2tleToiYWRkT3BlcmF0aW9uIix2YWx1ZTpmdW5jdGlvbihlKXtlJiYodGhpcy5vcGVyYXRpb249ZSl9fV0pLHR9KGIpLHIuRm9yd2FyZE1lc3NhZ2VCb2R5PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyLG4sbyxpLGEpeygwLG1bImRlZmF1bHQiXSkodGhpcyx0KTt2YXIgcz0oMCxoWyJkZWZhdWx0Il0pKHRoaXMsKDAsY1siZGVmYXVsdCJdKSh0KS5jYWxsKHRoaXMsZSxyLG4sbyxpKSk7cmV0dXJuIHMubWVzc2FnZT1hLHN9cmV0dXJuKDAsZFsiZGVmYXVsdCJdKSh0LGUpLHR9KGIpLHIuUmVzcG9uc2VNZXNzYWdlQm9keT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUscixuLG8saSl7KDAsbVsiZGVmYXVsdCJdKSh0aGlzLHQpO3ZhciBhPSgwLGhbImRlZmF1bHQiXSkodGhpcywoMCxjWyJkZWZhdWx0Il0pKHQpLmNhbGwodGhpcyxlLHIsbikpO3JldHVybiBvJiYoYS5jb2RlPW8sYS5kZXNjcmlwdGlvbj1FW29dKSxpJiYoYS52YWx1ZT1pKSxhfXJldHVybigwLGRbImRlZmF1bHQiXSkodCxlKSx0fShiKSxyLkV4ZWN1dGVNZXNzYWdlQm9keT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUscixuLG8saSxhLHMpeygwLG1bImRlZmF1bHQiXSkodGhpcyx0KTt2YXIgdT0oMCxoWyJkZWZhdWx0Il0pKHRoaXMsKDAsY1siZGVmYXVsdCJdKSh0KS5jYWxsKHRoaXMsZSxyLG4sbyxpKSk7cmV0dXJuIHUubWV0aG9kPWEscyYmKHMgaW5zdGFuY2VvZiBBcnJheT91LnBhcmFtcz1zOnUucGFyYW1zPVtzXSksdX1yZXR1cm4oMCxkWyJkZWZhdWx0Il0pKHQsZSksdH0oYiksci5SRVNQT05TRV9DT0RFPW8oezEwMDoiMTAwIiwxMDE6IjEwMSIsMjAwOiIyMDAiLDIwMToiMjAxIiwyMDI6IjIwMiIsMjAzOiIyMDMiLDIwNDoiMjA0IiwyMDU6IjIwNSIsMjA2OiIyMDYiLDMwMDoiMzAwIiwzMDE6IjMwMSIsMzAyOiIzMDIiLDMwMzoiMzAzIiwzMDQ6IjMwNCIsMzA1OiIzMDUiLDMwNzoiMzA3Iiw0MDA6IjQwMCIsNDAxOiI0MDEiLDQwMjoiNDAyIiw0MDM6IjQwMyIsNDA0OiI0MDQiLDQwNToiNDA1Iiw0MDY6IjQwNiIsNDA3OiI0MDciLDQwODoiNDA4Iiw0MDk6IjQwOSIsNDEwOiI0MTAiLDQxMToiNDExIiw0MTI6IjQxMiIsNDEzOiI0MTMiLDQxNDoiNDE0Iiw0MTU6IjQxNSIsNDE2OiI0MTYiLDQxNzoiNDE3Iiw0MjY6IjQyNiIsNTAwOiI1MDAiLDUwMToiNTAxIiw1MDI6IjUwMiIsNTAzOiI1MDMiLDUwNDoiNTA0Iiw1MDU6IjUwNSJ9KSxyLlJFQVNPTl9QSFJBU0U9byh7MTAwOiJDb250aW51ZSIsMTAxOiJTd2l0Y2hpbmcgUHJvdG9jb2xzIiwyMDA6Ik9LIiwyMDE6IkNyZWF0ZWQiLDIwMjoiQWNjZXB0ZWQiLDIwMzoiTm9uLUF1dGhvcml0YXRpdmUgSW5mb3JtYXRpb24iLDIwNDoiTm8gQ29udGVudCIsMjA1OiJSZXNldCBDb250ZW50IiwyMDY6IlBhcnRpYWwgQ29udGVudCIsMzAwOiJNdWx0aXBsZSBDaG9pY2VzIiwzMDE6Ik1vdmVkIFBlcm1hbmVudGx5IiwzMDI6IkZvdW5kIiwzMDM6IlNlZSBPdGhlciIsMzA0OiJOb3QgTW9kaWZpZWQiLDMwNToiVXNlIFByb3h5IiwzMDc6IlRlbXBvcmFyeSBSZWRpcmVjdCIsNDAwOiJCYWQgUmVxdWVzdCIsNDAxOiJVbmF1dGhvcml6ZWQiLDQwMjoiUGF5bWVudCBSZXF1aXJlZCIsNDAzOiJGb3JiaWRkZW4iLDQwNDoiTm90IEZvdW5kIiw0MDU6Ik1ldGhvZCBOb3QgQWxsb3dlZCIsNDA2OiJOb3QgQWNjZXB0YWJsZSIsNDA3OiJQcm94eSBBdXRoZW50aWNhdGlvbiBSZXF1aXJlZCIsNDA4OiJSZXF1ZXN0IFRpbWVvdXQiLDQwOToiQ29uZmxpY3QiLDQxMDoiR29uZSIsNDExOiJMZW5ndGggUmVxdWlyZWQiLDQxMjoiUHJlY29uZGl0aW9uIEZhaWxlZCIsNDEzOiJQYXlsb2FkIFRvbyBMYXJnZSIsNDE0OiJSZXF1ZXN0LVVSSSBUb28gTG9uZyIsNDE1OiJVbnN1cHBvcnRlZCBNZWRpYSBUeXBlIiw0MTY6IlJhbmdlIE5vdCBTYXRpc2ZpYWJsZSIsNDE3OiJFeHBlY3RhdGlvbiBGYWlsZWQiLDQyNjoiVXBncmFkZSBSZXF1aXJlZCIsNTAwOiJJbnRlcm5hbCBTZXJ2ZXIgRXJyb3IiLDUwMToiTm90IEltcGxlbWVudGVkIiw1MDI6IkJhZCBHYXRld2F5Iiw1MDM6IlNlcnZpY2UgVW5hdmFpbGFibGUiLDUwNDoiR2F0ZXdheSBUaW1lLW91dCIsNTA1OiJIVFRQIFZlcnNpb24gTm90IFN1cHBvcnRlZCJ9KSk7ci5BVFRSSUJVVEVfVFlQRT1vKHtPQkpFQ1Q6Ik9CSkVDVCIsQVJSQVk6IkFSUkFZIn0pLHIuVVBEQVRFX09QRVJBVElPTj1vKHtBREQ6IkFERCIsUkVNT1ZFOiJSRU1PVkUifSk7clsiZGVmYXVsdCJdPWJ9LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9mcmVlemUiOjMsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiI6NSwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIjo2LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEwLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjExLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiOjEzLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI6MTR9XSw5NzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLklkR2VuZXJhdG9yPXZvaWQgMDt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL3JlZ2VuZXJhdG9yIiksaT1uKG8pLGE9ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIikscz1uKGEpLHU9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksbD1uKHUpLGM9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksZj1uKGMpLGg9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iKSxwPW4oaCksZD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvZ2V0IikseT1uKGQpLG09ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzIiksdj1uKG0pLGc9ZSgiLi4vcmVUSElOS09iamVjdC9SZXRoaW5rT2JqZWN0LmpzIiksYj1uKGcpLEU9ZSgiLi9NZXNzYWdlLmpzIiksdz1uKEUpLCQ9ZSgiLi9NZXNzYWdlQm9keS5qcyIpLF89ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHIpeygwLGxbImRlZmF1bHQiXSkodGhpcyx0KTt2YXIgbj0oMCxwWyJkZWZhdWx0Il0pKHRoaXMsKDAsc1siZGVmYXVsdCJdKSh0KS5jYWxsKHRoaXMsZSxyKSk7cmV0dXJuIG4ubXlHZW5lcmF0b3I9KG5ldyBNKS5pZE1ha2VyKCksbn1yZXR1cm4oMCx2WyJkZWZhdWx0Il0pKHQsZSksKDAsZlsiZGVmYXVsdCJdKSh0LFt7a2V5OiJ2YWxpZGF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuKDAseVsiZGVmYXVsdCJdKSgoMCxzWyJkZWZhdWx0Il0pKHQucHJvdG90eXBlKSwidmFsaWRhdGUiLHRoaXMpLmNhbGwodGhpcyxlKX19LHtrZXk6ImNyZWF0ZUNyZWF0ZU1lc3NhZ2VSZXF1ZXN0Iix2YWx1ZTpmdW5jdGlvbihlLHQscixuKXtpZighZXx8IXR8fCFyKXRocm93IG5ldyBFcnJvcigiZnJvbSwgdG8sIGFuZCB2YWx1ZSBvZiBvYmplY3QgdG8gYmUgY3JlYXRlZCBNVVNUIGJlIHNwZWNpZmllZCIpO3ZhciBvPXRoaXMubXlHZW5lcmF0b3IubmV4dCgpLnZhbHVlLGk9bmV3ICQuQ3JlYXRlTWVzc2FnZUJvZHkocixuLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCksYT1uZXcgd1siZGVmYXVsdCJdKG8sZSx0LEUuTWVzc2FnZVR5cGUuQ1JFQVRFLGkpO3JldHVybiBhfX0se2tleToiY3JlYXRlRm9yd2FyZE1lc3NhZ2VSZXF1ZXN0Iix2YWx1ZTpmdW5jdGlvbihlLHQscil7aWYoIWV8fCF0fHwhcil0aHJvdyBuZXcgRXJyb3IoImZyb20sIHRvLCBhbmQgbWVzc2FnZSB0byBmb3J3YXJkIE1VU1QgYmUgc3BlY2lmaWVkIik7dmFyIG49dGhpcy5teUdlbmVyYXRvci5uZXh0KCkudmFsdWUsbz1uZXcgJC5Gb3J3YXJkTWVzc2FnZUJvZHkobnVsbCxudWxsLG51bGwsbnVsbCxudWxsLHIpLGk9bmV3IHdbImRlZmF1bHQiXShuLGUsdCxFLk1lc3NhZ2VUeXBlLkZPUldBUkQsbyk7cmV0dXJuIGl9fSx7a2V5OiJjcmVhdGVEZWxldGVNZXNzYWdlUmVxdWVzdCIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7aWYoIWV8fCF0KXRocm93IG5ldyBFcnJvcigiZnJvbSBhbmQgdG8gcGFyYW1ldGVycyBNVVNUIGJlIHNwZWNpZmllZCIpO3ZhciBvPXRoaXMubXlHZW5lcmF0b3IubmV4dCgpLnZhbHVlLGk9bmV3ICQuRGVsZXRlTWVzc2FnZUJvZHkobnVsbCxudWxsLHIsbixudWxsLG51bGwpLGE9bmV3IHdbImRlZmF1bHQiXShvLGUsdCxFLk1lc3NhZ2VUeXBlLkRFTEVURSxpKTtyZXR1cm4gYX19LHtrZXk6ImNyZWF0ZVVwZGF0ZU1lc3NhZ2VSZXF1ZXN0Iix2YWx1ZTpmdW5jdGlvbihlLHQscixuLG8pe2lmKCFlfHwhdHx8IXIpdGhyb3cgbmV3IEVycm9yKCJmcm9tLCBhbmQgdG8gYW5kIHZhbHVlIE1VU1QgYmUgc3BlY2lmaWVkIik7dmFyIGk9dGhpcy5teUdlbmVyYXRvci5uZXh0KCkudmFsdWUsYT1uZXcgJC5VcGRhdGVNZXNzYWdlQm9keShudWxsLG51bGwsbixudWxsLG51bGwsbyxyKSxzPW5ldyB3WyJkZWZhdWx0Il0oaSxlLHQsRS5NZXNzYWdlVHlwZS5VUERBVEUsYSk7cmV0dXJuIHN9fSx7a2V5OiJjcmVhdGVSZWFkTWVzc2FnZVJlcXVlc3QiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4pe2lmKCFlfHwhdHx8IXIpdGhyb3cgbmV3IEVycm9yKCJmcm9tLCB0byBhbmQgdGhlIHJlc291cmNlIHRvIHJlYWQgZnJvbSBNVVNUIGJlIHNwZWNpZmllZCIpO3ZhciBvPXRoaXMubXlHZW5lcmF0b3IubmV4dCgpLnZhbHVlLGk9bmV3ICQuUmVhZE1lc3NhZ2VCb2R5KG51bGwsbnVsbCxyLG51bGwsbnVsbCxuLG51bGwsbnVsbCksYT1uZXcgd1siZGVmYXVsdCJdKG8sZSx0LEUuTWVzc2FnZVR5cGUuUkVBRCxpKTtyZXR1cm4gYX19LHtrZXk6ImNyZWF0ZVN1YnNjcmliZU1lc3NhZ2VSZXF1ZXN0Iix2YWx1ZTpmdW5jdGlvbihlLHQscil7aWYoIWV8fCF0fHwhcil0aHJvdyBuZXcgRXJyb3IoImZyb20sIHRvIGFuZCB0aGUgcmVzb3VyY2UgdG8gc3Vic2NyaWJlIHRvIE1VU1QgYmUgc3BlY2lmaWVkIik7dmFyIG49dGhpcy5teUdlbmVyYXRvci5uZXh0KCkudmFsdWUsbz1uZXcgJC5NZXNzYWdlQm9keShudWxsLG51bGwscixudWxsLG51bGwpLGk9bmV3IHdbImRlZmF1bHQiXShuLGUsdCxFLk1lc3NhZ2VUeXBlLlNVQlNDUklCRSxvKTtyZXR1cm4gaX19LHtrZXk6ImNyZWF0ZVVuc3Vic2NyaWJlTWVzc2FnZVJlcXVlc3QiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXtpZighZXx8IXR8fCFyKXRocm93IG5ldyBFcnJvcigiZnJvbSwgdG8gYW5kIHRoZSByZXNvdXJjZSB0byBzdWJzY3JpYmUgdG8gTVVTVCBiZSBzcGVjaWZpZWQiKTt2YXIgbj10aGlzLm15R2VuZXJhdG9yLm5leHQoKS52YWx1ZSxvPW5ldyAkLk1lc3NhZ2VCb2R5KG51bGwsbnVsbCxyLG51bGwsbnVsbCksaT1uZXcgd1siZGVmYXVsdCJdKG4sZSx0LEUuTWVzc2FnZVR5cGUuVU5TVUJTQ1JJQkUsbyk7cmV0dXJuIGl9fSx7a2V5OiJjcmVhdGVFeGVjdXRlTWVzc2FnZVJlcXVlc3QiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4pe2lmKCFlfHwhdHx8IXIpdGhyb3cgbmV3IEVycm9yKCJmcm9tLCB0byBhbmQgdGhlIG1ldGhvZCB0byBleGVjdXRlIE1VU1QgYmUgc3BlY2lmaWVkIik7dmFyIG89dGhpcy5teUdlbmVyYXRvci5uZXh0KCkudmFsdWUsaT1uZXcgJC5FeGVjdXRlTWVzc2FnZUJvZHkobnVsbCxudWxsLG51bGwsbnVsbCxudWxsLHIsbiksYT1uZXcgd1siZGVmYXVsdCJdKG8sZSx0LEUuTWVzc2FnZVR5cGUuRVhFQ1VURSxpKTtyZXR1cm4gYX19LHtrZXk6ImNyZWF0ZU1lc3NhZ2VSZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7aWYoIXQpdGhyb3cgbmV3IEVycm9yKCJyZXNwb25zZSBDb2RlIE1VU1QgYmUgc3BlY2lmaWVkIik7dmFyIG89bmV3ICQuUmVzcG9uc2VNZXNzYWdlQm9keShudWxsLG51bGwsbnVsbCx0LHIsbik7cmV0dXJuIG5ldyB3WyJkZWZhdWx0Il0oZS5pZCxlLnRvLGUuZnJvbSxFLk1lc3NhZ2VUeXBlLlJFU1BPTlNFLG8pfX0se2tleToiZ2VuZXJhdGVNZXNzYWdlUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXtpZighZXx8IXQpdGhyb3cgbmV3IEVycm9yKCJtZXNzYWdlIGFuZCByZXNwb25zZSBjb2RlIE1VU1QgYmUgc3BlY2lmaWVkIik7dmFyIG49ZS5ib2R5LG89bi5pZFRva2VuLGk9bi5hY2Nlc3NUb2tlbixhPW4ucmVzb3VyY2Uscz1uZXcgJC5SZXNwb25zZU1lc3NhZ2VCb2R5KG8saSxhLHQsciksdT10aGlzLm15R2VuZXJhdG9yLm5leHQoKS52YWx1ZTtyZXR1cm4gbmV3IHdbImRlZmF1bHQiXSh1LGUudG8sZS5mcm9tLEUuTWVzc2FnZVR5cGUuUkVTUE9OU0Uscyl9fV0pLHR9KGJbImRlZmF1bHQiXSksTT1yLklkR2VuZXJhdG9yPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpeygwLGxbImRlZmF1bHQiXSkodGhpcyxlKX1yZXR1cm4oMCxmWyJkZWZhdWx0Il0pKGUsW3trZXk6ImlkTWFrZXIiLHZhbHVlOmlbImRlZmF1bHQiXS5tYXJrKGZ1bmN0aW9uIHQoKXt2YXIgZTtyZXR1cm4gaVsiZGVmYXVsdCJdLndyYXAoZnVuY3Rpb24odCl7Zm9yKDs7KXN3aXRjaCh0LnByZXY9dC5uZXh0KXtjYXNlIDA6ZT0xO2Nhc2UgMTppZighKDFlNj5lKSl7dC5uZXh0PTY7YnJlYWt9cmV0dXJuIHQubmV4dD00LGUrKztjYXNlIDQ6dC5uZXh0PTE7YnJlYWs7Y2FzZSA2OmNhc2UiZW5kIjpyZXR1cm4gdC5zdG9wKCl9fSx0LHRoaXMpfSl9XSksZX0oKTtyWyJkZWZhdWx0Il09X30seyIuLi9yZVRISU5LT2JqZWN0L1JldGhpbmtPYmplY3QuanMiOjk4LCIuL01lc3NhZ2UuanMiOjk1LCIuL01lc3NhZ2VCb2R5LmpzIjo5NiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIjo1LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEwLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjExLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvZ2V0IjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzIjoxMywiYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iOjE0LCJiYWJlbC1ydW50aW1lL3JlZ2VuZXJhdG9yIjoxNn1dLDk4OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuUmV0aGlua09iamVjdD12b2lkIDA7dmFyIG89ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksaT1uKG8pLGE9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIikscz1uKGEpLHU9ZSgidHY0IiksbD1uKHUpLGM9ci5SZXRoaW5rT2JqZWN0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIpeygwLGlbImRlZmF1bHQiXSkodGhpcyxlKTt0aGlzLnZhbGlkYXRpb249dCx0aGlzLnNjaGVtYT1yfXJldHVybigwLHNbImRlZmF1bHQiXSkoZSxbe2tleToidmFsaWRhdGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnNjaGVtYT9sWyJkZWZhdWx0Il0udmFsaWRhdGUoZSx0aGlzLnNjaGVtYSk6ITF9fV0pLGV9KCk7clsiZGVmYXVsdCJdPWN9LHsiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxMSx0djQ6OTN9XX0se30sWzk0XSkoOTQpfSk7DQp9KS5jYWxsKHRoaXMsdHlwZW9mIGdsb2JhbCAhPT0gInVuZGVmaW5lZCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gInVuZGVmaW5lZCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gInVuZGVmaW5lZCIgPyB3aW5kb3cgOiB7fSkNCn0se31dLDU3MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQovLyBwcm90b3R5cGUgY2xhc3MgZm9yIGhhc2ggZnVuY3Rpb25zDQpmdW5jdGlvbiBIYXNoIChibG9ja1NpemUsIGZpbmFsU2l6ZSkgew0KICB0aGlzLl9ibG9jayA9IG5ldyBCdWZmZXIoYmxvY2tTaXplKQ0KICB0aGlzLl9maW5hbFNpemUgPSBmaW5hbFNpemUNCiAgdGhpcy5fYmxvY2tTaXplID0gYmxvY2tTaXplDQogIHRoaXMuX2xlbiA9IDANCiAgdGhpcy5fcyA9IDANCn0NCg0KSGFzaC5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKGRhdGEsIGVuYykgew0KICBpZiAodHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnKSB7DQogICAgZW5jID0gZW5jIHx8ICd1dGY4Jw0KICAgIGRhdGEgPSBuZXcgQnVmZmVyKGRhdGEsIGVuYykNCiAgfQ0KDQogIHZhciBsID0gdGhpcy5fbGVuICs9IGRhdGEubGVuZ3RoDQogIHZhciBzID0gdGhpcy5fcyB8fCAwDQogIHZhciBmID0gMA0KICB2YXIgYnVmZmVyID0gdGhpcy5fYmxvY2sNCg0KICB3aGlsZSAocyA8IGwpIHsNCiAgICB2YXIgdCA9IE1hdGgubWluKGRhdGEubGVuZ3RoLCBmICsgdGhpcy5fYmxvY2tTaXplIC0gKHMgJSB0aGlzLl9ibG9ja1NpemUpKQ0KICAgIHZhciBjaCA9ICh0IC0gZikNCg0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2g7IGkrKykgew0KICAgICAgYnVmZmVyWyhzICUgdGhpcy5fYmxvY2tTaXplKSArIGldID0gZGF0YVtpICsgZl0NCiAgICB9DQoNCiAgICBzICs9IGNoDQogICAgZiArPSBjaA0KDQogICAgaWYgKChzICUgdGhpcy5fYmxvY2tTaXplKSA9PT0gMCkgew0KICAgICAgdGhpcy5fdXBkYXRlKGJ1ZmZlcikNCiAgICB9DQogIH0NCiAgdGhpcy5fcyA9IHMNCg0KICByZXR1cm4gdGhpcw0KfQ0KDQpIYXNoLnByb3RvdHlwZS5kaWdlc3QgPSBmdW5jdGlvbiAoZW5jKSB7DQogIC8vIFN1cHBvc2UgdGhlIGxlbmd0aCBvZiB0aGUgbWVzc2FnZSBNLCBpbiBiaXRzLCBpcyBsDQogIHZhciBsID0gdGhpcy5fbGVuICogOA0KDQogIC8vIEFwcGVuZCB0aGUgYml0IDEgdG8gdGhlIGVuZCBvZiB0aGUgbWVzc2FnZQ0KICB0aGlzLl9ibG9ja1t0aGlzLl9sZW4gJSB0aGlzLl9ibG9ja1NpemVdID0gMHg4MA0KDQogIC8vIGFuZCB0aGVuIGsgemVybyBiaXRzLCB3aGVyZSBrIGlzIHRoZSBzbWFsbGVzdCBub24tbmVnYXRpdmUgc29sdXRpb24gdG8gdGhlIGVxdWF0aW9uIChsICsgMSArIGspID09PSBmaW5hbFNpemUgbW9kIGJsb2NrU2l6ZQ0KICB0aGlzLl9ibG9jay5maWxsKDAsIHRoaXMuX2xlbiAlIHRoaXMuX2Jsb2NrU2l6ZSArIDEpDQoNCiAgaWYgKGwgJSAodGhpcy5fYmxvY2tTaXplICogOCkgPj0gdGhpcy5fZmluYWxTaXplICogOCkgew0KICAgIHRoaXMuX3VwZGF0ZSh0aGlzLl9ibG9jaykNCiAgICB0aGlzLl9ibG9jay5maWxsKDApDQogIH0NCg0KICAvLyB0byB0aGlzIGFwcGVuZCB0aGUgYmxvY2sgd2hpY2ggaXMgZXF1YWwgdG8gdGhlIG51bWJlciBsIHdyaXR0ZW4gaW4gYmluYXJ5DQogIC8vIFRPRE86IGhhbmRsZSBjYXNlIHdoZXJlIGwgaXMgPiBNYXRoLnBvdygyLCAyOSkNCiAgdGhpcy5fYmxvY2sud3JpdGVJbnQzMkJFKGwsIHRoaXMuX2Jsb2NrU2l6ZSAtIDQpDQoNCiAgdmFyIGhhc2ggPSB0aGlzLl91cGRhdGUodGhpcy5fYmxvY2spIHx8IHRoaXMuX2hhc2goKQ0KDQogIHJldHVybiBlbmMgPyBoYXNoLnRvU3RyaW5nKGVuYykgOiBoYXNoDQp9DQoNCkhhc2gucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoKSB7DQogIHRocm93IG5ldyBFcnJvcignX3VwZGF0ZSBtdXN0IGJlIGltcGxlbWVudGVkIGJ5IHN1YmNsYXNzJykNCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSBIYXNoDQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiYnVmZmVyIjo5M31dLDU3MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQp2YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gU0hBIChhbGdvcml0aG0pIHsNCiAgYWxnb3JpdGhtID0gYWxnb3JpdGhtLnRvTG93ZXJDYXNlKCkNCg0KICB2YXIgQWxnb3JpdGhtID0gZXhwb3J0c1thbGdvcml0aG1dDQogIGlmICghQWxnb3JpdGhtKSB0aHJvdyBuZXcgRXJyb3IoYWxnb3JpdGhtICsgJyBpcyBub3Qgc3VwcG9ydGVkICh3ZSBhY2NlcHQgcHVsbCByZXF1ZXN0cyknKQ0KDQogIHJldHVybiBuZXcgQWxnb3JpdGhtKCkNCn0NCg0KZXhwb3J0cy5zaGEgPSByZXF1aXJlKCcuL3NoYScpDQpleHBvcnRzLnNoYTEgPSByZXF1aXJlKCcuL3NoYTEnKQ0KZXhwb3J0cy5zaGEyMjQgPSByZXF1aXJlKCcuL3NoYTIyNCcpDQpleHBvcnRzLnNoYTI1NiA9IHJlcXVpcmUoJy4vc2hhMjU2JykNCmV4cG9ydHMuc2hhMzg0ID0gcmVxdWlyZSgnLi9zaGEzODQnKQ0KZXhwb3J0cy5zaGE1MTIgPSByZXF1aXJlKCcuL3NoYTUxMicpDQoNCn0seyIuL3NoYSI6NTczLCIuL3NoYTEiOjU3NCwiLi9zaGEyMjQiOjU3NSwiLi9zaGEyNTYiOjU3NiwiLi9zaGEzODQiOjU3NywiLi9zaGE1MTIiOjU3OH1dLDU3MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQovKg0KICogQSBKYXZhU2NyaXB0IGltcGxlbWVudGF0aW9uIG9mIHRoZSBTZWN1cmUgSGFzaCBBbGdvcml0aG0sIFNIQS0wLCBhcyBkZWZpbmVkDQogKiBpbiBGSVBTIFBVQiAxODAtMQ0KICogVGhpcyBzb3VyY2UgY29kZSBpcyBkZXJpdmVkIGZyb20gc2hhMS5qcyBvZiB0aGUgc2FtZSByZXBvc2l0b3J5Lg0KICogVGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBTSEEtMCBhbmQgU0hBLTEgaXMganVzdCBhIGJpdHdpc2Ugcm90YXRlIGxlZnQNCiAqIG9wZXJhdGlvbiB3YXMgYWRkZWQuDQogKi8NCg0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKQ0KdmFyIEhhc2ggPSByZXF1aXJlKCcuL2hhc2gnKQ0KDQp2YXIgSyA9IFsNCiAgMHg1YTgyNzk5OSwgMHg2ZWQ5ZWJhMSwgMHg4ZjFiYmNkYyB8IDAsIDB4Y2E2MmMxZDYgfCAwDQpdDQoNCnZhciBXID0gbmV3IEFycmF5KDgwKQ0KDQpmdW5jdGlvbiBTaGEgKCkgew0KICB0aGlzLmluaXQoKQ0KICB0aGlzLl93ID0gVw0KDQogIEhhc2guY2FsbCh0aGlzLCA2NCwgNTYpDQp9DQoNCmluaGVyaXRzKFNoYSwgSGFzaCkNCg0KU2hhLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkgew0KICB0aGlzLl9hID0gMHg2NzQ1MjMwMQ0KICB0aGlzLl9iID0gMHhlZmNkYWI4OQ0KICB0aGlzLl9jID0gMHg5OGJhZGNmZQ0KICB0aGlzLl9kID0gMHgxMDMyNTQ3Ng0KICB0aGlzLl9lID0gMHhjM2QyZTFmMA0KDQogIHJldHVybiB0aGlzDQp9DQoNCmZ1bmN0aW9uIHJvdGw1IChudW0pIHsNCiAgcmV0dXJuIChudW0gPDwgNSkgfCAobnVtID4+PiAyNykNCn0NCg0KZnVuY3Rpb24gcm90bDMwIChudW0pIHsNCiAgcmV0dXJuIChudW0gPDwgMzApIHwgKG51bSA+Pj4gMikNCn0NCg0KZnVuY3Rpb24gZnQgKHMsIGIsIGMsIGQpIHsNCiAgaWYgKHMgPT09IDApIHJldHVybiAoYiAmIGMpIHwgKCh+YikgJiBkKQ0KICBpZiAocyA9PT0gMikgcmV0dXJuIChiICYgYykgfCAoYiAmIGQpIHwgKGMgJiBkKQ0KICByZXR1cm4gYiBeIGMgXiBkDQp9DQoNClNoYS5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uIChNKSB7DQogIHZhciBXID0gdGhpcy5fdw0KDQogIHZhciBhID0gdGhpcy5fYSB8IDANCiAgdmFyIGIgPSB0aGlzLl9iIHwgMA0KICB2YXIgYyA9IHRoaXMuX2MgfCAwDQogIHZhciBkID0gdGhpcy5fZCB8IDANCiAgdmFyIGUgPSB0aGlzLl9lIHwgMA0KDQogIGZvciAodmFyIGkgPSAwOyBpIDwgMTY7ICsraSkgV1tpXSA9IE0ucmVhZEludDMyQkUoaSAqIDQpDQogIGZvciAoOyBpIDwgODA7ICsraSkgV1tpXSA9IFdbaSAtIDNdIF4gV1tpIC0gOF0gXiBXW2kgLSAxNF0gXiBXW2kgLSAxNl0NCg0KICBmb3IgKHZhciBqID0gMDsgaiA8IDgwOyArK2opIHsNCiAgICB2YXIgcyA9IH5+KGogLyAyMCkNCiAgICB2YXIgdCA9IChyb3RsNShhKSArIGZ0KHMsIGIsIGMsIGQpICsgZSArIFdbal0gKyBLW3NdKSB8IDANCg0KICAgIGUgPSBkDQogICAgZCA9IGMNCiAgICBjID0gcm90bDMwKGIpDQogICAgYiA9IGENCiAgICBhID0gdA0KICB9DQoNCiAgdGhpcy5fYSA9IChhICsgdGhpcy5fYSkgfCAwDQogIHRoaXMuX2IgPSAoYiArIHRoaXMuX2IpIHwgMA0KICB0aGlzLl9jID0gKGMgKyB0aGlzLl9jKSB8IDANCiAgdGhpcy5fZCA9IChkICsgdGhpcy5fZCkgfCAwDQogIHRoaXMuX2UgPSAoZSArIHRoaXMuX2UpIHwgMA0KfQ0KDQpTaGEucHJvdG90eXBlLl9oYXNoID0gZnVuY3Rpb24gKCkgew0KICB2YXIgSCA9IG5ldyBCdWZmZXIoMjApDQoNCiAgSC53cml0ZUludDMyQkUodGhpcy5fYSB8IDAsIDApDQogIEgud3JpdGVJbnQzMkJFKHRoaXMuX2IgfCAwLCA0KQ0KICBILndyaXRlSW50MzJCRSh0aGlzLl9jIHwgMCwgOCkNCiAgSC53cml0ZUludDMyQkUodGhpcy5fZCB8IDAsIDEyKQ0KICBILndyaXRlSW50MzJCRSh0aGlzLl9lIHwgMCwgMTYpDQoNCiAgcmV0dXJuIEgNCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSBTaGENCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyIuL2hhc2giOjU3MSwiYnVmZmVyIjo5MywiaW5oZXJpdHMiOjUzN31dLDU3NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQovKg0KICogQSBKYXZhU2NyaXB0IGltcGxlbWVudGF0aW9uIG9mIHRoZSBTZWN1cmUgSGFzaCBBbGdvcml0aG0sIFNIQS0xLCBhcyBkZWZpbmVkDQogKiBpbiBGSVBTIFBVQiAxODAtMQ0KICogVmVyc2lvbiAyLjFhIENvcHlyaWdodCBQYXVsIEpvaG5zdG9uIDIwMDAgLSAyMDAyLg0KICogT3RoZXIgY29udHJpYnV0b3JzOiBHcmVnIEhvbHQsIEFuZHJldyBLZXBlcnQsIFlkbmFyLCBMb3N0aW5ldA0KICogRGlzdHJpYnV0ZWQgdW5kZXIgdGhlIEJTRCBMaWNlbnNlDQogKiBTZWUgaHR0cDovL3BhamhvbWUub3JnLnVrL2NyeXB0L21kNSBmb3IgZGV0YWlscy4NCiAqLw0KDQp2YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpDQp2YXIgSGFzaCA9IHJlcXVpcmUoJy4vaGFzaCcpDQoNCnZhciBLID0gWw0KICAweDVhODI3OTk5LCAweDZlZDllYmExLCAweDhmMWJiY2RjIHwgMCwgMHhjYTYyYzFkNiB8IDANCl0NCg0KdmFyIFcgPSBuZXcgQXJyYXkoODApDQoNCmZ1bmN0aW9uIFNoYTEgKCkgew0KICB0aGlzLmluaXQoKQ0KICB0aGlzLl93ID0gVw0KDQogIEhhc2guY2FsbCh0aGlzLCA2NCwgNTYpDQp9DQoNCmluaGVyaXRzKFNoYTEsIEhhc2gpDQoNClNoYTEucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7DQogIHRoaXMuX2EgPSAweDY3NDUyMzAxDQogIHRoaXMuX2IgPSAweGVmY2RhYjg5DQogIHRoaXMuX2MgPSAweDk4YmFkY2ZlDQogIHRoaXMuX2QgPSAweDEwMzI1NDc2DQogIHRoaXMuX2UgPSAweGMzZDJlMWYwDQoNCiAgcmV0dXJuIHRoaXMNCn0NCg0KZnVuY3Rpb24gcm90bDEgKG51bSkgew0KICByZXR1cm4gKG51bSA8PCAxKSB8IChudW0gPj4+IDMxKQ0KfQ0KDQpmdW5jdGlvbiByb3RsNSAobnVtKSB7DQogIHJldHVybiAobnVtIDw8IDUpIHwgKG51bSA+Pj4gMjcpDQp9DQoNCmZ1bmN0aW9uIHJvdGwzMCAobnVtKSB7DQogIHJldHVybiAobnVtIDw8IDMwKSB8IChudW0gPj4+IDIpDQp9DQoNCmZ1bmN0aW9uIGZ0IChzLCBiLCBjLCBkKSB7DQogIGlmIChzID09PSAwKSByZXR1cm4gKGIgJiBjKSB8ICgofmIpICYgZCkNCiAgaWYgKHMgPT09IDIpIHJldHVybiAoYiAmIGMpIHwgKGIgJiBkKSB8IChjICYgZCkNCiAgcmV0dXJuIGIgXiBjIF4gZA0KfQ0KDQpTaGExLnByb3RvdHlwZS5fdXBkYXRlID0gZnVuY3Rpb24gKE0pIHsNCiAgdmFyIFcgPSB0aGlzLl93DQoNCiAgdmFyIGEgPSB0aGlzLl9hIHwgMA0KICB2YXIgYiA9IHRoaXMuX2IgfCAwDQogIHZhciBjID0gdGhpcy5fYyB8IDANCiAgdmFyIGQgPSB0aGlzLl9kIHwgMA0KICB2YXIgZSA9IHRoaXMuX2UgfCAwDQoNCiAgZm9yICh2YXIgaSA9IDA7IGkgPCAxNjsgKytpKSBXW2ldID0gTS5yZWFkSW50MzJCRShpICogNCkNCiAgZm9yICg7IGkgPCA4MDsgKytpKSBXW2ldID0gcm90bDEoV1tpIC0gM10gXiBXW2kgLSA4XSBeIFdbaSAtIDE0XSBeIFdbaSAtIDE2XSkNCg0KICBmb3IgKHZhciBqID0gMDsgaiA8IDgwOyArK2opIHsNCiAgICB2YXIgcyA9IH5+KGogLyAyMCkNCiAgICB2YXIgdCA9IChyb3RsNShhKSArIGZ0KHMsIGIsIGMsIGQpICsgZSArIFdbal0gKyBLW3NdKSB8IDANCg0KICAgIGUgPSBkDQogICAgZCA9IGMNCiAgICBjID0gcm90bDMwKGIpDQogICAgYiA9IGENCiAgICBhID0gdA0KICB9DQoNCiAgdGhpcy5fYSA9IChhICsgdGhpcy5fYSkgfCAwDQogIHRoaXMuX2IgPSAoYiArIHRoaXMuX2IpIHwgMA0KICB0aGlzLl9jID0gKGMgKyB0aGlzLl9jKSB8IDANCiAgdGhpcy5fZCA9IChkICsgdGhpcy5fZCkgfCAwDQogIHRoaXMuX2UgPSAoZSArIHRoaXMuX2UpIHwgMA0KfQ0KDQpTaGExLnByb3RvdHlwZS5faGFzaCA9IGZ1bmN0aW9uICgpIHsNCiAgdmFyIEggPSBuZXcgQnVmZmVyKDIwKQ0KDQogIEgud3JpdGVJbnQzMkJFKHRoaXMuX2EgfCAwLCAwKQ0KICBILndyaXRlSW50MzJCRSh0aGlzLl9iIHwgMCwgNCkNCiAgSC53cml0ZUludDMyQkUodGhpcy5fYyB8IDAsIDgpDQogIEgud3JpdGVJbnQzMkJFKHRoaXMuX2QgfCAwLCAxMikNCiAgSC53cml0ZUludDMyQkUodGhpcy5fZSB8IDAsIDE2KQ0KDQogIHJldHVybiBIDQp9DQoNCm1vZHVsZS5leHBvcnRzID0gU2hhMQ0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vaGFzaCI6NTcxLCJidWZmZXIiOjkzLCJpbmhlcml0cyI6NTM3fV0sNTc1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCi8qKg0KICogQSBKYXZhU2NyaXB0IGltcGxlbWVudGF0aW9uIG9mIHRoZSBTZWN1cmUgSGFzaCBBbGdvcml0aG0sIFNIQS0yNTYsIGFzIGRlZmluZWQNCiAqIGluIEZJUFMgMTgwLTINCiAqIFZlcnNpb24gMi4yLWJldGEgQ29weXJpZ2h0IEFuZ2VsIE1hcmluLCBQYXVsIEpvaG5zdG9uIDIwMDAgLSAyMDA5Lg0KICogT3RoZXIgY29udHJpYnV0b3JzOiBHcmVnIEhvbHQsIEFuZHJldyBLZXBlcnQsIFlkbmFyLCBMb3N0aW5ldA0KICoNCiAqLw0KDQp2YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpDQp2YXIgU2hhMjU2ID0gcmVxdWlyZSgnLi9zaGEyNTYnKQ0KdmFyIEhhc2ggPSByZXF1aXJlKCcuL2hhc2gnKQ0KDQp2YXIgVyA9IG5ldyBBcnJheSg2NCkNCg0KZnVuY3Rpb24gU2hhMjI0ICgpIHsNCiAgdGhpcy5pbml0KCkNCg0KICB0aGlzLl93ID0gVyAvLyBuZXcgQXJyYXkoNjQpDQoNCiAgSGFzaC5jYWxsKHRoaXMsIDY0LCA1NikNCn0NCg0KaW5oZXJpdHMoU2hhMjI0LCBTaGEyNTYpDQoNClNoYTIyNC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHsNCiAgdGhpcy5fYSA9IDB4YzEwNTllZDgNCiAgdGhpcy5fYiA9IDB4MzY3Y2Q1MDcNCiAgdGhpcy5fYyA9IDB4MzA3MGRkMTcNCiAgdGhpcy5fZCA9IDB4ZjcwZTU5MzkNCiAgdGhpcy5fZSA9IDB4ZmZjMDBiMzENCiAgdGhpcy5fZiA9IDB4Njg1ODE1MTENCiAgdGhpcy5fZyA9IDB4NjRmOThmYTcNCiAgdGhpcy5faCA9IDB4YmVmYTRmYTQNCg0KICByZXR1cm4gdGhpcw0KfQ0KDQpTaGEyMjQucHJvdG90eXBlLl9oYXNoID0gZnVuY3Rpb24gKCkgew0KICB2YXIgSCA9IG5ldyBCdWZmZXIoMjgpDQoNCiAgSC53cml0ZUludDMyQkUodGhpcy5fYSwgMCkNCiAgSC53cml0ZUludDMyQkUodGhpcy5fYiwgNCkNCiAgSC53cml0ZUludDMyQkUodGhpcy5fYywgOCkNCiAgSC53cml0ZUludDMyQkUodGhpcy5fZCwgMTIpDQogIEgud3JpdGVJbnQzMkJFKHRoaXMuX2UsIDE2KQ0KICBILndyaXRlSW50MzJCRSh0aGlzLl9mLCAyMCkNCiAgSC53cml0ZUludDMyQkUodGhpcy5fZywgMjQpDQoNCiAgcmV0dXJuIEgNCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSBTaGEyMjQNCg0KfSkuY2FsbCh0aGlzLHJlcXVpcmUoImJ1ZmZlciIpLkJ1ZmZlcikNCn0seyIuL2hhc2giOjU3MSwiLi9zaGEyNTYiOjU3NiwiYnVmZmVyIjo5MywiaW5oZXJpdHMiOjUzN31dLDU3NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQovKioNCiAqIEEgSmF2YVNjcmlwdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgU2VjdXJlIEhhc2ggQWxnb3JpdGhtLCBTSEEtMjU2LCBhcyBkZWZpbmVkDQogKiBpbiBGSVBTIDE4MC0yDQogKiBWZXJzaW9uIDIuMi1iZXRhIENvcHlyaWdodCBBbmdlbCBNYXJpbiwgUGF1bCBKb2huc3RvbiAyMDAwIC0gMjAwOS4NCiAqIE90aGVyIGNvbnRyaWJ1dG9yczogR3JlZyBIb2x0LCBBbmRyZXcgS2VwZXJ0LCBZZG5hciwgTG9zdGluZXQNCiAqDQogKi8NCg0KdmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKQ0KdmFyIEhhc2ggPSByZXF1aXJlKCcuL2hhc2gnKQ0KDQp2YXIgSyA9IFsNCiAgMHg0MjhBMkY5OCwgMHg3MTM3NDQ5MSwgMHhCNUMwRkJDRiwgMHhFOUI1REJBNSwNCiAgMHgzOTU2QzI1QiwgMHg1OUYxMTFGMSwgMHg5MjNGODJBNCwgMHhBQjFDNUVENSwNCiAgMHhEODA3QUE5OCwgMHgxMjgzNUIwMSwgMHgyNDMxODVCRSwgMHg1NTBDN0RDMywNCiAgMHg3MkJFNUQ3NCwgMHg4MERFQjFGRSwgMHg5QkRDMDZBNywgMHhDMTlCRjE3NCwNCiAgMHhFNDlCNjlDMSwgMHhFRkJFNDc4NiwgMHgwRkMxOURDNiwgMHgyNDBDQTFDQywNCiAgMHgyREU5MkM2RiwgMHg0QTc0ODRBQSwgMHg1Q0IwQTlEQywgMHg3NkY5ODhEQSwNCiAgMHg5ODNFNTE1MiwgMHhBODMxQzY2RCwgMHhCMDAzMjdDOCwgMHhCRjU5N0ZDNywNCiAgMHhDNkUwMEJGMywgMHhENUE3OTE0NywgMHgwNkNBNjM1MSwgMHgxNDI5Mjk2NywNCiAgMHgyN0I3MEE4NSwgMHgyRTFCMjEzOCwgMHg0RDJDNkRGQywgMHg1MzM4MEQxMywNCiAgMHg2NTBBNzM1NCwgMHg3NjZBMEFCQiwgMHg4MUMyQzkyRSwgMHg5MjcyMkM4NSwNCiAgMHhBMkJGRThBMSwgMHhBODFBNjY0QiwgMHhDMjRCOEI3MCwgMHhDNzZDNTFBMywNCiAgMHhEMTkyRTgxOSwgMHhENjk5MDYyNCwgMHhGNDBFMzU4NSwgMHgxMDZBQTA3MCwNCiAgMHgxOUE0QzExNiwgMHgxRTM3NkMwOCwgMHgyNzQ4Nzc0QywgMHgzNEIwQkNCNSwNCiAgMHgzOTFDMENCMywgMHg0RUQ4QUE0QSwgMHg1QjlDQ0E0RiwgMHg2ODJFNkZGMywNCiAgMHg3NDhGODJFRSwgMHg3OEE1NjM2RiwgMHg4NEM4NzgxNCwgMHg4Q0M3MDIwOCwNCiAgMHg5MEJFRkZGQSwgMHhBNDUwNkNFQiwgMHhCRUY5QTNGNywgMHhDNjcxNzhGMg0KXQ0KDQp2YXIgVyA9IG5ldyBBcnJheSg2NCkNCg0KZnVuY3Rpb24gU2hhMjU2ICgpIHsNCiAgdGhpcy5pbml0KCkNCg0KICB0aGlzLl93ID0gVyAvLyBuZXcgQXJyYXkoNjQpDQoNCiAgSGFzaC5jYWxsKHRoaXMsIDY0LCA1NikNCn0NCg0KaW5oZXJpdHMoU2hhMjU2LCBIYXNoKQ0KDQpTaGEyNTYucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7DQogIHRoaXMuX2EgPSAweDZhMDllNjY3DQogIHRoaXMuX2IgPSAweGJiNjdhZTg1DQogIHRoaXMuX2MgPSAweDNjNmVmMzcyDQogIHRoaXMuX2QgPSAweGE1NGZmNTNhDQogIHRoaXMuX2UgPSAweDUxMGU1MjdmDQogIHRoaXMuX2YgPSAweDliMDU2ODhjDQogIHRoaXMuX2cgPSAweDFmODNkOWFiDQogIHRoaXMuX2ggPSAweDViZTBjZDE5DQoNCiAgcmV0dXJuIHRoaXMNCn0NCg0KZnVuY3Rpb24gY2ggKHgsIHksIHopIHsNCiAgcmV0dXJuIHogXiAoeCAmICh5IF4geikpDQp9DQoNCmZ1bmN0aW9uIG1haiAoeCwgeSwgeikgew0KICByZXR1cm4gKHggJiB5KSB8ICh6ICYgKHggfCB5KSkNCn0NCg0KZnVuY3Rpb24gc2lnbWEwICh4KSB7DQogIHJldHVybiAoeCA+Pj4gMiB8IHggPDwgMzApIF4gKHggPj4+IDEzIHwgeCA8PCAxOSkgXiAoeCA+Pj4gMjIgfCB4IDw8IDEwKQ0KfQ0KDQpmdW5jdGlvbiBzaWdtYTEgKHgpIHsNCiAgcmV0dXJuICh4ID4+PiA2IHwgeCA8PCAyNikgXiAoeCA+Pj4gMTEgfCB4IDw8IDIxKSBeICh4ID4+PiAyNSB8IHggPDwgNykNCn0NCg0KZnVuY3Rpb24gZ2FtbWEwICh4KSB7DQogIHJldHVybiAoeCA+Pj4gNyB8IHggPDwgMjUpIF4gKHggPj4+IDE4IHwgeCA8PCAxNCkgXiAoeCA+Pj4gMykNCn0NCg0KZnVuY3Rpb24gZ2FtbWExICh4KSB7DQogIHJldHVybiAoeCA+Pj4gMTcgfCB4IDw8IDE1KSBeICh4ID4+PiAxOSB8IHggPDwgMTMpIF4gKHggPj4+IDEwKQ0KfQ0KDQpTaGEyNTYucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoTSkgew0KICB2YXIgVyA9IHRoaXMuX3cNCg0KICB2YXIgYSA9IHRoaXMuX2EgfCAwDQogIHZhciBiID0gdGhpcy5fYiB8IDANCiAgdmFyIGMgPSB0aGlzLl9jIHwgMA0KICB2YXIgZCA9IHRoaXMuX2QgfCAwDQogIHZhciBlID0gdGhpcy5fZSB8IDANCiAgdmFyIGYgPSB0aGlzLl9mIHwgMA0KICB2YXIgZyA9IHRoaXMuX2cgfCAwDQogIHZhciBoID0gdGhpcy5faCB8IDANCg0KICBmb3IgKHZhciBpID0gMDsgaSA8IDE2OyArK2kpIFdbaV0gPSBNLnJlYWRJbnQzMkJFKGkgKiA0KQ0KICBmb3IgKDsgaSA8IDY0OyArK2kpIFdbaV0gPSAoZ2FtbWExKFdbaSAtIDJdKSArIFdbaSAtIDddICsgZ2FtbWEwKFdbaSAtIDE1XSkgKyBXW2kgLSAxNl0pIHwgMA0KDQogIGZvciAodmFyIGogPSAwOyBqIDwgNjQ7ICsraikgew0KICAgIHZhciBUMSA9IChoICsgc2lnbWExKGUpICsgY2goZSwgZiwgZykgKyBLW2pdICsgV1tqXSkgfCAwDQogICAgdmFyIFQyID0gKHNpZ21hMChhKSArIG1haihhLCBiLCBjKSkgfCAwDQoNCiAgICBoID0gZw0KICAgIGcgPSBmDQogICAgZiA9IGUNCiAgICBlID0gKGQgKyBUMSkgfCAwDQogICAgZCA9IGMNCiAgICBjID0gYg0KICAgIGIgPSBhDQogICAgYSA9IChUMSArIFQyKSB8IDANCiAgfQ0KDQogIHRoaXMuX2EgPSAoYSArIHRoaXMuX2EpIHwgMA0KICB0aGlzLl9iID0gKGIgKyB0aGlzLl9iKSB8IDANCiAgdGhpcy5fYyA9IChjICsgdGhpcy5fYykgfCAwDQogIHRoaXMuX2QgPSAoZCArIHRoaXMuX2QpIHwgMA0KICB0aGlzLl9lID0gKGUgKyB0aGlzLl9lKSB8IDANCiAgdGhpcy5fZiA9IChmICsgdGhpcy5fZikgfCAwDQogIHRoaXMuX2cgPSAoZyArIHRoaXMuX2cpIHwgMA0KICB0aGlzLl9oID0gKGggKyB0aGlzLl9oKSB8IDANCn0NCg0KU2hhMjU2LnByb3RvdHlwZS5faGFzaCA9IGZ1bmN0aW9uICgpIHsNCiAgdmFyIEggPSBuZXcgQnVmZmVyKDMyKQ0KDQogIEgud3JpdGVJbnQzMkJFKHRoaXMuX2EsIDApDQogIEgud3JpdGVJbnQzMkJFKHRoaXMuX2IsIDQpDQogIEgud3JpdGVJbnQzMkJFKHRoaXMuX2MsIDgpDQogIEgud3JpdGVJbnQzMkJFKHRoaXMuX2QsIDEyKQ0KICBILndyaXRlSW50MzJCRSh0aGlzLl9lLCAxNikNCiAgSC53cml0ZUludDMyQkUodGhpcy5fZiwgMjApDQogIEgud3JpdGVJbnQzMkJFKHRoaXMuX2csIDI0KQ0KICBILndyaXRlSW50MzJCRSh0aGlzLl9oLCAyOCkNCg0KICByZXR1cm4gSA0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IFNoYTI1Ng0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vaGFzaCI6NTcxLCJidWZmZXIiOjkzLCJpbmhlcml0cyI6NTM3fV0sNTc3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJykNCnZhciBTSEE1MTIgPSByZXF1aXJlKCcuL3NoYTUxMicpDQp2YXIgSGFzaCA9IHJlcXVpcmUoJy4vaGFzaCcpDQoNCnZhciBXID0gbmV3IEFycmF5KDE2MCkNCg0KZnVuY3Rpb24gU2hhMzg0ICgpIHsNCiAgdGhpcy5pbml0KCkNCiAgdGhpcy5fdyA9IFcNCg0KICBIYXNoLmNhbGwodGhpcywgMTI4LCAxMTIpDQp9DQoNCmluaGVyaXRzKFNoYTM4NCwgU0hBNTEyKQ0KDQpTaGEzODQucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7DQogIHRoaXMuX2FoID0gMHhjYmJiOWQ1ZA0KICB0aGlzLl9iaCA9IDB4NjI5YTI5MmENCiAgdGhpcy5fY2ggPSAweDkxNTkwMTVhDQogIHRoaXMuX2RoID0gMHgxNTJmZWNkOA0KICB0aGlzLl9laCA9IDB4NjczMzI2NjcNCiAgdGhpcy5fZmggPSAweDhlYjQ0YTg3DQogIHRoaXMuX2doID0gMHhkYjBjMmUwZA0KICB0aGlzLl9oaCA9IDB4NDdiNTQ4MWQNCg0KICB0aGlzLl9hbCA9IDB4YzEwNTllZDgNCiAgdGhpcy5fYmwgPSAweDM2N2NkNTA3DQogIHRoaXMuX2NsID0gMHgzMDcwZGQxNw0KICB0aGlzLl9kbCA9IDB4ZjcwZTU5MzkNCiAgdGhpcy5fZWwgPSAweGZmYzAwYjMxDQogIHRoaXMuX2ZsID0gMHg2ODU4MTUxMQ0KICB0aGlzLl9nbCA9IDB4NjRmOThmYTcNCiAgdGhpcy5faGwgPSAweGJlZmE0ZmE0DQoNCiAgcmV0dXJuIHRoaXMNCn0NCg0KU2hhMzg0LnByb3RvdHlwZS5faGFzaCA9IGZ1bmN0aW9uICgpIHsNCiAgdmFyIEggPSBuZXcgQnVmZmVyKDQ4KQ0KDQogIGZ1bmN0aW9uIHdyaXRlSW50NjRCRSAoaCwgbCwgb2Zmc2V0KSB7DQogICAgSC53cml0ZUludDMyQkUoaCwgb2Zmc2V0KQ0KICAgIEgud3JpdGVJbnQzMkJFKGwsIG9mZnNldCArIDQpDQogIH0NCg0KICB3cml0ZUludDY0QkUodGhpcy5fYWgsIHRoaXMuX2FsLCAwKQ0KICB3cml0ZUludDY0QkUodGhpcy5fYmgsIHRoaXMuX2JsLCA4KQ0KICB3cml0ZUludDY0QkUodGhpcy5fY2gsIHRoaXMuX2NsLCAxNikNCiAgd3JpdGVJbnQ2NEJFKHRoaXMuX2RoLCB0aGlzLl9kbCwgMjQpDQogIHdyaXRlSW50NjRCRSh0aGlzLl9laCwgdGhpcy5fZWwsIDMyKQ0KICB3cml0ZUludDY0QkUodGhpcy5fZmgsIHRoaXMuX2ZsLCA0MCkNCg0KICByZXR1cm4gSA0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IFNoYTM4NA0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vaGFzaCI6NTcxLCIuL3NoYTUxMiI6NTc4LCJidWZmZXIiOjkzLCJpbmhlcml0cyI6NTM3fV0sNTc4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoQnVmZmVyKXsNCnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJykNCnZhciBIYXNoID0gcmVxdWlyZSgnLi9oYXNoJykNCg0KdmFyIEsgPSBbDQogIDB4NDI4YTJmOTgsIDB4ZDcyOGFlMjIsIDB4NzEzNzQ0OTEsIDB4MjNlZjY1Y2QsDQogIDB4YjVjMGZiY2YsIDB4ZWM0ZDNiMmYsIDB4ZTliNWRiYTUsIDB4ODE4OWRiYmMsDQogIDB4Mzk1NmMyNWIsIDB4ZjM0OGI1MzgsIDB4NTlmMTExZjEsIDB4YjYwNWQwMTksDQogIDB4OTIzZjgyYTQsIDB4YWYxOTRmOWIsIDB4YWIxYzVlZDUsIDB4ZGE2ZDgxMTgsDQogIDB4ZDgwN2FhOTgsIDB4YTMwMzAyNDIsIDB4MTI4MzViMDEsIDB4NDU3MDZmYmUsDQogIDB4MjQzMTg1YmUsIDB4NGVlNGIyOGMsIDB4NTUwYzdkYzMsIDB4ZDVmZmI0ZTIsDQogIDB4NzJiZTVkNzQsIDB4ZjI3Yjg5NmYsIDB4ODBkZWIxZmUsIDB4M2IxNjk2YjEsDQogIDB4OWJkYzA2YTcsIDB4MjVjNzEyMzUsIDB4YzE5YmYxNzQsIDB4Y2Y2OTI2OTQsDQogIDB4ZTQ5YjY5YzEsIDB4OWVmMTRhZDIsIDB4ZWZiZTQ3ODYsIDB4Mzg0ZjI1ZTMsDQogIDB4MGZjMTlkYzYsIDB4OGI4Y2Q1YjUsIDB4MjQwY2ExY2MsIDB4NzdhYzljNjUsDQogIDB4MmRlOTJjNmYsIDB4NTkyYjAyNzUsIDB4NGE3NDg0YWEsIDB4NmVhNmU0ODMsDQogIDB4NWNiMGE5ZGMsIDB4YmQ0MWZiZDQsIDB4NzZmOTg4ZGEsIDB4ODMxMTUzYjUsDQogIDB4OTgzZTUxNTIsIDB4ZWU2NmRmYWIsIDB4YTgzMWM2NmQsIDB4MmRiNDMyMTAsDQogIDB4YjAwMzI3YzgsIDB4OThmYjIxM2YsIDB4YmY1OTdmYzcsIDB4YmVlZjBlZTQsDQogIDB4YzZlMDBiZjMsIDB4M2RhODhmYzIsIDB4ZDVhNzkxNDcsIDB4OTMwYWE3MjUsDQogIDB4MDZjYTYzNTEsIDB4ZTAwMzgyNmYsIDB4MTQyOTI5NjcsIDB4MGEwZTZlNzAsDQogIDB4MjdiNzBhODUsIDB4NDZkMjJmZmMsIDB4MmUxYjIxMzgsIDB4NWMyNmM5MjYsDQogIDB4NGQyYzZkZmMsIDB4NWFjNDJhZWQsIDB4NTMzODBkMTMsIDB4OWQ5NWIzZGYsDQogIDB4NjUwYTczNTQsIDB4OGJhZjYzZGUsIDB4NzY2YTBhYmIsIDB4M2M3N2IyYTgsDQogIDB4ODFjMmM5MmUsIDB4NDdlZGFlZTYsIDB4OTI3MjJjODUsIDB4MTQ4MjM1M2IsDQogIDB4YTJiZmU4YTEsIDB4NGNmMTAzNjQsIDB4YTgxYTY2NGIsIDB4YmM0MjMwMDEsDQogIDB4YzI0YjhiNzAsIDB4ZDBmODk3OTEsIDB4Yzc2YzUxYTMsIDB4MDY1NGJlMzAsDQogIDB4ZDE5MmU4MTksIDB4ZDZlZjUyMTgsIDB4ZDY5OTA2MjQsIDB4NTU2NWE5MTAsDQogIDB4ZjQwZTM1ODUsIDB4NTc3MTIwMmEsIDB4MTA2YWEwNzAsIDB4MzJiYmQxYjgsDQogIDB4MTlhNGMxMTYsIDB4YjhkMmQwYzgsIDB4MWUzNzZjMDgsIDB4NTE0MWFiNTMsDQogIDB4Mjc0ODc3NGMsIDB4ZGY4ZWViOTksIDB4MzRiMGJjYjUsIDB4ZTE5YjQ4YTgsDQogIDB4MzkxYzBjYjMsIDB4YzVjOTVhNjMsIDB4NGVkOGFhNGEsIDB4ZTM0MThhY2IsDQogIDB4NWI5Y2NhNGYsIDB4Nzc2M2UzNzMsIDB4NjgyZTZmZjMsIDB4ZDZiMmI4YTMsDQogIDB4NzQ4ZjgyZWUsIDB4NWRlZmIyZmMsIDB4NzhhNTYzNmYsIDB4NDMxNzJmNjAsDQogIDB4ODRjODc4MTQsIDB4YTFmMGFiNzIsIDB4OGNjNzAyMDgsIDB4MWE2NDM5ZWMsDQogIDB4OTBiZWZmZmEsIDB4MjM2MzFlMjgsIDB4YTQ1MDZjZWIsIDB4ZGU4MmJkZTksDQogIDB4YmVmOWEzZjcsIDB4YjJjNjc5MTUsIDB4YzY3MTc4ZjIsIDB4ZTM3MjUzMmIsDQogIDB4Y2EyNzNlY2UsIDB4ZWEyNjYxOWMsIDB4ZDE4NmI4YzcsIDB4MjFjMGMyMDcsDQogIDB4ZWFkYTdkZDYsIDB4Y2RlMGViMWUsIDB4ZjU3ZDRmN2YsIDB4ZWU2ZWQxNzgsDQogIDB4MDZmMDY3YWEsIDB4NzIxNzZmYmEsIDB4MGE2MzdkYzUsIDB4YTJjODk4YTYsDQogIDB4MTEzZjk4MDQsIDB4YmVmOTBkYWUsIDB4MWI3MTBiMzUsIDB4MTMxYzQ3MWIsDQogIDB4MjhkYjc3ZjUsIDB4MjMwNDdkODQsIDB4MzJjYWFiN2IsIDB4NDBjNzI0OTMsDQogIDB4M2M5ZWJlMGEsIDB4MTVjOWJlYmMsIDB4NDMxZDY3YzQsIDB4OWMxMDBkNGMsDQogIDB4NGNjNWQ0YmUsIDB4Y2IzZTQyYjYsIDB4NTk3ZjI5OWMsIDB4ZmM2NTdlMmEsDQogIDB4NWZjYjZmYWIsIDB4M2FkNmZhZWMsIDB4NmM0NDE5OGMsIDB4NGE0NzU4MTcNCl0NCg0KdmFyIFcgPSBuZXcgQXJyYXkoMTYwKQ0KDQpmdW5jdGlvbiBTaGE1MTIgKCkgew0KICB0aGlzLmluaXQoKQ0KICB0aGlzLl93ID0gVw0KDQogIEhhc2guY2FsbCh0aGlzLCAxMjgsIDExMikNCn0NCg0KaW5oZXJpdHMoU2hhNTEyLCBIYXNoKQ0KDQpTaGE1MTIucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7DQogIHRoaXMuX2FoID0gMHg2YTA5ZTY2Nw0KICB0aGlzLl9iaCA9IDB4YmI2N2FlODUNCiAgdGhpcy5fY2ggPSAweDNjNmVmMzcyDQogIHRoaXMuX2RoID0gMHhhNTRmZjUzYQ0KICB0aGlzLl9laCA9IDB4NTEwZTUyN2YNCiAgdGhpcy5fZmggPSAweDliMDU2ODhjDQogIHRoaXMuX2doID0gMHgxZjgzZDlhYg0KICB0aGlzLl9oaCA9IDB4NWJlMGNkMTkNCg0KICB0aGlzLl9hbCA9IDB4ZjNiY2M5MDgNCiAgdGhpcy5fYmwgPSAweDg0Y2FhNzNiDQogIHRoaXMuX2NsID0gMHhmZTk0ZjgyYg0KICB0aGlzLl9kbCA9IDB4NWYxZDM2ZjENCiAgdGhpcy5fZWwgPSAweGFkZTY4MmQxDQogIHRoaXMuX2ZsID0gMHgyYjNlNmMxZg0KICB0aGlzLl9nbCA9IDB4ZmI0MWJkNmINCiAgdGhpcy5faGwgPSAweDEzN2UyMTc5DQoNCiAgcmV0dXJuIHRoaXMNCn0NCg0KZnVuY3Rpb24gQ2ggKHgsIHksIHopIHsNCiAgcmV0dXJuIHogXiAoeCAmICh5IF4geikpDQp9DQoNCmZ1bmN0aW9uIG1haiAoeCwgeSwgeikgew0KICByZXR1cm4gKHggJiB5KSB8ICh6ICYgKHggfCB5KSkNCn0NCg0KZnVuY3Rpb24gc2lnbWEwICh4LCB4bCkgew0KICByZXR1cm4gKHggPj4+IDI4IHwgeGwgPDwgNCkgXiAoeGwgPj4+IDIgfCB4IDw8IDMwKSBeICh4bCA+Pj4gNyB8IHggPDwgMjUpDQp9DQoNCmZ1bmN0aW9uIHNpZ21hMSAoeCwgeGwpIHsNCiAgcmV0dXJuICh4ID4+PiAxNCB8IHhsIDw8IDE4KSBeICh4ID4+PiAxOCB8IHhsIDw8IDE0KSBeICh4bCA+Pj4gOSB8IHggPDwgMjMpDQp9DQoNCmZ1bmN0aW9uIEdhbW1hMCAoeCwgeGwpIHsNCiAgcmV0dXJuICh4ID4+PiAxIHwgeGwgPDwgMzEpIF4gKHggPj4+IDggfCB4bCA8PCAyNCkgXiAoeCA+Pj4gNykNCn0NCg0KZnVuY3Rpb24gR2FtbWEwbCAoeCwgeGwpIHsNCiAgcmV0dXJuICh4ID4+PiAxIHwgeGwgPDwgMzEpIF4gKHggPj4+IDggfCB4bCA8PCAyNCkgXiAoeCA+Pj4gNyB8IHhsIDw8IDI1KQ0KfQ0KDQpmdW5jdGlvbiBHYW1tYTEgKHgsIHhsKSB7DQogIHJldHVybiAoeCA+Pj4gMTkgfCB4bCA8PCAxMykgXiAoeGwgPj4+IDI5IHwgeCA8PCAzKSBeICh4ID4+PiA2KQ0KfQ0KDQpmdW5jdGlvbiBHYW1tYTFsICh4LCB4bCkgew0KICByZXR1cm4gKHggPj4+IDE5IHwgeGwgPDwgMTMpIF4gKHhsID4+PiAyOSB8IHggPDwgMykgXiAoeCA+Pj4gNiB8IHhsIDw8IDI2KQ0KfQ0KDQpmdW5jdGlvbiBnZXRDYXJyeSAoYSwgYikgew0KICByZXR1cm4gKGEgPj4+IDApIDwgKGIgPj4+IDApID8gMSA6IDANCn0NCg0KU2hhNTEyLnByb3RvdHlwZS5fdXBkYXRlID0gZnVuY3Rpb24gKE0pIHsNCiAgdmFyIFcgPSB0aGlzLl93DQoNCiAgdmFyIGFoID0gdGhpcy5fYWggfCAwDQogIHZhciBiaCA9IHRoaXMuX2JoIHwgMA0KICB2YXIgY2ggPSB0aGlzLl9jaCB8IDANCiAgdmFyIGRoID0gdGhpcy5fZGggfCAwDQogIHZhciBlaCA9IHRoaXMuX2VoIHwgMA0KICB2YXIgZmggPSB0aGlzLl9maCB8IDANCiAgdmFyIGdoID0gdGhpcy5fZ2ggfCAwDQogIHZhciBoaCA9IHRoaXMuX2hoIHwgMA0KDQogIHZhciBhbCA9IHRoaXMuX2FsIHwgMA0KICB2YXIgYmwgPSB0aGlzLl9ibCB8IDANCiAgdmFyIGNsID0gdGhpcy5fY2wgfCAwDQogIHZhciBkbCA9IHRoaXMuX2RsIHwgMA0KICB2YXIgZWwgPSB0aGlzLl9lbCB8IDANCiAgdmFyIGZsID0gdGhpcy5fZmwgfCAwDQogIHZhciBnbCA9IHRoaXMuX2dsIHwgMA0KICB2YXIgaGwgPSB0aGlzLl9obCB8IDANCg0KICBmb3IgKHZhciBpID0gMDsgaSA8IDMyOyBpICs9IDIpIHsNCiAgICBXW2ldID0gTS5yZWFkSW50MzJCRShpICogNCkNCiAgICBXW2kgKyAxXSA9IE0ucmVhZEludDMyQkUoaSAqIDQgKyA0KQ0KICB9DQogIGZvciAoOyBpIDwgMTYwOyBpICs9IDIpIHsNCiAgICB2YXIgeGggPSBXW2kgLSAxNSAqIDJdDQogICAgdmFyIHhsID0gV1tpIC0gMTUgKiAyICsgMV0NCiAgICB2YXIgZ2FtbWEwID0gR2FtbWEwKHhoLCB4bCkNCiAgICB2YXIgZ2FtbWEwbCA9IEdhbW1hMGwoeGwsIHhoKQ0KDQogICAgeGggPSBXW2kgLSAyICogMl0NCiAgICB4bCA9IFdbaSAtIDIgKiAyICsgMV0NCiAgICB2YXIgZ2FtbWExID0gR2FtbWExKHhoLCB4bCkNCiAgICB2YXIgZ2FtbWExbCA9IEdhbW1hMWwoeGwsIHhoKQ0KDQogICAgLy8gV1tpXSA9IGdhbW1hMCArIFdbaSAtIDddICsgZ2FtbWExICsgV1tpIC0gMTZdDQogICAgdmFyIFdpN2ggPSBXW2kgLSA3ICogMl0NCiAgICB2YXIgV2k3bCA9IFdbaSAtIDcgKiAyICsgMV0NCg0KICAgIHZhciBXaTE2aCA9IFdbaSAtIDE2ICogMl0NCiAgICB2YXIgV2kxNmwgPSBXW2kgLSAxNiAqIDIgKyAxXQ0KDQogICAgdmFyIFdpbCA9IChnYW1tYTBsICsgV2k3bCkgfCAwDQogICAgdmFyIFdpaCA9IChnYW1tYTAgKyBXaTdoICsgZ2V0Q2FycnkoV2lsLCBnYW1tYTBsKSkgfCAwDQogICAgV2lsID0gKFdpbCArIGdhbW1hMWwpIHwgMA0KICAgIFdpaCA9IChXaWggKyBnYW1tYTEgKyBnZXRDYXJyeShXaWwsIGdhbW1hMWwpKSB8IDANCiAgICBXaWwgPSAoV2lsICsgV2kxNmwpIHwgMA0KICAgIFdpaCA9IChXaWggKyBXaTE2aCArIGdldENhcnJ5KFdpbCwgV2kxNmwpKSB8IDANCg0KICAgIFdbaV0gPSBXaWgNCiAgICBXW2kgKyAxXSA9IFdpbA0KICB9DQoNCiAgZm9yICh2YXIgaiA9IDA7IGogPCAxNjA7IGogKz0gMikgew0KICAgIFdpaCA9IFdbal0NCiAgICBXaWwgPSBXW2ogKyAxXQ0KDQogICAgdmFyIG1hamggPSBtYWooYWgsIGJoLCBjaCkNCiAgICB2YXIgbWFqbCA9IG1haihhbCwgYmwsIGNsKQ0KDQogICAgdmFyIHNpZ21hMGggPSBzaWdtYTAoYWgsIGFsKQ0KICAgIHZhciBzaWdtYTBsID0gc2lnbWEwKGFsLCBhaCkNCiAgICB2YXIgc2lnbWExaCA9IHNpZ21hMShlaCwgZWwpDQogICAgdmFyIHNpZ21hMWwgPSBzaWdtYTEoZWwsIGVoKQ0KDQogICAgLy8gdDEgPSBoICsgc2lnbWExICsgY2ggKyBLW2pdICsgV1tqXQ0KICAgIHZhciBLaWggPSBLW2pdDQogICAgdmFyIEtpbCA9IEtbaiArIDFdDQoNCiAgICB2YXIgY2hoID0gQ2goZWgsIGZoLCBnaCkNCiAgICB2YXIgY2hsID0gQ2goZWwsIGZsLCBnbCkNCg0KICAgIHZhciB0MWwgPSAoaGwgKyBzaWdtYTFsKSB8IDANCiAgICB2YXIgdDFoID0gKGhoICsgc2lnbWExaCArIGdldENhcnJ5KHQxbCwgaGwpKSB8IDANCiAgICB0MWwgPSAodDFsICsgY2hsKSB8IDANCiAgICB0MWggPSAodDFoICsgY2hoICsgZ2V0Q2FycnkodDFsLCBjaGwpKSB8IDANCiAgICB0MWwgPSAodDFsICsgS2lsKSB8IDANCiAgICB0MWggPSAodDFoICsgS2loICsgZ2V0Q2FycnkodDFsLCBLaWwpKSB8IDANCiAgICB0MWwgPSAodDFsICsgV2lsKSB8IDANCiAgICB0MWggPSAodDFoICsgV2loICsgZ2V0Q2FycnkodDFsLCBXaWwpKSB8IDANCg0KICAgIC8vIHQyID0gc2lnbWEwICsgbWFqDQogICAgdmFyIHQybCA9IChzaWdtYTBsICsgbWFqbCkgfCAwDQogICAgdmFyIHQyaCA9IChzaWdtYTBoICsgbWFqaCArIGdldENhcnJ5KHQybCwgc2lnbWEwbCkpIHwgMA0KDQogICAgaGggPSBnaA0KICAgIGhsID0gZ2wNCiAgICBnaCA9IGZoDQogICAgZ2wgPSBmbA0KICAgIGZoID0gZWgNCiAgICBmbCA9IGVsDQogICAgZWwgPSAoZGwgKyB0MWwpIHwgMA0KICAgIGVoID0gKGRoICsgdDFoICsgZ2V0Q2FycnkoZWwsIGRsKSkgfCAwDQogICAgZGggPSBjaA0KICAgIGRsID0gY2wNCiAgICBjaCA9IGJoDQogICAgY2wgPSBibA0KICAgIGJoID0gYWgNCiAgICBibCA9IGFsDQogICAgYWwgPSAodDFsICsgdDJsKSB8IDANCiAgICBhaCA9ICh0MWggKyB0MmggKyBnZXRDYXJyeShhbCwgdDFsKSkgfCAwDQogIH0NCg0KICB0aGlzLl9hbCA9ICh0aGlzLl9hbCArIGFsKSB8IDANCiAgdGhpcy5fYmwgPSAodGhpcy5fYmwgKyBibCkgfCAwDQogIHRoaXMuX2NsID0gKHRoaXMuX2NsICsgY2wpIHwgMA0KICB0aGlzLl9kbCA9ICh0aGlzLl9kbCArIGRsKSB8IDANCiAgdGhpcy5fZWwgPSAodGhpcy5fZWwgKyBlbCkgfCAwDQogIHRoaXMuX2ZsID0gKHRoaXMuX2ZsICsgZmwpIHwgMA0KICB0aGlzLl9nbCA9ICh0aGlzLl9nbCArIGdsKSB8IDANCiAgdGhpcy5faGwgPSAodGhpcy5faGwgKyBobCkgfCAwDQoNCiAgdGhpcy5fYWggPSAodGhpcy5fYWggKyBhaCArIGdldENhcnJ5KHRoaXMuX2FsLCBhbCkpIHwgMA0KICB0aGlzLl9iaCA9ICh0aGlzLl9iaCArIGJoICsgZ2V0Q2FycnkodGhpcy5fYmwsIGJsKSkgfCAwDQogIHRoaXMuX2NoID0gKHRoaXMuX2NoICsgY2ggKyBnZXRDYXJyeSh0aGlzLl9jbCwgY2wpKSB8IDANCiAgdGhpcy5fZGggPSAodGhpcy5fZGggKyBkaCArIGdldENhcnJ5KHRoaXMuX2RsLCBkbCkpIHwgMA0KICB0aGlzLl9laCA9ICh0aGlzLl9laCArIGVoICsgZ2V0Q2FycnkodGhpcy5fZWwsIGVsKSkgfCAwDQogIHRoaXMuX2ZoID0gKHRoaXMuX2ZoICsgZmggKyBnZXRDYXJyeSh0aGlzLl9mbCwgZmwpKSB8IDANCiAgdGhpcy5fZ2ggPSAodGhpcy5fZ2ggKyBnaCArIGdldENhcnJ5KHRoaXMuX2dsLCBnbCkpIHwgMA0KICB0aGlzLl9oaCA9ICh0aGlzLl9oaCArIGhoICsgZ2V0Q2FycnkodGhpcy5faGwsIGhsKSkgfCAwDQp9DQoNClNoYTUxMi5wcm90b3R5cGUuX2hhc2ggPSBmdW5jdGlvbiAoKSB7DQogIHZhciBIID0gbmV3IEJ1ZmZlcig2NCkNCg0KICBmdW5jdGlvbiB3cml0ZUludDY0QkUgKGgsIGwsIG9mZnNldCkgew0KICAgIEgud3JpdGVJbnQzMkJFKGgsIG9mZnNldCkNCiAgICBILndyaXRlSW50MzJCRShsLCBvZmZzZXQgKyA0KQ0KICB9DQoNCiAgd3JpdGVJbnQ2NEJFKHRoaXMuX2FoLCB0aGlzLl9hbCwgMCkNCiAgd3JpdGVJbnQ2NEJFKHRoaXMuX2JoLCB0aGlzLl9ibCwgOCkNCiAgd3JpdGVJbnQ2NEJFKHRoaXMuX2NoLCB0aGlzLl9jbCwgMTYpDQogIHdyaXRlSW50NjRCRSh0aGlzLl9kaCwgdGhpcy5fZGwsIDI0KQ0KICB3cml0ZUludDY0QkUodGhpcy5fZWgsIHRoaXMuX2VsLCAzMikNCiAgd3JpdGVJbnQ2NEJFKHRoaXMuX2ZoLCB0aGlzLl9mbCwgNDApDQogIHdyaXRlSW50NjRCRSh0aGlzLl9naCwgdGhpcy5fZ2wsIDQ4KQ0KICB3cml0ZUludDY0QkUodGhpcy5faGgsIHRoaXMuX2hsLCA1NikNCg0KICByZXR1cm4gSA0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IFNoYTUxMg0KDQp9KS5jYWxsKHRoaXMscmVxdWlyZSgiYnVmZmVyIikuQnVmZmVyKQ0KfSx7Ii4vaGFzaCI6NTcxLCJidWZmZXIiOjkzLCJpbmhlcml0cyI6NTM3fV0sNTc5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCiJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBxKGEpe3Rocm93IGE7fXZhciBzPXZvaWQgMCx1PSExO3ZhciBzamNsPXtjaXBoZXI6e30saGFzaDp7fSxrZXlleGNoYW5nZTp7fSxtb2RlOnt9LG1pc2M6e30sY29kZWM6e30sZXhjZXB0aW9uOntjb3JydXB0OmZ1bmN0aW9uKGEpe3RoaXMudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iQ09SUlVQVDogIit0aGlzLm1lc3NhZ2V9O3RoaXMubWVzc2FnZT1hfSxpbnZhbGlkOmZ1bmN0aW9uKGEpe3RoaXMudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iSU5WQUxJRDogIit0aGlzLm1lc3NhZ2V9O3RoaXMubWVzc2FnZT1hfSxidWc6ZnVuY3Rpb24oYSl7dGhpcy50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiJCVUc6ICIrdGhpcy5tZXNzYWdlfTt0aGlzLm1lc3NhZ2U9YX0sbm90UmVhZHk6ZnVuY3Rpb24oYSl7dGhpcy50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiJOT1QgUkVBRFk6ICIrdGhpcy5tZXNzYWdlfTt0aGlzLm1lc3NhZ2U9YX19fTsNCiJ1bmRlZmluZWQiIT09dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHMmJihtb2R1bGUuZXhwb3J0cz1zamNsKTsiZnVuY3Rpb24iPT09dHlwZW9mIGRlZmluZSYmZGVmaW5lKFtdLGZ1bmN0aW9uKCl7cmV0dXJuIHNqY2x9KTsNCnNqY2wuY2lwaGVyLmFlcz1mdW5jdGlvbihhKXt0aGlzLmtbMF1bMF1bMF18fHRoaXMuRCgpO3ZhciBiLGMsZCxlLGY9dGhpcy5rWzBdWzRdLGc9dGhpcy5rWzFdO2I9YS5sZW5ndGg7dmFyIGg9MTs0IT09YiYmKDYhPT1iJiY4IT09YikmJnEobmV3IHNqY2wuZXhjZXB0aW9uLmludmFsaWQoImludmFsaWQgYWVzIGtleSBzaXplIikpO3RoaXMuYj1bZD1hLnNsaWNlKDApLGU9W11dO2ZvcihhPWI7YTw0KmIrMjg7YSsrKXtjPWRbYS0xXTtpZigwPT09YSVifHw4PT09YiYmND09PWElYiljPWZbYz4+PjI0XTw8MjReZltjPj4xNiYyNTVdPDwxNl5mW2M+PjgmMjU1XTw8OF5mW2MmMjU1XSwwPT09YSViJiYoYz1jPDw4XmM+Pj4yNF5oPDwyNCxoPWg8PDFeMjgzKihoPj43KSk7ZFthXT1kW2EtYl1eY31mb3IoYj0wO2E7YisrLGEtLSljPWRbYiYzP2E6YS00XSxlW2JdPTQ+PWF8fDQ+Yj9jOmdbMF1bZltjPj4+MjRdXV5nWzFdW2ZbYz4+MTYmMjU1XV1eZ1syXVtmW2M+PjgmMjU1XV1eZ1szXVtmW2MmDQoyNTVdXX07DQpzamNsLmNpcGhlci5hZXMucHJvdG90eXBlPXtlbmNyeXB0OmZ1bmN0aW9uKGEpe3JldHVybiB3KHRoaXMsYSwwKX0sZGVjcnlwdDpmdW5jdGlvbihhKXtyZXR1cm4gdyh0aGlzLGEsMSl9LGs6W1tbXSxbXSxbXSxbXSxbXV0sW1tdLFtdLFtdLFtdLFtdXV0sRDpmdW5jdGlvbigpe3ZhciBhPXRoaXMua1swXSxiPXRoaXMua1sxXSxjPWFbNF0sZD1iWzRdLGUsZixnLGg9W10sbD1bXSxrLG4sbSxwO2ZvcihlPTA7MHgxMDA+ZTtlKyspbFsoaFtlXT1lPDwxXjI4MyooZT4+NykpXmVdPWU7Zm9yKGY9Zz0wOyFjW2ZdO2ZePWt8fDEsZz1sW2ddfHwxKXttPWdeZzw8MV5nPDwyXmc8PDNeZzw8NDttPW0+PjhebSYyNTVeOTk7Y1tmXT1tO2RbbV09ZjtuPWhbZT1oW2s9aFtmXV1dO3A9MHgxMDEwMTAxKm5eMHgxMDAwMSplXjB4MTAxKmteMHgxMDEwMTAwKmY7bj0weDEwMSpoW21dXjB4MTAxMDEwMCptO2ZvcihlPTA7ND5lO2UrKylhW2VdW2ZdPW49bjw8MjRebj4+PjgsYltlXVttXT1wPXA8PDI0XnA+Pj44fWZvcihlPQ0KMDs1PmU7ZSsrKWFbZV09YVtlXS5zbGljZSgwKSxiW2VdPWJbZV0uc2xpY2UoMCl9fTsNCmZ1bmN0aW9uIHcoYSxiLGMpezQhPT1iLmxlbmd0aCYmcShuZXcgc2pjbC5leGNlcHRpb24uaW52YWxpZCgiaW52YWxpZCBhZXMgYmxvY2sgc2l6ZSIpKTt2YXIgZD1hLmJbY10sZT1iWzBdXmRbMF0sZj1iW2M/MzoxXV5kWzFdLGc9YlsyXV5kWzJdO2I9YltjPzE6M11eZFszXTt2YXIgaCxsLGssbj1kLmxlbmd0aC80LTIsbSxwPTQsdD1bMCwwLDAsMF07aD1hLmtbY107YT1oWzBdO3ZhciByPWhbMV0sdj1oWzJdLHk9aFszXSx6PWhbNF07Zm9yKG09MDttPG47bSsrKWg9YVtlPj4+MjRdXnJbZj4+MTYmMjU1XV52W2c+PjgmMjU1XV55W2ImMjU1XV5kW3BdLGw9YVtmPj4+MjRdXnJbZz4+MTYmMjU1XV52W2I+PjgmMjU1XV55W2UmMjU1XV5kW3ArMV0saz1hW2c+Pj4yNF1ecltiPj4xNiYyNTVdXnZbZT4+OCYyNTVdXnlbZiYyNTVdXmRbcCsyXSxiPWFbYj4+PjI0XV5yW2U+PjE2JjI1NV1edltmPj44JjI1NV1eeVtnJjI1NV1eZFtwKzNdLHArPTQsZT1oLGY9bCxnPWs7Zm9yKG09MDs0Pg0KbTttKyspdFtjPzMmLW06bV09eltlPj4+MjRdPDwyNF56W2Y+PjE2JjI1NV08PDE2XnpbZz4+OCYyNTVdPDw4XnpbYiYyNTVdXmRbcCsrXSxoPWUsZT1mLGY9ZyxnPWIsYj1oO3JldHVybiB0fQ0Kc2pjbC5iaXRBcnJheT17Yml0U2xpY2U6ZnVuY3Rpb24oYSxiLGMpe2E9c2pjbC5iaXRBcnJheS5QKGEuc2xpY2UoYi8zMiksMzItKGImMzEpKS5zbGljZSgxKTtyZXR1cm4gYz09PXM/YTpzamNsLmJpdEFycmF5LmNsYW1wKGEsYy1iKX0sZXh0cmFjdDpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9TWF0aC5mbG9vcigtYi1jJjMxKTtyZXR1cm4oKGIrYy0xXmIpJi0zMj9hW2IvMzJ8MF08PDMyLWReYVtiLzMyKzF8MF0+Pj5kOmFbYi8zMnwwXT4+PmQpJigxPDxjKS0xfSxjb25jYXQ6ZnVuY3Rpb24oYSxiKXtpZigwPT09YS5sZW5ndGh8fDA9PT1iLmxlbmd0aClyZXR1cm4gYS5jb25jYXQoYik7dmFyIGM9YVthLmxlbmd0aC0xXSxkPXNqY2wuYml0QXJyYXkuZ2V0UGFydGlhbChjKTtyZXR1cm4gMzI9PT1kP2EuY29uY2F0KGIpOnNqY2wuYml0QXJyYXkuUChiLGQsY3wwLGEuc2xpY2UoMCxhLmxlbmd0aC0xKSl9LGJpdExlbmd0aDpmdW5jdGlvbihhKXt2YXIgYj1hLmxlbmd0aDtyZXR1cm4gMD09PQ0KYj8wOjMyKihiLTEpK3NqY2wuYml0QXJyYXkuZ2V0UGFydGlhbChhW2ItMV0pfSxjbGFtcDpmdW5jdGlvbihhLGIpe2lmKDMyKmEubGVuZ3RoPGIpcmV0dXJuIGE7YT1hLnNsaWNlKDAsTWF0aC5jZWlsKGIvMzIpKTt2YXIgYz1hLmxlbmd0aDtiJj0zMTswPGMmJmImJihhW2MtMV09c2pjbC5iaXRBcnJheS5wYXJ0aWFsKGIsYVtjLTFdJjIxNDc0ODM2NDg+PmItMSwxKSk7cmV0dXJuIGF9LHBhcnRpYWw6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiAzMj09PWE/YjooYz9ifDA6Yjw8MzItYSkrMHgxMDAwMDAwMDAwMCphfSxnZXRQYXJ0aWFsOmZ1bmN0aW9uKGEpe3JldHVybiBNYXRoLnJvdW5kKGEvMHgxMDAwMDAwMDAwMCl8fDMyfSxlcXVhbDpmdW5jdGlvbihhLGIpe2lmKHNqY2wuYml0QXJyYXkuYml0TGVuZ3RoKGEpIT09c2pjbC5iaXRBcnJheS5iaXRMZW5ndGgoYikpcmV0dXJuIHU7dmFyIGM9MCxkO2ZvcihkPTA7ZDxhLmxlbmd0aDtkKyspY3w9YVtkXV5iW2RdO3JldHVybiAwPT09DQpjfSxQOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2U9MDtmb3IoZD09PXMmJihkPVtdKTszMjw9YjtiLT0zMilkLnB1c2goYyksYz0wO2lmKDA9PT1iKXJldHVybiBkLmNvbmNhdChhKTtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKWQucHVzaChjfGFbZV0+Pj5iKSxjPWFbZV08PDMyLWI7ZT1hLmxlbmd0aD9hW2EubGVuZ3RoLTFdOjA7YT1zamNsLmJpdEFycmF5LmdldFBhcnRpYWwoZSk7ZC5wdXNoKHNqY2wuYml0QXJyYXkucGFydGlhbChiK2EmMzEsMzI8YithP2M6ZC5wb3AoKSwxKSk7cmV0dXJuIGR9LGw6ZnVuY3Rpb24oYSxiKXtyZXR1cm5bYVswXV5iWzBdLGFbMV1eYlsxXSxhWzJdXmJbMl0sYVszXV5iWzNdXX0sYnl0ZXN3YXBNOmZ1bmN0aW9uKGEpe3ZhciBiLGM7Zm9yKGI9MDtiPGEubGVuZ3RoOysrYiljPWFbYl0sYVtiXT1jPj4+MjR8Yz4+PjgmMHhmZjAwfChjJjB4ZmYwMCk8PDh8Yzw8MjQ7cmV0dXJuIGF9fTsNCnNqY2wuY29kZWMudXRmOFN0cmluZz17ZnJvbUJpdHM6ZnVuY3Rpb24oYSl7dmFyIGI9IiIsYz1zamNsLmJpdEFycmF5LmJpdExlbmd0aChhKSxkLGU7Zm9yKGQ9MDtkPGMvODtkKyspMD09PShkJjMpJiYoZT1hW2QvNF0pLGIrPVN0cmluZy5mcm9tQ2hhckNvZGUoZT4+PjI0KSxlPDw9ODtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZShiKSl9LHRvQml0czpmdW5jdGlvbihhKXthPXVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChhKSk7dmFyIGI9W10sYyxkPTA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKylkPWQ8PDh8YS5jaGFyQ29kZUF0KGMpLDM9PT0oYyYzKSYmKGIucHVzaChkKSxkPTApO2MmMyYmYi5wdXNoKHNqY2wuYml0QXJyYXkucGFydGlhbCg4KihjJjMpLGQpKTtyZXR1cm4gYn19Ow0Kc2pjbC5jb2RlYy5oZXg9e2Zyb21CaXRzOmZ1bmN0aW9uKGEpe3ZhciBiPSIiLGM7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyliKz0oKGFbY118MCkrMHhmMDAwMDAwMDAwMDApLnRvU3RyaW5nKDE2KS5zdWJzdHIoNCk7cmV0dXJuIGIuc3Vic3RyKDAsc2pjbC5iaXRBcnJheS5iaXRMZW5ndGgoYSkvNCl9LHRvQml0czpmdW5jdGlvbihhKXt2YXIgYixjPVtdLGQ7YT1hLnJlcGxhY2UoL1xzfDB4L2csIiIpO2Q9YS5sZW5ndGg7YSs9IjAwMDAwMDAwIjtmb3IoYj0wO2I8YS5sZW5ndGg7Yis9OCljLnB1c2gocGFyc2VJbnQoYS5zdWJzdHIoYiw4KSwxNileMCk7cmV0dXJuIHNqY2wuYml0QXJyYXkuY2xhbXAoYyw0KmQpfX07DQpzamNsLmNvZGVjLmJhc2U2ND17SjoiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLyIsZnJvbUJpdHM6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPSIiLGU9MCxmPXNqY2wuY29kZWMuYmFzZTY0LkosZz0wLGg9c2pjbC5iaXRBcnJheS5iaXRMZW5ndGgoYSk7YyYmKGY9Zi5zdWJzdHIoMCw2MikrIi1fIik7Zm9yKGM9MDs2KmQubGVuZ3RoPGg7KWQrPWYuY2hhckF0KChnXmFbY10+Pj5lKT4+PjI2KSw2PmU/KGc9YVtjXTw8Ni1lLGUrPTI2LGMrKyk6KGc8PD02LGUtPTYpO2Zvcig7ZC5sZW5ndGgmMyYmIWI7KWQrPSI9IjtyZXR1cm4gZH0sdG9CaXRzOmZ1bmN0aW9uKGEsYil7YT1hLnJlcGxhY2UoL1xzfD0vZywiIik7dmFyIGM9W10sZCxlPTAsZj1zamNsLmNvZGVjLmJhc2U2NC5KLGc9MCxoO2ImJihmPWYuc3Vic3RyKDAsNjIpKyItXyIpO2ZvcihkPTA7ZDxhLmxlbmd0aDtkKyspaD1mLmluZGV4T2YoYS5jaGFyQXQoZCkpLA0KMD5oJiZxKG5ldyBzamNsLmV4Y2VwdGlvbi5pbnZhbGlkKCJ0aGlzIGlzbid0IGJhc2U2NCEiKSksMjY8ZT8oZS09MjYsYy5wdXNoKGdeaD4+PmUpLGc9aDw8MzItZSk6KGUrPTYsZ149aDw8MzItZSk7ZSY1NiYmYy5wdXNoKHNqY2wuYml0QXJyYXkucGFydGlhbChlJjU2LGcsMSkpO3JldHVybiBjfX07c2pjbC5jb2RlYy5iYXNlNjR1cmw9e2Zyb21CaXRzOmZ1bmN0aW9uKGEpe3JldHVybiBzamNsLmNvZGVjLmJhc2U2NC5mcm9tQml0cyhhLDEsMSl9LHRvQml0czpmdW5jdGlvbihhKXtyZXR1cm4gc2pjbC5jb2RlYy5iYXNlNjQudG9CaXRzKGEsMSl9fTtzamNsLmhhc2guc2hhMjU2PWZ1bmN0aW9uKGEpe3RoaXMuYlswXXx8dGhpcy5EKCk7YT8odGhpcy5yPWEuci5zbGljZSgwKSx0aGlzLm89YS5vLnNsaWNlKDApLHRoaXMuaD1hLmgpOnRoaXMucmVzZXQoKX07c2pjbC5oYXNoLnNoYTI1Ni5oYXNoPWZ1bmN0aW9uKGEpe3JldHVybihuZXcgc2pjbC5oYXNoLnNoYTI1NikudXBkYXRlKGEpLmZpbmFsaXplKCl9Ow0Kc2pjbC5oYXNoLnNoYTI1Ni5wcm90b3R5cGU9e2Jsb2NrU2l6ZTo1MTIscmVzZXQ6ZnVuY3Rpb24oKXt0aGlzLnI9dGhpcy5OLnNsaWNlKDApO3RoaXMubz1bXTt0aGlzLmg9MDtyZXR1cm4gdGhpc30sdXBkYXRlOmZ1bmN0aW9uKGEpeyJzdHJpbmciPT09dHlwZW9mIGEmJihhPXNqY2wuY29kZWMudXRmOFN0cmluZy50b0JpdHMoYSkpO3ZhciBiLGM9dGhpcy5vPXNqY2wuYml0QXJyYXkuY29uY2F0KHRoaXMubyxhKTtiPXRoaXMuaDthPXRoaXMuaD1iK3NqY2wuYml0QXJyYXkuYml0TGVuZ3RoKGEpO2ZvcihiPTUxMitiJi01MTI7Yjw9YTtiKz01MTIpeCh0aGlzLGMuc3BsaWNlKDAsMTYpKTtyZXR1cm4gdGhpc30sZmluYWxpemU6ZnVuY3Rpb24oKXt2YXIgYSxiPXRoaXMubyxjPXRoaXMucixiPXNqY2wuYml0QXJyYXkuY29uY2F0KGIsW3NqY2wuYml0QXJyYXkucGFydGlhbCgxLDEpXSk7Zm9yKGE9Yi5sZW5ndGgrMjthJjE1O2ErKyliLnB1c2goMCk7Yi5wdXNoKE1hdGguZmxvb3IodGhpcy5oLw0KNDI5NDk2NzI5NikpO2ZvcihiLnB1c2godGhpcy5ofDApO2IubGVuZ3RoOyl4KHRoaXMsYi5zcGxpY2UoMCwxNikpO3RoaXMucmVzZXQoKTtyZXR1cm4gY30sTjpbXSxiOltdLEQ6ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe3JldHVybiAweDEwMDAwMDAwMCooYS1NYXRoLmZsb29yKGEpKXwwfXZhciBiPTAsYz0yLGQ7YTpmb3IoOzY0PmI7YysrKXtmb3IoZD0yO2QqZDw9YztkKyspaWYoMD09PWMlZCljb250aW51ZSBhOzg+YiYmKHRoaXMuTltiXT1hKE1hdGgucG93KGMsMC41KSkpO3RoaXMuYltiXT1hKE1hdGgucG93KGMsMS8zKSk7YisrfX19Ow0KZnVuY3Rpb24geChhLGIpe3ZhciBjLGQsZSxmPWIuc2xpY2UoMCksZz1hLnIsaD1hLmIsbD1nWzBdLGs9Z1sxXSxuPWdbMl0sbT1nWzNdLHA9Z1s0XSx0PWdbNV0scj1nWzZdLHY9Z1s3XTtmb3IoYz0wOzY0PmM7YysrKTE2PmM/ZD1mW2NdOihkPWZbYysxJjE1XSxlPWZbYysxNCYxNV0sZD1mW2MmMTVdPShkPj4+N15kPj4+MTheZD4+PjNeZDw8MjVeZDw8MTQpKyhlPj4+MTdeZT4+PjE5XmU+Pj4xMF5lPDwxNV5lPDwxMykrZltjJjE1XStmW2MrOSYxNV18MCksZD1kK3YrKHA+Pj42XnA+Pj4xMV5wPj4+MjVecDw8MjZecDw8MjFecDw8NykrKHJecCYodF5yKSkraFtjXSx2PXIscj10LHQ9cCxwPW0rZHwwLG09bixuPWssaz1sLGw9ZCsoayZuXm0mKGtebikpKyhrPj4+Ml5rPj4+MTNeaz4+PjIyXms8PDMwXms8PDE5Xms8PDEwKXwwO2dbMF09Z1swXStsfDA7Z1sxXT1nWzFdK2t8MDtnWzJdPWdbMl0rbnwwO2dbM109Z1szXSttfDA7Z1s0XT1nWzRdK3B8MDtnWzVdPWdbNV0rdHwwO2dbNl09DQpnWzZdK3J8MDtnWzddPWdbN10rdnwwfQ0Kc2pjbC5tb2RlLmNjbT17bmFtZToiY2NtIixlbmNyeXB0OmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGYsZz1iLnNsaWNlKDApLGg9c2pjbC5iaXRBcnJheSxsPWguYml0TGVuZ3RoKGMpLzgsaz1oLmJpdExlbmd0aChnKS84O2U9ZXx8NjQ7ZD1kfHxbXTs3PmwmJnEobmV3IHNqY2wuZXhjZXB0aW9uLmludmFsaWQoImNjbTogaXYgbXVzdCBiZSBhdCBsZWFzdCA3IGJ5dGVzIikpO2ZvcihmPTI7ND5mJiZrPj4+OCpmO2YrKyk7ZjwxNS1sJiYoZj0xNS1sKTtjPWguY2xhbXAoYyw4KigxNS1mKSk7Yj1zamNsLm1vZGUuY2NtLkwoYSxiLGMsZCxlLGYpO2c9c2pjbC5tb2RlLmNjbS5wKGEsZyxjLGIsZSxmKTtyZXR1cm4gaC5jb25jYXQoZy5kYXRhLGcudGFnKX0sZGVjcnlwdDpmdW5jdGlvbihhLGIsYyxkLGUpe2U9ZXx8NjQ7ZD1kfHxbXTt2YXIgZj1zamNsLmJpdEFycmF5LGc9Zi5iaXRMZW5ndGgoYykvOCxoPWYuYml0TGVuZ3RoKGIpLGw9Zi5jbGFtcChiLGgtZSksaz1mLmJpdFNsaWNlKGIsDQpoLWUpLGg9KGgtZSkvODs3PmcmJnEobmV3IHNqY2wuZXhjZXB0aW9uLmludmFsaWQoImNjbTogaXYgbXVzdCBiZSBhdCBsZWFzdCA3IGJ5dGVzIikpO2ZvcihiPTI7ND5iJiZoPj4+OCpiO2IrKyk7YjwxNS1nJiYoYj0xNS1nKTtjPWYuY2xhbXAoYyw4KigxNS1iKSk7bD1zamNsLm1vZGUuY2NtLnAoYSxsLGMsayxlLGIpO2E9c2pjbC5tb2RlLmNjbS5MKGEsbC5kYXRhLGMsZCxlLGIpO2YuZXF1YWwobC50YWcsYSl8fHEobmV3IHNqY2wuZXhjZXB0aW9uLmNvcnJ1cHQoImNjbTogdGFnIGRvZXNuJ3QgbWF0Y2giKSk7cmV0dXJuIGwuZGF0YX0sTDpmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9W10saD1zamNsLmJpdEFycmF5LGw9aC5sO2UvPTg7KGUlMnx8ND5lfHwxNjxlKSYmcShuZXcgc2pjbC5leGNlcHRpb24uaW52YWxpZCgiY2NtOiBpbnZhbGlkIHRhZyBsZW5ndGgiKSk7KDB4ZmZmZmZmZmY8ZC5sZW5ndGh8fDB4ZmZmZmZmZmY8Yi5sZW5ndGgpJiZxKG5ldyBzamNsLmV4Y2VwdGlvbi5idWcoImNjbTogY2FuJ3QgZGVhbCB3aXRoIDRHaUIgb3IgbW9yZSBkYXRhIikpOw0KZj1baC5wYXJ0aWFsKDgsKGQubGVuZ3RoPzY0OjApfGUtMjw8MnxmLTEpXTtmPWguY29uY2F0KGYsYyk7ZlszXXw9aC5iaXRMZW5ndGgoYikvODtmPWEuZW5jcnlwdChmKTtpZihkLmxlbmd0aCl7Yz1oLmJpdExlbmd0aChkKS84OzY1Mjc5Pj1jP2c9W2gucGFydGlhbCgxNixjKV06MHhmZmZmZmZmZj49YyYmKGc9aC5jb25jYXQoW2gucGFydGlhbCgxNiw2NTUzNCldLFtjXSkpO2c9aC5jb25jYXQoZyxkKTtmb3IoZD0wO2Q8Zy5sZW5ndGg7ZCs9NClmPWEuZW5jcnlwdChsKGYsZy5zbGljZShkLGQrNCkuY29uY2F0KFswLDAsMF0pKSl9Zm9yKGQ9MDtkPGIubGVuZ3RoO2QrPTQpZj1hLmVuY3J5cHQobChmLGIuc2xpY2UoZCxkKzQpLmNvbmNhdChbMCwwLDBdKSkpO3JldHVybiBoLmNsYW1wKGYsOCplKX0scDpmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGcsaD1zamNsLmJpdEFycmF5O2c9aC5sO3ZhciBsPWIubGVuZ3RoLGs9aC5iaXRMZW5ndGgoYik7Yz1oLmNvbmNhdChbaC5wYXJ0aWFsKDgsDQpmLTEpXSxjKS5jb25jYXQoWzAsMCwwXSkuc2xpY2UoMCw0KTtkPWguYml0U2xpY2UoZyhkLGEuZW5jcnlwdChjKSksMCxlKTtpZighbClyZXR1cm57dGFnOmQsZGF0YTpbXX07Zm9yKGc9MDtnPGw7Zys9NCljWzNdKyssZT1hLmVuY3J5cHQoYyksYltnXV49ZVswXSxiW2crMV1ePWVbMV0sYltnKzJdXj1lWzJdLGJbZyszXV49ZVszXTtyZXR1cm57dGFnOmQsZGF0YTpoLmNsYW1wKGIsayl9fX07DQpzamNsLm1vZGUub2NiMj17bmFtZToib2NiMiIsZW5jcnlwdDpmdW5jdGlvbihhLGIsYyxkLGUsZil7MTI4IT09c2pjbC5iaXRBcnJheS5iaXRMZW5ndGgoYykmJnEobmV3IHNqY2wuZXhjZXB0aW9uLmludmFsaWQoIm9jYiBpdiBtdXN0IGJlIDEyOCBiaXRzIikpO3ZhciBnLGg9c2pjbC5tb2RlLm9jYjIuSCxsPXNqY2wuYml0QXJyYXksaz1sLmwsbj1bMCwwLDAsMF07Yz1oKGEuZW5jcnlwdChjKSk7dmFyIG0scD1bXTtkPWR8fFtdO2U9ZXx8NjQ7Zm9yKGc9MDtnKzQ8Yi5sZW5ndGg7Zys9NCltPWIuc2xpY2UoZyxnKzQpLG49ayhuLG0pLHA9cC5jb25jYXQoayhjLGEuZW5jcnlwdChrKGMsbSkpKSksYz1oKGMpO209Yi5zbGljZShnKTtiPWwuYml0TGVuZ3RoKG0pO2c9YS5lbmNyeXB0KGsoYyxbMCwwLDAsYl0pKTttPWwuY2xhbXAoayhtLmNvbmNhdChbMCwwLDBdKSxnKSxiKTtuPWsobixrKG0uY29uY2F0KFswLDAsMF0pLGcpKTtuPWEuZW5jcnlwdChrKG4sayhjLGgoYykpKSk7ZC5sZW5ndGgmJg0KKG49ayhuLGY/ZDpzamNsLm1vZGUub2NiMi5wbWFjKGEsZCkpKTtyZXR1cm4gcC5jb25jYXQobC5jb25jYXQobSxsLmNsYW1wKG4sZSkpKX0sZGVjcnlwdDpmdW5jdGlvbihhLGIsYyxkLGUsZil7MTI4IT09c2pjbC5iaXRBcnJheS5iaXRMZW5ndGgoYykmJnEobmV3IHNqY2wuZXhjZXB0aW9uLmludmFsaWQoIm9jYiBpdiBtdXN0IGJlIDEyOCBiaXRzIikpO2U9ZXx8NjQ7dmFyIGc9c2pjbC5tb2RlLm9jYjIuSCxoPXNqY2wuYml0QXJyYXksbD1oLmwsaz1bMCwwLDAsMF0sbj1nKGEuZW5jcnlwdChjKSksbSxwLHQ9c2pjbC5iaXRBcnJheS5iaXRMZW5ndGgoYiktZSxyPVtdO2Q9ZHx8W107Zm9yKGM9MDtjKzQ8dC8zMjtjKz00KW09bChuLGEuZGVjcnlwdChsKG4sYi5zbGljZShjLGMrNCkpKSksaz1sKGssbSkscj1yLmNvbmNhdChtKSxuPWcobik7cD10LTMyKmM7bT1hLmVuY3J5cHQobChuLFswLDAsMCxwXSkpO209bChtLGguY2xhbXAoYi5zbGljZShjKSxwKS5jb25jYXQoWzAsMCwwXSkpOw0Kaz1sKGssbSk7az1hLmVuY3J5cHQobChrLGwobixnKG4pKSkpO2QubGVuZ3RoJiYoaz1sKGssZj9kOnNqY2wubW9kZS5vY2IyLnBtYWMoYSxkKSkpO2guZXF1YWwoaC5jbGFtcChrLGUpLGguYml0U2xpY2UoYix0KSl8fHEobmV3IHNqY2wuZXhjZXB0aW9uLmNvcnJ1cHQoIm9jYjogdGFnIGRvZXNuJ3QgbWF0Y2giKSk7cmV0dXJuIHIuY29uY2F0KGguY2xhbXAobSxwKSl9LHBtYWM6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPXNqY2wubW9kZS5vY2IyLkgsZT1zamNsLmJpdEFycmF5LGY9ZS5sLGc9WzAsMCwwLDBdLGg9YS5lbmNyeXB0KFswLDAsMCwwXSksaD1mKGgsZChkKGgpKSk7Zm9yKGM9MDtjKzQ8Yi5sZW5ndGg7Yys9NCloPWQoaCksZz1mKGcsYS5lbmNyeXB0KGYoaCxiLnNsaWNlKGMsYys0KSkpKTtjPWIuc2xpY2UoYyk7MTI4PmUuYml0TGVuZ3RoKGMpJiYoaD1mKGgsZChoKSksYz1lLmNvbmNhdChjLFstMjE0NzQ4MzY0OCwwLDAsMF0pKTtnPWYoZyxjKTtyZXR1cm4gYS5lbmNyeXB0KGYoZChmKGgsDQpkKGgpKSksZykpfSxIOmZ1bmN0aW9uKGEpe3JldHVyblthWzBdPDwxXmFbMV0+Pj4zMSxhWzFdPDwxXmFbMl0+Pj4zMSxhWzJdPDwxXmFbM10+Pj4zMSxhWzNdPDwxXjEzNSooYVswXT4+PjMxKV19fTsNCnNqY2wubW9kZS5nY209e25hbWU6ImdjbSIsZW5jcnlwdDpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWIuc2xpY2UoMCk7Yj1zamNsLmJpdEFycmF5O2Q9ZHx8W107YT1zamNsLm1vZGUuZ2NtLnAoITAsYSxmLGQsYyxlfHwxMjgpO3JldHVybiBiLmNvbmNhdChhLmRhdGEsYS50YWcpfSxkZWNyeXB0OmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9Yi5zbGljZSgwKSxnPXNqY2wuYml0QXJyYXksaD1nLmJpdExlbmd0aChmKTtlPWV8fDEyODtkPWR8fFtdO2U8PWg/KGI9Zy5iaXRTbGljZShmLGgtZSksZj1nLmJpdFNsaWNlKGYsMCxoLWUpKTooYj1mLGY9W10pO2E9c2pjbC5tb2RlLmdjbS5wKHUsYSxmLGQsYyxlKTtnLmVxdWFsKGEudGFnLGIpfHxxKG5ldyBzamNsLmV4Y2VwdGlvbi5jb3JydXB0KCJnY206IHRhZyBkb2Vzbid0IG1hdGNoIikpO3JldHVybiBhLmRhdGF9LFo6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZixnLGg9c2pjbC5iaXRBcnJheS5sO2U9WzAsMCwwLDBdO2Y9Yi5zbGljZSgwKTsNCmZvcihjPTA7MTI4PmM7YysrKXsoZD0wIT09KGFbTWF0aC5mbG9vcihjLzMyKV0mMTw8MzEtYyUzMikpJiYoZT1oKGUsZikpO2c9MCE9PShmWzNdJjEpO2ZvcihkPTM7MDxkO2QtLSlmW2RdPWZbZF0+Pj4xfChmW2QtMV0mMSk8PDMxO2ZbMF0+Pj49MTtnJiYoZlswXV49LTB4MWYwMDAwMDApfXJldHVybiBlfSxnOmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlPWMubGVuZ3RoO2I9Yi5zbGljZSgwKTtmb3IoZD0wO2Q8ZTtkKz00KWJbMF1ePTB4ZmZmZmZmZmYmY1tkXSxiWzFdXj0weGZmZmZmZmZmJmNbZCsxXSxiWzJdXj0weGZmZmZmZmZmJmNbZCsyXSxiWzNdXj0weGZmZmZmZmZmJmNbZCszXSxiPXNqY2wubW9kZS5nY20uWihiLGEpO3JldHVybiBifSxwOmZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZyxoLGwsayxuLG0scCx0LHI9c2pjbC5iaXRBcnJheTttPWMubGVuZ3RoO3A9ci5iaXRMZW5ndGgoYyk7dD1yLmJpdExlbmd0aChkKTtoPXIuYml0TGVuZ3RoKGUpO2c9Yi5lbmNyeXB0KFswLA0KMCwwLDBdKTs5Nj09PWg/KGU9ZS5zbGljZSgwKSxlPXIuY29uY2F0KGUsWzFdKSk6KGU9c2pjbC5tb2RlLmdjbS5nKGcsWzAsMCwwLDBdLGUpLGU9c2pjbC5tb2RlLmdjbS5nKGcsZSxbMCwwLE1hdGguZmxvb3IoaC8weDEwMDAwMDAwMCksaCYweGZmZmZmZmZmXSkpO2g9c2pjbC5tb2RlLmdjbS5nKGcsWzAsMCwwLDBdLGQpO249ZS5zbGljZSgwKTtkPWguc2xpY2UoMCk7YXx8KGQ9c2pjbC5tb2RlLmdjbS5nKGcsaCxjKSk7Zm9yKGs9MDtrPG07ays9NCluWzNdKyssbD1iLmVuY3J5cHQobiksY1trXV49bFswXSxjW2srMV1ePWxbMV0sY1trKzJdXj1sWzJdLGNbayszXV49bFszXTtjPXIuY2xhbXAoYyxwKTthJiYoZD1zamNsLm1vZGUuZ2NtLmcoZyxoLGMpKTthPVtNYXRoLmZsb29yKHQvMHgxMDAwMDAwMDApLHQmMHhmZmZmZmZmZixNYXRoLmZsb29yKHAvMHgxMDAwMDAwMDApLHAmMHhmZmZmZmZmZl07ZD1zamNsLm1vZGUuZ2NtLmcoZyxkLGEpO2w9Yi5lbmNyeXB0KGUpO2RbMF1ePWxbMF07DQpkWzFdXj1sWzFdO2RbMl1ePWxbMl07ZFszXV49bFszXTtyZXR1cm57dGFnOnIuYml0U2xpY2UoZCwwLGYpLGRhdGE6Y319fTtzamNsLm1pc2MuaG1hYz1mdW5jdGlvbihhLGIpe3RoaXMuTT1iPWJ8fHNqY2wuaGFzaC5zaGEyNTY7dmFyIGM9W1tdLFtdXSxkLGU9Yi5wcm90b3R5cGUuYmxvY2tTaXplLzMyO3RoaXMubj1bbmV3IGIsbmV3IGJdO2EubGVuZ3RoPmUmJihhPWIuaGFzaChhKSk7Zm9yKGQ9MDtkPGU7ZCsrKWNbMF1bZF09YVtkXV45MDk1MjI0ODYsY1sxXVtkXT1hW2RdXjE1NDk1NTY4Mjg7dGhpcy5uWzBdLnVwZGF0ZShjWzBdKTt0aGlzLm5bMV0udXBkYXRlKGNbMV0pO3RoaXMuRz1uZXcgYih0aGlzLm5bMF0pfTsNCnNqY2wubWlzYy5obWFjLnByb3RvdHlwZS5lbmNyeXB0PXNqY2wubWlzYy5obWFjLnByb3RvdHlwZS5tYWM9ZnVuY3Rpb24oYSl7dGhpcy5RJiZxKG5ldyBzamNsLmV4Y2VwdGlvbi5pbnZhbGlkKCJlbmNyeXB0IG9uIGFscmVhZHkgdXBkYXRlZCBobWFjIGNhbGxlZCEiKSk7dGhpcy51cGRhdGUoYSk7cmV0dXJuIHRoaXMuZGlnZXN0KGEpfTtzamNsLm1pc2MuaG1hYy5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt0aGlzLkc9bmV3IHRoaXMuTSh0aGlzLm5bMF0pO3RoaXMuUT11fTtzamNsLm1pc2MuaG1hYy5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMuUT0hMDt0aGlzLkcudXBkYXRlKGEpfTtzamNsLm1pc2MuaG1hYy5wcm90b3R5cGUuZGlnZXN0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5HLmZpbmFsaXplKCksYT0obmV3IHRoaXMuTSh0aGlzLm5bMV0pKS51cGRhdGUoYSkuZmluYWxpemUoKTt0aGlzLnJlc2V0KCk7cmV0dXJuIGF9Ow0Kc2pjbC5taXNjLnBia2RmMj1mdW5jdGlvbihhLGIsYyxkLGUpe2M9Y3x8MUUzOygwPmR8fDA+YykmJnEoc2pjbC5leGNlcHRpb24uaW52YWxpZCgiaW52YWxpZCBwYXJhbXMgdG8gcGJrZGYyIikpOyJzdHJpbmciPT09dHlwZW9mIGEmJihhPXNqY2wuY29kZWMudXRmOFN0cmluZy50b0JpdHMoYSkpOyJzdHJpbmciPT09dHlwZW9mIGImJihiPXNqY2wuY29kZWMudXRmOFN0cmluZy50b0JpdHMoYikpO2U9ZXx8c2pjbC5taXNjLmhtYWM7YT1uZXcgZShhKTt2YXIgZixnLGgsbCxrPVtdLG49c2pjbC5iaXRBcnJheTtmb3IobD0xOzMyKmsubGVuZ3RoPChkfHwxKTtsKyspe2U9Zj1hLmVuY3J5cHQobi5jb25jYXQoYixbbF0pKTtmb3IoZz0xO2c8YztnKyspe2Y9YS5lbmNyeXB0KGYpO2ZvcihoPTA7aDxmLmxlbmd0aDtoKyspZVtoXV49ZltoXX1rPWsuY29uY2F0KGUpfWQmJihrPW4uY2xhbXAoayxkKSk7cmV0dXJuIGt9Ow0Kc2pjbC5wcm5nPWZ1bmN0aW9uKGEpe3RoaXMuYz1bbmV3IHNqY2wuaGFzaC5zaGEyNTZdO3RoaXMuaT1bMF07dGhpcy5GPTA7dGhpcy5zPXt9O3RoaXMuQz0wO3RoaXMuSz17fTt0aGlzLk89dGhpcy5kPXRoaXMuaj10aGlzLlc9MDt0aGlzLmI9WzAsMCwwLDAsMCwwLDAsMF07dGhpcy5mPVswLDAsMCwwXTt0aGlzLkE9czt0aGlzLkI9YTt0aGlzLnE9dTt0aGlzLnc9e3Byb2dyZXNzOnt9LHNlZWRlZDp7fX07dGhpcy5tPXRoaXMuVj0wO3RoaXMudD0xO3RoaXMudT0yO3RoaXMuUz0weDEwMDAwO3RoaXMuST1bMCw0OCw2NCw5NiwxMjgsMTkyLDB4MTAwLDM4NCw1MTIsNzY4LDEwMjRdO3RoaXMuVD0zRTQ7dGhpcy5SPTgwfTsNCnNqY2wucHJuZy5wcm90b3R5cGU9e3JhbmRvbVdvcmRzOmZ1bmN0aW9uKGEsYil7dmFyIGM9W10sZDtkPXRoaXMuaXNSZWFkeShiKTt2YXIgZTtkPT09dGhpcy5tJiZxKG5ldyBzamNsLmV4Y2VwdGlvbi5ub3RSZWFkeSgiZ2VuZXJhdG9yIGlzbid0IHNlZWRlZCIpKTtpZihkJnRoaXMudSl7ZD0hKGQmdGhpcy50KTtlPVtdO3ZhciBmPTAsZzt0aGlzLk89ZVswXT0obmV3IERhdGUpLnZhbHVlT2YoKSt0aGlzLlQ7Zm9yKGc9MDsxNj5nO2crKyllLnB1c2goMHgxMDAwMDAwMDAqTWF0aC5yYW5kb20oKXwwKTtmb3IoZz0wO2c8dGhpcy5jLmxlbmd0aCYmIShlPWUuY29uY2F0KHRoaXMuY1tnXS5maW5hbGl6ZSgpKSxmKz10aGlzLmlbZ10sdGhpcy5pW2ddPTAsIWQmJnRoaXMuRiYxPDxnKTtnKyspO3RoaXMuRj49MTw8dGhpcy5jLmxlbmd0aCYmKHRoaXMuYy5wdXNoKG5ldyBzamNsLmhhc2guc2hhMjU2KSx0aGlzLmkucHVzaCgwKSk7dGhpcy5kLT1mO2Y+dGhpcy5qJiYodGhpcy5qPWYpO3RoaXMuRisrOw0KdGhpcy5iPXNqY2wuaGFzaC5zaGEyNTYuaGFzaCh0aGlzLmIuY29uY2F0KGUpKTt0aGlzLkE9bmV3IHNqY2wuY2lwaGVyLmFlcyh0aGlzLmIpO2ZvcihkPTA7ND5kJiYhKHRoaXMuZltkXT10aGlzLmZbZF0rMXwwLHRoaXMuZltkXSk7ZCsrKTt9Zm9yKGQ9MDtkPGE7ZCs9NCkwPT09KGQrMSkldGhpcy5TJiZBKHRoaXMpLGU9Qih0aGlzKSxjLnB1c2goZVswXSxlWzFdLGVbMl0sZVszXSk7QSh0aGlzKTtyZXR1cm4gYy5zbGljZSgwLGEpfSxzZXREZWZhdWx0UGFyYW5vaWE6ZnVuY3Rpb24oYSxiKXswPT09YSYmIlNldHRpbmcgcGFyYW5vaWE9MCB3aWxsIHJ1aW4geW91ciBzZWN1cml0eTsgdXNlIGl0IG9ubHkgZm9yIHRlc3RpbmciIT09YiYmcSgiU2V0dGluZyBwYXJhbm9pYT0wIHdpbGwgcnVpbiB5b3VyIHNlY3VyaXR5OyB1c2UgaXQgb25seSBmb3IgdGVzdGluZyIpO3RoaXMuQj1hfSxhZGRFbnRyb3B5OmZ1bmN0aW9uKGEsYixjKXtjPWN8fCJ1c2VyIjt2YXIgZCxlLGY9KG5ldyBEYXRlKS52YWx1ZU9mKCksDQpnPXRoaXMuc1tjXSxoPXRoaXMuaXNSZWFkeSgpLGw9MDtkPXRoaXMuS1tjXTtkPT09cyYmKGQ9dGhpcy5LW2NdPXRoaXMuVysrKTtnPT09cyYmKGc9dGhpcy5zW2NdPTApO3RoaXMuc1tjXT0odGhpcy5zW2NdKzEpJXRoaXMuYy5sZW5ndGg7c3dpdGNoKHR5cGVvZiBhKXtjYXNlICJudW1iZXIiOmI9PT1zJiYoYj0xKTt0aGlzLmNbZ10udXBkYXRlKFtkLHRoaXMuQysrLDEsYixmLDEsYXwwXSk7YnJlYWs7Y2FzZSAib2JqZWN0IjpjPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhKTtpZigiW29iamVjdCBVaW50MzJBcnJheV0iPT09Yyl7ZT1bXTtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWUucHVzaChhW2NdKTthPWV9ZWxzZXsiW29iamVjdCBBcnJheV0iIT09YyYmKGw9MSk7Zm9yKGM9MDtjPGEubGVuZ3RoJiYhbDtjKyspIm51bWJlciIhPT10eXBlb2YgYVtjXSYmKGw9MSl9aWYoIWwpe2lmKGI9PT1zKWZvcihjPWI9MDtjPGEubGVuZ3RoO2MrKylmb3IoZT1hW2NdOzA8ZTspYisrLA0KZT4+Pj0xO3RoaXMuY1tnXS51cGRhdGUoW2QsdGhpcy5DKyssMixiLGYsYS5sZW5ndGhdLmNvbmNhdChhKSl9YnJlYWs7Y2FzZSAic3RyaW5nIjpiPT09cyYmKGI9YS5sZW5ndGgpO3RoaXMuY1tnXS51cGRhdGUoW2QsdGhpcy5DKyssMyxiLGYsYS5sZW5ndGhdKTt0aGlzLmNbZ10udXBkYXRlKGEpO2JyZWFrO2RlZmF1bHQ6bD0xfWwmJnEobmV3IHNqY2wuZXhjZXB0aW9uLmJ1ZygicmFuZG9tOiBhZGRFbnRyb3B5IG9ubHkgc3VwcG9ydHMgbnVtYmVyLCBhcnJheSBvZiBudW1iZXJzIG9yIHN0cmluZyIpKTt0aGlzLmlbZ10rPWI7dGhpcy5kKz1iO2g9PT10aGlzLm0mJih0aGlzLmlzUmVhZHkoKSE9PXRoaXMubSYmQygic2VlZGVkIixNYXRoLm1heCh0aGlzLmosdGhpcy5kKSksQygicHJvZ3Jlc3MiLHRoaXMuZ2V0UHJvZ3Jlc3MoKSkpfSxpc1JlYWR5OmZ1bmN0aW9uKGEpe2E9dGhpcy5JW2EhPT1zP2E6dGhpcy5CXTtyZXR1cm4gdGhpcy5qJiZ0aGlzLmo+PWE/dGhpcy5pWzBdPnRoaXMuUiYmDQoobmV3IERhdGUpLnZhbHVlT2YoKT50aGlzLk8/dGhpcy51fHRoaXMudDp0aGlzLnQ6dGhpcy5kPj1hP3RoaXMudXx0aGlzLm06dGhpcy5tfSxnZXRQcm9ncmVzczpmdW5jdGlvbihhKXthPXRoaXMuSVthP2E6dGhpcy5CXTtyZXR1cm4gdGhpcy5qPj1hPzE6dGhpcy5kPmE/MTp0aGlzLmQvYX0sc3RhcnRDb2xsZWN0b3JzOmZ1bmN0aW9uKCl7dGhpcy5xfHwodGhpcy5hPXtsb2FkVGltZUNvbGxlY3RvcjpEKHRoaXMsdGhpcy5hYSksbW91c2VDb2xsZWN0b3I6RCh0aGlzLHRoaXMuYmEpLGtleWJvYXJkQ29sbGVjdG9yOkQodGhpcyx0aGlzLiQpLGFjY2VsZXJvbWV0ZXJDb2xsZWN0b3I6RCh0aGlzLHRoaXMuVSksdG91Y2hDb2xsZWN0b3I6RCh0aGlzLHRoaXMuZGEpfSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcj8od2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLHRoaXMuYS5sb2FkVGltZUNvbGxlY3Rvcix1KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vtb3ZlIix0aGlzLmEubW91c2VDb2xsZWN0b3IsDQp1KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigia2V5cHJlc3MiLHRoaXMuYS5rZXlib2FyZENvbGxlY3Rvcix1KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigiZGV2aWNlbW90aW9uIix0aGlzLmEuYWNjZWxlcm9tZXRlckNvbGxlY3Rvcix1KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigidG91Y2htb3ZlIix0aGlzLmEudG91Y2hDb2xsZWN0b3IsdSkpOmRvY3VtZW50LmF0dGFjaEV2ZW50Pyhkb2N1bWVudC5hdHRhY2hFdmVudCgib25sb2FkIix0aGlzLmEubG9hZFRpbWVDb2xsZWN0b3IpLGRvY3VtZW50LmF0dGFjaEV2ZW50KCJvbm1vdXNlbW92ZSIsdGhpcy5hLm1vdXNlQ29sbGVjdG9yKSxkb2N1bWVudC5hdHRhY2hFdmVudCgia2V5cHJlc3MiLHRoaXMuYS5rZXlib2FyZENvbGxlY3RvcikpOnEobmV3IHNqY2wuZXhjZXB0aW9uLmJ1ZygiY2FuJ3QgYXR0YWNoIGV2ZW50IikpLHRoaXMucT0hMCl9LHN0b3BDb2xsZWN0b3JzOmZ1bmN0aW9uKCl7dGhpcy5xJiYod2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXI/DQood2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoImxvYWQiLHRoaXMuYS5sb2FkVGltZUNvbGxlY3Rvcix1KSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vtb3ZlIix0aGlzLmEubW91c2VDb2xsZWN0b3IsdSksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoImtleXByZXNzIix0aGlzLmEua2V5Ym9hcmRDb2xsZWN0b3IsdSksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoImRldmljZW1vdGlvbiIsdGhpcy5hLmFjY2VsZXJvbWV0ZXJDb2xsZWN0b3IsdSksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoInRvdWNobW92ZSIsdGhpcy5hLnRvdWNoQ29sbGVjdG9yLHUpKTpkb2N1bWVudC5kZXRhY2hFdmVudCYmKGRvY3VtZW50LmRldGFjaEV2ZW50KCJvbmxvYWQiLHRoaXMuYS5sb2FkVGltZUNvbGxlY3RvciksZG9jdW1lbnQuZGV0YWNoRXZlbnQoIm9ubW91c2Vtb3ZlIix0aGlzLmEubW91c2VDb2xsZWN0b3IpLGRvY3VtZW50LmRldGFjaEV2ZW50KCJrZXlwcmVzcyIsDQp0aGlzLmEua2V5Ym9hcmRDb2xsZWN0b3IpKSx0aGlzLnE9dSl9LGFkZEV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24oYSxiKXt0aGlzLndbYV1bdGhpcy5WKytdPWJ9LHJlbW92ZUV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGU9dGhpcy53W2FdLGY9W107Zm9yKGQgaW4gZSllLmhhc093blByb3BlcnR5KGQpJiZlW2RdPT09YiYmZi5wdXNoKGQpO2ZvcihjPTA7YzxmLmxlbmd0aDtjKyspZD1mW2NdLGRlbGV0ZSBlW2RdfSwkOmZ1bmN0aW9uKCl7RSgxKX0sYmE6ZnVuY3Rpb24oYSl7dmFyIGIsYzt0cnl7Yj1hLnh8fGEuY2xpZW50WHx8YS5vZmZzZXRYfHwwLGM9YS55fHxhLmNsaWVudFl8fGEub2Zmc2V0WXx8MH1jYXRjaChkKXtjPWI9MH0wIT1iJiYwIT1jJiZzamNsLnJhbmRvbS5hZGRFbnRyb3B5KFtiLGNdLDIsIm1vdXNlIik7RSgwKX0sZGE6ZnVuY3Rpb24oYSl7YT1hLnRvdWNoZXNbMF18fGEuY2hhbmdlZFRvdWNoZXNbMF07c2pjbC5yYW5kb20uYWRkRW50cm9weShbYS5wYWdlWHx8DQphLmNsaWVudFgsYS5wYWdlWXx8YS5jbGllbnRZXSwxLCJ0b3VjaCIpO0UoMCl9LGFhOmZ1bmN0aW9uKCl7RSgyKX0sVTpmdW5jdGlvbihhKXthPWEuYWNjZWxlcmF0aW9uSW5jbHVkaW5nR3Jhdml0eS54fHxhLmFjY2VsZXJhdGlvbkluY2x1ZGluZ0dyYXZpdHkueXx8YS5hY2NlbGVyYXRpb25JbmNsdWRpbmdHcmF2aXR5Lno7aWYod2luZG93Lm9yaWVudGF0aW9uKXt2YXIgYj13aW5kb3cub3JpZW50YXRpb247Im51bWJlciI9PT10eXBlb2YgYiYmc2pjbC5yYW5kb20uYWRkRW50cm9weShiLDEsImFjY2VsZXJvbWV0ZXIiKX1hJiZzamNsLnJhbmRvbS5hZGRFbnRyb3B5KGEsMiwiYWNjZWxlcm9tZXRlciIpO0UoMCl9fTtmdW5jdGlvbiBDKGEsYil7dmFyIGMsZD1zamNsLnJhbmRvbS53W2FdLGU9W107Zm9yKGMgaW4gZClkLmhhc093blByb3BlcnR5KGMpJiZlLnB1c2goZFtjXSk7Zm9yKGM9MDtjPGUubGVuZ3RoO2MrKyllW2NdKGIpfQ0KZnVuY3Rpb24gRShhKXsidW5kZWZpbmVkIiE9PXR5cGVvZiB3aW5kb3cmJndpbmRvdy5wZXJmb3JtYW5jZSYmImZ1bmN0aW9uIj09PXR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2Uubm93P3NqY2wucmFuZG9tLmFkZEVudHJvcHkod2luZG93LnBlcmZvcm1hbmNlLm5vdygpLGEsImxvYWR0aW1lIik6c2pjbC5yYW5kb20uYWRkRW50cm9weSgobmV3IERhdGUpLnZhbHVlT2YoKSxhLCJsb2FkdGltZSIpfWZ1bmN0aW9uIEEoYSl7YS5iPUIoYSkuY29uY2F0KEIoYSkpO2EuQT1uZXcgc2pjbC5jaXBoZXIuYWVzKGEuYil9ZnVuY3Rpb24gQihhKXtmb3IodmFyIGI9MDs0PmImJiEoYS5mW2JdPWEuZltiXSsxfDAsYS5mW2JdKTtiKyspO3JldHVybiBhLkEuZW5jcnlwdChhLmYpfWZ1bmN0aW9uIEQoYSxiKXtyZXR1cm4gZnVuY3Rpb24oKXtiLmFwcGx5KGEsYXJndW1lbnRzKX19c2pjbC5yYW5kb209bmV3IHNqY2wucHJuZyg2KTsNCmE6dHJ5e3ZhciBGLEcsSCxJO2lmKEk9InVuZGVmaW5lZCIhPT10eXBlb2YgbW9kdWxlKXt2YXIgSjtpZihKPW1vZHVsZS5leHBvcnRzKXt2YXIgSzt0cnl7Sz1yZXF1aXJlKCJjcnlwdG8iKX1jYXRjaChMKXtLPW51bGx9Sj0oRz1LKSYmRy5yYW5kb21CeXRlc31JPUp9aWYoSSlGPUcucmFuZG9tQnl0ZXMoMTI4KSxGPW5ldyBVaW50MzJBcnJheSgobmV3IFVpbnQ4QXJyYXkoRikpLmJ1ZmZlciksc2pjbC5yYW5kb20uYWRkRW50cm9weShGLDEwMjQsImNyeXB0b1sncmFuZG9tQnl0ZXMnXSIpO2Vsc2UgaWYoInVuZGVmaW5lZCIhPT10eXBlb2Ygd2luZG93JiYidW5kZWZpbmVkIiE9PXR5cGVvZiBVaW50MzJBcnJheSl7SD1uZXcgVWludDMyQXJyYXkoMzIpO2lmKHdpbmRvdy5jcnlwdG8mJndpbmRvdy5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKXdpbmRvdy5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKEgpO2Vsc2UgaWYod2luZG93Lm1zQ3J5cHRvJiZ3aW5kb3cubXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKXdpbmRvdy5tc0NyeXB0by5nZXRSYW5kb21WYWx1ZXMoSCk7DQplbHNlIGJyZWFrIGE7c2pjbC5yYW5kb20uYWRkRW50cm9weShILDEwMjQsImNyeXB0b1snZ2V0UmFuZG9tVmFsdWVzJ10iKX19Y2F0Y2goTSl7InVuZGVmaW5lZCIhPT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuY29uc29sZSYmKGNvbnNvbGUubG9nKCJUaGVyZSB3YXMgYW4gZXJyb3IgY29sbGVjdGluZyBlbnRyb3B5IGZyb20gdGhlIGJyb3dzZXI6IiksY29uc29sZS5sb2coTSkpfQ0Kc2pjbC5qc29uPXtkZWZhdWx0czp7djoxLGl0ZXI6MUUzLGtzOjEyOCx0czo2NCxtb2RlOiJjY20iLGFkYXRhOiIiLGNpcGhlcjoiYWVzIn0sWTpmdW5jdGlvbihhLGIsYyxkKXtjPWN8fHt9O2Q9ZHx8e307dmFyIGU9c2pjbC5qc29uLGY9ZS5lKHtpdjpzamNsLnJhbmRvbS5yYW5kb21Xb3Jkcyg0LDApfSxlLmRlZmF1bHRzKSxnO2UuZShmLGMpO2M9Zi5hZGF0YTsic3RyaW5nIj09PXR5cGVvZiBmLnNhbHQmJihmLnNhbHQ9c2pjbC5jb2RlYy5iYXNlNjQudG9CaXRzKGYuc2FsdCkpOyJzdHJpbmciPT09dHlwZW9mIGYuaXYmJihmLml2PXNqY2wuY29kZWMuYmFzZTY0LnRvQml0cyhmLml2KSk7KCFzamNsLm1vZGVbZi5tb2RlXXx8IXNqY2wuY2lwaGVyW2YuY2lwaGVyXXx8InN0cmluZyI9PT10eXBlb2YgYSYmMTAwPj1mLml0ZXJ8fDY0IT09Zi50cyYmOTYhPT1mLnRzJiYxMjghPT1mLnRzfHwxMjghPT1mLmtzJiYxOTIhPT1mLmtzJiYweDEwMCE9PWYua3N8fDI+Zi5pdi5sZW5ndGh8fDQ8DQpmLml2Lmxlbmd0aCkmJnEobmV3IHNqY2wuZXhjZXB0aW9uLmludmFsaWQoImpzb24gZW5jcnlwdDogaW52YWxpZCBwYXJhbWV0ZXJzIikpOyJzdHJpbmciPT09dHlwZW9mIGE/KGc9c2pjbC5taXNjLmNhY2hlZFBia2RmMihhLGYpLGE9Zy5rZXkuc2xpY2UoMCxmLmtzLzMyKSxmLnNhbHQ9Zy5zYWx0KTpzamNsLmVjYyYmYSBpbnN0YW5jZW9mIHNqY2wuZWNjLmVsR2FtYWwucHVibGljS2V5JiYoZz1hLmtlbSgpLGYua2VtdGFnPWcudGFnLGE9Zy5rZXkuc2xpY2UoMCxmLmtzLzMyKSk7InN0cmluZyI9PT10eXBlb2YgYiYmKGI9c2pjbC5jb2RlYy51dGY4U3RyaW5nLnRvQml0cyhiKSk7InN0cmluZyI9PT10eXBlb2YgYyYmKGYuYWRhdGE9Yz1zamNsLmNvZGVjLnV0ZjhTdHJpbmcudG9CaXRzKGMpKTtnPW5ldyBzamNsLmNpcGhlcltmLmNpcGhlcl0oYSk7ZS5lKGQsZik7ZC5rZXk9YTtmLmN0PXNqY2wubW9kZVtmLm1vZGVdLmVuY3J5cHQoZyxiLGYuaXYsYyxmLnRzKTtyZXR1cm4gZn0sDQplbmNyeXB0OmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXNqY2wuanNvbixmPWUuWS5hcHBseShlLGFyZ3VtZW50cyk7cmV0dXJuIGUuZW5jb2RlKGYpfSxYOmZ1bmN0aW9uKGEsYixjLGQpe2M9Y3x8e307ZD1kfHx7fTt2YXIgZT1zamNsLmpzb247Yj1lLmUoZS5lKGUuZSh7fSxlLmRlZmF1bHRzKSxiKSxjLCEwKTt2YXIgZixnO2Y9Yi5hZGF0YTsic3RyaW5nIj09PXR5cGVvZiBiLnNhbHQmJihiLnNhbHQ9c2pjbC5jb2RlYy5iYXNlNjQudG9CaXRzKGIuc2FsdCkpOyJzdHJpbmciPT09dHlwZW9mIGIuaXYmJihiLml2PXNqY2wuY29kZWMuYmFzZTY0LnRvQml0cyhiLml2KSk7KCFzamNsLm1vZGVbYi5tb2RlXXx8IXNqY2wuY2lwaGVyW2IuY2lwaGVyXXx8InN0cmluZyI9PT10eXBlb2YgYSYmMTAwPj1iLml0ZXJ8fDY0IT09Yi50cyYmOTYhPT1iLnRzJiYxMjghPT1iLnRzfHwxMjghPT1iLmtzJiYxOTIhPT1iLmtzJiYweDEwMCE9PWIua3N8fCFiLml2fHwyPmIuaXYubGVuZ3RofHw0PGIuaXYubGVuZ3RoKSYmDQpxKG5ldyBzamNsLmV4Y2VwdGlvbi5pbnZhbGlkKCJqc29uIGRlY3J5cHQ6IGludmFsaWQgcGFyYW1ldGVycyIpKTsic3RyaW5nIj09PXR5cGVvZiBhPyhnPXNqY2wubWlzYy5jYWNoZWRQYmtkZjIoYSxiKSxhPWcua2V5LnNsaWNlKDAsYi5rcy8zMiksYi5zYWx0PWcuc2FsdCk6c2pjbC5lY2MmJmEgaW5zdGFuY2VvZiBzamNsLmVjYy5lbEdhbWFsLnNlY3JldEtleSYmKGE9YS51bmtlbShzamNsLmNvZGVjLmJhc2U2NC50b0JpdHMoYi5rZW10YWcpKS5zbGljZSgwLGIua3MvMzIpKTsic3RyaW5nIj09PXR5cGVvZiBmJiYoZj1zamNsLmNvZGVjLnV0ZjhTdHJpbmcudG9CaXRzKGYpKTtnPW5ldyBzamNsLmNpcGhlcltiLmNpcGhlcl0oYSk7Zj1zamNsLm1vZGVbYi5tb2RlXS5kZWNyeXB0KGcsYi5jdCxiLml2LGYsYi50cyk7ZS5lKGQsYik7ZC5rZXk9YTtyZXR1cm4gMT09PWMucmF3P2Y6c2pjbC5jb2RlYy51dGY4U3RyaW5nLmZyb21CaXRzKGYpfSxkZWNyeXB0OmZ1bmN0aW9uKGEsYiwNCmMsZCl7dmFyIGU9c2pjbC5qc29uO3JldHVybiBlLlgoYSxlLmRlY29kZShiKSxjLGQpfSxlbmNvZGU6ZnVuY3Rpb24oYSl7dmFyIGIsYz0ieyIsZD0iIjtmb3IoYiBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYikpc3dpdGNoKGIubWF0Y2goL15bYS16MC05XSskL2kpfHxxKG5ldyBzamNsLmV4Y2VwdGlvbi5pbnZhbGlkKCJqc29uIGVuY29kZTogaW52YWxpZCBwcm9wZXJ0eSBuYW1lIikpLGMrPWQrJyInK2IrJyI6JyxkPSIsIix0eXBlb2YgYVtiXSl7Y2FzZSAibnVtYmVyIjpjYXNlICJib29sZWFuIjpjKz1hW2JdO2JyZWFrO2Nhc2UgInN0cmluZyI6Yys9JyInK2VzY2FwZShhW2JdKSsnIic7YnJlYWs7Y2FzZSAib2JqZWN0IjpjKz0nIicrc2pjbC5jb2RlYy5iYXNlNjQuZnJvbUJpdHMoYVtiXSwwKSsnIic7YnJlYWs7ZGVmYXVsdDpxKG5ldyBzamNsLmV4Y2VwdGlvbi5idWcoImpzb24gZW5jb2RlOiB1bnN1cHBvcnRlZCB0eXBlIikpfXJldHVybiBjKyJ9In0sZGVjb2RlOmZ1bmN0aW9uKGEpe2E9DQphLnJlcGxhY2UoL1xzL2csIiIpO2EubWF0Y2goL15cey4qXH0kLyl8fHEobmV3IHNqY2wuZXhjZXB0aW9uLmludmFsaWQoImpzb24gZGVjb2RlOiB0aGlzIGlzbid0IGpzb24hIikpO2E9YS5yZXBsYWNlKC9eXHt8XH0kL2csIiIpLnNwbGl0KC8sLyk7dmFyIGI9e30sYyxkO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspKGQ9YVtjXS5tYXRjaCgvXlxzKig/OihbIiddPykoW2Etel1bYS16MC05XSopXDEpXHMqOlxzKig/OigtP1xkKyl8IihbYS16MC05K1wvJSpfLkA9XC1dKikifCh0cnVlfGZhbHNlKSkkL2kpKXx8cShuZXcgc2pjbC5leGNlcHRpb24uaW52YWxpZCgianNvbiBkZWNvZGU6IHRoaXMgaXNuJ3QganNvbiEiKSksZFszXT9iW2RbMl1dPXBhcnNlSW50KGRbM10sMTApOmRbNF0/YltkWzJdXT1kWzJdLm1hdGNoKC9eKGN0fGFkYXRhfHNhbHR8aXYpJC8pP3NqY2wuY29kZWMuYmFzZTY0LnRvQml0cyhkWzRdKTp1bmVzY2FwZShkWzRdKTpkWzVdJiYoYltkWzJdXT0idHJ1ZSI9PT0NCmRbNV0pO3JldHVybiBifSxlOmZ1bmN0aW9uKGEsYixjKXthPT09cyYmKGE9e30pO2lmKGI9PT1zKXJldHVybiBhO2Zvcih2YXIgZCBpbiBiKWIuaGFzT3duUHJvcGVydHkoZCkmJihjJiYoYVtkXSE9PXMmJmFbZF0hPT1iW2RdKSYmcShuZXcgc2pjbC5leGNlcHRpb24uaW52YWxpZCgicmVxdWlyZWQgcGFyYW1ldGVyIG92ZXJyaWRkZW4iKSksYVtkXT1iW2RdKTtyZXR1cm4gYX0sZmE6ZnVuY3Rpb24oYSxiKXt2YXIgYz17fSxkO2ZvcihkIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShkKSYmYVtkXSE9PWJbZF0mJihjW2RdPWFbZF0pO3JldHVybiBjfSxlYTpmdW5jdGlvbihhLGIpe3ZhciBjPXt9LGQ7Zm9yKGQ9MDtkPGIubGVuZ3RoO2QrKylhW2JbZF1dIT09cyYmKGNbYltkXV09YVtiW2RdXSk7cmV0dXJuIGN9fTtzamNsLmVuY3J5cHQ9c2pjbC5qc29uLmVuY3J5cHQ7c2pjbC5kZWNyeXB0PXNqY2wuanNvbi5kZWNyeXB0O3NqY2wubWlzYy5jYT17fTsNCnNqY2wubWlzYy5jYWNoZWRQYmtkZjI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1zamNsLm1pc2MuY2EsZDtiPWJ8fHt9O2Q9Yi5pdGVyfHwxRTM7Yz1jW2FdPWNbYV18fHt9O2Q9Y1tkXT1jW2RdfHx7Zmlyc3RTYWx0OmIuc2FsdCYmYi5zYWx0Lmxlbmd0aD9iLnNhbHQuc2xpY2UoMCk6c2pjbC5yYW5kb20ucmFuZG9tV29yZHMoMiwwKX07Yz1iLnNhbHQ9PT1zP2QuZmlyc3RTYWx0OmIuc2FsdDtkW2NdPWRbY118fHNqY2wubWlzYy5wYmtkZjIoYSxjLGIuaXRlcik7cmV0dXJue2tleTpkW2NdLnNsaWNlKDApLHNhbHQ6Yy5zbGljZSgwKX19Ow0KDQp9LHsiY3J5cHRvIjo0OTJ9XSw1ODA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuDQovLw0KLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGENCi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUNCi8vICJTb2Z0d2FyZSIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcNCi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwNCi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQNCi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZQ0KLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6DQovLw0KLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQNCi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLg0KLy8NCi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTDQovLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GDQovLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElODQovLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwNCi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUg0KLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRQ0KLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4NCg0KbW9kdWxlLmV4cG9ydHMgPSBTdHJlYW07DQoNCnZhciBFRSA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcjsNCnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7DQoNCmluaGVyaXRzKFN0cmVhbSwgRUUpOw0KU3RyZWFtLlJlYWRhYmxlID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3JlYWRhYmxlLmpzJyk7DQpTdHJlYW0uV3JpdGFibGUgPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0vd3JpdGFibGUuanMnKTsNClN0cmVhbS5EdXBsZXggPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0vZHVwbGV4LmpzJyk7DQpTdHJlYW0uVHJhbnNmb3JtID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3RyYW5zZm9ybS5qcycpOw0KU3RyZWFtLlBhc3NUaHJvdWdoID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtL3Bhc3N0aHJvdWdoLmpzJyk7DQoNCi8vIEJhY2t3YXJkcy1jb21wYXQgd2l0aCBub2RlIDAuNC54DQpTdHJlYW0uU3RyZWFtID0gU3RyZWFtOw0KDQoNCg0KLy8gb2xkLXN0eWxlIHN0cmVhbXMuICBOb3RlIHRoYXQgdGhlIHBpcGUgbWV0aG9kICh0aGUgb25seSByZWxldmFudA0KLy8gcGFydCBvZiB0aGlzIGNsYXNzKSBpcyBvdmVycmlkZGVuIGluIHRoZSBSZWFkYWJsZSBjbGFzcy4NCg0KZnVuY3Rpb24gU3RyZWFtKCkgew0KICBFRS5jYWxsKHRoaXMpOw0KfQ0KDQpTdHJlYW0ucHJvdG90eXBlLnBpcGUgPSBmdW5jdGlvbihkZXN0LCBvcHRpb25zKSB7DQogIHZhciBzb3VyY2UgPSB0aGlzOw0KDQogIGZ1bmN0aW9uIG9uZGF0YShjaHVuaykgew0KICAgIGlmIChkZXN0LndyaXRhYmxlKSB7DQogICAgICBpZiAoZmFsc2UgPT09IGRlc3Qud3JpdGUoY2h1bmspICYmIHNvdXJjZS5wYXVzZSkgew0KICAgICAgICBzb3VyY2UucGF1c2UoKTsNCiAgICAgIH0NCiAgICB9DQogIH0NCg0KICBzb3VyY2Uub24oJ2RhdGEnLCBvbmRhdGEpOw0KDQogIGZ1bmN0aW9uIG9uZHJhaW4oKSB7DQogICAgaWYgKHNvdXJjZS5yZWFkYWJsZSAmJiBzb3VyY2UucmVzdW1lKSB7DQogICAgICBzb3VyY2UucmVzdW1lKCk7DQogICAgfQ0KICB9DQoNCiAgZGVzdC5vbignZHJhaW4nLCBvbmRyYWluKTsNCg0KICAvLyBJZiB0aGUgJ2VuZCcgb3B0aW9uIGlzIG5vdCBzdXBwbGllZCwgZGVzdC5lbmQoKSB3aWxsIGJlIGNhbGxlZCB3aGVuDQogIC8vIHNvdXJjZSBnZXRzIHRoZSAnZW5kJyBvciAnY2xvc2UnIGV2ZW50cy4gIE9ubHkgZGVzdC5lbmQoKSBvbmNlLg0KICBpZiAoIWRlc3QuX2lzU3RkaW8gJiYgKCFvcHRpb25zIHx8IG9wdGlvbnMuZW5kICE9PSBmYWxzZSkpIHsNCiAgICBzb3VyY2Uub24oJ2VuZCcsIG9uZW5kKTsNCiAgICBzb3VyY2Uub24oJ2Nsb3NlJywgb25jbG9zZSk7DQogIH0NCg0KICB2YXIgZGlkT25FbmQgPSBmYWxzZTsNCiAgZnVuY3Rpb24gb25lbmQoKSB7DQogICAgaWYgKGRpZE9uRW5kKSByZXR1cm47DQogICAgZGlkT25FbmQgPSB0cnVlOw0KDQogICAgZGVzdC5lbmQoKTsNCiAgfQ0KDQoNCiAgZnVuY3Rpb24gb25jbG9zZSgpIHsNCiAgICBpZiAoZGlkT25FbmQpIHJldHVybjsNCiAgICBkaWRPbkVuZCA9IHRydWU7DQoNCiAgICBpZiAodHlwZW9mIGRlc3QuZGVzdHJveSA9PT0gJ2Z1bmN0aW9uJykgZGVzdC5kZXN0cm95KCk7DQogIH0NCg0KICAvLyBkb24ndCBsZWF2ZSBkYW5nbGluZyBwaXBlcyB3aGVuIHRoZXJlIGFyZSBlcnJvcnMuDQogIGZ1bmN0aW9uIG9uZXJyb3IoZXIpIHsNCiAgICBjbGVhbnVwKCk7DQogICAgaWYgKEVFLmxpc3RlbmVyQ291bnQodGhpcywgJ2Vycm9yJykgPT09IDApIHsNCiAgICAgIHRocm93IGVyOyAvLyBVbmhhbmRsZWQgc3RyZWFtIGVycm9yIGluIHBpcGUuDQogICAgfQ0KICB9DQoNCiAgc291cmNlLm9uKCdlcnJvcicsIG9uZXJyb3IpOw0KICBkZXN0Lm9uKCdlcnJvcicsIG9uZXJyb3IpOw0KDQogIC8vIHJlbW92ZSBhbGwgdGhlIGV2ZW50IGxpc3RlbmVycyB0aGF0IHdlcmUgYWRkZWQuDQogIGZ1bmN0aW9uIGNsZWFudXAoKSB7DQogICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdkYXRhJywgb25kYXRhKTsNCiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCdkcmFpbicsIG9uZHJhaW4pOw0KDQogICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBvbmVuZCk7DQogICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIG9uY2xvc2UpOw0KDQogICAgc291cmNlLnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpOw0KICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgb25lcnJvcik7DQoNCiAgICBzb3VyY2UucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIGNsZWFudXApOw0KICAgIHNvdXJjZS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBjbGVhbnVwKTsNCg0KICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgY2xlYW51cCk7DQogIH0NCg0KICBzb3VyY2Uub24oJ2VuZCcsIGNsZWFudXApOw0KICBzb3VyY2Uub24oJ2Nsb3NlJywgY2xlYW51cCk7DQoNCiAgZGVzdC5vbignY2xvc2UnLCBjbGVhbnVwKTsNCg0KICBkZXN0LmVtaXQoJ3BpcGUnLCBzb3VyY2UpOw0KDQogIC8vIEFsbG93IGZvciB1bml4LWxpa2UgdXNhZ2U6IEEucGlwZShCKS5waXBlKEMpDQogIHJldHVybiBkZXN0Ow0KfTsNCg0KfSx7ImV2ZW50cyI6NTI1LCJpbmhlcml0cyI6NTM3LCJyZWFkYWJsZS1zdHJlYW0vZHVwbGV4LmpzIjo1NTksInJlYWRhYmxlLXN0cmVhbS9wYXNzdGhyb3VnaC5qcyI6NTY1LCJyZWFkYWJsZS1zdHJlYW0vcmVhZGFibGUuanMiOjU2NiwicmVhZGFibGUtc3RyZWFtL3RyYW5zZm9ybS5qcyI6NTY3LCJyZWFkYWJsZS1zdHJlYW0vd3JpdGFibGUuanMiOjU2OH1dLDU4MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQovLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy4NCi8vDQovLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYQ0KLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZQ0KLy8gIlNvZnR3YXJlIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZw0KLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLA0KLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdA0KLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlDQovLyBmb2xsb3dpbmcgY29uZGl0aW9uczoNCi8vDQovLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZA0KLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuDQovLw0KLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MNCi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YNCi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4NCi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLA0KLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SDQovLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFDQovLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLg0KDQp2YXIgQnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJykuQnVmZmVyOw0KDQp2YXIgaXNCdWZmZXJFbmNvZGluZyA9IEJ1ZmZlci5pc0VuY29kaW5nDQogIHx8IGZ1bmN0aW9uKGVuY29kaW5nKSB7DQogICAgICAgc3dpdGNoIChlbmNvZGluZyAmJiBlbmNvZGluZy50b0xvd2VyQ2FzZSgpKSB7DQogICAgICAgICBjYXNlICdoZXgnOiBjYXNlICd1dGY4JzogY2FzZSAndXRmLTgnOiBjYXNlICdhc2NpaSc6IGNhc2UgJ2JpbmFyeSc6IGNhc2UgJ2Jhc2U2NCc6IGNhc2UgJ3VjczInOiBjYXNlICd1Y3MtMic6IGNhc2UgJ3V0ZjE2bGUnOiBjYXNlICd1dGYtMTZsZSc6IGNhc2UgJ3Jhdyc6IHJldHVybiB0cnVlOw0KICAgICAgICAgZGVmYXVsdDogcmV0dXJuIGZhbHNlOw0KICAgICAgIH0NCiAgICAgfQ0KDQoNCmZ1bmN0aW9uIGFzc2VydEVuY29kaW5nKGVuY29kaW5nKSB7DQogIGlmIChlbmNvZGluZyAmJiAhaXNCdWZmZXJFbmNvZGluZyhlbmNvZGluZykpIHsNCiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZyk7DQogIH0NCn0NCg0KLy8gU3RyaW5nRGVjb2RlciBwcm92aWRlcyBhbiBpbnRlcmZhY2UgZm9yIGVmZmljaWVudGx5IHNwbGl0dGluZyBhIHNlcmllcyBvZg0KLy8gYnVmZmVycyBpbnRvIGEgc2VyaWVzIG9mIEpTIHN0cmluZ3Mgd2l0aG91dCBicmVha2luZyBhcGFydCBtdWx0aS1ieXRlDQovLyBjaGFyYWN0ZXJzLiBDRVNVLTggaXMgaGFuZGxlZCBhcyBwYXJ0IG9mIHRoZSBVVEYtOCBlbmNvZGluZy4NCi8vDQovLyBAVE9ETyBIYW5kbGluZyBhbGwgZW5jb2RpbmdzIGluc2lkZSBhIHNpbmdsZSBvYmplY3QgbWFrZXMgaXQgdmVyeSBkaWZmaWN1bHQNCi8vIHRvIHJlYXNvbiBhYm91dCB0aGlzIGNvZGUsIHNvIGl0IHNob3VsZCBiZSBzcGxpdCB1cCBpbiB0aGUgZnV0dXJlLg0KLy8gQFRPRE8gVGhlcmUgc2hvdWxkIGJlIGEgdXRmOC1zdHJpY3QgZW5jb2RpbmcgdGhhdCByZWplY3RzIGludmFsaWQgVVRGLTggY29kZQ0KLy8gcG9pbnRzIGFzIHVzZWQgYnkgQ0VTVS04Lg0KdmFyIFN0cmluZ0RlY29kZXIgPSBleHBvcnRzLlN0cmluZ0RlY29kZXIgPSBmdW5jdGlvbihlbmNvZGluZykgew0KICB0aGlzLmVuY29kaW5nID0gKGVuY29kaW5nIHx8ICd1dGY4JykudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9bLV9dLywgJycpOw0KICBhc3NlcnRFbmNvZGluZyhlbmNvZGluZyk7DQogIHN3aXRjaCAodGhpcy5lbmNvZGluZykgew0KICAgIGNhc2UgJ3V0ZjgnOg0KICAgICAgLy8gQ0VTVS04IHJlcHJlc2VudHMgZWFjaCBvZiBTdXJyb2dhdGUgUGFpciBieSAzLWJ5dGVzDQogICAgICB0aGlzLnN1cnJvZ2F0ZVNpemUgPSAzOw0KICAgICAgYnJlYWs7DQogICAgY2FzZSAndWNzMic6DQogICAgY2FzZSAndXRmMTZsZSc6DQogICAgICAvLyBVVEYtMTYgcmVwcmVzZW50cyBlYWNoIG9mIFN1cnJvZ2F0ZSBQYWlyIGJ5IDItYnl0ZXMNCiAgICAgIHRoaXMuc3Vycm9nYXRlU2l6ZSA9IDI7DQogICAgICB0aGlzLmRldGVjdEluY29tcGxldGVDaGFyID0gdXRmMTZEZXRlY3RJbmNvbXBsZXRlQ2hhcjsNCiAgICAgIGJyZWFrOw0KICAgIGNhc2UgJ2Jhc2U2NCc6DQogICAgICAvLyBCYXNlLTY0IHN0b3JlcyAzIGJ5dGVzIGluIDQgY2hhcnMsIGFuZCBwYWRzIHRoZSByZW1haW5kZXIuDQogICAgICB0aGlzLnN1cnJvZ2F0ZVNpemUgPSAzOw0KICAgICAgdGhpcy5kZXRlY3RJbmNvbXBsZXRlQ2hhciA9IGJhc2U2NERldGVjdEluY29tcGxldGVDaGFyOw0KICAgICAgYnJlYWs7DQogICAgZGVmYXVsdDoNCiAgICAgIHRoaXMud3JpdGUgPSBwYXNzVGhyb3VnaFdyaXRlOw0KICAgICAgcmV0dXJuOw0KICB9DQoNCiAgLy8gRW5vdWdoIHNwYWNlIHRvIHN0b3JlIGFsbCBieXRlcyBvZiBhIHNpbmdsZSBjaGFyYWN0ZXIuIFVURi04IG5lZWRzIDQNCiAgLy8gYnl0ZXMsIGJ1dCBDRVNVLTggbWF5IHJlcXVpcmUgdXAgdG8gNiAoMyBieXRlcyBwZXIgc3Vycm9nYXRlKS4NCiAgdGhpcy5jaGFyQnVmZmVyID0gbmV3IEJ1ZmZlcig2KTsNCiAgLy8gTnVtYmVyIG9mIGJ5dGVzIHJlY2VpdmVkIGZvciB0aGUgY3VycmVudCBpbmNvbXBsZXRlIG11bHRpLWJ5dGUgY2hhcmFjdGVyLg0KICB0aGlzLmNoYXJSZWNlaXZlZCA9IDA7DQogIC8vIE51bWJlciBvZiBieXRlcyBleHBlY3RlZCBmb3IgdGhlIGN1cnJlbnQgaW5jb21wbGV0ZSBtdWx0aS1ieXRlIGNoYXJhY3Rlci4NCiAgdGhpcy5jaGFyTGVuZ3RoID0gMDsNCn07DQoNCg0KLy8gd3JpdGUgZGVjb2RlcyB0aGUgZ2l2ZW4gYnVmZmVyIGFuZCByZXR1cm5zIGl0IGFzIEpTIHN0cmluZyB0aGF0IGlzDQovLyBndWFyYW50ZWVkIHRvIG5vdCBjb250YWluIGFueSBwYXJ0aWFsIG11bHRpLWJ5dGUgY2hhcmFjdGVycy4gQW55IHBhcnRpYWwNCi8vIGNoYXJhY3RlciBmb3VuZCBhdCB0aGUgZW5kIG9mIHRoZSBidWZmZXIgaXMgYnVmZmVyZWQgdXAsIGFuZCB3aWxsIGJlDQovLyByZXR1cm5lZCB3aGVuIGNhbGxpbmcgd3JpdGUgYWdhaW4gd2l0aCB0aGUgcmVtYWluaW5nIGJ5dGVzLg0KLy8NCi8vIE5vdGU6IENvbnZlcnRpbmcgYSBCdWZmZXIgY29udGFpbmluZyBhbiBvcnBoYW4gc3Vycm9nYXRlIHRvIGEgU3RyaW5nDQovLyBjdXJyZW50bHkgd29ya3MsIGJ1dCBjb252ZXJ0aW5nIGEgU3RyaW5nIHRvIGEgQnVmZmVyICh2aWEgYG5ldyBCdWZmZXJgLCBvcg0KLy8gQnVmZmVyI3dyaXRlKSB3aWxsIHJlcGxhY2UgaW5jb21wbGV0ZSBzdXJyb2dhdGVzIHdpdGggdGhlIHVuaWNvZGUNCi8vIHJlcGxhY2VtZW50IGNoYXJhY3Rlci4gU2VlIGh0dHBzOi8vY29kZXJldmlldy5jaHJvbWl1bS5vcmcvMTIxMTczMDA5LyAuDQpTdHJpbmdEZWNvZGVyLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uKGJ1ZmZlcikgew0KICB2YXIgY2hhclN0ciA9ICcnOw0KICAvLyBpZiBvdXIgbGFzdCB3cml0ZSBlbmRlZCB3aXRoIGFuIGluY29tcGxldGUgbXVsdGlieXRlIGNoYXJhY3Rlcg0KICB3aGlsZSAodGhpcy5jaGFyTGVuZ3RoKSB7DQogICAgLy8gZGV0ZXJtaW5lIGhvdyBtYW55IHJlbWFpbmluZyBieXRlcyB0aGlzIGJ1ZmZlciBoYXMgdG8gb2ZmZXIgZm9yIHRoaXMgY2hhcg0KICAgIHZhciBhdmFpbGFibGUgPSAoYnVmZmVyLmxlbmd0aCA+PSB0aGlzLmNoYXJMZW5ndGggLSB0aGlzLmNoYXJSZWNlaXZlZCkgPw0KICAgICAgICB0aGlzLmNoYXJMZW5ndGggLSB0aGlzLmNoYXJSZWNlaXZlZCA6DQogICAgICAgIGJ1ZmZlci5sZW5ndGg7DQoNCiAgICAvLyBhZGQgdGhlIG5ldyBieXRlcyB0byB0aGUgY2hhciBidWZmZXINCiAgICBidWZmZXIuY29weSh0aGlzLmNoYXJCdWZmZXIsIHRoaXMuY2hhclJlY2VpdmVkLCAwLCBhdmFpbGFibGUpOw0KICAgIHRoaXMuY2hhclJlY2VpdmVkICs9IGF2YWlsYWJsZTsNCg0KICAgIGlmICh0aGlzLmNoYXJSZWNlaXZlZCA8IHRoaXMuY2hhckxlbmd0aCkgew0KICAgICAgLy8gc3RpbGwgbm90IGVub3VnaCBjaGFycyBpbiB0aGlzIGJ1ZmZlcj8gd2FpdCBmb3IgbW9yZSAuLi4NCiAgICAgIHJldHVybiAnJzsNCiAgICB9DQoNCiAgICAvLyByZW1vdmUgYnl0ZXMgYmVsb25naW5nIHRvIHRoZSBjdXJyZW50IGNoYXJhY3RlciBmcm9tIHRoZSBidWZmZXINCiAgICBidWZmZXIgPSBidWZmZXIuc2xpY2UoYXZhaWxhYmxlLCBidWZmZXIubGVuZ3RoKTsNCg0KICAgIC8vIGdldCB0aGUgY2hhcmFjdGVyIHRoYXQgd2FzIHNwbGl0DQogICAgY2hhclN0ciA9IHRoaXMuY2hhckJ1ZmZlci5zbGljZSgwLCB0aGlzLmNoYXJMZW5ndGgpLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpOw0KDQogICAgLy8gQ0VTVS04OiBsZWFkIHN1cnJvZ2F0ZSAoRDgwMC1EQkZGKSBpcyBhbHNvIHRoZSBpbmNvbXBsZXRlIGNoYXJhY3Rlcg0KICAgIHZhciBjaGFyQ29kZSA9IGNoYXJTdHIuY2hhckNvZGVBdChjaGFyU3RyLmxlbmd0aCAtIDEpOw0KICAgIGlmIChjaGFyQ29kZSA+PSAweEQ4MDAgJiYgY2hhckNvZGUgPD0gMHhEQkZGKSB7DQogICAgICB0aGlzLmNoYXJMZW5ndGggKz0gdGhpcy5zdXJyb2dhdGVTaXplOw0KICAgICAgY2hhclN0ciA9ICcnOw0KICAgICAgY29udGludWU7DQogICAgfQ0KICAgIHRoaXMuY2hhclJlY2VpdmVkID0gdGhpcy5jaGFyTGVuZ3RoID0gMDsNCg0KICAgIC8vIGlmIHRoZXJlIGFyZSBubyBtb3JlIGJ5dGVzIGluIHRoaXMgYnVmZmVyLCBqdXN0IGVtaXQgb3VyIGNoYXINCiAgICBpZiAoYnVmZmVyLmxlbmd0aCA9PT0gMCkgew0KICAgICAgcmV0dXJuIGNoYXJTdHI7DQogICAgfQ0KICAgIGJyZWFrOw0KICB9DQoNCiAgLy8gZGV0ZXJtaW5lIGFuZCBzZXQgY2hhckxlbmd0aCAvIGNoYXJSZWNlaXZlZA0KICB0aGlzLmRldGVjdEluY29tcGxldGVDaGFyKGJ1ZmZlcik7DQoNCiAgdmFyIGVuZCA9IGJ1ZmZlci5sZW5ndGg7DQogIGlmICh0aGlzLmNoYXJMZW5ndGgpIHsNCiAgICAvLyBidWZmZXIgdGhlIGluY29tcGxldGUgY2hhcmFjdGVyIGJ5dGVzIHdlIGdvdA0KICAgIGJ1ZmZlci5jb3B5KHRoaXMuY2hhckJ1ZmZlciwgMCwgYnVmZmVyLmxlbmd0aCAtIHRoaXMuY2hhclJlY2VpdmVkLCBlbmQpOw0KICAgIGVuZCAtPSB0aGlzLmNoYXJSZWNlaXZlZDsNCiAgfQ0KDQogIGNoYXJTdHIgKz0gYnVmZmVyLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcsIDAsIGVuZCk7DQoNCiAgdmFyIGVuZCA9IGNoYXJTdHIubGVuZ3RoIC0gMTsNCiAgdmFyIGNoYXJDb2RlID0gY2hhclN0ci5jaGFyQ29kZUF0KGVuZCk7DQogIC8vIENFU1UtODogbGVhZCBzdXJyb2dhdGUgKEQ4MDAtREJGRikgaXMgYWxzbyB0aGUgaW5jb21wbGV0ZSBjaGFyYWN0ZXINCiAgaWYgKGNoYXJDb2RlID49IDB4RDgwMCAmJiBjaGFyQ29kZSA8PSAweERCRkYpIHsNCiAgICB2YXIgc2l6ZSA9IHRoaXMuc3Vycm9nYXRlU2l6ZTsNCiAgICB0aGlzLmNoYXJMZW5ndGggKz0gc2l6ZTsNCiAgICB0aGlzLmNoYXJSZWNlaXZlZCArPSBzaXplOw0KICAgIHRoaXMuY2hhckJ1ZmZlci5jb3B5KHRoaXMuY2hhckJ1ZmZlciwgc2l6ZSwgMCwgc2l6ZSk7DQogICAgYnVmZmVyLmNvcHkodGhpcy5jaGFyQnVmZmVyLCAwLCAwLCBzaXplKTsNCiAgICByZXR1cm4gY2hhclN0ci5zdWJzdHJpbmcoMCwgZW5kKTsNCiAgfQ0KDQogIC8vIG9yIGp1c3QgZW1pdCB0aGUgY2hhclN0cg0KICByZXR1cm4gY2hhclN0cjsNCn07DQoNCi8vIGRldGVjdEluY29tcGxldGVDaGFyIGRldGVybWluZXMgaWYgdGhlcmUgaXMgYW4gaW5jb21wbGV0ZSBVVEYtOCBjaGFyYWN0ZXIgYXQNCi8vIHRoZSBlbmQgb2YgdGhlIGdpdmVuIGJ1ZmZlci4gSWYgc28sIGl0IHNldHMgdGhpcy5jaGFyTGVuZ3RoIHRvIHRoZSBieXRlDQovLyBsZW5ndGggdGhhdCBjaGFyYWN0ZXIsIGFuZCBzZXRzIHRoaXMuY2hhclJlY2VpdmVkIHRvIHRoZSBudW1iZXIgb2YgYnl0ZXMNCi8vIHRoYXQgYXJlIGF2YWlsYWJsZSBmb3IgdGhpcyBjaGFyYWN0ZXIuDQpTdHJpbmdEZWNvZGVyLnByb3RvdHlwZS5kZXRlY3RJbmNvbXBsZXRlQ2hhciA9IGZ1bmN0aW9uKGJ1ZmZlcikgew0KICAvLyBkZXRlcm1pbmUgaG93IG1hbnkgYnl0ZXMgd2UgaGF2ZSB0byBjaGVjayBhdCB0aGUgZW5kIG9mIHRoaXMgYnVmZmVyDQogIHZhciBpID0gKGJ1ZmZlci5sZW5ndGggPj0gMykgPyAzIDogYnVmZmVyLmxlbmd0aDsNCg0KICAvLyBGaWd1cmUgb3V0IGlmIG9uZSBvZiB0aGUgbGFzdCBpIGJ5dGVzIG9mIG91ciBidWZmZXIgYW5ub3VuY2VzIGFuDQogIC8vIGluY29tcGxldGUgY2hhci4NCiAgZm9yICg7IGkgPiAwOyBpLS0pIHsNCiAgICB2YXIgYyA9IGJ1ZmZlcltidWZmZXIubGVuZ3RoIC0gaV07DQoNCiAgICAvLyBTZWUgaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9VVEYtOCNEZXNjcmlwdGlvbg0KDQogICAgLy8gMTEwWFhYWFgNCiAgICBpZiAoaSA9PSAxICYmIGMgPj4gNSA9PSAweDA2KSB7DQogICAgICB0aGlzLmNoYXJMZW5ndGggPSAyOw0KICAgICAgYnJlYWs7DQogICAgfQ0KDQogICAgLy8gMTExMFhYWFgNCiAgICBpZiAoaSA8PSAyICYmIGMgPj4gNCA9PSAweDBFKSB7DQogICAgICB0aGlzLmNoYXJMZW5ndGggPSAzOw0KICAgICAgYnJlYWs7DQogICAgfQ0KDQogICAgLy8gMTExMTBYWFgNCiAgICBpZiAoaSA8PSAzICYmIGMgPj4gMyA9PSAweDFFKSB7DQogICAgICB0aGlzLmNoYXJMZW5ndGggPSA0Ow0KICAgICAgYnJlYWs7DQogICAgfQ0KICB9DQogIHRoaXMuY2hhclJlY2VpdmVkID0gaTsNCn07DQoNClN0cmluZ0RlY29kZXIucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKGJ1ZmZlcikgew0KICB2YXIgcmVzID0gJyc7DQogIGlmIChidWZmZXIgJiYgYnVmZmVyLmxlbmd0aCkNCiAgICByZXMgPSB0aGlzLndyaXRlKGJ1ZmZlcik7DQoNCiAgaWYgKHRoaXMuY2hhclJlY2VpdmVkKSB7DQogICAgdmFyIGNyID0gdGhpcy5jaGFyUmVjZWl2ZWQ7DQogICAgdmFyIGJ1ZiA9IHRoaXMuY2hhckJ1ZmZlcjsNCiAgICB2YXIgZW5jID0gdGhpcy5lbmNvZGluZzsNCiAgICByZXMgKz0gYnVmLnNsaWNlKDAsIGNyKS50b1N0cmluZyhlbmMpOw0KICB9DQoNCiAgcmV0dXJuIHJlczsNCn07DQoNCmZ1bmN0aW9uIHBhc3NUaHJvdWdoV3JpdGUoYnVmZmVyKSB7DQogIHJldHVybiBidWZmZXIudG9TdHJpbmcodGhpcy5lbmNvZGluZyk7DQp9DQoNCmZ1bmN0aW9uIHV0ZjE2RGV0ZWN0SW5jb21wbGV0ZUNoYXIoYnVmZmVyKSB7DQogIHRoaXMuY2hhclJlY2VpdmVkID0gYnVmZmVyLmxlbmd0aCAlIDI7DQogIHRoaXMuY2hhckxlbmd0aCA9IHRoaXMuY2hhclJlY2VpdmVkID8gMiA6IDA7DQp9DQoNCmZ1bmN0aW9uIGJhc2U2NERldGVjdEluY29tcGxldGVDaGFyKGJ1ZmZlcikgew0KICB0aGlzLmNoYXJSZWNlaXZlZCA9IGJ1ZmZlci5sZW5ndGggJSAzOw0KICB0aGlzLmNoYXJMZW5ndGggPSB0aGlzLmNoYXJSZWNlaXZlZCA/IDMgOiAwOw0KfQ0KDQp9LHsiYnVmZmVyIjo5M31dLDU4MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQp2YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpDQoNCmZ1bmN0aW9uIFRmVHlwZUVycm9yICh0eXBlLCB2YWx1ZSkgew0KICB0aGlzLnRmRXJyb3IgPSBFcnJvci5jYWxsKHRoaXMpDQoNCiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEgJiYgdHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnKSB7DQogICAgdGhpcy5tZXNzYWdlID0gdHlwZQ0KICB9IGVsc2Ugew0KICAgIHRoaXMudGZUeXBlID0gdHlwZQ0KICAgIHRoaXMudGZWYWx1ZSA9IHZhbHVlDQoNCiAgICB2YXIgbWVzc2FnZQ0KICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCAnbWVzc2FnZScsIHsNCiAgICAgIGdldDogZnVuY3Rpb24gKCkgew0KICAgICAgICBpZiAobWVzc2FnZSkgcmV0dXJuIG1lc3NhZ2UNCiAgICAgICAgbWVzc2FnZSA9IHRmRXJyb3JTdHJpbmcodHlwZSwgdmFsdWUpDQoNCiAgICAgICAgcmV0dXJuIG1lc3NhZ2UNCiAgICAgIH0NCiAgICB9KQ0KICB9DQp9DQoNCmluaGVyaXRzKFRmVHlwZUVycm9yLCBFcnJvcikNCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShUZlR5cGVFcnJvciwgJ3N0YWNrJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMudGZFcnJvci5zdGFjayB9IH0pDQoNCmZ1bmN0aW9uIFRmUHJvcGVydHlUeXBlRXJyb3IgKHR5cGUsIHByb3BlcnR5LCB2YWx1ZSwgZXJyb3IpIHsNCiAgdGhpcy50ZkVycm9yID0gZXJyb3IgfHwgRXJyb3IuY2FsbCh0aGlzKQ0KICB0aGlzLnRmUHJvcGVydHkgPSBwcm9wZXJ0eQ0KICB0aGlzLnRmVHlwZSA9IHR5cGUNCiAgdGhpcy50ZlZhbHVlID0gdmFsdWUNCg0KICB2YXIgbWVzc2FnZQ0KICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ21lc3NhZ2UnLCB7DQogICAgZ2V0OiBmdW5jdGlvbiAoKSB7DQogICAgICBpZiAobWVzc2FnZSkgcmV0dXJuIG1lc3NhZ2UNCiAgICAgIGlmICh0eXBlKSB7DQogICAgICAgIG1lc3NhZ2UgPSB0ZlByb3BlcnR5RXJyb3JTdHJpbmcodHlwZSwgcHJvcGVydHksIHZhbHVlKQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgbWVzc2FnZSA9ICdVbmV4cGVjdGVkIHByb3BlcnR5ICInICsgcHJvcGVydHkgKyAnIicNCiAgICAgIH0NCg0KICAgICAgcmV0dXJuIG1lc3NhZ2UNCiAgICB9DQogIH0pDQp9DQoNCmluaGVyaXRzKFRmUHJvcGVydHlUeXBlRXJyb3IsIEVycm9yKQ0KT2JqZWN0LmRlZmluZVByb3BlcnR5KFRmUHJvcGVydHlUeXBlRXJyb3IsICdzdGFjaycsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLnRmRXJyb3Iuc3RhY2sgfSB9KQ0KDQpUZlByb3BlcnR5VHlwZUVycm9yLnByb3RvdHlwZS5hc0NoaWxkT2YgPSBmdW5jdGlvbiAocHJvcGVydHkpIHsNCiAgcmV0dXJuIG5ldyBUZlByb3BlcnR5VHlwZUVycm9yKHRoaXMudGZUeXBlLCBwcm9wZXJ0eSArICcuJyArIHRoaXMudGZQcm9wZXJ0eSwgdGhpcy50ZlZhbHVlLCB0aGlzLnRmRXJyb3IpDQp9DQoNCmZ1bmN0aW9uIGdldEZ1bmN0aW9uTmFtZSAoZm4pIHsNCiAgcmV0dXJuIGZuLm5hbWUgfHwgZm4udG9TdHJpbmcoKS5tYXRjaCgvZnVuY3Rpb24gKC4qPylccypcKC8pWzFdDQp9DQoNCmZ1bmN0aW9uIGdldFZhbHVlVHlwZU5hbWUgKHZhbHVlKSB7DQogIGlmIChuYXRpdmVUeXBlcy5OdWxsKHZhbHVlKSkgcmV0dXJuICcnDQoNCiAgcmV0dXJuIGdldEZ1bmN0aW9uTmFtZSh2YWx1ZS5jb25zdHJ1Y3RvcikNCn0NCg0KZnVuY3Rpb24gZ2V0VmFsdWUgKHZhbHVlKSB7DQogIGlmIChuYXRpdmVUeXBlcy5GdW5jdGlvbih2YWx1ZSkpIHJldHVybiAnJw0KICBpZiAobmF0aXZlVHlwZXMuU3RyaW5nKHZhbHVlKSkgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlKQ0KICBpZiAodmFsdWUgJiYgbmF0aXZlVHlwZXMuT2JqZWN0KHZhbHVlKSkgcmV0dXJuICcnDQoNCiAgcmV0dXJuIHZhbHVlDQp9DQoNCmZ1bmN0aW9uIHRmSlNPTiAodHlwZSkgew0KICBpZiAobmF0aXZlVHlwZXMuRnVuY3Rpb24odHlwZSkpIHJldHVybiB0eXBlLnRvSlNPTiA/IHR5cGUudG9KU09OKCkgOiBnZXRGdW5jdGlvbk5hbWUodHlwZSkNCiAgaWYgKG5hdGl2ZVR5cGVzLkFycmF5KHR5cGUpKSByZXR1cm4gJ0FycmF5Jw0KICBpZiAodHlwZSAmJiBuYXRpdmVUeXBlcy5PYmplY3QodHlwZSkpIHJldHVybiAnT2JqZWN0Jw0KDQogIHJldHVybiB0eXBlIHx8ICcnDQp9DQoNCmZ1bmN0aW9uIHN0ZkpTT04gKHR5cGUpIHsNCiAgdHlwZSA9IHRmSlNPTih0eXBlKQ0KDQogIHJldHVybiBuYXRpdmVUeXBlcy5PYmplY3QodHlwZSkgPyBKU09OLnN0cmluZ2lmeSh0eXBlKSA6IHR5cGUNCn0NCg0KZnVuY3Rpb24gdGZFcnJvclN0cmluZyAodHlwZSwgdmFsdWUpIHsNCiAgdmFyIHZhbHVlVHlwZU5hbWUgPSBnZXRWYWx1ZVR5cGVOYW1lKHZhbHVlKQ0KICB2YXIgdmFsdWVWYWx1ZSA9IGdldFZhbHVlKHZhbHVlKQ0KDQogIHJldHVybiAnRXhwZWN0ZWQgJyArIHN0ZkpTT04odHlwZSkgKyAnLCBnb3QnICsgKHZhbHVlVHlwZU5hbWUgIT09ICcnID8gJyAnICsgdmFsdWVUeXBlTmFtZSA6ICcnKSArICh2YWx1ZVZhbHVlICE9PSAnJyA/ICcgJyArIHZhbHVlVmFsdWUgOiAnJykNCn0NCg0KZnVuY3Rpb24gdGZQcm9wZXJ0eUVycm9yU3RyaW5nICh0eXBlLCBuYW1lLCB2YWx1ZSkgew0KICByZXR1cm4gdGZFcnJvclN0cmluZygncHJvcGVydHkgXCInICsgc3RmSlNPTihuYW1lKSArICdcIiBvZiB0eXBlICcgKyBzdGZKU09OKHR5cGUpLCB2YWx1ZSkNCn0NCg0KdmFyIG5hdGl2ZVR5cGVzID0gew0KICBBcnJheTogZnVuY3Rpb24gKHZhbHVlKSB7IHJldHVybiB2YWx1ZSAhPT0gbnVsbCAmJiB2YWx1ZSAhPT0gdW5kZWZpbmVkICYmIHZhbHVlLmNvbnN0cnVjdG9yID09PSBBcnJheSB9LA0KICBCb29sZWFuOiBmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nIH0sDQogIEJ1ZmZlcjogZnVuY3Rpb24gKHZhbHVlKSB7IHJldHVybiBCdWZmZXIuaXNCdWZmZXIodmFsdWUpIH0sDQogIEZ1bmN0aW9uOiBmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyB9LA0KICBOdWxsOiBmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwgfSwNCiAgTnVtYmVyOiBmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgfSwNCiAgT2JqZWN0OiBmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgfSwNCiAgU3RyaW5nOiBmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgfSwNCiAgJyc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRydWUgfQ0KfQ0KDQp2YXIgb3RoZXJUeXBlcyA9IHsNCiAgYXJyYXlPZjogZnVuY3Rpb24gYXJyYXlPZiAodHlwZSkgew0KICAgIGZ1bmN0aW9uIGFycmF5T2YgKHZhbHVlLCBzdHJpY3QpIHsNCiAgICAgIGlmICghbmF0aXZlVHlwZXMuQXJyYXkodmFsdWUpKSByZXR1cm4gZmFsc2UNCg0KICAgICAgcmV0dXJuIHZhbHVlLmV2ZXJ5KGZ1bmN0aW9uICh4KSB7DQogICAgICAgIHJldHVybiB0eXBlZm9yY2UodHlwZSwgeCwgc3RyaWN0LCBhcnJheU9mKQ0KICAgICAgfSkNCiAgICB9DQogICAgYXJyYXlPZi50b0pTT04gPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbdGZKU09OKHR5cGUpXSB9DQoNCiAgICByZXR1cm4gYXJyYXlPZg0KICB9LA0KDQogIG1heWJlOiBmdW5jdGlvbiBtYXliZSAodHlwZSkgew0KICAgIGZ1bmN0aW9uIG1heWJlICh2YWx1ZSwgc3RyaWN0KSB7DQogICAgICByZXR1cm4gbmF0aXZlVHlwZXMuTnVsbCh2YWx1ZSkgfHwgdHlwZWZvcmNlKHR5cGUsIHZhbHVlLCBzdHJpY3QsIG1heWJlKQ0KICAgIH0NCiAgICBtYXliZS50b0pTT04gPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnPycgKyBzdGZKU09OKHR5cGUpIH0NCg0KICAgIHJldHVybiBtYXliZQ0KICB9LA0KDQogIG9iamVjdDogZnVuY3Rpb24gb2JqZWN0ICh0eXBlKSB7DQogICAgZnVuY3Rpb24gb2JqZWN0ICh2YWx1ZSwgc3RyaWN0KSB7DQogICAgICBpZiAoIW5hdGl2ZVR5cGVzLk9iamVjdCh2YWx1ZSkpIHJldHVybiBmYWxzZQ0KICAgICAgaWYgKG5hdGl2ZVR5cGVzLk51bGwodmFsdWUpKSByZXR1cm4gZmFsc2UNCg0KICAgICAgdmFyIHByb3BlcnR5TmFtZQ0KDQogICAgICB0cnkgew0KICAgICAgICBmb3IgKHByb3BlcnR5TmFtZSBpbiB0eXBlKSB7DQogICAgICAgICAgdmFyIHByb3BlcnR5VHlwZSA9IHR5cGVbcHJvcGVydHlOYW1lXQ0KICAgICAgICAgIHZhciBwcm9wZXJ0eVZhbHVlID0gdmFsdWVbcHJvcGVydHlOYW1lXQ0KDQogICAgICAgICAgdHlwZWZvcmNlKHByb3BlcnR5VHlwZSwgcHJvcGVydHlWYWx1ZSwgc3RyaWN0KQ0KICAgICAgICB9DQogICAgICB9IGNhdGNoIChlKSB7DQogICAgICAgIGlmIChlIGluc3RhbmNlb2YgVGZQcm9wZXJ0eVR5cGVFcnJvcikgew0KICAgICAgICAgIHRocm93IGUuYXNDaGlsZE9mKHByb3BlcnR5TmFtZSkNCiAgICAgICAgfSBlbHNlIGlmIChlIGluc3RhbmNlb2YgVGZUeXBlRXJyb3IpIHsNCiAgICAgICAgICB0aHJvdyBuZXcgVGZQcm9wZXJ0eVR5cGVFcnJvcihlLnRmVHlwZSwgcHJvcGVydHlOYW1lLCBlLnRmVmFsdWUsIGUudGZFcnJvcikNCiAgICAgICAgfQ0KDQogICAgICAgIHRocm93IGUNCiAgICAgIH0NCg0KICAgICAgaWYgKHN0cmljdCkgew0KICAgICAgICBmb3IgKHByb3BlcnR5TmFtZSBpbiB2YWx1ZSkgew0KICAgICAgICAgIGlmICh0eXBlW3Byb3BlcnR5TmFtZV0pIGNvbnRpbnVlDQoNCiAgICAgICAgICB0aHJvdyBuZXcgVGZQcm9wZXJ0eVR5cGVFcnJvcih1bmRlZmluZWQsIHByb3BlcnR5TmFtZSkNCiAgICAgICAgfQ0KICAgICAgfQ0KDQogICAgICByZXR1cm4gdHJ1ZQ0KICAgIH0NCiAgICBvYmplY3QudG9KU09OID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGZKU09OKHR5cGUpIH0NCg0KICAgIHJldHVybiBvYmplY3QNCiAgfSwNCg0KICBtYXA6IGZ1bmN0aW9uIG1hcCAocHJvcGVydHlUeXBlLCBwcm9wZXJ0eUtleVR5cGUpIHsNCiAgICBmdW5jdGlvbiBtYXAgKHZhbHVlLCBzdHJpY3QpIHsNCiAgICAgIHR5cGVmb3JjZShuYXRpdmVUeXBlcy5PYmplY3QsIHZhbHVlLCBzdHJpY3QpDQogICAgICBpZiAobmF0aXZlVHlwZXMuTnVsbCh2YWx1ZSkpIHJldHVybiBmYWxzZQ0KDQogICAgICB2YXIgcHJvcGVydHlOYW1lDQoNCiAgICAgIHRyeSB7DQogICAgICAgIGZvciAocHJvcGVydHlOYW1lIGluIHZhbHVlKSB7DQogICAgICAgICAgaWYgKHByb3BlcnR5S2V5VHlwZSkgew0KICAgICAgICAgICAgdHlwZWZvcmNlKHByb3BlcnR5S2V5VHlwZSwgcHJvcGVydHlOYW1lLCBzdHJpY3QpDQogICAgICAgICAgfQ0KDQogICAgICAgICAgdmFyIHByb3BlcnR5VmFsdWUgPSB2YWx1ZVtwcm9wZXJ0eU5hbWVdDQogICAgICAgICAgdHlwZWZvcmNlKHByb3BlcnR5VHlwZSwgcHJvcGVydHlWYWx1ZSwgc3RyaWN0KQ0KICAgICAgICB9DQogICAgICB9IGNhdGNoIChlKSB7DQogICAgICAgIGlmIChlIGluc3RhbmNlb2YgVGZQcm9wZXJ0eVR5cGVFcnJvcikgew0KICAgICAgICAgIHRocm93IGUuYXNDaGlsZE9mKHByb3BlcnR5TmFtZSkNCiAgICAgICAgfSBlbHNlIGlmIChlIGluc3RhbmNlb2YgVGZUeXBlRXJyb3IpIHsNCiAgICAgICAgICB0aHJvdyBuZXcgVGZQcm9wZXJ0eVR5cGVFcnJvcihlLnRmVHlwZSwgcHJvcGVydHlLZXlUeXBlIHx8IHByb3BlcnR5TmFtZSwgZS50ZlZhbHVlKQ0KICAgICAgICB9DQoNCiAgICAgICAgdGhyb3cgZQ0KICAgICAgfQ0KDQogICAgICByZXR1cm4gdHJ1ZQ0KICAgIH0NCg0KICAgIGlmIChwcm9wZXJ0eUtleVR5cGUpIHsNCiAgICAgIG1hcC50b0pTT04gPSBmdW5jdGlvbiAoKSB7IHJldHVybiAneycgKyBzdGZKU09OKHByb3BlcnR5S2V5VHlwZSkgKyAnOiAnICsgc3RmSlNPTihwcm9wZXJ0eVR5cGUpICsgJ30nIH0NCiAgICB9IGVsc2Ugew0KICAgICAgbWFwLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICd7JyArIHN0ZkpTT04ocHJvcGVydHlUeXBlKSArICd9JyB9DQogICAgfQ0KDQogICAgcmV0dXJuIG1hcA0KICB9LA0KDQogIG9uZU9mOiBmdW5jdGlvbiBvbmVPZiAoKSB7DQogICAgdmFyIHR5cGVzID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMpDQoNCiAgICBmdW5jdGlvbiBvbmVPZiAodmFsdWUsIHN0cmljdCkgew0KICAgICAgcmV0dXJuIHR5cGVzLnNvbWUoZnVuY3Rpb24gKHR5cGUpIHsNCiAgICAgICAgdHJ5IHsNCiAgICAgICAgICByZXR1cm4gdHlwZWZvcmNlKHR5cGUsIHZhbHVlLCBzdHJpY3QpDQogICAgICAgIH0gY2F0Y2ggKGUpIHsNCiAgICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIFRmVHlwZUVycm9yIHx8IGUgaW5zdGFuY2VvZiBUZlByb3BlcnR5VHlwZUVycm9yKSByZXR1cm4gZmFsc2UNCg0KICAgICAgICAgIHRocm93IGUNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9DQogICAgb25lT2YudG9KU09OID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdHlwZXMubWFwKHN0ZkpTT04pLmpvaW4oJ3wnKSB9DQoNCiAgICByZXR1cm4gb25lT2YNCiAgfSwNCg0KICBxdWFja3NMaWtlOiBmdW5jdGlvbiBxdWFja3NMaWtlICh0eXBlKSB7DQogICAgZnVuY3Rpb24gcXVhY2tzTGlrZSAodmFsdWUpIHsNCiAgICAgIHJldHVybiB0eXBlID09PSBnZXRWYWx1ZVR5cGVOYW1lKHZhbHVlKQ0KICAgIH0NCiAgICBxdWFja3NMaWtlLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHR5cGUgfQ0KDQogICAgcmV0dXJuIHF1YWNrc0xpa2UNCiAgfSwNCg0KICB0dXBsZTogZnVuY3Rpb24gdHVwbGUgKCkgew0KICAgIHZhciB0eXBlcyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKQ0KDQogICAgZnVuY3Rpb24gdHVwbGUgKHZhbHVlLCBzdHJpY3QpIHsNCiAgICAgIHJldHVybiB0eXBlcy5ldmVyeShmdW5jdGlvbiAodHlwZSwgaSkgew0KICAgICAgICByZXR1cm4gdHlwZWZvcmNlKHR5cGUsIHZhbHVlW2ldLCBzdHJpY3QpDQogICAgICB9KQ0KICAgIH0NCiAgICB0dXBsZS50b0pTT04gPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnKCcgKyB0eXBlcy5tYXAoc3RmSlNPTikuam9pbignLCAnKSArICcpJyB9DQoNCiAgICByZXR1cm4gdHVwbGUNCiAgfSwNCg0KICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUgKGV4cGVjdGVkKSB7DQogICAgZnVuY3Rpb24gdmFsdWUgKGFjdHVhbCkgew0KICAgICAgcmV0dXJuIGFjdHVhbCA9PT0gZXhwZWN0ZWQNCiAgICB9DQogICAgdmFsdWUudG9KU09OID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gZXhwZWN0ZWQgfQ0KDQogICAgcmV0dXJuIHZhbHVlDQogIH0NCn0NCg0KZnVuY3Rpb24gY29tcGlsZSAodHlwZSkgew0KICBpZiAobmF0aXZlVHlwZXMuU3RyaW5nKHR5cGUpKSB7DQogICAgaWYgKHR5cGVbMF0gPT09ICc/JykgcmV0dXJuIG90aGVyVHlwZXMubWF5YmUoY29tcGlsZSh0eXBlLnNsaWNlKDEpKSkNCg0KICAgIHJldHVybiBuYXRpdmVUeXBlc1t0eXBlXSB8fCBvdGhlclR5cGVzLnF1YWNrc0xpa2UodHlwZSkNCiAgfSBlbHNlIGlmICh0eXBlICYmIG5hdGl2ZVR5cGVzLk9iamVjdCh0eXBlKSkgew0KICAgIGlmIChuYXRpdmVUeXBlcy5BcnJheSh0eXBlKSkgcmV0dXJuIG90aGVyVHlwZXMuYXJyYXlPZihjb21waWxlKHR5cGVbMF0pKQ0KDQogICAgdmFyIGNvbXBpbGVkID0ge30NCg0KICAgIGZvciAodmFyIHByb3BlcnR5TmFtZSBpbiB0eXBlKSB7DQogICAgICBjb21waWxlZFtwcm9wZXJ0eU5hbWVdID0gY29tcGlsZSh0eXBlW3Byb3BlcnR5TmFtZV0pDQogICAgfQ0KDQogICAgcmV0dXJuIG90aGVyVHlwZXMub2JqZWN0KGNvbXBpbGVkKQ0KICB9IGVsc2UgaWYgKG5hdGl2ZVR5cGVzLkZ1bmN0aW9uKHR5cGUpKSB7DQogICAgcmV0dXJuIHR5cGUNCiAgfQ0KDQogIHJldHVybiBvdGhlclR5cGVzLnZhbHVlKHR5cGUpDQp9DQoNCmZ1bmN0aW9uIHR5cGVmb3JjZSAodHlwZSwgdmFsdWUsIHN0cmljdCwgc3Vycm9nYXRlKSB7DQogIGlmIChuYXRpdmVUeXBlcy5GdW5jdGlvbih0eXBlKSkgew0KICAgIGlmICh0eXBlKHZhbHVlLCBzdHJpY3QpKSByZXR1cm4gdHJ1ZQ0KDQogICAgdGhyb3cgbmV3IFRmVHlwZUVycm9yKHN1cnJvZ2F0ZSB8fCB0eXBlLCB2YWx1ZSkNCiAgfQ0KDQogIC8vIEpJVA0KICByZXR1cm4gdHlwZWZvcmNlKGNvbXBpbGUodHlwZSksIHZhbHVlLCBzdHJpY3QpDQp9DQoNCi8vIGFzc2lnbiBhbGwgdHlwZXMgdG8gdHlwZWZvcmNlIGZ1bmN0aW9uDQp2YXIgdHlwZU5hbWUNCk9iamVjdC5rZXlzKG5hdGl2ZVR5cGVzKS5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlTmFtZSkgew0KICB2YXIgbmF0aXZlVHlwZSA9IG5hdGl2ZVR5cGVzW3R5cGVOYW1lXQ0KICBuYXRpdmVUeXBlLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHR5cGVOYW1lIH0NCg0KICB0eXBlZm9yY2VbdHlwZU5hbWVdID0gbmF0aXZlVHlwZQ0KfSkNCg0KZm9yICh0eXBlTmFtZSBpbiBvdGhlclR5cGVzKSB7DQogIHR5cGVmb3JjZVt0eXBlTmFtZV0gPSBvdGhlclR5cGVzW3R5cGVOYW1lXQ0KfQ0KDQptb2R1bGUuZXhwb3J0cyA9IHR5cGVmb3JjZQ0KbW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGUNCg0KLy8gZXhwb3J0IEVycm9yIG9iamVjdHMNCm1vZHVsZS5leHBvcnRzLlRmVHlwZUVycm9yID0gVGZUeXBlRXJyb3INCm1vZHVsZS5leHBvcnRzLlRmUHJvcGVydHlUeXBlRXJyb3IgPSBUZlByb3BlcnR5VHlwZUVycm9yDQoNCn0pLmNhbGwodGhpcyx7ImlzQnVmZmVyIjpyZXF1aXJlKCIuLi9pcy1idWZmZXIvaW5kZXguanMiKX0pDQp9LHsiLi4vaXMtYnVmZmVyL2luZGV4LmpzIjo1MzgsImluaGVyaXRzIjo1Mzd9XSw1ODM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHsNCiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgew0KICAgIGRlZmluZShbJ2V4cG9ydHMnLCAnbW9kdWxlJ10sIGZhY3RvcnkpOw0KICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykgew0KICAgIGZhY3RvcnkoZXhwb3J0cywgbW9kdWxlKTsNCiAgfSBlbHNlIHsNCiAgICB2YXIgbW9kID0gew0KICAgICAgZXhwb3J0czoge30NCiAgICB9Ow0KICAgIGZhY3RvcnkobW9kLmV4cG9ydHMsIG1vZCk7DQogICAgZ2xvYmFsLmluZGV4ID0gbW9kLmV4cG9ydHM7DQogIH0NCn0pKHRoaXMsIGZ1bmN0aW9uIChleHBvcnRzLCBtb2R1bGUpIHsNCiAgJ3VzZSBzdHJpY3QnOw0KDQogIHZhciBsb2NhbFN0b3JhZ2UgPSB1bmRlZmluZWQ7DQogIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgew0KICAgIHZhciBMb2NhbFN0b3JhZ2UgPSByZXF1aXJlKCdub2RlLWxvY2Fsc3RvcmFnZScpLkxvY2FsU3RvcmFnZTsNCiAgICBsb2NhbFN0b3JhZ2UgPSBuZXcgTG9jYWxTdG9yYWdlKCcuL3Vscy1zY3JhdGNoJyk7DQogIH0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdy5sb2NhbFN0b3JhZ2UgPT09ICd1bmRlZmluZWQnIHx8IHR5cGVvZiB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UgPT09ICd1bmRlZmluZWQnKSB7DQogICAgbG9jYWxTdG9yYWdlID0gcmVxdWlyZSgnLi9yZW0tbG9jYWxzdG9yYWdlJyk7DQogIH0gZWxzZSB7DQogICAgbG9jYWxTdG9yYWdlID0gd2luZG93LmxvY2FsU3RvcmFnZTsNCiAgfQ0KICBtb2R1bGUuZXhwb3J0cyA9IGxvY2FsU3RvcmFnZTsNCn0pOw0KfSx7Ii4vcmVtLWxvY2Fsc3RvcmFnZSI6NTg0LCJub2RlLWxvY2Fsc3RvcmFnZSI6NTQzfV0sNTg0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7DQogIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsNCiAgICBkZWZpbmUoWydleHBvcnRzJ10sIGZhY3RvcnkpOw0KICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSAndW5kZWZpbmVkJykgew0KICAgIGZhY3RvcnkoZXhwb3J0cyk7DQogIH0gZWxzZSB7DQogICAgdmFyIG1vZCA9IHsNCiAgICAgIGV4cG9ydHM6IHt9DQogICAgfTsNCiAgICBmYWN0b3J5KG1vZC5leHBvcnRzKTsNCiAgICBnbG9iYWwucmVtTG9jYWxzdG9yYWdlID0gbW9kLmV4cG9ydHM7DQogIH0NCn0pKHRoaXMsIGZ1bmN0aW9uIChleHBvcnRzKSB7DQogIC8vIEJ5IFJlbXkgU2hhcnAgaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vcmVteS8zNTA0MzMNCiAgJ3VzZSBzdHJpY3QnOw0KDQogIGlmICh0eXBlb2Ygd2luZG93LmxvY2FsU3RvcmFnZSA9PSAndW5kZWZpbmVkJyB8fCB0eXBlb2Ygd2luZG93LnNlc3Npb25TdG9yYWdlID09ICd1bmRlZmluZWQnKSAoZnVuY3Rpb24gKCkgew0KDQogICAgdmFyIFN0b3JhZ2UgPSBmdW5jdGlvbiBTdG9yYWdlKHR5cGUpIHsNCiAgICAgIGZ1bmN0aW9uIGNyZWF0ZUNvb2tpZShuYW1lLCB2YWx1ZSwgZGF5cykgew0KICAgICAgICB2YXIgZGF0ZSwgZXhwaXJlczsNCg0KICAgICAgICBpZiAoZGF5cykgew0KICAgICAgICAgIGRhdGUgPSBuZXcgRGF0ZSgpOw0KICAgICAgICAgIGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArIGRheXMgKiAyNCAqIDYwICogNjAgKiAxMDAwKTsNCiAgICAgICAgICBleHBpcmVzID0gJzsgZXhwaXJlcz0nICsgZGF0ZS50b0dNVFN0cmluZygpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGV4cGlyZXMgPSAnJzsNCiAgICAgICAgfQ0KICAgICAgICBkb2N1bWVudC5jb29raWUgPSBuYW1lICsgJz0nICsgdmFsdWUgKyBleHBpcmVzICsgJzsgcGF0aD0vJzsNCiAgICAgIH0NCg0KICAgICAgZnVuY3Rpb24gcmVhZENvb2tpZShuYW1lKSB7DQogICAgICAgIHZhciBuYW1lRVEgPSBuYW1lICsgJz0nLA0KICAgICAgICAgICAgY2EgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsnKSwNCiAgICAgICAgICAgIGksDQogICAgICAgICAgICBjOw0KDQogICAgICAgIGZvciAoaSA9IDA7IGkgPCBjYS5sZW5ndGg7IGkrKykgew0KICAgICAgICAgIGMgPSBjYVtpXTsNCiAgICAgICAgICB3aGlsZSAoYy5jaGFyQXQoMCkgPT0gJyAnKSB7DQogICAgICAgICAgICBjID0gYy5zdWJzdHJpbmcoMSwgYy5sZW5ndGgpOw0KICAgICAgICAgIH0NCg0KICAgICAgICAgIGlmIChjLmluZGV4T2YobmFtZUVRKSA9PSAwKSB7DQogICAgICAgICAgICByZXR1cm4gYy5zdWJzdHJpbmcobmFtZUVRLmxlbmd0aCwgYy5sZW5ndGgpOw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgIH0NCg0KICAgICAgZnVuY3Rpb24gc2V0RGF0YShkYXRhKSB7DQogICAgICAgIGRhdGEgPSBKU09OLnN0cmluZ2lmeShkYXRhKTsNCiAgICAgICAgaWYgKHR5cGUgPT0gJ3Nlc3Npb24nKSB7DQogICAgICAgICAgd2luZG93Lm5hbWUgPSBkYXRhOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGNyZWF0ZUNvb2tpZSgnbG9jYWxTdG9yYWdlJywgZGF0YSwgMzY1KTsNCiAgICAgICAgfQ0KICAgICAgfQ0KDQogICAgICBmdW5jdGlvbiBjbGVhckRhdGEoKSB7DQogICAgICAgIGlmICh0eXBlID09ICdzZXNzaW9uJykgew0KICAgICAgICAgIHdpbmRvdy5uYW1lID0gJyc7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgY3JlYXRlQ29va2llKCdsb2NhbFN0b3JhZ2UnLCAnJywgMzY1KTsNCiAgICAgICAgfQ0KICAgICAgfQ0KDQogICAgICBmdW5jdGlvbiBnZXREYXRhKCkgew0KICAgICAgICB2YXIgZGF0YSA9IHR5cGUgPT0gJ3Nlc3Npb24nID8gd2luZG93Lm5hbWUgOiByZWFkQ29va2llKCdsb2NhbFN0b3JhZ2UnKTsNCiAgICAgICAgcmV0dXJuIGRhdGEgPyBKU09OLnBhcnNlKGRhdGEpIDoge307DQogICAgICB9DQoNCiAgICAgIC8vIGluaXRpYWxpc2UgaWYgdGhlcmUncyBhbHJlYWR5IGRhdGENCiAgICAgIHZhciBkYXRhID0gZ2V0RGF0YSgpOw0KDQogICAgICByZXR1cm4gew0KICAgICAgICBsZW5ndGg6IDAsDQogICAgICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHsNCiAgICAgICAgICBkYXRhID0ge307DQogICAgICAgICAgdGhpcy5sZW5ndGggPSAwOw0KICAgICAgICAgIGNsZWFyRGF0YSgpOw0KICAgICAgICB9LA0KICAgICAgICBnZXRJdGVtOiBmdW5jdGlvbiBnZXRJdGVtKGtleSkgew0KICAgICAgICAgIHJldHVybiBkYXRhW2tleV0gPT09IHVuZGVmaW5lZCA/IG51bGwgOiBkYXRhW2tleV07DQogICAgICAgIH0sDQogICAgICAgIGtleTogZnVuY3Rpb24ga2V5KGkpIHsNCiAgICAgICAgICAvLyBub3QgcGVyZmVjdCwgYnV0IHdvcmtzDQogICAgICAgICAgdmFyIGN0ciA9IDA7DQogICAgICAgICAgZm9yICh2YXIgayBpbiBkYXRhKSB7DQogICAgICAgICAgICBpZiAoY3RyID09IGkpIHJldHVybiBrO2Vsc2UgY3RyKys7DQogICAgICAgICAgfQ0KICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICB9LA0KICAgICAgICByZW1vdmVJdGVtOiBmdW5jdGlvbiByZW1vdmVJdGVtKGtleSkgew0KICAgICAgICAgIGRlbGV0ZSBkYXRhW2tleV07DQogICAgICAgICAgdGhpcy5sZW5ndGgtLTsNCiAgICAgICAgICBzZXREYXRhKGRhdGEpOw0KICAgICAgICB9LA0KICAgICAgICBzZXRJdGVtOiBmdW5jdGlvbiBzZXRJdGVtKGtleSwgdmFsdWUpIHsNCiAgICAgICAgICBkYXRhW2tleV0gPSB2YWx1ZSArICcnOyAvLyBmb3JjZXMgdGhlIHZhbHVlIHRvIGEgc3RyaW5nDQogICAgICAgICAgdGhpcy5sZW5ndGgrKzsNCiAgICAgICAgICBzZXREYXRhKGRhdGEpOw0KICAgICAgICB9DQogICAgICB9Ow0KICAgIH07DQoNCiAgICBpZiAodHlwZW9mIHdpbmRvdy5sb2NhbFN0b3JhZ2UgPT0gJ3VuZGVmaW5lZCcpIHdpbmRvdy5sb2NhbFN0b3JhZ2UgPSBuZXcgU3RvcmFnZSgnbG9jYWwnKTsNCiAgICBpZiAodHlwZW9mIHdpbmRvdy5zZXNzaW9uU3RvcmFnZSA9PSAndW5kZWZpbmVkJykgd2luZG93LnNlc3Npb25TdG9yYWdlID0gbmV3IFN0b3JhZ2UoJ3Nlc3Npb24nKTsNCiAgfSkoKTsNCn0pOw0KfSx7fV0sNTg1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCihmdW5jdGlvbiAocm9vdCkgew0KICAgInVzZSBzdHJpY3QiOw0KDQovKioqKiogdW5vcm0uanMgKioqKiovDQoNCi8qDQogKiBVbmljb2RlTm9ybWFsaXplciAxLjAuMA0KICogQ29weXJpZ2h0IChjKSAyMDA4IE1hdHN1emENCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCAoTUlULUxJQ0VOU0UudHh0KSBhbmQgR1BMIChHUEwtTElDRU5TRS50eHQpIGxpY2Vuc2VzLg0KICogJERhdGU6IDIwMDgtMDYtMDUgMTY6NDQ6MTcgKzAyMDAgKFRodSwgMDUgSnVuIDIwMDgpICQNCiAqICRSZXY6IDEzMzA5ICQNCiAqLw0KDQogICB2YXIgREVGQVVMVF9GRUFUVVJFID0gW251bGwsIDAsIHt9XTsNCiAgIHZhciBDQUNIRV9USFJFU0hPTEQgPSAxMDsNCiAgIHZhciBTQmFzZSA9IDB4QUMwMCwgTEJhc2UgPSAweDExMDAsIFZCYXNlID0gMHgxMTYxLCBUQmFzZSA9IDB4MTFBNywgTENvdW50ID0gMTksIFZDb3VudCA9IDIxLCBUQ291bnQgPSAyODsNCiAgIHZhciBOQ291bnQgPSBWQ291bnQgKiBUQ291bnQ7IC8vIDU4OA0KICAgdmFyIFNDb3VudCA9IExDb3VudCAqIE5Db3VudDsgLy8gMTExNzINCg0KICAgdmFyIFVDaGFyID0gZnVuY3Rpb24oY3AsIGZlYXR1cmUpew0KICAgICAgdGhpcy5jb2RlcG9pbnQgPSBjcDsNCiAgICAgIHRoaXMuZmVhdHVyZSA9IGZlYXR1cmU7DQogICB9Ow0KDQogICAvLyBTdHJhdGVnaWVzDQogICB2YXIgY2FjaGUgPSB7fTsNCiAgIHZhciBjYWNoZUNvdW50ZXIgPSBbXTsNCiAgIGZvciAodmFyIGkgPSAwOyBpIDw9IDB4RkY7ICsraSl7DQogICAgICBjYWNoZUNvdW50ZXJbaV0gPSAwOw0KICAgfQ0KDQogICBmdW5jdGlvbiBmcm9tQ2FjaGUobmV4dCwgY3AsIG5lZWRGZWF0dXJlKXsNCiAgICAgIHZhciByZXQgPSBjYWNoZVtjcF07DQogICAgICBpZighcmV0KXsNCiAgICAgICAgIHJldCA9IG5leHQoY3AsIG5lZWRGZWF0dXJlKTsNCiAgICAgICAgIGlmKCEhcmV0LmZlYXR1cmUgJiYgKytjYWNoZUNvdW50ZXJbKGNwID4+IDgpICYgMHhGRl0gPiBDQUNIRV9USFJFU0hPTEQpew0KICAgICAgICAgICAgY2FjaGVbY3BdID0gcmV0Ow0KICAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgcmV0dXJuIHJldDsNCiAgIH0NCg0KICAgZnVuY3Rpb24gZnJvbURhdGEobmV4dCwgY3AsIG5lZWRGZWF0dXJlKXsNCiAgICAgIHZhciBoYXNoID0gY3AgJiAweEZGMDA7DQogICAgICB2YXIgZHVuaXQgPSBVQ2hhci51ZGF0YVtoYXNoXSB8fCB7fTsNCiAgICAgIHZhciBmID0gZHVuaXRbY3BdOw0KICAgICAgcmV0dXJuIGYgPyBuZXcgVUNoYXIoY3AsIGYpIDogbmV3IFVDaGFyKGNwLCBERUZBVUxUX0ZFQVRVUkUpOw0KICAgfQ0KICAgZnVuY3Rpb24gZnJvbUNwT25seShuZXh0LCBjcCwgbmVlZEZlYXR1cmUpew0KICAgICAgcmV0dXJuICEhbmVlZEZlYXR1cmUgPyBuZXh0KGNwLCBuZWVkRmVhdHVyZSkgOiBuZXcgVUNoYXIoY3AsIG51bGwpOw0KICAgfQ0KICAgZnVuY3Rpb24gZnJvbVJ1bGVCYXNlZEphbW8obmV4dCwgY3AsIG5lZWRGZWF0dXJlKXsNCiAgICAgIHZhciBqOw0KICAgICAgaWYoY3AgPCBMQmFzZSB8fCAoTEJhc2UgKyBMQ291bnQgPD0gY3AgJiYgY3AgPCBTQmFzZSkgfHwgKFNCYXNlICsgU0NvdW50IDwgY3ApKXsNCiAgICAgICAgIHJldHVybiBuZXh0KGNwLCBuZWVkRmVhdHVyZSk7DQogICAgICB9DQogICAgICBpZihMQmFzZSA8PSBjcCAmJiBjcCA8IExCYXNlICsgTENvdW50KXsNCiAgICAgICAgIHZhciBjID0ge307DQogICAgICAgICB2YXIgYmFzZSA9IChjcCAtIExCYXNlKSAqIFZDb3VudDsNCiAgICAgICAgIGZvciAoaiA9IDA7IGogPCBWQ291bnQ7ICsrail7DQogICAgICAgICAgICBjW1ZCYXNlICsgal0gPSBTQmFzZSArIFRDb3VudCAqIChqICsgYmFzZSk7DQogICAgICAgICB9DQogICAgICAgICByZXR1cm4gbmV3IFVDaGFyKGNwLCBbLCxjXSk7DQogICAgICB9DQoNCiAgICAgIHZhciBTSW5kZXggPSBjcCAtIFNCYXNlOw0KICAgICAgdmFyIFRJbmRleCA9IFNJbmRleCAlIFRDb3VudDsNCiAgICAgIHZhciBmZWF0dXJlID0gW107DQogICAgICBpZihUSW5kZXggIT09IDApew0KICAgICAgICAgZmVhdHVyZVswXSA9IFtTQmFzZSArIFNJbmRleCAtIFRJbmRleCwgVEJhc2UgKyBUSW5kZXhdOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgIGZlYXR1cmVbMF0gPSBbTEJhc2UgKyBNYXRoLmZsb29yKFNJbmRleCAvIE5Db3VudCksIFZCYXNlICsgTWF0aC5mbG9vcigoU0luZGV4ICUgTkNvdW50KSAvIFRDb3VudCldOw0KICAgICAgICAgZmVhdHVyZVsyXSA9IHt9Ow0KICAgICAgICAgZm9yIChqID0gMTsgaiA8IFRDb3VudDsgKytqKXsNCiAgICAgICAgICAgIGZlYXR1cmVbMl1bVEJhc2UgKyBqXSA9IGNwICsgajsNCiAgICAgICAgIH0NCiAgICAgIH0NCiAgICAgIHJldHVybiBuZXcgVUNoYXIoY3AsIGZlYXR1cmUpOw0KICAgfQ0KICAgZnVuY3Rpb24gZnJvbUNwRmlsdGVyKG5leHQsIGNwLCBuZWVkRmVhdHVyZSl7DQogICAgICByZXR1cm4gY3AgPCA2MCB8fCAxMzMxMSA8IGNwICYmIGNwIDwgNDI2MDcgPyBuZXcgVUNoYXIoY3AsIERFRkFVTFRfRkVBVFVSRSkgOiBuZXh0KGNwLCBuZWVkRmVhdHVyZSk7DQogICB9DQoNCiAgIHZhciBzdHJhdGVnaWVzID0gW2Zyb21DcEZpbHRlciwgZnJvbUNhY2hlLCBmcm9tQ3BPbmx5LCBmcm9tUnVsZUJhc2VkSmFtbywgZnJvbURhdGFdOw0KDQogICBVQ2hhci5mcm9tQ2hhckNvZGUgPSBzdHJhdGVnaWVzLnJlZHVjZVJpZ2h0KGZ1bmN0aW9uIChuZXh0LCBzdHJhdGVneSkgew0KICAgICAgcmV0dXJuIGZ1bmN0aW9uIChjcCwgbmVlZEZlYXR1cmUpIHsNCiAgICAgICAgIHJldHVybiBzdHJhdGVneShuZXh0LCBjcCwgbmVlZEZlYXR1cmUpOw0KICAgICAgfTsNCiAgIH0sIG51bGwpOw0KDQogICBVQ2hhci5pc0hpZ2hTdXJyb2dhdGUgPSBmdW5jdGlvbihjcCl7DQogICAgICByZXR1cm4gY3AgPj0gMHhEODAwICYmIGNwIDw9IDB4REJGRjsNCiAgIH07DQogICBVQ2hhci5pc0xvd1N1cnJvZ2F0ZSA9IGZ1bmN0aW9uKGNwKXsNCiAgICAgIHJldHVybiBjcCA+PSAweERDMDAgJiYgY3AgPD0gMHhERkZGOw0KICAgfTsNCg0KICAgVUNoYXIucHJvdG90eXBlLnByZXBGZWF0dXJlID0gZnVuY3Rpb24oKXsNCiAgICAgIGlmKCF0aGlzLmZlYXR1cmUpew0KICAgICAgICAgdGhpcy5mZWF0dXJlID0gVUNoYXIuZnJvbUNoYXJDb2RlKHRoaXMuY29kZXBvaW50LCB0cnVlKS5mZWF0dXJlOw0KICAgICAgfQ0KICAgfTsNCg0KICAgVUNoYXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKXsNCiAgICAgIGlmKHRoaXMuY29kZXBvaW50IDwgMHgxMDAwMCl7DQogICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZSh0aGlzLmNvZGVwb2ludCk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICAgdmFyIHggPSB0aGlzLmNvZGVwb2ludCAtIDB4MTAwMDA7DQogICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShNYXRoLmZsb29yKHggLyAweDQwMCkgKyAweEQ4MDAsIHggJSAweDQwMCArIDB4REMwMCk7DQogICAgICB9DQogICB9Ow0KDQogICBVQ2hhci5wcm90b3R5cGUuZ2V0RGVjb21wID0gZnVuY3Rpb24oKXsNCiAgICAgIHRoaXMucHJlcEZlYXR1cmUoKTsNCiAgICAgIHJldHVybiB0aGlzLmZlYXR1cmVbMF0gfHwgbnVsbDsNCiAgIH07DQoNCiAgIFVDaGFyLnByb3RvdHlwZS5pc0NvbXBhdGliaWxpdHkgPSBmdW5jdGlvbigpew0KICAgICAgdGhpcy5wcmVwRmVhdHVyZSgpOw0KICAgICAgcmV0dXJuICEhdGhpcy5mZWF0dXJlWzFdICYmICh0aGlzLmZlYXR1cmVbMV0gJiAoMSA8PCA4KSk7DQogICB9Ow0KICAgVUNoYXIucHJvdG90eXBlLmlzRXhjbHVkZSA9IGZ1bmN0aW9uKCl7DQogICAgICB0aGlzLnByZXBGZWF0dXJlKCk7DQogICAgICByZXR1cm4gISF0aGlzLmZlYXR1cmVbMV0gJiYgKHRoaXMuZmVhdHVyZVsxXSAmICgxIDw8IDkpKTsNCiAgIH07DQogICBVQ2hhci5wcm90b3R5cGUuZ2V0Q2Fub25pY2FsQ2xhc3MgPSBmdW5jdGlvbigpew0KICAgICAgdGhpcy5wcmVwRmVhdHVyZSgpOw0KICAgICAgcmV0dXJuICEhdGhpcy5mZWF0dXJlWzFdID8gKHRoaXMuZmVhdHVyZVsxXSAmIDB4ZmYpIDogMDsNCiAgIH07DQogICBVQ2hhci5wcm90b3R5cGUuZ2V0Q29tcG9zaXRlID0gZnVuY3Rpb24oZm9sbG93aW5nKXsNCiAgICAgIHRoaXMucHJlcEZlYXR1cmUoKTsNCiAgICAgIGlmKCF0aGlzLmZlYXR1cmVbMl0pew0KICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICB9DQogICAgICB2YXIgY3AgPSB0aGlzLmZlYXR1cmVbMl1bZm9sbG93aW5nLmNvZGVwb2ludF07DQogICAgICByZXR1cm4gY3AgPyBVQ2hhci5mcm9tQ2hhckNvZGUoY3ApIDogbnVsbDsNCiAgIH07DQoNCiAgIHZhciBVQ2hhckl0ZXJhdG9yID0gZnVuY3Rpb24oc3RyKXsNCiAgICAgIHRoaXMuc3RyID0gc3RyOw0KICAgICAgdGhpcy5jdXJzb3IgPSAwOw0KICAgfTsNCiAgIFVDaGFySXRlcmF0b3IucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbigpew0KICAgICAgaWYoISF0aGlzLnN0ciAmJiB0aGlzLmN1cnNvciA8IHRoaXMuc3RyLmxlbmd0aCl7DQogICAgICAgICB2YXIgY3AgPSB0aGlzLnN0ci5jaGFyQ29kZUF0KHRoaXMuY3Vyc29yKyspOw0KICAgICAgICAgdmFyIGQ7DQogICAgICAgICBpZihVQ2hhci5pc0hpZ2hTdXJyb2dhdGUoY3ApICYmIHRoaXMuY3Vyc29yIDwgdGhpcy5zdHIubGVuZ3RoICYmIFVDaGFyLmlzTG93U3Vycm9nYXRlKChkID0gdGhpcy5zdHIuY2hhckNvZGVBdCh0aGlzLmN1cnNvcikpKSl7DQogICAgICAgICAgICBjcCA9IChjcCAtIDB4RDgwMCkgKiAweDQwMCArIChkIC0weERDMDApICsgMHgxMDAwMDsNCiAgICAgICAgICAgICsrdGhpcy5jdXJzb3I7DQogICAgICAgICB9DQogICAgICAgICByZXR1cm4gVUNoYXIuZnJvbUNoYXJDb2RlKGNwKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgICB0aGlzLnN0ciA9IG51bGw7DQogICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgIH0NCiAgIH07DQoNCiAgIHZhciBSZWN1cnNEZWNvbXBJdGVyYXRvciA9IGZ1bmN0aW9uKGl0LCBjYW5vKXsNCiAgICAgIHRoaXMuaXQgPSBpdDsNCiAgICAgIHRoaXMuY2Fub25pY2FsID0gY2FubzsNCiAgICAgIHRoaXMucmVzQnVmID0gW107DQogICB9Ow0KDQogICBSZWN1cnNEZWNvbXBJdGVyYXRvci5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uKCl7DQogICAgICBmdW5jdGlvbiByZWN1cnNpdmVEZWNvbXAoY2FubywgdWNoYXIpew0KICAgICAgICAgdmFyIGRlY29tcCA9IHVjaGFyLmdldERlY29tcCgpOw0KICAgICAgICAgaWYoISFkZWNvbXAgJiYgIShjYW5vICYmIHVjaGFyLmlzQ29tcGF0aWJpbGl0eSgpKSl7DQogICAgICAgICAgICB2YXIgcmV0ID0gW107DQogICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgZGVjb21wLmxlbmd0aDsgKytpKXsNCiAgICAgICAgICAgICAgIHZhciBhID0gcmVjdXJzaXZlRGVjb21wKGNhbm8sIFVDaGFyLmZyb21DaGFyQ29kZShkZWNvbXBbaV0pKTsNCiAgICAgICAgICAgICAgICByZXQgPSByZXQuY29uY2F0KGEpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIHJldDsNCiAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICByZXR1cm4gW3VjaGFyXTsNCiAgICAgICAgIH0NCiAgICAgIH0NCiAgICAgIGlmKHRoaXMucmVzQnVmLmxlbmd0aCA9PT0gMCl7DQogICAgICAgICB2YXIgdWNoYXIgPSB0aGlzLml0Lm5leHQoKTsNCiAgICAgICAgIGlmKCF1Y2hhcil7DQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgIH0NCiAgICAgICAgIHRoaXMucmVzQnVmID0gcmVjdXJzaXZlRGVjb21wKHRoaXMuY2Fub25pY2FsLCB1Y2hhcik7DQogICAgICB9DQogICAgICByZXR1cm4gdGhpcy5yZXNCdWYuc2hpZnQoKTsNCiAgIH07DQoNCiAgIHZhciBEZWNvbXBJdGVyYXRvciA9IGZ1bmN0aW9uKGl0KXsNCiAgICAgIHRoaXMuaXQgPSBpdDsNCiAgICAgIHRoaXMucmVzQnVmID0gW107DQogICB9Ow0KDQogICBEZWNvbXBJdGVyYXRvci5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uKCl7DQogICAgICB2YXIgY2M7DQogICAgICBpZih0aGlzLnJlc0J1Zi5sZW5ndGggPT09IDApew0KICAgICAgICAgZG97DQogICAgICAgICAgICB2YXIgdWNoYXIgPSB0aGlzLml0Lm5leHQoKTsNCiAgICAgICAgICAgIGlmKCF1Y2hhcil7DQogICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGNjID0gdWNoYXIuZ2V0Q2Fub25pY2FsQ2xhc3MoKTsNCiAgICAgICAgICAgIHZhciBpbnNwdCA9IHRoaXMucmVzQnVmLmxlbmd0aDsNCiAgICAgICAgICAgIGlmKGNjICE9PSAwKXsNCiAgICAgICAgICAgICAgIGZvcig7IGluc3B0ID4gMDsgLS1pbnNwdCl7DQogICAgICAgICAgICAgICAgICB2YXIgdWNoYXIyID0gdGhpcy5yZXNCdWZbaW5zcHQgLSAxXTsNCiAgICAgICAgICAgICAgICAgIHZhciBjYzIgPSB1Y2hhcjIuZ2V0Q2Fub25pY2FsQ2xhc3MoKTsNCiAgICAgICAgICAgICAgICAgIGlmKGNjMiA8PSBjYyl7DQogICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMucmVzQnVmLnNwbGljZShpbnNwdCwgMCwgdWNoYXIpOw0KICAgICAgICAgfSB3aGlsZShjYyAhPT0gMCk7DQogICAgICB9DQogICAgICByZXR1cm4gdGhpcy5yZXNCdWYuc2hpZnQoKTsNCiAgIH07DQoNCiAgIHZhciBDb21wSXRlcmF0b3IgPSBmdW5jdGlvbihpdCl7DQogICAgICB0aGlzLml0ID0gaXQ7DQogICAgICB0aGlzLnByb2NCdWYgPSBbXTsNCiAgICAgIHRoaXMucmVzQnVmID0gW107DQogICAgICB0aGlzLmxhc3RDbGFzcyA9IG51bGw7DQogICB9Ow0KDQogICBDb21wSXRlcmF0b3IucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbigpew0KICAgICAgd2hpbGUodGhpcy5yZXNCdWYubGVuZ3RoID09PSAwKXsNCiAgICAgICAgIHZhciB1Y2hhciA9IHRoaXMuaXQubmV4dCgpOw0KICAgICAgICAgaWYoIXVjaGFyKXsNCiAgICAgICAgICAgIHRoaXMucmVzQnVmID0gdGhpcy5wcm9jQnVmOw0KICAgICAgICAgICAgdGhpcy5wcm9jQnVmID0gW107DQogICAgICAgICAgICBicmVhazsNCiAgICAgICAgIH0NCiAgICAgICAgIGlmKHRoaXMucHJvY0J1Zi5sZW5ndGggPT09IDApew0KICAgICAgICAgICAgdGhpcy5sYXN0Q2xhc3MgPSB1Y2hhci5nZXRDYW5vbmljYWxDbGFzcygpOw0KICAgICAgICAgICAgdGhpcy5wcm9jQnVmLnB1c2godWNoYXIpOw0KICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHZhciBzdGFydGVyID0gdGhpcy5wcm9jQnVmWzBdOw0KICAgICAgICAgICAgdmFyIGNvbXBvc2l0ZSA9IHN0YXJ0ZXIuZ2V0Q29tcG9zaXRlKHVjaGFyKTsNCiAgICAgICAgICAgIHZhciBjYyA9IHVjaGFyLmdldENhbm9uaWNhbENsYXNzKCk7DQogICAgICAgICAgICBpZighIWNvbXBvc2l0ZSAmJiAodGhpcy5sYXN0Q2xhc3MgPCBjYyB8fCB0aGlzLmxhc3RDbGFzcyA9PT0gMCkpew0KICAgICAgICAgICAgICAgdGhpcy5wcm9jQnVmWzBdID0gY29tcG9zaXRlOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgIGlmKGNjID09PSAwKXsNCiAgICAgICAgICAgICAgICAgIHRoaXMucmVzQnVmID0gdGhpcy5wcm9jQnVmOw0KICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jQnVmID0gW107DQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICB0aGlzLmxhc3RDbGFzcyA9IGNjOw0KICAgICAgICAgICAgICAgdGhpcy5wcm9jQnVmLnB1c2godWNoYXIpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgcmV0dXJuIHRoaXMucmVzQnVmLnNoaWZ0KCk7DQogICB9Ow0KDQogICB2YXIgY3JlYXRlSXRlcmF0b3IgPSBmdW5jdGlvbihtb2RlLCBzdHIpew0KICAgICAgc3dpdGNoKG1vZGUpew0KICAgICAgICAgY2FzZSAiTkZEIjoNCiAgICAgICAgICAgIHJldHVybiBuZXcgRGVjb21wSXRlcmF0b3IobmV3IFJlY3Vyc0RlY29tcEl0ZXJhdG9yKG5ldyBVQ2hhckl0ZXJhdG9yKHN0ciksIHRydWUpKTsNCiAgICAgICAgIGNhc2UgIk5GS0QiOg0KICAgICAgICAgICAgcmV0dXJuIG5ldyBEZWNvbXBJdGVyYXRvcihuZXcgUmVjdXJzRGVjb21wSXRlcmF0b3IobmV3IFVDaGFySXRlcmF0b3Ioc3RyKSwgZmFsc2UpKTsNCiAgICAgICAgIGNhc2UgIk5GQyI6DQogICAgICAgICAgICByZXR1cm4gbmV3IENvbXBJdGVyYXRvcihuZXcgRGVjb21wSXRlcmF0b3IobmV3IFJlY3Vyc0RlY29tcEl0ZXJhdG9yKG5ldyBVQ2hhckl0ZXJhdG9yKHN0ciksIHRydWUpKSk7DQogICAgICAgICBjYXNlICJORktDIjoNCiAgICAgICAgICAgIHJldHVybiBuZXcgQ29tcEl0ZXJhdG9yKG5ldyBEZWNvbXBJdGVyYXRvcihuZXcgUmVjdXJzRGVjb21wSXRlcmF0b3IobmV3IFVDaGFySXRlcmF0b3Ioc3RyKSwgZmFsc2UpKSk7DQogICAgICB9DQogICAgICB0aHJvdyBtb2RlICsgIiBpcyBpbnZhbGlkIjsNCiAgIH07DQogICB2YXIgbm9ybWFsaXplID0gZnVuY3Rpb24obW9kZSwgc3RyKXsNCiAgICAgIHZhciBpdCA9IGNyZWF0ZUl0ZXJhdG9yKG1vZGUsIHN0cik7DQogICAgICB2YXIgcmV0ID0gIiI7DQogICAgICB2YXIgdWNoYXI7DQogICAgICB3aGlsZSghISh1Y2hhciA9IGl0Lm5leHQoKSkpew0KICAgICAgICAgcmV0ICs9IHVjaGFyLnRvU3RyaW5nKCk7DQogICAgICB9DQogICAgICByZXR1cm4gcmV0Ow0KICAgfTsNCg0KICAgLyogQVBJIGZ1bmN0aW9ucyAqLw0KICAgZnVuY3Rpb24gbmZkKHN0cil7DQogICAgICByZXR1cm4gbm9ybWFsaXplKCJORkQiLCBzdHIpOw0KICAgfQ0KDQogICBmdW5jdGlvbiBuZmtkKHN0cil7DQogICAgICByZXR1cm4gbm9ybWFsaXplKCJORktEIiwgc3RyKTsNCiAgIH0NCg0KICAgZnVuY3Rpb24gbmZjKHN0cil7DQogICAgICByZXR1cm4gbm9ybWFsaXplKCJORkMiLCBzdHIpOw0KICAgfQ0KDQogICBmdW5jdGlvbiBuZmtjKHN0cil7DQogICAgICByZXR1cm4gbm9ybWFsaXplKCJORktDIiwgc3RyKTsNCiAgIH0NCg0KLyogVW5pY29kZSBkYXRhICovDQpVQ2hhci51ZGF0YT17DQowOns2MDpbLCx7ODI0Ojg4MTR9XSw2MTpbLCx7ODI0Ojg4MDB9XSw2MjpbLCx7ODI0Ojg4MTV9XSw2NTpbLCx7NzY4OjE5Miw3Njk6MTkzLDc3MDoxOTQsNzcxOjE5NSw3NzI6MjU2LDc3NDoyNTgsNzc1OjU1MCw3NzY6MTk2LDc3Nzo3ODQyLDc3ODoxOTcsNzgwOjQ2MSw3ODM6NTEyLDc4NTo1MTQsODAzOjc4NDAsODA1Ojc2ODAsODA4OjI2MH1dLDY2OlssLHs3NzU6NzY4Miw4MDM6NzY4NCw4MTc6NzY4Nn1dLDY3OlssLHs3Njk6MjYyLDc3MDoyNjQsNzc1OjI2Niw3ODA6MjY4LDgwNzoxOTl9XSw2ODpbLCx7Nzc1Ojc2OTAsNzgwOjI3MCw4MDM6NzY5Miw4MDc6NzY5Niw4MTM6NzY5OCw4MTc6NzY5NH1dLDY5OlssLHs3Njg6MjAwLDc2OToyMDEsNzcwOjIwMiw3NzE6Nzg2OCw3NzI6Mjc0LDc3NDoyNzYsNzc1OjI3OCw3NzY6MjAzLDc3Nzo3ODY2LDc4MDoyODIsNzgzOjUxNiw3ODU6NTE4LDgwMzo3ODY0LDgwNzo1NTIsODA4OjI4MCw4MTM6NzcwNCw4MTY6NzcwNn1dLDcwOlssLHs3NzU6NzcxMH1dLDcxOlssLHs3Njk6NTAwLDc3MDoyODQsNzcyOjc3MTIsNzc0OjI4Niw3NzU6Mjg4LDc4MDo0ODYsODA3OjI5MH1dLDcyOlssLHs3NzA6MjkyLDc3NTo3NzE0LDc3Njo3NzE4LDc4MDo1NDIsODAzOjc3MTYsODA3Ojc3MjAsODE0Ojc3MjJ9XSw3MzpbLCx7NzY4OjIwNCw3Njk6MjA1LDc3MDoyMDYsNzcxOjI5Niw3NzI6Mjk4LDc3NDozMDAsNzc1OjMwNCw3NzY6MjA3LDc3Nzo3ODgwLDc4MDo0NjMsNzgzOjUyMCw3ODU6NTIyLDgwMzo3ODgyLDgwODozMDIsODE2Ojc3MjR9XSw3NDpbLCx7NzcwOjMwOH1dLDc1OlssLHs3Njk6NzcyOCw3ODA6NDg4LDgwMzo3NzMwLDgwNzozMTAsODE3Ojc3MzJ9XSw3NjpbLCx7NzY5OjMxMyw3ODA6MzE3LDgwMzo3NzM0LDgwNzozMTUsODEzOjc3NDAsODE3Ojc3Mzh9XSw3NzpbLCx7NzY5Ojc3NDIsNzc1Ojc3NDQsODAzOjc3NDZ9XSw3ODpbLCx7NzY4OjUwNCw3Njk6MzIzLDc3MToyMDksNzc1Ojc3NDgsNzgwOjMyNyw4MDM6Nzc1MCw4MDc6MzI1LDgxMzo3NzU0LDgxNzo3NzUyfV0sNzk6Wywsezc2ODoyMTAsNzY5OjIxMSw3NzA6MjEyLDc3MToyMTMsNzcyOjMzMiw3NzQ6MzM0LDc3NTo1NTgsNzc2OjIxNCw3Nzc6Nzg4Niw3Nzk6MzM2LDc4MDo0NjUsNzgzOjUyNCw3ODU6NTI2LDc5NTo0MTYsODAzOjc4ODQsODA4OjQ5MH1dLDgwOlssLHs3Njk6Nzc2NCw3NzU6Nzc2Nn1dLDgyOlssLHs3Njk6MzQwLDc3NTo3NzY4LDc4MDozNDQsNzgzOjUyOCw3ODU6NTMwLDgwMzo3NzcwLDgwNzozNDIsODE3Ojc3NzR9XSw4MzpbLCx7NzY5OjM0Niw3NzA6MzQ4LDc3NTo3Nzc2LDc4MDozNTIsODAzOjc3NzgsODA2OjUzNiw4MDc6MzUwfV0sODQ6Wywsezc3NTo3Nzg2LDc4MDozNTYsODAzOjc3ODgsODA2OjUzOCw4MDc6MzU0LDgxMzo3NzkyLDgxNzo3NzkwfV0sODU6Wywsezc2ODoyMTcsNzY5OjIxOCw3NzA6MjE5LDc3MTozNjAsNzcyOjM2Miw3NzQ6MzY0LDc3NjoyMjAsNzc3Ojc5MTAsNzc4OjM2Niw3Nzk6MzY4LDc4MDo0NjcsNzgzOjUzMiw3ODU6NTM0LDc5NTo0MzEsODAzOjc5MDgsODA0Ojc3OTQsODA4OjM3MCw4MTM6Nzc5OCw4MTY6Nzc5Nn1dLDg2OlssLHs3NzE6NzgwNCw4MDM6NzgwNn1dLDg3OlssLHs3Njg6NzgwOCw3Njk6NzgxMCw3NzA6MzcyLDc3NTo3ODE0LDc3Njo3ODEyLDgwMzo3ODE2fV0sODg6Wywsezc3NTo3ODE4LDc3Njo3ODIwfV0sODk6Wywsezc2ODo3OTIyLDc2OToyMjEsNzcwOjM3NCw3NzE6NzkyOCw3NzI6NTYyLDc3NTo3ODIyLDc3NjozNzYsNzc3Ojc5MjYsODAzOjc5MjR9XSw5MDpbLCx7NzY5OjM3Nyw3NzA6NzgyNCw3NzU6Mzc5LDc4MDozODEsODAzOjc4MjYsODE3Ojc4Mjh9XSw5NzpbLCx7NzY4OjIyNCw3Njk6MjI1LDc3MDoyMjYsNzcxOjIyNyw3NzI6MjU3LDc3NDoyNTksNzc1OjU1MSw3NzY6MjI4LDc3Nzo3ODQzLDc3ODoyMjksNzgwOjQ2Miw3ODM6NTEzLDc4NTo1MTUsODAzOjc4NDEsODA1Ojc2ODEsODA4OjI2MX1dLDk4OlssLHs3NzU6NzY4Myw4MDM6NzY4NSw4MTc6NzY4N31dLDk5OlssLHs3Njk6MjYzLDc3MDoyNjUsNzc1OjI2Nyw3ODA6MjY5LDgwNzoyMzF9XSwxMDA6Wywsezc3NTo3NjkxLDc4MDoyNzEsODAzOjc2OTMsODA3Ojc2OTcsODEzOjc2OTksODE3Ojc2OTV9XSwxMDE6Wywsezc2ODoyMzIsNzY5OjIzMyw3NzA6MjM0LDc3MTo3ODY5LDc3MjoyNzUsNzc0OjI3Nyw3NzU6Mjc5LDc3NjoyMzUsNzc3Ojc4NjcsNzgwOjI4Myw3ODM6NTE3LDc4NTo1MTksODAzOjc4NjUsODA3OjU1Myw4MDg6MjgxLDgxMzo3NzA1LDgxNjo3NzA3fV0sMTAyOlssLHs3NzU6NzcxMX1dLDEwMzpbLCx7NzY5OjUwMSw3NzA6Mjg1LDc3Mjo3NzEzLDc3NDoyODcsNzc1OjI4OSw3ODA6NDg3LDgwNzoyOTF9XSwxMDQ6Wywsezc3MDoyOTMsNzc1Ojc3MTUsNzc2Ojc3MTksNzgwOjU0Myw4MDM6NzcxNyw4MDc6NzcyMSw4MTQ6NzcyMyw4MTc6NzgzMH1dLDEwNTpbLCx7NzY4OjIzNiw3Njk6MjM3LDc3MDoyMzgsNzcxOjI5Nyw3NzI6Mjk5LDc3NDozMDEsNzc2OjIzOSw3Nzc6Nzg4MSw3ODA6NDY0LDc4Mzo1MjEsNzg1OjUyMyw4MDM6Nzg4Myw4MDg6MzAzLDgxNjo3NzI1fV0sMTA2OlssLHs3NzA6MzA5LDc4MDo0OTZ9XSwxMDc6Wywsezc2OTo3NzI5LDc4MDo0ODksODAzOjc3MzEsODA3OjMxMSw4MTc6NzczM31dLDEwODpbLCx7NzY5OjMxNCw3ODA6MzE4LDgwMzo3NzM1LDgwNzozMTYsODEzOjc3NDEsODE3Ojc3Mzl9XSwxMDk6Wywsezc2OTo3NzQzLDc3NTo3NzQ1LDgwMzo3NzQ3fV0sMTEwOlssLHs3Njg6NTA1LDc2OTozMjQsNzcxOjI0MSw3NzU6Nzc0OSw3ODA6MzI4LDgwMzo3NzUxLDgwNzozMjYsODEzOjc3NTUsODE3Ojc3NTN9XSwxMTE6Wywsezc2ODoyNDIsNzY5OjI0Myw3NzA6MjQ0LDc3MToyNDUsNzcyOjMzMyw3NzQ6MzM1LDc3NTo1NTksNzc2OjI0Niw3Nzc6Nzg4Nyw3Nzk6MzM3LDc4MDo0NjYsNzgzOjUyNSw3ODU6NTI3LDc5NTo0MTcsODAzOjc4ODUsODA4OjQ5MX1dLDExMjpbLCx7NzY5Ojc3NjUsNzc1Ojc3Njd9XSwxMTQ6Wywsezc2OTozNDEsNzc1Ojc3NjksNzgwOjM0NSw3ODM6NTI5LDc4NTo1MzEsODAzOjc3NzEsODA3OjM0Myw4MTc6Nzc3NX1dLDExNTpbLCx7NzY5OjM0Nyw3NzA6MzQ5LDc3NTo3Nzc3LDc4MDozNTMsODAzOjc3NzksODA2OjUzNyw4MDc6MzUxfV0sMTE2OlssLHs3NzU6Nzc4Nyw3NzY6NzgzMSw3ODA6MzU3LDgwMzo3Nzg5LDgwNjo1MzksODA3OjM1NSw4MTM6Nzc5Myw4MTc6Nzc5MX1dLDExNzpbLCx7NzY4OjI0OSw3Njk6MjUwLDc3MDoyNTEsNzcxOjM2MSw3NzI6MzYzLDc3NDozNjUsNzc2OjI1Miw3Nzc6NzkxMSw3Nzg6MzY3LDc3OTozNjksNzgwOjQ2OCw3ODM6NTMzLDc4NTo1MzUsNzk1OjQzMiw4MDM6NzkwOSw4MDQ6Nzc5NSw4MDg6MzcxLDgxMzo3Nzk5LDgxNjo3Nzk3fV0sMTE4OlssLHs3NzE6NzgwNSw4MDM6NzgwN31dLDExOTpbLCx7NzY4Ojc4MDksNzY5Ojc4MTEsNzcwOjM3Myw3NzU6NzgxNSw3NzY6NzgxMyw3Nzg6NzgzMiw4MDM6NzgxN31dLDEyMDpbLCx7Nzc1Ojc4MTksNzc2Ojc4MjF9XSwxMjE6Wywsezc2ODo3OTIzLDc2OToyNTMsNzcwOjM3NSw3NzE6NzkyOSw3NzI6NTYzLDc3NTo3ODIzLDc3NjoyNTUsNzc3Ojc5MjcsNzc4Ojc4MzMsODAzOjc5MjV9XSwxMjI6Wywsezc2OTozNzgsNzcwOjc4MjUsNzc1OjM4MCw3ODA6MzgyLDgwMzo3ODI3LDgxNzo3ODI5fV0sMTYwOltbMzJdLDI1Nl0sMTY4OltbMzIsNzc2XSwyNTYsezc2ODo4MTczLDc2OTo5MDEsODM0OjgxMjl9XSwxNzA6W1s5N10sMjU2XSwxNzU6W1szMiw3NzJdLDI1Nl0sMTc4OltbNTBdLDI1Nl0sMTc5OltbNTFdLDI1Nl0sMTgwOltbMzIsNzY5XSwyNTZdLDE4MTpbWzk1Nl0sMjU2XSwxODQ6W1szMiw4MDddLDI1Nl0sMTg1OltbNDldLDI1Nl0sMTg2OltbMTExXSwyNTZdLDE4ODpbWzQ5LDgyNjAsNTJdLDI1Nl0sMTg5OltbNDksODI2MCw1MF0sMjU2XSwxOTA6W1s1MSw4MjYwLDUyXSwyNTZdLDE5MjpbWzY1LDc2OF1dLDE5MzpbWzY1LDc2OV1dLDE5NDpbWzY1LDc3MF0sLHs3Njg6Nzg0Niw3Njk6Nzg0NCw3NzE6Nzg1MCw3Nzc6Nzg0OH1dLDE5NTpbWzY1LDc3MV1dLDE5NjpbWzY1LDc3Nl0sLHs3NzI6NDc4fV0sMTk3OltbNjUsNzc4XSwsezc2OTo1MDZ9XSwxOTg6Wywsezc2OTo1MDgsNzcyOjQ4Mn1dLDE5OTpbWzY3LDgwN10sLHs3Njk6NzY4OH1dLDIwMDpbWzY5LDc2OF1dLDIwMTpbWzY5LDc2OV1dLDIwMjpbWzY5LDc3MF0sLHs3Njg6Nzg3Miw3Njk6Nzg3MCw3NzE6Nzg3Niw3Nzc6Nzg3NH1dLDIwMzpbWzY5LDc3Nl1dLDIwNDpbWzczLDc2OF1dLDIwNTpbWzczLDc2OV1dLDIwNjpbWzczLDc3MF1dLDIwNzpbWzczLDc3Nl0sLHs3Njk6NzcyNn1dLDIwOTpbWzc4LDc3MV1dLDIxMDpbWzc5LDc2OF1dLDIxMTpbWzc5LDc2OV1dLDIxMjpbWzc5LDc3MF0sLHs3Njg6Nzg5MCw3Njk6Nzg4OCw3NzE6Nzg5NCw3Nzc6Nzg5Mn1dLDIxMzpbWzc5LDc3MV0sLHs3Njk6Nzc1Niw3NzI6NTU2LDc3Njo3NzU4fV0sMjE0OltbNzksNzc2XSwsezc3Mjo1NTR9XSwyMTY6Wywsezc2OTo1MTB9XSwyMTc6W1s4NSw3NjhdXSwyMTg6W1s4NSw3NjldXSwyMTk6W1s4NSw3NzBdXSwyMjA6W1s4NSw3NzZdLCx7NzY4OjQ3NSw3Njk6NDcxLDc3Mjo0NjksNzgwOjQ3M31dLDIyMTpbWzg5LDc2OV1dLDIyNDpbWzk3LDc2OF1dLDIyNTpbWzk3LDc2OV1dLDIyNjpbWzk3LDc3MF0sLHs3Njg6Nzg0Nyw3Njk6Nzg0NSw3NzE6Nzg1MSw3Nzc6Nzg0OX1dLDIyNzpbWzk3LDc3MV1dLDIyODpbWzk3LDc3Nl0sLHs3NzI6NDc5fV0sMjI5OltbOTcsNzc4XSwsezc2OTo1MDd9XSwyMzA6Wywsezc2OTo1MDksNzcyOjQ4M31dLDIzMTpbWzk5LDgwN10sLHs3Njk6NzY4OX1dLDIzMjpbWzEwMSw3NjhdXSwyMzM6W1sxMDEsNzY5XV0sMjM0OltbMTAxLDc3MF0sLHs3Njg6Nzg3Myw3Njk6Nzg3MSw3NzE6Nzg3Nyw3Nzc6Nzg3NX1dLDIzNTpbWzEwMSw3NzZdXSwyMzY6W1sxMDUsNzY4XV0sMjM3OltbMTA1LDc2OV1dLDIzODpbWzEwNSw3NzBdXSwyMzk6W1sxMDUsNzc2XSwsezc2OTo3NzI3fV0sMjQxOltbMTEwLDc3MV1dLDI0MjpbWzExMSw3NjhdXSwyNDM6W1sxMTEsNzY5XV0sMjQ0OltbMTExLDc3MF0sLHs3Njg6Nzg5MSw3Njk6Nzg4OSw3NzE6Nzg5NSw3Nzc6Nzg5M31dLDI0NTpbWzExMSw3NzFdLCx7NzY5Ojc3NTcsNzcyOjU1Nyw3NzY6Nzc1OX1dLDI0NjpbWzExMSw3NzZdLCx7NzcyOjU1NX1dLDI0ODpbLCx7NzY5OjUxMX1dLDI0OTpbWzExNyw3NjhdXSwyNTA6W1sxMTcsNzY5XV0sMjUxOltbMTE3LDc3MF1dLDI1MjpbWzExNyw3NzZdLCx7NzY4OjQ3Niw3Njk6NDcyLDc3Mjo0NzAsNzgwOjQ3NH1dLDI1MzpbWzEyMSw3NjldXSwyNTU6W1sxMjEsNzc2XV19LA0KMjU2OnsyNTY6W1s2NSw3NzJdXSwyNTc6W1s5Nyw3NzJdXSwyNTg6W1s2NSw3NzRdLCx7NzY4Ojc4NTYsNzY5Ojc4NTQsNzcxOjc4NjAsNzc3Ojc4NTh9XSwyNTk6W1s5Nyw3NzRdLCx7NzY4Ojc4NTcsNzY5Ojc4NTUsNzcxOjc4NjEsNzc3Ojc4NTl9XSwyNjA6W1s2NSw4MDhdXSwyNjE6W1s5Nyw4MDhdXSwyNjI6W1s2Nyw3NjldXSwyNjM6W1s5OSw3NjldXSwyNjQ6W1s2Nyw3NzBdXSwyNjU6W1s5OSw3NzBdXSwyNjY6W1s2Nyw3NzVdXSwyNjc6W1s5OSw3NzVdXSwyNjg6W1s2Nyw3ODBdXSwyNjk6W1s5OSw3ODBdXSwyNzA6W1s2OCw3ODBdXSwyNzE6W1sxMDAsNzgwXV0sMjc0OltbNjksNzcyXSwsezc2ODo3NzAwLDc2OTo3NzAyfV0sMjc1OltbMTAxLDc3Ml0sLHs3Njg6NzcwMSw3Njk6NzcwM31dLDI3NjpbWzY5LDc3NF1dLDI3NzpbWzEwMSw3NzRdXSwyNzg6W1s2OSw3NzVdXSwyNzk6W1sxMDEsNzc1XV0sMjgwOltbNjksODA4XV0sMjgxOltbMTAxLDgwOF1dLDI4MjpbWzY5LDc4MF1dLDI4MzpbWzEwMSw3ODBdXSwyODQ6W1s3MSw3NzBdXSwyODU6W1sxMDMsNzcwXV0sMjg2OltbNzEsNzc0XV0sMjg3OltbMTAzLDc3NF1dLDI4ODpbWzcxLDc3NV1dLDI4OTpbWzEwMyw3NzVdXSwyOTA6W1s3MSw4MDddXSwyOTE6W1sxMDMsODA3XV0sMjkyOltbNzIsNzcwXV0sMjkzOltbMTA0LDc3MF1dLDI5NjpbWzczLDc3MV1dLDI5NzpbWzEwNSw3NzFdXSwyOTg6W1s3Myw3NzJdXSwyOTk6W1sxMDUsNzcyXV0sMzAwOltbNzMsNzc0XV0sMzAxOltbMTA1LDc3NF1dLDMwMjpbWzczLDgwOF1dLDMwMzpbWzEwNSw4MDhdXSwzMDQ6W1s3Myw3NzVdXSwzMDY6W1s3Myw3NF0sMjU2XSwzMDc6W1sxMDUsMTA2XSwyNTZdLDMwODpbWzc0LDc3MF1dLDMwOTpbWzEwNiw3NzBdXSwzMTA6W1s3NSw4MDddXSwzMTE6W1sxMDcsODA3XV0sMzEzOltbNzYsNzY5XV0sMzE0OltbMTA4LDc2OV1dLDMxNTpbWzc2LDgwN11dLDMxNjpbWzEwOCw4MDddXSwzMTc6W1s3Niw3ODBdXSwzMTg6W1sxMDgsNzgwXV0sMzE5OltbNzYsMTgzXSwyNTZdLDMyMDpbWzEwOCwxODNdLDI1Nl0sMzIzOltbNzgsNzY5XV0sMzI0OltbMTEwLDc2OV1dLDMyNTpbWzc4LDgwN11dLDMyNjpbWzExMCw4MDddXSwzMjc6W1s3OCw3ODBdXSwzMjg6W1sxMTAsNzgwXV0sMzI5OltbNzAwLDExMF0sMjU2XSwzMzI6W1s3OSw3NzJdLCx7NzY4Ojc3NjAsNzY5Ojc3NjJ9XSwzMzM6W1sxMTEsNzcyXSwsezc2ODo3NzYxLDc2OTo3NzYzfV0sMzM0OltbNzksNzc0XV0sMzM1OltbMTExLDc3NF1dLDMzNjpbWzc5LDc3OV1dLDMzNzpbWzExMSw3NzldXSwzNDA6W1s4Miw3NjldXSwzNDE6W1sxMTQsNzY5XV0sMzQyOltbODIsODA3XV0sMzQzOltbMTE0LDgwN11dLDM0NDpbWzgyLDc4MF1dLDM0NTpbWzExNCw3ODBdXSwzNDY6W1s4Myw3NjldLCx7Nzc1Ojc3ODB9XSwzNDc6W1sxMTUsNzY5XSwsezc3NTo3NzgxfV0sMzQ4OltbODMsNzcwXV0sMzQ5OltbMTE1LDc3MF1dLDM1MDpbWzgzLDgwN11dLDM1MTpbWzExNSw4MDddXSwzNTI6W1s4Myw3ODBdLCx7Nzc1Ojc3ODJ9XSwzNTM6W1sxMTUsNzgwXSwsezc3NTo3NzgzfV0sMzU0OltbODQsODA3XV0sMzU1OltbMTE2LDgwN11dLDM1NjpbWzg0LDc4MF1dLDM1NzpbWzExNiw3ODBdXSwzNjA6W1s4NSw3NzFdLCx7NzY5Ojc4MDB9XSwzNjE6W1sxMTcsNzcxXSwsezc2OTo3ODAxfV0sMzYyOltbODUsNzcyXSwsezc3Njo3ODAyfV0sMzYzOltbMTE3LDc3Ml0sLHs3NzY6NzgwM31dLDM2NDpbWzg1LDc3NF1dLDM2NTpbWzExNyw3NzRdXSwzNjY6W1s4NSw3NzhdXSwzNjc6W1sxMTcsNzc4XV0sMzY4OltbODUsNzc5XV0sMzY5OltbMTE3LDc3OV1dLDM3MDpbWzg1LDgwOF1dLDM3MTpbWzExNyw4MDhdXSwzNzI6W1s4Nyw3NzBdXSwzNzM6W1sxMTksNzcwXV0sMzc0OltbODksNzcwXV0sMzc1OltbMTIxLDc3MF1dLDM3NjpbWzg5LDc3Nl1dLDM3NzpbWzkwLDc2OV1dLDM3ODpbWzEyMiw3NjldXSwzNzk6W1s5MCw3NzVdXSwzODA6W1sxMjIsNzc1XV0sMzgxOltbOTAsNzgwXV0sMzgyOltbMTIyLDc4MF1dLDM4MzpbWzExNV0sMjU2LHs3NzU6NzgzNX1dLDQxNjpbWzc5LDc5NV0sLHs3Njg6NzkwMCw3Njk6Nzg5OCw3NzE6NzkwNCw3Nzc6NzkwMiw4MDM6NzkwNn1dLDQxNzpbWzExMSw3OTVdLCx7NzY4Ojc5MDEsNzY5Ojc4OTksNzcxOjc5MDUsNzc3Ojc5MDMsODAzOjc5MDd9XSw0MzE6W1s4NSw3OTVdLCx7NzY4Ojc5MTQsNzY5Ojc5MTIsNzcxOjc5MTgsNzc3Ojc5MTYsODAzOjc5MjB9XSw0MzI6W1sxMTcsNzk1XSwsezc2ODo3OTE1LDc2OTo3OTEzLDc3MTo3OTE5LDc3Nzo3OTE3LDgwMzo3OTIxfV0sNDM5OlssLHs3ODA6NDk0fV0sNDUyOltbNjgsMzgxXSwyNTZdLDQ1MzpbWzY4LDM4Ml0sMjU2XSw0NTQ6W1sxMDAsMzgyXSwyNTZdLDQ1NTpbWzc2LDc0XSwyNTZdLDQ1NjpbWzc2LDEwNl0sMjU2XSw0NTc6W1sxMDgsMTA2XSwyNTZdLDQ1ODpbWzc4LDc0XSwyNTZdLDQ1OTpbWzc4LDEwNl0sMjU2XSw0NjA6W1sxMTAsMTA2XSwyNTZdLDQ2MTpbWzY1LDc4MF1dLDQ2MjpbWzk3LDc4MF1dLDQ2MzpbWzczLDc4MF1dLDQ2NDpbWzEwNSw3ODBdXSw0NjU6W1s3OSw3ODBdXSw0NjY6W1sxMTEsNzgwXV0sNDY3OltbODUsNzgwXV0sNDY4OltbMTE3LDc4MF1dLDQ2OTpbWzIyMCw3NzJdXSw0NzA6W1syNTIsNzcyXV0sNDcxOltbMjIwLDc2OV1dLDQ3MjpbWzI1Miw3NjldXSw0NzM6W1syMjAsNzgwXV0sNDc0OltbMjUyLDc4MF1dLDQ3NTpbWzIyMCw3NjhdXSw0NzY6W1syNTIsNzY4XV0sNDc4OltbMTk2LDc3Ml1dLDQ3OTpbWzIyOCw3NzJdXSw0ODA6W1s1NTAsNzcyXV0sNDgxOltbNTUxLDc3Ml1dLDQ4MjpbWzE5OCw3NzJdXSw0ODM6W1syMzAsNzcyXV0sNDg2OltbNzEsNzgwXV0sNDg3OltbMTAzLDc4MF1dLDQ4ODpbWzc1LDc4MF1dLDQ4OTpbWzEwNyw3ODBdXSw0OTA6W1s3OSw4MDhdLCx7NzcyOjQ5Mn1dLDQ5MTpbWzExMSw4MDhdLCx7NzcyOjQ5M31dLDQ5MjpbWzQ5MCw3NzJdXSw0OTM6W1s0OTEsNzcyXV0sNDk0OltbNDM5LDc4MF1dLDQ5NTpbWzY1OCw3ODBdXSw0OTY6W1sxMDYsNzgwXV0sNDk3OltbNjgsOTBdLDI1Nl0sNDk4OltbNjgsMTIyXSwyNTZdLDQ5OTpbWzEwMCwxMjJdLDI1Nl0sNTAwOltbNzEsNzY5XV0sNTAxOltbMTAzLDc2OV1dLDUwNDpbWzc4LDc2OF1dLDUwNTpbWzExMCw3NjhdXSw1MDY6W1sxOTcsNzY5XV0sNTA3OltbMjI5LDc2OV1dLDUwODpbWzE5OCw3NjldXSw1MDk6W1syMzAsNzY5XV0sNTEwOltbMjE2LDc2OV1dLDUxMTpbWzI0OCw3NjldXSw2NjA0NTpbLDIyMF19LA0KNTEyOns1MTI6W1s2NSw3ODNdXSw1MTM6W1s5Nyw3ODNdXSw1MTQ6W1s2NSw3ODVdXSw1MTU6W1s5Nyw3ODVdXSw1MTY6W1s2OSw3ODNdXSw1MTc6W1sxMDEsNzgzXV0sNTE4OltbNjksNzg1XV0sNTE5OltbMTAxLDc4NV1dLDUyMDpbWzczLDc4M11dLDUyMTpbWzEwNSw3ODNdXSw1MjI6W1s3Myw3ODVdXSw1MjM6W1sxMDUsNzg1XV0sNTI0OltbNzksNzgzXV0sNTI1OltbMTExLDc4M11dLDUyNjpbWzc5LDc4NV1dLDUyNzpbWzExMSw3ODVdXSw1Mjg6W1s4Miw3ODNdXSw1Mjk6W1sxMTQsNzgzXV0sNTMwOltbODIsNzg1XV0sNTMxOltbMTE0LDc4NV1dLDUzMjpbWzg1LDc4M11dLDUzMzpbWzExNyw3ODNdXSw1MzQ6W1s4NSw3ODVdXSw1MzU6W1sxMTcsNzg1XV0sNTM2OltbODMsODA2XV0sNTM3OltbMTE1LDgwNl1dLDUzODpbWzg0LDgwNl1dLDUzOTpbWzExNiw4MDZdXSw1NDI6W1s3Miw3ODBdXSw1NDM6W1sxMDQsNzgwXV0sNTUwOltbNjUsNzc1XSwsezc3Mjo0ODB9XSw1NTE6W1s5Nyw3NzVdLCx7NzcyOjQ4MX1dLDU1MjpbWzY5LDgwN10sLHs3NzQ6NzcwOH1dLDU1MzpbWzEwMSw4MDddLCx7Nzc0Ojc3MDl9XSw1NTQ6W1syMTQsNzcyXV0sNTU1OltbMjQ2LDc3Ml1dLDU1NjpbWzIxMyw3NzJdXSw1NTc6W1syNDUsNzcyXV0sNTU4OltbNzksNzc1XSwsezc3Mjo1NjB9XSw1NTk6W1sxMTEsNzc1XSwsezc3Mjo1NjF9XSw1NjA6W1s1NTgsNzcyXV0sNTYxOltbNTU5LDc3Ml1dLDU2MjpbWzg5LDc3Ml1dLDU2MzpbWzEyMSw3NzJdXSw2NTg6Wywsezc4MDo0OTV9XSw2ODg6W1sxMDRdLDI1Nl0sNjg5OltbNjE0XSwyNTZdLDY5MDpbWzEwNl0sMjU2XSw2OTE6W1sxMTRdLDI1Nl0sNjkyOltbNjMzXSwyNTZdLDY5MzpbWzYzNV0sMjU2XSw2OTQ6W1s2NDFdLDI1Nl0sNjk1OltbMTE5XSwyNTZdLDY5NjpbWzEyMV0sMjU2XSw3Mjg6W1szMiw3NzRdLDI1Nl0sNzI5OltbMzIsNzc1XSwyNTZdLDczMDpbWzMyLDc3OF0sMjU2XSw3MzE6W1szMiw4MDhdLDI1Nl0sNzMyOltbMzIsNzcxXSwyNTZdLDczMzpbWzMyLDc3OV0sMjU2XSw3MzY6W1s2MTFdLDI1Nl0sNzM3OltbMTA4XSwyNTZdLDczODpbWzExNV0sMjU2XSw3Mzk6W1sxMjBdLDI1Nl0sNzQwOltbNjYxXSwyNTZdLDY2MjcyOlssMjIwXX0sDQo3Njg6ezc2ODpbLDIzMF0sNzY5OlssMjMwXSw3NzA6WywyMzBdLDc3MTpbLDIzMF0sNzcyOlssMjMwXSw3NzM6WywyMzBdLDc3NDpbLDIzMF0sNzc1OlssMjMwXSw3NzY6WywyMzAsezc2OTo4MzZ9XSw3Nzc6WywyMzBdLDc3ODpbLDIzMF0sNzc5OlssMjMwXSw3ODA6WywyMzBdLDc4MTpbLDIzMF0sNzgyOlssMjMwXSw3ODM6WywyMzBdLDc4NDpbLDIzMF0sNzg1OlssMjMwXSw3ODY6WywyMzBdLDc4NzpbLDIzMF0sNzg4OlssMjMwXSw3ODk6WywyMzJdLDc5MDpbLDIyMF0sNzkxOlssMjIwXSw3OTI6WywyMjBdLDc5MzpbLDIyMF0sNzk0OlssMjMyXSw3OTU6WywyMTZdLDc5NjpbLDIyMF0sNzk3OlssMjIwXSw3OTg6WywyMjBdLDc5OTpbLDIyMF0sODAwOlssMjIwXSw4MDE6WywyMDJdLDgwMjpbLDIwMl0sODAzOlssMjIwXSw4MDQ6WywyMjBdLDgwNTpbLDIyMF0sODA2OlssMjIwXSw4MDc6WywyMDJdLDgwODpbLDIwMl0sODA5OlssMjIwXSw4MTA6WywyMjBdLDgxMTpbLDIyMF0sODEyOlssMjIwXSw4MTM6WywyMjBdLDgxNDpbLDIyMF0sODE1OlssMjIwXSw4MTY6WywyMjBdLDgxNzpbLDIyMF0sODE4OlssMjIwXSw4MTk6WywyMjBdLDgyMDpbLDFdLDgyMTpbLDFdLDgyMjpbLDFdLDgyMzpbLDFdLDgyNDpbLDFdLDgyNTpbLDIyMF0sODI2OlssMjIwXSw4Mjc6WywyMjBdLDgyODpbLDIyMF0sODI5OlssMjMwXSw4MzA6WywyMzBdLDgzMTpbLDIzMF0sODMyOltbNzY4XSwyMzBdLDgzMzpbWzc2OV0sMjMwXSw4MzQ6WywyMzBdLDgzNTpbWzc4N10sMjMwXSw4MzY6W1s3NzYsNzY5XSwyMzBdLDgzNzpbLDI0MF0sODM4OlssMjMwXSw4Mzk6WywyMjBdLDg0MDpbLDIyMF0sODQxOlssMjIwXSw4NDI6WywyMzBdLDg0MzpbLDIzMF0sODQ0OlssMjMwXSw4NDU6WywyMjBdLDg0NjpbLDIyMF0sODQ4OlssMjMwXSw4NDk6WywyMzBdLDg1MDpbLDIzMF0sODUxOlssMjIwXSw4NTI6WywyMjBdLDg1MzpbLDIyMF0sODU0OlssMjIwXSw4NTU6WywyMzBdLDg1NjpbLDIzMl0sODU3OlssMjIwXSw4NTg6WywyMjBdLDg1OTpbLDIzMF0sODYwOlssMjMzXSw4NjE6WywyMzRdLDg2MjpbLDIzNF0sODYzOlssMjMzXSw4NjQ6WywyMzRdLDg2NTpbLDIzNF0sODY2OlssMjMzXSw4Njc6WywyMzBdLDg2ODpbLDIzMF0sODY5OlssMjMwXSw4NzA6WywyMzBdLDg3MTpbLDIzMF0sODcyOlssMjMwXSw4NzM6WywyMzBdLDg3NDpbLDIzMF0sODc1OlssMjMwXSw4NzY6WywyMzBdLDg3NzpbLDIzMF0sODc4OlssMjMwXSw4Nzk6WywyMzBdLDg4NDpbWzY5N11dLDg5MDpbWzMyLDgzN10sMjU2XSw4OTQ6W1s1OV1dLDkwMDpbWzMyLDc2OV0sMjU2XSw5MDE6W1sxNjgsNzY5XV0sOTAyOltbOTEzLDc2OV1dLDkwMzpbWzE4M11dLDkwNDpbWzkxNyw3NjldXSw5MDU6W1s5MTksNzY5XV0sOTA2OltbOTIxLDc2OV1dLDkwODpbWzkyNyw3NjldXSw5MTA6W1s5MzMsNzY5XV0sOTExOltbOTM3LDc2OV1dLDkxMjpbWzk3MCw3NjldXSw5MTM6Wywsezc2ODo4MTIyLDc2OTo5MDIsNzcyOjgxMjEsNzc0OjgxMjAsNzg3Ojc5NDQsNzg4Ojc5NDUsODM3OjgxMjR9XSw5MTc6Wywsezc2ODo4MTM2LDc2OTo5MDQsNzg3Ojc5NjAsNzg4Ojc5NjF9XSw5MTk6Wywsezc2ODo4MTM4LDc2OTo5MDUsNzg3Ojc5NzYsNzg4Ojc5NzcsODM3OjgxNDB9XSw5MjE6Wywsezc2ODo4MTU0LDc2OTo5MDYsNzcyOjgxNTMsNzc0OjgxNTIsNzc2OjkzOCw3ODc6Nzk5Miw3ODg6Nzk5M31dLDkyNzpbLCx7NzY4OjgxODQsNzY5OjkwOCw3ODc6ODAwOCw3ODg6ODAwOX1dLDkyOTpbLCx7Nzg4OjgxNzJ9XSw5MzM6Wywsezc2ODo4MTcwLDc2OTo5MTAsNzcyOjgxNjksNzc0OjgxNjgsNzc2OjkzOSw3ODg6ODAyNX1dLDkzNzpbLCx7NzY4OjgxODYsNzY5OjkxMSw3ODc6ODA0MCw3ODg6ODA0MSw4Mzc6ODE4OH1dLDkzODpbWzkyMSw3NzZdXSw5Mzk6W1s5MzMsNzc2XV0sOTQwOltbOTQ1LDc2OV0sLHs4Mzc6ODExNn1dLDk0MTpbWzk0OSw3NjldXSw5NDI6W1s5NTEsNzY5XSwsezgzNzo4MTMyfV0sOTQzOltbOTUzLDc2OV1dLDk0NDpbWzk3MSw3NjldXSw5NDU6Wywsezc2ODo4MDQ4LDc2OTo5NDAsNzcyOjgxMTMsNzc0OjgxMTIsNzg3Ojc5MzYsNzg4Ojc5MzcsODM0OjgxMTgsODM3OjgxMTV9XSw5NDk6Wywsezc2ODo4MDUwLDc2OTo5NDEsNzg3Ojc5NTIsNzg4Ojc5NTN9XSw5NTE6Wywsezc2ODo4MDUyLDc2OTo5NDIsNzg3Ojc5NjgsNzg4Ojc5NjksODM0OjgxMzQsODM3OjgxMzF9XSw5NTM6Wywsezc2ODo4MDU0LDc2OTo5NDMsNzcyOjgxNDUsNzc0OjgxNDQsNzc2Ojk3MCw3ODc6Nzk4NCw3ODg6Nzk4NSw4MzQ6ODE1MH1dLDk1OTpbLCx7NzY4OjgwNTYsNzY5Ojk3Miw3ODc6ODAwMCw3ODg6ODAwMX1dLDk2MTpbLCx7Nzg3OjgxNjQsNzg4OjgxNjV9XSw5NjU6Wywsezc2ODo4MDU4LDc2OTo5NzMsNzcyOjgxNjEsNzc0OjgxNjAsNzc2Ojk3MSw3ODc6ODAxNiw3ODg6ODAxNyw4MzQ6ODE2Nn1dLDk2OTpbLCx7NzY4OjgwNjAsNzY5Ojk3NCw3ODc6ODAzMiw3ODg6ODAzMyw4MzQ6ODE4Miw4Mzc6ODE3OX1dLDk3MDpbWzk1Myw3NzZdLCx7NzY4OjgxNDYsNzY5OjkxMiw4MzQ6ODE1MX1dLDk3MTpbWzk2NSw3NzZdLCx7NzY4OjgxNjIsNzY5Ojk0NCw4MzQ6ODE2N31dLDk3MjpbWzk1OSw3NjldXSw5NzM6W1s5NjUsNzY5XV0sOTc0OltbOTY5LDc2OV0sLHs4Mzc6ODE4MH1dLDk3NjpbWzk0Nl0sMjU2XSw5Nzc6W1s5NTJdLDI1Nl0sOTc4OltbOTMzXSwyNTYsezc2OTo5NzksNzc2Ojk4MH1dLDk3OTpbWzk3OCw3NjldXSw5ODA6W1s5NzgsNzc2XV0sOTgxOltbOTY2XSwyNTZdLDk4MjpbWzk2MF0sMjU2XSwxMDA4OltbOTU0XSwyNTZdLDEwMDk6W1s5NjFdLDI1Nl0sMTAxMDpbWzk2Ml0sMjU2XSwxMDEyOltbOTIwXSwyNTZdLDEwMTM6W1s5NDldLDI1Nl0sMTAxNzpbWzkzMV0sMjU2XSw2NjQyMjpbLDIzMF0sNjY0MjM6WywyMzBdLDY2NDI0OlssMjMwXSw2NjQyNTpbLDIzMF0sNjY0MjY6WywyMzBdfSwNCjEwMjQ6ezEwMjQ6W1sxMDQ1LDc2OF1dLDEwMjU6W1sxMDQ1LDc3Nl1dLDEwMjc6W1sxMDQzLDc2OV1dLDEwMzA6Wywsezc3NjoxMDMxfV0sMTAzMTpbWzEwMzAsNzc2XV0sMTAzNjpbWzEwNTAsNzY5XV0sMTAzNzpbWzEwNDgsNzY4XV0sMTAzODpbWzEwNTksNzc0XV0sMTA0MDpbLCx7Nzc0OjEyMzIsNzc2OjEyMzR9XSwxMDQzOlssLHs3Njk6MTAyN31dLDEwNDU6Wywsezc2ODoxMDI0LDc3NDoxMjM4LDc3NjoxMDI1fV0sMTA0NjpbLCx7Nzc0OjEyMTcsNzc2OjEyNDR9XSwxMDQ3OlssLHs3NzY6MTI0Nn1dLDEwNDg6Wywsezc2ODoxMDM3LDc3MjoxMjUwLDc3NDoxMDQ5LDc3NjoxMjUyfV0sMTA0OTpbWzEwNDgsNzc0XV0sMTA1MDpbLCx7NzY5OjEwMzZ9XSwxMDU0OlssLHs3NzY6MTI1NH1dLDEwNTk6Wywsezc3MjoxMjYyLDc3NDoxMDM4LDc3NjoxMjY0LDc3OToxMjY2fV0sMTA2MzpbLCx7Nzc2OjEyNjh9XSwxMDY3OlssLHs3NzY6MTI3Mn1dLDEwNjk6Wywsezc3NjoxMjYwfV0sMTA3MjpbLCx7Nzc0OjEyMzMsNzc2OjEyMzV9XSwxMDc1OlssLHs3Njk6MTEwN31dLDEwNzc6Wywsezc2ODoxMTA0LDc3NDoxMjM5LDc3NjoxMTA1fV0sMTA3ODpbLCx7Nzc0OjEyMTgsNzc2OjEyNDV9XSwxMDc5OlssLHs3NzY6MTI0N31dLDEwODA6Wywsezc2ODoxMTE3LDc3MjoxMjUxLDc3NDoxMDgxLDc3NjoxMjUzfV0sMTA4MTpbWzEwODAsNzc0XV0sMTA4MjpbLCx7NzY5OjExMTZ9XSwxMDg2OlssLHs3NzY6MTI1NX1dLDEwOTE6Wywsezc3MjoxMjYzLDc3NDoxMTE4LDc3NjoxMjY1LDc3OToxMjY3fV0sMTA5NTpbLCx7Nzc2OjEyNjl9XSwxMDk5OlssLHs3NzY6MTI3M31dLDExMDE6Wywsezc3NjoxMjYxfV0sMTEwNDpbWzEwNzcsNzY4XV0sMTEwNTpbWzEwNzcsNzc2XV0sMTEwNzpbWzEwNzUsNzY5XV0sMTExMDpbLCx7Nzc2OjExMTF9XSwxMTExOltbMTExMCw3NzZdXSwxMTE2OltbMTA4Miw3NjldXSwxMTE3OltbMTA4MCw3NjhdXSwxMTE4OltbMTA5MSw3NzRdXSwxMTQwOlssLHs3ODM6MTE0Mn1dLDExNDE6Wywsezc4MzoxMTQzfV0sMTE0MjpbWzExNDAsNzgzXV0sMTE0MzpbWzExNDEsNzgzXV0sMTE1NTpbLDIzMF0sMTE1NjpbLDIzMF0sMTE1NzpbLDIzMF0sMTE1ODpbLDIzMF0sMTE1OTpbLDIzMF0sMTIxNzpbWzEwNDYsNzc0XV0sMTIxODpbWzEwNzgsNzc0XV0sMTIzMjpbWzEwNDAsNzc0XV0sMTIzMzpbWzEwNzIsNzc0XV0sMTIzNDpbWzEwNDAsNzc2XV0sMTIzNTpbWzEwNzIsNzc2XV0sMTIzODpbWzEwNDUsNzc0XV0sMTIzOTpbWzEwNzcsNzc0XV0sMTI0MDpbLCx7Nzc2OjEyNDJ9XSwxMjQxOlssLHs3NzY6MTI0M31dLDEyNDI6W1sxMjQwLDc3Nl1dLDEyNDM6W1sxMjQxLDc3Nl1dLDEyNDQ6W1sxMDQ2LDc3Nl1dLDEyNDU6W1sxMDc4LDc3Nl1dLDEyNDY6W1sxMDQ3LDc3Nl1dLDEyNDc6W1sxMDc5LDc3Nl1dLDEyNTA6W1sxMDQ4LDc3Ml1dLDEyNTE6W1sxMDgwLDc3Ml1dLDEyNTI6W1sxMDQ4LDc3Nl1dLDEyNTM6W1sxMDgwLDc3Nl1dLDEyNTQ6W1sxMDU0LDc3Nl1dLDEyNTU6W1sxMDg2LDc3Nl1dLDEyNTY6Wywsezc3NjoxMjU4fV0sMTI1NzpbLCx7Nzc2OjEyNTl9XSwxMjU4OltbMTI1Niw3NzZdXSwxMjU5OltbMTI1Nyw3NzZdXSwxMjYwOltbMTA2OSw3NzZdXSwxMjYxOltbMTEwMSw3NzZdXSwxMjYyOltbMTA1OSw3NzJdXSwxMjYzOltbMTA5MSw3NzJdXSwxMjY0OltbMTA1OSw3NzZdXSwxMjY1OltbMTA5MSw3NzZdXSwxMjY2OltbMTA1OSw3NzldXSwxMjY3OltbMTA5MSw3NzldXSwxMjY4OltbMTA2Myw3NzZdXSwxMjY5OltbMTA5NSw3NzZdXSwxMjcyOltbMTA2Nyw3NzZdXSwxMjczOltbMTA5OSw3NzZdXX0sDQoxMjgwOnsxNDE1OltbMTM4MSwxNDEwXSwyNTZdLDE0MjU6WywyMjBdLDE0MjY6WywyMzBdLDE0Mjc6WywyMzBdLDE0Mjg6WywyMzBdLDE0Mjk6WywyMzBdLDE0MzA6WywyMjBdLDE0MzE6WywyMzBdLDE0MzI6WywyMzBdLDE0MzM6WywyMzBdLDE0MzQ6WywyMjJdLDE0MzU6WywyMjBdLDE0MzY6WywyMzBdLDE0Mzc6WywyMzBdLDE0Mzg6WywyMzBdLDE0Mzk6WywyMzBdLDE0NDA6WywyMzBdLDE0NDE6WywyMzBdLDE0NDI6WywyMjBdLDE0NDM6WywyMjBdLDE0NDQ6WywyMjBdLDE0NDU6WywyMjBdLDE0NDY6WywyMjBdLDE0NDc6WywyMjBdLDE0NDg6WywyMzBdLDE0NDk6WywyMzBdLDE0NTA6WywyMjBdLDE0NTE6WywyMzBdLDE0NTI6WywyMzBdLDE0NTM6WywyMjJdLDE0NTQ6WywyMjhdLDE0NTU6WywyMzBdLDE0NTY6WywxMF0sMTQ1NzpbLDExXSwxNDU4OlssMTJdLDE0NTk6WywxM10sMTQ2MDpbLDE0XSwxNDYxOlssMTVdLDE0NjI6WywxNl0sMTQ2MzpbLDE3XSwxNDY0OlssMThdLDE0NjU6WywxOV0sMTQ2NjpbLDE5XSwxNDY3OlssMjBdLDE0Njg6WywyMV0sMTQ2OTpbLDIyXSwxNDcxOlssMjNdLDE0NzM6WywyNF0sMTQ3NDpbLDI1XSwxNDc2OlssMjMwXSwxNDc3OlssMjIwXSwxNDc5OlssMThdfSwNCjE1MzY6ezE1NTI6WywyMzBdLDE1NTM6WywyMzBdLDE1NTQ6WywyMzBdLDE1NTU6WywyMzBdLDE1NTY6WywyMzBdLDE1NTc6WywyMzBdLDE1NTg6WywyMzBdLDE1NTk6WywyMzBdLDE1NjA6WywzMF0sMTU2MTpbLDMxXSwxNTYyOlssMzJdLDE1NzA6W1sxNTc1LDE2MTldXSwxNTcxOltbMTU3NSwxNjIwXV0sMTU3MjpbWzE2MDgsMTYyMF1dLDE1NzM6W1sxNTc1LDE2MjFdXSwxNTc0OltbMTYxMCwxNjIwXV0sMTU3NTpbLCx7MTYxOToxNTcwLDE2MjA6MTU3MSwxNjIxOjE1NzN9XSwxNjA4OlssLHsxNjIwOjE1NzJ9XSwxNjEwOlssLHsxNjIwOjE1NzR9XSwxNjExOlssMjddLDE2MTI6WywyOF0sMTYxMzpbLDI5XSwxNjE0OlssMzBdLDE2MTU6WywzMV0sMTYxNjpbLDMyXSwxNjE3OlssMzNdLDE2MTg6WywzNF0sMTYxOTpbLDIzMF0sMTYyMDpbLDIzMF0sMTYyMTpbLDIyMF0sMTYyMjpbLDIyMF0sMTYyMzpbLDIzMF0sMTYyNDpbLDIzMF0sMTYyNTpbLDIzMF0sMTYyNjpbLDIzMF0sMTYyNzpbLDIzMF0sMTYyODpbLDIyMF0sMTYyOTpbLDIzMF0sMTYzMDpbLDIzMF0sMTYzMTpbLDIyMF0sMTY0ODpbLDM1XSwxNjUzOltbMTU3NSwxNjUyXSwyNTZdLDE2NTQ6W1sxNjA4LDE2NTJdLDI1Nl0sMTY1NTpbWzE3MzUsMTY1Ml0sMjU2XSwxNjU2OltbMTYxMCwxNjUyXSwyNTZdLDE3Mjg6W1sxNzQ5LDE2MjBdXSwxNzI5OlssLHsxNjIwOjE3MzB9XSwxNzMwOltbMTcyOSwxNjIwXV0sMTc0NjpbLCx7MTYyMDoxNzQ3fV0sMTc0NzpbWzE3NDYsMTYyMF1dLDE3NDk6WywsezE2MjA6MTcyOH1dLDE3NTA6WywyMzBdLDE3NTE6WywyMzBdLDE3NTI6WywyMzBdLDE3NTM6WywyMzBdLDE3NTQ6WywyMzBdLDE3NTU6WywyMzBdLDE3NTY6WywyMzBdLDE3NTk6WywyMzBdLDE3NjA6WywyMzBdLDE3NjE6WywyMzBdLDE3NjI6WywyMzBdLDE3NjM6WywyMjBdLDE3NjQ6WywyMzBdLDE3Njc6WywyMzBdLDE3Njg6WywyMzBdLDE3NzA6WywyMjBdLDE3NzE6WywyMzBdLDE3NzI6WywyMzBdLDE3NzM6WywyMjBdfSwNCjE3OTI6ezE4MDk6WywzNl0sMTg0MDpbLDIzMF0sMTg0MTpbLDIyMF0sMTg0MjpbLDIzMF0sMTg0MzpbLDIzMF0sMTg0NDpbLDIyMF0sMTg0NTpbLDIzMF0sMTg0NjpbLDIzMF0sMTg0NzpbLDIyMF0sMTg0ODpbLDIyMF0sMTg0OTpbLDIyMF0sMTg1MDpbLDIzMF0sMTg1MTpbLDIyMF0sMTg1MjpbLDIyMF0sMTg1MzpbLDIzMF0sMTg1NDpbLDIyMF0sMTg1NTpbLDIzMF0sMTg1NjpbLDIzMF0sMTg1NzpbLDIzMF0sMTg1ODpbLDIyMF0sMTg1OTpbLDIzMF0sMTg2MDpbLDIyMF0sMTg2MTpbLDIzMF0sMTg2MjpbLDIyMF0sMTg2MzpbLDIzMF0sMTg2NDpbLDIyMF0sMTg2NTpbLDIzMF0sMTg2NjpbLDIzMF0sMjAyNzpbLDIzMF0sMjAyODpbLDIzMF0sMjAyOTpbLDIzMF0sMjAzMDpbLDIzMF0sMjAzMTpbLDIzMF0sMjAzMjpbLDIzMF0sMjAzMzpbLDIzMF0sMjAzNDpbLDIyMF0sMjAzNTpbLDIzMF19LA0KMjA0ODp7MjA3MDpbLDIzMF0sMjA3MTpbLDIzMF0sMjA3MjpbLDIzMF0sMjA3MzpbLDIzMF0sMjA3NTpbLDIzMF0sMjA3NjpbLDIzMF0sMjA3NzpbLDIzMF0sMjA3ODpbLDIzMF0sMjA3OTpbLDIzMF0sMjA4MDpbLDIzMF0sMjA4MTpbLDIzMF0sMjA4MjpbLDIzMF0sMjA4MzpbLDIzMF0sMjA4NTpbLDIzMF0sMjA4NjpbLDIzMF0sMjA4NzpbLDIzMF0sMjA4OTpbLDIzMF0sMjA5MDpbLDIzMF0sMjA5MTpbLDIzMF0sMjA5MjpbLDIzMF0sMjA5MzpbLDIzMF0sMjEzNzpbLDIyMF0sMjEzODpbLDIyMF0sMjEzOTpbLDIyMF0sMjI3NjpbLDIzMF0sMjI3NzpbLDIzMF0sMjI3ODpbLDIyMF0sMjI3OTpbLDIzMF0sMjI4MDpbLDIzMF0sMjI4MTpbLDIyMF0sMjI4MjpbLDIzMF0sMjI4MzpbLDIzMF0sMjI4NDpbLDIzMF0sMjI4NTpbLDIyMF0sMjI4NjpbLDIyMF0sMjI4NzpbLDIyMF0sMjI4ODpbLDI3XSwyMjg5OlssMjhdLDIyOTA6WywyOV0sMjI5MTpbLDIzMF0sMjI5MjpbLDIzMF0sMjI5MzpbLDIzMF0sMjI5NDpbLDIyMF0sMjI5NTpbLDIzMF0sMjI5NjpbLDIzMF0sMjI5NzpbLDIyMF0sMjI5ODpbLDIyMF0sMjI5OTpbLDIzMF0sMjMwMDpbLDIzMF0sMjMwMTpbLDIzMF0sMjMwMjpbLDIzMF0sMjMwMzpbLDIzMF19LA0KMjMwNDp7MjM0NDpbLCx7MjM2NDoyMzQ1fV0sMjM0NTpbWzIzNDQsMjM2NF1dLDIzNTI6WywsezIzNjQ6MjM1M31dLDIzNTM6W1syMzUyLDIzNjRdXSwyMzU1OlssLHsyMzY0OjIzNTZ9XSwyMzU2OltbMjM1NSwyMzY0XV0sMjM2NDpbLDddLDIzODE6Wyw5XSwyMzg1OlssMjMwXSwyMzg2OlssMjIwXSwyMzg3OlssMjMwXSwyMzg4OlssMjMwXSwyMzkyOltbMjMyNSwyMzY0XSw1MTJdLDIzOTM6W1syMzI2LDIzNjRdLDUxMl0sMjM5NDpbWzIzMjcsMjM2NF0sNTEyXSwyMzk1OltbMjMzMiwyMzY0XSw1MTJdLDIzOTY6W1syMzM3LDIzNjRdLDUxMl0sMjM5NzpbWzIzMzgsMjM2NF0sNTEyXSwyMzk4OltbMjM0NywyMzY0XSw1MTJdLDIzOTk6W1syMzUxLDIzNjRdLDUxMl0sMjQ5MjpbLDddLDI1MDM6WywsezI0OTQ6MjUwNywyNTE5OjI1MDh9XSwyNTA3OltbMjUwMywyNDk0XV0sMjUwODpbWzI1MDMsMjUxOV1dLDI1MDk6Wyw5XSwyNTI0OltbMjQ2NSwyNDkyXSw1MTJdLDI1MjU6W1syNDY2LDI0OTJdLDUxMl0sMjUyNzpbWzI0NzksMjQ5Ml0sNTEyXX0sDQoyNTYwOnsyNjExOltbMjYxMCwyNjIwXSw1MTJdLDI2MTQ6W1syNjE2LDI2MjBdLDUxMl0sMjYyMDpbLDddLDI2Mzc6Wyw5XSwyNjQ5OltbMjU4MiwyNjIwXSw1MTJdLDI2NTA6W1syNTgzLDI2MjBdLDUxMl0sMjY1MTpbWzI1ODgsMjYyMF0sNTEyXSwyNjU0OltbMjYwMywyNjIwXSw1MTJdLDI3NDg6Wyw3XSwyNzY1OlssOV0sNjgxMDk6WywyMjBdLDY4MTExOlssMjMwXSw2ODE1MjpbLDIzMF0sNjgxNTM6WywxXSw2ODE1NDpbLDIyMF0sNjgxNTk6Wyw5XSw2ODMyNTpbLDIzMF0sNjgzMjY6WywyMjBdfSwNCjI4MTY6ezI4NzY6Wyw3XSwyODg3OlssLHsyODc4OjI4OTEsMjkwMjoyODg4LDI5MDM6Mjg5Mn1dLDI4ODg6W1syODg3LDI5MDJdXSwyODkxOltbMjg4NywyODc4XV0sMjg5MjpbWzI4ODcsMjkwM11dLDI4OTM6Wyw5XSwyOTA4OltbMjg0OSwyODc2XSw1MTJdLDI5MDk6W1syODUwLDI4NzZdLDUxMl0sMjk2MjpbLCx7MzAzMToyOTY0fV0sMjk2NDpbWzI5NjIsMzAzMV1dLDMwMTQ6WywsezMwMDY6MzAxOCwzMDMxOjMwMjB9XSwzMDE1OlssLHszMDA2OjMwMTl9XSwzMDE4OltbMzAxNCwzMDA2XV0sMzAxOTpbWzMwMTUsMzAwNl1dLDMwMjA6W1szMDE0LDMwMzFdXSwzMDIxOlssOV19LA0KMzA3Mjp7MzE0MjpbLCx7MzE1ODozMTQ0fV0sMzE0NDpbWzMxNDIsMzE1OF1dLDMxNDk6Wyw5XSwzMTU3OlssODRdLDMxNTg6Wyw5MV0sMzI2MDpbLDddLDMyNjM6WywsezMyODU6MzI2NH1dLDMyNjQ6W1szMjYzLDMyODVdXSwzMjcwOlssLHszMjY2OjMyNzQsMzI4NTozMjcxLDMyODY6MzI3Mn1dLDMyNzE6W1szMjcwLDMyODVdXSwzMjcyOltbMzI3MCwzMjg2XV0sMzI3NDpbWzMyNzAsMzI2Nl0sLHszMjg1OjMyNzV9XSwzMjc1OltbMzI3NCwzMjg1XV0sMzI3NzpbLDldfSwNCjMzMjg6ezMzOTg6WywsezMzOTA6MzQwMiwzNDE1OjM0MDR9XSwzMzk5OlssLHszMzkwOjM0MDN9XSwzNDAyOltbMzM5OCwzMzkwXV0sMzQwMzpbWzMzOTksMzM5MF1dLDM0MDQ6W1szMzk4LDM0MTVdXSwzNDA1OlssOV0sMzUzMDpbLDldLDM1NDU6WywsezM1MzA6MzU0NiwzNTM1OjM1NDgsMzU1MTozNTUwfV0sMzU0NjpbWzM1NDUsMzUzMF1dLDM1NDg6W1szNTQ1LDM1MzVdLCx7MzUzMDozNTQ5fV0sMzU0OTpbWzM1NDgsMzUzMF1dLDM1NTA6W1szNTQ1LDM1NTFdXX0sDQozNTg0OnszNjM1OltbMzY2MSwzNjM0XSwyNTZdLDM2NDA6WywxMDNdLDM2NDE6WywxMDNdLDM2NDI6Wyw5XSwzNjU2OlssMTA3XSwzNjU3OlssMTA3XSwzNjU4OlssMTA3XSwzNjU5OlssMTA3XSwzNzYzOltbMzc4OSwzNzYyXSwyNTZdLDM3Njg6WywxMThdLDM3Njk6WywxMThdLDM3ODQ6WywxMjJdLDM3ODU6WywxMjJdLDM3ODY6WywxMjJdLDM3ODc6WywxMjJdLDM4MDQ6W1szNzU1LDM3MzddLDI1Nl0sMzgwNTpbWzM3NTUsMzc0NV0sMjU2XX0sDQozODQwOnszODUyOltbMzg1MV0sMjU2XSwzODY0OlssMjIwXSwzODY1OlssMjIwXSwzODkzOlssMjIwXSwzODk1OlssMjIwXSwzODk3OlssMjE2XSwzOTA3OltbMzkwNiw0MDIzXSw1MTJdLDM5MTc6W1szOTE2LDQwMjNdLDUxMl0sMzkyMjpbWzM5MjEsNDAyM10sNTEyXSwzOTI3OltbMzkyNiw0MDIzXSw1MTJdLDM5MzI6W1szOTMxLDQwMjNdLDUxMl0sMzk0NTpbWzM5MDQsNDAyMV0sNTEyXSwzOTUzOlssMTI5XSwzOTU0OlssMTMwXSwzOTU1OltbMzk1MywzOTU0XSw1MTJdLDM5NTY6WywxMzJdLDM5NTc6W1szOTUzLDM5NTZdLDUxMl0sMzk1ODpbWzQwMTgsMzk2OF0sNTEyXSwzOTU5OltbNDAxOCwzOTY5XSwyNTZdLDM5NjA6W1s0MDE5LDM5NjhdLDUxMl0sMzk2MTpbWzQwMTksMzk2OV0sMjU2XSwzOTYyOlssMTMwXSwzOTYzOlssMTMwXSwzOTY0OlssMTMwXSwzOTY1OlssMTMwXSwzOTY4OlssMTMwXSwzOTY5OltbMzk1MywzOTY4XSw1MTJdLDM5NzA6WywyMzBdLDM5NzE6WywyMzBdLDM5NzI6Wyw5XSwzOTc0OlssMjMwXSwzOTc1OlssMjMwXSwzOTg3OltbMzk4Niw0MDIzXSw1MTJdLDM5OTc6W1szOTk2LDQwMjNdLDUxMl0sNDAwMjpbWzQwMDEsNDAyM10sNTEyXSw0MDA3OltbNDAwNiw0MDIzXSw1MTJdLDQwMTI6W1s0MDExLDQwMjNdLDUxMl0sNDAyNTpbWzM5ODQsNDAyMV0sNTEyXSw0MDM4OlssMjIwXX0sDQo0MDk2Ons0MTMzOlssLHs0MTQyOjQxMzR9XSw0MTM0OltbNDEzMyw0MTQyXV0sNDE1MTpbLDddLDQxNTM6Wyw5XSw0MTU0OlssOV0sNDIzNzpbLDIyMF0sNDM0ODpbWzQzMTZdLDI1Nl0sNjk3MDI6Wyw5XSw2OTc1OTpbLDldLDY5Nzg1OlssLHs2OTgxODo2OTc4Nn1dLDY5Nzg2OltbNjk3ODUsNjk4MThdXSw2OTc4NzpbLCx7Njk4MTg6Njk3ODh9XSw2OTc4ODpbWzY5Nzg3LDY5ODE4XV0sNjk3OTc6WywsezY5ODE4OjY5ODAzfV0sNjk4MDM6W1s2OTc5Nyw2OTgxOF1dLDY5ODE3OlssOV0sNjk4MTg6Wyw3XX0sDQo0MzUyOns2OTg4ODpbLDIzMF0sNjk4ODk6WywyMzBdLDY5ODkwOlssMjMwXSw2OTkzNDpbWzY5OTM3LDY5OTI3XV0sNjk5MzU6W1s2OTkzOCw2OTkyN11dLDY5OTM3OlssLHs2OTkyNzo2OTkzNH1dLDY5OTM4OlssLHs2OTkyNzo2OTkzNX1dLDY5OTM5OlssOV0sNjk5NDA6Wyw5XSw3MDAwMzpbLDddLDcwMDgwOlssOV19LA0KNDYwODp7NzAxOTc6Wyw5XSw3MDE5ODpbLDddLDcwMzc3OlssN10sNzAzNzg6Wyw5XX0sDQo0ODY0Ons0OTU3OlssMjMwXSw0OTU4OlssMjMwXSw0OTU5OlssMjMwXSw3MDQ2MDpbLDddLDcwNDcxOlssLHs3MDQ2Mjo3MDQ3NSw3MDQ4Nzo3MDQ3Nn1dLDcwNDc1OltbNzA0NzEsNzA0NjJdXSw3MDQ3NjpbWzcwNDcxLDcwNDg3XV0sNzA0Nzc6Wyw5XSw3MDUwMjpbLDIzMF0sNzA1MDM6WywyMzBdLDcwNTA0OlssMjMwXSw3MDUwNTpbLDIzMF0sNzA1MDY6WywyMzBdLDcwNTA3OlssMjMwXSw3MDUwODpbLDIzMF0sNzA1MTI6WywyMzBdLDcwNTEzOlssMjMwXSw3MDUxNDpbLDIzMF0sNzA1MTU6WywyMzBdLDcwNTE2OlssMjMwXX0sDQo1MTIwOns3MDg0MTpbLCx7NzA4MzI6NzA4NDQsNzA4NDI6NzA4NDMsNzA4NDU6NzA4NDZ9XSw3MDg0MzpbWzcwODQxLDcwODQyXV0sNzA4NDQ6W1s3MDg0MSw3MDgzMl1dLDcwODQ2OltbNzA4NDEsNzA4NDVdXSw3MDg1MDpbLDldLDcwODUxOlssN119LA0KNTM3Njp7NzEwOTY6WywsezcxMDg3OjcxMDk4fV0sNzEwOTc6WywsezcxMDg3OjcxMDk5fV0sNzEwOTg6W1s3MTA5Niw3MTA4N11dLDcxMDk5OltbNzEwOTcsNzEwODddXSw3MTEwMzpbLDldLDcxMTA0OlssN119LA0KNTYzMjp7NzEyMzE6Wyw5XSw3MTM1MDpbLDldLDcxMzUxOlssN119LA0KNTg4ODp7NTkwODpbLDldLDU5NDA6Wyw5XSw2MDk4OlssOV0sNjEwOTpbLDIzMF19LA0KNjE0NDp7NjMxMzpbLDIyOF19LA0KNjQwMDp7NjQ1NzpbLDIyMl0sNjQ1ODpbLDIzMF0sNjQ1OTpbLDIyMF19LA0KNjY1Njp7NjY3OTpbLDIzMF0sNjY4MDpbLDIyMF0sNjc1MjpbLDldLDY3NzM6WywyMzBdLDY3NzQ6WywyMzBdLDY3NzU6WywyMzBdLDY3NzY6WywyMzBdLDY3Nzc6WywyMzBdLDY3Nzg6WywyMzBdLDY3Nzk6WywyMzBdLDY3ODA6WywyMzBdLDY3ODM6WywyMjBdLDY4MzI6WywyMzBdLDY4MzM6WywyMzBdLDY4MzQ6WywyMzBdLDY4MzU6WywyMzBdLDY4MzY6WywyMzBdLDY4Mzc6WywyMjBdLDY4Mzg6WywyMjBdLDY4Mzk6WywyMjBdLDY4NDA6WywyMjBdLDY4NDE6WywyMjBdLDY4NDI6WywyMjBdLDY4NDM6WywyMzBdLDY4NDQ6WywyMzBdLDY4NDU6WywyMjBdfSwNCjY5MTI6ezY5MTc6WywsezY5NjU6NjkxOH1dLDY5MTg6W1s2OTE3LDY5NjVdXSw2OTE5OlssLHs2OTY1OjY5MjB9XSw2OTIwOltbNjkxOSw2OTY1XV0sNjkyMTpbLCx7Njk2NTo2OTIyfV0sNjkyMjpbWzY5MjEsNjk2NV1dLDY5MjM6WywsezY5NjU6NjkyNH1dLDY5MjQ6W1s2OTIzLDY5NjVdXSw2OTI1OlssLHs2OTY1OjY5MjZ9XSw2OTI2OltbNjkyNSw2OTY1XV0sNjkyOTpbLCx7Njk2NTo2OTMwfV0sNjkzMDpbWzY5MjksNjk2NV1dLDY5NjQ6Wyw3XSw2OTcwOlssLHs2OTY1OjY5NzF9XSw2OTcxOltbNjk3MCw2OTY1XV0sNjk3MjpbLCx7Njk2NTo2OTczfV0sNjk3MzpbWzY5NzIsNjk2NV1dLDY5NzQ6WywsezY5NjU6Njk3Nn1dLDY5NzU6WywsezY5NjU6Njk3N31dLDY5NzY6W1s2OTc0LDY5NjVdXSw2OTc3OltbNjk3NSw2OTY1XV0sNjk3ODpbLCx7Njk2NTo2OTc5fV0sNjk3OTpbWzY5NzgsNjk2NV1dLDY5ODA6Wyw5XSw3MDE5OlssMjMwXSw3MDIwOlssMjIwXSw3MDIxOlssMjMwXSw3MDIyOlssMjMwXSw3MDIzOlssMjMwXSw3MDI0OlssMjMwXSw3MDI1OlssMjMwXSw3MDI2OlssMjMwXSw3MDI3OlssMjMwXSw3MDgyOlssOV0sNzA4MzpbLDldLDcxNDI6Wyw3XSw3MTU0OlssOV0sNzE1NTpbLDldfSwNCjcxNjg6ezcyMjM6Wyw3XSw3Mzc2OlssMjMwXSw3Mzc3OlssMjMwXSw3Mzc4OlssMjMwXSw3MzgwOlssMV0sNzM4MTpbLDIyMF0sNzM4MjpbLDIyMF0sNzM4MzpbLDIyMF0sNzM4NDpbLDIyMF0sNzM4NTpbLDIyMF0sNzM4NjpbLDIzMF0sNzM4NzpbLDIzMF0sNzM4ODpbLDIyMF0sNzM4OTpbLDIyMF0sNzM5MDpbLDIyMF0sNzM5MTpbLDIyMF0sNzM5MjpbLDIzMF0sNzM5NDpbLDFdLDczOTU6WywxXSw3Mzk2OlssMV0sNzM5NzpbLDFdLDczOTg6WywxXSw3Mzk5OlssMV0sNzQwMDpbLDFdLDc0MDU6WywyMjBdLDc0MTI6WywyMzBdLDc0MTY6WywyMzBdLDc0MTc6WywyMzBdfSwNCjc0MjQ6ezc0Njg6W1s2NV0sMjU2XSw3NDY5OltbMTk4XSwyNTZdLDc0NzA6W1s2Nl0sMjU2XSw3NDcyOltbNjhdLDI1Nl0sNzQ3MzpbWzY5XSwyNTZdLDc0NzQ6W1szOThdLDI1Nl0sNzQ3NTpbWzcxXSwyNTZdLDc0NzY6W1s3Ml0sMjU2XSw3NDc3OltbNzNdLDI1Nl0sNzQ3ODpbWzc0XSwyNTZdLDc0Nzk6W1s3NV0sMjU2XSw3NDgwOltbNzZdLDI1Nl0sNzQ4MTpbWzc3XSwyNTZdLDc0ODI6W1s3OF0sMjU2XSw3NDg0OltbNzldLDI1Nl0sNzQ4NTpbWzU0Nl0sMjU2XSw3NDg2OltbODBdLDI1Nl0sNzQ4NzpbWzgyXSwyNTZdLDc0ODg6W1s4NF0sMjU2XSw3NDg5OltbODVdLDI1Nl0sNzQ5MDpbWzg3XSwyNTZdLDc0OTE6W1s5N10sMjU2XSw3NDkyOltbNTkyXSwyNTZdLDc0OTM6W1s1OTNdLDI1Nl0sNzQ5NDpbWzc0MjZdLDI1Nl0sNzQ5NTpbWzk4XSwyNTZdLDc0OTY6W1sxMDBdLDI1Nl0sNzQ5NzpbWzEwMV0sMjU2XSw3NDk4OltbNjAxXSwyNTZdLDc0OTk6W1s2MDNdLDI1Nl0sNzUwMDpbWzYwNF0sMjU2XSw3NTAxOltbMTAzXSwyNTZdLDc1MDM6W1sxMDddLDI1Nl0sNzUwNDpbWzEwOV0sMjU2XSw3NTA1OltbMzMxXSwyNTZdLDc1MDY6W1sxMTFdLDI1Nl0sNzUwNzpbWzU5Nl0sMjU2XSw3NTA4OltbNzQ0Nl0sMjU2XSw3NTA5OltbNzQ0N10sMjU2XSw3NTEwOltbMTEyXSwyNTZdLDc1MTE6W1sxMTZdLDI1Nl0sNzUxMjpbWzExN10sMjU2XSw3NTEzOltbNzQ1M10sMjU2XSw3NTE0OltbNjIzXSwyNTZdLDc1MTU6W1sxMThdLDI1Nl0sNzUxNjpbWzc0NjFdLDI1Nl0sNzUxNzpbWzk0Nl0sMjU2XSw3NTE4OltbOTQ3XSwyNTZdLDc1MTk6W1s5NDhdLDI1Nl0sNzUyMDpbWzk2Nl0sMjU2XSw3NTIxOltbOTY3XSwyNTZdLDc1MjI6W1sxMDVdLDI1Nl0sNzUyMzpbWzExNF0sMjU2XSw3NTI0OltbMTE3XSwyNTZdLDc1MjU6W1sxMThdLDI1Nl0sNzUyNjpbWzk0Nl0sMjU2XSw3NTI3OltbOTQ3XSwyNTZdLDc1Mjg6W1s5NjFdLDI1Nl0sNzUyOTpbWzk2Nl0sMjU2XSw3NTMwOltbOTY3XSwyNTZdLDc1NDQ6W1sxMDg1XSwyNTZdLDc1Nzk6W1s1OTRdLDI1Nl0sNzU4MDpbWzk5XSwyNTZdLDc1ODE6W1s1OTddLDI1Nl0sNzU4MjpbWzI0MF0sMjU2XSw3NTgzOltbNjA0XSwyNTZdLDc1ODQ6W1sxMDJdLDI1Nl0sNzU4NTpbWzYwN10sMjU2XSw3NTg2OltbNjA5XSwyNTZdLDc1ODc6W1s2MTNdLDI1Nl0sNzU4ODpbWzYxNl0sMjU2XSw3NTg5OltbNjE3XSwyNTZdLDc1OTA6W1s2MThdLDI1Nl0sNzU5MTpbWzc1NDddLDI1Nl0sNzU5MjpbWzY2OV0sMjU2XSw3NTkzOltbNjIxXSwyNTZdLDc1OTQ6W1s3NTU3XSwyNTZdLDc1OTU6W1s2NzFdLDI1Nl0sNzU5NjpbWzYyNV0sMjU2XSw3NTk3OltbNjI0XSwyNTZdLDc1OTg6W1s2MjZdLDI1Nl0sNzU5OTpbWzYyN10sMjU2XSw3NjAwOltbNjI4XSwyNTZdLDc2MDE6W1s2MjldLDI1Nl0sNzYwMjpbWzYzMl0sMjU2XSw3NjAzOltbNjQyXSwyNTZdLDc2MDQ6W1s2NDNdLDI1Nl0sNzYwNTpbWzQyN10sMjU2XSw3NjA2OltbNjQ5XSwyNTZdLDc2MDc6W1s2NTBdLDI1Nl0sNzYwODpbWzc0NTJdLDI1Nl0sNzYwOTpbWzY1MV0sMjU2XSw3NjEwOltbNjUyXSwyNTZdLDc2MTE6W1sxMjJdLDI1Nl0sNzYxMjpbWzY1Nl0sMjU2XSw3NjEzOltbNjU3XSwyNTZdLDc2MTQ6W1s2NThdLDI1Nl0sNzYxNTpbWzk1Ml0sMjU2XSw3NjE2OlssMjMwXSw3NjE3OlssMjMwXSw3NjE4OlssMjIwXSw3NjE5OlssMjMwXSw3NjIwOlssMjMwXSw3NjIxOlssMjMwXSw3NjIyOlssMjMwXSw3NjIzOlssMjMwXSw3NjI0OlssMjMwXSw3NjI1OlssMjMwXSw3NjI2OlssMjIwXSw3NjI3OlssMjMwXSw3NjI4OlssMjMwXSw3NjI5OlssMjM0XSw3NjMwOlssMjE0XSw3NjMxOlssMjIwXSw3NjMyOlssMjAyXSw3NjMzOlssMjMwXSw3NjM0OlssMjMwXSw3NjM1OlssMjMwXSw3NjM2OlssMjMwXSw3NjM3OlssMjMwXSw3NjM4OlssMjMwXSw3NjM5OlssMjMwXSw3NjQwOlssMjMwXSw3NjQxOlssMjMwXSw3NjQyOlssMjMwXSw3NjQzOlssMjMwXSw3NjQ0OlssMjMwXSw3NjQ1OlssMjMwXSw3NjQ2OlssMjMwXSw3NjQ3OlssMjMwXSw3NjQ4OlssMjMwXSw3NjQ5OlssMjMwXSw3NjUwOlssMjMwXSw3NjUxOlssMjMwXSw3NjUyOlssMjMwXSw3NjUzOlssMjMwXSw3NjU0OlssMjMwXSw3NjU1OlssMjMwXSw3NjU2OlssMjMwXSw3NjU3OlssMjMwXSw3NjU4OlssMjMwXSw3NjU5OlssMjMwXSw3NjYwOlssMjMwXSw3NjYxOlssMjMwXSw3NjYyOlssMjMwXSw3NjYzOlssMjMwXSw3NjY0OlssMjMwXSw3NjY1OlssMjMwXSw3NjY2OlssMjMwXSw3NjY3OlssMjMwXSw3NjY4OlssMjMwXSw3NjY5OlssMjMwXSw3Njc2OlssMjMzXSw3Njc3OlssMjIwXSw3Njc4OlssMjMwXSw3Njc5OlssMjIwXX0sDQo3NjgwOns3NjgwOltbNjUsODA1XV0sNzY4MTpbWzk3LDgwNV1dLDc2ODI6W1s2Niw3NzVdXSw3NjgzOltbOTgsNzc1XV0sNzY4NDpbWzY2LDgwM11dLDc2ODU6W1s5OCw4MDNdXSw3Njg2OltbNjYsODE3XV0sNzY4NzpbWzk4LDgxN11dLDc2ODg6W1sxOTksNzY5XV0sNzY4OTpbWzIzMSw3NjldXSw3NjkwOltbNjgsNzc1XV0sNzY5MTpbWzEwMCw3NzVdXSw3NjkyOltbNjgsODAzXV0sNzY5MzpbWzEwMCw4MDNdXSw3Njk0OltbNjgsODE3XV0sNzY5NTpbWzEwMCw4MTddXSw3Njk2OltbNjgsODA3XV0sNzY5NzpbWzEwMCw4MDddXSw3Njk4OltbNjgsODEzXV0sNzY5OTpbWzEwMCw4MTNdXSw3NzAwOltbMjc0LDc2OF1dLDc3MDE6W1syNzUsNzY4XV0sNzcwMjpbWzI3NCw3NjldXSw3NzAzOltbMjc1LDc2OV1dLDc3MDQ6W1s2OSw4MTNdXSw3NzA1OltbMTAxLDgxM11dLDc3MDY6W1s2OSw4MTZdXSw3NzA3OltbMTAxLDgxNl1dLDc3MDg6W1s1NTIsNzc0XV0sNzcwOTpbWzU1Myw3NzRdXSw3NzEwOltbNzAsNzc1XV0sNzcxMTpbWzEwMiw3NzVdXSw3NzEyOltbNzEsNzcyXV0sNzcxMzpbWzEwMyw3NzJdXSw3NzE0OltbNzIsNzc1XV0sNzcxNTpbWzEwNCw3NzVdXSw3NzE2OltbNzIsODAzXV0sNzcxNzpbWzEwNCw4MDNdXSw3NzE4OltbNzIsNzc2XV0sNzcxOTpbWzEwNCw3NzZdXSw3NzIwOltbNzIsODA3XV0sNzcyMTpbWzEwNCw4MDddXSw3NzIyOltbNzIsODE0XV0sNzcyMzpbWzEwNCw4MTRdXSw3NzI0OltbNzMsODE2XV0sNzcyNTpbWzEwNSw4MTZdXSw3NzI2OltbMjA3LDc2OV1dLDc3Mjc6W1syMzksNzY5XV0sNzcyODpbWzc1LDc2OV1dLDc3Mjk6W1sxMDcsNzY5XV0sNzczMDpbWzc1LDgwM11dLDc3MzE6W1sxMDcsODAzXV0sNzczMjpbWzc1LDgxN11dLDc3MzM6W1sxMDcsODE3XV0sNzczNDpbWzc2LDgwM10sLHs3NzI6NzczNn1dLDc3MzU6W1sxMDgsODAzXSwsezc3Mjo3NzM3fV0sNzczNjpbWzc3MzQsNzcyXV0sNzczNzpbWzc3MzUsNzcyXV0sNzczODpbWzc2LDgxN11dLDc3Mzk6W1sxMDgsODE3XV0sNzc0MDpbWzc2LDgxM11dLDc3NDE6W1sxMDgsODEzXV0sNzc0MjpbWzc3LDc2OV1dLDc3NDM6W1sxMDksNzY5XV0sNzc0NDpbWzc3LDc3NV1dLDc3NDU6W1sxMDksNzc1XV0sNzc0NjpbWzc3LDgwM11dLDc3NDc6W1sxMDksODAzXV0sNzc0ODpbWzc4LDc3NV1dLDc3NDk6W1sxMTAsNzc1XV0sNzc1MDpbWzc4LDgwM11dLDc3NTE6W1sxMTAsODAzXV0sNzc1MjpbWzc4LDgxN11dLDc3NTM6W1sxMTAsODE3XV0sNzc1NDpbWzc4LDgxM11dLDc3NTU6W1sxMTAsODEzXV0sNzc1NjpbWzIxMyw3NjldXSw3NzU3OltbMjQ1LDc2OV1dLDc3NTg6W1syMTMsNzc2XV0sNzc1OTpbWzI0NSw3NzZdXSw3NzYwOltbMzMyLDc2OF1dLDc3NjE6W1szMzMsNzY4XV0sNzc2MjpbWzMzMiw3NjldXSw3NzYzOltbMzMzLDc2OV1dLDc3NjQ6W1s4MCw3NjldXSw3NzY1OltbMTEyLDc2OV1dLDc3NjY6W1s4MCw3NzVdXSw3NzY3OltbMTEyLDc3NV1dLDc3Njg6W1s4Miw3NzVdXSw3NzY5OltbMTE0LDc3NV1dLDc3NzA6W1s4Miw4MDNdLCx7NzcyOjc3NzJ9XSw3NzcxOltbMTE0LDgwM10sLHs3NzI6Nzc3M31dLDc3NzI6W1s3NzcwLDc3Ml1dLDc3NzM6W1s3NzcxLDc3Ml1dLDc3NzQ6W1s4Miw4MTddXSw3Nzc1OltbMTE0LDgxN11dLDc3NzY6W1s4Myw3NzVdXSw3Nzc3OltbMTE1LDc3NV1dLDc3Nzg6W1s4Myw4MDNdLCx7Nzc1Ojc3ODR9XSw3Nzc5OltbMTE1LDgwM10sLHs3NzU6Nzc4NX1dLDc3ODA6W1szNDYsNzc1XV0sNzc4MTpbWzM0Nyw3NzVdXSw3NzgyOltbMzUyLDc3NV1dLDc3ODM6W1szNTMsNzc1XV0sNzc4NDpbWzc3NzgsNzc1XV0sNzc4NTpbWzc3NzksNzc1XV0sNzc4NjpbWzg0LDc3NV1dLDc3ODc6W1sxMTYsNzc1XV0sNzc4ODpbWzg0LDgwM11dLDc3ODk6W1sxMTYsODAzXV0sNzc5MDpbWzg0LDgxN11dLDc3OTE6W1sxMTYsODE3XV0sNzc5MjpbWzg0LDgxM11dLDc3OTM6W1sxMTYsODEzXV0sNzc5NDpbWzg1LDgwNF1dLDc3OTU6W1sxMTcsODA0XV0sNzc5NjpbWzg1LDgxNl1dLDc3OTc6W1sxMTcsODE2XV0sNzc5ODpbWzg1LDgxM11dLDc3OTk6W1sxMTcsODEzXV0sNzgwMDpbWzM2MCw3NjldXSw3ODAxOltbMzYxLDc2OV1dLDc4MDI6W1szNjIsNzc2XV0sNzgwMzpbWzM2Myw3NzZdXSw3ODA0OltbODYsNzcxXV0sNzgwNTpbWzExOCw3NzFdXSw3ODA2OltbODYsODAzXV0sNzgwNzpbWzExOCw4MDNdXSw3ODA4OltbODcsNzY4XV0sNzgwOTpbWzExOSw3NjhdXSw3ODEwOltbODcsNzY5XV0sNzgxMTpbWzExOSw3NjldXSw3ODEyOltbODcsNzc2XV0sNzgxMzpbWzExOSw3NzZdXSw3ODE0OltbODcsNzc1XV0sNzgxNTpbWzExOSw3NzVdXSw3ODE2OltbODcsODAzXV0sNzgxNzpbWzExOSw4MDNdXSw3ODE4OltbODgsNzc1XV0sNzgxOTpbWzEyMCw3NzVdXSw3ODIwOltbODgsNzc2XV0sNzgyMTpbWzEyMCw3NzZdXSw3ODIyOltbODksNzc1XV0sNzgyMzpbWzEyMSw3NzVdXSw3ODI0OltbOTAsNzcwXV0sNzgyNTpbWzEyMiw3NzBdXSw3ODI2OltbOTAsODAzXV0sNzgyNzpbWzEyMiw4MDNdXSw3ODI4OltbOTAsODE3XV0sNzgyOTpbWzEyMiw4MTddXSw3ODMwOltbMTA0LDgxN11dLDc4MzE6W1sxMTYsNzc2XV0sNzgzMjpbWzExOSw3NzhdXSw3ODMzOltbMTIxLDc3OF1dLDc4MzQ6W1s5Nyw3MDJdLDI1Nl0sNzgzNTpbWzM4Myw3NzVdXSw3ODQwOltbNjUsODAzXSwsezc3MDo3ODUyLDc3NDo3ODYyfV0sNzg0MTpbWzk3LDgwM10sLHs3NzA6Nzg1Myw3NzQ6Nzg2M31dLDc4NDI6W1s2NSw3NzddXSw3ODQzOltbOTcsNzc3XV0sNzg0NDpbWzE5NCw3NjldXSw3ODQ1OltbMjI2LDc2OV1dLDc4NDY6W1sxOTQsNzY4XV0sNzg0NzpbWzIyNiw3NjhdXSw3ODQ4OltbMTk0LDc3N11dLDc4NDk6W1syMjYsNzc3XV0sNzg1MDpbWzE5NCw3NzFdXSw3ODUxOltbMjI2LDc3MV1dLDc4NTI6W1s3ODQwLDc3MF1dLDc4NTM6W1s3ODQxLDc3MF1dLDc4NTQ6W1syNTgsNzY5XV0sNzg1NTpbWzI1OSw3NjldXSw3ODU2OltbMjU4LDc2OF1dLDc4NTc6W1syNTksNzY4XV0sNzg1ODpbWzI1OCw3NzddXSw3ODU5OltbMjU5LDc3N11dLDc4NjA6W1syNTgsNzcxXV0sNzg2MTpbWzI1OSw3NzFdXSw3ODYyOltbNzg0MCw3NzRdXSw3ODYzOltbNzg0MSw3NzRdXSw3ODY0OltbNjksODAzXSwsezc3MDo3ODc4fV0sNzg2NTpbWzEwMSw4MDNdLCx7NzcwOjc4Nzl9XSw3ODY2OltbNjksNzc3XV0sNzg2NzpbWzEwMSw3NzddXSw3ODY4OltbNjksNzcxXV0sNzg2OTpbWzEwMSw3NzFdXSw3ODcwOltbMjAyLDc2OV1dLDc4NzE6W1syMzQsNzY5XV0sNzg3MjpbWzIwMiw3NjhdXSw3ODczOltbMjM0LDc2OF1dLDc4NzQ6W1syMDIsNzc3XV0sNzg3NTpbWzIzNCw3NzddXSw3ODc2OltbMjAyLDc3MV1dLDc4Nzc6W1syMzQsNzcxXV0sNzg3ODpbWzc4NjQsNzcwXV0sNzg3OTpbWzc4NjUsNzcwXV0sNzg4MDpbWzczLDc3N11dLDc4ODE6W1sxMDUsNzc3XV0sNzg4MjpbWzczLDgwM11dLDc4ODM6W1sxMDUsODAzXV0sNzg4NDpbWzc5LDgwM10sLHs3NzA6Nzg5Nn1dLDc4ODU6W1sxMTEsODAzXSwsezc3MDo3ODk3fV0sNzg4NjpbWzc5LDc3N11dLDc4ODc6W1sxMTEsNzc3XV0sNzg4ODpbWzIxMiw3NjldXSw3ODg5OltbMjQ0LDc2OV1dLDc4OTA6W1syMTIsNzY4XV0sNzg5MTpbWzI0NCw3NjhdXSw3ODkyOltbMjEyLDc3N11dLDc4OTM6W1syNDQsNzc3XV0sNzg5NDpbWzIxMiw3NzFdXSw3ODk1OltbMjQ0LDc3MV1dLDc4OTY6W1s3ODg0LDc3MF1dLDc4OTc6W1s3ODg1LDc3MF1dLDc4OTg6W1s0MTYsNzY5XV0sNzg5OTpbWzQxNyw3NjldXSw3OTAwOltbNDE2LDc2OF1dLDc5MDE6W1s0MTcsNzY4XV0sNzkwMjpbWzQxNiw3NzddXSw3OTAzOltbNDE3LDc3N11dLDc5MDQ6W1s0MTYsNzcxXV0sNzkwNTpbWzQxNyw3NzFdXSw3OTA2OltbNDE2LDgwM11dLDc5MDc6W1s0MTcsODAzXV0sNzkwODpbWzg1LDgwM11dLDc5MDk6W1sxMTcsODAzXV0sNzkxMDpbWzg1LDc3N11dLDc5MTE6W1sxMTcsNzc3XV0sNzkxMjpbWzQzMSw3NjldXSw3OTEzOltbNDMyLDc2OV1dLDc5MTQ6W1s0MzEsNzY4XV0sNzkxNTpbWzQzMiw3NjhdXSw3OTE2OltbNDMxLDc3N11dLDc5MTc6W1s0MzIsNzc3XV0sNzkxODpbWzQzMSw3NzFdXSw3OTE5OltbNDMyLDc3MV1dLDc5MjA6W1s0MzEsODAzXV0sNzkyMTpbWzQzMiw4MDNdXSw3OTIyOltbODksNzY4XV0sNzkyMzpbWzEyMSw3NjhdXSw3OTI0OltbODksODAzXV0sNzkyNTpbWzEyMSw4MDNdXSw3OTI2OltbODksNzc3XV0sNzkyNzpbWzEyMSw3NzddXSw3OTI4OltbODksNzcxXV0sNzkyOTpbWzEyMSw3NzFdXX0sDQo3OTM2Ons3OTM2OltbOTQ1LDc4N10sLHs3Njg6NzkzOCw3Njk6Nzk0MCw4MzQ6Nzk0Miw4Mzc6ODA2NH1dLDc5Mzc6W1s5NDUsNzg4XSwsezc2ODo3OTM5LDc2OTo3OTQxLDgzNDo3OTQzLDgzNzo4MDY1fV0sNzkzODpbWzc5MzYsNzY4XSwsezgzNzo4MDY2fV0sNzkzOTpbWzc5MzcsNzY4XSwsezgzNzo4MDY3fV0sNzk0MDpbWzc5MzYsNzY5XSwsezgzNzo4MDY4fV0sNzk0MTpbWzc5MzcsNzY5XSwsezgzNzo4MDY5fV0sNzk0MjpbWzc5MzYsODM0XSwsezgzNzo4MDcwfV0sNzk0MzpbWzc5MzcsODM0XSwsezgzNzo4MDcxfV0sNzk0NDpbWzkxMyw3ODddLCx7NzY4Ojc5NDYsNzY5Ojc5NDgsODM0Ojc5NTAsODM3OjgwNzJ9XSw3OTQ1OltbOTEzLDc4OF0sLHs3Njg6Nzk0Nyw3Njk6Nzk0OSw4MzQ6Nzk1MSw4Mzc6ODA3M31dLDc5NDY6W1s3OTQ0LDc2OF0sLHs4Mzc6ODA3NH1dLDc5NDc6W1s3OTQ1LDc2OF0sLHs4Mzc6ODA3NX1dLDc5NDg6W1s3OTQ0LDc2OV0sLHs4Mzc6ODA3Nn1dLDc5NDk6W1s3OTQ1LDc2OV0sLHs4Mzc6ODA3N31dLDc5NTA6W1s3OTQ0LDgzNF0sLHs4Mzc6ODA3OH1dLDc5NTE6W1s3OTQ1LDgzNF0sLHs4Mzc6ODA3OX1dLDc5NTI6W1s5NDksNzg3XSwsezc2ODo3OTU0LDc2OTo3OTU2fV0sNzk1MzpbWzk0OSw3ODhdLCx7NzY4Ojc5NTUsNzY5Ojc5NTd9XSw3OTU0OltbNzk1Miw3NjhdXSw3OTU1OltbNzk1Myw3NjhdXSw3OTU2OltbNzk1Miw3NjldXSw3OTU3OltbNzk1Myw3NjldXSw3OTYwOltbOTE3LDc4N10sLHs3Njg6Nzk2Miw3Njk6Nzk2NH1dLDc5NjE6W1s5MTcsNzg4XSwsezc2ODo3OTYzLDc2OTo3OTY1fV0sNzk2MjpbWzc5NjAsNzY4XV0sNzk2MzpbWzc5NjEsNzY4XV0sNzk2NDpbWzc5NjAsNzY5XV0sNzk2NTpbWzc5NjEsNzY5XV0sNzk2ODpbWzk1MSw3ODddLCx7NzY4Ojc5NzAsNzY5Ojc5NzIsODM0Ojc5NzQsODM3OjgwODB9XSw3OTY5OltbOTUxLDc4OF0sLHs3Njg6Nzk3MSw3Njk6Nzk3Myw4MzQ6Nzk3NSw4Mzc6ODA4MX1dLDc5NzA6W1s3OTY4LDc2OF0sLHs4Mzc6ODA4Mn1dLDc5NzE6W1s3OTY5LDc2OF0sLHs4Mzc6ODA4M31dLDc5NzI6W1s3OTY4LDc2OV0sLHs4Mzc6ODA4NH1dLDc5NzM6W1s3OTY5LDc2OV0sLHs4Mzc6ODA4NX1dLDc5NzQ6W1s3OTY4LDgzNF0sLHs4Mzc6ODA4Nn1dLDc5NzU6W1s3OTY5LDgzNF0sLHs4Mzc6ODA4N31dLDc5NzY6W1s5MTksNzg3XSwsezc2ODo3OTc4LDc2OTo3OTgwLDgzNDo3OTgyLDgzNzo4MDg4fV0sNzk3NzpbWzkxOSw3ODhdLCx7NzY4Ojc5NzksNzY5Ojc5ODEsODM0Ojc5ODMsODM3OjgwODl9XSw3OTc4OltbNzk3Niw3NjhdLCx7ODM3OjgwOTB9XSw3OTc5OltbNzk3Nyw3NjhdLCx7ODM3OjgwOTF9XSw3OTgwOltbNzk3Niw3NjldLCx7ODM3OjgwOTJ9XSw3OTgxOltbNzk3Nyw3NjldLCx7ODM3OjgwOTN9XSw3OTgyOltbNzk3Niw4MzRdLCx7ODM3OjgwOTR9XSw3OTgzOltbNzk3Nyw4MzRdLCx7ODM3OjgwOTV9XSw3OTg0OltbOTUzLDc4N10sLHs3Njg6Nzk4Niw3Njk6Nzk4OCw4MzQ6Nzk5MH1dLDc5ODU6W1s5NTMsNzg4XSwsezc2ODo3OTg3LDc2OTo3OTg5LDgzNDo3OTkxfV0sNzk4NjpbWzc5ODQsNzY4XV0sNzk4NzpbWzc5ODUsNzY4XV0sNzk4ODpbWzc5ODQsNzY5XV0sNzk4OTpbWzc5ODUsNzY5XV0sNzk5MDpbWzc5ODQsODM0XV0sNzk5MTpbWzc5ODUsODM0XV0sNzk5MjpbWzkyMSw3ODddLCx7NzY4Ojc5OTQsNzY5Ojc5OTYsODM0Ojc5OTh9XSw3OTkzOltbOTIxLDc4OF0sLHs3Njg6Nzk5NSw3Njk6Nzk5Nyw4MzQ6Nzk5OX1dLDc5OTQ6W1s3OTkyLDc2OF1dLDc5OTU6W1s3OTkzLDc2OF1dLDc5OTY6W1s3OTkyLDc2OV1dLDc5OTc6W1s3OTkzLDc2OV1dLDc5OTg6W1s3OTkyLDgzNF1dLDc5OTk6W1s3OTkzLDgzNF1dLDgwMDA6W1s5NTksNzg3XSwsezc2ODo4MDAyLDc2OTo4MDA0fV0sODAwMTpbWzk1OSw3ODhdLCx7NzY4OjgwMDMsNzY5OjgwMDV9XSw4MDAyOltbODAwMCw3NjhdXSw4MDAzOltbODAwMSw3NjhdXSw4MDA0OltbODAwMCw3NjldXSw4MDA1OltbODAwMSw3NjldXSw4MDA4OltbOTI3LDc4N10sLHs3Njg6ODAxMCw3Njk6ODAxMn1dLDgwMDk6W1s5MjcsNzg4XSwsezc2ODo4MDExLDc2OTo4MDEzfV0sODAxMDpbWzgwMDgsNzY4XV0sODAxMTpbWzgwMDksNzY4XV0sODAxMjpbWzgwMDgsNzY5XV0sODAxMzpbWzgwMDksNzY5XV0sODAxNjpbWzk2NSw3ODddLCx7NzY4OjgwMTgsNzY5OjgwMjAsODM0OjgwMjJ9XSw4MDE3OltbOTY1LDc4OF0sLHs3Njg6ODAxOSw3Njk6ODAyMSw4MzQ6ODAyM31dLDgwMTg6W1s4MDE2LDc2OF1dLDgwMTk6W1s4MDE3LDc2OF1dLDgwMjA6W1s4MDE2LDc2OV1dLDgwMjE6W1s4MDE3LDc2OV1dLDgwMjI6W1s4MDE2LDgzNF1dLDgwMjM6W1s4MDE3LDgzNF1dLDgwMjU6W1s5MzMsNzg4XSwsezc2ODo4MDI3LDc2OTo4MDI5LDgzNDo4MDMxfV0sODAyNzpbWzgwMjUsNzY4XV0sODAyOTpbWzgwMjUsNzY5XV0sODAzMTpbWzgwMjUsODM0XV0sODAzMjpbWzk2OSw3ODddLCx7NzY4OjgwMzQsNzY5OjgwMzYsODM0OjgwMzgsODM3OjgwOTZ9XSw4MDMzOltbOTY5LDc4OF0sLHs3Njg6ODAzNSw3Njk6ODAzNyw4MzQ6ODAzOSw4Mzc6ODA5N31dLDgwMzQ6W1s4MDMyLDc2OF0sLHs4Mzc6ODA5OH1dLDgwMzU6W1s4MDMzLDc2OF0sLHs4Mzc6ODA5OX1dLDgwMzY6W1s4MDMyLDc2OV0sLHs4Mzc6ODEwMH1dLDgwMzc6W1s4MDMzLDc2OV0sLHs4Mzc6ODEwMX1dLDgwMzg6W1s4MDMyLDgzNF0sLHs4Mzc6ODEwMn1dLDgwMzk6W1s4MDMzLDgzNF0sLHs4Mzc6ODEwM31dLDgwNDA6W1s5MzcsNzg3XSwsezc2ODo4MDQyLDc2OTo4MDQ0LDgzNDo4MDQ2LDgzNzo4MTA0fV0sODA0MTpbWzkzNyw3ODhdLCx7NzY4OjgwNDMsNzY5OjgwNDUsODM0OjgwNDcsODM3OjgxMDV9XSw4MDQyOltbODA0MCw3NjhdLCx7ODM3OjgxMDZ9XSw4MDQzOltbODA0MSw3NjhdLCx7ODM3OjgxMDd9XSw4MDQ0OltbODA0MCw3NjldLCx7ODM3OjgxMDh9XSw4MDQ1OltbODA0MSw3NjldLCx7ODM3OjgxMDl9XSw4MDQ2OltbODA0MCw4MzRdLCx7ODM3OjgxMTB9XSw4MDQ3OltbODA0MSw4MzRdLCx7ODM3OjgxMTF9XSw4MDQ4OltbOTQ1LDc2OF0sLHs4Mzc6ODExNH1dLDgwNDk6W1s5NDBdXSw4MDUwOltbOTQ5LDc2OF1dLDgwNTE6W1s5NDFdXSw4MDUyOltbOTUxLDc2OF0sLHs4Mzc6ODEzMH1dLDgwNTM6W1s5NDJdXSw4MDU0OltbOTUzLDc2OF1dLDgwNTU6W1s5NDNdXSw4MDU2OltbOTU5LDc2OF1dLDgwNTc6W1s5NzJdXSw4MDU4OltbOTY1LDc2OF1dLDgwNTk6W1s5NzNdXSw4MDYwOltbOTY5LDc2OF0sLHs4Mzc6ODE3OH1dLDgwNjE6W1s5NzRdXSw4MDY0OltbNzkzNiw4MzddXSw4MDY1OltbNzkzNyw4MzddXSw4MDY2OltbNzkzOCw4MzddXSw4MDY3OltbNzkzOSw4MzddXSw4MDY4OltbNzk0MCw4MzddXSw4MDY5OltbNzk0MSw4MzddXSw4MDcwOltbNzk0Miw4MzddXSw4MDcxOltbNzk0Myw4MzddXSw4MDcyOltbNzk0NCw4MzddXSw4MDczOltbNzk0NSw4MzddXSw4MDc0OltbNzk0Niw4MzddXSw4MDc1OltbNzk0Nyw4MzddXSw4MDc2OltbNzk0OCw4MzddXSw4MDc3OltbNzk0OSw4MzddXSw4MDc4OltbNzk1MCw4MzddXSw4MDc5OltbNzk1MSw4MzddXSw4MDgwOltbNzk2OCw4MzddXSw4MDgxOltbNzk2OSw4MzddXSw4MDgyOltbNzk3MCw4MzddXSw4MDgzOltbNzk3MSw4MzddXSw4MDg0OltbNzk3Miw4MzddXSw4MDg1OltbNzk3Myw4MzddXSw4MDg2OltbNzk3NCw4MzddXSw4MDg3OltbNzk3NSw4MzddXSw4MDg4OltbNzk3Niw4MzddXSw4MDg5OltbNzk3Nyw4MzddXSw4MDkwOltbNzk3OCw4MzddXSw4MDkxOltbNzk3OSw4MzddXSw4MDkyOltbNzk4MCw4MzddXSw4MDkzOltbNzk4MSw4MzddXSw4MDk0OltbNzk4Miw4MzddXSw4MDk1OltbNzk4Myw4MzddXSw4MDk2OltbODAzMiw4MzddXSw4MDk3OltbODAzMyw4MzddXSw4MDk4OltbODAzNCw4MzddXSw4MDk5OltbODAzNSw4MzddXSw4MTAwOltbODAzNiw4MzddXSw4MTAxOltbODAzNyw4MzddXSw4MTAyOltbODAzOCw4MzddXSw4MTAzOltbODAzOSw4MzddXSw4MTA0OltbODA0MCw4MzddXSw4MTA1OltbODA0MSw4MzddXSw4MTA2OltbODA0Miw4MzddXSw4MTA3OltbODA0Myw4MzddXSw4MTA4OltbODA0NCw4MzddXSw4MTA5OltbODA0NSw4MzddXSw4MTEwOltbODA0Niw4MzddXSw4MTExOltbODA0Nyw4MzddXSw4MTEyOltbOTQ1LDc3NF1dLDgxMTM6W1s5NDUsNzcyXV0sODExNDpbWzgwNDgsODM3XV0sODExNTpbWzk0NSw4MzddXSw4MTE2OltbOTQwLDgzN11dLDgxMTg6W1s5NDUsODM0XSwsezgzNzo4MTE5fV0sODExOTpbWzgxMTgsODM3XV0sODEyMDpbWzkxMyw3NzRdXSw4MTIxOltbOTEzLDc3Ml1dLDgxMjI6W1s5MTMsNzY4XV0sODEyMzpbWzkwMl1dLDgxMjQ6W1s5MTMsODM3XV0sODEyNTpbWzMyLDc4N10sMjU2XSw4MTI2OltbOTUzXV0sODEyNzpbWzMyLDc4N10sMjU2LHs3Njg6ODE0MSw3Njk6ODE0Miw4MzQ6ODE0M31dLDgxMjg6W1szMiw4MzRdLDI1Nl0sODEyOTpbWzE2OCw4MzRdXSw4MTMwOltbODA1Miw4MzddXSw4MTMxOltbOTUxLDgzN11dLDgxMzI6W1s5NDIsODM3XV0sODEzNDpbWzk1MSw4MzRdLCx7ODM3OjgxMzV9XSw4MTM1OltbODEzNCw4MzddXSw4MTM2OltbOTE3LDc2OF1dLDgxMzc6W1s5MDRdXSw4MTM4OltbOTE5LDc2OF1dLDgxMzk6W1s5MDVdXSw4MTQwOltbOTE5LDgzN11dLDgxNDE6W1s4MTI3LDc2OF1dLDgxNDI6W1s4MTI3LDc2OV1dLDgxNDM6W1s4MTI3LDgzNF1dLDgxNDQ6W1s5NTMsNzc0XV0sODE0NTpbWzk1Myw3NzJdXSw4MTQ2OltbOTcwLDc2OF1dLDgxNDc6W1s5MTJdXSw4MTUwOltbOTUzLDgzNF1dLDgxNTE6W1s5NzAsODM0XV0sODE1MjpbWzkyMSw3NzRdXSw4MTUzOltbOTIxLDc3Ml1dLDgxNTQ6W1s5MjEsNzY4XV0sODE1NTpbWzkwNl1dLDgxNTc6W1s4MTkwLDc2OF1dLDgxNTg6W1s4MTkwLDc2OV1dLDgxNTk6W1s4MTkwLDgzNF1dLDgxNjA6W1s5NjUsNzc0XV0sODE2MTpbWzk2NSw3NzJdXSw4MTYyOltbOTcxLDc2OF1dLDgxNjM6W1s5NDRdXSw4MTY0OltbOTYxLDc4N11dLDgxNjU6W1s5NjEsNzg4XV0sODE2NjpbWzk2NSw4MzRdXSw4MTY3OltbOTcxLDgzNF1dLDgxNjg6W1s5MzMsNzc0XV0sODE2OTpbWzkzMyw3NzJdXSw4MTcwOltbOTMzLDc2OF1dLDgxNzE6W1s5MTBdXSw4MTcyOltbOTI5LDc4OF1dLDgxNzM6W1sxNjgsNzY4XV0sODE3NDpbWzkwMV1dLDgxNzU6W1s5Nl1dLDgxNzg6W1s4MDYwLDgzN11dLDgxNzk6W1s5NjksODM3XV0sODE4MDpbWzk3NCw4MzddXSw4MTgyOltbOTY5LDgzNF0sLHs4Mzc6ODE4M31dLDgxODM6W1s4MTgyLDgzN11dLDgxODQ6W1s5MjcsNzY4XV0sODE4NTpbWzkwOF1dLDgxODY6W1s5MzcsNzY4XV0sODE4NzpbWzkxMV1dLDgxODg6W1s5MzcsODM3XV0sODE4OTpbWzE4MF1dLDgxOTA6W1szMiw3ODhdLDI1Nix7NzY4OjgxNTcsNzY5OjgxNTgsODM0OjgxNTl9XX0sDQo4MTkyOns4MTkyOltbODE5NF1dLDgxOTM6W1s4MTk1XV0sODE5NDpbWzMyXSwyNTZdLDgxOTU6W1szMl0sMjU2XSw4MTk2OltbMzJdLDI1Nl0sODE5NzpbWzMyXSwyNTZdLDgxOTg6W1szMl0sMjU2XSw4MTk5OltbMzJdLDI1Nl0sODIwMDpbWzMyXSwyNTZdLDgyMDE6W1szMl0sMjU2XSw4MjAyOltbMzJdLDI1Nl0sODIwOTpbWzgyMDhdLDI1Nl0sODIxNTpbWzMyLDgxOV0sMjU2XSw4MjI4OltbNDZdLDI1Nl0sODIyOTpbWzQ2LDQ2XSwyNTZdLDgyMzA6W1s0Niw0Niw0Nl0sMjU2XSw4MjM5OltbMzJdLDI1Nl0sODI0MzpbWzgyNDIsODI0Ml0sMjU2XSw4MjQ0OltbODI0Miw4MjQyLDgyNDJdLDI1Nl0sODI0NjpbWzgyNDUsODI0NV0sMjU2XSw4MjQ3OltbODI0NSw4MjQ1LDgyNDVdLDI1Nl0sODI1MjpbWzMzLDMzXSwyNTZdLDgyNTQ6W1szMiw3NzNdLDI1Nl0sODI2MzpbWzYzLDYzXSwyNTZdLDgyNjQ6W1s2MywzM10sMjU2XSw4MjY1OltbMzMsNjNdLDI1Nl0sODI3OTpbWzgyNDIsODI0Miw4MjQyLDgyNDJdLDI1Nl0sODI4NzpbWzMyXSwyNTZdLDgzMDQ6W1s0OF0sMjU2XSw4MzA1OltbMTA1XSwyNTZdLDgzMDg6W1s1Ml0sMjU2XSw4MzA5OltbNTNdLDI1Nl0sODMxMDpbWzU0XSwyNTZdLDgzMTE6W1s1NV0sMjU2XSw4MzEyOltbNTZdLDI1Nl0sODMxMzpbWzU3XSwyNTZdLDgzMTQ6W1s0M10sMjU2XSw4MzE1OltbODcyMl0sMjU2XSw4MzE2OltbNjFdLDI1Nl0sODMxNzpbWzQwXSwyNTZdLDgzMTg6W1s0MV0sMjU2XSw4MzE5OltbMTEwXSwyNTZdLDgzMjA6W1s0OF0sMjU2XSw4MzIxOltbNDldLDI1Nl0sODMyMjpbWzUwXSwyNTZdLDgzMjM6W1s1MV0sMjU2XSw4MzI0OltbNTJdLDI1Nl0sODMyNTpbWzUzXSwyNTZdLDgzMjY6W1s1NF0sMjU2XSw4MzI3OltbNTVdLDI1Nl0sODMyODpbWzU2XSwyNTZdLDgzMjk6W1s1N10sMjU2XSw4MzMwOltbNDNdLDI1Nl0sODMzMTpbWzg3MjJdLDI1Nl0sODMzMjpbWzYxXSwyNTZdLDgzMzM6W1s0MF0sMjU2XSw4MzM0OltbNDFdLDI1Nl0sODMzNjpbWzk3XSwyNTZdLDgzMzc6W1sxMDFdLDI1Nl0sODMzODpbWzExMV0sMjU2XSw4MzM5OltbMTIwXSwyNTZdLDgzNDA6W1s2MDFdLDI1Nl0sODM0MTpbWzEwNF0sMjU2XSw4MzQyOltbMTA3XSwyNTZdLDgzNDM6W1sxMDhdLDI1Nl0sODM0NDpbWzEwOV0sMjU2XSw4MzQ1OltbMTEwXSwyNTZdLDgzNDY6W1sxMTJdLDI1Nl0sODM0NzpbWzExNV0sMjU2XSw4MzQ4OltbMTE2XSwyNTZdLDgzNjA6W1s4MiwxMTVdLDI1Nl0sODQwMDpbLDIzMF0sODQwMTpbLDIzMF0sODQwMjpbLDFdLDg0MDM6WywxXSw4NDA0OlssMjMwXSw4NDA1OlssMjMwXSw4NDA2OlssMjMwXSw4NDA3OlssMjMwXSw4NDA4OlssMV0sODQwOTpbLDFdLDg0MTA6WywxXSw4NDExOlssMjMwXSw4NDEyOlssMjMwXSw4NDE3OlssMjMwXSw4NDIxOlssMV0sODQyMjpbLDFdLDg0MjM6WywyMzBdLDg0MjQ6WywyMjBdLDg0MjU6WywyMzBdLDg0MjY6WywxXSw4NDI3OlssMV0sODQyODpbLDIyMF0sODQyOTpbLDIyMF0sODQzMDpbLDIyMF0sODQzMTpbLDIyMF0sODQzMjpbLDIzMF19LA0KODQ0ODp7ODQ0ODpbWzk3LDQ3LDk5XSwyNTZdLDg0NDk6W1s5Nyw0NywxMTVdLDI1Nl0sODQ1MDpbWzY3XSwyNTZdLDg0NTE6W1sxNzYsNjddLDI1Nl0sODQ1MzpbWzk5LDQ3LDExMV0sMjU2XSw4NDU0OltbOTksNDcsMTE3XSwyNTZdLDg0NTU6W1s0MDBdLDI1Nl0sODQ1NzpbWzE3Niw3MF0sMjU2XSw4NDU4OltbMTAzXSwyNTZdLDg0NTk6W1s3Ml0sMjU2XSw4NDYwOltbNzJdLDI1Nl0sODQ2MTpbWzcyXSwyNTZdLDg0NjI6W1sxMDRdLDI1Nl0sODQ2MzpbWzI5NV0sMjU2XSw4NDY0OltbNzNdLDI1Nl0sODQ2NTpbWzczXSwyNTZdLDg0NjY6W1s3Nl0sMjU2XSw4NDY3OltbMTA4XSwyNTZdLDg0Njk6W1s3OF0sMjU2XSw4NDcwOltbNzgsMTExXSwyNTZdLDg0NzM6W1s4MF0sMjU2XSw4NDc0OltbODFdLDI1Nl0sODQ3NTpbWzgyXSwyNTZdLDg0NzY6W1s4Ml0sMjU2XSw4NDc3OltbODJdLDI1Nl0sODQ4MDpbWzgzLDc3XSwyNTZdLDg0ODE6W1s4NCw2OSw3Nl0sMjU2XSw4NDgyOltbODQsNzddLDI1Nl0sODQ4NDpbWzkwXSwyNTZdLDg0ODY6W1s5MzddXSw4NDg4OltbOTBdLDI1Nl0sODQ5MDpbWzc1XV0sODQ5MTpbWzE5N11dLDg0OTI6W1s2Nl0sMjU2XSw4NDkzOltbNjddLDI1Nl0sODQ5NTpbWzEwMV0sMjU2XSw4NDk2OltbNjldLDI1Nl0sODQ5NzpbWzcwXSwyNTZdLDg0OTk6W1s3N10sMjU2XSw4NTAwOltbMTExXSwyNTZdLDg1MDE6W1sxNDg4XSwyNTZdLDg1MDI6W1sxNDg5XSwyNTZdLDg1MDM6W1sxNDkwXSwyNTZdLDg1MDQ6W1sxNDkxXSwyNTZdLDg1MDU6W1sxMDVdLDI1Nl0sODUwNzpbWzcwLDY1LDg4XSwyNTZdLDg1MDg6W1s5NjBdLDI1Nl0sODUwOTpbWzk0N10sMjU2XSw4NTEwOltbOTE1XSwyNTZdLDg1MTE6W1s5MjhdLDI1Nl0sODUxMjpbWzg3MjFdLDI1Nl0sODUxNzpbWzY4XSwyNTZdLDg1MTg6W1sxMDBdLDI1Nl0sODUxOTpbWzEwMV0sMjU2XSw4NTIwOltbMTA1XSwyNTZdLDg1MjE6W1sxMDZdLDI1Nl0sODUyODpbWzQ5LDgyNjAsNTVdLDI1Nl0sODUyOTpbWzQ5LDgyNjAsNTddLDI1Nl0sODUzMDpbWzQ5LDgyNjAsNDksNDhdLDI1Nl0sODUzMTpbWzQ5LDgyNjAsNTFdLDI1Nl0sODUzMjpbWzUwLDgyNjAsNTFdLDI1Nl0sODUzMzpbWzQ5LDgyNjAsNTNdLDI1Nl0sODUzNDpbWzUwLDgyNjAsNTNdLDI1Nl0sODUzNTpbWzUxLDgyNjAsNTNdLDI1Nl0sODUzNjpbWzUyLDgyNjAsNTNdLDI1Nl0sODUzNzpbWzQ5LDgyNjAsNTRdLDI1Nl0sODUzODpbWzUzLDgyNjAsNTRdLDI1Nl0sODUzOTpbWzQ5LDgyNjAsNTZdLDI1Nl0sODU0MDpbWzUxLDgyNjAsNTZdLDI1Nl0sODU0MTpbWzUzLDgyNjAsNTZdLDI1Nl0sODU0MjpbWzU1LDgyNjAsNTZdLDI1Nl0sODU0MzpbWzQ5LDgyNjBdLDI1Nl0sODU0NDpbWzczXSwyNTZdLDg1NDU6W1s3Myw3M10sMjU2XSw4NTQ2OltbNzMsNzMsNzNdLDI1Nl0sODU0NzpbWzczLDg2XSwyNTZdLDg1NDg6W1s4Nl0sMjU2XSw4NTQ5OltbODYsNzNdLDI1Nl0sODU1MDpbWzg2LDczLDczXSwyNTZdLDg1NTE6W1s4Niw3Myw3Myw3M10sMjU2XSw4NTUyOltbNzMsODhdLDI1Nl0sODU1MzpbWzg4XSwyNTZdLDg1NTQ6W1s4OCw3M10sMjU2XSw4NTU1OltbODgsNzMsNzNdLDI1Nl0sODU1NjpbWzc2XSwyNTZdLDg1NTc6W1s2N10sMjU2XSw4NTU4OltbNjhdLDI1Nl0sODU1OTpbWzc3XSwyNTZdLDg1NjA6W1sxMDVdLDI1Nl0sODU2MTpbWzEwNSwxMDVdLDI1Nl0sODU2MjpbWzEwNSwxMDUsMTA1XSwyNTZdLDg1NjM6W1sxMDUsMTE4XSwyNTZdLDg1NjQ6W1sxMThdLDI1Nl0sODU2NTpbWzExOCwxMDVdLDI1Nl0sODU2NjpbWzExOCwxMDUsMTA1XSwyNTZdLDg1Njc6W1sxMTgsMTA1LDEwNSwxMDVdLDI1Nl0sODU2ODpbWzEwNSwxMjBdLDI1Nl0sODU2OTpbWzEyMF0sMjU2XSw4NTcwOltbMTIwLDEwNV0sMjU2XSw4NTcxOltbMTIwLDEwNSwxMDVdLDI1Nl0sODU3MjpbWzEwOF0sMjU2XSw4NTczOltbOTldLDI1Nl0sODU3NDpbWzEwMF0sMjU2XSw4NTc1OltbMTA5XSwyNTZdLDg1ODU6W1s0OCw4MjYwLDUxXSwyNTZdLDg1OTI6WywsezgyNDo4NjAyfV0sODU5NDpbLCx7ODI0Ojg2MDN9XSw4NTk2OlssLHs4MjQ6ODYyMn1dLDg2MDI6W1s4NTkyLDgyNF1dLDg2MDM6W1s4NTk0LDgyNF1dLDg2MjI6W1s4NTk2LDgyNF1dLDg2NTM6W1s4NjU2LDgyNF1dLDg2NTQ6W1s4NjYwLDgyNF1dLDg2NTU6W1s4NjU4LDgyNF1dLDg2NTY6WywsezgyNDo4NjUzfV0sODY1ODpbLCx7ODI0Ojg2NTV9XSw4NjYwOlssLHs4MjQ6ODY1NH1dfSwNCjg3MDQ6ezg3MDc6WywsezgyNDo4NzA4fV0sODcwODpbWzg3MDcsODI0XV0sODcxMjpbLCx7ODI0Ojg3MTN9XSw4NzEzOltbODcxMiw4MjRdXSw4NzE1OlssLHs4MjQ6ODcxNn1dLDg3MTY6W1s4NzE1LDgyNF1dLDg3Mzk6WywsezgyNDo4NzQwfV0sODc0MDpbWzg3MzksODI0XV0sODc0MTpbLCx7ODI0Ojg3NDJ9XSw4NzQyOltbODc0MSw4MjRdXSw4NzQ4OltbODc0Nyw4NzQ3XSwyNTZdLDg3NDk6W1s4NzQ3LDg3NDcsODc0N10sMjU2XSw4NzUxOltbODc1MCw4NzUwXSwyNTZdLDg3NTI6W1s4NzUwLDg3NTAsODc1MF0sMjU2XSw4NzY0OlssLHs4MjQ6ODc2OX1dLDg3Njk6W1s4NzY0LDgyNF1dLDg3NzE6WywsezgyNDo4NzcyfV0sODc3MjpbWzg3NzEsODI0XV0sODc3MzpbLCx7ODI0Ojg3NzV9XSw4Nzc1OltbODc3Myw4MjRdXSw4Nzc2OlssLHs4MjQ6ODc3N31dLDg3Nzc6W1s4Nzc2LDgyNF1dLDg3ODE6WywsezgyNDo4ODEzfV0sODgwMDpbWzYxLDgyNF1dLDg4MDE6WywsezgyNDo4ODAyfV0sODgwMjpbWzg4MDEsODI0XV0sODgwNDpbLCx7ODI0Ojg4MTZ9XSw4ODA1OlssLHs4MjQ6ODgxN31dLDg4MTM6W1s4NzgxLDgyNF1dLDg4MTQ6W1s2MCw4MjRdXSw4ODE1OltbNjIsODI0XV0sODgxNjpbWzg4MDQsODI0XV0sODgxNzpbWzg4MDUsODI0XV0sODgxODpbLCx7ODI0Ojg4MjB9XSw4ODE5OlssLHs4MjQ6ODgyMX1dLDg4MjA6W1s4ODE4LDgyNF1dLDg4MjE6W1s4ODE5LDgyNF1dLDg4MjI6WywsezgyNDo4ODI0fV0sODgyMzpbLCx7ODI0Ojg4MjV9XSw4ODI0OltbODgyMiw4MjRdXSw4ODI1OltbODgyMyw4MjRdXSw4ODI2OlssLHs4MjQ6ODgzMn1dLDg4Mjc6WywsezgyNDo4ODMzfV0sODgyODpbLCx7ODI0Ojg5Mjh9XSw4ODI5OlssLHs4MjQ6ODkyOX1dLDg4MzI6W1s4ODI2LDgyNF1dLDg4MzM6W1s4ODI3LDgyNF1dLDg4MzQ6WywsezgyNDo4ODM2fV0sODgzNTpbLCx7ODI0Ojg4Mzd9XSw4ODM2OltbODgzNCw4MjRdXSw4ODM3OltbODgzNSw4MjRdXSw4ODM4OlssLHs4MjQ6ODg0MH1dLDg4Mzk6WywsezgyNDo4ODQxfV0sODg0MDpbWzg4MzgsODI0XV0sODg0MTpbWzg4MzksODI0XV0sODg0OTpbLCx7ODI0Ojg5MzB9XSw4ODUwOlssLHs4MjQ6ODkzMX1dLDg4NjY6WywsezgyNDo4ODc2fV0sODg3MjpbLCx7ODI0Ojg4Nzd9XSw4ODczOlssLHs4MjQ6ODg3OH1dLDg4NzU6WywsezgyNDo4ODc5fV0sODg3NjpbWzg4NjYsODI0XV0sODg3NzpbWzg4NzIsODI0XV0sODg3ODpbWzg4NzMsODI0XV0sODg3OTpbWzg4NzUsODI0XV0sODg4MjpbLCx7ODI0Ojg5Mzh9XSw4ODgzOlssLHs4MjQ6ODkzOX1dLDg4ODQ6WywsezgyNDo4OTQwfV0sODg4NTpbLCx7ODI0Ojg5NDF9XSw4OTI4OltbODgyOCw4MjRdXSw4OTI5OltbODgyOSw4MjRdXSw4OTMwOltbODg0OSw4MjRdXSw4OTMxOltbODg1MCw4MjRdXSw4OTM4OltbODg4Miw4MjRdXSw4OTM5OltbODg4Myw4MjRdXSw4OTQwOltbODg4NCw4MjRdXSw4OTQxOltbODg4NSw4MjRdXX0sDQo4OTYwOns5MDAxOltbMTIyOTZdXSw5MDAyOltbMTIyOTddXX0sDQo5MjE2Ons5MzEyOltbNDldLDI1Nl0sOTMxMzpbWzUwXSwyNTZdLDkzMTQ6W1s1MV0sMjU2XSw5MzE1OltbNTJdLDI1Nl0sOTMxNjpbWzUzXSwyNTZdLDkzMTc6W1s1NF0sMjU2XSw5MzE4OltbNTVdLDI1Nl0sOTMxOTpbWzU2XSwyNTZdLDkzMjA6W1s1N10sMjU2XSw5MzIxOltbNDksNDhdLDI1Nl0sOTMyMjpbWzQ5LDQ5XSwyNTZdLDkzMjM6W1s0OSw1MF0sMjU2XSw5MzI0OltbNDksNTFdLDI1Nl0sOTMyNTpbWzQ5LDUyXSwyNTZdLDkzMjY6W1s0OSw1M10sMjU2XSw5MzI3OltbNDksNTRdLDI1Nl0sOTMyODpbWzQ5LDU1XSwyNTZdLDkzMjk6W1s0OSw1Nl0sMjU2XSw5MzMwOltbNDksNTddLDI1Nl0sOTMzMTpbWzUwLDQ4XSwyNTZdLDkzMzI6W1s0MCw0OSw0MV0sMjU2XSw5MzMzOltbNDAsNTAsNDFdLDI1Nl0sOTMzNDpbWzQwLDUxLDQxXSwyNTZdLDkzMzU6W1s0MCw1Miw0MV0sMjU2XSw5MzM2OltbNDAsNTMsNDFdLDI1Nl0sOTMzNzpbWzQwLDU0LDQxXSwyNTZdLDkzMzg6W1s0MCw1NSw0MV0sMjU2XSw5MzM5OltbNDAsNTYsNDFdLDI1Nl0sOTM0MDpbWzQwLDU3LDQxXSwyNTZdLDkzNDE6W1s0MCw0OSw0OCw0MV0sMjU2XSw5MzQyOltbNDAsNDksNDksNDFdLDI1Nl0sOTM0MzpbWzQwLDQ5LDUwLDQxXSwyNTZdLDkzNDQ6W1s0MCw0OSw1MSw0MV0sMjU2XSw5MzQ1OltbNDAsNDksNTIsNDFdLDI1Nl0sOTM0NjpbWzQwLDQ5LDUzLDQxXSwyNTZdLDkzNDc6W1s0MCw0OSw1NCw0MV0sMjU2XSw5MzQ4OltbNDAsNDksNTUsNDFdLDI1Nl0sOTM0OTpbWzQwLDQ5LDU2LDQxXSwyNTZdLDkzNTA6W1s0MCw0OSw1Nyw0MV0sMjU2XSw5MzUxOltbNDAsNTAsNDgsNDFdLDI1Nl0sOTM1MjpbWzQ5LDQ2XSwyNTZdLDkzNTM6W1s1MCw0Nl0sMjU2XSw5MzU0OltbNTEsNDZdLDI1Nl0sOTM1NTpbWzUyLDQ2XSwyNTZdLDkzNTY6W1s1Myw0Nl0sMjU2XSw5MzU3OltbNTQsNDZdLDI1Nl0sOTM1ODpbWzU1LDQ2XSwyNTZdLDkzNTk6W1s1Niw0Nl0sMjU2XSw5MzYwOltbNTcsNDZdLDI1Nl0sOTM2MTpbWzQ5LDQ4LDQ2XSwyNTZdLDkzNjI6W1s0OSw0OSw0Nl0sMjU2XSw5MzYzOltbNDksNTAsNDZdLDI1Nl0sOTM2NDpbWzQ5LDUxLDQ2XSwyNTZdLDkzNjU6W1s0OSw1Miw0Nl0sMjU2XSw5MzY2OltbNDksNTMsNDZdLDI1Nl0sOTM2NzpbWzQ5LDU0LDQ2XSwyNTZdLDkzNjg6W1s0OSw1NSw0Nl0sMjU2XSw5MzY5OltbNDksNTYsNDZdLDI1Nl0sOTM3MDpbWzQ5LDU3LDQ2XSwyNTZdLDkzNzE6W1s1MCw0OCw0Nl0sMjU2XSw5MzcyOltbNDAsOTcsNDFdLDI1Nl0sOTM3MzpbWzQwLDk4LDQxXSwyNTZdLDkzNzQ6W1s0MCw5OSw0MV0sMjU2XSw5Mzc1OltbNDAsMTAwLDQxXSwyNTZdLDkzNzY6W1s0MCwxMDEsNDFdLDI1Nl0sOTM3NzpbWzQwLDEwMiw0MV0sMjU2XSw5Mzc4OltbNDAsMTAzLDQxXSwyNTZdLDkzNzk6W1s0MCwxMDQsNDFdLDI1Nl0sOTM4MDpbWzQwLDEwNSw0MV0sMjU2XSw5MzgxOltbNDAsMTA2LDQxXSwyNTZdLDkzODI6W1s0MCwxMDcsNDFdLDI1Nl0sOTM4MzpbWzQwLDEwOCw0MV0sMjU2XSw5Mzg0OltbNDAsMTA5LDQxXSwyNTZdLDkzODU6W1s0MCwxMTAsNDFdLDI1Nl0sOTM4NjpbWzQwLDExMSw0MV0sMjU2XSw5Mzg3OltbNDAsMTEyLDQxXSwyNTZdLDkzODg6W1s0MCwxMTMsNDFdLDI1Nl0sOTM4OTpbWzQwLDExNCw0MV0sMjU2XSw5MzkwOltbNDAsMTE1LDQxXSwyNTZdLDkzOTE6W1s0MCwxMTYsNDFdLDI1Nl0sOTM5MjpbWzQwLDExNyw0MV0sMjU2XSw5MzkzOltbNDAsMTE4LDQxXSwyNTZdLDkzOTQ6W1s0MCwxMTksNDFdLDI1Nl0sOTM5NTpbWzQwLDEyMCw0MV0sMjU2XSw5Mzk2OltbNDAsMTIxLDQxXSwyNTZdLDkzOTc6W1s0MCwxMjIsNDFdLDI1Nl0sOTM5ODpbWzY1XSwyNTZdLDkzOTk6W1s2Nl0sMjU2XSw5NDAwOltbNjddLDI1Nl0sOTQwMTpbWzY4XSwyNTZdLDk0MDI6W1s2OV0sMjU2XSw5NDAzOltbNzBdLDI1Nl0sOTQwNDpbWzcxXSwyNTZdLDk0MDU6W1s3Ml0sMjU2XSw5NDA2OltbNzNdLDI1Nl0sOTQwNzpbWzc0XSwyNTZdLDk0MDg6W1s3NV0sMjU2XSw5NDA5OltbNzZdLDI1Nl0sOTQxMDpbWzc3XSwyNTZdLDk0MTE6W1s3OF0sMjU2XSw5NDEyOltbNzldLDI1Nl0sOTQxMzpbWzgwXSwyNTZdLDk0MTQ6W1s4MV0sMjU2XSw5NDE1OltbODJdLDI1Nl0sOTQxNjpbWzgzXSwyNTZdLDk0MTc6W1s4NF0sMjU2XSw5NDE4OltbODVdLDI1Nl0sOTQxOTpbWzg2XSwyNTZdLDk0MjA6W1s4N10sMjU2XSw5NDIxOltbODhdLDI1Nl0sOTQyMjpbWzg5XSwyNTZdLDk0MjM6W1s5MF0sMjU2XSw5NDI0OltbOTddLDI1Nl0sOTQyNTpbWzk4XSwyNTZdLDk0MjY6W1s5OV0sMjU2XSw5NDI3OltbMTAwXSwyNTZdLDk0Mjg6W1sxMDFdLDI1Nl0sOTQyOTpbWzEwMl0sMjU2XSw5NDMwOltbMTAzXSwyNTZdLDk0MzE6W1sxMDRdLDI1Nl0sOTQzMjpbWzEwNV0sMjU2XSw5NDMzOltbMTA2XSwyNTZdLDk0MzQ6W1sxMDddLDI1Nl0sOTQzNTpbWzEwOF0sMjU2XSw5NDM2OltbMTA5XSwyNTZdLDk0Mzc6W1sxMTBdLDI1Nl0sOTQzODpbWzExMV0sMjU2XSw5NDM5OltbMTEyXSwyNTZdLDk0NDA6W1sxMTNdLDI1Nl0sOTQ0MTpbWzExNF0sMjU2XSw5NDQyOltbMTE1XSwyNTZdLDk0NDM6W1sxMTZdLDI1Nl0sOTQ0NDpbWzExN10sMjU2XSw5NDQ1OltbMTE4XSwyNTZdLDk0NDY6W1sxMTldLDI1Nl0sOTQ0NzpbWzEyMF0sMjU2XSw5NDQ4OltbMTIxXSwyNTZdLDk0NDk6W1sxMjJdLDI1Nl0sOTQ1MDpbWzQ4XSwyNTZdfSwNCjEwNzUyOnsxMDc2NDpbWzg3NDcsODc0Nyw4NzQ3LDg3NDddLDI1Nl0sMTA4Njg6W1s1OCw1OCw2MV0sMjU2XSwxMDg2OTpbWzYxLDYxXSwyNTZdLDEwODcwOltbNjEsNjEsNjFdLDI1Nl0sMTA5NzI6W1sxMDk3Myw4MjRdLDUxMl19LA0KMTEyNjQ6ezExMzg4OltbMTA2XSwyNTZdLDExMzg5OltbODZdLDI1Nl0sMTE1MDM6WywyMzBdLDExNTA0OlssMjMwXSwxMTUwNTpbLDIzMF19LA0KMTE1MjA6ezExNjMxOltbMTE2MTddLDI1Nl0sMTE2NDc6Wyw5XSwxMTc0NDpbLDIzMF0sMTE3NDU6WywyMzBdLDExNzQ2OlssMjMwXSwxMTc0NzpbLDIzMF0sMTE3NDg6WywyMzBdLDExNzQ5OlssMjMwXSwxMTc1MDpbLDIzMF0sMTE3NTE6WywyMzBdLDExNzUyOlssMjMwXSwxMTc1MzpbLDIzMF0sMTE3NTQ6WywyMzBdLDExNzU1OlssMjMwXSwxMTc1NjpbLDIzMF0sMTE3NTc6WywyMzBdLDExNzU4OlssMjMwXSwxMTc1OTpbLDIzMF0sMTE3NjA6WywyMzBdLDExNzYxOlssMjMwXSwxMTc2MjpbLDIzMF0sMTE3NjM6WywyMzBdLDExNzY0OlssMjMwXSwxMTc2NTpbLDIzMF0sMTE3NjY6WywyMzBdLDExNzY3OlssMjMwXSwxMTc2ODpbLDIzMF0sMTE3Njk6WywyMzBdLDExNzcwOlssMjMwXSwxMTc3MTpbLDIzMF0sMTE3NzI6WywyMzBdLDExNzczOlssMjMwXSwxMTc3NDpbLDIzMF0sMTE3NzU6WywyMzBdfSwNCjExNzc2OnsxMTkzNTpbWzI3NTk3XSwyNTZdLDEyMDE5OltbNDA4NjNdLDI1Nl19LA0KMTIwMzI6ezEyMDMyOltbMTk5NjhdLDI1Nl0sMTIwMzM6W1syMDAwOF0sMjU2XSwxMjAzNDpbWzIwMDIyXSwyNTZdLDEyMDM1OltbMjAwMzFdLDI1Nl0sMTIwMzY6W1syMDA1N10sMjU2XSwxMjAzNzpbWzIwMTAxXSwyNTZdLDEyMDM4OltbMjAxMDhdLDI1Nl0sMTIwMzk6W1syMDEyOF0sMjU2XSwxMjA0MDpbWzIwMTU0XSwyNTZdLDEyMDQxOltbMjA3OTldLDI1Nl0sMTIwNDI6W1syMDgzN10sMjU2XSwxMjA0MzpbWzIwODQzXSwyNTZdLDEyMDQ0OltbMjA4NjZdLDI1Nl0sMTIwNDU6W1syMDg4Nl0sMjU2XSwxMjA0NjpbWzIwOTA3XSwyNTZdLDEyMDQ3OltbMjA5NjBdLDI1Nl0sMTIwNDg6W1syMDk4MV0sMjU2XSwxMjA0OTpbWzIwOTkyXSwyNTZdLDEyMDUwOltbMjExNDddLDI1Nl0sMTIwNTE6W1syMTI0MV0sMjU2XSwxMjA1MjpbWzIxMjY5XSwyNTZdLDEyMDUzOltbMjEyNzRdLDI1Nl0sMTIwNTQ6W1syMTMwNF0sMjU2XSwxMjA1NTpbWzIxMzEzXSwyNTZdLDEyMDU2OltbMjEzNDBdLDI1Nl0sMTIwNTc6W1syMTM1M10sMjU2XSwxMjA1ODpbWzIxMzc4XSwyNTZdLDEyMDU5OltbMjE0MzBdLDI1Nl0sMTIwNjA6W1syMTQ0OF0sMjU2XSwxMjA2MTpbWzIxNDc1XSwyNTZdLDEyMDYyOltbMjIyMzFdLDI1Nl0sMTIwNjM6W1syMjMwM10sMjU2XSwxMjA2NDpbWzIyNzYzXSwyNTZdLDEyMDY1OltbMjI3ODZdLDI1Nl0sMTIwNjY6W1syMjc5NF0sMjU2XSwxMjA2NzpbWzIyODA1XSwyNTZdLDEyMDY4OltbMjI4MjNdLDI1Nl0sMTIwNjk6W1syMjg5OV0sMjU2XSwxMjA3MDpbWzIzMzc2XSwyNTZdLDEyMDcxOltbMjM0MjRdLDI1Nl0sMTIwNzI6W1syMzU0NF0sMjU2XSwxMjA3MzpbWzIzNTY3XSwyNTZdLDEyMDc0OltbMjM1ODZdLDI1Nl0sMTIwNzU6W1syMzYwOF0sMjU2XSwxMjA3NjpbWzIzNjYyXSwyNTZdLDEyMDc3OltbMjM2NjVdLDI1Nl0sMTIwNzg6W1syNDAyN10sMjU2XSwxMjA3OTpbWzI0MDM3XSwyNTZdLDEyMDgwOltbMjQwNDldLDI1Nl0sMTIwODE6W1syNDA2Ml0sMjU2XSwxMjA4MjpbWzI0MTc4XSwyNTZdLDEyMDgzOltbMjQxODZdLDI1Nl0sMTIwODQ6W1syNDE5MV0sMjU2XSwxMjA4NTpbWzI0MzA4XSwyNTZdLDEyMDg2OltbMjQzMThdLDI1Nl0sMTIwODc6W1syNDMzMV0sMjU2XSwxMjA4ODpbWzI0MzM5XSwyNTZdLDEyMDg5OltbMjQ0MDBdLDI1Nl0sMTIwOTA6W1syNDQxN10sMjU2XSwxMjA5MTpbWzI0NDM1XSwyNTZdLDEyMDkyOltbMjQ1MTVdLDI1Nl0sMTIwOTM6W1syNTA5Nl0sMjU2XSwxMjA5NDpbWzI1MTQyXSwyNTZdLDEyMDk1OltbMjUxNjNdLDI1Nl0sMTIwOTY6W1syNTkwM10sMjU2XSwxMjA5NzpbWzI1OTA4XSwyNTZdLDEyMDk4OltbMjU5OTFdLDI1Nl0sMTIwOTk6W1syNjAwN10sMjU2XSwxMjEwMDpbWzI2MDIwXSwyNTZdLDEyMTAxOltbMjYwNDFdLDI1Nl0sMTIxMDI6W1syNjA4MF0sMjU2XSwxMjEwMzpbWzI2MDg1XSwyNTZdLDEyMTA0OltbMjYzNTJdLDI1Nl0sMTIxMDU6W1syNjM3Nl0sMjU2XSwxMjEwNjpbWzI2NDA4XSwyNTZdLDEyMTA3OltbMjc0MjRdLDI1Nl0sMTIxMDg6W1syNzQ5MF0sMjU2XSwxMjEwOTpbWzI3NTEzXSwyNTZdLDEyMTEwOltbMjc1NzFdLDI1Nl0sMTIxMTE6W1syNzU5NV0sMjU2XSwxMjExMjpbWzI3NjA0XSwyNTZdLDEyMTEzOltbMjc2MTFdLDI1Nl0sMTIxMTQ6W1syNzY2M10sMjU2XSwxMjExNTpbWzI3NjY4XSwyNTZdLDEyMTE2OltbMjc3MDBdLDI1Nl0sMTIxMTc6W1syODc3OV0sMjU2XSwxMjExODpbWzI5MjI2XSwyNTZdLDEyMTE5OltbMjkyMzhdLDI1Nl0sMTIxMjA6W1syOTI0M10sMjU2XSwxMjEyMTpbWzI5MjQ3XSwyNTZdLDEyMTIyOltbMjkyNTVdLDI1Nl0sMTIxMjM6W1syOTI3M10sMjU2XSwxMjEyNDpbWzI5Mjc1XSwyNTZdLDEyMTI1OltbMjkzNTZdLDI1Nl0sMTIxMjY6W1syOTU3Ml0sMjU2XSwxMjEyNzpbWzI5NTc3XSwyNTZdLDEyMTI4OltbMjk5MTZdLDI1Nl0sMTIxMjk6W1syOTkyNl0sMjU2XSwxMjEzMDpbWzI5OTc2XSwyNTZdLDEyMTMxOltbMjk5ODNdLDI1Nl0sMTIxMzI6W1syOTk5Ml0sMjU2XSwxMjEzMzpbWzMwMDAwXSwyNTZdLDEyMTM0OltbMzAwOTFdLDI1Nl0sMTIxMzU6W1szMDA5OF0sMjU2XSwxMjEzNjpbWzMwMzI2XSwyNTZdLDEyMTM3OltbMzAzMzNdLDI1Nl0sMTIxMzg6W1szMDM4Ml0sMjU2XSwxMjEzOTpbWzMwMzk5XSwyNTZdLDEyMTQwOltbMzA0NDZdLDI1Nl0sMTIxNDE6W1szMDY4M10sMjU2XSwxMjE0MjpbWzMwNjkwXSwyNTZdLDEyMTQzOltbMzA3MDddLDI1Nl0sMTIxNDQ6W1szMTAzNF0sMjU2XSwxMjE0NTpbWzMxMTYwXSwyNTZdLDEyMTQ2OltbMzExNjZdLDI1Nl0sMTIxNDc6W1szMTM0OF0sMjU2XSwxMjE0ODpbWzMxNDM1XSwyNTZdLDEyMTQ5OltbMzE0ODFdLDI1Nl0sMTIxNTA6W1szMTg1OV0sMjU2XSwxMjE1MTpbWzMxOTkyXSwyNTZdLDEyMTUyOltbMzI1NjZdLDI1Nl0sMTIxNTM6W1szMjU5M10sMjU2XSwxMjE1NDpbWzMyNjUwXSwyNTZdLDEyMTU1OltbMzI3MDFdLDI1Nl0sMTIxNTY6W1szMjc2OV0sMjU2XSwxMjE1NzpbWzMyNzgwXSwyNTZdLDEyMTU4OltbMzI3ODZdLDI1Nl0sMTIxNTk6W1szMjgxOV0sMjU2XSwxMjE2MDpbWzMyODk1XSwyNTZdLDEyMTYxOltbMzI5MDVdLDI1Nl0sMTIxNjI6W1szMzI1MV0sMjU2XSwxMjE2MzpbWzMzMjU4XSwyNTZdLDEyMTY0OltbMzMyNjddLDI1Nl0sMTIxNjU6W1szMzI3Nl0sMjU2XSwxMjE2NjpbWzMzMjkyXSwyNTZdLDEyMTY3OltbMzMzMDddLDI1Nl0sMTIxNjg6W1szMzMxMV0sMjU2XSwxMjE2OTpbWzMzMzkwXSwyNTZdLDEyMTcwOltbMzMzOTRdLDI1Nl0sMTIxNzE6W1szMzQwMF0sMjU2XSwxMjE3MjpbWzM0MzgxXSwyNTZdLDEyMTczOltbMzQ0MTFdLDI1Nl0sMTIxNzQ6W1szNDg4MF0sMjU2XSwxMjE3NTpbWzM0ODkyXSwyNTZdLDEyMTc2OltbMzQ5MTVdLDI1Nl0sMTIxNzc6W1szNTE5OF0sMjU2XSwxMjE3ODpbWzM1MjExXSwyNTZdLDEyMTc5OltbMzUyODJdLDI1Nl0sMTIxODA6W1szNTMyOF0sMjU2XSwxMjE4MTpbWzM1ODk1XSwyNTZdLDEyMTgyOltbMzU5MTBdLDI1Nl0sMTIxODM6W1szNTkyNV0sMjU2XSwxMjE4NDpbWzM1OTYwXSwyNTZdLDEyMTg1OltbMzU5OTddLDI1Nl0sMTIxODY6W1szNjE5Nl0sMjU2XSwxMjE4NzpbWzM2MjA4XSwyNTZdLDEyMTg4OltbMzYyNzVdLDI1Nl0sMTIxODk6W1szNjUyM10sMjU2XSwxMjE5MDpbWzM2NTU0XSwyNTZdLDEyMTkxOltbMzY3NjNdLDI1Nl0sMTIxOTI6W1szNjc4NF0sMjU2XSwxMjE5MzpbWzM2Nzg5XSwyNTZdLDEyMTk0OltbMzcwMDldLDI1Nl0sMTIxOTU6W1szNzE5M10sMjU2XSwxMjE5NjpbWzM3MzE4XSwyNTZdLDEyMTk3OltbMzczMjRdLDI1Nl0sMTIxOTg6W1szNzMyOV0sMjU2XSwxMjE5OTpbWzM4MjYzXSwyNTZdLDEyMjAwOltbMzgyNzJdLDI1Nl0sMTIyMDE6W1szODQyOF0sMjU2XSwxMjIwMjpbWzM4NTgyXSwyNTZdLDEyMjAzOltbMzg1ODVdLDI1Nl0sMTIyMDQ6W1szODYzMl0sMjU2XSwxMjIwNTpbWzM4NzM3XSwyNTZdLDEyMjA2OltbMzg3NTBdLDI1Nl0sMTIyMDc6W1szODc1NF0sMjU2XSwxMjIwODpbWzM4NzYxXSwyNTZdLDEyMjA5OltbMzg4NTldLDI1Nl0sMTIyMTA6W1szODg5M10sMjU2XSwxMjIxMTpbWzM4ODk5XSwyNTZdLDEyMjEyOltbMzg5MTNdLDI1Nl0sMTIyMTM6W1szOTA4MF0sMjU2XSwxMjIxNDpbWzM5MTMxXSwyNTZdLDEyMjE1OltbMzkxMzVdLDI1Nl0sMTIyMTY6W1szOTMxOF0sMjU2XSwxMjIxNzpbWzM5MzIxXSwyNTZdLDEyMjE4OltbMzkzNDBdLDI1Nl0sMTIyMTk6W1szOTU5Ml0sMjU2XSwxMjIyMDpbWzM5NjQwXSwyNTZdLDEyMjIxOltbMzk2NDddLDI1Nl0sMTIyMjI6W1szOTcxN10sMjU2XSwxMjIyMzpbWzM5NzI3XSwyNTZdLDEyMjI0OltbMzk3MzBdLDI1Nl0sMTIyMjU6W1szOTc0MF0sMjU2XSwxMjIyNjpbWzM5NzcwXSwyNTZdLDEyMjI3OltbNDAxNjVdLDI1Nl0sMTIyMjg6W1s0MDU2NV0sMjU2XSwxMjIyOTpbWzQwNTc1XSwyNTZdLDEyMjMwOltbNDA2MTNdLDI1Nl0sMTIyMzE6W1s0MDYzNV0sMjU2XSwxMjIzMjpbWzQwNjQzXSwyNTZdLDEyMjMzOltbNDA2NTNdLDI1Nl0sMTIyMzQ6W1s0MDY1N10sMjU2XSwxMjIzNTpbWzQwNjk3XSwyNTZdLDEyMjM2OltbNDA3MDFdLDI1Nl0sMTIyMzc6W1s0MDcxOF0sMjU2XSwxMjIzODpbWzQwNzIzXSwyNTZdLDEyMjM5OltbNDA3MzZdLDI1Nl0sMTIyNDA6W1s0MDc2M10sMjU2XSwxMjI0MTpbWzQwNzc4XSwyNTZdLDEyMjQyOltbNDA3ODZdLDI1Nl0sMTIyNDM6W1s0MDg0NV0sMjU2XSwxMjI0NDpbWzQwODYwXSwyNTZdLDEyMjQ1OltbNDA4NjRdLDI1Nl19LA0KMTIyODg6ezEyMjg4OltbMzJdLDI1Nl0sMTIzMzA6WywyMThdLDEyMzMxOlssMjI4XSwxMjMzMjpbLDIzMl0sMTIzMzM6WywyMjJdLDEyMzM0OlssMjI0XSwxMjMzNTpbLDIyNF0sMTIzNDI6W1sxMjMwNl0sMjU2XSwxMjM0NDpbWzIxMzEzXSwyNTZdLDEyMzQ1OltbMjEzMTZdLDI1Nl0sMTIzNDY6W1syMTMxN10sMjU2XSwxMjM1ODpbLCx7MTI0NDE6MTI0MzZ9XSwxMjM2MzpbLCx7MTI0NDE6MTIzNjR9XSwxMjM2NDpbWzEyMzYzLDEyNDQxXV0sMTIzNjU6WywsezEyNDQxOjEyMzY2fV0sMTIzNjY6W1sxMjM2NSwxMjQ0MV1dLDEyMzY3OlssLHsxMjQ0MToxMjM2OH1dLDEyMzY4OltbMTIzNjcsMTI0NDFdXSwxMjM2OTpbLCx7MTI0NDE6MTIzNzB9XSwxMjM3MDpbWzEyMzY5LDEyNDQxXV0sMTIzNzE6WywsezEyNDQxOjEyMzcyfV0sMTIzNzI6W1sxMjM3MSwxMjQ0MV1dLDEyMzczOlssLHsxMjQ0MToxMjM3NH1dLDEyMzc0OltbMTIzNzMsMTI0NDFdXSwxMjM3NTpbLCx7MTI0NDE6MTIzNzZ9XSwxMjM3NjpbWzEyMzc1LDEyNDQxXV0sMTIzNzc6WywsezEyNDQxOjEyMzc4fV0sMTIzNzg6W1sxMjM3NywxMjQ0MV1dLDEyMzc5OlssLHsxMjQ0MToxMjM4MH1dLDEyMzgwOltbMTIzNzksMTI0NDFdXSwxMjM4MTpbLCx7MTI0NDE6MTIzODJ9XSwxMjM4MjpbWzEyMzgxLDEyNDQxXV0sMTIzODM6WywsezEyNDQxOjEyMzg0fV0sMTIzODQ6W1sxMjM4MywxMjQ0MV1dLDEyMzg1OlssLHsxMjQ0MToxMjM4Nn1dLDEyMzg2OltbMTIzODUsMTI0NDFdXSwxMjM4ODpbLCx7MTI0NDE6MTIzODl9XSwxMjM4OTpbWzEyMzg4LDEyNDQxXV0sMTIzOTA6WywsezEyNDQxOjEyMzkxfV0sMTIzOTE6W1sxMjM5MCwxMjQ0MV1dLDEyMzkyOlssLHsxMjQ0MToxMjM5M31dLDEyMzkzOltbMTIzOTIsMTI0NDFdXSwxMjM5OTpbLCx7MTI0NDE6MTI0MDAsMTI0NDI6MTI0MDF9XSwxMjQwMDpbWzEyMzk5LDEyNDQxXV0sMTI0MDE6W1sxMjM5OSwxMjQ0Ml1dLDEyNDAyOlssLHsxMjQ0MToxMjQwMywxMjQ0MjoxMjQwNH1dLDEyNDAzOltbMTI0MDIsMTI0NDFdXSwxMjQwNDpbWzEyNDAyLDEyNDQyXV0sMTI0MDU6WywsezEyNDQxOjEyNDA2LDEyNDQyOjEyNDA3fV0sMTI0MDY6W1sxMjQwNSwxMjQ0MV1dLDEyNDA3OltbMTI0MDUsMTI0NDJdXSwxMjQwODpbLCx7MTI0NDE6MTI0MDksMTI0NDI6MTI0MTB9XSwxMjQwOTpbWzEyNDA4LDEyNDQxXV0sMTI0MTA6W1sxMjQwOCwxMjQ0Ml1dLDEyNDExOlssLHsxMjQ0MToxMjQxMiwxMjQ0MjoxMjQxM31dLDEyNDEyOltbMTI0MTEsMTI0NDFdXSwxMjQxMzpbWzEyNDExLDEyNDQyXV0sMTI0MzY6W1sxMjM1OCwxMjQ0MV1dLDEyNDQxOlssOF0sMTI0NDI6Wyw4XSwxMjQ0MzpbWzMyLDEyNDQxXSwyNTZdLDEyNDQ0OltbMzIsMTI0NDJdLDI1Nl0sMTI0NDU6WywsezEyNDQxOjEyNDQ2fV0sMTI0NDY6W1sxMjQ0NSwxMjQ0MV1dLDEyNDQ3OltbMTI0MjQsMTI0MjZdLDI1Nl0sMTI0NTQ6WywsezEyNDQxOjEyNTMyfV0sMTI0NTk6WywsezEyNDQxOjEyNDYwfV0sMTI0NjA6W1sxMjQ1OSwxMjQ0MV1dLDEyNDYxOlssLHsxMjQ0MToxMjQ2Mn1dLDEyNDYyOltbMTI0NjEsMTI0NDFdXSwxMjQ2MzpbLCx7MTI0NDE6MTI0NjR9XSwxMjQ2NDpbWzEyNDYzLDEyNDQxXV0sMTI0NjU6WywsezEyNDQxOjEyNDY2fV0sMTI0NjY6W1sxMjQ2NSwxMjQ0MV1dLDEyNDY3OlssLHsxMjQ0MToxMjQ2OH1dLDEyNDY4OltbMTI0NjcsMTI0NDFdXSwxMjQ2OTpbLCx7MTI0NDE6MTI0NzB9XSwxMjQ3MDpbWzEyNDY5LDEyNDQxXV0sMTI0NzE6WywsezEyNDQxOjEyNDcyfV0sMTI0NzI6W1sxMjQ3MSwxMjQ0MV1dLDEyNDczOlssLHsxMjQ0MToxMjQ3NH1dLDEyNDc0OltbMTI0NzMsMTI0NDFdXSwxMjQ3NTpbLCx7MTI0NDE6MTI0NzZ9XSwxMjQ3NjpbWzEyNDc1LDEyNDQxXV0sMTI0Nzc6WywsezEyNDQxOjEyNDc4fV0sMTI0Nzg6W1sxMjQ3NywxMjQ0MV1dLDEyNDc5OlssLHsxMjQ0MToxMjQ4MH1dLDEyNDgwOltbMTI0NzksMTI0NDFdXSwxMjQ4MTpbLCx7MTI0NDE6MTI0ODJ9XSwxMjQ4MjpbWzEyNDgxLDEyNDQxXV0sMTI0ODQ6WywsezEyNDQxOjEyNDg1fV0sMTI0ODU6W1sxMjQ4NCwxMjQ0MV1dLDEyNDg2OlssLHsxMjQ0MToxMjQ4N31dLDEyNDg3OltbMTI0ODYsMTI0NDFdXSwxMjQ4ODpbLCx7MTI0NDE6MTI0ODl9XSwxMjQ4OTpbWzEyNDg4LDEyNDQxXV0sMTI0OTU6WywsezEyNDQxOjEyNDk2LDEyNDQyOjEyNDk3fV0sMTI0OTY6W1sxMjQ5NSwxMjQ0MV1dLDEyNDk3OltbMTI0OTUsMTI0NDJdXSwxMjQ5ODpbLCx7MTI0NDE6MTI0OTksMTI0NDI6MTI1MDB9XSwxMjQ5OTpbWzEyNDk4LDEyNDQxXV0sMTI1MDA6W1sxMjQ5OCwxMjQ0Ml1dLDEyNTAxOlssLHsxMjQ0MToxMjUwMiwxMjQ0MjoxMjUwM31dLDEyNTAyOltbMTI1MDEsMTI0NDFdXSwxMjUwMzpbWzEyNTAxLDEyNDQyXV0sMTI1MDQ6WywsezEyNDQxOjEyNTA1LDEyNDQyOjEyNTA2fV0sMTI1MDU6W1sxMjUwNCwxMjQ0MV1dLDEyNTA2OltbMTI1MDQsMTI0NDJdXSwxMjUwNzpbLCx7MTI0NDE6MTI1MDgsMTI0NDI6MTI1MDl9XSwxMjUwODpbWzEyNTA3LDEyNDQxXV0sMTI1MDk6W1sxMjUwNywxMjQ0Ml1dLDEyNTI3OlssLHsxMjQ0MToxMjUzNX1dLDEyNTI4OlssLHsxMjQ0MToxMjUzNn1dLDEyNTI5OlssLHsxMjQ0MToxMjUzN31dLDEyNTMwOlssLHsxMjQ0MToxMjUzOH1dLDEyNTMyOltbMTI0NTQsMTI0NDFdXSwxMjUzNTpbWzEyNTI3LDEyNDQxXV0sMTI1MzY6W1sxMjUyOCwxMjQ0MV1dLDEyNTM3OltbMTI1MjksMTI0NDFdXSwxMjUzODpbWzEyNTMwLDEyNDQxXV0sMTI1NDE6WywsezEyNDQxOjEyNTQyfV0sMTI1NDI6W1sxMjU0MSwxMjQ0MV1dLDEyNTQzOltbMTI0NjcsMTI0ODhdLDI1Nl19LA0KMTI1NDQ6ezEyNTkzOltbNDM1Ml0sMjU2XSwxMjU5NDpbWzQzNTNdLDI1Nl0sMTI1OTU6W1s0NTIyXSwyNTZdLDEyNTk2OltbNDM1NF0sMjU2XSwxMjU5NzpbWzQ1MjRdLDI1Nl0sMTI1OTg6W1s0NTI1XSwyNTZdLDEyNTk5OltbNDM1NV0sMjU2XSwxMjYwMDpbWzQzNTZdLDI1Nl0sMTI2MDE6W1s0MzU3XSwyNTZdLDEyNjAyOltbNDUyOF0sMjU2XSwxMjYwMzpbWzQ1MjldLDI1Nl0sMTI2MDQ6W1s0NTMwXSwyNTZdLDEyNjA1OltbNDUzMV0sMjU2XSwxMjYwNjpbWzQ1MzJdLDI1Nl0sMTI2MDc6W1s0NTMzXSwyNTZdLDEyNjA4OltbNDM3OF0sMjU2XSwxMjYwOTpbWzQzNThdLDI1Nl0sMTI2MTA6W1s0MzU5XSwyNTZdLDEyNjExOltbNDM2MF0sMjU2XSwxMjYxMjpbWzQzODVdLDI1Nl0sMTI2MTM6W1s0MzYxXSwyNTZdLDEyNjE0OltbNDM2Ml0sMjU2XSwxMjYxNTpbWzQzNjNdLDI1Nl0sMTI2MTY6W1s0MzY0XSwyNTZdLDEyNjE3OltbNDM2NV0sMjU2XSwxMjYxODpbWzQzNjZdLDI1Nl0sMTI2MTk6W1s0MzY3XSwyNTZdLDEyNjIwOltbNDM2OF0sMjU2XSwxMjYyMTpbWzQzNjldLDI1Nl0sMTI2MjI6W1s0MzcwXSwyNTZdLDEyNjIzOltbNDQ0OV0sMjU2XSwxMjYyNDpbWzQ0NTBdLDI1Nl0sMTI2MjU6W1s0NDUxXSwyNTZdLDEyNjI2OltbNDQ1Ml0sMjU2XSwxMjYyNzpbWzQ0NTNdLDI1Nl0sMTI2Mjg6W1s0NDU0XSwyNTZdLDEyNjI5OltbNDQ1NV0sMjU2XSwxMjYzMDpbWzQ0NTZdLDI1Nl0sMTI2MzE6W1s0NDU3XSwyNTZdLDEyNjMyOltbNDQ1OF0sMjU2XSwxMjYzMzpbWzQ0NTldLDI1Nl0sMTI2MzQ6W1s0NDYwXSwyNTZdLDEyNjM1OltbNDQ2MV0sMjU2XSwxMjYzNjpbWzQ0NjJdLDI1Nl0sMTI2Mzc6W1s0NDYzXSwyNTZdLDEyNjM4OltbNDQ2NF0sMjU2XSwxMjYzOTpbWzQ0NjVdLDI1Nl0sMTI2NDA6W1s0NDY2XSwyNTZdLDEyNjQxOltbNDQ2N10sMjU2XSwxMjY0MjpbWzQ0NjhdLDI1Nl0sMTI2NDM6W1s0NDY5XSwyNTZdLDEyNjQ0OltbNDQ0OF0sMjU2XSwxMjY0NTpbWzQzNzJdLDI1Nl0sMTI2NDY6W1s0MzczXSwyNTZdLDEyNjQ3OltbNDU1MV0sMjU2XSwxMjY0ODpbWzQ1NTJdLDI1Nl0sMTI2NDk6W1s0NTU2XSwyNTZdLDEyNjUwOltbNDU1OF0sMjU2XSwxMjY1MTpbWzQ1NjNdLDI1Nl0sMTI2NTI6W1s0NTY3XSwyNTZdLDEyNjUzOltbNDU2OV0sMjU2XSwxMjY1NDpbWzQzODBdLDI1Nl0sMTI2NTU6W1s0NTczXSwyNTZdLDEyNjU2OltbNDU3NV0sMjU2XSwxMjY1NzpbWzQzODFdLDI1Nl0sMTI2NTg6W1s0MzgyXSwyNTZdLDEyNjU5OltbNDM4NF0sMjU2XSwxMjY2MDpbWzQzODZdLDI1Nl0sMTI2NjE6W1s0Mzg3XSwyNTZdLDEyNjYyOltbNDM5MV0sMjU2XSwxMjY2MzpbWzQzOTNdLDI1Nl0sMTI2NjQ6W1s0Mzk1XSwyNTZdLDEyNjY1OltbNDM5Nl0sMjU2XSwxMjY2NjpbWzQzOTddLDI1Nl0sMTI2Njc6W1s0Mzk4XSwyNTZdLDEyNjY4OltbNDM5OV0sMjU2XSwxMjY2OTpbWzQ0MDJdLDI1Nl0sMTI2NzA6W1s0NDA2XSwyNTZdLDEyNjcxOltbNDQxNl0sMjU2XSwxMjY3MjpbWzQ0MjNdLDI1Nl0sMTI2NzM6W1s0NDI4XSwyNTZdLDEyNjc0OltbNDU5M10sMjU2XSwxMjY3NTpbWzQ1OTRdLDI1Nl0sMTI2NzY6W1s0NDM5XSwyNTZdLDEyNjc3OltbNDQ0MF0sMjU2XSwxMjY3ODpbWzQ0NDFdLDI1Nl0sMTI2Nzk6W1s0NDg0XSwyNTZdLDEyNjgwOltbNDQ4NV0sMjU2XSwxMjY4MTpbWzQ0ODhdLDI1Nl0sMTI2ODI6W1s0NDk3XSwyNTZdLDEyNjgzOltbNDQ5OF0sMjU2XSwxMjY4NDpbWzQ1MDBdLDI1Nl0sMTI2ODU6W1s0NTEwXSwyNTZdLDEyNjg2OltbNDUxM10sMjU2XSwxMjY5MDpbWzE5OTY4XSwyNTZdLDEyNjkxOltbMjAxMDhdLDI1Nl0sMTI2OTI6W1sxOTk3N10sMjU2XSwxMjY5MzpbWzIyMjM1XSwyNTZdLDEyNjk0OltbMTk5NzhdLDI1Nl0sMTI2OTU6W1syMDAxM10sMjU2XSwxMjY5NjpbWzE5OTc5XSwyNTZdLDEyNjk3OltbMzAwMDJdLDI1Nl0sMTI2OTg6W1syMDA1N10sMjU2XSwxMjY5OTpbWzE5OTkzXSwyNTZdLDEyNzAwOltbMTk5NjldLDI1Nl0sMTI3MDE6W1syMjgyNV0sMjU2XSwxMjcwMjpbWzIyMzIwXSwyNTZdLDEyNzAzOltbMjAxNTRdLDI1Nl19LA0KMTI4MDA6ezEyODAwOltbNDAsNDM1Miw0MV0sMjU2XSwxMjgwMTpbWzQwLDQzNTQsNDFdLDI1Nl0sMTI4MDI6W1s0MCw0MzU1LDQxXSwyNTZdLDEyODAzOltbNDAsNDM1Nyw0MV0sMjU2XSwxMjgwNDpbWzQwLDQzNTgsNDFdLDI1Nl0sMTI4MDU6W1s0MCw0MzU5LDQxXSwyNTZdLDEyODA2OltbNDAsNDM2MSw0MV0sMjU2XSwxMjgwNzpbWzQwLDQzNjMsNDFdLDI1Nl0sMTI4MDg6W1s0MCw0MzY0LDQxXSwyNTZdLDEyODA5OltbNDAsNDM2Niw0MV0sMjU2XSwxMjgxMDpbWzQwLDQzNjcsNDFdLDI1Nl0sMTI4MTE6W1s0MCw0MzY4LDQxXSwyNTZdLDEyODEyOltbNDAsNDM2OSw0MV0sMjU2XSwxMjgxMzpbWzQwLDQzNzAsNDFdLDI1Nl0sMTI4MTQ6W1s0MCw0MzUyLDQ0NDksNDFdLDI1Nl0sMTI4MTU6W1s0MCw0MzU0LDQ0NDksNDFdLDI1Nl0sMTI4MTY6W1s0MCw0MzU1LDQ0NDksNDFdLDI1Nl0sMTI4MTc6W1s0MCw0MzU3LDQ0NDksNDFdLDI1Nl0sMTI4MTg6W1s0MCw0MzU4LDQ0NDksNDFdLDI1Nl0sMTI4MTk6W1s0MCw0MzU5LDQ0NDksNDFdLDI1Nl0sMTI4MjA6W1s0MCw0MzYxLDQ0NDksNDFdLDI1Nl0sMTI4MjE6W1s0MCw0MzYzLDQ0NDksNDFdLDI1Nl0sMTI4MjI6W1s0MCw0MzY0LDQ0NDksNDFdLDI1Nl0sMTI4MjM6W1s0MCw0MzY2LDQ0NDksNDFdLDI1Nl0sMTI4MjQ6W1s0MCw0MzY3LDQ0NDksNDFdLDI1Nl0sMTI4MjU6W1s0MCw0MzY4LDQ0NDksNDFdLDI1Nl0sMTI4MjY6W1s0MCw0MzY5LDQ0NDksNDFdLDI1Nl0sMTI4Mjc6W1s0MCw0MzcwLDQ0NDksNDFdLDI1Nl0sMTI4Mjg6W1s0MCw0MzY0LDQ0NjIsNDFdLDI1Nl0sMTI4Mjk6W1s0MCw0MzYzLDQ0NTcsNDM2NCw0NDUzLDQ1MjMsNDFdLDI1Nl0sMTI4MzA6W1s0MCw0MzYzLDQ0NTcsNDM3MCw0NDYyLDQxXSwyNTZdLDEyODMyOltbNDAsMTk5NjgsNDFdLDI1Nl0sMTI4MzM6W1s0MCwyMDEwOCw0MV0sMjU2XSwxMjgzNDpbWzQwLDE5OTc3LDQxXSwyNTZdLDEyODM1OltbNDAsMjIyMzUsNDFdLDI1Nl0sMTI4MzY6W1s0MCwyMDExNiw0MV0sMjU2XSwxMjgzNzpbWzQwLDIwODQ1LDQxXSwyNTZdLDEyODM4OltbNDAsMTk5NzEsNDFdLDI1Nl0sMTI4Mzk6W1s0MCwyMDg0Myw0MV0sMjU2XSwxMjg0MDpbWzQwLDIwMDYxLDQxXSwyNTZdLDEyODQxOltbNDAsMjEzMTMsNDFdLDI1Nl0sMTI4NDI6W1s0MCwyNjM3Niw0MV0sMjU2XSwxMjg0MzpbWzQwLDI4Nzc5LDQxXSwyNTZdLDEyODQ0OltbNDAsMjc3MDAsNDFdLDI1Nl0sMTI4NDU6W1s0MCwyNjQwOCw0MV0sMjU2XSwxMjg0NjpbWzQwLDM3MzI5LDQxXSwyNTZdLDEyODQ3OltbNDAsMjIzMDMsNDFdLDI1Nl0sMTI4NDg6W1s0MCwyNjA4NSw0MV0sMjU2XSwxMjg0OTpbWzQwLDI2NjY2LDQxXSwyNTZdLDEyODUwOltbNDAsMjYzNzcsNDFdLDI1Nl0sMTI4NTE6W1s0MCwzMTAzOCw0MV0sMjU2XSwxMjg1MjpbWzQwLDIxNTE3LDQxXSwyNTZdLDEyODUzOltbNDAsMjkzMDUsNDFdLDI1Nl0sMTI4NTQ6W1s0MCwzNjAwMSw0MV0sMjU2XSwxMjg1NTpbWzQwLDMxMDY5LDQxXSwyNTZdLDEyODU2OltbNDAsMjExNzIsNDFdLDI1Nl0sMTI4NTc6W1s0MCwyMDE5NSw0MV0sMjU2XSwxMjg1ODpbWzQwLDIxNjI4LDQxXSwyNTZdLDEyODU5OltbNDAsMjMzOTgsNDFdLDI1Nl0sMTI4NjA6W1s0MCwzMDQzNSw0MV0sMjU2XSwxMjg2MTpbWzQwLDIwMjI1LDQxXSwyNTZdLDEyODYyOltbNDAsMzYwMzksNDFdLDI1Nl0sMTI4NjM6W1s0MCwyMTMzMiw0MV0sMjU2XSwxMjg2NDpbWzQwLDMxMDg1LDQxXSwyNTZdLDEyODY1OltbNDAsMjAyNDEsNDFdLDI1Nl0sMTI4NjY6W1s0MCwzMzI1OCw0MV0sMjU2XSwxMjg2NzpbWzQwLDMzMjY3LDQxXSwyNTZdLDEyODY4OltbMjE4MzldLDI1Nl0sMTI4Njk6W1syNDE4OF0sMjU2XSwxMjg3MDpbWzI1OTkxXSwyNTZdLDEyODcxOltbMzE2MzFdLDI1Nl0sMTI4ODA6W1s4MCw4NCw2OV0sMjU2XSwxMjg4MTpbWzUwLDQ5XSwyNTZdLDEyODgyOltbNTAsNTBdLDI1Nl0sMTI4ODM6W1s1MCw1MV0sMjU2XSwxMjg4NDpbWzUwLDUyXSwyNTZdLDEyODg1OltbNTAsNTNdLDI1Nl0sMTI4ODY6W1s1MCw1NF0sMjU2XSwxMjg4NzpbWzUwLDU1XSwyNTZdLDEyODg4OltbNTAsNTZdLDI1Nl0sMTI4ODk6W1s1MCw1N10sMjU2XSwxMjg5MDpbWzUxLDQ4XSwyNTZdLDEyODkxOltbNTEsNDldLDI1Nl0sMTI4OTI6W1s1MSw1MF0sMjU2XSwxMjg5MzpbWzUxLDUxXSwyNTZdLDEyODk0OltbNTEsNTJdLDI1Nl0sMTI4OTU6W1s1MSw1M10sMjU2XSwxMjg5NjpbWzQzNTJdLDI1Nl0sMTI4OTc6W1s0MzU0XSwyNTZdLDEyODk4OltbNDM1NV0sMjU2XSwxMjg5OTpbWzQzNTddLDI1Nl0sMTI5MDA6W1s0MzU4XSwyNTZdLDEyOTAxOltbNDM1OV0sMjU2XSwxMjkwMjpbWzQzNjFdLDI1Nl0sMTI5MDM6W1s0MzYzXSwyNTZdLDEyOTA0OltbNDM2NF0sMjU2XSwxMjkwNTpbWzQzNjZdLDI1Nl0sMTI5MDY6W1s0MzY3XSwyNTZdLDEyOTA3OltbNDM2OF0sMjU2XSwxMjkwODpbWzQzNjldLDI1Nl0sMTI5MDk6W1s0MzcwXSwyNTZdLDEyOTEwOltbNDM1Miw0NDQ5XSwyNTZdLDEyOTExOltbNDM1NCw0NDQ5XSwyNTZdLDEyOTEyOltbNDM1NSw0NDQ5XSwyNTZdLDEyOTEzOltbNDM1Nyw0NDQ5XSwyNTZdLDEyOTE0OltbNDM1OCw0NDQ5XSwyNTZdLDEyOTE1OltbNDM1OSw0NDQ5XSwyNTZdLDEyOTE2OltbNDM2MSw0NDQ5XSwyNTZdLDEyOTE3OltbNDM2Myw0NDQ5XSwyNTZdLDEyOTE4OltbNDM2NCw0NDQ5XSwyNTZdLDEyOTE5OltbNDM2Niw0NDQ5XSwyNTZdLDEyOTIwOltbNDM2Nyw0NDQ5XSwyNTZdLDEyOTIxOltbNDM2OCw0NDQ5XSwyNTZdLDEyOTIyOltbNDM2OSw0NDQ5XSwyNTZdLDEyOTIzOltbNDM3MCw0NDQ5XSwyNTZdLDEyOTI0OltbNDM2Niw0NDQ5LDQ1MzUsNDM1Miw0NDU3XSwyNTZdLDEyOTI1OltbNDM2NCw0NDYyLDQzNjMsNDQ2OF0sMjU2XSwxMjkyNjpbWzQzNjMsNDQ2Ml0sMjU2XSwxMjkyODpbWzE5OTY4XSwyNTZdLDEyOTI5OltbMjAxMDhdLDI1Nl0sMTI5MzA6W1sxOTk3N10sMjU2XSwxMjkzMTpbWzIyMjM1XSwyNTZdLDEyOTMyOltbMjAxMTZdLDI1Nl0sMTI5MzM6W1syMDg0NV0sMjU2XSwxMjkzNDpbWzE5OTcxXSwyNTZdLDEyOTM1OltbMjA4NDNdLDI1Nl0sMTI5MzY6W1syMDA2MV0sMjU2XSwxMjkzNzpbWzIxMzEzXSwyNTZdLDEyOTM4OltbMjYzNzZdLDI1Nl0sMTI5Mzk6W1syODc3OV0sMjU2XSwxMjk0MDpbWzI3NzAwXSwyNTZdLDEyOTQxOltbMjY0MDhdLDI1Nl0sMTI5NDI6W1szNzMyOV0sMjU2XSwxMjk0MzpbWzIyMzAzXSwyNTZdLDEyOTQ0OltbMjYwODVdLDI1Nl0sMTI5NDU6W1syNjY2Nl0sMjU2XSwxMjk0NjpbWzI2Mzc3XSwyNTZdLDEyOTQ3OltbMzEwMzhdLDI1Nl0sMTI5NDg6W1syMTUxN10sMjU2XSwxMjk0OTpbWzI5MzA1XSwyNTZdLDEyOTUwOltbMzYwMDFdLDI1Nl0sMTI5NTE6W1szMTA2OV0sMjU2XSwxMjk1MjpbWzIxMTcyXSwyNTZdLDEyOTUzOltbMzExOTJdLDI1Nl0sMTI5NTQ6W1szMDAwN10sMjU2XSwxMjk1NTpbWzIyODk5XSwyNTZdLDEyOTU2OltbMzY5NjldLDI1Nl0sMTI5NTc6W1syMDc3OF0sMjU2XSwxMjk1ODpbWzIxMzYwXSwyNTZdLDEyOTU5OltbMjc4ODBdLDI1Nl0sMTI5NjA6W1szODkxN10sMjU2XSwxMjk2MTpbWzIwMjQxXSwyNTZdLDEyOTYyOltbMjA4ODldLDI1Nl0sMTI5NjM6W1syNzQ5MV0sMjU2XSwxMjk2NDpbWzE5OTc4XSwyNTZdLDEyOTY1OltbMjAwMTNdLDI1Nl0sMTI5NjY6W1sxOTk3OV0sMjU2XSwxMjk2NzpbWzI0MDM4XSwyNTZdLDEyOTY4OltbMjE0OTFdLDI1Nl0sMTI5Njk6W1syMTMwN10sMjU2XSwxMjk3MDpbWzIzNDQ3XSwyNTZdLDEyOTcxOltbMjMzOThdLDI1Nl0sMTI5NzI6W1szMDQzNV0sMjU2XSwxMjk3MzpbWzIwMjI1XSwyNTZdLDEyOTc0OltbMzYwMzldLDI1Nl0sMTI5NzU6W1syMTMzMl0sMjU2XSwxMjk3NjpbWzIyODEyXSwyNTZdLDEyOTc3OltbNTEsNTRdLDI1Nl0sMTI5Nzg6W1s1MSw1NV0sMjU2XSwxMjk3OTpbWzUxLDU2XSwyNTZdLDEyOTgwOltbNTEsNTddLDI1Nl0sMTI5ODE6W1s1Miw0OF0sMjU2XSwxMjk4MjpbWzUyLDQ5XSwyNTZdLDEyOTgzOltbNTIsNTBdLDI1Nl0sMTI5ODQ6W1s1Miw1MV0sMjU2XSwxMjk4NTpbWzUyLDUyXSwyNTZdLDEyOTg2OltbNTIsNTNdLDI1Nl0sMTI5ODc6W1s1Miw1NF0sMjU2XSwxMjk4ODpbWzUyLDU1XSwyNTZdLDEyOTg5OltbNTIsNTZdLDI1Nl0sMTI5OTA6W1s1Miw1N10sMjU2XSwxMjk5MTpbWzUzLDQ4XSwyNTZdLDEyOTkyOltbNDksMjYzNzZdLDI1Nl0sMTI5OTM6W1s1MCwyNjM3Nl0sMjU2XSwxMjk5NDpbWzUxLDI2Mzc2XSwyNTZdLDEyOTk1OltbNTIsMjYzNzZdLDI1Nl0sMTI5OTY6W1s1MywyNjM3Nl0sMjU2XSwxMjk5NzpbWzU0LDI2Mzc2XSwyNTZdLDEyOTk4OltbNTUsMjYzNzZdLDI1Nl0sMTI5OTk6W1s1NiwyNjM3Nl0sMjU2XSwxMzAwMDpbWzU3LDI2Mzc2XSwyNTZdLDEzMDAxOltbNDksNDgsMjYzNzZdLDI1Nl0sMTMwMDI6W1s0OSw0OSwyNjM3Nl0sMjU2XSwxMzAwMzpbWzQ5LDUwLDI2Mzc2XSwyNTZdLDEzMDA0OltbNzIsMTAzXSwyNTZdLDEzMDA1OltbMTAxLDExNCwxMDNdLDI1Nl0sMTMwMDY6W1sxMDEsODZdLDI1Nl0sMTMwMDc6W1s3Niw4NCw2OF0sMjU2XSwxMzAwODpbWzEyNDUwXSwyNTZdLDEzMDA5OltbMTI0NTJdLDI1Nl0sMTMwMTA6W1sxMjQ1NF0sMjU2XSwxMzAxMTpbWzEyNDU2XSwyNTZdLDEzMDEyOltbMTI0NThdLDI1Nl0sMTMwMTM6W1sxMjQ1OV0sMjU2XSwxMzAxNDpbWzEyNDYxXSwyNTZdLDEzMDE1OltbMTI0NjNdLDI1Nl0sMTMwMTY6W1sxMjQ2NV0sMjU2XSwxMzAxNzpbWzEyNDY3XSwyNTZdLDEzMDE4OltbMTI0NjldLDI1Nl0sMTMwMTk6W1sxMjQ3MV0sMjU2XSwxMzAyMDpbWzEyNDczXSwyNTZdLDEzMDIxOltbMTI0NzVdLDI1Nl0sMTMwMjI6W1sxMjQ3N10sMjU2XSwxMzAyMzpbWzEyNDc5XSwyNTZdLDEzMDI0OltbMTI0ODFdLDI1Nl0sMTMwMjU6W1sxMjQ4NF0sMjU2XSwxMzAyNjpbWzEyNDg2XSwyNTZdLDEzMDI3OltbMTI0ODhdLDI1Nl0sMTMwMjg6W1sxMjQ5MF0sMjU2XSwxMzAyOTpbWzEyNDkxXSwyNTZdLDEzMDMwOltbMTI0OTJdLDI1Nl0sMTMwMzE6W1sxMjQ5M10sMjU2XSwxMzAzMjpbWzEyNDk0XSwyNTZdLDEzMDMzOltbMTI0OTVdLDI1Nl0sMTMwMzQ6W1sxMjQ5OF0sMjU2XSwxMzAzNTpbWzEyNTAxXSwyNTZdLDEzMDM2OltbMTI1MDRdLDI1Nl0sMTMwMzc6W1sxMjUwN10sMjU2XSwxMzAzODpbWzEyNTEwXSwyNTZdLDEzMDM5OltbMTI1MTFdLDI1Nl0sMTMwNDA6W1sxMjUxMl0sMjU2XSwxMzA0MTpbWzEyNTEzXSwyNTZdLDEzMDQyOltbMTI1MTRdLDI1Nl0sMTMwNDM6W1sxMjUxNl0sMjU2XSwxMzA0NDpbWzEyNTE4XSwyNTZdLDEzMDQ1OltbMTI1MjBdLDI1Nl0sMTMwNDY6W1sxMjUyMV0sMjU2XSwxMzA0NzpbWzEyNTIyXSwyNTZdLDEzMDQ4OltbMTI1MjNdLDI1Nl0sMTMwNDk6W1sxMjUyNF0sMjU2XSwxMzA1MDpbWzEyNTI1XSwyNTZdLDEzMDUxOltbMTI1MjddLDI1Nl0sMTMwNTI6W1sxMjUyOF0sMjU2XSwxMzA1MzpbWzEyNTI5XSwyNTZdLDEzMDU0OltbMTI1MzBdLDI1Nl19LA0KMTMwNTY6ezEzMDU2OltbMTI0NTAsMTI0OTcsMTI1NDAsMTI0ODhdLDI1Nl0sMTMwNTc6W1sxMjQ1MCwxMjUyMywxMjUwMSwxMjQ0OV0sMjU2XSwxMzA1ODpbWzEyNDUwLDEyNTMxLDEyNTA2LDEyNDUwXSwyNTZdLDEzMDU5OltbMTI0NTAsMTI1NDAsMTI1MjNdLDI1Nl0sMTMwNjA6W1sxMjQ1MiwxMjQ5MSwxMjUzMSwxMjQ2NF0sMjU2XSwxMzA2MTpbWzEyNDUyLDEyNTMxLDEyNDgxXSwyNTZdLDEzMDYyOltbMTI0NTQsMTI0NTcsMTI1MzFdLDI1Nl0sMTMwNjM6W1sxMjQ1NiwxMjQ3MywxMjQ2MywxMjU0MCwxMjQ4OV0sMjU2XSwxMzA2NDpbWzEyNDU2LDEyNTQwLDEyNDU5LDEyNTQwXSwyNTZdLDEzMDY1OltbMTI0NTgsMTI1MzEsMTI0NzNdLDI1Nl0sMTMwNjY6W1sxMjQ1OCwxMjU0MCwxMjUxMl0sMjU2XSwxMzA2NzpbWzEyNDU5LDEyNDUyLDEyNTIyXSwyNTZdLDEzMDY4OltbMTI0NTksMTI1MjEsMTI0ODMsMTI0ODhdLDI1Nl0sMTMwNjk6W1sxMjQ1OSwxMjUyNSwxMjUyMiwxMjU0MF0sMjU2XSwxMzA3MDpbWzEyNDYwLDEyNTI1LDEyNTMxXSwyNTZdLDEzMDcxOltbMTI0NjAsMTI1MzEsMTI1MTBdLDI1Nl0sMTMwNzI6W1sxMjQ2MiwxMjQ2MF0sMjU2XSwxMzA3MzpbWzEyNDYyLDEyNDkxLDEyNTQwXSwyNTZdLDEzMDc0OltbMTI0NjEsMTI1MTcsMTI1MjIsMTI1NDBdLDI1Nl0sMTMwNzU6W1sxMjQ2MiwxMjUyMywxMjQ4MCwxMjU0MF0sMjU2XSwxMzA3NjpbWzEyNDYxLDEyNTI1XSwyNTZdLDEzMDc3OltbMTI0NjEsMTI1MjUsMTI0NjQsMTI1MjEsMTI1MTJdLDI1Nl0sMTMwNzg6W1sxMjQ2MSwxMjUyNSwxMjUxMywxMjU0MCwxMjQ4OCwxMjUyM10sMjU2XSwxMzA3OTpbWzEyNDYxLDEyNTI1LDEyNTI3LDEyNDgzLDEyNDg4XSwyNTZdLDEzMDgwOltbMTI0NjQsMTI1MjEsMTI1MTJdLDI1Nl0sMTMwODE6W1sxMjQ2NCwxMjUyMSwxMjUxMiwxMjQ4OCwxMjUzMV0sMjU2XSwxMzA4MjpbWzEyNDYzLDEyNTIzLDEyNDc2LDEyNDUyLDEyNTI1XSwyNTZdLDEzMDgzOltbMTI0NjMsMTI1MjUsMTI1NDAsMTI0OTNdLDI1Nl0sMTMwODQ6W1sxMjQ2NSwxMjU0MCwxMjQ3M10sMjU2XSwxMzA4NTpbWzEyNDY3LDEyNTIzLDEyNDkwXSwyNTZdLDEzMDg2OltbMTI0NjcsMTI1NDAsMTI1MDldLDI1Nl0sMTMwODc6W1sxMjQ2OSwxMjQ1MiwxMjQ2MywxMjUyM10sMjU2XSwxMzA4ODpbWzEyNDY5LDEyNTMxLDEyNDgxLDEyNTQwLDEyNTEyXSwyNTZdLDEzMDg5OltbMTI0NzEsMTI1MjIsMTI1MzEsMTI0NjRdLDI1Nl0sMTMwOTA6W1sxMjQ3NSwxMjUzMSwxMjQ4MV0sMjU2XSwxMzA5MTpbWzEyNDc1LDEyNTMxLDEyNDg4XSwyNTZdLDEzMDkyOltbMTI0ODAsMTI1NDAsMTI0NzNdLDI1Nl0sMTMwOTM6W1sxMjQ4NywxMjQ3MV0sMjU2XSwxMzA5NDpbWzEyNDg5LDEyNTIzXSwyNTZdLDEzMDk1OltbMTI0ODgsMTI1MzFdLDI1Nl0sMTMwOTY6W1sxMjQ5MCwxMjQ5NF0sMjU2XSwxMzA5NzpbWzEyNDk0LDEyNDgzLDEyNDg4XSwyNTZdLDEzMDk4OltbMTI0OTUsMTI0NTIsMTI0ODRdLDI1Nl0sMTMwOTk6W1sxMjQ5NywxMjU0MCwxMjQ3NSwxMjUzMSwxMjQ4OF0sMjU2XSwxMzEwMDpbWzEyNDk3LDEyNTQwLDEyNDg0XSwyNTZdLDEzMTAxOltbMTI0OTYsMTI1NDAsMTI1MjQsMTI1MjNdLDI1Nl0sMTMxMDI6W1sxMjUwMCwxMjQ1MCwxMjQ3MywxMjQ4OCwxMjUyM10sMjU2XSwxMzEwMzpbWzEyNTAwLDEyNDYzLDEyNTIzXSwyNTZdLDEzMTA0OltbMTI1MDAsMTI0NjddLDI1Nl0sMTMxMDU6W1sxMjQ5OSwxMjUyM10sMjU2XSwxMzEwNjpbWzEyNTAxLDEyNDQ5LDEyNTIxLDEyNDgzLDEyNDg5XSwyNTZdLDEzMTA3OltbMTI1MDEsMTI0NTEsMTI1NDAsMTI0ODhdLDI1Nl0sMTMxMDg6W1sxMjUwMiwxMjQ4MywxMjQ3MSwxMjQ1NSwxMjUyM10sMjU2XSwxMzEwOTpbWzEyNTAxLDEyNTIxLDEyNTMxXSwyNTZdLDEzMTEwOltbMTI1MDQsMTI0NjMsMTI0NzksMTI1NDAsMTI1MjNdLDI1Nl0sMTMxMTE6W1sxMjUwNiwxMjQ3N10sMjU2XSwxMzExMjpbWzEyNTA2LDEyNDkxLDEyNDk4XSwyNTZdLDEzMTEzOltbMTI1MDQsMTI1MjMsMTI0ODRdLDI1Nl0sMTMxMTQ6W1sxMjUwNiwxMjUzMSwxMjQ3M10sMjU2XSwxMzExNTpbWzEyNTA2LDEyNTQwLDEyNDcyXSwyNTZdLDEzMTE2OltbMTI1MDUsMTI1NDAsMTI0NzldLDI1Nl0sMTMxMTc6W1sxMjUwOSwxMjQ1MiwxMjUzMSwxMjQ4OF0sMjU2XSwxMzExODpbWzEyNTA4LDEyNTIzLDEyNDg4XSwyNTZdLDEzMTE5OltbMTI1MDcsMTI1MzFdLDI1Nl0sMTMxMjA6W1sxMjUwOSwxMjUzMSwxMjQ4OV0sMjU2XSwxMzEyMTpbWzEyNTA3LDEyNTQwLDEyNTIzXSwyNTZdLDEzMTIyOltbMTI1MDcsMTI1NDAsMTI1MzFdLDI1Nl0sMTMxMjM6W1sxMjUxMCwxMjQ1MiwxMjQ2MywxMjUyNV0sMjU2XSwxMzEyNDpbWzEyNTEwLDEyNDUyLDEyNTIzXSwyNTZdLDEzMTI1OltbMTI1MTAsMTI0ODMsMTI0OTVdLDI1Nl0sMTMxMjY6W1sxMjUxMCwxMjUyMywxMjQ2M10sMjU2XSwxMzEyNzpbWzEyNTEwLDEyNTMxLDEyNDcxLDEyNTE5LDEyNTMxXSwyNTZdLDEzMTI4OltbMTI1MTEsMTI0NjMsMTI1MjUsMTI1MzFdLDI1Nl0sMTMxMjk6W1sxMjUxMSwxMjUyMl0sMjU2XSwxMzEzMDpbWzEyNTExLDEyNTIyLDEyNDk2LDEyNTQwLDEyNTIzXSwyNTZdLDEzMTMxOltbMTI1MTMsMTI0NjBdLDI1Nl0sMTMxMzI6W1sxMjUxMywxMjQ2MCwxMjQ4OCwxMjUzMV0sMjU2XSwxMzEzMzpbWzEyNTEzLDEyNTQwLDEyNDg4LDEyNTIzXSwyNTZdLDEzMTM0OltbMTI1MTYsMTI1NDAsMTI0ODldLDI1Nl0sMTMxMzU6W1sxMjUxNiwxMjU0MCwxMjUyM10sMjU2XSwxMzEzNjpbWzEyNTE4LDEyNDUwLDEyNTMxXSwyNTZdLDEzMTM3OltbMTI1MjIsMTI0ODMsMTI0ODgsMTI1MjNdLDI1Nl0sMTMxMzg6W1sxMjUyMiwxMjUyMV0sMjU2XSwxMzEzOTpbWzEyNTIzLDEyNTAwLDEyNTQwXSwyNTZdLDEzMTQwOltbMTI1MjMsMTI1NDAsMTI1MDIsMTI1MjNdLDI1Nl0sMTMxNDE6W1sxMjUyNCwxMjUxMl0sMjU2XSwxMzE0MjpbWzEyNTI0LDEyNTMxLDEyNDg4LDEyNDY2LDEyNTMxXSwyNTZdLDEzMTQzOltbMTI1MjcsMTI0ODMsMTI0ODhdLDI1Nl0sMTMxNDQ6W1s0OCwyODg1N10sMjU2XSwxMzE0NTpbWzQ5LDI4ODU3XSwyNTZdLDEzMTQ2OltbNTAsMjg4NTddLDI1Nl0sMTMxNDc6W1s1MSwyODg1N10sMjU2XSwxMzE0ODpbWzUyLDI4ODU3XSwyNTZdLDEzMTQ5OltbNTMsMjg4NTddLDI1Nl0sMTMxNTA6W1s1NCwyODg1N10sMjU2XSwxMzE1MTpbWzU1LDI4ODU3XSwyNTZdLDEzMTUyOltbNTYsMjg4NTddLDI1Nl0sMTMxNTM6W1s1NywyODg1N10sMjU2XSwxMzE1NDpbWzQ5LDQ4LDI4ODU3XSwyNTZdLDEzMTU1OltbNDksNDksMjg4NTddLDI1Nl0sMTMxNTY6W1s0OSw1MCwyODg1N10sMjU2XSwxMzE1NzpbWzQ5LDUxLDI4ODU3XSwyNTZdLDEzMTU4OltbNDksNTIsMjg4NTddLDI1Nl0sMTMxNTk6W1s0OSw1MywyODg1N10sMjU2XSwxMzE2MDpbWzQ5LDU0LDI4ODU3XSwyNTZdLDEzMTYxOltbNDksNTUsMjg4NTddLDI1Nl0sMTMxNjI6W1s0OSw1NiwyODg1N10sMjU2XSwxMzE2MzpbWzQ5LDU3LDI4ODU3XSwyNTZdLDEzMTY0OltbNTAsNDgsMjg4NTddLDI1Nl0sMTMxNjU6W1s1MCw0OSwyODg1N10sMjU2XSwxMzE2NjpbWzUwLDUwLDI4ODU3XSwyNTZdLDEzMTY3OltbNTAsNTEsMjg4NTddLDI1Nl0sMTMxNjg6W1s1MCw1MiwyODg1N10sMjU2XSwxMzE2OTpbWzEwNCw4MCw5N10sMjU2XSwxMzE3MDpbWzEwMCw5N10sMjU2XSwxMzE3MTpbWzY1LDg1XSwyNTZdLDEzMTcyOltbOTgsOTcsMTE0XSwyNTZdLDEzMTczOltbMTExLDg2XSwyNTZdLDEzMTc0OltbMTEyLDk5XSwyNTZdLDEzMTc1OltbMTAwLDEwOV0sMjU2XSwxMzE3NjpbWzEwMCwxMDksMTc4XSwyNTZdLDEzMTc3OltbMTAwLDEwOSwxNzldLDI1Nl0sMTMxNzg6W1s3Myw4NV0sMjU2XSwxMzE3OTpbWzI0MTc5LDI1MTA0XSwyNTZdLDEzMTgwOltbMjYxNTcsMjE2NDRdLDI1Nl0sMTMxODE6W1syMjgyMywyNzQ5MV0sMjU2XSwxMzE4MjpbWzI2MTI2LDI3ODM1XSwyNTZdLDEzMTgzOltbMjY2NjYsMjQzMzUsMjAyNTAsMzEwMzhdLDI1Nl0sMTMxODQ6W1sxMTIsNjVdLDI1Nl0sMTMxODU6W1sxMTAsNjVdLDI1Nl0sMTMxODY6W1s5NTYsNjVdLDI1Nl0sMTMxODc6W1sxMDksNjVdLDI1Nl0sMTMxODg6W1sxMDcsNjVdLDI1Nl0sMTMxODk6W1s3NSw2Nl0sMjU2XSwxMzE5MDpbWzc3LDY2XSwyNTZdLDEzMTkxOltbNzEsNjZdLDI1Nl0sMTMxOTI6W1s5OSw5NywxMDhdLDI1Nl0sMTMxOTM6W1sxMDcsOTksOTcsMTA4XSwyNTZdLDEzMTk0OltbMTEyLDcwXSwyNTZdLDEzMTk1OltbMTEwLDcwXSwyNTZdLDEzMTk2OltbOTU2LDcwXSwyNTZdLDEzMTk3OltbOTU2LDEwM10sMjU2XSwxMzE5ODpbWzEwOSwxMDNdLDI1Nl0sMTMxOTk6W1sxMDcsMTAzXSwyNTZdLDEzMjAwOltbNzIsMTIyXSwyNTZdLDEzMjAxOltbMTA3LDcyLDEyMl0sMjU2XSwxMzIwMjpbWzc3LDcyLDEyMl0sMjU2XSwxMzIwMzpbWzcxLDcyLDEyMl0sMjU2XSwxMzIwNDpbWzg0LDcyLDEyMl0sMjU2XSwxMzIwNTpbWzk1Niw4NDY3XSwyNTZdLDEzMjA2OltbMTA5LDg0NjddLDI1Nl0sMTMyMDc6W1sxMDAsODQ2N10sMjU2XSwxMzIwODpbWzEwNyw4NDY3XSwyNTZdLDEzMjA5OltbMTAyLDEwOV0sMjU2XSwxMzIxMDpbWzExMCwxMDldLDI1Nl0sMTMyMTE6W1s5NTYsMTA5XSwyNTZdLDEzMjEyOltbMTA5LDEwOV0sMjU2XSwxMzIxMzpbWzk5LDEwOV0sMjU2XSwxMzIxNDpbWzEwNywxMDldLDI1Nl0sMTMyMTU6W1sxMDksMTA5LDE3OF0sMjU2XSwxMzIxNjpbWzk5LDEwOSwxNzhdLDI1Nl0sMTMyMTc6W1sxMDksMTc4XSwyNTZdLDEzMjE4OltbMTA3LDEwOSwxNzhdLDI1Nl0sMTMyMTk6W1sxMDksMTA5LDE3OV0sMjU2XSwxMzIyMDpbWzk5LDEwOSwxNzldLDI1Nl0sMTMyMjE6W1sxMDksMTc5XSwyNTZdLDEzMjIyOltbMTA3LDEwOSwxNzldLDI1Nl0sMTMyMjM6W1sxMDksODcyNSwxMTVdLDI1Nl0sMTMyMjQ6W1sxMDksODcyNSwxMTUsMTc4XSwyNTZdLDEzMjI1OltbODAsOTddLDI1Nl0sMTMyMjY6W1sxMDcsODAsOTddLDI1Nl0sMTMyMjc6W1s3Nyw4MCw5N10sMjU2XSwxMzIyODpbWzcxLDgwLDk3XSwyNTZdLDEzMjI5OltbMTE0LDk3LDEwMF0sMjU2XSwxMzIzMDpbWzExNCw5NywxMDAsODcyNSwxMTVdLDI1Nl0sMTMyMzE6W1sxMTQsOTcsMTAwLDg3MjUsMTE1LDE3OF0sMjU2XSwxMzIzMjpbWzExMiwxMTVdLDI1Nl0sMTMyMzM6W1sxMTAsMTE1XSwyNTZdLDEzMjM0OltbOTU2LDExNV0sMjU2XSwxMzIzNTpbWzEwOSwxMTVdLDI1Nl0sMTMyMzY6W1sxMTIsODZdLDI1Nl0sMTMyMzc6W1sxMTAsODZdLDI1Nl0sMTMyMzg6W1s5NTYsODZdLDI1Nl0sMTMyMzk6W1sxMDksODZdLDI1Nl0sMTMyNDA6W1sxMDcsODZdLDI1Nl0sMTMyNDE6W1s3Nyw4Nl0sMjU2XSwxMzI0MjpbWzExMiw4N10sMjU2XSwxMzI0MzpbWzExMCw4N10sMjU2XSwxMzI0NDpbWzk1Niw4N10sMjU2XSwxMzI0NTpbWzEwOSw4N10sMjU2XSwxMzI0NjpbWzEwNyw4N10sMjU2XSwxMzI0NzpbWzc3LDg3XSwyNTZdLDEzMjQ4OltbMTA3LDkzN10sMjU2XSwxMzI0OTpbWzc3LDkzN10sMjU2XSwxMzI1MDpbWzk3LDQ2LDEwOSw0Nl0sMjU2XSwxMzI1MTpbWzY2LDExM10sMjU2XSwxMzI1MjpbWzk5LDk5XSwyNTZdLDEzMjUzOltbOTksMTAwXSwyNTZdLDEzMjU0OltbNjcsODcyNSwxMDcsMTAzXSwyNTZdLDEzMjU1OltbNjcsMTExLDQ2XSwyNTZdLDEzMjU2OltbMTAwLDY2XSwyNTZdLDEzMjU3OltbNzEsMTIxXSwyNTZdLDEzMjU4OltbMTA0LDk3XSwyNTZdLDEzMjU5OltbNzIsODBdLDI1Nl0sMTMyNjA6W1sxMDUsMTEwXSwyNTZdLDEzMjYxOltbNzUsNzVdLDI1Nl0sMTMyNjI6W1s3NSw3N10sMjU2XSwxMzI2MzpbWzEwNywxMTZdLDI1Nl0sMTMyNjQ6W1sxMDgsMTA5XSwyNTZdLDEzMjY1OltbMTA4LDExMF0sMjU2XSwxMzI2NjpbWzEwOCwxMTEsMTAzXSwyNTZdLDEzMjY3OltbMTA4LDEyMF0sMjU2XSwxMzI2ODpbWzEwOSw5OF0sMjU2XSwxMzI2OTpbWzEwOSwxMDUsMTA4XSwyNTZdLDEzMjcwOltbMTA5LDExMSwxMDhdLDI1Nl0sMTMyNzE6W1s4MCw3Ml0sMjU2XSwxMzI3MjpbWzExMiw0NiwxMDksNDZdLDI1Nl0sMTMyNzM6W1s4MCw4MCw3N10sMjU2XSwxMzI3NDpbWzgwLDgyXSwyNTZdLDEzMjc1OltbMTE1LDExNF0sMjU2XSwxMzI3NjpbWzgzLDExOF0sMjU2XSwxMzI3NzpbWzg3LDk4XSwyNTZdLDEzMjc4OltbODYsODcyNSwxMDldLDI1Nl0sMTMyNzk6W1s2NSw4NzI1LDEwOV0sMjU2XSwxMzI4MDpbWzQ5LDI2MDg1XSwyNTZdLDEzMjgxOltbNTAsMjYwODVdLDI1Nl0sMTMyODI6W1s1MSwyNjA4NV0sMjU2XSwxMzI4MzpbWzUyLDI2MDg1XSwyNTZdLDEzMjg0OltbNTMsMjYwODVdLDI1Nl0sMTMyODU6W1s1NCwyNjA4NV0sMjU2XSwxMzI4NjpbWzU1LDI2MDg1XSwyNTZdLDEzMjg3OltbNTYsMjYwODVdLDI1Nl0sMTMyODg6W1s1NywyNjA4NV0sMjU2XSwxMzI4OTpbWzQ5LDQ4LDI2MDg1XSwyNTZdLDEzMjkwOltbNDksNDksMjYwODVdLDI1Nl0sMTMyOTE6W1s0OSw1MCwyNjA4NV0sMjU2XSwxMzI5MjpbWzQ5LDUxLDI2MDg1XSwyNTZdLDEzMjkzOltbNDksNTIsMjYwODVdLDI1Nl0sMTMyOTQ6W1s0OSw1MywyNjA4NV0sMjU2XSwxMzI5NTpbWzQ5LDU0LDI2MDg1XSwyNTZdLDEzMjk2OltbNDksNTUsMjYwODVdLDI1Nl0sMTMyOTc6W1s0OSw1NiwyNjA4NV0sMjU2XSwxMzI5ODpbWzQ5LDU3LDI2MDg1XSwyNTZdLDEzMjk5OltbNTAsNDgsMjYwODVdLDI1Nl0sMTMzMDA6W1s1MCw0OSwyNjA4NV0sMjU2XSwxMzMwMTpbWzUwLDUwLDI2MDg1XSwyNTZdLDEzMzAyOltbNTAsNTEsMjYwODVdLDI1Nl0sMTMzMDM6W1s1MCw1MiwyNjA4NV0sMjU2XSwxMzMwNDpbWzUwLDUzLDI2MDg1XSwyNTZdLDEzMzA1OltbNTAsNTQsMjYwODVdLDI1Nl0sMTMzMDY6W1s1MCw1NSwyNjA4NV0sMjU2XSwxMzMwNzpbWzUwLDU2LDI2MDg1XSwyNTZdLDEzMzA4OltbNTAsNTcsMjYwODVdLDI1Nl0sMTMzMDk6W1s1MSw0OCwyNjA4NV0sMjU2XSwxMzMxMDpbWzUxLDQ5LDI2MDg1XSwyNTZdLDEzMzExOltbMTAzLDk3LDEwOF0sMjU2XX0sDQoyNzEzNjp7OTI5MTI6WywxXSw5MjkxMzpbLDFdLDkyOTE0OlssMV0sOTI5MTU6WywxXSw5MjkxNjpbLDFdfSwNCjI3MzkyOns5Mjk3NjpbLDIzMF0sOTI5Nzc6WywyMzBdLDkyOTc4OlssMjMwXSw5Mjk3OTpbLDIzMF0sOTI5ODA6WywyMzBdLDkyOTgxOlssMjMwXSw5Mjk4MjpbLDIzMF19LA0KNDI0OTY6ezQyNjA3OlssMjMwXSw0MjYxMjpbLDIzMF0sNDI2MTM6WywyMzBdLDQyNjE0OlssMjMwXSw0MjYxNTpbLDIzMF0sNDI2MTY6WywyMzBdLDQyNjE3OlssMjMwXSw0MjYxODpbLDIzMF0sNDI2MTk6WywyMzBdLDQyNjIwOlssMjMwXSw0MjYyMTpbLDIzMF0sNDI2NTI6W1sxMDk4XSwyNTZdLDQyNjUzOltbMTEwMF0sMjU2XSw0MjY1NTpbLDIzMF0sNDI3MzY6WywyMzBdLDQyNzM3OlssMjMwXX0sDQo0Mjc1Mjp7NDI4NjQ6W1s0Mjg2M10sMjU2XSw0MzAwMDpbWzI5NF0sMjU2XSw0MzAwMTpbWzMzOV0sMjU2XX0sDQo0MzAwODp7NDMwMTQ6Wyw5XSw0MzIwNDpbLDldLDQzMjMyOlssMjMwXSw0MzIzMzpbLDIzMF0sNDMyMzQ6WywyMzBdLDQzMjM1OlssMjMwXSw0MzIzNjpbLDIzMF0sNDMyMzc6WywyMzBdLDQzMjM4OlssMjMwXSw0MzIzOTpbLDIzMF0sNDMyNDA6WywyMzBdLDQzMjQxOlssMjMwXSw0MzI0MjpbLDIzMF0sNDMyNDM6WywyMzBdLDQzMjQ0OlssMjMwXSw0MzI0NTpbLDIzMF0sNDMyNDY6WywyMzBdLDQzMjQ3OlssMjMwXSw0MzI0ODpbLDIzMF0sNDMyNDk6WywyMzBdfSwNCjQzMjY0Ons0MzMwNzpbLDIyMF0sNDMzMDg6WywyMjBdLDQzMzA5OlssMjIwXSw0MzM0NzpbLDldLDQzNDQzOlssN10sNDM0NTY6Wyw5XX0sDQo0MzUyMDp7NDM2OTY6WywyMzBdLDQzNjk4OlssMjMwXSw0MzY5OTpbLDIzMF0sNDM3MDA6WywyMjBdLDQzNzAzOlssMjMwXSw0MzcwNDpbLDIzMF0sNDM3MTA6WywyMzBdLDQzNzExOlssMjMwXSw0MzcxMzpbLDIzMF0sNDM3NjY6Wyw5XX0sDQo0Mzc3Njp7NDM4Njg6W1s0Mjc5MV0sMjU2XSw0Mzg2OTpbWzQzODMxXSwyNTZdLDQzODcwOltbNjE5XSwyNTZdLDQzODcxOltbNDM4NThdLDI1Nl0sNDQwMTM6Wyw5XX0sDQo0ODEyODp7MTEzODIyOlssMV19LA0KNTM1MDQ6ezExOTEzNDpbWzExOTEyNywxMTkxNDFdLDUxMl0sMTE5MTM1OltbMTE5MTI4LDExOTE0MV0sNTEyXSwxMTkxMzY6W1sxMTkxMzUsMTE5MTUwXSw1MTJdLDExOTEzNzpbWzExOTEzNSwxMTkxNTFdLDUxMl0sMTE5MTM4OltbMTE5MTM1LDExOTE1Ml0sNTEyXSwxMTkxMzk6W1sxMTkxMzUsMTE5MTUzXSw1MTJdLDExOTE0MDpbWzExOTEzNSwxMTkxNTRdLDUxMl0sMTE5MTQxOlssMjE2XSwxMTkxNDI6WywyMTZdLDExOTE0MzpbLDFdLDExOTE0NDpbLDFdLDExOTE0NTpbLDFdLDExOTE0OTpbLDIyNl0sMTE5MTUwOlssMjE2XSwxMTkxNTE6WywyMTZdLDExOTE1MjpbLDIxNl0sMTE5MTUzOlssMjE2XSwxMTkxNTQ6WywyMTZdLDExOTE2MzpbLDIyMF0sMTE5MTY0OlssMjIwXSwxMTkxNjU6WywyMjBdLDExOTE2NjpbLDIyMF0sMTE5MTY3OlssMjIwXSwxMTkxNjg6WywyMjBdLDExOTE2OTpbLDIyMF0sMTE5MTcwOlssMjIwXSwxMTkxNzM6WywyMzBdLDExOTE3NDpbLDIzMF0sMTE5MTc1OlssMjMwXSwxMTkxNzY6WywyMzBdLDExOTE3NzpbLDIzMF0sMTE5MTc4OlssMjIwXSwxMTkxNzk6WywyMjBdLDExOTIxMDpbLDIzMF0sMTE5MjExOlssMjMwXSwxMTkyMTI6WywyMzBdLDExOTIxMzpbLDIzMF0sMTE5MjI3OltbMTE5MjI1LDExOTE0MV0sNTEyXSwxMTkyMjg6W1sxMTkyMjYsMTE5MTQxXSw1MTJdLDExOTIyOTpbWzExOTIyNywxMTkxNTBdLDUxMl0sMTE5MjMwOltbMTE5MjI4LDExOTE1MF0sNTEyXSwxMTkyMzE6W1sxMTkyMjcsMTE5MTUxXSw1MTJdLDExOTIzMjpbWzExOTIyOCwxMTkxNTFdLDUxMl19LA0KNTM3NjA6ezExOTM2MjpbLDIzMF0sMTE5MzYzOlssMjMwXSwxMTkzNjQ6WywyMzBdfSwNCjU0MjcyOnsxMTk4MDg6W1s2NV0sMjU2XSwxMTk4MDk6W1s2Nl0sMjU2XSwxMTk4MTA6W1s2N10sMjU2XSwxMTk4MTE6W1s2OF0sMjU2XSwxMTk4MTI6W1s2OV0sMjU2XSwxMTk4MTM6W1s3MF0sMjU2XSwxMTk4MTQ6W1s3MV0sMjU2XSwxMTk4MTU6W1s3Ml0sMjU2XSwxMTk4MTY6W1s3M10sMjU2XSwxMTk4MTc6W1s3NF0sMjU2XSwxMTk4MTg6W1s3NV0sMjU2XSwxMTk4MTk6W1s3Nl0sMjU2XSwxMTk4MjA6W1s3N10sMjU2XSwxMTk4MjE6W1s3OF0sMjU2XSwxMTk4MjI6W1s3OV0sMjU2XSwxMTk4MjM6W1s4MF0sMjU2XSwxMTk4MjQ6W1s4MV0sMjU2XSwxMTk4MjU6W1s4Ml0sMjU2XSwxMTk4MjY6W1s4M10sMjU2XSwxMTk4Mjc6W1s4NF0sMjU2XSwxMTk4Mjg6W1s4NV0sMjU2XSwxMTk4Mjk6W1s4Nl0sMjU2XSwxMTk4MzA6W1s4N10sMjU2XSwxMTk4MzE6W1s4OF0sMjU2XSwxMTk4MzI6W1s4OV0sMjU2XSwxMTk4MzM6W1s5MF0sMjU2XSwxMTk4MzQ6W1s5N10sMjU2XSwxMTk4MzU6W1s5OF0sMjU2XSwxMTk4MzY6W1s5OV0sMjU2XSwxMTk4Mzc6W1sxMDBdLDI1Nl0sMTE5ODM4OltbMTAxXSwyNTZdLDExOTgzOTpbWzEwMl0sMjU2XSwxMTk4NDA6W1sxMDNdLDI1Nl0sMTE5ODQxOltbMTA0XSwyNTZdLDExOTg0MjpbWzEwNV0sMjU2XSwxMTk4NDM6W1sxMDZdLDI1Nl0sMTE5ODQ0OltbMTA3XSwyNTZdLDExOTg0NTpbWzEwOF0sMjU2XSwxMTk4NDY6W1sxMDldLDI1Nl0sMTE5ODQ3OltbMTEwXSwyNTZdLDExOTg0ODpbWzExMV0sMjU2XSwxMTk4NDk6W1sxMTJdLDI1Nl0sMTE5ODUwOltbMTEzXSwyNTZdLDExOTg1MTpbWzExNF0sMjU2XSwxMTk4NTI6W1sxMTVdLDI1Nl0sMTE5ODUzOltbMTE2XSwyNTZdLDExOTg1NDpbWzExN10sMjU2XSwxMTk4NTU6W1sxMThdLDI1Nl0sMTE5ODU2OltbMTE5XSwyNTZdLDExOTg1NzpbWzEyMF0sMjU2XSwxMTk4NTg6W1sxMjFdLDI1Nl0sMTE5ODU5OltbMTIyXSwyNTZdLDExOTg2MDpbWzY1XSwyNTZdLDExOTg2MTpbWzY2XSwyNTZdLDExOTg2MjpbWzY3XSwyNTZdLDExOTg2MzpbWzY4XSwyNTZdLDExOTg2NDpbWzY5XSwyNTZdLDExOTg2NTpbWzcwXSwyNTZdLDExOTg2NjpbWzcxXSwyNTZdLDExOTg2NzpbWzcyXSwyNTZdLDExOTg2ODpbWzczXSwyNTZdLDExOTg2OTpbWzc0XSwyNTZdLDExOTg3MDpbWzc1XSwyNTZdLDExOTg3MTpbWzc2XSwyNTZdLDExOTg3MjpbWzc3XSwyNTZdLDExOTg3MzpbWzc4XSwyNTZdLDExOTg3NDpbWzc5XSwyNTZdLDExOTg3NTpbWzgwXSwyNTZdLDExOTg3NjpbWzgxXSwyNTZdLDExOTg3NzpbWzgyXSwyNTZdLDExOTg3ODpbWzgzXSwyNTZdLDExOTg3OTpbWzg0XSwyNTZdLDExOTg4MDpbWzg1XSwyNTZdLDExOTg4MTpbWzg2XSwyNTZdLDExOTg4MjpbWzg3XSwyNTZdLDExOTg4MzpbWzg4XSwyNTZdLDExOTg4NDpbWzg5XSwyNTZdLDExOTg4NTpbWzkwXSwyNTZdLDExOTg4NjpbWzk3XSwyNTZdLDExOTg4NzpbWzk4XSwyNTZdLDExOTg4ODpbWzk5XSwyNTZdLDExOTg4OTpbWzEwMF0sMjU2XSwxMTk4OTA6W1sxMDFdLDI1Nl0sMTE5ODkxOltbMTAyXSwyNTZdLDExOTg5MjpbWzEwM10sMjU2XSwxMTk4OTQ6W1sxMDVdLDI1Nl0sMTE5ODk1OltbMTA2XSwyNTZdLDExOTg5NjpbWzEwN10sMjU2XSwxMTk4OTc6W1sxMDhdLDI1Nl0sMTE5ODk4OltbMTA5XSwyNTZdLDExOTg5OTpbWzExMF0sMjU2XSwxMTk5MDA6W1sxMTFdLDI1Nl0sMTE5OTAxOltbMTEyXSwyNTZdLDExOTkwMjpbWzExM10sMjU2XSwxMTk5MDM6W1sxMTRdLDI1Nl0sMTE5OTA0OltbMTE1XSwyNTZdLDExOTkwNTpbWzExNl0sMjU2XSwxMTk5MDY6W1sxMTddLDI1Nl0sMTE5OTA3OltbMTE4XSwyNTZdLDExOTkwODpbWzExOV0sMjU2XSwxMTk5MDk6W1sxMjBdLDI1Nl0sMTE5OTEwOltbMTIxXSwyNTZdLDExOTkxMTpbWzEyMl0sMjU2XSwxMTk5MTI6W1s2NV0sMjU2XSwxMTk5MTM6W1s2Nl0sMjU2XSwxMTk5MTQ6W1s2N10sMjU2XSwxMTk5MTU6W1s2OF0sMjU2XSwxMTk5MTY6W1s2OV0sMjU2XSwxMTk5MTc6W1s3MF0sMjU2XSwxMTk5MTg6W1s3MV0sMjU2XSwxMTk5MTk6W1s3Ml0sMjU2XSwxMTk5MjA6W1s3M10sMjU2XSwxMTk5MjE6W1s3NF0sMjU2XSwxMTk5MjI6W1s3NV0sMjU2XSwxMTk5MjM6W1s3Nl0sMjU2XSwxMTk5MjQ6W1s3N10sMjU2XSwxMTk5MjU6W1s3OF0sMjU2XSwxMTk5MjY6W1s3OV0sMjU2XSwxMTk5Mjc6W1s4MF0sMjU2XSwxMTk5Mjg6W1s4MV0sMjU2XSwxMTk5Mjk6W1s4Ml0sMjU2XSwxMTk5MzA6W1s4M10sMjU2XSwxMTk5MzE6W1s4NF0sMjU2XSwxMTk5MzI6W1s4NV0sMjU2XSwxMTk5MzM6W1s4Nl0sMjU2XSwxMTk5MzQ6W1s4N10sMjU2XSwxMTk5MzU6W1s4OF0sMjU2XSwxMTk5MzY6W1s4OV0sMjU2XSwxMTk5Mzc6W1s5MF0sMjU2XSwxMTk5Mzg6W1s5N10sMjU2XSwxMTk5Mzk6W1s5OF0sMjU2XSwxMTk5NDA6W1s5OV0sMjU2XSwxMTk5NDE6W1sxMDBdLDI1Nl0sMTE5OTQyOltbMTAxXSwyNTZdLDExOTk0MzpbWzEwMl0sMjU2XSwxMTk5NDQ6W1sxMDNdLDI1Nl0sMTE5OTQ1OltbMTA0XSwyNTZdLDExOTk0NjpbWzEwNV0sMjU2XSwxMTk5NDc6W1sxMDZdLDI1Nl0sMTE5OTQ4OltbMTA3XSwyNTZdLDExOTk0OTpbWzEwOF0sMjU2XSwxMTk5NTA6W1sxMDldLDI1Nl0sMTE5OTUxOltbMTEwXSwyNTZdLDExOTk1MjpbWzExMV0sMjU2XSwxMTk5NTM6W1sxMTJdLDI1Nl0sMTE5OTU0OltbMTEzXSwyNTZdLDExOTk1NTpbWzExNF0sMjU2XSwxMTk5NTY6W1sxMTVdLDI1Nl0sMTE5OTU3OltbMTE2XSwyNTZdLDExOTk1ODpbWzExN10sMjU2XSwxMTk5NTk6W1sxMThdLDI1Nl0sMTE5OTYwOltbMTE5XSwyNTZdLDExOTk2MTpbWzEyMF0sMjU2XSwxMTk5NjI6W1sxMjFdLDI1Nl0sMTE5OTYzOltbMTIyXSwyNTZdLDExOTk2NDpbWzY1XSwyNTZdLDExOTk2NjpbWzY3XSwyNTZdLDExOTk2NzpbWzY4XSwyNTZdLDExOTk3MDpbWzcxXSwyNTZdLDExOTk3MzpbWzc0XSwyNTZdLDExOTk3NDpbWzc1XSwyNTZdLDExOTk3NzpbWzc4XSwyNTZdLDExOTk3ODpbWzc5XSwyNTZdLDExOTk3OTpbWzgwXSwyNTZdLDExOTk4MDpbWzgxXSwyNTZdLDExOTk4MjpbWzgzXSwyNTZdLDExOTk4MzpbWzg0XSwyNTZdLDExOTk4NDpbWzg1XSwyNTZdLDExOTk4NTpbWzg2XSwyNTZdLDExOTk4NjpbWzg3XSwyNTZdLDExOTk4NzpbWzg4XSwyNTZdLDExOTk4ODpbWzg5XSwyNTZdLDExOTk4OTpbWzkwXSwyNTZdLDExOTk5MDpbWzk3XSwyNTZdLDExOTk5MTpbWzk4XSwyNTZdLDExOTk5MjpbWzk5XSwyNTZdLDExOTk5MzpbWzEwMF0sMjU2XSwxMTk5OTU6W1sxMDJdLDI1Nl0sMTE5OTk3OltbMTA0XSwyNTZdLDExOTk5ODpbWzEwNV0sMjU2XSwxMTk5OTk6W1sxMDZdLDI1Nl0sMTIwMDAwOltbMTA3XSwyNTZdLDEyMDAwMTpbWzEwOF0sMjU2XSwxMjAwMDI6W1sxMDldLDI1Nl0sMTIwMDAzOltbMTEwXSwyNTZdLDEyMDAwNTpbWzExMl0sMjU2XSwxMjAwMDY6W1sxMTNdLDI1Nl0sMTIwMDA3OltbMTE0XSwyNTZdLDEyMDAwODpbWzExNV0sMjU2XSwxMjAwMDk6W1sxMTZdLDI1Nl0sMTIwMDEwOltbMTE3XSwyNTZdLDEyMDAxMTpbWzExOF0sMjU2XSwxMjAwMTI6W1sxMTldLDI1Nl0sMTIwMDEzOltbMTIwXSwyNTZdLDEyMDAxNDpbWzEyMV0sMjU2XSwxMjAwMTU6W1sxMjJdLDI1Nl0sMTIwMDE2OltbNjVdLDI1Nl0sMTIwMDE3OltbNjZdLDI1Nl0sMTIwMDE4OltbNjddLDI1Nl0sMTIwMDE5OltbNjhdLDI1Nl0sMTIwMDIwOltbNjldLDI1Nl0sMTIwMDIxOltbNzBdLDI1Nl0sMTIwMDIyOltbNzFdLDI1Nl0sMTIwMDIzOltbNzJdLDI1Nl0sMTIwMDI0OltbNzNdLDI1Nl0sMTIwMDI1OltbNzRdLDI1Nl0sMTIwMDI2OltbNzVdLDI1Nl0sMTIwMDI3OltbNzZdLDI1Nl0sMTIwMDI4OltbNzddLDI1Nl0sMTIwMDI5OltbNzhdLDI1Nl0sMTIwMDMwOltbNzldLDI1Nl0sMTIwMDMxOltbODBdLDI1Nl0sMTIwMDMyOltbODFdLDI1Nl0sMTIwMDMzOltbODJdLDI1Nl0sMTIwMDM0OltbODNdLDI1Nl0sMTIwMDM1OltbODRdLDI1Nl0sMTIwMDM2OltbODVdLDI1Nl0sMTIwMDM3OltbODZdLDI1Nl0sMTIwMDM4OltbODddLDI1Nl0sMTIwMDM5OltbODhdLDI1Nl0sMTIwMDQwOltbODldLDI1Nl0sMTIwMDQxOltbOTBdLDI1Nl0sMTIwMDQyOltbOTddLDI1Nl0sMTIwMDQzOltbOThdLDI1Nl0sMTIwMDQ0OltbOTldLDI1Nl0sMTIwMDQ1OltbMTAwXSwyNTZdLDEyMDA0NjpbWzEwMV0sMjU2XSwxMjAwNDc6W1sxMDJdLDI1Nl0sMTIwMDQ4OltbMTAzXSwyNTZdLDEyMDA0OTpbWzEwNF0sMjU2XSwxMjAwNTA6W1sxMDVdLDI1Nl0sMTIwMDUxOltbMTA2XSwyNTZdLDEyMDA1MjpbWzEwN10sMjU2XSwxMjAwNTM6W1sxMDhdLDI1Nl0sMTIwMDU0OltbMTA5XSwyNTZdLDEyMDA1NTpbWzExMF0sMjU2XSwxMjAwNTY6W1sxMTFdLDI1Nl0sMTIwMDU3OltbMTEyXSwyNTZdLDEyMDA1ODpbWzExM10sMjU2XSwxMjAwNTk6W1sxMTRdLDI1Nl0sMTIwMDYwOltbMTE1XSwyNTZdLDEyMDA2MTpbWzExNl0sMjU2XSwxMjAwNjI6W1sxMTddLDI1Nl0sMTIwMDYzOltbMTE4XSwyNTZdfSwNCjU0NTI4OnsxMjAwNjQ6W1sxMTldLDI1Nl0sMTIwMDY1OltbMTIwXSwyNTZdLDEyMDA2NjpbWzEyMV0sMjU2XSwxMjAwNjc6W1sxMjJdLDI1Nl0sMTIwMDY4OltbNjVdLDI1Nl0sMTIwMDY5OltbNjZdLDI1Nl0sMTIwMDcxOltbNjhdLDI1Nl0sMTIwMDcyOltbNjldLDI1Nl0sMTIwMDczOltbNzBdLDI1Nl0sMTIwMDc0OltbNzFdLDI1Nl0sMTIwMDc3OltbNzRdLDI1Nl0sMTIwMDc4OltbNzVdLDI1Nl0sMTIwMDc5OltbNzZdLDI1Nl0sMTIwMDgwOltbNzddLDI1Nl0sMTIwMDgxOltbNzhdLDI1Nl0sMTIwMDgyOltbNzldLDI1Nl0sMTIwMDgzOltbODBdLDI1Nl0sMTIwMDg0OltbODFdLDI1Nl0sMTIwMDg2OltbODNdLDI1Nl0sMTIwMDg3OltbODRdLDI1Nl0sMTIwMDg4OltbODVdLDI1Nl0sMTIwMDg5OltbODZdLDI1Nl0sMTIwMDkwOltbODddLDI1Nl0sMTIwMDkxOltbODhdLDI1Nl0sMTIwMDkyOltbODldLDI1Nl0sMTIwMDk0OltbOTddLDI1Nl0sMTIwMDk1OltbOThdLDI1Nl0sMTIwMDk2OltbOTldLDI1Nl0sMTIwMDk3OltbMTAwXSwyNTZdLDEyMDA5ODpbWzEwMV0sMjU2XSwxMjAwOTk6W1sxMDJdLDI1Nl0sMTIwMTAwOltbMTAzXSwyNTZdLDEyMDEwMTpbWzEwNF0sMjU2XSwxMjAxMDI6W1sxMDVdLDI1Nl0sMTIwMTAzOltbMTA2XSwyNTZdLDEyMDEwNDpbWzEwN10sMjU2XSwxMjAxMDU6W1sxMDhdLDI1Nl0sMTIwMTA2OltbMTA5XSwyNTZdLDEyMDEwNzpbWzExMF0sMjU2XSwxMjAxMDg6W1sxMTFdLDI1Nl0sMTIwMTA5OltbMTEyXSwyNTZdLDEyMDExMDpbWzExM10sMjU2XSwxMjAxMTE6W1sxMTRdLDI1Nl0sMTIwMTEyOltbMTE1XSwyNTZdLDEyMDExMzpbWzExNl0sMjU2XSwxMjAxMTQ6W1sxMTddLDI1Nl0sMTIwMTE1OltbMTE4XSwyNTZdLDEyMDExNjpbWzExOV0sMjU2XSwxMjAxMTc6W1sxMjBdLDI1Nl0sMTIwMTE4OltbMTIxXSwyNTZdLDEyMDExOTpbWzEyMl0sMjU2XSwxMjAxMjA6W1s2NV0sMjU2XSwxMjAxMjE6W1s2Nl0sMjU2XSwxMjAxMjM6W1s2OF0sMjU2XSwxMjAxMjQ6W1s2OV0sMjU2XSwxMjAxMjU6W1s3MF0sMjU2XSwxMjAxMjY6W1s3MV0sMjU2XSwxMjAxMjg6W1s3M10sMjU2XSwxMjAxMjk6W1s3NF0sMjU2XSwxMjAxMzA6W1s3NV0sMjU2XSwxMjAxMzE6W1s3Nl0sMjU2XSwxMjAxMzI6W1s3N10sMjU2XSwxMjAxMzQ6W1s3OV0sMjU2XSwxMjAxMzg6W1s4M10sMjU2XSwxMjAxMzk6W1s4NF0sMjU2XSwxMjAxNDA6W1s4NV0sMjU2XSwxMjAxNDE6W1s4Nl0sMjU2XSwxMjAxNDI6W1s4N10sMjU2XSwxMjAxNDM6W1s4OF0sMjU2XSwxMjAxNDQ6W1s4OV0sMjU2XSwxMjAxNDY6W1s5N10sMjU2XSwxMjAxNDc6W1s5OF0sMjU2XSwxMjAxNDg6W1s5OV0sMjU2XSwxMjAxNDk6W1sxMDBdLDI1Nl0sMTIwMTUwOltbMTAxXSwyNTZdLDEyMDE1MTpbWzEwMl0sMjU2XSwxMjAxNTI6W1sxMDNdLDI1Nl0sMTIwMTUzOltbMTA0XSwyNTZdLDEyMDE1NDpbWzEwNV0sMjU2XSwxMjAxNTU6W1sxMDZdLDI1Nl0sMTIwMTU2OltbMTA3XSwyNTZdLDEyMDE1NzpbWzEwOF0sMjU2XSwxMjAxNTg6W1sxMDldLDI1Nl0sMTIwMTU5OltbMTEwXSwyNTZdLDEyMDE2MDpbWzExMV0sMjU2XSwxMjAxNjE6W1sxMTJdLDI1Nl0sMTIwMTYyOltbMTEzXSwyNTZdLDEyMDE2MzpbWzExNF0sMjU2XSwxMjAxNjQ6W1sxMTVdLDI1Nl0sMTIwMTY1OltbMTE2XSwyNTZdLDEyMDE2NjpbWzExN10sMjU2XSwxMjAxNjc6W1sxMThdLDI1Nl0sMTIwMTY4OltbMTE5XSwyNTZdLDEyMDE2OTpbWzEyMF0sMjU2XSwxMjAxNzA6W1sxMjFdLDI1Nl0sMTIwMTcxOltbMTIyXSwyNTZdLDEyMDE3MjpbWzY1XSwyNTZdLDEyMDE3MzpbWzY2XSwyNTZdLDEyMDE3NDpbWzY3XSwyNTZdLDEyMDE3NTpbWzY4XSwyNTZdLDEyMDE3NjpbWzY5XSwyNTZdLDEyMDE3NzpbWzcwXSwyNTZdLDEyMDE3ODpbWzcxXSwyNTZdLDEyMDE3OTpbWzcyXSwyNTZdLDEyMDE4MDpbWzczXSwyNTZdLDEyMDE4MTpbWzc0XSwyNTZdLDEyMDE4MjpbWzc1XSwyNTZdLDEyMDE4MzpbWzc2XSwyNTZdLDEyMDE4NDpbWzc3XSwyNTZdLDEyMDE4NTpbWzc4XSwyNTZdLDEyMDE4NjpbWzc5XSwyNTZdLDEyMDE4NzpbWzgwXSwyNTZdLDEyMDE4ODpbWzgxXSwyNTZdLDEyMDE4OTpbWzgyXSwyNTZdLDEyMDE5MDpbWzgzXSwyNTZdLDEyMDE5MTpbWzg0XSwyNTZdLDEyMDE5MjpbWzg1XSwyNTZdLDEyMDE5MzpbWzg2XSwyNTZdLDEyMDE5NDpbWzg3XSwyNTZdLDEyMDE5NTpbWzg4XSwyNTZdLDEyMDE5NjpbWzg5XSwyNTZdLDEyMDE5NzpbWzkwXSwyNTZdLDEyMDE5ODpbWzk3XSwyNTZdLDEyMDE5OTpbWzk4XSwyNTZdLDEyMDIwMDpbWzk5XSwyNTZdLDEyMDIwMTpbWzEwMF0sMjU2XSwxMjAyMDI6W1sxMDFdLDI1Nl0sMTIwMjAzOltbMTAyXSwyNTZdLDEyMDIwNDpbWzEwM10sMjU2XSwxMjAyMDU6W1sxMDRdLDI1Nl0sMTIwMjA2OltbMTA1XSwyNTZdLDEyMDIwNzpbWzEwNl0sMjU2XSwxMjAyMDg6W1sxMDddLDI1Nl0sMTIwMjA5OltbMTA4XSwyNTZdLDEyMDIxMDpbWzEwOV0sMjU2XSwxMjAyMTE6W1sxMTBdLDI1Nl0sMTIwMjEyOltbMTExXSwyNTZdLDEyMDIxMzpbWzExMl0sMjU2XSwxMjAyMTQ6W1sxMTNdLDI1Nl0sMTIwMjE1OltbMTE0XSwyNTZdLDEyMDIxNjpbWzExNV0sMjU2XSwxMjAyMTc6W1sxMTZdLDI1Nl0sMTIwMjE4OltbMTE3XSwyNTZdLDEyMDIxOTpbWzExOF0sMjU2XSwxMjAyMjA6W1sxMTldLDI1Nl0sMTIwMjIxOltbMTIwXSwyNTZdLDEyMDIyMjpbWzEyMV0sMjU2XSwxMjAyMjM6W1sxMjJdLDI1Nl0sMTIwMjI0OltbNjVdLDI1Nl0sMTIwMjI1OltbNjZdLDI1Nl0sMTIwMjI2OltbNjddLDI1Nl0sMTIwMjI3OltbNjhdLDI1Nl0sMTIwMjI4OltbNjldLDI1Nl0sMTIwMjI5OltbNzBdLDI1Nl0sMTIwMjMwOltbNzFdLDI1Nl0sMTIwMjMxOltbNzJdLDI1Nl0sMTIwMjMyOltbNzNdLDI1Nl0sMTIwMjMzOltbNzRdLDI1Nl0sMTIwMjM0OltbNzVdLDI1Nl0sMTIwMjM1OltbNzZdLDI1Nl0sMTIwMjM2OltbNzddLDI1Nl0sMTIwMjM3OltbNzhdLDI1Nl0sMTIwMjM4OltbNzldLDI1Nl0sMTIwMjM5OltbODBdLDI1Nl0sMTIwMjQwOltbODFdLDI1Nl0sMTIwMjQxOltbODJdLDI1Nl0sMTIwMjQyOltbODNdLDI1Nl0sMTIwMjQzOltbODRdLDI1Nl0sMTIwMjQ0OltbODVdLDI1Nl0sMTIwMjQ1OltbODZdLDI1Nl0sMTIwMjQ2OltbODddLDI1Nl0sMTIwMjQ3OltbODhdLDI1Nl0sMTIwMjQ4OltbODldLDI1Nl0sMTIwMjQ5OltbOTBdLDI1Nl0sMTIwMjUwOltbOTddLDI1Nl0sMTIwMjUxOltbOThdLDI1Nl0sMTIwMjUyOltbOTldLDI1Nl0sMTIwMjUzOltbMTAwXSwyNTZdLDEyMDI1NDpbWzEwMV0sMjU2XSwxMjAyNTU6W1sxMDJdLDI1Nl0sMTIwMjU2OltbMTAzXSwyNTZdLDEyMDI1NzpbWzEwNF0sMjU2XSwxMjAyNTg6W1sxMDVdLDI1Nl0sMTIwMjU5OltbMTA2XSwyNTZdLDEyMDI2MDpbWzEwN10sMjU2XSwxMjAyNjE6W1sxMDhdLDI1Nl0sMTIwMjYyOltbMTA5XSwyNTZdLDEyMDI2MzpbWzExMF0sMjU2XSwxMjAyNjQ6W1sxMTFdLDI1Nl0sMTIwMjY1OltbMTEyXSwyNTZdLDEyMDI2NjpbWzExM10sMjU2XSwxMjAyNjc6W1sxMTRdLDI1Nl0sMTIwMjY4OltbMTE1XSwyNTZdLDEyMDI2OTpbWzExNl0sMjU2XSwxMjAyNzA6W1sxMTddLDI1Nl0sMTIwMjcxOltbMTE4XSwyNTZdLDEyMDI3MjpbWzExOV0sMjU2XSwxMjAyNzM6W1sxMjBdLDI1Nl0sMTIwMjc0OltbMTIxXSwyNTZdLDEyMDI3NTpbWzEyMl0sMjU2XSwxMjAyNzY6W1s2NV0sMjU2XSwxMjAyNzc6W1s2Nl0sMjU2XSwxMjAyNzg6W1s2N10sMjU2XSwxMjAyNzk6W1s2OF0sMjU2XSwxMjAyODA6W1s2OV0sMjU2XSwxMjAyODE6W1s3MF0sMjU2XSwxMjAyODI6W1s3MV0sMjU2XSwxMjAyODM6W1s3Ml0sMjU2XSwxMjAyODQ6W1s3M10sMjU2XSwxMjAyODU6W1s3NF0sMjU2XSwxMjAyODY6W1s3NV0sMjU2XSwxMjAyODc6W1s3Nl0sMjU2XSwxMjAyODg6W1s3N10sMjU2XSwxMjAyODk6W1s3OF0sMjU2XSwxMjAyOTA6W1s3OV0sMjU2XSwxMjAyOTE6W1s4MF0sMjU2XSwxMjAyOTI6W1s4MV0sMjU2XSwxMjAyOTM6W1s4Ml0sMjU2XSwxMjAyOTQ6W1s4M10sMjU2XSwxMjAyOTU6W1s4NF0sMjU2XSwxMjAyOTY6W1s4NV0sMjU2XSwxMjAyOTc6W1s4Nl0sMjU2XSwxMjAyOTg6W1s4N10sMjU2XSwxMjAyOTk6W1s4OF0sMjU2XSwxMjAzMDA6W1s4OV0sMjU2XSwxMjAzMDE6W1s5MF0sMjU2XSwxMjAzMDI6W1s5N10sMjU2XSwxMjAzMDM6W1s5OF0sMjU2XSwxMjAzMDQ6W1s5OV0sMjU2XSwxMjAzMDU6W1sxMDBdLDI1Nl0sMTIwMzA2OltbMTAxXSwyNTZdLDEyMDMwNzpbWzEwMl0sMjU2XSwxMjAzMDg6W1sxMDNdLDI1Nl0sMTIwMzA5OltbMTA0XSwyNTZdLDEyMDMxMDpbWzEwNV0sMjU2XSwxMjAzMTE6W1sxMDZdLDI1Nl0sMTIwMzEyOltbMTA3XSwyNTZdLDEyMDMxMzpbWzEwOF0sMjU2XSwxMjAzMTQ6W1sxMDldLDI1Nl0sMTIwMzE1OltbMTEwXSwyNTZdLDEyMDMxNjpbWzExMV0sMjU2XSwxMjAzMTc6W1sxMTJdLDI1Nl0sMTIwMzE4OltbMTEzXSwyNTZdLDEyMDMxOTpbWzExNF0sMjU2XX0sDQo1NDc4NDp7MTIwMzIwOltbMTE1XSwyNTZdLDEyMDMyMTpbWzExNl0sMjU2XSwxMjAzMjI6W1sxMTddLDI1Nl0sMTIwMzIzOltbMTE4XSwyNTZdLDEyMDMyNDpbWzExOV0sMjU2XSwxMjAzMjU6W1sxMjBdLDI1Nl0sMTIwMzI2OltbMTIxXSwyNTZdLDEyMDMyNzpbWzEyMl0sMjU2XSwxMjAzMjg6W1s2NV0sMjU2XSwxMjAzMjk6W1s2Nl0sMjU2XSwxMjAzMzA6W1s2N10sMjU2XSwxMjAzMzE6W1s2OF0sMjU2XSwxMjAzMzI6W1s2OV0sMjU2XSwxMjAzMzM6W1s3MF0sMjU2XSwxMjAzMzQ6W1s3MV0sMjU2XSwxMjAzMzU6W1s3Ml0sMjU2XSwxMjAzMzY6W1s3M10sMjU2XSwxMjAzMzc6W1s3NF0sMjU2XSwxMjAzMzg6W1s3NV0sMjU2XSwxMjAzMzk6W1s3Nl0sMjU2XSwxMjAzNDA6W1s3N10sMjU2XSwxMjAzNDE6W1s3OF0sMjU2XSwxMjAzNDI6W1s3OV0sMjU2XSwxMjAzNDM6W1s4MF0sMjU2XSwxMjAzNDQ6W1s4MV0sMjU2XSwxMjAzNDU6W1s4Ml0sMjU2XSwxMjAzNDY6W1s4M10sMjU2XSwxMjAzNDc6W1s4NF0sMjU2XSwxMjAzNDg6W1s4NV0sMjU2XSwxMjAzNDk6W1s4Nl0sMjU2XSwxMjAzNTA6W1s4N10sMjU2XSwxMjAzNTE6W1s4OF0sMjU2XSwxMjAzNTI6W1s4OV0sMjU2XSwxMjAzNTM6W1s5MF0sMjU2XSwxMjAzNTQ6W1s5N10sMjU2XSwxMjAzNTU6W1s5OF0sMjU2XSwxMjAzNTY6W1s5OV0sMjU2XSwxMjAzNTc6W1sxMDBdLDI1Nl0sMTIwMzU4OltbMTAxXSwyNTZdLDEyMDM1OTpbWzEwMl0sMjU2XSwxMjAzNjA6W1sxMDNdLDI1Nl0sMTIwMzYxOltbMTA0XSwyNTZdLDEyMDM2MjpbWzEwNV0sMjU2XSwxMjAzNjM6W1sxMDZdLDI1Nl0sMTIwMzY0OltbMTA3XSwyNTZdLDEyMDM2NTpbWzEwOF0sMjU2XSwxMjAzNjY6W1sxMDldLDI1Nl0sMTIwMzY3OltbMTEwXSwyNTZdLDEyMDM2ODpbWzExMV0sMjU2XSwxMjAzNjk6W1sxMTJdLDI1Nl0sMTIwMzcwOltbMTEzXSwyNTZdLDEyMDM3MTpbWzExNF0sMjU2XSwxMjAzNzI6W1sxMTVdLDI1Nl0sMTIwMzczOltbMTE2XSwyNTZdLDEyMDM3NDpbWzExN10sMjU2XSwxMjAzNzU6W1sxMThdLDI1Nl0sMTIwMzc2OltbMTE5XSwyNTZdLDEyMDM3NzpbWzEyMF0sMjU2XSwxMjAzNzg6W1sxMjFdLDI1Nl0sMTIwMzc5OltbMTIyXSwyNTZdLDEyMDM4MDpbWzY1XSwyNTZdLDEyMDM4MTpbWzY2XSwyNTZdLDEyMDM4MjpbWzY3XSwyNTZdLDEyMDM4MzpbWzY4XSwyNTZdLDEyMDM4NDpbWzY5XSwyNTZdLDEyMDM4NTpbWzcwXSwyNTZdLDEyMDM4NjpbWzcxXSwyNTZdLDEyMDM4NzpbWzcyXSwyNTZdLDEyMDM4ODpbWzczXSwyNTZdLDEyMDM4OTpbWzc0XSwyNTZdLDEyMDM5MDpbWzc1XSwyNTZdLDEyMDM5MTpbWzc2XSwyNTZdLDEyMDM5MjpbWzc3XSwyNTZdLDEyMDM5MzpbWzc4XSwyNTZdLDEyMDM5NDpbWzc5XSwyNTZdLDEyMDM5NTpbWzgwXSwyNTZdLDEyMDM5NjpbWzgxXSwyNTZdLDEyMDM5NzpbWzgyXSwyNTZdLDEyMDM5ODpbWzgzXSwyNTZdLDEyMDM5OTpbWzg0XSwyNTZdLDEyMDQwMDpbWzg1XSwyNTZdLDEyMDQwMTpbWzg2XSwyNTZdLDEyMDQwMjpbWzg3XSwyNTZdLDEyMDQwMzpbWzg4XSwyNTZdLDEyMDQwNDpbWzg5XSwyNTZdLDEyMDQwNTpbWzkwXSwyNTZdLDEyMDQwNjpbWzk3XSwyNTZdLDEyMDQwNzpbWzk4XSwyNTZdLDEyMDQwODpbWzk5XSwyNTZdLDEyMDQwOTpbWzEwMF0sMjU2XSwxMjA0MTA6W1sxMDFdLDI1Nl0sMTIwNDExOltbMTAyXSwyNTZdLDEyMDQxMjpbWzEwM10sMjU2XSwxMjA0MTM6W1sxMDRdLDI1Nl0sMTIwNDE0OltbMTA1XSwyNTZdLDEyMDQxNTpbWzEwNl0sMjU2XSwxMjA0MTY6W1sxMDddLDI1Nl0sMTIwNDE3OltbMTA4XSwyNTZdLDEyMDQxODpbWzEwOV0sMjU2XSwxMjA0MTk6W1sxMTBdLDI1Nl0sMTIwNDIwOltbMTExXSwyNTZdLDEyMDQyMTpbWzExMl0sMjU2XSwxMjA0MjI6W1sxMTNdLDI1Nl0sMTIwNDIzOltbMTE0XSwyNTZdLDEyMDQyNDpbWzExNV0sMjU2XSwxMjA0MjU6W1sxMTZdLDI1Nl0sMTIwNDI2OltbMTE3XSwyNTZdLDEyMDQyNzpbWzExOF0sMjU2XSwxMjA0Mjg6W1sxMTldLDI1Nl0sMTIwNDI5OltbMTIwXSwyNTZdLDEyMDQzMDpbWzEyMV0sMjU2XSwxMjA0MzE6W1sxMjJdLDI1Nl0sMTIwNDMyOltbNjVdLDI1Nl0sMTIwNDMzOltbNjZdLDI1Nl0sMTIwNDM0OltbNjddLDI1Nl0sMTIwNDM1OltbNjhdLDI1Nl0sMTIwNDM2OltbNjldLDI1Nl0sMTIwNDM3OltbNzBdLDI1Nl0sMTIwNDM4OltbNzFdLDI1Nl0sMTIwNDM5OltbNzJdLDI1Nl0sMTIwNDQwOltbNzNdLDI1Nl0sMTIwNDQxOltbNzRdLDI1Nl0sMTIwNDQyOltbNzVdLDI1Nl0sMTIwNDQzOltbNzZdLDI1Nl0sMTIwNDQ0OltbNzddLDI1Nl0sMTIwNDQ1OltbNzhdLDI1Nl0sMTIwNDQ2OltbNzldLDI1Nl0sMTIwNDQ3OltbODBdLDI1Nl0sMTIwNDQ4OltbODFdLDI1Nl0sMTIwNDQ5OltbODJdLDI1Nl0sMTIwNDUwOltbODNdLDI1Nl0sMTIwNDUxOltbODRdLDI1Nl0sMTIwNDUyOltbODVdLDI1Nl0sMTIwNDUzOltbODZdLDI1Nl0sMTIwNDU0OltbODddLDI1Nl0sMTIwNDU1OltbODhdLDI1Nl0sMTIwNDU2OltbODldLDI1Nl0sMTIwNDU3OltbOTBdLDI1Nl0sMTIwNDU4OltbOTddLDI1Nl0sMTIwNDU5OltbOThdLDI1Nl0sMTIwNDYwOltbOTldLDI1Nl0sMTIwNDYxOltbMTAwXSwyNTZdLDEyMDQ2MjpbWzEwMV0sMjU2XSwxMjA0NjM6W1sxMDJdLDI1Nl0sMTIwNDY0OltbMTAzXSwyNTZdLDEyMDQ2NTpbWzEwNF0sMjU2XSwxMjA0NjY6W1sxMDVdLDI1Nl0sMTIwNDY3OltbMTA2XSwyNTZdLDEyMDQ2ODpbWzEwN10sMjU2XSwxMjA0Njk6W1sxMDhdLDI1Nl0sMTIwNDcwOltbMTA5XSwyNTZdLDEyMDQ3MTpbWzExMF0sMjU2XSwxMjA0NzI6W1sxMTFdLDI1Nl0sMTIwNDczOltbMTEyXSwyNTZdLDEyMDQ3NDpbWzExM10sMjU2XSwxMjA0NzU6W1sxMTRdLDI1Nl0sMTIwNDc2OltbMTE1XSwyNTZdLDEyMDQ3NzpbWzExNl0sMjU2XSwxMjA0Nzg6W1sxMTddLDI1Nl0sMTIwNDc5OltbMTE4XSwyNTZdLDEyMDQ4MDpbWzExOV0sMjU2XSwxMjA0ODE6W1sxMjBdLDI1Nl0sMTIwNDgyOltbMTIxXSwyNTZdLDEyMDQ4MzpbWzEyMl0sMjU2XSwxMjA0ODQ6W1szMDVdLDI1Nl0sMTIwNDg1OltbNTY3XSwyNTZdLDEyMDQ4ODpbWzkxM10sMjU2XSwxMjA0ODk6W1s5MTRdLDI1Nl0sMTIwNDkwOltbOTE1XSwyNTZdLDEyMDQ5MTpbWzkxNl0sMjU2XSwxMjA0OTI6W1s5MTddLDI1Nl0sMTIwNDkzOltbOTE4XSwyNTZdLDEyMDQ5NDpbWzkxOV0sMjU2XSwxMjA0OTU6W1s5MjBdLDI1Nl0sMTIwNDk2OltbOTIxXSwyNTZdLDEyMDQ5NzpbWzkyMl0sMjU2XSwxMjA0OTg6W1s5MjNdLDI1Nl0sMTIwNDk5OltbOTI0XSwyNTZdLDEyMDUwMDpbWzkyNV0sMjU2XSwxMjA1MDE6W1s5MjZdLDI1Nl0sMTIwNTAyOltbOTI3XSwyNTZdLDEyMDUwMzpbWzkyOF0sMjU2XSwxMjA1MDQ6W1s5MjldLDI1Nl0sMTIwNTA1OltbMTAxMl0sMjU2XSwxMjA1MDY6W1s5MzFdLDI1Nl0sMTIwNTA3OltbOTMyXSwyNTZdLDEyMDUwODpbWzkzM10sMjU2XSwxMjA1MDk6W1s5MzRdLDI1Nl0sMTIwNTEwOltbOTM1XSwyNTZdLDEyMDUxMTpbWzkzNl0sMjU2XSwxMjA1MTI6W1s5MzddLDI1Nl0sMTIwNTEzOltbODcxMV0sMjU2XSwxMjA1MTQ6W1s5NDVdLDI1Nl0sMTIwNTE1OltbOTQ2XSwyNTZdLDEyMDUxNjpbWzk0N10sMjU2XSwxMjA1MTc6W1s5NDhdLDI1Nl0sMTIwNTE4OltbOTQ5XSwyNTZdLDEyMDUxOTpbWzk1MF0sMjU2XSwxMjA1MjA6W1s5NTFdLDI1Nl0sMTIwNTIxOltbOTUyXSwyNTZdLDEyMDUyMjpbWzk1M10sMjU2XSwxMjA1MjM6W1s5NTRdLDI1Nl0sMTIwNTI0OltbOTU1XSwyNTZdLDEyMDUyNTpbWzk1Nl0sMjU2XSwxMjA1MjY6W1s5NTddLDI1Nl0sMTIwNTI3OltbOTU4XSwyNTZdLDEyMDUyODpbWzk1OV0sMjU2XSwxMjA1Mjk6W1s5NjBdLDI1Nl0sMTIwNTMwOltbOTYxXSwyNTZdLDEyMDUzMTpbWzk2Ml0sMjU2XSwxMjA1MzI6W1s5NjNdLDI1Nl0sMTIwNTMzOltbOTY0XSwyNTZdLDEyMDUzNDpbWzk2NV0sMjU2XSwxMjA1MzU6W1s5NjZdLDI1Nl0sMTIwNTM2OltbOTY3XSwyNTZdLDEyMDUzNzpbWzk2OF0sMjU2XSwxMjA1Mzg6W1s5NjldLDI1Nl0sMTIwNTM5OltbODcwNl0sMjU2XSwxMjA1NDA6W1sxMDEzXSwyNTZdLDEyMDU0MTpbWzk3N10sMjU2XSwxMjA1NDI6W1sxMDA4XSwyNTZdLDEyMDU0MzpbWzk4MV0sMjU2XSwxMjA1NDQ6W1sxMDA5XSwyNTZdLDEyMDU0NTpbWzk4Ml0sMjU2XSwxMjA1NDY6W1s5MTNdLDI1Nl0sMTIwNTQ3OltbOTE0XSwyNTZdLDEyMDU0ODpbWzkxNV0sMjU2XSwxMjA1NDk6W1s5MTZdLDI1Nl0sMTIwNTUwOltbOTE3XSwyNTZdLDEyMDU1MTpbWzkxOF0sMjU2XSwxMjA1NTI6W1s5MTldLDI1Nl0sMTIwNTUzOltbOTIwXSwyNTZdLDEyMDU1NDpbWzkyMV0sMjU2XSwxMjA1NTU6W1s5MjJdLDI1Nl0sMTIwNTU2OltbOTIzXSwyNTZdLDEyMDU1NzpbWzkyNF0sMjU2XSwxMjA1NTg6W1s5MjVdLDI1Nl0sMTIwNTU5OltbOTI2XSwyNTZdLDEyMDU2MDpbWzkyN10sMjU2XSwxMjA1NjE6W1s5MjhdLDI1Nl0sMTIwNTYyOltbOTI5XSwyNTZdLDEyMDU2MzpbWzEwMTJdLDI1Nl0sMTIwNTY0OltbOTMxXSwyNTZdLDEyMDU2NTpbWzkzMl0sMjU2XSwxMjA1NjY6W1s5MzNdLDI1Nl0sMTIwNTY3OltbOTM0XSwyNTZdLDEyMDU2ODpbWzkzNV0sMjU2XSwxMjA1Njk6W1s5MzZdLDI1Nl0sMTIwNTcwOltbOTM3XSwyNTZdLDEyMDU3MTpbWzg3MTFdLDI1Nl0sMTIwNTcyOltbOTQ1XSwyNTZdLDEyMDU3MzpbWzk0Nl0sMjU2XSwxMjA1NzQ6W1s5NDddLDI1Nl0sMTIwNTc1OltbOTQ4XSwyNTZdfSwNCjU1MDQwOnsxMjA1NzY6W1s5NDldLDI1Nl0sMTIwNTc3OltbOTUwXSwyNTZdLDEyMDU3ODpbWzk1MV0sMjU2XSwxMjA1Nzk6W1s5NTJdLDI1Nl0sMTIwNTgwOltbOTUzXSwyNTZdLDEyMDU4MTpbWzk1NF0sMjU2XSwxMjA1ODI6W1s5NTVdLDI1Nl0sMTIwNTgzOltbOTU2XSwyNTZdLDEyMDU4NDpbWzk1N10sMjU2XSwxMjA1ODU6W1s5NThdLDI1Nl0sMTIwNTg2OltbOTU5XSwyNTZdLDEyMDU4NzpbWzk2MF0sMjU2XSwxMjA1ODg6W1s5NjFdLDI1Nl0sMTIwNTg5OltbOTYyXSwyNTZdLDEyMDU5MDpbWzk2M10sMjU2XSwxMjA1OTE6W1s5NjRdLDI1Nl0sMTIwNTkyOltbOTY1XSwyNTZdLDEyMDU5MzpbWzk2Nl0sMjU2XSwxMjA1OTQ6W1s5NjddLDI1Nl0sMTIwNTk1OltbOTY4XSwyNTZdLDEyMDU5NjpbWzk2OV0sMjU2XSwxMjA1OTc6W1s4NzA2XSwyNTZdLDEyMDU5ODpbWzEwMTNdLDI1Nl0sMTIwNTk5OltbOTc3XSwyNTZdLDEyMDYwMDpbWzEwMDhdLDI1Nl0sMTIwNjAxOltbOTgxXSwyNTZdLDEyMDYwMjpbWzEwMDldLDI1Nl0sMTIwNjAzOltbOTgyXSwyNTZdLDEyMDYwNDpbWzkxM10sMjU2XSwxMjA2MDU6W1s5MTRdLDI1Nl0sMTIwNjA2OltbOTE1XSwyNTZdLDEyMDYwNzpbWzkxNl0sMjU2XSwxMjA2MDg6W1s5MTddLDI1Nl0sMTIwNjA5OltbOTE4XSwyNTZdLDEyMDYxMDpbWzkxOV0sMjU2XSwxMjA2MTE6W1s5MjBdLDI1Nl0sMTIwNjEyOltbOTIxXSwyNTZdLDEyMDYxMzpbWzkyMl0sMjU2XSwxMjA2MTQ6W1s5MjNdLDI1Nl0sMTIwNjE1OltbOTI0XSwyNTZdLDEyMDYxNjpbWzkyNV0sMjU2XSwxMjA2MTc6W1s5MjZdLDI1Nl0sMTIwNjE4OltbOTI3XSwyNTZdLDEyMDYxOTpbWzkyOF0sMjU2XSwxMjA2MjA6W1s5MjldLDI1Nl0sMTIwNjIxOltbMTAxMl0sMjU2XSwxMjA2MjI6W1s5MzFdLDI1Nl0sMTIwNjIzOltbOTMyXSwyNTZdLDEyMDYyNDpbWzkzM10sMjU2XSwxMjA2MjU6W1s5MzRdLDI1Nl0sMTIwNjI2OltbOTM1XSwyNTZdLDEyMDYyNzpbWzkzNl0sMjU2XSwxMjA2Mjg6W1s5MzddLDI1Nl0sMTIwNjI5OltbODcxMV0sMjU2XSwxMjA2MzA6W1s5NDVdLDI1Nl0sMTIwNjMxOltbOTQ2XSwyNTZdLDEyMDYzMjpbWzk0N10sMjU2XSwxMjA2MzM6W1s5NDhdLDI1Nl0sMTIwNjM0OltbOTQ5XSwyNTZdLDEyMDYzNTpbWzk1MF0sMjU2XSwxMjA2MzY6W1s5NTFdLDI1Nl0sMTIwNjM3OltbOTUyXSwyNTZdLDEyMDYzODpbWzk1M10sMjU2XSwxMjA2Mzk6W1s5NTRdLDI1Nl0sMTIwNjQwOltbOTU1XSwyNTZdLDEyMDY0MTpbWzk1Nl0sMjU2XSwxMjA2NDI6W1s5NTddLDI1Nl0sMTIwNjQzOltbOTU4XSwyNTZdLDEyMDY0NDpbWzk1OV0sMjU2XSwxMjA2NDU6W1s5NjBdLDI1Nl0sMTIwNjQ2OltbOTYxXSwyNTZdLDEyMDY0NzpbWzk2Ml0sMjU2XSwxMjA2NDg6W1s5NjNdLDI1Nl0sMTIwNjQ5OltbOTY0XSwyNTZdLDEyMDY1MDpbWzk2NV0sMjU2XSwxMjA2NTE6W1s5NjZdLDI1Nl0sMTIwNjUyOltbOTY3XSwyNTZdLDEyMDY1MzpbWzk2OF0sMjU2XSwxMjA2NTQ6W1s5NjldLDI1Nl0sMTIwNjU1OltbODcwNl0sMjU2XSwxMjA2NTY6W1sxMDEzXSwyNTZdLDEyMDY1NzpbWzk3N10sMjU2XSwxMjA2NTg6W1sxMDA4XSwyNTZdLDEyMDY1OTpbWzk4MV0sMjU2XSwxMjA2NjA6W1sxMDA5XSwyNTZdLDEyMDY2MTpbWzk4Ml0sMjU2XSwxMjA2NjI6W1s5MTNdLDI1Nl0sMTIwNjYzOltbOTE0XSwyNTZdLDEyMDY2NDpbWzkxNV0sMjU2XSwxMjA2NjU6W1s5MTZdLDI1Nl0sMTIwNjY2OltbOTE3XSwyNTZdLDEyMDY2NzpbWzkxOF0sMjU2XSwxMjA2Njg6W1s5MTldLDI1Nl0sMTIwNjY5OltbOTIwXSwyNTZdLDEyMDY3MDpbWzkyMV0sMjU2XSwxMjA2NzE6W1s5MjJdLDI1Nl0sMTIwNjcyOltbOTIzXSwyNTZdLDEyMDY3MzpbWzkyNF0sMjU2XSwxMjA2NzQ6W1s5MjVdLDI1Nl0sMTIwNjc1OltbOTI2XSwyNTZdLDEyMDY3NjpbWzkyN10sMjU2XSwxMjA2Nzc6W1s5MjhdLDI1Nl0sMTIwNjc4OltbOTI5XSwyNTZdLDEyMDY3OTpbWzEwMTJdLDI1Nl0sMTIwNjgwOltbOTMxXSwyNTZdLDEyMDY4MTpbWzkzMl0sMjU2XSwxMjA2ODI6W1s5MzNdLDI1Nl0sMTIwNjgzOltbOTM0XSwyNTZdLDEyMDY4NDpbWzkzNV0sMjU2XSwxMjA2ODU6W1s5MzZdLDI1Nl0sMTIwNjg2OltbOTM3XSwyNTZdLDEyMDY4NzpbWzg3MTFdLDI1Nl0sMTIwNjg4OltbOTQ1XSwyNTZdLDEyMDY4OTpbWzk0Nl0sMjU2XSwxMjA2OTA6W1s5NDddLDI1Nl0sMTIwNjkxOltbOTQ4XSwyNTZdLDEyMDY5MjpbWzk0OV0sMjU2XSwxMjA2OTM6W1s5NTBdLDI1Nl0sMTIwNjk0OltbOTUxXSwyNTZdLDEyMDY5NTpbWzk1Ml0sMjU2XSwxMjA2OTY6W1s5NTNdLDI1Nl0sMTIwNjk3OltbOTU0XSwyNTZdLDEyMDY5ODpbWzk1NV0sMjU2XSwxMjA2OTk6W1s5NTZdLDI1Nl0sMTIwNzAwOltbOTU3XSwyNTZdLDEyMDcwMTpbWzk1OF0sMjU2XSwxMjA3MDI6W1s5NTldLDI1Nl0sMTIwNzAzOltbOTYwXSwyNTZdLDEyMDcwNDpbWzk2MV0sMjU2XSwxMjA3MDU6W1s5NjJdLDI1Nl0sMTIwNzA2OltbOTYzXSwyNTZdLDEyMDcwNzpbWzk2NF0sMjU2XSwxMjA3MDg6W1s5NjVdLDI1Nl0sMTIwNzA5OltbOTY2XSwyNTZdLDEyMDcxMDpbWzk2N10sMjU2XSwxMjA3MTE6W1s5NjhdLDI1Nl0sMTIwNzEyOltbOTY5XSwyNTZdLDEyMDcxMzpbWzg3MDZdLDI1Nl0sMTIwNzE0OltbMTAxM10sMjU2XSwxMjA3MTU6W1s5NzddLDI1Nl0sMTIwNzE2OltbMTAwOF0sMjU2XSwxMjA3MTc6W1s5ODFdLDI1Nl0sMTIwNzE4OltbMTAwOV0sMjU2XSwxMjA3MTk6W1s5ODJdLDI1Nl0sMTIwNzIwOltbOTEzXSwyNTZdLDEyMDcyMTpbWzkxNF0sMjU2XSwxMjA3MjI6W1s5MTVdLDI1Nl0sMTIwNzIzOltbOTE2XSwyNTZdLDEyMDcyNDpbWzkxN10sMjU2XSwxMjA3MjU6W1s5MThdLDI1Nl0sMTIwNzI2OltbOTE5XSwyNTZdLDEyMDcyNzpbWzkyMF0sMjU2XSwxMjA3Mjg6W1s5MjFdLDI1Nl0sMTIwNzI5OltbOTIyXSwyNTZdLDEyMDczMDpbWzkyM10sMjU2XSwxMjA3MzE6W1s5MjRdLDI1Nl0sMTIwNzMyOltbOTI1XSwyNTZdLDEyMDczMzpbWzkyNl0sMjU2XSwxMjA3MzQ6W1s5MjddLDI1Nl0sMTIwNzM1OltbOTI4XSwyNTZdLDEyMDczNjpbWzkyOV0sMjU2XSwxMjA3Mzc6W1sxMDEyXSwyNTZdLDEyMDczODpbWzkzMV0sMjU2XSwxMjA3Mzk6W1s5MzJdLDI1Nl0sMTIwNzQwOltbOTMzXSwyNTZdLDEyMDc0MTpbWzkzNF0sMjU2XSwxMjA3NDI6W1s5MzVdLDI1Nl0sMTIwNzQzOltbOTM2XSwyNTZdLDEyMDc0NDpbWzkzN10sMjU2XSwxMjA3NDU6W1s4NzExXSwyNTZdLDEyMDc0NjpbWzk0NV0sMjU2XSwxMjA3NDc6W1s5NDZdLDI1Nl0sMTIwNzQ4OltbOTQ3XSwyNTZdLDEyMDc0OTpbWzk0OF0sMjU2XSwxMjA3NTA6W1s5NDldLDI1Nl0sMTIwNzUxOltbOTUwXSwyNTZdLDEyMDc1MjpbWzk1MV0sMjU2XSwxMjA3NTM6W1s5NTJdLDI1Nl0sMTIwNzU0OltbOTUzXSwyNTZdLDEyMDc1NTpbWzk1NF0sMjU2XSwxMjA3NTY6W1s5NTVdLDI1Nl0sMTIwNzU3OltbOTU2XSwyNTZdLDEyMDc1ODpbWzk1N10sMjU2XSwxMjA3NTk6W1s5NThdLDI1Nl0sMTIwNzYwOltbOTU5XSwyNTZdLDEyMDc2MTpbWzk2MF0sMjU2XSwxMjA3NjI6W1s5NjFdLDI1Nl0sMTIwNzYzOltbOTYyXSwyNTZdLDEyMDc2NDpbWzk2M10sMjU2XSwxMjA3NjU6W1s5NjRdLDI1Nl0sMTIwNzY2OltbOTY1XSwyNTZdLDEyMDc2NzpbWzk2Nl0sMjU2XSwxMjA3Njg6W1s5NjddLDI1Nl0sMTIwNzY5OltbOTY4XSwyNTZdLDEyMDc3MDpbWzk2OV0sMjU2XSwxMjA3NzE6W1s4NzA2XSwyNTZdLDEyMDc3MjpbWzEwMTNdLDI1Nl0sMTIwNzczOltbOTc3XSwyNTZdLDEyMDc3NDpbWzEwMDhdLDI1Nl0sMTIwNzc1OltbOTgxXSwyNTZdLDEyMDc3NjpbWzEwMDldLDI1Nl0sMTIwNzc3OltbOTgyXSwyNTZdLDEyMDc3ODpbWzk4OF0sMjU2XSwxMjA3Nzk6W1s5ODldLDI1Nl0sMTIwNzgyOltbNDhdLDI1Nl0sMTIwNzgzOltbNDldLDI1Nl0sMTIwNzg0OltbNTBdLDI1Nl0sMTIwNzg1OltbNTFdLDI1Nl0sMTIwNzg2OltbNTJdLDI1Nl0sMTIwNzg3OltbNTNdLDI1Nl0sMTIwNzg4OltbNTRdLDI1Nl0sMTIwNzg5OltbNTVdLDI1Nl0sMTIwNzkwOltbNTZdLDI1Nl0sMTIwNzkxOltbNTddLDI1Nl0sMTIwNzkyOltbNDhdLDI1Nl0sMTIwNzkzOltbNDldLDI1Nl0sMTIwNzk0OltbNTBdLDI1Nl0sMTIwNzk1OltbNTFdLDI1Nl0sMTIwNzk2OltbNTJdLDI1Nl0sMTIwNzk3OltbNTNdLDI1Nl0sMTIwNzk4OltbNTRdLDI1Nl0sMTIwNzk5OltbNTVdLDI1Nl0sMTIwODAwOltbNTZdLDI1Nl0sMTIwODAxOltbNTddLDI1Nl0sMTIwODAyOltbNDhdLDI1Nl0sMTIwODAzOltbNDldLDI1Nl0sMTIwODA0OltbNTBdLDI1Nl0sMTIwODA1OltbNTFdLDI1Nl0sMTIwODA2OltbNTJdLDI1Nl0sMTIwODA3OltbNTNdLDI1Nl0sMTIwODA4OltbNTRdLDI1Nl0sMTIwODA5OltbNTVdLDI1Nl0sMTIwODEwOltbNTZdLDI1Nl0sMTIwODExOltbNTddLDI1Nl0sMTIwODEyOltbNDhdLDI1Nl0sMTIwODEzOltbNDldLDI1Nl0sMTIwODE0OltbNTBdLDI1Nl0sMTIwODE1OltbNTFdLDI1Nl0sMTIwODE2OltbNTJdLDI1Nl0sMTIwODE3OltbNTNdLDI1Nl0sMTIwODE4OltbNTRdLDI1Nl0sMTIwODE5OltbNTVdLDI1Nl0sMTIwODIwOltbNTZdLDI1Nl0sMTIwODIxOltbNTddLDI1Nl0sMTIwODIyOltbNDhdLDI1Nl0sMTIwODIzOltbNDldLDI1Nl0sMTIwODI0OltbNTBdLDI1Nl0sMTIwODI1OltbNTFdLDI1Nl0sMTIwODI2OltbNTJdLDI1Nl0sMTIwODI3OltbNTNdLDI1Nl0sMTIwODI4OltbNTRdLDI1Nl0sMTIwODI5OltbNTVdLDI1Nl0sMTIwODMwOltbNTZdLDI1Nl0sMTIwODMxOltbNTddLDI1Nl19LA0KNTkzOTI6ezEyNTEzNjpbLDIyMF0sMTI1MTM3OlssMjIwXSwxMjUxMzg6WywyMjBdLDEyNTEzOTpbLDIyMF0sMTI1MTQwOlssMjIwXSwxMjUxNDE6WywyMjBdLDEyNTE0MjpbLDIyMF19LA0KNjA5Mjg6ezEyNjQ2NDpbWzE1NzVdLDI1Nl0sMTI2NDY1OltbMTU3Nl0sMjU2XSwxMjY0NjY6W1sxNTgwXSwyNTZdLDEyNjQ2NzpbWzE1ODNdLDI1Nl0sMTI2NDY5OltbMTYwOF0sMjU2XSwxMjY0NzA6W1sxNTg2XSwyNTZdLDEyNjQ3MTpbWzE1ODFdLDI1Nl0sMTI2NDcyOltbMTU5MV0sMjU2XSwxMjY0NzM6W1sxNjEwXSwyNTZdLDEyNjQ3NDpbWzE2MDNdLDI1Nl0sMTI2NDc1OltbMTYwNF0sMjU2XSwxMjY0NzY6W1sxNjA1XSwyNTZdLDEyNjQ3NzpbWzE2MDZdLDI1Nl0sMTI2NDc4OltbMTU4N10sMjU2XSwxMjY0Nzk6W1sxNTkzXSwyNTZdLDEyNjQ4MDpbWzE2MDFdLDI1Nl0sMTI2NDgxOltbMTU4OV0sMjU2XSwxMjY0ODI6W1sxNjAyXSwyNTZdLDEyNjQ4MzpbWzE1ODVdLDI1Nl0sMTI2NDg0OltbMTU4OF0sMjU2XSwxMjY0ODU6W1sxNTc4XSwyNTZdLDEyNjQ4NjpbWzE1NzldLDI1Nl0sMTI2NDg3OltbMTU4Ml0sMjU2XSwxMjY0ODg6W1sxNTg0XSwyNTZdLDEyNjQ4OTpbWzE1OTBdLDI1Nl0sMTI2NDkwOltbMTU5Ml0sMjU2XSwxMjY0OTE6W1sxNTk0XSwyNTZdLDEyNjQ5MjpbWzE2NDZdLDI1Nl0sMTI2NDkzOltbMTcyMl0sMjU2XSwxMjY0OTQ6W1sxNjk3XSwyNTZdLDEyNjQ5NTpbWzE2NDddLDI1Nl0sMTI2NDk3OltbMTU3Nl0sMjU2XSwxMjY0OTg6W1sxNTgwXSwyNTZdLDEyNjUwMDpbWzE2MDddLDI1Nl0sMTI2NTAzOltbMTU4MV0sMjU2XSwxMjY1MDU6W1sxNjEwXSwyNTZdLDEyNjUwNjpbWzE2MDNdLDI1Nl0sMTI2NTA3OltbMTYwNF0sMjU2XSwxMjY1MDg6W1sxNjA1XSwyNTZdLDEyNjUwOTpbWzE2MDZdLDI1Nl0sMTI2NTEwOltbMTU4N10sMjU2XSwxMjY1MTE6W1sxNTkzXSwyNTZdLDEyNjUxMjpbWzE2MDFdLDI1Nl0sMTI2NTEzOltbMTU4OV0sMjU2XSwxMjY1MTQ6W1sxNjAyXSwyNTZdLDEyNjUxNjpbWzE1ODhdLDI1Nl0sMTI2NTE3OltbMTU3OF0sMjU2XSwxMjY1MTg6W1sxNTc5XSwyNTZdLDEyNjUxOTpbWzE1ODJdLDI1Nl0sMTI2NTIxOltbMTU5MF0sMjU2XSwxMjY1MjM6W1sxNTk0XSwyNTZdLDEyNjUzMDpbWzE1ODBdLDI1Nl0sMTI2NTM1OltbMTU4MV0sMjU2XSwxMjY1Mzc6W1sxNjEwXSwyNTZdLDEyNjUzOTpbWzE2MDRdLDI1Nl0sMTI2NTQxOltbMTYwNl0sMjU2XSwxMjY1NDI6W1sxNTg3XSwyNTZdLDEyNjU0MzpbWzE1OTNdLDI1Nl0sMTI2NTQ1OltbMTU4OV0sMjU2XSwxMjY1NDY6W1sxNjAyXSwyNTZdLDEyNjU0ODpbWzE1ODhdLDI1Nl0sMTI2NTUxOltbMTU4Ml0sMjU2XSwxMjY1NTM6W1sxNTkwXSwyNTZdLDEyNjU1NTpbWzE1OTRdLDI1Nl0sMTI2NTU3OltbMTcyMl0sMjU2XSwxMjY1NTk6W1sxNjQ3XSwyNTZdLDEyNjU2MTpbWzE1NzZdLDI1Nl0sMTI2NTYyOltbMTU4MF0sMjU2XSwxMjY1NjQ6W1sxNjA3XSwyNTZdLDEyNjU2NzpbWzE1ODFdLDI1Nl0sMTI2NTY4OltbMTU5MV0sMjU2XSwxMjY1Njk6W1sxNjEwXSwyNTZdLDEyNjU3MDpbWzE2MDNdLDI1Nl0sMTI2NTcyOltbMTYwNV0sMjU2XSwxMjY1NzM6W1sxNjA2XSwyNTZdLDEyNjU3NDpbWzE1ODddLDI1Nl0sMTI2NTc1OltbMTU5M10sMjU2XSwxMjY1NzY6W1sxNjAxXSwyNTZdLDEyNjU3NzpbWzE1ODldLDI1Nl0sMTI2NTc4OltbMTYwMl0sMjU2XSwxMjY1ODA6W1sxNTg4XSwyNTZdLDEyNjU4MTpbWzE1NzhdLDI1Nl0sMTI2NTgyOltbMTU3OV0sMjU2XSwxMjY1ODM6W1sxNTgyXSwyNTZdLDEyNjU4NTpbWzE1OTBdLDI1Nl0sMTI2NTg2OltbMTU5Ml0sMjU2XSwxMjY1ODc6W1sxNTk0XSwyNTZdLDEyNjU4ODpbWzE2NDZdLDI1Nl0sMTI2NTkwOltbMTY5N10sMjU2XSwxMjY1OTI6W1sxNTc1XSwyNTZdLDEyNjU5MzpbWzE1NzZdLDI1Nl0sMTI2NTk0OltbMTU4MF0sMjU2XSwxMjY1OTU6W1sxNTgzXSwyNTZdLDEyNjU5NjpbWzE2MDddLDI1Nl0sMTI2NTk3OltbMTYwOF0sMjU2XSwxMjY1OTg6W1sxNTg2XSwyNTZdLDEyNjU5OTpbWzE1ODFdLDI1Nl0sMTI2NjAwOltbMTU5MV0sMjU2XSwxMjY2MDE6W1sxNjEwXSwyNTZdLDEyNjYwMzpbWzE2MDRdLDI1Nl0sMTI2NjA0OltbMTYwNV0sMjU2XSwxMjY2MDU6W1sxNjA2XSwyNTZdLDEyNjYwNjpbWzE1ODddLDI1Nl0sMTI2NjA3OltbMTU5M10sMjU2XSwxMjY2MDg6W1sxNjAxXSwyNTZdLDEyNjYwOTpbWzE1ODldLDI1Nl0sMTI2NjEwOltbMTYwMl0sMjU2XSwxMjY2MTE6W1sxNTg1XSwyNTZdLDEyNjYxMjpbWzE1ODhdLDI1Nl0sMTI2NjEzOltbMTU3OF0sMjU2XSwxMjY2MTQ6W1sxNTc5XSwyNTZdLDEyNjYxNTpbWzE1ODJdLDI1Nl0sMTI2NjE2OltbMTU4NF0sMjU2XSwxMjY2MTc6W1sxNTkwXSwyNTZdLDEyNjYxODpbWzE1OTJdLDI1Nl0sMTI2NjE5OltbMTU5NF0sMjU2XSwxMjY2MjU6W1sxNTc2XSwyNTZdLDEyNjYyNjpbWzE1ODBdLDI1Nl0sMTI2NjI3OltbMTU4M10sMjU2XSwxMjY2Mjk6W1sxNjA4XSwyNTZdLDEyNjYzMDpbWzE1ODZdLDI1Nl0sMTI2NjMxOltbMTU4MV0sMjU2XSwxMjY2MzI6W1sxNTkxXSwyNTZdLDEyNjYzMzpbWzE2MTBdLDI1Nl0sMTI2NjM1OltbMTYwNF0sMjU2XSwxMjY2MzY6W1sxNjA1XSwyNTZdLDEyNjYzNzpbWzE2MDZdLDI1Nl0sMTI2NjM4OltbMTU4N10sMjU2XSwxMjY2Mzk6W1sxNTkzXSwyNTZdLDEyNjY0MDpbWzE2MDFdLDI1Nl0sMTI2NjQxOltbMTU4OV0sMjU2XSwxMjY2NDI6W1sxNjAyXSwyNTZdLDEyNjY0MzpbWzE1ODVdLDI1Nl0sMTI2NjQ0OltbMTU4OF0sMjU2XSwxMjY2NDU6W1sxNTc4XSwyNTZdLDEyNjY0NjpbWzE1NzldLDI1Nl0sMTI2NjQ3OltbMTU4Ml0sMjU2XSwxMjY2NDg6W1sxNTg0XSwyNTZdLDEyNjY0OTpbWzE1OTBdLDI1Nl0sMTI2NjUwOltbMTU5Ml0sMjU2XSwxMjY2NTE6W1sxNTk0XSwyNTZdfSwNCjYxNjk2OnsxMjcyMzI6W1s0OCw0Nl0sMjU2XSwxMjcyMzM6W1s0OCw0NF0sMjU2XSwxMjcyMzQ6W1s0OSw0NF0sMjU2XSwxMjcyMzU6W1s1MCw0NF0sMjU2XSwxMjcyMzY6W1s1MSw0NF0sMjU2XSwxMjcyMzc6W1s1Miw0NF0sMjU2XSwxMjcyMzg6W1s1Myw0NF0sMjU2XSwxMjcyMzk6W1s1NCw0NF0sMjU2XSwxMjcyNDA6W1s1NSw0NF0sMjU2XSwxMjcyNDE6W1s1Niw0NF0sMjU2XSwxMjcyNDI6W1s1Nyw0NF0sMjU2XSwxMjcyNDg6W1s0MCw2NSw0MV0sMjU2XSwxMjcyNDk6W1s0MCw2Niw0MV0sMjU2XSwxMjcyNTA6W1s0MCw2Nyw0MV0sMjU2XSwxMjcyNTE6W1s0MCw2OCw0MV0sMjU2XSwxMjcyNTI6W1s0MCw2OSw0MV0sMjU2XSwxMjcyNTM6W1s0MCw3MCw0MV0sMjU2XSwxMjcyNTQ6W1s0MCw3MSw0MV0sMjU2XSwxMjcyNTU6W1s0MCw3Miw0MV0sMjU2XSwxMjcyNTY6W1s0MCw3Myw0MV0sMjU2XSwxMjcyNTc6W1s0MCw3NCw0MV0sMjU2XSwxMjcyNTg6W1s0MCw3NSw0MV0sMjU2XSwxMjcyNTk6W1s0MCw3Niw0MV0sMjU2XSwxMjcyNjA6W1s0MCw3Nyw0MV0sMjU2XSwxMjcyNjE6W1s0MCw3OCw0MV0sMjU2XSwxMjcyNjI6W1s0MCw3OSw0MV0sMjU2XSwxMjcyNjM6W1s0MCw4MCw0MV0sMjU2XSwxMjcyNjQ6W1s0MCw4MSw0MV0sMjU2XSwxMjcyNjU6W1s0MCw4Miw0MV0sMjU2XSwxMjcyNjY6W1s0MCw4Myw0MV0sMjU2XSwxMjcyNjc6W1s0MCw4NCw0MV0sMjU2XSwxMjcyNjg6W1s0MCw4NSw0MV0sMjU2XSwxMjcyNjk6W1s0MCw4Niw0MV0sMjU2XSwxMjcyNzA6W1s0MCw4Nyw0MV0sMjU2XSwxMjcyNzE6W1s0MCw4OCw0MV0sMjU2XSwxMjcyNzI6W1s0MCw4OSw0MV0sMjU2XSwxMjcyNzM6W1s0MCw5MCw0MV0sMjU2XSwxMjcyNzQ6W1sxMjMwOCw4MywxMjMwOV0sMjU2XSwxMjcyNzU6W1s2N10sMjU2XSwxMjcyNzY6W1s4Ml0sMjU2XSwxMjcyNzc6W1s2Nyw2OF0sMjU2XSwxMjcyNzg6W1s4Nyw5MF0sMjU2XSwxMjcyODA6W1s2NV0sMjU2XSwxMjcyODE6W1s2Nl0sMjU2XSwxMjcyODI6W1s2N10sMjU2XSwxMjcyODM6W1s2OF0sMjU2XSwxMjcyODQ6W1s2OV0sMjU2XSwxMjcyODU6W1s3MF0sMjU2XSwxMjcyODY6W1s3MV0sMjU2XSwxMjcyODc6W1s3Ml0sMjU2XSwxMjcyODg6W1s3M10sMjU2XSwxMjcyODk6W1s3NF0sMjU2XSwxMjcyOTA6W1s3NV0sMjU2XSwxMjcyOTE6W1s3Nl0sMjU2XSwxMjcyOTI6W1s3N10sMjU2XSwxMjcyOTM6W1s3OF0sMjU2XSwxMjcyOTQ6W1s3OV0sMjU2XSwxMjcyOTU6W1s4MF0sMjU2XSwxMjcyOTY6W1s4MV0sMjU2XSwxMjcyOTc6W1s4Ml0sMjU2XSwxMjcyOTg6W1s4M10sMjU2XSwxMjcyOTk6W1s4NF0sMjU2XSwxMjczMDA6W1s4NV0sMjU2XSwxMjczMDE6W1s4Nl0sMjU2XSwxMjczMDI6W1s4N10sMjU2XSwxMjczMDM6W1s4OF0sMjU2XSwxMjczMDQ6W1s4OV0sMjU2XSwxMjczMDU6W1s5MF0sMjU2XSwxMjczMDY6W1s3Miw4Nl0sMjU2XSwxMjczMDc6W1s3Nyw4Nl0sMjU2XSwxMjczMDg6W1s4Myw2OF0sMjU2XSwxMjczMDk6W1s4Myw4M10sMjU2XSwxMjczMTA6W1s4MCw4MCw4Nl0sMjU2XSwxMjczMTE6W1s4Nyw2N10sMjU2XSwxMjczMzg6W1s3Nyw2N10sMjU2XSwxMjczMzk6W1s3Nyw2OF0sMjU2XSwxMjczNzY6W1s2OCw3NF0sMjU2XX0sDQo2MTk1Mjp7MTI3NDg4OltbMTI0MTEsMTIzNjNdLDI1Nl0sMTI3NDg5OltbMTI0NjcsMTI0NjddLDI1Nl0sMTI3NDkwOltbMTI0NjldLDI1Nl0sMTI3NTA0OltbMjUxNjNdLDI1Nl0sMTI3NTA1OltbMjMzODNdLDI1Nl0sMTI3NTA2OltbMjE0NTJdLDI1Nl0sMTI3NTA3OltbMTI0ODddLDI1Nl0sMTI3NTA4OltbMjAxMDhdLDI1Nl0sMTI3NTA5OltbMjI4MTBdLDI1Nl0sMTI3NTEwOltbMzUyOTldLDI1Nl0sMTI3NTExOltbMjI4MjVdLDI1Nl0sMTI3NTEyOltbMjAxMzJdLDI1Nl0sMTI3NTEzOltbMjYxNDRdLDI1Nl0sMTI3NTE0OltbMjg5NjFdLDI1Nl0sMTI3NTE1OltbMjYwMDldLDI1Nl0sMTI3NTE2OltbMjEwNjldLDI1Nl0sMTI3NTE3OltbMjQ0NjBdLDI1Nl0sMTI3NTE4OltbMjA4NzddLDI1Nl0sMTI3NTE5OltbMjYwMzJdLDI1Nl0sMTI3NTIwOltbMjEwMjFdLDI1Nl0sMTI3NTIxOltbMzIwNjZdLDI1Nl0sMTI3NTIyOltbMjk5ODNdLDI1Nl0sMTI3NTIzOltbMzYwMDldLDI1Nl0sMTI3NTI0OltbMjI3NjhdLDI1Nl0sMTI3NTI1OltbMjE1NjFdLDI1Nl0sMTI3NTI2OltbMjg0MzZdLDI1Nl0sMTI3NTI3OltbMjUyMzddLDI1Nl0sMTI3NTI4OltbMjU0MjldLDI1Nl0sMTI3NTI5OltbMTk5NjhdLDI1Nl0sMTI3NTMwOltbMTk5NzddLDI1Nl0sMTI3NTMxOltbMzY5MzhdLDI1Nl0sMTI3NTMyOltbMjQwMzhdLDI1Nl0sMTI3NTMzOltbMjAwMTNdLDI1Nl0sMTI3NTM0OltbMjE0OTFdLDI1Nl0sMTI3NTM1OltbMjUzNTFdLDI1Nl0sMTI3NTM2OltbMzYyMDhdLDI1Nl0sMTI3NTM3OltbMjUxNzFdLDI1Nl0sMTI3NTM4OltbMzExMDVdLDI1Nl0sMTI3NTM5OltbMzEzNTRdLDI1Nl0sMTI3NTQwOltbMjE1MTJdLDI1Nl0sMTI3NTQxOltbMjgyODhdLDI1Nl0sMTI3NTQyOltbMjYzNzddLDI1Nl0sMTI3NTQzOltbMjYzNzZdLDI1Nl0sMTI3NTQ0OltbMzAwMDNdLDI1Nl0sMTI3NTQ1OltbMjExMDZdLDI1Nl0sMTI3NTQ2OltbMjE5NDJdLDI1Nl0sMTI3NTUyOltbMTIzMDgsMjY0MTIsMTIzMDldLDI1Nl0sMTI3NTUzOltbMTIzMDgsMTk5NzcsMTIzMDldLDI1Nl0sMTI3NTU0OltbMTIzMDgsMjAxMDgsMTIzMDldLDI1Nl0sMTI3NTU1OltbMTIzMDgsMjM0MzMsMTIzMDldLDI1Nl0sMTI3NTU2OltbMTIzMDgsMjg4NTcsMTIzMDldLDI1Nl0sMTI3NTU3OltbMTIzMDgsMjUxNzEsMTIzMDldLDI1Nl0sMTI3NTU4OltbMTIzMDgsMzA0MjMsMTIzMDldLDI1Nl0sMTI3NTU5OltbMTIzMDgsMjEyMTMsMTIzMDldLDI1Nl0sMTI3NTYwOltbMTIzMDgsMjU5NDMsMTIzMDldLDI1Nl0sMTI3NTY4OltbMjQ0NzFdLDI1Nl0sMTI3NTY5OltbMjE0ODddLDI1Nl19LA0KNjM0ODg6ezE5NDU2MDpbWzIwMDI5XV0sMTk0NTYxOltbMjAwMjRdXSwxOTQ1NjI6W1syMDAzM11dLDE5NDU2MzpbWzEzMTM2Ml1dLDE5NDU2NDpbWzIwMzIwXV0sMTk0NTY1OltbMjAzOThdXSwxOTQ1NjY6W1syMDQxMV1dLDE5NDU2NzpbWzIwNDgyXV0sMTk0NTY4OltbMjA2MDJdXSwxOTQ1Njk6W1syMDYzM11dLDE5NDU3MDpbWzIwNzExXV0sMTk0NTcxOltbMjA2ODddXSwxOTQ1NzI6W1sxMzQ3MF1dLDE5NDU3MzpbWzEzMjY2Nl1dLDE5NDU3NDpbWzIwODEzXV0sMTk0NTc1OltbMjA4MjBdXSwxOTQ1NzY6W1syMDgzNl1dLDE5NDU3NzpbWzIwODU1XV0sMTk0NTc4OltbMTMyMzgwXV0sMTk0NTc5OltbMTM0OTddXSwxOTQ1ODA6W1syMDgzOV1dLDE5NDU4MTpbWzIwODc3XV0sMTk0NTgyOltbMTMyNDI3XV0sMTk0NTgzOltbMjA4ODddXSwxOTQ1ODQ6W1syMDkwMF1dLDE5NDU4NTpbWzIwMTcyXV0sMTk0NTg2OltbMjA5MDhdXSwxOTQ1ODc6W1syMDkxN11dLDE5NDU4ODpbWzE2ODQxNV1dLDE5NDU4OTpbWzIwOTgxXV0sMTk0NTkwOltbMjA5OTVdXSwxOTQ1OTE6W1sxMzUzNV1dLDE5NDU5MjpbWzIxMDUxXV0sMTk0NTkzOltbMjEwNjJdXSwxOTQ1OTQ6W1syMTEwNl1dLDE5NDU5NTpbWzIxMTExXV0sMTk0NTk2OltbMTM1ODldXSwxOTQ1OTc6W1syMTE5MV1dLDE5NDU5ODpbWzIxMTkzXV0sMTk0NTk5OltbMjEyMjBdXSwxOTQ2MDA6W1syMTI0Ml1dLDE5NDYwMTpbWzIxMjUzXV0sMTk0NjAyOltbMjEyNTRdXSwxOTQ2MDM6W1syMTI3MV1dLDE5NDYwNDpbWzIxMzIxXV0sMTk0NjA1OltbMjEzMjldXSwxOTQ2MDY6W1syMTMzOF1dLDE5NDYwNzpbWzIxMzYzXV0sMTk0NjA4OltbMjEzNzNdXSwxOTQ2MDk6W1syMTM3NV1dLDE5NDYxMDpbWzIxMzc1XV0sMTk0NjExOltbMjEzNzVdXSwxOTQ2MTI6W1sxMzM2NzZdXSwxOTQ2MTM6W1syODc4NF1dLDE5NDYxNDpbWzIxNDUwXV0sMTk0NjE1OltbMjE0NzFdXSwxOTQ2MTY6W1sxMzM5ODddXSwxOTQ2MTc6W1syMTQ4M11dLDE5NDYxODpbWzIxNDg5XV0sMTk0NjE5OltbMjE1MTBdXSwxOTQ2MjA6W1syMTY2Ml1dLDE5NDYyMTpbWzIxNTYwXV0sMTk0NjIyOltbMjE1NzZdXSwxOTQ2MjM6W1syMTYwOF1dLDE5NDYyNDpbWzIxNjY2XV0sMTk0NjI1OltbMjE3NTBdXSwxOTQ2MjY6W1syMTc3Nl1dLDE5NDYyNzpbWzIxODQzXV0sMTk0NjI4OltbMjE4NTldXSwxOTQ2Mjk6W1syMTg5Ml1dLDE5NDYzMDpbWzIxODkyXV0sMTk0NjMxOltbMjE5MTNdXSwxOTQ2MzI6W1syMTkzMV1dLDE5NDYzMzpbWzIxOTM5XV0sMTk0NjM0OltbMjE5NTRdXSwxOTQ2MzU6W1syMjI5NF1dLDE5NDYzNjpbWzIyMDIyXV0sMTk0NjM3OltbMjIyOTVdXSwxOTQ2Mzg6W1syMjA5N11dLDE5NDYzOTpbWzIyMTMyXV0sMTk0NjQwOltbMjA5OTldXSwxOTQ2NDE6W1syMjc2Nl1dLDE5NDY0MjpbWzIyNDc4XV0sMTk0NjQzOltbMjI1MTZdXSwxOTQ2NDQ6W1syMjU0MV1dLDE5NDY0NTpbWzIyNDExXV0sMTk0NjQ2OltbMjI1NzhdXSwxOTQ2NDc6W1syMjU3N11dLDE5NDY0ODpbWzIyNzAwXV0sMTk0NjQ5OltbMTM2NDIwXV0sMTk0NjUwOltbMjI3NzBdXSwxOTQ2NTE6W1syMjc3NV1dLDE5NDY1MjpbWzIyNzkwXV0sMTk0NjUzOltbMjI4MTBdXSwxOTQ2NTQ6W1syMjgxOF1dLDE5NDY1NTpbWzIyODgyXV0sMTk0NjU2OltbMTM2ODcyXV0sMTk0NjU3OltbMTM2OTM4XV0sMTk0NjU4OltbMjMwMjBdXSwxOTQ2NTk6W1syMzA2N11dLDE5NDY2MDpbWzIzMDc5XV0sMTk0NjYxOltbMjMwMDBdXSwxOTQ2NjI6W1syMzE0Ml1dLDE5NDY2MzpbWzE0MDYyXV0sMTk0NjY0OltbMTQwNzZdXSwxOTQ2NjU6W1syMzMwNF1dLDE5NDY2NjpbWzIzMzU4XV0sMTk0NjY3OltbMjMzNThdXSwxOTQ2Njg6W1sxMzc2NzJdXSwxOTQ2Njk6W1syMzQ5MV1dLDE5NDY3MDpbWzIzNTEyXV0sMTk0NjcxOltbMjM1MjddXSwxOTQ2NzI6W1syMzUzOV1dLDE5NDY3MzpbWzEzODAwOF1dLDE5NDY3NDpbWzIzNTUxXV0sMTk0Njc1OltbMjM1NThdXSwxOTQ2NzY6W1syNDQwM11dLDE5NDY3NzpbWzIzNTg2XV0sMTk0Njc4OltbMTQyMDldXSwxOTQ2Nzk6W1syMzY0OF1dLDE5NDY4MDpbWzIzNjYyXV0sMTk0NjgxOltbMjM3NDRdXSwxOTQ2ODI6W1syMzY5M11dLDE5NDY4MzpbWzEzODcyNF1dLDE5NDY4NDpbWzIzODc1XV0sMTk0Njg1OltbMTM4NzI2XV0sMTk0Njg2OltbMjM5MThdXSwxOTQ2ODc6W1syMzkxNV1dLDE5NDY4ODpbWzIzOTMyXV0sMTk0Njg5OltbMjQwMzNdXSwxOTQ2OTA6W1syNDAzNF1dLDE5NDY5MTpbWzE0MzgzXV0sMTk0NjkyOltbMjQwNjFdXSwxOTQ2OTM6W1syNDEwNF1dLDE5NDY5NDpbWzI0MTI1XV0sMTk0Njk1OltbMjQxNjldXSwxOTQ2OTY6W1sxNDQzNF1dLDE5NDY5NzpbWzEzOTY1MV1dLDE5NDY5ODpbWzE0NDYwXV0sMTk0Njk5OltbMjQyNDBdXSwxOTQ3MDA6W1syNDI0M11dLDE5NDcwMTpbWzI0MjQ2XV0sMTk0NzAyOltbMjQyNjZdXSwxOTQ3MDM6W1sxNzI5NDZdXSwxOTQ3MDQ6W1syNDMxOF1dLDE5NDcwNTpbWzE0MDA4MV1dLDE5NDcwNjpbWzE0MDA4MV1dLDE5NDcwNzpbWzMzMjgxXV0sMTk0NzA4OltbMjQzNTRdXSwxOTQ3MDk6W1syNDM1NF1dLDE5NDcxMDpbWzE0NTM1XV0sMTk0NzExOltbMTQ0MDU2XV0sMTk0NzEyOltbMTU2MTIyXV0sMTk0NzEzOltbMjQ0MThdXSwxOTQ3MTQ6W1syNDQyN11dLDE5NDcxNTpbWzE0NTYzXV0sMTk0NzE2OltbMjQ0NzRdXSwxOTQ3MTc6W1syNDUyNV1dLDE5NDcxODpbWzI0NTM1XV0sMTk0NzE5OltbMjQ1NjldXSwxOTQ3MjA6W1syNDcwNV1dLDE5NDcyMTpbWzE0NjUwXV0sMTk0NzIyOltbMTQ2MjBdXSwxOTQ3MjM6W1syNDcyNF1dLDE5NDcyNDpbWzE0MTAxMl1dLDE5NDcyNTpbWzI0Nzc1XV0sMTk0NzI2OltbMjQ5MDRdXSwxOTQ3Mjc6W1syNDkwOF1dLDE5NDcyODpbWzI0OTEwXV0sMTk0NzI5OltbMjQ5MDhdXSwxOTQ3MzA6W1syNDk1NF1dLDE5NDczMTpbWzI0OTc0XV0sMTk0NzMyOltbMjUwMTBdXSwxOTQ3MzM6W1syNDk5Nl1dLDE5NDczNDpbWzI1MDA3XV0sMTk0NzM1OltbMjUwNTRdXSwxOTQ3MzY6W1syNTA3NF1dLDE5NDczNzpbWzI1MDc4XV0sMTk0NzM4OltbMjUxMDRdXSwxOTQ3Mzk6W1syNTExNV1dLDE5NDc0MDpbWzI1MTgxXV0sMTk0NzQxOltbMjUyNjVdXSwxOTQ3NDI6W1syNTMwMF1dLDE5NDc0MzpbWzI1NDI0XV0sMTk0NzQ0OltbMTQyMDkyXV0sMTk0NzQ1OltbMjU0MDVdXSwxOTQ3NDY6W1syNTM0MF1dLDE5NDc0NzpbWzI1NDQ4XV0sMTk0NzQ4OltbMjU0NzVdXSwxOTQ3NDk6W1syNTU3Ml1dLDE5NDc1MDpbWzE0MjMyMV1dLDE5NDc1MTpbWzI1NjM0XV0sMTk0NzUyOltbMjU1NDFdXSwxOTQ3NTM6W1syNTUxM11dLDE5NDc1NDpbWzE0ODk0XV0sMTk0NzU1OltbMjU3MDVdXSwxOTQ3NTY6W1syNTcyNl1dLDE5NDc1NzpbWzI1NzU3XV0sMTk0NzU4OltbMjU3MTldXSwxOTQ3NTk6W1sxNDk1Nl1dLDE5NDc2MDpbWzI1OTM1XV0sMTk0NzYxOltbMjU5NjRdXSwxOTQ3NjI6W1sxNDMzNzBdXSwxOTQ3NjM6W1syNjA4M11dLDE5NDc2NDpbWzI2MzYwXV0sMTk0NzY1OltbMjYxODVdXSwxOTQ3NjY6W1sxNTEyOV1dLDE5NDc2NzpbWzI2MjU3XV0sMTk0NzY4OltbMTUxMTJdXSwxOTQ3Njk6W1sxNTA3Nl1dLDE5NDc3MDpbWzIwODgyXV0sMTk0NzcxOltbMjA4ODVdXSwxOTQ3NzI6W1syNjM2OF1dLDE5NDc3MzpbWzI2MjY4XV0sMTk0Nzc0OltbMzI5NDFdXSwxOTQ3NzU6W1sxNzM2OV1dLDE5NDc3NjpbWzI2MzkxXV0sMTk0Nzc3OltbMjYzOTVdXSwxOTQ3Nzg6W1syNjQwMV1dLDE5NDc3OTpbWzI2NDYyXV0sMTk0NzgwOltbMjY0NTFdXSwxOTQ3ODE6W1sxNDQzMjNdXSwxOTQ3ODI6W1sxNTE3N11dLDE5NDc4MzpbWzI2NjE4XV0sMTk0Nzg0OltbMjY1MDFdXSwxOTQ3ODU6W1syNjcwNl1dLDE5NDc4NjpbWzI2NzU3XV0sMTk0Nzg3OltbMTQ0NDkzXV0sMTk0Nzg4OltbMjY3NjZdXSwxOTQ3ODk6W1syNjY1NV1dLDE5NDc5MDpbWzI2OTAwXV0sMTk0NzkxOltbMTUyNjFdXSwxOTQ3OTI6W1syNjk0Nl1dLDE5NDc5MzpbWzI3MDQzXV0sMTk0Nzk0OltbMjcxMTRdXSwxOTQ3OTU6W1syNzMwNF1dLDE5NDc5NjpbWzE0NTA1OV1dLDE5NDc5NzpbWzI3MzU1XV0sMTk0Nzk4OltbMTUzODRdXSwxOTQ3OTk6W1syNzQyNV1dLDE5NDgwMDpbWzE0NTU3NV1dLDE5NDgwMTpbWzI3NDc2XV0sMTk0ODAyOltbMTU0MzhdXSwxOTQ4MDM6W1syNzUwNl1dLDE5NDgwNDpbWzI3NTUxXV0sMTk0ODA1OltbMjc1NzhdXSwxOTQ4MDY6W1syNzU3OV1dLDE5NDgwNzpbWzE0NjA2MV1dLDE5NDgwODpbWzEzODUwN11dLDE5NDgwOTpbWzE0NjE3MF1dLDE5NDgxMDpbWzI3NzI2XV0sMTk0ODExOltbMTQ2NjIwXV0sMTk0ODEyOltbMjc4MzldXSwxOTQ4MTM6W1syNzg1M11dLDE5NDgxNDpbWzI3NzUxXV0sMTk0ODE1OltbMjc5MjZdXX0sDQo2Mzc0NDp7NjM3NDQ6W1szNTkxMl1dLDYzNzQ1OltbMjYzNTZdXSw2Mzc0NjpbWzM2NTU0XV0sNjM3NDc6W1szNjA0MF1dLDYzNzQ4OltbMjgzNjldXSw2Mzc0OTpbWzIwMDE4XV0sNjM3NTA6W1syMTQ3N11dLDYzNzUxOltbNDA4NjBdXSw2Mzc1MjpbWzQwODYwXV0sNjM3NTM6W1syMjg2NV1dLDYzNzU0OltbMzczMjldXSw2Mzc1NTpbWzIxODk1XV0sNjM3NTY6W1syMjg1Nl1dLDYzNzU3OltbMjUwNzhdXSw2Mzc1ODpbWzMwMzEzXV0sNjM3NTk6W1szMjY0NV1dLDYzNzYwOltbMzQzNjddXSw2Mzc2MTpbWzM0NzQ2XV0sNjM3NjI6W1szNTA2NF1dLDYzNzYzOltbMzcwMDddXSw2Mzc2NDpbWzI3MTM4XV0sNjM3NjU6W1syNzkzMV1dLDYzNzY2OltbMjg4ODldXSw2Mzc2NzpbWzI5NjYyXV0sNjM3Njg6W1szMzg1M11dLDYzNzY5OltbMzcyMjZdXSw2Mzc3MDpbWzM5NDA5XV0sNjM3NzE6W1syMDA5OF1dLDYzNzcyOltbMjEzNjVdXSw2Mzc3MzpbWzI3Mzk2XV0sNjM3NzQ6W1syOTIxMV1dLDYzNzc1OltbMzQzNDldXSw2Mzc3NjpbWzQwNDc4XV0sNjM3Nzc6W1syMzg4OF1dLDYzNzc4OltbMjg2NTFdXSw2Mzc3OTpbWzM0MjUzXV0sNjM3ODA6W1szNTE3Ml1dLDYzNzgxOltbMjUyODldXSw2Mzc4MjpbWzMzMjQwXV0sNjM3ODM6W1szNDg0N11dLDYzNzg0OltbMjQyNjZdXSw2Mzc4NTpbWzI2MzkxXV0sNjM3ODY6W1syODAxMF1dLDYzNzg3OltbMjk0MzZdXSw2Mzc4ODpbWzM3MDcwXV0sNjM3ODk6W1syMDM1OF1dLDYzNzkwOltbMjA5MTldXSw2Mzc5MTpbWzIxMjE0XV0sNjM3OTI6W1syNTc5Nl1dLDYzNzkzOltbMjczNDddXSw2Mzc5NDpbWzI5MjAwXV0sNjM3OTU6W1szMDQzOV1dLDYzNzk2OltbMzI3NjldXSw2Mzc5NzpbWzM0MzEwXV0sNjM3OTg6W1szNDM5Nl1dLDYzNzk5OltbMzYzMzVdXSw2MzgwMDpbWzM4NzA2XV0sNjM4MDE6W1szOTc5MV1dLDYzODAyOltbNDA0NDJdXSw2MzgwMzpbWzMwODYwXV0sNjM4MDQ6W1szMTEwM11dLDYzODA1OltbMzIxNjBdXSw2MzgwNjpbWzMzNzM3XV0sNjM4MDc6W1szNzYzNl1dLDYzODA4OltbNDA1NzVdXSw2MzgwOTpbWzM1NTQyXV0sNjM4MTA6W1syMjc1MV1dLDYzODExOltbMjQzMjRdXSw2MzgxMjpbWzMxODQwXV0sNjM4MTM6W1szMjg5NF1dLDYzODE0OltbMjkyODJdXSw2MzgxNTpbWzMwOTIyXV0sNjM4MTY6W1szNjAzNF1dLDYzODE3OltbMzg2NDddXSw2MzgxODpbWzIyNzQ0XV0sNjM4MTk6W1syMzY1MF1dLDYzODIwOltbMjcxNTVdXSw2MzgyMTpbWzI4MTIyXV0sNjM4MjI6W1syODQzMV1dLDYzODIzOltbMzIwNDddXSw2MzgyNDpbWzMyMzExXV0sNjM4MjU6W1szODQ3NV1dLDYzODI2OltbMjEyMDJdXSw2MzgyNzpbWzMyOTA3XV0sNjM4Mjg6W1syMDk1Nl1dLDYzODI5OltbMjA5NDBdXSw2MzgzMDpbWzMxMjYwXV0sNjM4MzE6W1szMjE5MF1dLDYzODMyOltbMzM3NzddXSw2MzgzMzpbWzM4NTE3XV0sNjM4MzQ6W1szNTcxMl1dLDYzODM1OltbMjUyOTVdXSw2MzgzNjpbWzI3MTM4XV0sNjM4Mzc6W1szNTU4Ml1dLDYzODM4OltbMjAwMjVdXSw2MzgzOTpbWzIzNTI3XV0sNjM4NDA6W1syNDU5NF1dLDYzODQxOltbMjk1NzVdXSw2Mzg0MjpbWzMwMDY0XV0sNjM4NDM6W1syMTI3MV1dLDYzODQ0OltbMzA5NzFdXSw2Mzg0NTpbWzIwNDE1XV0sNjM4NDY6W1syNDQ4OV1dLDYzODQ3OltbMTk5ODFdXSw2Mzg0ODpbWzI3ODUyXV0sNjM4NDk6W1syNTk3Nl1dLDYzODUwOltbMzIwMzRdXSw2Mzg1MTpbWzIxNDQzXV0sNjM4NTI6W1syMjYyMl1dLDYzODUzOltbMzA0NjVdXSw2Mzg1NDpbWzMzODY1XV0sNjM4NTU6W1szNTQ5OF1dLDYzODU2OltbMjc1NzhdXSw2Mzg1NzpbWzM2Nzg0XV0sNjM4NTg6W1syNzc4NF1dLDYzODU5OltbMjUzNDJdXSw2Mzg2MDpbWzMzNTA5XV0sNjM4NjE6W1syNTUwNF1dLDYzODYyOltbMzAwNTNdXSw2Mzg2MzpbWzIwMTQyXV0sNjM4NjQ6W1syMDg0MV1dLDYzODY1OltbMjA5MzddXSw2Mzg2NjpbWzI2NzUzXV0sNjM4Njc6W1szMTk3NV1dLDYzODY4OltbMzMzOTFdXSw2Mzg2OTpbWzM1NTM4XV0sNjM4NzA6W1szNzMyN11dLDYzODcxOltbMjEyMzddXSw2Mzg3MjpbWzIxNTcwXV0sNjM4NzM6W1syMjg5OV1dLDYzODc0OltbMjQzMDBdXSw2Mzg3NTpbWzI2MDUzXV0sNjM4NzY6W1syODY3MF1dLDYzODc3OltbMzEwMThdXSw2Mzg3ODpbWzM4MzE3XV0sNjM4Nzk6W1szOTUzMF1dLDYzODgwOltbNDA1OTldXSw2Mzg4MTpbWzQwNjU0XV0sNjM4ODI6W1syMTE0N11dLDYzODgzOltbMjYzMTBdXSw2Mzg4NDpbWzI3NTExXV0sNjM4ODU6W1szNjcwNl1dLDYzODg2OltbMjQxODBdXSw2Mzg4NzpbWzI0OTc2XV0sNjM4ODg6W1syNTA4OF1dLDYzODg5OltbMjU3NTRdXSw2Mzg5MDpbWzI4NDUxXV0sNjM4OTE6W1syOTAwMV1dLDYzODkyOltbMjk4MzNdXSw2Mzg5MzpbWzMxMTc4XV0sNjM4OTQ6W1szMjI0NF1dLDYzODk1OltbMzI4NzldXSw2Mzg5NjpbWzM2NjQ2XV0sNjM4OTc6W1szNDAzMF1dLDYzODk4OltbMzY4OTldXSw2Mzg5OTpbWzM3NzA2XV0sNjM5MDA6W1syMTAxNV1dLDYzOTAxOltbMjExNTVdXSw2MzkwMjpbWzIxNjkzXV0sNjM5MDM6W1syODg3Ml1dLDYzOTA0OltbMzUwMTBdXSw2MzkwNTpbWzM1NDk4XV0sNjM5MDY6W1syNDI2NV1dLDYzOTA3OltbMjQ1NjVdXSw2MzkwODpbWzI1NDY3XV0sNjM5MDk6W1syNzU2Nl1dLDYzOTEwOltbMzE4MDZdXSw2MzkxMTpbWzI5NTU3XV0sNjM5MTI6W1syMDE5Nl1dLDYzOTEzOltbMjIyNjVdXSw2MzkxNDpbWzIzNTI3XV0sNjM5MTU6W1syMzk5NF1dLDYzOTE2OltbMjQ2MDRdXSw2MzkxNzpbWzI5NjE4XV0sNjM5MTg6W1syOTgwMV1dLDYzOTE5OltbMzI2NjZdXSw2MzkyMDpbWzMyODM4XV0sNjM5MjE6W1szNzQyOF1dLDYzOTIyOltbMzg2NDZdXSw2MzkyMzpbWzM4NzI4XV0sNjM5MjQ6W1szODkzNl1dLDYzOTI1OltbMjAzNjNdXSw2MzkyNjpbWzMxMTUwXV0sNjM5Mjc6W1szNzMwMF1dLDYzOTI4OltbMzg1ODRdXSw2MzkyOTpbWzI0ODAxXV0sNjM5MzA6W1syMDEwMl1dLDYzOTMxOltbMjA2OThdXSw2MzkzMjpbWzIzNTM0XV0sNjM5MzM6W1syMzYxNV1dLDYzOTM0OltbMjYwMDldXSw2MzkzNTpbWzI3MTM4XV0sNjM5MzY6W1syOTEzNF1dLDYzOTM3OltbMzAyNzRdXSw2MzkzODpbWzM0MDQ0XV0sNjM5Mzk6W1szNjk4OF1dLDYzOTQwOltbNDA4NDVdXSw2Mzk0MTpbWzI2MjQ4XV0sNjM5NDI6W1szODQ0Nl1dLDYzOTQzOltbMjExMjldXSw2Mzk0NDpbWzI2NDkxXV0sNjM5NDU6W1syNjYxMV1dLDYzOTQ2OltbMjc5NjldXSw2Mzk0NzpbWzI4MzE2XV0sNjM5NDg6W1syOTcwNV1dLDYzOTQ5OltbMzAwNDFdXSw2Mzk1MDpbWzMwODI3XV0sNjM5NTE6W1szMjAxNl1dLDYzOTUyOltbMzkwMDZdXSw2Mzk1MzpbWzIwODQ1XV0sNjM5NTQ6W1syNTEzNF1dLDYzOTU1OltbMzg1MjBdXSw2Mzk1NjpbWzIwNTIzXV0sNjM5NTc6W1syMzgzM11dLDYzOTU4OltbMjgxMzhdXSw2Mzk1OTpbWzM2NjUwXV0sNjM5NjA6W1syNDQ1OV1dLDYzOTYxOltbMjQ5MDBdXSw2Mzk2MjpbWzI2NjQ3XV0sNjM5NjM6W1syOTU3NV1dLDYzOTY0OltbMzg1MzRdXSw2Mzk2NTpbWzIxMDMzXV0sNjM5NjY6W1syMTUxOV1dLDYzOTY3OltbMjM2NTNdXSw2Mzk2ODpbWzI2MTMxXV0sNjM5Njk6W1syNjQ0Nl1dLDYzOTcwOltbMjY3OTJdXSw2Mzk3MTpbWzI3ODc3XV0sNjM5NzI6W1syOTcwMl1dLDYzOTczOltbMzAxNzhdXSw2Mzk3NDpbWzMyNjMzXV0sNjM5NzU6W1szNTAyM11dLDYzOTc2OltbMzUwNDFdXSw2Mzk3NzpbWzM3MzI0XV0sNjM5Nzg6W1szODYyNl1dLDYzOTc5OltbMjEzMTFdXSw2Mzk4MDpbWzI4MzQ2XV0sNjM5ODE6W1syMTUzM11dLDYzOTgyOltbMjkxMzZdXSw2Mzk4MzpbWzI5ODQ4XV0sNjM5ODQ6W1szNDI5OF1dLDYzOTg1OltbMzg1NjNdXSw2Mzk4NjpbWzQwMDIzXV0sNjM5ODc6W1s0MDYwN11dLDYzOTg4OltbMjY1MTldXSw2Mzk4OTpbWzI4MTA3XV0sNjM5OTA6W1szMzI1Nl1dLDYzOTkxOltbMzE0MzVdXSw2Mzk5MjpbWzMxNTIwXV0sNjM5OTM6W1szMTg5MF1dLDYzOTk0OltbMjkzNzZdXSw2Mzk5NTpbWzI4ODI1XV0sNjM5OTY6W1szNTY3Ml1dLDYzOTk3OltbMjAxNjBdXSw2Mzk5ODpbWzMzNTkwXV0sNjM5OTk6W1syMTA1MF1dLDE5NDgxNjpbWzI3OTY2XV0sMTk0ODE3OltbMjgwMjNdXSwxOTQ4MTg6W1syNzk2OV1dLDE5NDgxOTpbWzI4MDA5XV0sMTk0ODIwOltbMjgwMjRdXSwxOTQ4MjE6W1syODAzN11dLDE5NDgyMjpbWzE0NjcxOF1dLDE5NDgyMzpbWzI3OTU2XV0sMTk0ODI0OltbMjgyMDddXSwxOTQ4MjU6W1syODI3MF1dLDE5NDgyNjpbWzE1NjY3XV0sMTk0ODI3OltbMjgzNjNdXSwxOTQ4Mjg6W1syODM1OV1dLDE5NDgyOTpbWzE0NzE1M11dLDE5NDgzMDpbWzI4MTUzXV0sMTk0ODMxOltbMjg1MjZdXSwxOTQ4MzI6W1sxNDcyOTRdXSwxOTQ4MzM6W1sxNDczNDJdXSwxOTQ4MzQ6W1syODYxNF1dLDE5NDgzNTpbWzI4NzI5XV0sMTk0ODM2OltbMjg3MDJdXSwxOTQ4Mzc6W1syODY5OV1dLDE5NDgzODpbWzE1NzY2XV0sMTk0ODM5OltbMjg3NDZdXSwxOTQ4NDA6W1syODc5N11dLDE5NDg0MTpbWzI4NzkxXV0sMTk0ODQyOltbMjg4NDVdXSwxOTQ4NDM6W1sxMzIzODldXSwxOTQ4NDQ6W1syODk5N11dLDE5NDg0NTpbWzE0ODA2N11dLDE5NDg0NjpbWzI5MDg0XV0sMTk0ODQ3OltbMTQ4Mzk1XV0sMTk0ODQ4OltbMjkyMjRdXSwxOTQ4NDk6W1syOTIzN11dLDE5NDg1MDpbWzI5MjY0XV0sMTk0ODUxOltbMTQ5MDAwXV0sMTk0ODUyOltbMjkzMTJdXSwxOTQ4NTM6W1syOTMzM11dLDE5NDg1NDpbWzE0OTMwMV1dLDE5NDg1NTpbWzE0OTUyNF1dLDE5NDg1NjpbWzI5NTYyXV0sMTk0ODU3OltbMjk1NzldXSwxOTQ4NTg6W1sxNjA0NF1dLDE5NDg1OTpbWzI5NjA1XV0sMTk0ODYwOltbMTYwNTZdXSwxOTQ4NjE6W1sxNjA1Nl1dLDE5NDg2MjpbWzI5NzY3XV0sMTk0ODYzOltbMjk3ODhdXSwxOTQ4NjQ6W1syOTgwOV1dLDE5NDg2NTpbWzI5ODI5XV0sMTk0ODY2OltbMjk4OThdXSwxOTQ4Njc6W1sxNjE1NV1dLDE5NDg2ODpbWzI5OTg4XV0sMTk0ODY5OltbMTUwNTgyXV0sMTk0ODcwOltbMzAwMTRdXSwxOTQ4NzE6W1sxNTA2NzRdXSwxOTQ4NzI6W1szMDA2NF1dLDE5NDg3MzpbWzEzOTY3OV1dLDE5NDg3NDpbWzMwMjI0XV0sMTk0ODc1OltbMTUxNDU3XV0sMTk0ODc2OltbMTUxNDgwXV0sMTk0ODc3OltbMTUxNjIwXV0sMTk0ODc4OltbMTYzODBdXSwxOTQ4Nzk6W1sxNjM5Ml1dLDE5NDg4MDpbWzMwNDUyXV0sMTk0ODgxOltbMTUxNzk1XV0sMTk0ODgyOltbMTUxNzk0XV0sMTk0ODgzOltbMTUxODMzXV0sMTk0ODg0OltbMTUxODU5XV0sMTk0ODg1OltbMzA0OTRdXSwxOTQ4ODY6W1szMDQ5NV1dLDE5NDg4NzpbWzMwNDk1XV0sMTk0ODg4OltbMzA1MzhdXSwxOTQ4ODk6W1sxNjQ0MV1dLDE5NDg5MDpbWzMwNjAzXV0sMTk0ODkxOltbMTY0NTRdXSwxOTQ4OTI6W1sxNjUzNF1dLDE5NDg5MzpbWzE1MjYwNV1dLDE5NDg5NDpbWzMwNzk4XV0sMTk0ODk1OltbMzA4NjBdXSwxOTQ4OTY6W1szMDkyNF1dLDE5NDg5NzpbWzE2NjExXV0sMTk0ODk4OltbMTUzMTI2XV0sMTk0ODk5OltbMzEwNjJdXSwxOTQ5MDA6W1sxNTMyNDJdXSwxOTQ5MDE6W1sxNTMyODVdXSwxOTQ5MDI6W1szMTExOV1dLDE5NDkwMzpbWzMxMjExXV0sMTk0OTA0OltbMTY2ODddXSwxOTQ5MDU6W1szMTI5Nl1dLDE5NDkwNjpbWzMxMzA2XV0sMTk0OTA3OltbMzEzMTFdXSwxOTQ5MDg6W1sxNTM5ODBdXSwxOTQ5MDk6W1sxNTQyNzldXSwxOTQ5MTA6W1sxNTQyNzldXSwxOTQ5MTE6W1szMTQ3MF1dLDE5NDkxMjpbWzE2ODk4XV0sMTk0OTEzOltbMTU0NTM5XV0sMTk0OTE0OltbMzE2ODZdXSwxOTQ5MTU6W1szMTY4OV1dLDE5NDkxNjpbWzE2OTM1XV0sMTk0OTE3OltbMTU0NzUyXV0sMTk0OTE4OltbMzE5NTRdXSwxOTQ5MTk6W1sxNzA1Nl1dLDE5NDkyMDpbWzMxOTc2XV0sMTk0OTIxOltbMzE5NzFdXSwxOTQ5MjI6W1szMjAwMF1dLDE5NDkyMzpbWzE1NTUyNl1dLDE5NDkyNDpbWzMyMDk5XV0sMTk0OTI1OltbMTcxNTNdXSwxOTQ5MjY6W1szMjE5OV1dLDE5NDkyNzpbWzMyMjU4XV0sMTk0OTI4OltbMzIzMjVdXSwxOTQ5Mjk6W1sxNzIwNF1dLDE5NDkzMDpbWzE1NjIwMF1dLDE5NDkzMTpbWzE1NjIzMV1dLDE5NDkzMjpbWzE3MjQxXV0sMTk0OTMzOltbMTU2Mzc3XV0sMTk0OTM0OltbMzI2MzRdXSwxOTQ5MzU6W1sxNTY0NzhdXSwxOTQ5MzY6W1szMjY2MV1dLDE5NDkzNzpbWzMyNzYyXV0sMTk0OTM4OltbMzI3NzNdXSwxOTQ5Mzk6W1sxNTY4OTBdXSwxOTQ5NDA6W1sxNTY5NjNdXSwxOTQ5NDE6W1szMjg2NF1dLDE5NDk0MjpbWzE1NzA5Nl1dLDE5NDk0MzpbWzMyODgwXV0sMTk0OTQ0OltbMTQ0MjIzXV0sMTk0OTQ1OltbMTczNjVdXSwxOTQ5NDY6W1szMjk0Nl1dLDE5NDk0NzpbWzMzMDI3XV0sMTk0OTQ4OltbMTc0MTldXSwxOTQ5NDk6W1szMzA4Nl1dLDE5NDk1MDpbWzIzMjIxXV0sMTk0OTUxOltbMTU3NjA3XV0sMTk0OTUyOltbMTU3NjIxXV0sMTk0OTUzOltbMTQ0Mjc1XV0sMTk0OTU0OltbMTQ0Mjg0XV0sMTk0OTU1OltbMzMyODFdXSwxOTQ5NTY6W1szMzI4NF1dLDE5NDk1NzpbWzM2NzY2XV0sMTk0OTU4OltbMTc1MTVdXSwxOTQ5NTk6W1szMzQyNV1dLDE5NDk2MDpbWzMzNDE5XV0sMTk0OTYxOltbMzM0MzddXSwxOTQ5NjI6W1syMTE3MV1dLDE5NDk2MzpbWzMzNDU3XV0sMTk0OTY0OltbMzM0NTldXSwxOTQ5NjU6W1szMzQ2OV1dLDE5NDk2NjpbWzMzNTEwXV0sMTk0OTY3OltbMTU4NTI0XV0sMTk0OTY4OltbMzM1MDldXSwxOTQ5Njk6W1szMzU2NV1dLDE5NDk3MDpbWzMzNjM1XV0sMTk0OTcxOltbMzM3MDldXSwxOTQ5NzI6W1szMzU3MV1dLDE5NDk3MzpbWzMzNzI1XV0sMTk0OTc0OltbMzM3NjddXSwxOTQ5NzU6W1szMzg3OV1dLDE5NDk3NjpbWzMzNjE5XV0sMTk0OTc3OltbMzM3MzhdXSwxOTQ5Nzg6W1szMzc0MF1dLDE5NDk3OTpbWzMzNzU2XV0sMTk0OTgwOltbMTU4Nzc0XV0sMTk0OTgxOltbMTU5MDgzXV0sMTk0OTgyOltbMTU4OTMzXV0sMTk0OTgzOltbMTc3MDddXSwxOTQ5ODQ6W1szNDAzM11dLDE5NDk4NTpbWzM0MDM1XV0sMTk0OTg2OltbMzQwNzBdXSwxOTQ5ODc6W1sxNjA3MTRdXSwxOTQ5ODg6W1szNDE0OF1dLDE5NDk4OTpbWzE1OTUzMl1dLDE5NDk5MDpbWzE3NzU3XV0sMTk0OTkxOltbMTc3NjFdXSwxOTQ5OTI6W1sxNTk2NjVdXSwxOTQ5OTM6W1sxNTk5NTRdXSwxOTQ5OTQ6W1sxNzc3MV1dLDE5NDk5NTpbWzM0Mzg0XV0sMTk0OTk2OltbMzQzOTZdXSwxOTQ5OTc6W1szNDQwN11dLDE5NDk5ODpbWzM0NDA5XV0sMTk0OTk5OltbMzQ0NzNdXSwxOTUwMDA6W1szNDQ0MF1dLDE5NTAwMTpbWzM0NTc0XV0sMTk1MDAyOltbMzQ1MzBdXSwxOTUwMDM6W1szNDY4MV1dLDE5NTAwNDpbWzM0NjAwXV0sMTk1MDA1OltbMzQ2NjddXSwxOTUwMDY6W1szNDY5NF1dLDE5NTAwNzpbWzE3ODc5XV0sMTk1MDA4OltbMzQ3ODVdXSwxOTUwMDk6W1szNDgxN11dLDE5NTAxMDpbWzE3OTEzXV0sMTk1MDExOltbMzQ5MTJdXSwxOTUwMTI6W1szNDkxNV1dLDE5NTAxMzpbWzE2MTM4M11dLDE5NTAxNDpbWzM1MDMxXV0sMTk1MDE1OltbMzUwMzhdXSwxOTUwMTY6W1sxNzk3M11dLDE5NTAxNzpbWzM1MDY2XV0sMTk1MDE4OltbMTM0OTldXSwxOTUwMTk6W1sxNjE5NjZdXSwxOTUwMjA6W1sxNjIxNTBdXSwxOTUwMjE6W1sxODExMF1dLDE5NTAyMjpbWzE4MTE5XV0sMTk1MDIzOltbMzU0ODhdXSwxOTUwMjQ6W1szNTU2NV1dLDE5NTAyNTpbWzM1NzIyXV0sMTk1MDI2OltbMzU5MjVdXSwxOTUwMjc6W1sxNjI5ODRdXSwxOTUwMjg6W1szNjAxMV1dLDE5NTAyOTpbWzM2MDMzXV0sMTk1MDMwOltbMzYxMjNdXSwxOTUwMzE6W1szNjIxNV1dLDE5NTAzMjpbWzE2MzYzMV1dLDE5NTAzMzpbWzEzMzEyNF1dLDE5NTAzNDpbWzM2Mjk5XV0sMTk1MDM1OltbMzYyODRdXSwxOTUwMzY6W1szNjMzNl1dLDE5NTAzNzpbWzEzMzM0Ml1dLDE5NTAzODpbWzM2NTY0XV0sMTk1MDM5OltbMzY2NjRdXSwxOTUwNDA6W1sxNjUzMzBdXSwxOTUwNDE6W1sxNjUzNTddXSwxOTUwNDI6W1szNzAxMl1dLDE5NTA0MzpbWzM3MTA1XV0sMTk1MDQ0OltbMzcxMzddXSwxOTUwNDU6W1sxNjU2NzhdXSwxOTUwNDY6W1szNzE0N11dLDE5NTA0NzpbWzM3NDMyXV0sMTk1MDQ4OltbMzc1OTFdXSwxOTUwNDk6W1szNzU5Ml1dLDE5NTA1MDpbWzM3NTAwXV0sMTk1MDUxOltbMzc4ODFdXSwxOTUwNTI6W1szNzkwOV1dLDE5NTA1MzpbWzE2NjkwNl1dLDE5NTA1NDpbWzM4MjgzXV0sMTk1MDU1OltbMTg4MzddXSwxOTUwNTY6W1szODMyN11dLDE5NTA1NzpbWzE2NzI4N11dLDE5NTA1ODpbWzE4OTE4XV0sMTk1MDU5OltbMzg1OTVdXSwxOTUwNjA6W1syMzk4Nl1dLDE5NTA2MTpbWzM4NjkxXV0sMTk1MDYyOltbMTY4MjYxXV0sMTk1MDYzOltbMTY4NDc0XV0sMTk1MDY0OltbMTkwNTRdXSwxOTUwNjU6W1sxOTA2Ml1dLDE5NTA2NjpbWzM4ODgwXV0sMTk1MDY3OltbMTY4OTcwXV0sMTk1MDY4OltbMTkxMjJdXSwxOTUwNjk6W1sxNjkxMTBdXSwxOTUwNzA6W1szODkyM11dLDE5NTA3MTpbWzM4OTIzXV19LA0KNjQwMDA6ezY0MDAwOltbMjA5OTldXSw2NDAwMTpbWzI0MjMwXV0sNjQwMDI6W1syNTI5OV1dLDY0MDAzOltbMzE5NThdXSw2NDAwNDpbWzIzNDI5XV0sNjQwMDU6W1syNzkzNF1dLDY0MDA2OltbMjYyOTJdXSw2NDAwNzpbWzM2NjY3XV0sNjQwMDg6W1szNDg5Ml1dLDY0MDA5OltbMzg0NzddXSw2NDAxMDpbWzM1MjExXV0sNjQwMTE6W1syNDI3NV1dLDY0MDEyOltbMjA4MDBdXSw2NDAxMzpbWzIxOTUyXV0sNjQwMTY6W1syMjYxOF1dLDY0MDE4OltbMjYyMjhdXSw2NDAyMTpbWzIwOTU4XV0sNjQwMjI6W1syOTQ4Ml1dLDY0MDIzOltbMzA0MTBdXSw2NDAyNDpbWzMxMDM2XV0sNjQwMjU6W1szMTA3MF1dLDY0MDI2OltbMzEwNzddXSw2NDAyNzpbWzMxMTE5XV0sNjQwMjg6W1szODc0Ml1dLDY0MDI5OltbMzE5MzRdXSw2NDAzMDpbWzMyNzAxXV0sNjQwMzI6W1szNDMyMl1dLDY0MDM0OltbMzU1NzZdXSw2NDAzNzpbWzM2OTIwXV0sNjQwMzg6W1szNzExN11dLDY0MDQyOltbMzkxNTFdXSw2NDA0MzpbWzM5MTY0XV0sNjQwNDQ6W1szOTIwOF1dLDY0MDQ1OltbNDAzNzJdXSw2NDA0NjpbWzM3MDg2XV0sNjQwNDc6W1szODU4M11dLDY0MDQ4OltbMjAzOThdXSw2NDA0OTpbWzIwNzExXV0sNjQwNTA6W1syMDgxM11dLDY0MDUxOltbMjExOTNdXSw2NDA1MjpbWzIxMjIwXV0sNjQwNTM6W1syMTMyOV1dLDY0MDU0OltbMjE5MTddXSw2NDA1NTpbWzIyMDIyXV0sNjQwNTY6W1syMjEyMF1dLDY0MDU3OltbMjI1OTJdXSw2NDA1ODpbWzIyNjk2XV0sNjQwNTk6W1syMzY1Ml1dLDY0MDYwOltbMjM2NjJdXSw2NDA2MTpbWzI0NzI0XV0sNjQwNjI6W1syNDkzNl1dLDY0MDYzOltbMjQ5NzRdXSw2NDA2NDpbWzI1MDc0XV0sNjQwNjU6W1syNTkzNV1dLDY0MDY2OltbMjYwODJdXSw2NDA2NzpbWzI2MjU3XV0sNjQwNjg6W1syNjc1N11dLDY0MDY5OltbMjgwMjNdXSw2NDA3MDpbWzI4MTg2XV0sNjQwNzE6W1syODQ1MF1dLDY0MDcyOltbMjkwMzhdXSw2NDA3MzpbWzI5MjI3XV0sNjQwNzQ6W1syOTczMF1dLDY0MDc1OltbMzA4NjVdXSw2NDA3NjpbWzMxMDM4XV0sNjQwNzc6W1szMTA0OV1dLDY0MDc4OltbMzEwNDhdXSw2NDA3OTpbWzMxMDU2XV0sNjQwODA6W1szMTA2Ml1dLDY0MDgxOltbMzEwNjldXSw2NDA4MjpbWzMxMTE3XV0sNjQwODM6W1szMTExOF1dLDY0MDg0OltbMzEyOTZdXSw2NDA4NTpbWzMxMzYxXV0sNjQwODY6W1szMTY4MF1dLDY0MDg3OltbMzIyNDRdXSw2NDA4ODpbWzMyMjY1XV0sNjQwODk6W1szMjMyMV1dLDY0MDkwOltbMzI2MjZdXSw2NDA5MTpbWzMyNzczXV0sNjQwOTI6W1szMzI2MV1dLDY0MDkzOltbMzM0MDFdXSw2NDA5NDpbWzMzNDAxXV0sNjQwOTU6W1szMzg3OV1dLDY0MDk2OltbMzUwODhdXSw2NDA5NzpbWzM1MjIyXV0sNjQwOTg6W1szNTU4NV1dLDY0MDk5OltbMzU2NDFdXSw2NDEwMDpbWzM2MDUxXV0sNjQxMDE6W1szNjEwNF1dLDY0MTAyOltbMzY3OTBdXSw2NDEwMzpbWzM2OTIwXV0sNjQxMDQ6W1szODYyN11dLDY0MTA1OltbMzg5MTFdXSw2NDEwNjpbWzM4OTcxXV0sNjQxMDc6W1syNDY5M11dLDY0MTA4OltbMTQ4MjA2XV0sNjQxMDk6W1szMzMwNF1dLDY0MTEyOltbMjAwMDZdXSw2NDExMzpbWzIwOTE3XV0sNjQxMTQ6W1syMDg0MF1dLDY0MTE1OltbMjAzNTJdXSw2NDExNjpbWzIwODA1XV0sNjQxMTc6W1syMDg2NF1dLDY0MTE4OltbMjExOTFdXSw2NDExOTpbWzIxMjQyXV0sNjQxMjA6W1syMTkxN11dLDY0MTIxOltbMjE4NDVdXSw2NDEyMjpbWzIxOTEzXV0sNjQxMjM6W1syMTk4Nl1dLDY0MTI0OltbMjI2MThdXSw2NDEyNTpbWzIyNzA3XV0sNjQxMjY6W1syMjg1Ml1dLDY0MTI3OltbMjI4NjhdXSw2NDEyODpbWzIzMTM4XV0sNjQxMjk6W1syMzMzNl1dLDY0MTMwOltbMjQyNzRdXSw2NDEzMTpbWzI0MjgxXV0sNjQxMzI6W1syNDQyNV1dLDY0MTMzOltbMjQ0OTNdXSw2NDEzNDpbWzI0NzkyXV0sNjQxMzU6W1syNDkxMF1dLDY0MTM2OltbMjQ4NDBdXSw2NDEzNzpbWzI0OTc0XV0sNjQxMzg6W1syNDkyOF1dLDY0MTM5OltbMjUwNzRdXSw2NDE0MDpbWzI1MTQwXV0sNjQxNDE6W1syNTU0MF1dLDY0MTQyOltbMjU2MjhdXSw2NDE0MzpbWzI1NjgyXV0sNjQxNDQ6W1syNTk0Ml1dLDY0MTQ1OltbMjYyMjhdXSw2NDE0NjpbWzI2MzkxXV0sNjQxNDc6W1syNjM5NV1dLDY0MTQ4OltbMjY0NTRdXSw2NDE0OTpbWzI3NTEzXV0sNjQxNTA6W1syNzU3OF1dLDY0MTUxOltbMjc5NjldXSw2NDE1MjpbWzI4Mzc5XV0sNjQxNTM6W1syODM2M11dLDY0MTU0OltbMjg0NTBdXSw2NDE1NTpbWzI4NzAyXV0sNjQxNTY6W1syOTAzOF1dLDY0MTU3OltbMzA2MzFdXSw2NDE1ODpbWzI5MjM3XV0sNjQxNTk6W1syOTM1OV1dLDY0MTYwOltbMjk0ODJdXSw2NDE2MTpbWzI5ODA5XV0sNjQxNjI6W1syOTk1OF1dLDY0MTYzOltbMzAwMTFdXSw2NDE2NDpbWzMwMjM3XV0sNjQxNjU6W1szMDIzOV1dLDY0MTY2OltbMzA0MTBdXSw2NDE2NzpbWzMwNDI3XV0sNjQxNjg6W1szMDQ1Ml1dLDY0MTY5OltbMzA1MzhdXSw2NDE3MDpbWzMwNTI4XV0sNjQxNzE6W1szMDkyNF1dLDY0MTcyOltbMzE0MDldXSw2NDE3MzpbWzMxNjgwXV0sNjQxNzQ6W1szMTg2N11dLDY0MTc1OltbMzIwOTFdXSw2NDE3NjpbWzMyMjQ0XV0sNjQxNzc6W1szMjU3NF1dLDY0MTc4OltbMzI3NzNdXSw2NDE3OTpbWzMzNjE4XV0sNjQxODA6W1szMzc3NV1dLDY0MTgxOltbMzQ2ODFdXSw2NDE4MjpbWzM1MTM3XV0sNjQxODM6W1szNTIwNl1dLDY0MTg0OltbMzUyMjJdXSw2NDE4NTpbWzM1NTE5XV0sNjQxODY6W1szNTU3Nl1dLDY0MTg3OltbMzU1MzFdXSw2NDE4ODpbWzM1NTg1XV0sNjQxODk6W1szNTU4Ml1dLDY0MTkwOltbMzU1NjVdXSw2NDE5MTpbWzM1NjQxXV0sNjQxOTI6W1szNTcyMl1dLDY0MTkzOltbMzYxMDRdXSw2NDE5NDpbWzM2NjY0XV0sNjQxOTU6W1szNjk3OF1dLDY0MTk2OltbMzcyNzNdXSw2NDE5NzpbWzM3NDk0XV0sNjQxOTg6W1szODUyNF1dLDY0MTk5OltbMzg2MjddXSw2NDIwMDpbWzM4NzQyXV0sNjQyMDE6W1szODg3NV1dLDY0MjAyOltbMzg5MTFdXSw2NDIwMzpbWzM4OTIzXV0sNjQyMDQ6W1szODk3MV1dLDY0MjA1OltbMzk2OThdXSw2NDIwNjpbWzQwODYwXV0sNjQyMDc6W1sxNDEzODZdXSw2NDIwODpbWzE0MTM4MF1dLDY0MjA5OltbMTQ0MzQxXV0sNjQyMTA6W1sxNTI2MV1dLDY0MjExOltbMTY0MDhdXSw2NDIxMjpbWzE2NDQxXV0sNjQyMTM6W1sxNTIxMzddXSw2NDIxNDpbWzE1NDgzMl1dLDY0MjE1OltbMTYzNTM5XV0sNjQyMTY6W1s0MDc3MV1dLDY0MjE3OltbNDA4NDZdXSwxOTUwNzI6W1szODk1M11dLDE5NTA3MzpbWzE2OTM5OF1dLDE5NTA3NDpbWzM5MTM4XV0sMTk1MDc1OltbMTkyNTFdXSwxOTUwNzY6W1szOTIwOV1dLDE5NTA3NzpbWzM5MzM1XV0sMTk1MDc4OltbMzkzNjJdXSwxOTUwNzk6W1szOTQyMl1dLDE5NTA4MDpbWzE5NDA2XV0sMTk1MDgxOltbMTcwODAwXV0sMTk1MDgyOltbMzk2OThdXSwxOTUwODM6W1s0MDAwMF1dLDE5NTA4NDpbWzQwMTg5XV0sMTk1MDg1OltbMTk2NjJdXSwxOTUwODY6W1sxOTY5M11dLDE5NTA4NzpbWzQwMjk1XV0sMTk1MDg4OltbMTcyMjM4XV0sMTk1MDg5OltbMTk3MDRdXSwxOTUwOTA6W1sxNzIyOTNdXSwxOTUwOTE6W1sxNzI1NThdXSwxOTUwOTI6W1sxNzI2ODldXSwxOTUwOTM6W1s0MDYzNV1dLDE5NTA5NDpbWzE5Nzk4XV0sMTk1MDk1OltbNDA2OTddXSwxOTUwOTY6W1s0MDcwMl1dLDE5NTA5NzpbWzQwNzA5XV0sMTk1MDk4OltbNDA3MTldXSwxOTUwOTk6W1s0MDcyNl1dLDE5NTEwMDpbWzQwNzYzXV0sMTk1MTAxOltbMTczNTY4XV19LA0KNjQyNTY6ezY0MjU2OltbMTAyLDEwMl0sMjU2XSw2NDI1NzpbWzEwMiwxMDVdLDI1Nl0sNjQyNTg6W1sxMDIsMTA4XSwyNTZdLDY0MjU5OltbMTAyLDEwMiwxMDVdLDI1Nl0sNjQyNjA6W1sxMDIsMTAyLDEwOF0sMjU2XSw2NDI2MTpbWzM4MywxMTZdLDI1Nl0sNjQyNjI6W1sxMTUsMTE2XSwyNTZdLDY0Mjc1OltbMTM5NiwxMzk4XSwyNTZdLDY0Mjc2OltbMTM5NiwxMzgxXSwyNTZdLDY0Mjc3OltbMTM5NiwxMzg3XSwyNTZdLDY0Mjc4OltbMTQwNiwxMzk4XSwyNTZdLDY0Mjc5OltbMTM5NiwxMzg5XSwyNTZdLDY0Mjg1OltbMTQ5NywxNDYwXSw1MTJdLDY0Mjg2OlssMjZdLDY0Mjg3OltbMTUyMiwxNDYzXSw1MTJdLDY0Mjg4OltbMTUwNl0sMjU2XSw2NDI4OTpbWzE0ODhdLDI1Nl0sNjQyOTA6W1sxNDkxXSwyNTZdLDY0MjkxOltbMTQ5Ml0sMjU2XSw2NDI5MjpbWzE0OTldLDI1Nl0sNjQyOTM6W1sxNTAwXSwyNTZdLDY0Mjk0OltbMTUwMV0sMjU2XSw2NDI5NTpbWzE1MTJdLDI1Nl0sNjQyOTY6W1sxNTE0XSwyNTZdLDY0Mjk3OltbNDNdLDI1Nl0sNjQyOTg6W1sxNTEzLDE0NzNdLDUxMl0sNjQyOTk6W1sxNTEzLDE0NzRdLDUxMl0sNjQzMDA6W1s2NDMyOSwxNDczXSw1MTJdLDY0MzAxOltbNjQzMjksMTQ3NF0sNTEyXSw2NDMwMjpbWzE0ODgsMTQ2M10sNTEyXSw2NDMwMzpbWzE0ODgsMTQ2NF0sNTEyXSw2NDMwNDpbWzE0ODgsMTQ2OF0sNTEyXSw2NDMwNTpbWzE0ODksMTQ2OF0sNTEyXSw2NDMwNjpbWzE0OTAsMTQ2OF0sNTEyXSw2NDMwNzpbWzE0OTEsMTQ2OF0sNTEyXSw2NDMwODpbWzE0OTIsMTQ2OF0sNTEyXSw2NDMwOTpbWzE0OTMsMTQ2OF0sNTEyXSw2NDMxMDpbWzE0OTQsMTQ2OF0sNTEyXSw2NDMxMjpbWzE0OTYsMTQ2OF0sNTEyXSw2NDMxMzpbWzE0OTcsMTQ2OF0sNTEyXSw2NDMxNDpbWzE0OTgsMTQ2OF0sNTEyXSw2NDMxNTpbWzE0OTksMTQ2OF0sNTEyXSw2NDMxNjpbWzE1MDAsMTQ2OF0sNTEyXSw2NDMxODpbWzE1MDIsMTQ2OF0sNTEyXSw2NDMyMDpbWzE1MDQsMTQ2OF0sNTEyXSw2NDMyMTpbWzE1MDUsMTQ2OF0sNTEyXSw2NDMyMzpbWzE1MDcsMTQ2OF0sNTEyXSw2NDMyNDpbWzE1MDgsMTQ2OF0sNTEyXSw2NDMyNjpbWzE1MTAsMTQ2OF0sNTEyXSw2NDMyNzpbWzE1MTEsMTQ2OF0sNTEyXSw2NDMyODpbWzE1MTIsMTQ2OF0sNTEyXSw2NDMyOTpbWzE1MTMsMTQ2OF0sNTEyXSw2NDMzMDpbWzE1MTQsMTQ2OF0sNTEyXSw2NDMzMTpbWzE0OTMsMTQ2NV0sNTEyXSw2NDMzMjpbWzE0ODksMTQ3MV0sNTEyXSw2NDMzMzpbWzE0OTksMTQ3MV0sNTEyXSw2NDMzNDpbWzE1MDgsMTQ3MV0sNTEyXSw2NDMzNTpbWzE0ODgsMTUwMF0sMjU2XSw2NDMzNjpbWzE2NDldLDI1Nl0sNjQzMzc6W1sxNjQ5XSwyNTZdLDY0MzM4OltbMTY1OV0sMjU2XSw2NDMzOTpbWzE2NTldLDI1Nl0sNjQzNDA6W1sxNjU5XSwyNTZdLDY0MzQxOltbMTY1OV0sMjU2XSw2NDM0MjpbWzE2NjJdLDI1Nl0sNjQzNDM6W1sxNjYyXSwyNTZdLDY0MzQ0OltbMTY2Ml0sMjU2XSw2NDM0NTpbWzE2NjJdLDI1Nl0sNjQzNDY6W1sxNjY0XSwyNTZdLDY0MzQ3OltbMTY2NF0sMjU2XSw2NDM0ODpbWzE2NjRdLDI1Nl0sNjQzNDk6W1sxNjY0XSwyNTZdLDY0MzUwOltbMTY1OF0sMjU2XSw2NDM1MTpbWzE2NThdLDI1Nl0sNjQzNTI6W1sxNjU4XSwyNTZdLDY0MzUzOltbMTY1OF0sMjU2XSw2NDM1NDpbWzE2NjNdLDI1Nl0sNjQzNTU6W1sxNjYzXSwyNTZdLDY0MzU2OltbMTY2M10sMjU2XSw2NDM1NzpbWzE2NjNdLDI1Nl0sNjQzNTg6W1sxNjU3XSwyNTZdLDY0MzU5OltbMTY1N10sMjU2XSw2NDM2MDpbWzE2NTddLDI1Nl0sNjQzNjE6W1sxNjU3XSwyNTZdLDY0MzYyOltbMTcwMF0sMjU2XSw2NDM2MzpbWzE3MDBdLDI1Nl0sNjQzNjQ6W1sxNzAwXSwyNTZdLDY0MzY1OltbMTcwMF0sMjU2XSw2NDM2NjpbWzE3MDJdLDI1Nl0sNjQzNjc6W1sxNzAyXSwyNTZdLDY0MzY4OltbMTcwMl0sMjU2XSw2NDM2OTpbWzE3MDJdLDI1Nl0sNjQzNzA6W1sxNjY4XSwyNTZdLDY0MzcxOltbMTY2OF0sMjU2XSw2NDM3MjpbWzE2NjhdLDI1Nl0sNjQzNzM6W1sxNjY4XSwyNTZdLDY0Mzc0OltbMTY2N10sMjU2XSw2NDM3NTpbWzE2NjddLDI1Nl0sNjQzNzY6W1sxNjY3XSwyNTZdLDY0Mzc3OltbMTY2N10sMjU2XSw2NDM3ODpbWzE2NzBdLDI1Nl0sNjQzNzk6W1sxNjcwXSwyNTZdLDY0MzgwOltbMTY3MF0sMjU2XSw2NDM4MTpbWzE2NzBdLDI1Nl0sNjQzODI6W1sxNjcxXSwyNTZdLDY0MzgzOltbMTY3MV0sMjU2XSw2NDM4NDpbWzE2NzFdLDI1Nl0sNjQzODU6W1sxNjcxXSwyNTZdLDY0Mzg2OltbMTY3N10sMjU2XSw2NDM4NzpbWzE2NzddLDI1Nl0sNjQzODg6W1sxNjc2XSwyNTZdLDY0Mzg5OltbMTY3Nl0sMjU2XSw2NDM5MDpbWzE2NzhdLDI1Nl0sNjQzOTE6W1sxNjc4XSwyNTZdLDY0MzkyOltbMTY3Ml0sMjU2XSw2NDM5MzpbWzE2NzJdLDI1Nl0sNjQzOTQ6W1sxNjg4XSwyNTZdLDY0Mzk1OltbMTY4OF0sMjU2XSw2NDM5NjpbWzE2ODFdLDI1Nl0sNjQzOTc6W1sxNjgxXSwyNTZdLDY0Mzk4OltbMTcwNV0sMjU2XSw2NDM5OTpbWzE3MDVdLDI1Nl0sNjQ0MDA6W1sxNzA1XSwyNTZdLDY0NDAxOltbMTcwNV0sMjU2XSw2NDQwMjpbWzE3MTFdLDI1Nl0sNjQ0MDM6W1sxNzExXSwyNTZdLDY0NDA0OltbMTcxMV0sMjU2XSw2NDQwNTpbWzE3MTFdLDI1Nl0sNjQ0MDY6W1sxNzE1XSwyNTZdLDY0NDA3OltbMTcxNV0sMjU2XSw2NDQwODpbWzE3MTVdLDI1Nl0sNjQ0MDk6W1sxNzE1XSwyNTZdLDY0NDEwOltbMTcxM10sMjU2XSw2NDQxMTpbWzE3MTNdLDI1Nl0sNjQ0MTI6W1sxNzEzXSwyNTZdLDY0NDEzOltbMTcxM10sMjU2XSw2NDQxNDpbWzE3MjJdLDI1Nl0sNjQ0MTU6W1sxNzIyXSwyNTZdLDY0NDE2OltbMTcyM10sMjU2XSw2NDQxNzpbWzE3MjNdLDI1Nl0sNjQ0MTg6W1sxNzIzXSwyNTZdLDY0NDE5OltbMTcyM10sMjU2XSw2NDQyMDpbWzE3MjhdLDI1Nl0sNjQ0MjE6W1sxNzI4XSwyNTZdLDY0NDIyOltbMTcyOV0sMjU2XSw2NDQyMzpbWzE3MjldLDI1Nl0sNjQ0MjQ6W1sxNzI5XSwyNTZdLDY0NDI1OltbMTcyOV0sMjU2XSw2NDQyNjpbWzE3MjZdLDI1Nl0sNjQ0Mjc6W1sxNzI2XSwyNTZdLDY0NDI4OltbMTcyNl0sMjU2XSw2NDQyOTpbWzE3MjZdLDI1Nl0sNjQ0MzA6W1sxNzQ2XSwyNTZdLDY0NDMxOltbMTc0Nl0sMjU2XSw2NDQzMjpbWzE3NDddLDI1Nl0sNjQ0MzM6W1sxNzQ3XSwyNTZdLDY0NDY3OltbMTcwOV0sMjU2XSw2NDQ2ODpbWzE3MDldLDI1Nl0sNjQ0Njk6W1sxNzA5XSwyNTZdLDY0NDcwOltbMTcwOV0sMjU2XSw2NDQ3MTpbWzE3MzVdLDI1Nl0sNjQ0NzI6W1sxNzM1XSwyNTZdLDY0NDczOltbMTczNF0sMjU2XSw2NDQ3NDpbWzE3MzRdLDI1Nl0sNjQ0NzU6W1sxNzM2XSwyNTZdLDY0NDc2OltbMTczNl0sMjU2XSw2NDQ3NzpbWzE2NTVdLDI1Nl0sNjQ0Nzg6W1sxNzM5XSwyNTZdLDY0NDc5OltbMTczOV0sMjU2XSw2NDQ4MDpbWzE3MzNdLDI1Nl0sNjQ0ODE6W1sxNzMzXSwyNTZdLDY0NDgyOltbMTczN10sMjU2XSw2NDQ4MzpbWzE3MzddLDI1Nl0sNjQ0ODQ6W1sxNzQ0XSwyNTZdLDY0NDg1OltbMTc0NF0sMjU2XSw2NDQ4NjpbWzE3NDRdLDI1Nl0sNjQ0ODc6W1sxNzQ0XSwyNTZdLDY0NDg4OltbMTYwOV0sMjU2XSw2NDQ4OTpbWzE2MDldLDI1Nl0sNjQ0OTA6W1sxNTc0LDE1NzVdLDI1Nl0sNjQ0OTE6W1sxNTc0LDE1NzVdLDI1Nl0sNjQ0OTI6W1sxNTc0LDE3NDldLDI1Nl0sNjQ0OTM6W1sxNTc0LDE3NDldLDI1Nl0sNjQ0OTQ6W1sxNTc0LDE2MDhdLDI1Nl0sNjQ0OTU6W1sxNTc0LDE2MDhdLDI1Nl0sNjQ0OTY6W1sxNTc0LDE3MzVdLDI1Nl0sNjQ0OTc6W1sxNTc0LDE3MzVdLDI1Nl0sNjQ0OTg6W1sxNTc0LDE3MzRdLDI1Nl0sNjQ0OTk6W1sxNTc0LDE3MzRdLDI1Nl0sNjQ1MDA6W1sxNTc0LDE3MzZdLDI1Nl0sNjQ1MDE6W1sxNTc0LDE3MzZdLDI1Nl0sNjQ1MDI6W1sxNTc0LDE3NDRdLDI1Nl0sNjQ1MDM6W1sxNTc0LDE3NDRdLDI1Nl0sNjQ1MDQ6W1sxNTc0LDE3NDRdLDI1Nl0sNjQ1MDU6W1sxNTc0LDE2MDldLDI1Nl0sNjQ1MDY6W1sxNTc0LDE2MDldLDI1Nl0sNjQ1MDc6W1sxNTc0LDE2MDldLDI1Nl0sNjQ1MDg6W1sxNzQwXSwyNTZdLDY0NTA5OltbMTc0MF0sMjU2XSw2NDUxMDpbWzE3NDBdLDI1Nl0sNjQ1MTE6W1sxNzQwXSwyNTZdfSwNCjY0NTEyOns2NDUxMjpbWzE1NzQsMTU4MF0sMjU2XSw2NDUxMzpbWzE1NzQsMTU4MV0sMjU2XSw2NDUxNDpbWzE1NzQsMTYwNV0sMjU2XSw2NDUxNTpbWzE1NzQsMTYwOV0sMjU2XSw2NDUxNjpbWzE1NzQsMTYxMF0sMjU2XSw2NDUxNzpbWzE1NzYsMTU4MF0sMjU2XSw2NDUxODpbWzE1NzYsMTU4MV0sMjU2XSw2NDUxOTpbWzE1NzYsMTU4Ml0sMjU2XSw2NDUyMDpbWzE1NzYsMTYwNV0sMjU2XSw2NDUyMTpbWzE1NzYsMTYwOV0sMjU2XSw2NDUyMjpbWzE1NzYsMTYxMF0sMjU2XSw2NDUyMzpbWzE1NzgsMTU4MF0sMjU2XSw2NDUyNDpbWzE1NzgsMTU4MV0sMjU2XSw2NDUyNTpbWzE1NzgsMTU4Ml0sMjU2XSw2NDUyNjpbWzE1NzgsMTYwNV0sMjU2XSw2NDUyNzpbWzE1NzgsMTYwOV0sMjU2XSw2NDUyODpbWzE1NzgsMTYxMF0sMjU2XSw2NDUyOTpbWzE1NzksMTU4MF0sMjU2XSw2NDUzMDpbWzE1NzksMTYwNV0sMjU2XSw2NDUzMTpbWzE1NzksMTYwOV0sMjU2XSw2NDUzMjpbWzE1NzksMTYxMF0sMjU2XSw2NDUzMzpbWzE1ODAsMTU4MV0sMjU2XSw2NDUzNDpbWzE1ODAsMTYwNV0sMjU2XSw2NDUzNTpbWzE1ODEsMTU4MF0sMjU2XSw2NDUzNjpbWzE1ODEsMTYwNV0sMjU2XSw2NDUzNzpbWzE1ODIsMTU4MF0sMjU2XSw2NDUzODpbWzE1ODIsMTU4MV0sMjU2XSw2NDUzOTpbWzE1ODIsMTYwNV0sMjU2XSw2NDU0MDpbWzE1ODcsMTU4MF0sMjU2XSw2NDU0MTpbWzE1ODcsMTU4MV0sMjU2XSw2NDU0MjpbWzE1ODcsMTU4Ml0sMjU2XSw2NDU0MzpbWzE1ODcsMTYwNV0sMjU2XSw2NDU0NDpbWzE1ODksMTU4MV0sMjU2XSw2NDU0NTpbWzE1ODksMTYwNV0sMjU2XSw2NDU0NjpbWzE1OTAsMTU4MF0sMjU2XSw2NDU0NzpbWzE1OTAsMTU4MV0sMjU2XSw2NDU0ODpbWzE1OTAsMTU4Ml0sMjU2XSw2NDU0OTpbWzE1OTAsMTYwNV0sMjU2XSw2NDU1MDpbWzE1OTEsMTU4MV0sMjU2XSw2NDU1MTpbWzE1OTEsMTYwNV0sMjU2XSw2NDU1MjpbWzE1OTIsMTYwNV0sMjU2XSw2NDU1MzpbWzE1OTMsMTU4MF0sMjU2XSw2NDU1NDpbWzE1OTMsMTYwNV0sMjU2XSw2NDU1NTpbWzE1OTQsMTU4MF0sMjU2XSw2NDU1NjpbWzE1OTQsMTYwNV0sMjU2XSw2NDU1NzpbWzE2MDEsMTU4MF0sMjU2XSw2NDU1ODpbWzE2MDEsMTU4MV0sMjU2XSw2NDU1OTpbWzE2MDEsMTU4Ml0sMjU2XSw2NDU2MDpbWzE2MDEsMTYwNV0sMjU2XSw2NDU2MTpbWzE2MDEsMTYwOV0sMjU2XSw2NDU2MjpbWzE2MDEsMTYxMF0sMjU2XSw2NDU2MzpbWzE2MDIsMTU4MV0sMjU2XSw2NDU2NDpbWzE2MDIsMTYwNV0sMjU2XSw2NDU2NTpbWzE2MDIsMTYwOV0sMjU2XSw2NDU2NjpbWzE2MDIsMTYxMF0sMjU2XSw2NDU2NzpbWzE2MDMsMTU3NV0sMjU2XSw2NDU2ODpbWzE2MDMsMTU4MF0sMjU2XSw2NDU2OTpbWzE2MDMsMTU4MV0sMjU2XSw2NDU3MDpbWzE2MDMsMTU4Ml0sMjU2XSw2NDU3MTpbWzE2MDMsMTYwNF0sMjU2XSw2NDU3MjpbWzE2MDMsMTYwNV0sMjU2XSw2NDU3MzpbWzE2MDMsMTYwOV0sMjU2XSw2NDU3NDpbWzE2MDMsMTYxMF0sMjU2XSw2NDU3NTpbWzE2MDQsMTU4MF0sMjU2XSw2NDU3NjpbWzE2MDQsMTU4MV0sMjU2XSw2NDU3NzpbWzE2MDQsMTU4Ml0sMjU2XSw2NDU3ODpbWzE2MDQsMTYwNV0sMjU2XSw2NDU3OTpbWzE2MDQsMTYwOV0sMjU2XSw2NDU4MDpbWzE2MDQsMTYxMF0sMjU2XSw2NDU4MTpbWzE2MDUsMTU4MF0sMjU2XSw2NDU4MjpbWzE2MDUsMTU4MV0sMjU2XSw2NDU4MzpbWzE2MDUsMTU4Ml0sMjU2XSw2NDU4NDpbWzE2MDUsMTYwNV0sMjU2XSw2NDU4NTpbWzE2MDUsMTYwOV0sMjU2XSw2NDU4NjpbWzE2MDUsMTYxMF0sMjU2XSw2NDU4NzpbWzE2MDYsMTU4MF0sMjU2XSw2NDU4ODpbWzE2MDYsMTU4MV0sMjU2XSw2NDU4OTpbWzE2MDYsMTU4Ml0sMjU2XSw2NDU5MDpbWzE2MDYsMTYwNV0sMjU2XSw2NDU5MTpbWzE2MDYsMTYwOV0sMjU2XSw2NDU5MjpbWzE2MDYsMTYxMF0sMjU2XSw2NDU5MzpbWzE2MDcsMTU4MF0sMjU2XSw2NDU5NDpbWzE2MDcsMTYwNV0sMjU2XSw2NDU5NTpbWzE2MDcsMTYwOV0sMjU2XSw2NDU5NjpbWzE2MDcsMTYxMF0sMjU2XSw2NDU5NzpbWzE2MTAsMTU4MF0sMjU2XSw2NDU5ODpbWzE2MTAsMTU4MV0sMjU2XSw2NDU5OTpbWzE2MTAsMTU4Ml0sMjU2XSw2NDYwMDpbWzE2MTAsMTYwNV0sMjU2XSw2NDYwMTpbWzE2MTAsMTYwOV0sMjU2XSw2NDYwMjpbWzE2MTAsMTYxMF0sMjU2XSw2NDYwMzpbWzE1ODQsMTY0OF0sMjU2XSw2NDYwNDpbWzE1ODUsMTY0OF0sMjU2XSw2NDYwNTpbWzE2MDksMTY0OF0sMjU2XSw2NDYwNjpbWzMyLDE2MTIsMTYxN10sMjU2XSw2NDYwNzpbWzMyLDE2MTMsMTYxN10sMjU2XSw2NDYwODpbWzMyLDE2MTQsMTYxN10sMjU2XSw2NDYwOTpbWzMyLDE2MTUsMTYxN10sMjU2XSw2NDYxMDpbWzMyLDE2MTYsMTYxN10sMjU2XSw2NDYxMTpbWzMyLDE2MTcsMTY0OF0sMjU2XSw2NDYxMjpbWzE1NzQsMTU4NV0sMjU2XSw2NDYxMzpbWzE1NzQsMTU4Nl0sMjU2XSw2NDYxNDpbWzE1NzQsMTYwNV0sMjU2XSw2NDYxNTpbWzE1NzQsMTYwNl0sMjU2XSw2NDYxNjpbWzE1NzQsMTYwOV0sMjU2XSw2NDYxNzpbWzE1NzQsMTYxMF0sMjU2XSw2NDYxODpbWzE1NzYsMTU4NV0sMjU2XSw2NDYxOTpbWzE1NzYsMTU4Nl0sMjU2XSw2NDYyMDpbWzE1NzYsMTYwNV0sMjU2XSw2NDYyMTpbWzE1NzYsMTYwNl0sMjU2XSw2NDYyMjpbWzE1NzYsMTYwOV0sMjU2XSw2NDYyMzpbWzE1NzYsMTYxMF0sMjU2XSw2NDYyNDpbWzE1NzgsMTU4NV0sMjU2XSw2NDYyNTpbWzE1NzgsMTU4Nl0sMjU2XSw2NDYyNjpbWzE1NzgsMTYwNV0sMjU2XSw2NDYyNzpbWzE1NzgsMTYwNl0sMjU2XSw2NDYyODpbWzE1NzgsMTYwOV0sMjU2XSw2NDYyOTpbWzE1NzgsMTYxMF0sMjU2XSw2NDYzMDpbWzE1NzksMTU4NV0sMjU2XSw2NDYzMTpbWzE1NzksMTU4Nl0sMjU2XSw2NDYzMjpbWzE1NzksMTYwNV0sMjU2XSw2NDYzMzpbWzE1NzksMTYwNl0sMjU2XSw2NDYzNDpbWzE1NzksMTYwOV0sMjU2XSw2NDYzNTpbWzE1NzksMTYxMF0sMjU2XSw2NDYzNjpbWzE2MDEsMTYwOV0sMjU2XSw2NDYzNzpbWzE2MDEsMTYxMF0sMjU2XSw2NDYzODpbWzE2MDIsMTYwOV0sMjU2XSw2NDYzOTpbWzE2MDIsMTYxMF0sMjU2XSw2NDY0MDpbWzE2MDMsMTU3NV0sMjU2XSw2NDY0MTpbWzE2MDMsMTYwNF0sMjU2XSw2NDY0MjpbWzE2MDMsMTYwNV0sMjU2XSw2NDY0MzpbWzE2MDMsMTYwOV0sMjU2XSw2NDY0NDpbWzE2MDMsMTYxMF0sMjU2XSw2NDY0NTpbWzE2MDQsMTYwNV0sMjU2XSw2NDY0NjpbWzE2MDQsMTYwOV0sMjU2XSw2NDY0NzpbWzE2MDQsMTYxMF0sMjU2XSw2NDY0ODpbWzE2MDUsMTU3NV0sMjU2XSw2NDY0OTpbWzE2MDUsMTYwNV0sMjU2XSw2NDY1MDpbWzE2MDYsMTU4NV0sMjU2XSw2NDY1MTpbWzE2MDYsMTU4Nl0sMjU2XSw2NDY1MjpbWzE2MDYsMTYwNV0sMjU2XSw2NDY1MzpbWzE2MDYsMTYwNl0sMjU2XSw2NDY1NDpbWzE2MDYsMTYwOV0sMjU2XSw2NDY1NTpbWzE2MDYsMTYxMF0sMjU2XSw2NDY1NjpbWzE2MDksMTY0OF0sMjU2XSw2NDY1NzpbWzE2MTAsMTU4NV0sMjU2XSw2NDY1ODpbWzE2MTAsMTU4Nl0sMjU2XSw2NDY1OTpbWzE2MTAsMTYwNV0sMjU2XSw2NDY2MDpbWzE2MTAsMTYwNl0sMjU2XSw2NDY2MTpbWzE2MTAsMTYwOV0sMjU2XSw2NDY2MjpbWzE2MTAsMTYxMF0sMjU2XSw2NDY2MzpbWzE1NzQsMTU4MF0sMjU2XSw2NDY2NDpbWzE1NzQsMTU4MV0sMjU2XSw2NDY2NTpbWzE1NzQsMTU4Ml0sMjU2XSw2NDY2NjpbWzE1NzQsMTYwNV0sMjU2XSw2NDY2NzpbWzE1NzQsMTYwN10sMjU2XSw2NDY2ODpbWzE1NzYsMTU4MF0sMjU2XSw2NDY2OTpbWzE1NzYsMTU4MV0sMjU2XSw2NDY3MDpbWzE1NzYsMTU4Ml0sMjU2XSw2NDY3MTpbWzE1NzYsMTYwNV0sMjU2XSw2NDY3MjpbWzE1NzYsMTYwN10sMjU2XSw2NDY3MzpbWzE1NzgsMTU4MF0sMjU2XSw2NDY3NDpbWzE1NzgsMTU4MV0sMjU2XSw2NDY3NTpbWzE1NzgsMTU4Ml0sMjU2XSw2NDY3NjpbWzE1NzgsMTYwNV0sMjU2XSw2NDY3NzpbWzE1NzgsMTYwN10sMjU2XSw2NDY3ODpbWzE1NzksMTYwNV0sMjU2XSw2NDY3OTpbWzE1ODAsMTU4MV0sMjU2XSw2NDY4MDpbWzE1ODAsMTYwNV0sMjU2XSw2NDY4MTpbWzE1ODEsMTU4MF0sMjU2XSw2NDY4MjpbWzE1ODEsMTYwNV0sMjU2XSw2NDY4MzpbWzE1ODIsMTU4MF0sMjU2XSw2NDY4NDpbWzE1ODIsMTYwNV0sMjU2XSw2NDY4NTpbWzE1ODcsMTU4MF0sMjU2XSw2NDY4NjpbWzE1ODcsMTU4MV0sMjU2XSw2NDY4NzpbWzE1ODcsMTU4Ml0sMjU2XSw2NDY4ODpbWzE1ODcsMTYwNV0sMjU2XSw2NDY4OTpbWzE1ODksMTU4MV0sMjU2XSw2NDY5MDpbWzE1ODksMTU4Ml0sMjU2XSw2NDY5MTpbWzE1ODksMTYwNV0sMjU2XSw2NDY5MjpbWzE1OTAsMTU4MF0sMjU2XSw2NDY5MzpbWzE1OTAsMTU4MV0sMjU2XSw2NDY5NDpbWzE1OTAsMTU4Ml0sMjU2XSw2NDY5NTpbWzE1OTAsMTYwNV0sMjU2XSw2NDY5NjpbWzE1OTEsMTU4MV0sMjU2XSw2NDY5NzpbWzE1OTIsMTYwNV0sMjU2XSw2NDY5ODpbWzE1OTMsMTU4MF0sMjU2XSw2NDY5OTpbWzE1OTMsMTYwNV0sMjU2XSw2NDcwMDpbWzE1OTQsMTU4MF0sMjU2XSw2NDcwMTpbWzE1OTQsMTYwNV0sMjU2XSw2NDcwMjpbWzE2MDEsMTU4MF0sMjU2XSw2NDcwMzpbWzE2MDEsMTU4MV0sMjU2XSw2NDcwNDpbWzE2MDEsMTU4Ml0sMjU2XSw2NDcwNTpbWzE2MDEsMTYwNV0sMjU2XSw2NDcwNjpbWzE2MDIsMTU4MV0sMjU2XSw2NDcwNzpbWzE2MDIsMTYwNV0sMjU2XSw2NDcwODpbWzE2MDMsMTU4MF0sMjU2XSw2NDcwOTpbWzE2MDMsMTU4MV0sMjU2XSw2NDcxMDpbWzE2MDMsMTU4Ml0sMjU2XSw2NDcxMTpbWzE2MDMsMTYwNF0sMjU2XSw2NDcxMjpbWzE2MDMsMTYwNV0sMjU2XSw2NDcxMzpbWzE2MDQsMTU4MF0sMjU2XSw2NDcxNDpbWzE2MDQsMTU4MV0sMjU2XSw2NDcxNTpbWzE2MDQsMTU4Ml0sMjU2XSw2NDcxNjpbWzE2MDQsMTYwNV0sMjU2XSw2NDcxNzpbWzE2MDQsMTYwN10sMjU2XSw2NDcxODpbWzE2MDUsMTU4MF0sMjU2XSw2NDcxOTpbWzE2MDUsMTU4MV0sMjU2XSw2NDcyMDpbWzE2MDUsMTU4Ml0sMjU2XSw2NDcyMTpbWzE2MDUsMTYwNV0sMjU2XSw2NDcyMjpbWzE2MDYsMTU4MF0sMjU2XSw2NDcyMzpbWzE2MDYsMTU4MV0sMjU2XSw2NDcyNDpbWzE2MDYsMTU4Ml0sMjU2XSw2NDcyNTpbWzE2MDYsMTYwNV0sMjU2XSw2NDcyNjpbWzE2MDYsMTYwN10sMjU2XSw2NDcyNzpbWzE2MDcsMTU4MF0sMjU2XSw2NDcyODpbWzE2MDcsMTYwNV0sMjU2XSw2NDcyOTpbWzE2MDcsMTY0OF0sMjU2XSw2NDczMDpbWzE2MTAsMTU4MF0sMjU2XSw2NDczMTpbWzE2MTAsMTU4MV0sMjU2XSw2NDczMjpbWzE2MTAsMTU4Ml0sMjU2XSw2NDczMzpbWzE2MTAsMTYwNV0sMjU2XSw2NDczNDpbWzE2MTAsMTYwN10sMjU2XSw2NDczNTpbWzE1NzQsMTYwNV0sMjU2XSw2NDczNjpbWzE1NzQsMTYwN10sMjU2XSw2NDczNzpbWzE1NzYsMTYwNV0sMjU2XSw2NDczODpbWzE1NzYsMTYwN10sMjU2XSw2NDczOTpbWzE1NzgsMTYwNV0sMjU2XSw2NDc0MDpbWzE1NzgsMTYwN10sMjU2XSw2NDc0MTpbWzE1NzksMTYwNV0sMjU2XSw2NDc0MjpbWzE1NzksMTYwN10sMjU2XSw2NDc0MzpbWzE1ODcsMTYwNV0sMjU2XSw2NDc0NDpbWzE1ODcsMTYwN10sMjU2XSw2NDc0NTpbWzE1ODgsMTYwNV0sMjU2XSw2NDc0NjpbWzE1ODgsMTYwN10sMjU2XSw2NDc0NzpbWzE2MDMsMTYwNF0sMjU2XSw2NDc0ODpbWzE2MDMsMTYwNV0sMjU2XSw2NDc0OTpbWzE2MDQsMTYwNV0sMjU2XSw2NDc1MDpbWzE2MDYsMTYwNV0sMjU2XSw2NDc1MTpbWzE2MDYsMTYwN10sMjU2XSw2NDc1MjpbWzE2MTAsMTYwNV0sMjU2XSw2NDc1MzpbWzE2MTAsMTYwN10sMjU2XSw2NDc1NDpbWzE2MDAsMTYxNCwxNjE3XSwyNTZdLDY0NzU1OltbMTYwMCwxNjE1LDE2MTddLDI1Nl0sNjQ3NTY6W1sxNjAwLDE2MTYsMTYxN10sMjU2XSw2NDc1NzpbWzE1OTEsMTYwOV0sMjU2XSw2NDc1ODpbWzE1OTEsMTYxMF0sMjU2XSw2NDc1OTpbWzE1OTMsMTYwOV0sMjU2XSw2NDc2MDpbWzE1OTMsMTYxMF0sMjU2XSw2NDc2MTpbWzE1OTQsMTYwOV0sMjU2XSw2NDc2MjpbWzE1OTQsMTYxMF0sMjU2XSw2NDc2MzpbWzE1ODcsMTYwOV0sMjU2XSw2NDc2NDpbWzE1ODcsMTYxMF0sMjU2XSw2NDc2NTpbWzE1ODgsMTYwOV0sMjU2XSw2NDc2NjpbWzE1ODgsMTYxMF0sMjU2XSw2NDc2NzpbWzE1ODEsMTYwOV0sMjU2XX0sDQo2NDc2ODp7NjQ3Njg6W1sxNTgxLDE2MTBdLDI1Nl0sNjQ3Njk6W1sxNTgwLDE2MDldLDI1Nl0sNjQ3NzA6W1sxNTgwLDE2MTBdLDI1Nl0sNjQ3NzE6W1sxNTgyLDE2MDldLDI1Nl0sNjQ3NzI6W1sxNTgyLDE2MTBdLDI1Nl0sNjQ3NzM6W1sxNTg5LDE2MDldLDI1Nl0sNjQ3NzQ6W1sxNTg5LDE2MTBdLDI1Nl0sNjQ3NzU6W1sxNTkwLDE2MDldLDI1Nl0sNjQ3NzY6W1sxNTkwLDE2MTBdLDI1Nl0sNjQ3Nzc6W1sxNTg4LDE1ODBdLDI1Nl0sNjQ3Nzg6W1sxNTg4LDE1ODFdLDI1Nl0sNjQ3Nzk6W1sxNTg4LDE1ODJdLDI1Nl0sNjQ3ODA6W1sxNTg4LDE2MDVdLDI1Nl0sNjQ3ODE6W1sxNTg4LDE1ODVdLDI1Nl0sNjQ3ODI6W1sxNTg3LDE1ODVdLDI1Nl0sNjQ3ODM6W1sxNTg5LDE1ODVdLDI1Nl0sNjQ3ODQ6W1sxNTkwLDE1ODVdLDI1Nl0sNjQ3ODU6W1sxNTkxLDE2MDldLDI1Nl0sNjQ3ODY6W1sxNTkxLDE2MTBdLDI1Nl0sNjQ3ODc6W1sxNTkzLDE2MDldLDI1Nl0sNjQ3ODg6W1sxNTkzLDE2MTBdLDI1Nl0sNjQ3ODk6W1sxNTk0LDE2MDldLDI1Nl0sNjQ3OTA6W1sxNTk0LDE2MTBdLDI1Nl0sNjQ3OTE6W1sxNTg3LDE2MDldLDI1Nl0sNjQ3OTI6W1sxNTg3LDE2MTBdLDI1Nl0sNjQ3OTM6W1sxNTg4LDE2MDldLDI1Nl0sNjQ3OTQ6W1sxNTg4LDE2MTBdLDI1Nl0sNjQ3OTU6W1sxNTgxLDE2MDldLDI1Nl0sNjQ3OTY6W1sxNTgxLDE2MTBdLDI1Nl0sNjQ3OTc6W1sxNTgwLDE2MDldLDI1Nl0sNjQ3OTg6W1sxNTgwLDE2MTBdLDI1Nl0sNjQ3OTk6W1sxNTgyLDE2MDldLDI1Nl0sNjQ4MDA6W1sxNTgyLDE2MTBdLDI1Nl0sNjQ4MDE6W1sxNTg5LDE2MDldLDI1Nl0sNjQ4MDI6W1sxNTg5LDE2MTBdLDI1Nl0sNjQ4MDM6W1sxNTkwLDE2MDldLDI1Nl0sNjQ4MDQ6W1sxNTkwLDE2MTBdLDI1Nl0sNjQ4MDU6W1sxNTg4LDE1ODBdLDI1Nl0sNjQ4MDY6W1sxNTg4LDE1ODFdLDI1Nl0sNjQ4MDc6W1sxNTg4LDE1ODJdLDI1Nl0sNjQ4MDg6W1sxNTg4LDE2MDVdLDI1Nl0sNjQ4MDk6W1sxNTg4LDE1ODVdLDI1Nl0sNjQ4MTA6W1sxNTg3LDE1ODVdLDI1Nl0sNjQ4MTE6W1sxNTg5LDE1ODVdLDI1Nl0sNjQ4MTI6W1sxNTkwLDE1ODVdLDI1Nl0sNjQ4MTM6W1sxNTg4LDE1ODBdLDI1Nl0sNjQ4MTQ6W1sxNTg4LDE1ODFdLDI1Nl0sNjQ4MTU6W1sxNTg4LDE1ODJdLDI1Nl0sNjQ4MTY6W1sxNTg4LDE2MDVdLDI1Nl0sNjQ4MTc6W1sxNTg3LDE2MDddLDI1Nl0sNjQ4MTg6W1sxNTg4LDE2MDddLDI1Nl0sNjQ4MTk6W1sxNTkxLDE2MDVdLDI1Nl0sNjQ4MjA6W1sxNTg3LDE1ODBdLDI1Nl0sNjQ4MjE6W1sxNTg3LDE1ODFdLDI1Nl0sNjQ4MjI6W1sxNTg3LDE1ODJdLDI1Nl0sNjQ4MjM6W1sxNTg4LDE1ODBdLDI1Nl0sNjQ4MjQ6W1sxNTg4LDE1ODFdLDI1Nl0sNjQ4MjU6W1sxNTg4LDE1ODJdLDI1Nl0sNjQ4MjY6W1sxNTkxLDE2MDVdLDI1Nl0sNjQ4Mjc6W1sxNTkyLDE2MDVdLDI1Nl0sNjQ4Mjg6W1sxNTc1LDE2MTFdLDI1Nl0sNjQ4Mjk6W1sxNTc1LDE2MTFdLDI1Nl0sNjQ4NDg6W1sxNTc4LDE1ODAsMTYwNV0sMjU2XSw2NDg0OTpbWzE1NzgsMTU4MSwxNTgwXSwyNTZdLDY0ODUwOltbMTU3OCwxNTgxLDE1ODBdLDI1Nl0sNjQ4NTE6W1sxNTc4LDE1ODEsMTYwNV0sMjU2XSw2NDg1MjpbWzE1NzgsMTU4MiwxNjA1XSwyNTZdLDY0ODUzOltbMTU3OCwxNjA1LDE1ODBdLDI1Nl0sNjQ4NTQ6W1sxNTc4LDE2MDUsMTU4MV0sMjU2XSw2NDg1NTpbWzE1NzgsMTYwNSwxNTgyXSwyNTZdLDY0ODU2OltbMTU4MCwxNjA1LDE1ODFdLDI1Nl0sNjQ4NTc6W1sxNTgwLDE2MDUsMTU4MV0sMjU2XSw2NDg1ODpbWzE1ODEsMTYwNSwxNjEwXSwyNTZdLDY0ODU5OltbMTU4MSwxNjA1LDE2MDldLDI1Nl0sNjQ4NjA6W1sxNTg3LDE1ODEsMTU4MF0sMjU2XSw2NDg2MTpbWzE1ODcsMTU4MCwxNTgxXSwyNTZdLDY0ODYyOltbMTU4NywxNTgwLDE2MDldLDI1Nl0sNjQ4NjM6W1sxNTg3LDE2MDUsMTU4MV0sMjU2XSw2NDg2NDpbWzE1ODcsMTYwNSwxNTgxXSwyNTZdLDY0ODY1OltbMTU4NywxNjA1LDE1ODBdLDI1Nl0sNjQ4NjY6W1sxNTg3LDE2MDUsMTYwNV0sMjU2XSw2NDg2NzpbWzE1ODcsMTYwNSwxNjA1XSwyNTZdLDY0ODY4OltbMTU4OSwxNTgxLDE1ODFdLDI1Nl0sNjQ4Njk6W1sxNTg5LDE1ODEsMTU4MV0sMjU2XSw2NDg3MDpbWzE1ODksMTYwNSwxNjA1XSwyNTZdLDY0ODcxOltbMTU4OCwxNTgxLDE2MDVdLDI1Nl0sNjQ4NzI6W1sxNTg4LDE1ODEsMTYwNV0sMjU2XSw2NDg3MzpbWzE1ODgsMTU4MCwxNjEwXSwyNTZdLDY0ODc0OltbMTU4OCwxNjA1LDE1ODJdLDI1Nl0sNjQ4NzU6W1sxNTg4LDE2MDUsMTU4Ml0sMjU2XSw2NDg3NjpbWzE1ODgsMTYwNSwxNjA1XSwyNTZdLDY0ODc3OltbMTU4OCwxNjA1LDE2MDVdLDI1Nl0sNjQ4Nzg6W1sxNTkwLDE1ODEsMTYwOV0sMjU2XSw2NDg3OTpbWzE1OTAsMTU4MiwxNjA1XSwyNTZdLDY0ODgwOltbMTU5MCwxNTgyLDE2MDVdLDI1Nl0sNjQ4ODE6W1sxNTkxLDE2MDUsMTU4MV0sMjU2XSw2NDg4MjpbWzE1OTEsMTYwNSwxNTgxXSwyNTZdLDY0ODgzOltbMTU5MSwxNjA1LDE2MDVdLDI1Nl0sNjQ4ODQ6W1sxNTkxLDE2MDUsMTYxMF0sMjU2XSw2NDg4NTpbWzE1OTMsMTU4MCwxNjA1XSwyNTZdLDY0ODg2OltbMTU5MywxNjA1LDE2MDVdLDI1Nl0sNjQ4ODc6W1sxNTkzLDE2MDUsMTYwNV0sMjU2XSw2NDg4ODpbWzE1OTMsMTYwNSwxNjA5XSwyNTZdLDY0ODg5OltbMTU5NCwxNjA1LDE2MDVdLDI1Nl0sNjQ4OTA6W1sxNTk0LDE2MDUsMTYxMF0sMjU2XSw2NDg5MTpbWzE1OTQsMTYwNSwxNjA5XSwyNTZdLDY0ODkyOltbMTYwMSwxNTgyLDE2MDVdLDI1Nl0sNjQ4OTM6W1sxNjAxLDE1ODIsMTYwNV0sMjU2XSw2NDg5NDpbWzE2MDIsMTYwNSwxNTgxXSwyNTZdLDY0ODk1OltbMTYwMiwxNjA1LDE2MDVdLDI1Nl0sNjQ4OTY6W1sxNjA0LDE1ODEsMTYwNV0sMjU2XSw2NDg5NzpbWzE2MDQsMTU4MSwxNjEwXSwyNTZdLDY0ODk4OltbMTYwNCwxNTgxLDE2MDldLDI1Nl0sNjQ4OTk6W1sxNjA0LDE1ODAsMTU4MF0sMjU2XSw2NDkwMDpbWzE2MDQsMTU4MCwxNTgwXSwyNTZdLDY0OTAxOltbMTYwNCwxNTgyLDE2MDVdLDI1Nl0sNjQ5MDI6W1sxNjA0LDE1ODIsMTYwNV0sMjU2XSw2NDkwMzpbWzE2MDQsMTYwNSwxNTgxXSwyNTZdLDY0OTA0OltbMTYwNCwxNjA1LDE1ODFdLDI1Nl0sNjQ5MDU6W1sxNjA1LDE1ODEsMTU4MF0sMjU2XSw2NDkwNjpbWzE2MDUsMTU4MSwxNjA1XSwyNTZdLDY0OTA3OltbMTYwNSwxNTgxLDE2MTBdLDI1Nl0sNjQ5MDg6W1sxNjA1LDE1ODAsMTU4MV0sMjU2XSw2NDkwOTpbWzE2MDUsMTU4MCwxNjA1XSwyNTZdLDY0OTEwOltbMTYwNSwxNTgyLDE1ODBdLDI1Nl0sNjQ5MTE6W1sxNjA1LDE1ODIsMTYwNV0sMjU2XSw2NDkxNDpbWzE2MDUsMTU4MCwxNTgyXSwyNTZdLDY0OTE1OltbMTYwNywxNjA1LDE1ODBdLDI1Nl0sNjQ5MTY6W1sxNjA3LDE2MDUsMTYwNV0sMjU2XSw2NDkxNzpbWzE2MDYsMTU4MSwxNjA1XSwyNTZdLDY0OTE4OltbMTYwNiwxNTgxLDE2MDldLDI1Nl0sNjQ5MTk6W1sxNjA2LDE1ODAsMTYwNV0sMjU2XSw2NDkyMDpbWzE2MDYsMTU4MCwxNjA1XSwyNTZdLDY0OTIxOltbMTYwNiwxNTgwLDE2MDldLDI1Nl0sNjQ5MjI6W1sxNjA2LDE2MDUsMTYxMF0sMjU2XSw2NDkyMzpbWzE2MDYsMTYwNSwxNjA5XSwyNTZdLDY0OTI0OltbMTYxMCwxNjA1LDE2MDVdLDI1Nl0sNjQ5MjU6W1sxNjEwLDE2MDUsMTYwNV0sMjU2XSw2NDkyNjpbWzE1NzYsMTU4MiwxNjEwXSwyNTZdLDY0OTI3OltbMTU3OCwxNTgwLDE2MTBdLDI1Nl0sNjQ5Mjg6W1sxNTc4LDE1ODAsMTYwOV0sMjU2XSw2NDkyOTpbWzE1NzgsMTU4MiwxNjEwXSwyNTZdLDY0OTMwOltbMTU3OCwxNTgyLDE2MDldLDI1Nl0sNjQ5MzE6W1sxNTc4LDE2MDUsMTYxMF0sMjU2XSw2NDkzMjpbWzE1NzgsMTYwNSwxNjA5XSwyNTZdLDY0OTMzOltbMTU4MCwxNjA1LDE2MTBdLDI1Nl0sNjQ5MzQ6W1sxNTgwLDE1ODEsMTYwOV0sMjU2XSw2NDkzNTpbWzE1ODAsMTYwNSwxNjA5XSwyNTZdLDY0OTM2OltbMTU4NywxNTgyLDE2MDldLDI1Nl0sNjQ5Mzc6W1sxNTg5LDE1ODEsMTYxMF0sMjU2XSw2NDkzODpbWzE1ODgsMTU4MSwxNjEwXSwyNTZdLDY0OTM5OltbMTU5MCwxNTgxLDE2MTBdLDI1Nl0sNjQ5NDA6W1sxNjA0LDE1ODAsMTYxMF0sMjU2XSw2NDk0MTpbWzE2MDQsMTYwNSwxNjEwXSwyNTZdLDY0OTQyOltbMTYxMCwxNTgxLDE2MTBdLDI1Nl0sNjQ5NDM6W1sxNjEwLDE1ODAsMTYxMF0sMjU2XSw2NDk0NDpbWzE2MTAsMTYwNSwxNjEwXSwyNTZdLDY0OTQ1OltbMTYwNSwxNjA1LDE2MTBdLDI1Nl0sNjQ5NDY6W1sxNjAyLDE2MDUsMTYxMF0sMjU2XSw2NDk0NzpbWzE2MDYsMTU4MSwxNjEwXSwyNTZdLDY0OTQ4OltbMTYwMiwxNjA1LDE1ODFdLDI1Nl0sNjQ5NDk6W1sxNjA0LDE1ODEsMTYwNV0sMjU2XSw2NDk1MDpbWzE1OTMsMTYwNSwxNjEwXSwyNTZdLDY0OTUxOltbMTYwMywxNjA1LDE2MTBdLDI1Nl0sNjQ5NTI6W1sxNjA2LDE1ODAsMTU4MV0sMjU2XSw2NDk1MzpbWzE2MDUsMTU4MiwxNjEwXSwyNTZdLDY0OTU0OltbMTYwNCwxNTgwLDE2MDVdLDI1Nl0sNjQ5NTU6W1sxNjAzLDE2MDUsMTYwNV0sMjU2XSw2NDk1NjpbWzE2MDQsMTU4MCwxNjA1XSwyNTZdLDY0OTU3OltbMTYwNiwxNTgwLDE1ODFdLDI1Nl0sNjQ5NTg6W1sxNTgwLDE1ODEsMTYxMF0sMjU2XSw2NDk1OTpbWzE1ODEsMTU4MCwxNjEwXSwyNTZdLDY0OTYwOltbMTYwNSwxNTgwLDE2MTBdLDI1Nl0sNjQ5NjE6W1sxNjAxLDE2MDUsMTYxMF0sMjU2XSw2NDk2MjpbWzE1NzYsMTU4MSwxNjEwXSwyNTZdLDY0OTYzOltbMTYwMywxNjA1LDE2MDVdLDI1Nl0sNjQ5NjQ6W1sxNTkzLDE1ODAsMTYwNV0sMjU2XSw2NDk2NTpbWzE1ODksMTYwNSwxNjA1XSwyNTZdLDY0OTY2OltbMTU4NywxNTgyLDE2MTBdLDI1Nl0sNjQ5Njc6W1sxNjA2LDE1ODAsMTYxMF0sMjU2XSw2NTAwODpbWzE1ODksMTYwNCwxNzQ2XSwyNTZdLDY1MDA5OltbMTYwMiwxNjA0LDE3NDZdLDI1Nl0sNjUwMTA6W1sxNTc1LDE2MDQsMTYwNCwxNjA3XSwyNTZdLDY1MDExOltbMTU3NSwxNjAzLDE1NzYsMTU4NV0sMjU2XSw2NTAxMjpbWzE2MDUsMTU4MSwxNjA1LDE1ODNdLDI1Nl0sNjUwMTM6W1sxNTg5LDE2MDQsMTU5MywxNjA1XSwyNTZdLDY1MDE0OltbMTU4NSwxNTg3LDE2MDgsMTYwNF0sMjU2XSw2NTAxNTpbWzE1OTMsMTYwNCwxNjEwLDE2MDddLDI1Nl0sNjUwMTY6W1sxNjA4LDE1ODcsMTYwNCwxNjA1XSwyNTZdLDY1MDE3OltbMTU4OSwxNjA0LDE2MDldLDI1Nl0sNjUwMTg6W1sxNTg5LDE2MDQsMTYwOSwzMiwxNTc1LDE2MDQsMTYwNCwxNjA3LDMyLDE1OTMsMTYwNCwxNjEwLDE2MDcsMzIsMTYwOCwxNTg3LDE2MDQsMTYwNV0sMjU2XSw2NTAxOTpbWzE1ODAsMTYwNCwzMiwxNTgwLDE2MDQsMTU3NSwxNjA0LDE2MDddLDI1Nl0sNjUwMjA6W1sxNTg1LDE3NDAsMTU3NSwxNjA0XSwyNTZdfSwNCjY1MDI0Ons2NTA0MDpbWzQ0XSwyNTZdLDY1MDQxOltbMTIyODldLDI1Nl0sNjUwNDI6W1sxMjI5MF0sMjU2XSw2NTA0MzpbWzU4XSwyNTZdLDY1MDQ0OltbNTldLDI1Nl0sNjUwNDU6W1szM10sMjU2XSw2NTA0NjpbWzYzXSwyNTZdLDY1MDQ3OltbMTIzMTBdLDI1Nl0sNjUwNDg6W1sxMjMxMV0sMjU2XSw2NTA0OTpbWzgyMzBdLDI1Nl0sNjUwNTY6WywyMzBdLDY1MDU3OlssMjMwXSw2NTA1ODpbLDIzMF0sNjUwNTk6WywyMzBdLDY1MDYwOlssMjMwXSw2NTA2MTpbLDIzMF0sNjUwNjI6WywyMzBdLDY1MDYzOlssMjIwXSw2NTA2NDpbLDIyMF0sNjUwNjU6WywyMjBdLDY1MDY2OlssMjIwXSw2NTA2NzpbLDIyMF0sNjUwNjg6WywyMjBdLDY1MDY5OlssMjIwXSw2NTA3MjpbWzgyMjldLDI1Nl0sNjUwNzM6W1s4MjEyXSwyNTZdLDY1MDc0OltbODIxMV0sMjU2XSw2NTA3NTpbWzk1XSwyNTZdLDY1MDc2OltbOTVdLDI1Nl0sNjUwNzc6W1s0MF0sMjU2XSw2NTA3ODpbWzQxXSwyNTZdLDY1MDc5OltbMTIzXSwyNTZdLDY1MDgwOltbMTI1XSwyNTZdLDY1MDgxOltbMTIzMDhdLDI1Nl0sNjUwODI6W1sxMjMwOV0sMjU2XSw2NTA4MzpbWzEyMzA0XSwyNTZdLDY1MDg0OltbMTIzMDVdLDI1Nl0sNjUwODU6W1sxMjI5OF0sMjU2XSw2NTA4NjpbWzEyMjk5XSwyNTZdLDY1MDg3OltbMTIyOTZdLDI1Nl0sNjUwODg6W1sxMjI5N10sMjU2XSw2NTA4OTpbWzEyMzAwXSwyNTZdLDY1MDkwOltbMTIzMDFdLDI1Nl0sNjUwOTE6W1sxMjMwMl0sMjU2XSw2NTA5MjpbWzEyMzAzXSwyNTZdLDY1MDk1OltbOTFdLDI1Nl0sNjUwOTY6W1s5M10sMjU2XSw2NTA5NzpbWzgyNTRdLDI1Nl0sNjUwOTg6W1s4MjU0XSwyNTZdLDY1MDk5OltbODI1NF0sMjU2XSw2NTEwMDpbWzgyNTRdLDI1Nl0sNjUxMDE6W1s5NV0sMjU2XSw2NTEwMjpbWzk1XSwyNTZdLDY1MTAzOltbOTVdLDI1Nl0sNjUxMDQ6W1s0NF0sMjU2XSw2NTEwNTpbWzEyMjg5XSwyNTZdLDY1MTA2OltbNDZdLDI1Nl0sNjUxMDg6W1s1OV0sMjU2XSw2NTEwOTpbWzU4XSwyNTZdLDY1MTEwOltbNjNdLDI1Nl0sNjUxMTE6W1szM10sMjU2XSw2NTExMjpbWzgyMTJdLDI1Nl0sNjUxMTM6W1s0MF0sMjU2XSw2NTExNDpbWzQxXSwyNTZdLDY1MTE1OltbMTIzXSwyNTZdLDY1MTE2OltbMTI1XSwyNTZdLDY1MTE3OltbMTIzMDhdLDI1Nl0sNjUxMTg6W1sxMjMwOV0sMjU2XSw2NTExOTpbWzM1XSwyNTZdLDY1MTIwOltbMzhdLDI1Nl0sNjUxMjE6W1s0Ml0sMjU2XSw2NTEyMjpbWzQzXSwyNTZdLDY1MTIzOltbNDVdLDI1Nl0sNjUxMjQ6W1s2MF0sMjU2XSw2NTEyNTpbWzYyXSwyNTZdLDY1MTI2OltbNjFdLDI1Nl0sNjUxMjg6W1s5Ml0sMjU2XSw2NTEyOTpbWzM2XSwyNTZdLDY1MTMwOltbMzddLDI1Nl0sNjUxMzE6W1s2NF0sMjU2XSw2NTEzNjpbWzMyLDE2MTFdLDI1Nl0sNjUxMzc6W1sxNjAwLDE2MTFdLDI1Nl0sNjUxMzg6W1szMiwxNjEyXSwyNTZdLDY1MTQwOltbMzIsMTYxM10sMjU2XSw2NTE0MjpbWzMyLDE2MTRdLDI1Nl0sNjUxNDM6W1sxNjAwLDE2MTRdLDI1Nl0sNjUxNDQ6W1szMiwxNjE1XSwyNTZdLDY1MTQ1OltbMTYwMCwxNjE1XSwyNTZdLDY1MTQ2OltbMzIsMTYxNl0sMjU2XSw2NTE0NzpbWzE2MDAsMTYxNl0sMjU2XSw2NTE0ODpbWzMyLDE2MTddLDI1Nl0sNjUxNDk6W1sxNjAwLDE2MTddLDI1Nl0sNjUxNTA6W1szMiwxNjE4XSwyNTZdLDY1MTUxOltbMTYwMCwxNjE4XSwyNTZdLDY1MTUyOltbMTU2OV0sMjU2XSw2NTE1MzpbWzE1NzBdLDI1Nl0sNjUxNTQ6W1sxNTcwXSwyNTZdLDY1MTU1OltbMTU3MV0sMjU2XSw2NTE1NjpbWzE1NzFdLDI1Nl0sNjUxNTc6W1sxNTcyXSwyNTZdLDY1MTU4OltbMTU3Ml0sMjU2XSw2NTE1OTpbWzE1NzNdLDI1Nl0sNjUxNjA6W1sxNTczXSwyNTZdLDY1MTYxOltbMTU3NF0sMjU2XSw2NTE2MjpbWzE1NzRdLDI1Nl0sNjUxNjM6W1sxNTc0XSwyNTZdLDY1MTY0OltbMTU3NF0sMjU2XSw2NTE2NTpbWzE1NzVdLDI1Nl0sNjUxNjY6W1sxNTc1XSwyNTZdLDY1MTY3OltbMTU3Nl0sMjU2XSw2NTE2ODpbWzE1NzZdLDI1Nl0sNjUxNjk6W1sxNTc2XSwyNTZdLDY1MTcwOltbMTU3Nl0sMjU2XSw2NTE3MTpbWzE1NzddLDI1Nl0sNjUxNzI6W1sxNTc3XSwyNTZdLDY1MTczOltbMTU3OF0sMjU2XSw2NTE3NDpbWzE1NzhdLDI1Nl0sNjUxNzU6W1sxNTc4XSwyNTZdLDY1MTc2OltbMTU3OF0sMjU2XSw2NTE3NzpbWzE1NzldLDI1Nl0sNjUxNzg6W1sxNTc5XSwyNTZdLDY1MTc5OltbMTU3OV0sMjU2XSw2NTE4MDpbWzE1NzldLDI1Nl0sNjUxODE6W1sxNTgwXSwyNTZdLDY1MTgyOltbMTU4MF0sMjU2XSw2NTE4MzpbWzE1ODBdLDI1Nl0sNjUxODQ6W1sxNTgwXSwyNTZdLDY1MTg1OltbMTU4MV0sMjU2XSw2NTE4NjpbWzE1ODFdLDI1Nl0sNjUxODc6W1sxNTgxXSwyNTZdLDY1MTg4OltbMTU4MV0sMjU2XSw2NTE4OTpbWzE1ODJdLDI1Nl0sNjUxOTA6W1sxNTgyXSwyNTZdLDY1MTkxOltbMTU4Ml0sMjU2XSw2NTE5MjpbWzE1ODJdLDI1Nl0sNjUxOTM6W1sxNTgzXSwyNTZdLDY1MTk0OltbMTU4M10sMjU2XSw2NTE5NTpbWzE1ODRdLDI1Nl0sNjUxOTY6W1sxNTg0XSwyNTZdLDY1MTk3OltbMTU4NV0sMjU2XSw2NTE5ODpbWzE1ODVdLDI1Nl0sNjUxOTk6W1sxNTg2XSwyNTZdLDY1MjAwOltbMTU4Nl0sMjU2XSw2NTIwMTpbWzE1ODddLDI1Nl0sNjUyMDI6W1sxNTg3XSwyNTZdLDY1MjAzOltbMTU4N10sMjU2XSw2NTIwNDpbWzE1ODddLDI1Nl0sNjUyMDU6W1sxNTg4XSwyNTZdLDY1MjA2OltbMTU4OF0sMjU2XSw2NTIwNzpbWzE1ODhdLDI1Nl0sNjUyMDg6W1sxNTg4XSwyNTZdLDY1MjA5OltbMTU4OV0sMjU2XSw2NTIxMDpbWzE1ODldLDI1Nl0sNjUyMTE6W1sxNTg5XSwyNTZdLDY1MjEyOltbMTU4OV0sMjU2XSw2NTIxMzpbWzE1OTBdLDI1Nl0sNjUyMTQ6W1sxNTkwXSwyNTZdLDY1MjE1OltbMTU5MF0sMjU2XSw2NTIxNjpbWzE1OTBdLDI1Nl0sNjUyMTc6W1sxNTkxXSwyNTZdLDY1MjE4OltbMTU5MV0sMjU2XSw2NTIxOTpbWzE1OTFdLDI1Nl0sNjUyMjA6W1sxNTkxXSwyNTZdLDY1MjIxOltbMTU5Ml0sMjU2XSw2NTIyMjpbWzE1OTJdLDI1Nl0sNjUyMjM6W1sxNTkyXSwyNTZdLDY1MjI0OltbMTU5Ml0sMjU2XSw2NTIyNTpbWzE1OTNdLDI1Nl0sNjUyMjY6W1sxNTkzXSwyNTZdLDY1MjI3OltbMTU5M10sMjU2XSw2NTIyODpbWzE1OTNdLDI1Nl0sNjUyMjk6W1sxNTk0XSwyNTZdLDY1MjMwOltbMTU5NF0sMjU2XSw2NTIzMTpbWzE1OTRdLDI1Nl0sNjUyMzI6W1sxNTk0XSwyNTZdLDY1MjMzOltbMTYwMV0sMjU2XSw2NTIzNDpbWzE2MDFdLDI1Nl0sNjUyMzU6W1sxNjAxXSwyNTZdLDY1MjM2OltbMTYwMV0sMjU2XSw2NTIzNzpbWzE2MDJdLDI1Nl0sNjUyMzg6W1sxNjAyXSwyNTZdLDY1MjM5OltbMTYwMl0sMjU2XSw2NTI0MDpbWzE2MDJdLDI1Nl0sNjUyNDE6W1sxNjAzXSwyNTZdLDY1MjQyOltbMTYwM10sMjU2XSw2NTI0MzpbWzE2MDNdLDI1Nl0sNjUyNDQ6W1sxNjAzXSwyNTZdLDY1MjQ1OltbMTYwNF0sMjU2XSw2NTI0NjpbWzE2MDRdLDI1Nl0sNjUyNDc6W1sxNjA0XSwyNTZdLDY1MjQ4OltbMTYwNF0sMjU2XSw2NTI0OTpbWzE2MDVdLDI1Nl0sNjUyNTA6W1sxNjA1XSwyNTZdLDY1MjUxOltbMTYwNV0sMjU2XSw2NTI1MjpbWzE2MDVdLDI1Nl0sNjUyNTM6W1sxNjA2XSwyNTZdLDY1MjU0OltbMTYwNl0sMjU2XSw2NTI1NTpbWzE2MDZdLDI1Nl0sNjUyNTY6W1sxNjA2XSwyNTZdLDY1MjU3OltbMTYwN10sMjU2XSw2NTI1ODpbWzE2MDddLDI1Nl0sNjUyNTk6W1sxNjA3XSwyNTZdLDY1MjYwOltbMTYwN10sMjU2XSw2NTI2MTpbWzE2MDhdLDI1Nl0sNjUyNjI6W1sxNjA4XSwyNTZdLDY1MjYzOltbMTYwOV0sMjU2XSw2NTI2NDpbWzE2MDldLDI1Nl0sNjUyNjU6W1sxNjEwXSwyNTZdLDY1MjY2OltbMTYxMF0sMjU2XSw2NTI2NzpbWzE2MTBdLDI1Nl0sNjUyNjg6W1sxNjEwXSwyNTZdLDY1MjY5OltbMTYwNCwxNTcwXSwyNTZdLDY1MjcwOltbMTYwNCwxNTcwXSwyNTZdLDY1MjcxOltbMTYwNCwxNTcxXSwyNTZdLDY1MjcyOltbMTYwNCwxNTcxXSwyNTZdLDY1MjczOltbMTYwNCwxNTczXSwyNTZdLDY1Mjc0OltbMTYwNCwxNTczXSwyNTZdLDY1Mjc1OltbMTYwNCwxNTc1XSwyNTZdLDY1Mjc2OltbMTYwNCwxNTc1XSwyNTZdfSwNCjY1MjgwOns2NTI4MTpbWzMzXSwyNTZdLDY1MjgyOltbMzRdLDI1Nl0sNjUyODM6W1szNV0sMjU2XSw2NTI4NDpbWzM2XSwyNTZdLDY1Mjg1OltbMzddLDI1Nl0sNjUyODY6W1szOF0sMjU2XSw2NTI4NzpbWzM5XSwyNTZdLDY1Mjg4OltbNDBdLDI1Nl0sNjUyODk6W1s0MV0sMjU2XSw2NTI5MDpbWzQyXSwyNTZdLDY1MjkxOltbNDNdLDI1Nl0sNjUyOTI6W1s0NF0sMjU2XSw2NTI5MzpbWzQ1XSwyNTZdLDY1Mjk0OltbNDZdLDI1Nl0sNjUyOTU6W1s0N10sMjU2XSw2NTI5NjpbWzQ4XSwyNTZdLDY1Mjk3OltbNDldLDI1Nl0sNjUyOTg6W1s1MF0sMjU2XSw2NTI5OTpbWzUxXSwyNTZdLDY1MzAwOltbNTJdLDI1Nl0sNjUzMDE6W1s1M10sMjU2XSw2NTMwMjpbWzU0XSwyNTZdLDY1MzAzOltbNTVdLDI1Nl0sNjUzMDQ6W1s1Nl0sMjU2XSw2NTMwNTpbWzU3XSwyNTZdLDY1MzA2OltbNThdLDI1Nl0sNjUzMDc6W1s1OV0sMjU2XSw2NTMwODpbWzYwXSwyNTZdLDY1MzA5OltbNjFdLDI1Nl0sNjUzMTA6W1s2Ml0sMjU2XSw2NTMxMTpbWzYzXSwyNTZdLDY1MzEyOltbNjRdLDI1Nl0sNjUzMTM6W1s2NV0sMjU2XSw2NTMxNDpbWzY2XSwyNTZdLDY1MzE1OltbNjddLDI1Nl0sNjUzMTY6W1s2OF0sMjU2XSw2NTMxNzpbWzY5XSwyNTZdLDY1MzE4OltbNzBdLDI1Nl0sNjUzMTk6W1s3MV0sMjU2XSw2NTMyMDpbWzcyXSwyNTZdLDY1MzIxOltbNzNdLDI1Nl0sNjUzMjI6W1s3NF0sMjU2XSw2NTMyMzpbWzc1XSwyNTZdLDY1MzI0OltbNzZdLDI1Nl0sNjUzMjU6W1s3N10sMjU2XSw2NTMyNjpbWzc4XSwyNTZdLDY1MzI3OltbNzldLDI1Nl0sNjUzMjg6W1s4MF0sMjU2XSw2NTMyOTpbWzgxXSwyNTZdLDY1MzMwOltbODJdLDI1Nl0sNjUzMzE6W1s4M10sMjU2XSw2NTMzMjpbWzg0XSwyNTZdLDY1MzMzOltbODVdLDI1Nl0sNjUzMzQ6W1s4Nl0sMjU2XSw2NTMzNTpbWzg3XSwyNTZdLDY1MzM2OltbODhdLDI1Nl0sNjUzMzc6W1s4OV0sMjU2XSw2NTMzODpbWzkwXSwyNTZdLDY1MzM5OltbOTFdLDI1Nl0sNjUzNDA6W1s5Ml0sMjU2XSw2NTM0MTpbWzkzXSwyNTZdLDY1MzQyOltbOTRdLDI1Nl0sNjUzNDM6W1s5NV0sMjU2XSw2NTM0NDpbWzk2XSwyNTZdLDY1MzQ1OltbOTddLDI1Nl0sNjUzNDY6W1s5OF0sMjU2XSw2NTM0NzpbWzk5XSwyNTZdLDY1MzQ4OltbMTAwXSwyNTZdLDY1MzQ5OltbMTAxXSwyNTZdLDY1MzUwOltbMTAyXSwyNTZdLDY1MzUxOltbMTAzXSwyNTZdLDY1MzUyOltbMTA0XSwyNTZdLDY1MzUzOltbMTA1XSwyNTZdLDY1MzU0OltbMTA2XSwyNTZdLDY1MzU1OltbMTA3XSwyNTZdLDY1MzU2OltbMTA4XSwyNTZdLDY1MzU3OltbMTA5XSwyNTZdLDY1MzU4OltbMTEwXSwyNTZdLDY1MzU5OltbMTExXSwyNTZdLDY1MzYwOltbMTEyXSwyNTZdLDY1MzYxOltbMTEzXSwyNTZdLDY1MzYyOltbMTE0XSwyNTZdLDY1MzYzOltbMTE1XSwyNTZdLDY1MzY0OltbMTE2XSwyNTZdLDY1MzY1OltbMTE3XSwyNTZdLDY1MzY2OltbMTE4XSwyNTZdLDY1MzY3OltbMTE5XSwyNTZdLDY1MzY4OltbMTIwXSwyNTZdLDY1MzY5OltbMTIxXSwyNTZdLDY1MzcwOltbMTIyXSwyNTZdLDY1MzcxOltbMTIzXSwyNTZdLDY1MzcyOltbMTI0XSwyNTZdLDY1MzczOltbMTI1XSwyNTZdLDY1Mzc0OltbMTI2XSwyNTZdLDY1Mzc1OltbMTA2MjldLDI1Nl0sNjUzNzY6W1sxMDYzMF0sMjU2XSw2NTM3NzpbWzEyMjkwXSwyNTZdLDY1Mzc4OltbMTIzMDBdLDI1Nl0sNjUzNzk6W1sxMjMwMV0sMjU2XSw2NTM4MDpbWzEyMjg5XSwyNTZdLDY1MzgxOltbMTI1MzldLDI1Nl0sNjUzODI6W1sxMjUzMF0sMjU2XSw2NTM4MzpbWzEyNDQ5XSwyNTZdLDY1Mzg0OltbMTI0NTFdLDI1Nl0sNjUzODU6W1sxMjQ1M10sMjU2XSw2NTM4NjpbWzEyNDU1XSwyNTZdLDY1Mzg3OltbMTI0NTddLDI1Nl0sNjUzODg6W1sxMjUxNV0sMjU2XSw2NTM4OTpbWzEyNTE3XSwyNTZdLDY1MzkwOltbMTI1MTldLDI1Nl0sNjUzOTE6W1sxMjQ4M10sMjU2XSw2NTM5MjpbWzEyNTQwXSwyNTZdLDY1MzkzOltbMTI0NTBdLDI1Nl0sNjUzOTQ6W1sxMjQ1Ml0sMjU2XSw2NTM5NTpbWzEyNDU0XSwyNTZdLDY1Mzk2OltbMTI0NTZdLDI1Nl0sNjUzOTc6W1sxMjQ1OF0sMjU2XSw2NTM5ODpbWzEyNDU5XSwyNTZdLDY1Mzk5OltbMTI0NjFdLDI1Nl0sNjU0MDA6W1sxMjQ2M10sMjU2XSw2NTQwMTpbWzEyNDY1XSwyNTZdLDY1NDAyOltbMTI0NjddLDI1Nl0sNjU0MDM6W1sxMjQ2OV0sMjU2XSw2NTQwNDpbWzEyNDcxXSwyNTZdLDY1NDA1OltbMTI0NzNdLDI1Nl0sNjU0MDY6W1sxMjQ3NV0sMjU2XSw2NTQwNzpbWzEyNDc3XSwyNTZdLDY1NDA4OltbMTI0NzldLDI1Nl0sNjU0MDk6W1sxMjQ4MV0sMjU2XSw2NTQxMDpbWzEyNDg0XSwyNTZdLDY1NDExOltbMTI0ODZdLDI1Nl0sNjU0MTI6W1sxMjQ4OF0sMjU2XSw2NTQxMzpbWzEyNDkwXSwyNTZdLDY1NDE0OltbMTI0OTFdLDI1Nl0sNjU0MTU6W1sxMjQ5Ml0sMjU2XSw2NTQxNjpbWzEyNDkzXSwyNTZdLDY1NDE3OltbMTI0OTRdLDI1Nl0sNjU0MTg6W1sxMjQ5NV0sMjU2XSw2NTQxOTpbWzEyNDk4XSwyNTZdLDY1NDIwOltbMTI1MDFdLDI1Nl0sNjU0MjE6W1sxMjUwNF0sMjU2XSw2NTQyMjpbWzEyNTA3XSwyNTZdLDY1NDIzOltbMTI1MTBdLDI1Nl0sNjU0MjQ6W1sxMjUxMV0sMjU2XSw2NTQyNTpbWzEyNTEyXSwyNTZdLDY1NDI2OltbMTI1MTNdLDI1Nl0sNjU0Mjc6W1sxMjUxNF0sMjU2XSw2NTQyODpbWzEyNTE2XSwyNTZdLDY1NDI5OltbMTI1MThdLDI1Nl0sNjU0MzA6W1sxMjUyMF0sMjU2XSw2NTQzMTpbWzEyNTIxXSwyNTZdLDY1NDMyOltbMTI1MjJdLDI1Nl0sNjU0MzM6W1sxMjUyM10sMjU2XSw2NTQzNDpbWzEyNTI0XSwyNTZdLDY1NDM1OltbMTI1MjVdLDI1Nl0sNjU0MzY6W1sxMjUyN10sMjU2XSw2NTQzNzpbWzEyNTMxXSwyNTZdLDY1NDM4OltbMTI0NDFdLDI1Nl0sNjU0Mzk6W1sxMjQ0Ml0sMjU2XSw2NTQ0MDpbWzEyNjQ0XSwyNTZdLDY1NDQxOltbMTI1OTNdLDI1Nl0sNjU0NDI6W1sxMjU5NF0sMjU2XSw2NTQ0MzpbWzEyNTk1XSwyNTZdLDY1NDQ0OltbMTI1OTZdLDI1Nl0sNjU0NDU6W1sxMjU5N10sMjU2XSw2NTQ0NjpbWzEyNTk4XSwyNTZdLDY1NDQ3OltbMTI1OTldLDI1Nl0sNjU0NDg6W1sxMjYwMF0sMjU2XSw2NTQ0OTpbWzEyNjAxXSwyNTZdLDY1NDUwOltbMTI2MDJdLDI1Nl0sNjU0NTE6W1sxMjYwM10sMjU2XSw2NTQ1MjpbWzEyNjA0XSwyNTZdLDY1NDUzOltbMTI2MDVdLDI1Nl0sNjU0NTQ6W1sxMjYwNl0sMjU2XSw2NTQ1NTpbWzEyNjA3XSwyNTZdLDY1NDU2OltbMTI2MDhdLDI1Nl0sNjU0NTc6W1sxMjYwOV0sMjU2XSw2NTQ1ODpbWzEyNjEwXSwyNTZdLDY1NDU5OltbMTI2MTFdLDI1Nl0sNjU0NjA6W1sxMjYxMl0sMjU2XSw2NTQ2MTpbWzEyNjEzXSwyNTZdLDY1NDYyOltbMTI2MTRdLDI1Nl0sNjU0NjM6W1sxMjYxNV0sMjU2XSw2NTQ2NDpbWzEyNjE2XSwyNTZdLDY1NDY1OltbMTI2MTddLDI1Nl0sNjU0NjY6W1sxMjYxOF0sMjU2XSw2NTQ2NzpbWzEyNjE5XSwyNTZdLDY1NDY4OltbMTI2MjBdLDI1Nl0sNjU0Njk6W1sxMjYyMV0sMjU2XSw2NTQ3MDpbWzEyNjIyXSwyNTZdLDY1NDc0OltbMTI2MjNdLDI1Nl0sNjU0NzU6W1sxMjYyNF0sMjU2XSw2NTQ3NjpbWzEyNjI1XSwyNTZdLDY1NDc3OltbMTI2MjZdLDI1Nl0sNjU0Nzg6W1sxMjYyN10sMjU2XSw2NTQ3OTpbWzEyNjI4XSwyNTZdLDY1NDgyOltbMTI2MjldLDI1Nl0sNjU0ODM6W1sxMjYzMF0sMjU2XSw2NTQ4NDpbWzEyNjMxXSwyNTZdLDY1NDg1OltbMTI2MzJdLDI1Nl0sNjU0ODY6W1sxMjYzM10sMjU2XSw2NTQ4NzpbWzEyNjM0XSwyNTZdLDY1NDkwOltbMTI2MzVdLDI1Nl0sNjU0OTE6W1sxMjYzNl0sMjU2XSw2NTQ5MjpbWzEyNjM3XSwyNTZdLDY1NDkzOltbMTI2MzhdLDI1Nl0sNjU0OTQ6W1sxMjYzOV0sMjU2XSw2NTQ5NTpbWzEyNjQwXSwyNTZdLDY1NDk4OltbMTI2NDFdLDI1Nl0sNjU0OTk6W1sxMjY0Ml0sMjU2XSw2NTUwMDpbWzEyNjQzXSwyNTZdLDY1NTA0OltbMTYyXSwyNTZdLDY1NTA1OltbMTYzXSwyNTZdLDY1NTA2OltbMTcyXSwyNTZdLDY1NTA3OltbMTc1XSwyNTZdLDY1NTA4OltbMTY2XSwyNTZdLDY1NTA5OltbMTY1XSwyNTZdLDY1NTEwOltbODM2MV0sMjU2XSw2NTUxMjpbWzk0NzRdLDI1Nl0sNjU1MTM6W1s4NTkyXSwyNTZdLDY1NTE0OltbODU5M10sMjU2XSw2NTUxNTpbWzg1OTRdLDI1Nl0sNjU1MTY6W1s4NTk1XSwyNTZdLDY1NTE3OltbOTYzMl0sMjU2XSw2NTUxODpbWzk2NzVdLDI1Nl19DQoNCn07DQoNCiAgIC8qKioqKiBNb2R1bGUgdG8gZXhwb3J0ICovDQogICB2YXIgdW5vcm0gPSB7DQogICAgICBuZmM6IG5mYywNCiAgICAgIG5mZDogbmZkLA0KICAgICAgbmZrYzogbmZrYywNCiAgICAgIG5ma2Q6IG5ma2QNCiAgIH07DQoNCiAgIC8qZ2xvYmFscyBtb2R1bGU6dHJ1ZSxkZWZpbmU6dHJ1ZSovDQoNCiAgIC8vIENvbW1vbkpTDQogICBpZiAodHlwZW9mIG1vZHVsZSA9PT0gIm9iamVjdCIpIHsNCiAgICAgIG1vZHVsZS5leHBvcnRzID0gdW5vcm07DQoNCiAgIC8vIEFNRA0KICAgfSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAiZnVuY3Rpb24iICYmIGRlZmluZS5hbWQpIHsNCiAgICAgIGRlZmluZSgidW5vcm0iLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICByZXR1cm4gdW5vcm07DQogICAgICB9KTsNCg0KICAgLy8gR2xvYmFsDQogICB9IGVsc2Ugew0KICAgICAgcm9vdC51bm9ybSA9IHVub3JtOw0KICAgfQ0KDQogICAvKioqKiogRXhwb3J0IGFzIHNoaW0gZm9yIFN0cmluZzo6bm9ybWFsaXplIG1ldGhvZCAqKioqKi8NCiAgIC8qDQogICAgICBodHRwOi8vd2lraS5lY21hc2NyaXB0Lm9yZy9kb2t1LnBocD9pZD1oYXJtb255OnNwZWNpZmljYXRpb25fZHJhZnRzI25vdmVtYmVyXzhfMjAxM19kcmFmdF9yZXZfMjENCg0KICAgICAgMjEuMS4zLjEyIFN0cmluZy5wcm90b3R5cGUubm9ybWFsaXplKGZvcm09Ik5GQyIpDQogICAgICBXaGVuIHRoZSBub3JtYWxpemUgbWV0aG9kIGlzIGNhbGxlZCB3aXRoIG9uZSBhcmd1bWVudCBmb3JtLCB0aGUgZm9sbG93aW5nIHN0ZXBzIGFyZSB0YWtlbjoNCg0KICAgICAgMS4gTGV0IE8gYmUgQ2hlY2tPYmplY3RDb2VyY2libGUodGhpcyB2YWx1ZSkuDQogICAgICAyLiBMZXQgUyBiZSBUb1N0cmluZyhPKS4NCiAgICAgIDMuIFJldHVybklmQWJydXB0KFMpLg0KICAgICAgNC4gSWYgZm9ybSBpcyBub3QgcHJvdmlkZWQgb3IgdW5kZWZpbmVkIGxldCBmb3JtIGJlICJORkMiLg0KICAgICAgNS4gTGV0IGYgYmUgVG9TdHJpbmcoZm9ybSkuDQogICAgICA2LiBSZXR1cm5JZkFicnVwdChmKS4NCiAgICAgIDcuIElmIGYgaXMgbm90IG9uZSBvZiAiTkZDIiwgIk5GRCIsICJORktDIiwgb3IgIk5GS0QiLCB0aGVuIHRocm93IGEgUmFuZ2VFcnJvciBFeGNlcHRpb24uDQogICAgICA4LiBMZXQgbnMgYmUgdGhlIFN0cmluZyB2YWx1ZSBpcyB0aGUgcmVzdWx0IG9mIG5vcm1hbGl6aW5nIFMgaW50byB0aGUgbm9ybWFsaXphdGlvbiBmb3JtIG5hbWVkIGJ5IGYgYXMgc3BlY2lmaWVkIGluIFVuaWNvZGUgU3RhbmRhcmQgQW5uZXggIzE1LCBVbmljb2RlTm9ybWFsaXphdG9pbiBGb3Jtcy4NCiAgICAgIDkuIFJldHVybiBucy4NCg0KICAgICAgVGhlIGxlbmd0aCBwcm9wZXJ0eSBvZiB0aGUgbm9ybWFsaXplIG1ldGhvZCBpcyAwLg0KDQogICAgICAqTk9URSogVGhlIG5vcm1hbGl6ZSBmdW5jdGlvbiBpcyBpbnRlbnRpb25hbGx5IGdlbmVyaWM7IGl0IGRvZXMgbm90IHJlcXVpcmUgdGhhdCBpdHMgdGhpcyB2YWx1ZSBiZSBhIFN0cmluZyBvYmplY3QuIFRoZXJlZm9yZSBpdCBjYW4gYmUgdHJhbnNmZXJyZWQgdG8gb3RoZXIga2luZHMgb2Ygb2JqZWN0cyBmb3IgdXNlIGFzIGEgbWV0aG9kLg0KICAgKi8NCiAgICB1bm9ybS5zaGltQXBwbGllZCA9IGZhbHNlOw0KDQogICBpZiAoIVN0cmluZy5wcm90b3R5cGUubm9ybWFsaXplKSB7DQogICAgICBTdHJpbmcucHJvdG90eXBlLm5vcm1hbGl6ZSA9IGZ1bmN0aW9uKGZvcm0pIHsNCiAgICAgICAgIHZhciBzdHIgPSAiIiArIHRoaXM7DQogICAgICAgICBmb3JtID0gIGZvcm0gPT09IHVuZGVmaW5lZCA/ICJORkMiIDogZm9ybTsNCg0KICAgICAgICAgaWYgKGZvcm0gPT09ICJORkMiKSB7DQogICAgICAgICAgICByZXR1cm4gdW5vcm0ubmZjKHN0cik7DQogICAgICAgICB9IGVsc2UgaWYgKGZvcm0gPT09ICJORkQiKSB7DQogICAgICAgICAgICByZXR1cm4gdW5vcm0ubmZkKHN0cik7DQogICAgICAgICB9IGVsc2UgaWYgKGZvcm0gPT09ICJORktDIikgew0KICAgICAgICAgICAgcmV0dXJuIHVub3JtLm5ma2Moc3RyKTsNCiAgICAgICAgIH0gZWxzZSBpZiAoZm9ybSA9PT0gIk5GS0QiKSB7DQogICAgICAgICAgICByZXR1cm4gdW5vcm0ubmZrZChzdHIpOw0KICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCJJbnZhbGlkIG5vcm1hbGl6YXRpb24gZm9ybTogIiArIGZvcm0pOw0KICAgICAgICAgfQ0KICAgICAgfTsNCg0KICAgICAgdW5vcm0uc2hpbUFwcGxpZWQgPSB0cnVlOw0KICAgfQ0KfSh0aGlzKSk7DQoNCn0se31dLDU4NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKGdsb2JhbCl7DQoNCi8qKg0KICogTW9kdWxlIGV4cG9ydHMuDQogKi8NCg0KbW9kdWxlLmV4cG9ydHMgPSBkZXByZWNhdGU7DQoNCi8qKg0KICogTWFyayB0aGF0IGEgbWV0aG9kIHNob3VsZCBub3QgYmUgdXNlZC4NCiAqIFJldHVybnMgYSBtb2RpZmllZCBmdW5jdGlvbiB3aGljaCB3YXJucyBvbmNlIGJ5IGRlZmF1bHQuDQogKg0KICogSWYgYGxvY2FsU3RvcmFnZS5ub0RlcHJlY2F0aW9uID0gdHJ1ZWAgaXMgc2V0LCB0aGVuIGl0IGlzIGEgbm8tb3AuDQogKg0KICogSWYgYGxvY2FsU3RvcmFnZS50aHJvd0RlcHJlY2F0aW9uID0gdHJ1ZWAgaXMgc2V0LCB0aGVuIGRlcHJlY2F0ZWQgZnVuY3Rpb25zDQogKiB3aWxsIHRocm93IGFuIEVycm9yIHdoZW4gaW52b2tlZC4NCiAqDQogKiBJZiBgbG9jYWxTdG9yYWdlLnRyYWNlRGVwcmVjYXRpb24gPSB0cnVlYCBpcyBzZXQsIHRoZW4gZGVwcmVjYXRlZCBmdW5jdGlvbnMNCiAqIHdpbGwgaW52b2tlIGBjb25zb2xlLnRyYWNlKClgIGluc3RlYWQgb2YgYGNvbnNvbGUuZXJyb3IoKWAuDQogKg0KICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gLSB0aGUgZnVuY3Rpb24gdG8gZGVwcmVjYXRlDQogKiBAcGFyYW0ge1N0cmluZ30gbXNnIC0gdGhlIHN0cmluZyB0byBwcmludCB0byB0aGUgY29uc29sZSB3aGVuIGBmbmAgaXMgaW52b2tlZA0KICogQHJldHVybnMge0Z1bmN0aW9ufSBhIG5ldyAiZGVwcmVjYXRlZCIgdmVyc2lvbiBvZiBgZm5gDQogKiBAYXBpIHB1YmxpYw0KICovDQoNCmZ1bmN0aW9uIGRlcHJlY2F0ZSAoZm4sIG1zZykgew0KICBpZiAoY29uZmlnKCdub0RlcHJlY2F0aW9uJykpIHsNCiAgICByZXR1cm4gZm47DQogIH0NCg0KICB2YXIgd2FybmVkID0gZmFsc2U7DQogIGZ1bmN0aW9uIGRlcHJlY2F0ZWQoKSB7DQogICAgaWYgKCF3YXJuZWQpIHsNCiAgICAgIGlmIChjb25maWcoJ3Rocm93RGVwcmVjYXRpb24nKSkgew0KICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTsNCiAgICAgIH0gZWxzZSBpZiAoY29uZmlnKCd0cmFjZURlcHJlY2F0aW9uJykpIHsNCiAgICAgICAgY29uc29sZS50cmFjZShtc2cpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgY29uc29sZS53YXJuKG1zZyk7DQogICAgICB9DQogICAgICB3YXJuZWQgPSB0cnVlOw0KICAgIH0NCiAgICByZXR1cm4gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsNCiAgfQ0KDQogIHJldHVybiBkZXByZWNhdGVkOw0KfQ0KDQovKioNCiAqIENoZWNrcyBgbG9jYWxTdG9yYWdlYCBmb3IgYm9vbGVhbiB2YWx1ZXMgZm9yIHRoZSBnaXZlbiBgbmFtZWAuDQogKg0KICogQHBhcmFtIHtTdHJpbmd9IG5hbWUNCiAqIEByZXR1cm5zIHtCb29sZWFufQ0KICogQGFwaSBwcml2YXRlDQogKi8NCg0KZnVuY3Rpb24gY29uZmlnIChuYW1lKSB7DQogIC8vIGFjY2Vzc2luZyBnbG9iYWwubG9jYWxTdG9yYWdlIGNhbiB0cmlnZ2VyIGEgRE9NRXhjZXB0aW9uIGluIHNhbmRib3hlZCBpZnJhbWVzDQogIHRyeSB7DQogICAgaWYgKCFnbG9iYWwubG9jYWxTdG9yYWdlKSByZXR1cm4gZmFsc2U7DQogIH0gY2F0Y2ggKF8pIHsNCiAgICByZXR1cm4gZmFsc2U7DQogIH0NCiAgdmFyIHZhbCA9IGdsb2JhbC5sb2NhbFN0b3JhZ2VbbmFtZV07DQogIGlmIChudWxsID09IHZhbCkgcmV0dXJuIGZhbHNlOw0KICByZXR1cm4gU3RyaW5nKHZhbCkudG9Mb3dlckNhc2UoKSA9PT0gJ3RydWUnOw0KfQ0KDQp9KS5jYWxsKHRoaXMsdHlwZW9mIGdsb2JhbCAhPT0gInVuZGVmaW5lZCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gInVuZGVmaW5lZCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gInVuZGVmaW5lZCIgPyB3aW5kb3cgOiB7fSkNCn0se31dLDU4NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQnVmZmVyKGFyZykgew0KICByZXR1cm4gYXJnICYmIHR5cGVvZiBhcmcgPT09ICdvYmplY3QnDQogICAgJiYgdHlwZW9mIGFyZy5jb3B5ID09PSAnZnVuY3Rpb24nDQogICAgJiYgdHlwZW9mIGFyZy5maWxsID09PSAnZnVuY3Rpb24nDQogICAgJiYgdHlwZW9mIGFyZy5yZWFkVUludDggPT09ICdmdW5jdGlvbic7DQp9DQp9LHt9XSw1ODg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KKGZ1bmN0aW9uIChwcm9jZXNzLGdsb2JhbCl7DQovLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy4NCi8vDQovLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYQ0KLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZQ0KLy8gIlNvZnR3YXJlIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZw0KLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLA0KLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdA0KLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlDQovLyBmb2xsb3dpbmcgY29uZGl0aW9uczoNCi8vDQovLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZA0KLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuDQovLw0KLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MNCi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YNCi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4NCi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLA0KLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SDQovLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFDQovLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLg0KDQp2YXIgZm9ybWF0UmVnRXhwID0gLyVbc2RqJV0vZzsNCmV4cG9ydHMuZm9ybWF0ID0gZnVuY3Rpb24oZikgew0KICBpZiAoIWlzU3RyaW5nKGYpKSB7DQogICAgdmFyIG9iamVjdHMgPSBbXTsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgew0KICAgICAgb2JqZWN0cy5wdXNoKGluc3BlY3QoYXJndW1lbnRzW2ldKSk7DQogICAgfQ0KICAgIHJldHVybiBvYmplY3RzLmpvaW4oJyAnKTsNCiAgfQ0KDQogIHZhciBpID0gMTsNCiAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7DQogIHZhciBsZW4gPSBhcmdzLmxlbmd0aDsNCiAgdmFyIHN0ciA9IFN0cmluZyhmKS5yZXBsYWNlKGZvcm1hdFJlZ0V4cCwgZnVuY3Rpb24oeCkgew0KICAgIGlmICh4ID09PSAnJSUnKSByZXR1cm4gJyUnOw0KICAgIGlmIChpID49IGxlbikgcmV0dXJuIHg7DQogICAgc3dpdGNoICh4KSB7DQogICAgICBjYXNlICclcyc6IHJldHVybiBTdHJpbmcoYXJnc1tpKytdKTsNCiAgICAgIGNhc2UgJyVkJzogcmV0dXJuIE51bWJlcihhcmdzW2krK10pOw0KICAgICAgY2FzZSAnJWonOg0KICAgICAgICB0cnkgew0KICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShhcmdzW2krK10pOw0KICAgICAgICB9IGNhdGNoIChfKSB7DQogICAgICAgICAgcmV0dXJuICdbQ2lyY3VsYXJdJzsNCiAgICAgICAgfQ0KICAgICAgZGVmYXVsdDoNCiAgICAgICAgcmV0dXJuIHg7DQogICAgfQ0KICB9KTsNCiAgZm9yICh2YXIgeCA9IGFyZ3NbaV07IGkgPCBsZW47IHggPSBhcmdzWysraV0pIHsNCiAgICBpZiAoaXNOdWxsKHgpIHx8ICFpc09iamVjdCh4KSkgew0KICAgICAgc3RyICs9ICcgJyArIHg7DQogICAgfSBlbHNlIHsNCiAgICAgIHN0ciArPSAnICcgKyBpbnNwZWN0KHgpOw0KICAgIH0NCiAgfQ0KICByZXR1cm4gc3RyOw0KfTsNCg0KDQovLyBNYXJrIHRoYXQgYSBtZXRob2Qgc2hvdWxkIG5vdCBiZSB1c2VkLg0KLy8gUmV0dXJucyBhIG1vZGlmaWVkIGZ1bmN0aW9uIHdoaWNoIHdhcm5zIG9uY2UgYnkgZGVmYXVsdC4NCi8vIElmIC0tbm8tZGVwcmVjYXRpb24gaXMgc2V0LCB0aGVuIGl0IGlzIGEgbm8tb3AuDQpleHBvcnRzLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKGZuLCBtc2cpIHsNCiAgLy8gQWxsb3cgZm9yIGRlcHJlY2F0aW5nIHRoaW5ncyBpbiB0aGUgcHJvY2VzcyBvZiBzdGFydGluZyB1cC4NCiAgaWYgKGlzVW5kZWZpbmVkKGdsb2JhbC5wcm9jZXNzKSkgew0KICAgIHJldHVybiBmdW5jdGlvbigpIHsNCiAgICAgIHJldHVybiBleHBvcnRzLmRlcHJlY2F0ZShmbiwgbXNnKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOw0KICAgIH07DQogIH0NCg0KICBpZiAocHJvY2Vzcy5ub0RlcHJlY2F0aW9uID09PSB0cnVlKSB7DQogICAgcmV0dXJuIGZuOw0KICB9DQoNCiAgdmFyIHdhcm5lZCA9IGZhbHNlOw0KICBmdW5jdGlvbiBkZXByZWNhdGVkKCkgew0KICAgIGlmICghd2FybmVkKSB7DQogICAgICBpZiAocHJvY2Vzcy50aHJvd0RlcHJlY2F0aW9uKSB7DQogICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpOw0KICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLnRyYWNlRGVwcmVjYXRpb24pIHsNCiAgICAgICAgY29uc29sZS50cmFjZShtc2cpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgY29uc29sZS5lcnJvcihtc2cpOw0KICAgICAgfQ0KICAgICAgd2FybmVkID0gdHJ1ZTsNCiAgICB9DQogICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7DQogIH0NCg0KICByZXR1cm4gZGVwcmVjYXRlZDsNCn07DQoNCg0KdmFyIGRlYnVncyA9IHt9Ow0KdmFyIGRlYnVnRW52aXJvbjsNCmV4cG9ydHMuZGVidWdsb2cgPSBmdW5jdGlvbihzZXQpIHsNCiAgaWYgKGlzVW5kZWZpbmVkKGRlYnVnRW52aXJvbikpDQogICAgZGVidWdFbnZpcm9uID0gcHJvY2Vzcy5lbnYuTk9ERV9ERUJVRyB8fCAnJzsNCiAgc2V0ID0gc2V0LnRvVXBwZXJDYXNlKCk7DQogIGlmICghZGVidWdzW3NldF0pIHsNCiAgICBpZiAobmV3IFJlZ0V4cCgnXFxiJyArIHNldCArICdcXGInLCAnaScpLnRlc3QoZGVidWdFbnZpcm9uKSkgew0KICAgICAgdmFyIHBpZCA9IHByb2Nlc3MucGlkOw0KICAgICAgZGVidWdzW3NldF0gPSBmdW5jdGlvbigpIHsNCiAgICAgICAgdmFyIG1zZyA9IGV4cG9ydHMuZm9ybWF0LmFwcGx5KGV4cG9ydHMsIGFyZ3VtZW50cyk7DQogICAgICAgIGNvbnNvbGUuZXJyb3IoJyVzICVkOiAlcycsIHNldCwgcGlkLCBtc2cpOw0KICAgICAgfTsNCiAgICB9IGVsc2Ugew0KICAgICAgZGVidWdzW3NldF0gPSBmdW5jdGlvbigpIHt9Ow0KICAgIH0NCiAgfQ0KICByZXR1cm4gZGVidWdzW3NldF07DQp9Ow0KDQoNCi8qKg0KICogRWNob3MgdGhlIHZhbHVlIG9mIGEgdmFsdWUuIFRyeXMgdG8gcHJpbnQgdGhlIHZhbHVlIG91dA0KICogaW4gdGhlIGJlc3Qgd2F5IHBvc3NpYmxlIGdpdmVuIHRoZSBkaWZmZXJlbnQgdHlwZXMuDQogKg0KICogQHBhcmFtIHtPYmplY3R9IG9iaiBUaGUgb2JqZWN0IHRvIHByaW50IG91dC4NCiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzIE9wdGlvbmFsIG9wdGlvbnMgb2JqZWN0IHRoYXQgYWx0ZXJzIHRoZSBvdXRwdXQuDQogKi8NCi8qIGxlZ2FjeTogb2JqLCBzaG93SGlkZGVuLCBkZXB0aCwgY29sb3JzKi8NCmZ1bmN0aW9uIGluc3BlY3Qob2JqLCBvcHRzKSB7DQogIC8vIGRlZmF1bHQgb3B0aW9ucw0KICB2YXIgY3R4ID0gew0KICAgIHNlZW46IFtdLA0KICAgIHN0eWxpemU6IHN0eWxpemVOb0NvbG9yDQogIH07DQogIC8vIGxlZ2FjeS4uLg0KICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+PSAzKSBjdHguZGVwdGggPSBhcmd1bWVudHNbMl07DQogIGlmIChhcmd1bWVudHMubGVuZ3RoID49IDQpIGN0eC5jb2xvcnMgPSBhcmd1bWVudHNbM107DQogIGlmIChpc0Jvb2xlYW4ob3B0cykpIHsNCiAgICAvLyBsZWdhY3kuLi4NCiAgICBjdHguc2hvd0hpZGRlbiA9IG9wdHM7DQogIH0gZWxzZSBpZiAob3B0cykgew0KICAgIC8vIGdvdCBhbiAib3B0aW9ucyIgb2JqZWN0DQogICAgZXhwb3J0cy5fZXh0ZW5kKGN0eCwgb3B0cyk7DQogIH0NCiAgLy8gc2V0IGRlZmF1bHQgb3B0aW9ucw0KICBpZiAoaXNVbmRlZmluZWQoY3R4LnNob3dIaWRkZW4pKSBjdHguc2hvd0hpZGRlbiA9IGZhbHNlOw0KICBpZiAoaXNVbmRlZmluZWQoY3R4LmRlcHRoKSkgY3R4LmRlcHRoID0gMjsNCiAgaWYgKGlzVW5kZWZpbmVkKGN0eC5jb2xvcnMpKSBjdHguY29sb3JzID0gZmFsc2U7DQogIGlmIChpc1VuZGVmaW5lZChjdHguY3VzdG9tSW5zcGVjdCkpIGN0eC5jdXN0b21JbnNwZWN0ID0gdHJ1ZTsNCiAgaWYgKGN0eC5jb2xvcnMpIGN0eC5zdHlsaXplID0gc3R5bGl6ZVdpdGhDb2xvcjsNCiAgcmV0dXJuIGZvcm1hdFZhbHVlKGN0eCwgb2JqLCBjdHguZGVwdGgpOw0KfQ0KZXhwb3J0cy5pbnNwZWN0ID0gaW5zcGVjdDsNCg0KDQovLyBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0FOU0lfZXNjYXBlX2NvZGUjZ3JhcGhpY3MNCmluc3BlY3QuY29sb3JzID0gew0KICAnYm9sZCcgOiBbMSwgMjJdLA0KICAnaXRhbGljJyA6IFszLCAyM10sDQogICd1bmRlcmxpbmUnIDogWzQsIDI0XSwNCiAgJ2ludmVyc2UnIDogWzcsIDI3XSwNCiAgJ3doaXRlJyA6IFszNywgMzldLA0KICAnZ3JleScgOiBbOTAsIDM5XSwNCiAgJ2JsYWNrJyA6IFszMCwgMzldLA0KICAnYmx1ZScgOiBbMzQsIDM5XSwNCiAgJ2N5YW4nIDogWzM2LCAzOV0sDQogICdncmVlbicgOiBbMzIsIDM5XSwNCiAgJ21hZ2VudGEnIDogWzM1LCAzOV0sDQogICdyZWQnIDogWzMxLCAzOV0sDQogICd5ZWxsb3cnIDogWzMzLCAzOV0NCn07DQoNCi8vIERvbid0IHVzZSAnYmx1ZScgbm90IHZpc2libGUgb24gY21kLmV4ZQ0KaW5zcGVjdC5zdHlsZXMgPSB7DQogICdzcGVjaWFsJzogJ2N5YW4nLA0KICAnbnVtYmVyJzogJ3llbGxvdycsDQogICdib29sZWFuJzogJ3llbGxvdycsDQogICd1bmRlZmluZWQnOiAnZ3JleScsDQogICdudWxsJzogJ2JvbGQnLA0KICAnc3RyaW5nJzogJ2dyZWVuJywNCiAgJ2RhdGUnOiAnbWFnZW50YScsDQogIC8vICJuYW1lIjogaW50ZW50aW9uYWxseSBub3Qgc3R5bGluZw0KICAncmVnZXhwJzogJ3JlZCcNCn07DQoNCg0KZnVuY3Rpb24gc3R5bGl6ZVdpdGhDb2xvcihzdHIsIHN0eWxlVHlwZSkgew0KICB2YXIgc3R5bGUgPSBpbnNwZWN0LnN0eWxlc1tzdHlsZVR5cGVdOw0KDQogIGlmIChzdHlsZSkgew0KICAgIHJldHVybiAnXHUwMDFiWycgKyBpbnNwZWN0LmNvbG9yc1tzdHlsZV1bMF0gKyAnbScgKyBzdHIgKw0KICAgICAgICAgICAnXHUwMDFiWycgKyBpbnNwZWN0LmNvbG9yc1tzdHlsZV1bMV0gKyAnbSc7DQogIH0gZWxzZSB7DQogICAgcmV0dXJuIHN0cjsNCiAgfQ0KfQ0KDQoNCmZ1bmN0aW9uIHN0eWxpemVOb0NvbG9yKHN0ciwgc3R5bGVUeXBlKSB7DQogIHJldHVybiBzdHI7DQp9DQoNCg0KZnVuY3Rpb24gYXJyYXlUb0hhc2goYXJyYXkpIHsNCiAgdmFyIGhhc2ggPSB7fTsNCg0KICBhcnJheS5mb3JFYWNoKGZ1bmN0aW9uKHZhbCwgaWR4KSB7DQogICAgaGFzaFt2YWxdID0gdHJ1ZTsNCiAgfSk7DQoNCiAgcmV0dXJuIGhhc2g7DQp9DQoNCg0KZnVuY3Rpb24gZm9ybWF0VmFsdWUoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzKSB7DQogIC8vIFByb3ZpZGUgYSBob29rIGZvciB1c2VyLXNwZWNpZmllZCBpbnNwZWN0IGZ1bmN0aW9ucy4NCiAgLy8gQ2hlY2sgdGhhdCB2YWx1ZSBpcyBhbiBvYmplY3Qgd2l0aCBhbiBpbnNwZWN0IGZ1bmN0aW9uIG9uIGl0DQogIGlmIChjdHguY3VzdG9tSW5zcGVjdCAmJg0KICAgICAgdmFsdWUgJiYNCiAgICAgIGlzRnVuY3Rpb24odmFsdWUuaW5zcGVjdCkgJiYNCiAgICAgIC8vIEZpbHRlciBvdXQgdGhlIHV0aWwgbW9kdWxlLCBpdCdzIGluc3BlY3QgZnVuY3Rpb24gaXMgc3BlY2lhbA0KICAgICAgdmFsdWUuaW5zcGVjdCAhPT0gZXhwb3J0cy5pbnNwZWN0ICYmDQogICAgICAvLyBBbHNvIGZpbHRlciBvdXQgYW55IHByb3RvdHlwZSBvYmplY3RzIHVzaW5nIHRoZSBjaXJjdWxhciBjaGVjay4NCiAgICAgICEodmFsdWUuY29uc3RydWN0b3IgJiYgdmFsdWUuY29uc3RydWN0b3IucHJvdG90eXBlID09PSB2YWx1ZSkpIHsNCiAgICB2YXIgcmV0ID0gdmFsdWUuaW5zcGVjdChyZWN1cnNlVGltZXMsIGN0eCk7DQogICAgaWYgKCFpc1N0cmluZyhyZXQpKSB7DQogICAgICByZXQgPSBmb3JtYXRWYWx1ZShjdHgsIHJldCwgcmVjdXJzZVRpbWVzKTsNCiAgICB9DQogICAgcmV0dXJuIHJldDsNCiAgfQ0KDQogIC8vIFByaW1pdGl2ZSB0eXBlcyBjYW5ub3QgaGF2ZSBwcm9wZXJ0aWVzDQogIHZhciBwcmltaXRpdmUgPSBmb3JtYXRQcmltaXRpdmUoY3R4LCB2YWx1ZSk7DQogIGlmIChwcmltaXRpdmUpIHsNCiAgICByZXR1cm4gcHJpbWl0aXZlOw0KICB9DQoNCiAgLy8gTG9vayB1cCB0aGUga2V5cyBvZiB0aGUgb2JqZWN0Lg0KICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKTsNCiAgdmFyIHZpc2libGVLZXlzID0gYXJyYXlUb0hhc2goa2V5cyk7DQoNCiAgaWYgKGN0eC5zaG93SGlkZGVuKSB7DQogICAga2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHZhbHVlKTsNCiAgfQ0KDQogIC8vIElFIGRvZXNuJ3QgbWFrZSBlcnJvciBmaWVsZHMgbm9uLWVudW1lcmFibGUNCiAgLy8gaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL2R3dzUyc2J0KHY9dnMuOTQpLmFzcHgNCiAgaWYgKGlzRXJyb3IodmFsdWUpDQogICAgICAmJiAoa2V5cy5pbmRleE9mKCdtZXNzYWdlJykgPj0gMCB8fCBrZXlzLmluZGV4T2YoJ2Rlc2NyaXB0aW9uJykgPj0gMCkpIHsNCiAgICByZXR1cm4gZm9ybWF0RXJyb3IodmFsdWUpOw0KICB9DQoNCiAgLy8gU29tZSB0eXBlIG9mIG9iamVjdCB3aXRob3V0IHByb3BlcnRpZXMgY2FuIGJlIHNob3J0Y3V0dGVkLg0KICBpZiAoa2V5cy5sZW5ndGggPT09IDApIHsNCiAgICBpZiAoaXNGdW5jdGlvbih2YWx1ZSkpIHsNCiAgICAgIHZhciBuYW1lID0gdmFsdWUubmFtZSA/ICc6ICcgKyB2YWx1ZS5uYW1lIDogJyc7DQogICAgICByZXR1cm4gY3R4LnN0eWxpemUoJ1tGdW5jdGlvbicgKyBuYW1lICsgJ10nLCAnc3BlY2lhbCcpOw0KICAgIH0NCiAgICBpZiAoaXNSZWdFeHAodmFsdWUpKSB7DQogICAgICByZXR1cm4gY3R4LnN0eWxpemUoUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSwgJ3JlZ2V4cCcpOw0KICAgIH0NCiAgICBpZiAoaXNEYXRlKHZhbHVlKSkgew0KICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLCAnZGF0ZScpOw0KICAgIH0NCiAgICBpZiAoaXNFcnJvcih2YWx1ZSkpIHsNCiAgICAgIHJldHVybiBmb3JtYXRFcnJvcih2YWx1ZSk7DQogICAgfQ0KICB9DQoNCiAgdmFyIGJhc2UgPSAnJywgYXJyYXkgPSBmYWxzZSwgYnJhY2VzID0gWyd7JywgJ30nXTsNCg0KICAvLyBNYWtlIEFycmF5IHNheSB0aGF0IHRoZXkgYXJlIEFycmF5DQogIGlmIChpc0FycmF5KHZhbHVlKSkgew0KICAgIGFycmF5ID0gdHJ1ZTsNCiAgICBicmFjZXMgPSBbJ1snLCAnXSddOw0KICB9DQoNCiAgLy8gTWFrZSBmdW5jdGlvbnMgc2F5IHRoYXQgdGhleSBhcmUgZnVuY3Rpb25zDQogIGlmIChpc0Z1bmN0aW9uKHZhbHVlKSkgew0KICAgIHZhciBuID0gdmFsdWUubmFtZSA/ICc6ICcgKyB2YWx1ZS5uYW1lIDogJyc7DQogICAgYmFzZSA9ICcgW0Z1bmN0aW9uJyArIG4gKyAnXSc7DQogIH0NCg0KICAvLyBNYWtlIFJlZ0V4cHMgc2F5IHRoYXQgdGhleSBhcmUgUmVnRXhwcw0KICBpZiAoaXNSZWdFeHAodmFsdWUpKSB7DQogICAgYmFzZSA9ICcgJyArIFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSk7DQogIH0NCg0KICAvLyBNYWtlIGRhdGVzIHdpdGggcHJvcGVydGllcyBmaXJzdCBzYXkgdGhlIGRhdGUNCiAgaWYgKGlzRGF0ZSh2YWx1ZSkpIHsNCiAgICBiYXNlID0gJyAnICsgRGF0ZS5wcm90b3R5cGUudG9VVENTdHJpbmcuY2FsbCh2YWx1ZSk7DQogIH0NCg0KICAvLyBNYWtlIGVycm9yIHdpdGggbWVzc2FnZSBmaXJzdCBzYXkgdGhlIGVycm9yDQogIGlmIChpc0Vycm9yKHZhbHVlKSkgew0KICAgIGJhc2UgPSAnICcgKyBmb3JtYXRFcnJvcih2YWx1ZSk7DQogIH0NCg0KICBpZiAoa2V5cy5sZW5ndGggPT09IDAgJiYgKCFhcnJheSB8fCB2YWx1ZS5sZW5ndGggPT0gMCkpIHsNCiAgICByZXR1cm4gYnJhY2VzWzBdICsgYmFzZSArIGJyYWNlc1sxXTsNCiAgfQ0KDQogIGlmIChyZWN1cnNlVGltZXMgPCAwKSB7DQogICAgaWYgKGlzUmVnRXhwKHZhbHVlKSkgew0KICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSksICdyZWdleHAnKTsNCiAgICB9IGVsc2Ugew0KICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKCdbT2JqZWN0XScsICdzcGVjaWFsJyk7DQogICAgfQ0KICB9DQoNCiAgY3R4LnNlZW4ucHVzaCh2YWx1ZSk7DQoNCiAgdmFyIG91dHB1dDsNCiAgaWYgKGFycmF5KSB7DQogICAgb3V0cHV0ID0gZm9ybWF0QXJyYXkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cywga2V5cyk7DQogIH0gZWxzZSB7DQogICAgb3V0cHV0ID0ga2V5cy5tYXAoZnVuY3Rpb24oa2V5KSB7DQogICAgICByZXR1cm4gZm9ybWF0UHJvcGVydHkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cywga2V5LCBhcnJheSk7DQogICAgfSk7DQogIH0NCg0KICBjdHguc2Vlbi5wb3AoKTsNCg0KICByZXR1cm4gcmVkdWNlVG9TaW5nbGVTdHJpbmcob3V0cHV0LCBiYXNlLCBicmFjZXMpOw0KfQ0KDQoNCmZ1bmN0aW9uIGZvcm1hdFByaW1pdGl2ZShjdHgsIHZhbHVlKSB7DQogIGlmIChpc1VuZGVmaW5lZCh2YWx1ZSkpDQogICAgcmV0dXJuIGN0eC5zdHlsaXplKCd1bmRlZmluZWQnLCAndW5kZWZpbmVkJyk7DQogIGlmIChpc1N0cmluZyh2YWx1ZSkpIHsNCiAgICB2YXIgc2ltcGxlID0gJ1wnJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKS5yZXBsYWNlKC9eInwiJC9nLCAnJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8nL2csICJcXCciKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcIi9nLCAnIicpICsgJ1wnJzsNCiAgICByZXR1cm4gY3R4LnN0eWxpemUoc2ltcGxlLCAnc3RyaW5nJyk7DQogIH0NCiAgaWYgKGlzTnVtYmVyKHZhbHVlKSkNCiAgICByZXR1cm4gY3R4LnN0eWxpemUoJycgKyB2YWx1ZSwgJ251bWJlcicpOw0KICBpZiAoaXNCb29sZWFuKHZhbHVlKSkNCiAgICByZXR1cm4gY3R4LnN0eWxpemUoJycgKyB2YWx1ZSwgJ2Jvb2xlYW4nKTsNCiAgLy8gRm9yIHNvbWUgcmVhc29uIHR5cGVvZiBudWxsIGlzICJvYmplY3QiLCBzbyBzcGVjaWFsIGNhc2UgaGVyZS4NCiAgaWYgKGlzTnVsbCh2YWx1ZSkpDQogICAgcmV0dXJuIGN0eC5zdHlsaXplKCdudWxsJywgJ251bGwnKTsNCn0NCg0KDQpmdW5jdGlvbiBmb3JtYXRFcnJvcih2YWx1ZSkgew0KICByZXR1cm4gJ1snICsgRXJyb3IucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpICsgJ10nOw0KfQ0KDQoNCmZ1bmN0aW9uIGZvcm1hdEFycmF5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsIGtleXMpIHsNCiAgdmFyIG91dHB1dCA9IFtdOw0KICBmb3IgKHZhciBpID0gMCwgbCA9IHZhbHVlLmxlbmd0aDsgaSA8IGw7ICsraSkgew0KICAgIGlmIChoYXNPd25Qcm9wZXJ0eSh2YWx1ZSwgU3RyaW5nKGkpKSkgew0KICAgICAgb3V0cHV0LnB1c2goZm9ybWF0UHJvcGVydHkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cywNCiAgICAgICAgICBTdHJpbmcoaSksIHRydWUpKTsNCiAgICB9IGVsc2Ugew0KICAgICAgb3V0cHV0LnB1c2goJycpOw0KICAgIH0NCiAgfQ0KICBrZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7DQogICAgaWYgKCFrZXkubWF0Y2goL15cZCskLykpIHsNCiAgICAgIG91dHB1dC5wdXNoKGZvcm1hdFByb3BlcnR5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsDQogICAgICAgICAga2V5LCB0cnVlKSk7DQogICAgfQ0KICB9KTsNCiAgcmV0dXJuIG91dHB1dDsNCn0NCg0KDQpmdW5jdGlvbiBmb3JtYXRQcm9wZXJ0eShjdHgsIHZhbHVlLCByZWN1cnNlVGltZXMsIHZpc2libGVLZXlzLCBrZXksIGFycmF5KSB7DQogIHZhciBuYW1lLCBzdHIsIGRlc2M7DQogIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHZhbHVlLCBrZXkpIHx8IHsgdmFsdWU6IHZhbHVlW2tleV0gfTsNCiAgaWYgKGRlc2MuZ2V0KSB7DQogICAgaWYgKGRlc2Muc2V0KSB7DQogICAgICBzdHIgPSBjdHguc3R5bGl6ZSgnW0dldHRlci9TZXR0ZXJdJywgJ3NwZWNpYWwnKTsNCiAgICB9IGVsc2Ugew0KICAgICAgc3RyID0gY3R4LnN0eWxpemUoJ1tHZXR0ZXJdJywgJ3NwZWNpYWwnKTsNCiAgICB9DQogIH0gZWxzZSB7DQogICAgaWYgKGRlc2Muc2V0KSB7DQogICAgICBzdHIgPSBjdHguc3R5bGl6ZSgnW1NldHRlcl0nLCAnc3BlY2lhbCcpOw0KICAgIH0NCiAgfQ0KICBpZiAoIWhhc093blByb3BlcnR5KHZpc2libGVLZXlzLCBrZXkpKSB7DQogICAgbmFtZSA9ICdbJyArIGtleSArICddJzsNCiAgfQ0KICBpZiAoIXN0cikgew0KICAgIGlmIChjdHguc2Vlbi5pbmRleE9mKGRlc2MudmFsdWUpIDwgMCkgew0KICAgICAgaWYgKGlzTnVsbChyZWN1cnNlVGltZXMpKSB7DQogICAgICAgIHN0ciA9IGZvcm1hdFZhbHVlKGN0eCwgZGVzYy52YWx1ZSwgbnVsbCk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICBzdHIgPSBmb3JtYXRWYWx1ZShjdHgsIGRlc2MudmFsdWUsIHJlY3Vyc2VUaW1lcyAtIDEpOw0KICAgICAgfQ0KICAgICAgaWYgKHN0ci5pbmRleE9mKCdcbicpID4gLTEpIHsNCiAgICAgICAgaWYgKGFycmF5KSB7DQogICAgICAgICAgc3RyID0gc3RyLnNwbGl0KCdcbicpLm1hcChmdW5jdGlvbihsaW5lKSB7DQogICAgICAgICAgICByZXR1cm4gJyAgJyArIGxpbmU7DQogICAgICAgICAgfSkuam9pbignXG4nKS5zdWJzdHIoMik7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgc3RyID0gJ1xuJyArIHN0ci5zcGxpdCgnXG4nKS5tYXAoZnVuY3Rpb24obGluZSkgew0KICAgICAgICAgICAgcmV0dXJuICcgICAnICsgbGluZTsNCiAgICAgICAgICB9KS5qb2luKCdcbicpOw0KICAgICAgICB9DQogICAgICB9DQogICAgfSBlbHNlIHsNCiAgICAgIHN0ciA9IGN0eC5zdHlsaXplKCdbQ2lyY3VsYXJdJywgJ3NwZWNpYWwnKTsNCiAgICB9DQogIH0NCiAgaWYgKGlzVW5kZWZpbmVkKG5hbWUpKSB7DQogICAgaWYgKGFycmF5ICYmIGtleS5tYXRjaCgvXlxkKyQvKSkgew0KICAgICAgcmV0dXJuIHN0cjsNCiAgICB9DQogICAgbmFtZSA9IEpTT04uc3RyaW5naWZ5KCcnICsga2V5KTsNCiAgICBpZiAobmFtZS5tYXRjaCgvXiIoW2EtekEtWl9dW2EtekEtWl8wLTldKikiJC8pKSB7DQogICAgICBuYW1lID0gbmFtZS5zdWJzdHIoMSwgbmFtZS5sZW5ndGggLSAyKTsNCiAgICAgIG5hbWUgPSBjdHguc3R5bGl6ZShuYW1lLCAnbmFtZScpOw0KICAgIH0gZWxzZSB7DQogICAgICBuYW1lID0gbmFtZS5yZXBsYWNlKC8nL2csICJcXCciKQ0KICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFwiL2csICciJykNCiAgICAgICAgICAgICAgICAgLnJlcGxhY2UoLyheInwiJCkvZywgIiciKTsNCiAgICAgIG5hbWUgPSBjdHguc3R5bGl6ZShuYW1lLCAnc3RyaW5nJyk7DQogICAgfQ0KICB9DQoNCiAgcmV0dXJuIG5hbWUgKyAnOiAnICsgc3RyOw0KfQ0KDQoNCmZ1bmN0aW9uIHJlZHVjZVRvU2luZ2xlU3RyaW5nKG91dHB1dCwgYmFzZSwgYnJhY2VzKSB7DQogIHZhciBudW1MaW5lc0VzdCA9IDA7DQogIHZhciBsZW5ndGggPSBvdXRwdXQucmVkdWNlKGZ1bmN0aW9uKHByZXYsIGN1cikgew0KICAgIG51bUxpbmVzRXN0Kys7DQogICAgaWYgKGN1ci5pbmRleE9mKCdcbicpID49IDApIG51bUxpbmVzRXN0Kys7DQogICAgcmV0dXJuIHByZXYgKyBjdXIucmVwbGFjZSgvXHUwMDFiXFtcZFxkP20vZywgJycpLmxlbmd0aCArIDE7DQogIH0sIDApOw0KDQogIGlmIChsZW5ndGggPiA2MCkgew0KICAgIHJldHVybiBicmFjZXNbMF0gKw0KICAgICAgICAgICAoYmFzZSA9PT0gJycgPyAnJyA6IGJhc2UgKyAnXG4gJykgKw0KICAgICAgICAgICAnICcgKw0KICAgICAgICAgICBvdXRwdXQuam9pbignLFxuICAnKSArDQogICAgICAgICAgICcgJyArDQogICAgICAgICAgIGJyYWNlc1sxXTsNCiAgfQ0KDQogIHJldHVybiBicmFjZXNbMF0gKyBiYXNlICsgJyAnICsgb3V0cHV0LmpvaW4oJywgJykgKyAnICcgKyBicmFjZXNbMV07DQp9DQoNCg0KLy8gTk9URTogVGhlc2UgdHlwZSBjaGVja2luZyBmdW5jdGlvbnMgaW50ZW50aW9uYWxseSBkb24ndCB1c2UgYGluc3RhbmNlb2ZgDQovLyBiZWNhdXNlIGl0IGlzIGZyYWdpbGUgYW5kIGNhbiBiZSBlYXNpbHkgZmFrZWQgd2l0aCBgT2JqZWN0LmNyZWF0ZSgpYC4NCmZ1bmN0aW9uIGlzQXJyYXkoYXIpIHsNCiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYXIpOw0KfQ0KZXhwb3J0cy5pc0FycmF5ID0gaXNBcnJheTsNCg0KZnVuY3Rpb24gaXNCb29sZWFuKGFyZykgew0KICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ2Jvb2xlYW4nOw0KfQ0KZXhwb3J0cy5pc0Jvb2xlYW4gPSBpc0Jvb2xlYW47DQoNCmZ1bmN0aW9uIGlzTnVsbChhcmcpIHsNCiAgcmV0dXJuIGFyZyA9PT0gbnVsbDsNCn0NCmV4cG9ydHMuaXNOdWxsID0gaXNOdWxsOw0KDQpmdW5jdGlvbiBpc051bGxPclVuZGVmaW5lZChhcmcpIHsNCiAgcmV0dXJuIGFyZyA9PSBudWxsOw0KfQ0KZXhwb3J0cy5pc051bGxPclVuZGVmaW5lZCA9IGlzTnVsbE9yVW5kZWZpbmVkOw0KDQpmdW5jdGlvbiBpc051bWJlcihhcmcpIHsNCiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdudW1iZXInOw0KfQ0KZXhwb3J0cy5pc051bWJlciA9IGlzTnVtYmVyOw0KDQpmdW5jdGlvbiBpc1N0cmluZyhhcmcpIHsNCiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnOw0KfQ0KZXhwb3J0cy5pc1N0cmluZyA9IGlzU3RyaW5nOw0KDQpmdW5jdGlvbiBpc1N5bWJvbChhcmcpIHsNCiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdzeW1ib2wnOw0KfQ0KZXhwb3J0cy5pc1N5bWJvbCA9IGlzU3ltYm9sOw0KDQpmdW5jdGlvbiBpc1VuZGVmaW5lZChhcmcpIHsNCiAgcmV0dXJuIGFyZyA9PT0gdm9pZCAwOw0KfQ0KZXhwb3J0cy5pc1VuZGVmaW5lZCA9IGlzVW5kZWZpbmVkOw0KDQpmdW5jdGlvbiBpc1JlZ0V4cChyZSkgew0KICByZXR1cm4gaXNPYmplY3QocmUpICYmIG9iamVjdFRvU3RyaW5nKHJlKSA9PT0gJ1tvYmplY3QgUmVnRXhwXSc7DQp9DQpleHBvcnRzLmlzUmVnRXhwID0gaXNSZWdFeHA7DQoNCmZ1bmN0aW9uIGlzT2JqZWN0KGFyZykgew0KICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ29iamVjdCcgJiYgYXJnICE9PSBudWxsOw0KfQ0KZXhwb3J0cy5pc09iamVjdCA9IGlzT2JqZWN0Ow0KDQpmdW5jdGlvbiBpc0RhdGUoZCkgew0KICByZXR1cm4gaXNPYmplY3QoZCkgJiYgb2JqZWN0VG9TdHJpbmcoZCkgPT09ICdbb2JqZWN0IERhdGVdJzsNCn0NCmV4cG9ydHMuaXNEYXRlID0gaXNEYXRlOw0KDQpmdW5jdGlvbiBpc0Vycm9yKGUpIHsNCiAgcmV0dXJuIGlzT2JqZWN0KGUpICYmDQogICAgICAob2JqZWN0VG9TdHJpbmcoZSkgPT09ICdbb2JqZWN0IEVycm9yXScgfHwgZSBpbnN0YW5jZW9mIEVycm9yKTsNCn0NCmV4cG9ydHMuaXNFcnJvciA9IGlzRXJyb3I7DQoNCmZ1bmN0aW9uIGlzRnVuY3Rpb24oYXJnKSB7DQogIHJldHVybiB0eXBlb2YgYXJnID09PSAnZnVuY3Rpb24nOw0KfQ0KZXhwb3J0cy5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjsNCg0KZnVuY3Rpb24gaXNQcmltaXRpdmUoYXJnKSB7DQogIHJldHVybiBhcmcgPT09IG51bGwgfHwNCiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdib29sZWFuJyB8fA0KICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ251bWJlcicgfHwNCiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnIHx8DQogICAgICAgICB0eXBlb2YgYXJnID09PSAnc3ltYm9sJyB8fCAgLy8gRVM2IHN5bWJvbA0KICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3VuZGVmaW5lZCc7DQp9DQpleHBvcnRzLmlzUHJpbWl0aXZlID0gaXNQcmltaXRpdmU7DQoNCmV4cG9ydHMuaXNCdWZmZXIgPSByZXF1aXJlKCcuL3N1cHBvcnQvaXNCdWZmZXInKTsNCg0KZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcobykgew0KICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pOw0KfQ0KDQoNCmZ1bmN0aW9uIHBhZChuKSB7DQogIHJldHVybiBuIDwgMTAgPyAnMCcgKyBuLnRvU3RyaW5nKDEwKSA6IG4udG9TdHJpbmcoMTApOw0KfQ0KDQoNCnZhciBtb250aHMgPSBbJ0phbicsICdGZWInLCAnTWFyJywgJ0FwcicsICdNYXknLCAnSnVuJywgJ0p1bCcsICdBdWcnLCAnU2VwJywNCiAgICAgICAgICAgICAgJ09jdCcsICdOb3YnLCAnRGVjJ107DQoNCi8vIDI2IEZlYiAxNjoxOTozNA0KZnVuY3Rpb24gdGltZXN0YW1wKCkgew0KICB2YXIgZCA9IG5ldyBEYXRlKCk7DQogIHZhciB0aW1lID0gW3BhZChkLmdldEhvdXJzKCkpLA0KICAgICAgICAgICAgICBwYWQoZC5nZXRNaW51dGVzKCkpLA0KICAgICAgICAgICAgICBwYWQoZC5nZXRTZWNvbmRzKCkpXS5qb2luKCc6Jyk7DQogIHJldHVybiBbZC5nZXREYXRlKCksIG1vbnRoc1tkLmdldE1vbnRoKCldLCB0aW1lXS5qb2luKCcgJyk7DQp9DQoNCg0KLy8gbG9nIGlzIGp1c3QgYSB0aGluIHdyYXBwZXIgdG8gY29uc29sZS5sb2cgdGhhdCBwcmVwZW5kcyBhIHRpbWVzdGFtcA0KZXhwb3J0cy5sb2cgPSBmdW5jdGlvbigpIHsNCiAgY29uc29sZS5sb2coJyVzIC0gJXMnLCB0aW1lc3RhbXAoKSwgZXhwb3J0cy5mb3JtYXQuYXBwbHkoZXhwb3J0cywgYXJndW1lbnRzKSk7DQp9Ow0KDQoNCi8qKg0KICogSW5oZXJpdCB0aGUgcHJvdG90eXBlIG1ldGhvZHMgZnJvbSBvbmUgY29uc3RydWN0b3IgaW50byBhbm90aGVyLg0KICoNCiAqIFRoZSBGdW5jdGlvbi5wcm90b3R5cGUuaW5oZXJpdHMgZnJvbSBsYW5nLmpzIHJld3JpdHRlbiBhcyBhIHN0YW5kYWxvbmUNCiAqIGZ1bmN0aW9uIChub3Qgb24gRnVuY3Rpb24ucHJvdG90eXBlKS4gTk9URTogSWYgdGhpcyBmaWxlIGlzIHRvIGJlIGxvYWRlZA0KICogZHVyaW5nIGJvb3RzdHJhcHBpbmcgdGhpcyBmdW5jdGlvbiBuZWVkcyB0byBiZSByZXdyaXR0ZW4gdXNpbmcgc29tZSBuYXRpdmUNCiAqIGZ1bmN0aW9ucyBhcyBwcm90b3R5cGUgc2V0dXAgdXNpbmcgbm9ybWFsIEphdmFTY3JpcHQgZG9lcyBub3Qgd29yayBhcw0KICogZXhwZWN0ZWQgZHVyaW5nIGJvb3RzdHJhcHBpbmcgKHNlZSBtaXJyb3IuanMgaW4gcjExNDkwMykuDQogKg0KICogQHBhcmFtIHtmdW5jdGlvbn0gY3RvciBDb25zdHJ1Y3RvciBmdW5jdGlvbiB3aGljaCBuZWVkcyB0byBpbmhlcml0IHRoZQ0KICogICAgIHByb3RvdHlwZS4NCiAqIEBwYXJhbSB7ZnVuY3Rpb259IHN1cGVyQ3RvciBDb25zdHJ1Y3RvciBmdW5jdGlvbiB0byBpbmhlcml0IHByb3RvdHlwZSBmcm9tLg0KICovDQpleHBvcnRzLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTsNCg0KZXhwb3J0cy5fZXh0ZW5kID0gZnVuY3Rpb24ob3JpZ2luLCBhZGQpIHsNCiAgLy8gRG9uJ3QgZG8gYW55dGhpbmcgaWYgYWRkIGlzbid0IGFuIG9iamVjdA0KICBpZiAoIWFkZCB8fCAhaXNPYmplY3QoYWRkKSkgcmV0dXJuIG9yaWdpbjsNCg0KICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGFkZCk7DQogIHZhciBpID0ga2V5cy5sZW5ndGg7DQogIHdoaWxlIChpLS0pIHsNCiAgICBvcmlnaW5ba2V5c1tpXV0gPSBhZGRba2V5c1tpXV07DQogIH0NCiAgcmV0dXJuIG9yaWdpbjsNCn07DQoNCmZ1bmN0aW9uIGhhc093blByb3BlcnR5KG9iaiwgcHJvcCkgew0KICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7DQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCdfcHJvY2VzcycpLHR5cGVvZiBnbG9iYWwgIT09ICJ1bmRlZmluZWQiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09ICJ1bmRlZmluZWQiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09ICJ1bmRlZmluZWQiID8gd2luZG93IDoge30pDQp9LHsiLi9zdXBwb3J0L2lzQnVmZmVyIjo1ODcsIl9wcm9jZXNzIjo1NTEsImluaGVyaXRzIjo1Mzd9XSw1ODk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KdmFyIGluZGV4T2YgPSByZXF1aXJlKCdpbmRleG9mJyk7DQoNCnZhciBPYmplY3Rfa2V5cyA9IGZ1bmN0aW9uIChvYmopIHsNCiAgICBpZiAoT2JqZWN0LmtleXMpIHJldHVybiBPYmplY3Qua2V5cyhvYmopDQogICAgZWxzZSB7DQogICAgICAgIHZhciByZXMgPSBbXTsNCiAgICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgcmVzLnB1c2goa2V5KQ0KICAgICAgICByZXR1cm4gcmVzOw0KICAgIH0NCn07DQoNCnZhciBmb3JFYWNoID0gZnVuY3Rpb24gKHhzLCBmbikgew0KICAgIGlmICh4cy5mb3JFYWNoKSByZXR1cm4geHMuZm9yRWFjaChmbikNCiAgICBlbHNlIGZvciAodmFyIGkgPSAwOyBpIDwgeHMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgZm4oeHNbaV0sIGksIHhzKTsNCiAgICB9DQp9Ow0KDQp2YXIgZGVmaW5lUHJvcCA9IChmdW5jdGlvbigpIHsNCiAgICB0cnkgew0KICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdfJywge30pOw0KICAgICAgICByZXR1cm4gZnVuY3Rpb24ob2JqLCBuYW1lLCB2YWx1ZSkgew0KICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwgbmFtZSwgew0KICAgICAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLA0KICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLA0KICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwNCiAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUNCiAgICAgICAgICAgIH0pDQogICAgICAgIH07DQogICAgfSBjYXRjaChlKSB7DQogICAgICAgIHJldHVybiBmdW5jdGlvbihvYmosIG5hbWUsIHZhbHVlKSB7DQogICAgICAgICAgICBvYmpbbmFtZV0gPSB2YWx1ZTsNCiAgICAgICAgfTsNCiAgICB9DQp9KCkpOw0KDQp2YXIgZ2xvYmFscyA9IFsnQXJyYXknLCAnQm9vbGVhbicsICdEYXRlJywgJ0Vycm9yJywgJ0V2YWxFcnJvcicsICdGdW5jdGlvbicsDQonSW5maW5pdHknLCAnSlNPTicsICdNYXRoJywgJ05hTicsICdOdW1iZXInLCAnT2JqZWN0JywgJ1JhbmdlRXJyb3InLA0KJ1JlZmVyZW5jZUVycm9yJywgJ1JlZ0V4cCcsICdTdHJpbmcnLCAnU3ludGF4RXJyb3InLCAnVHlwZUVycm9yJywgJ1VSSUVycm9yJywNCidkZWNvZGVVUkknLCAnZGVjb2RlVVJJQ29tcG9uZW50JywgJ2VuY29kZVVSSScsICdlbmNvZGVVUklDb21wb25lbnQnLCAnZXNjYXBlJywNCidldmFsJywgJ2lzRmluaXRlJywgJ2lzTmFOJywgJ3BhcnNlRmxvYXQnLCAncGFyc2VJbnQnLCAndW5kZWZpbmVkJywgJ3VuZXNjYXBlJ107DQoNCmZ1bmN0aW9uIENvbnRleHQoKSB7fQ0KQ29udGV4dC5wcm90b3R5cGUgPSB7fTsNCg0KdmFyIFNjcmlwdCA9IGV4cG9ydHMuU2NyaXB0ID0gZnVuY3Rpb24gTm9kZVNjcmlwdCAoY29kZSkgew0KICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBTY3JpcHQpKSByZXR1cm4gbmV3IFNjcmlwdChjb2RlKTsNCiAgICB0aGlzLmNvZGUgPSBjb2RlOw0KfTsNCg0KU2NyaXB0LnByb3RvdHlwZS5ydW5JbkNvbnRleHQgPSBmdW5jdGlvbiAoY29udGV4dCkgew0KICAgIGlmICghKGNvbnRleHQgaW5zdGFuY2VvZiBDb250ZXh0KSkgew0KICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJuZWVkcyBhICdjb250ZXh0JyBhcmd1bWVudC4iKTsNCiAgICB9DQogICAgDQogICAgdmFyIGlmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpOw0KICAgIGlmICghaWZyYW1lLnN0eWxlKSBpZnJhbWUuc3R5bGUgPSB7fTsNCiAgICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJzsNCiAgICANCiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGlmcmFtZSk7DQogICAgDQogICAgdmFyIHdpbiA9IGlmcmFtZS5jb250ZW50V2luZG93Ow0KICAgIHZhciB3RXZhbCA9IHdpbi5ldmFsLCB3RXhlY1NjcmlwdCA9IHdpbi5leGVjU2NyaXB0Ow0KDQogICAgaWYgKCF3RXZhbCAmJiB3RXhlY1NjcmlwdCkgew0KICAgICAgICAvLyB3aW4uZXZhbCgpIG1hZ2ljYWxseSBhcHBlYXJzIHdoZW4gdGhpcyBpcyBjYWxsZWQgaW4gSUU6DQogICAgICAgIHdFeGVjU2NyaXB0LmNhbGwod2luLCAnbnVsbCcpOw0KICAgICAgICB3RXZhbCA9IHdpbi5ldmFsOw0KICAgIH0NCiAgICANCiAgICBmb3JFYWNoKE9iamVjdF9rZXlzKGNvbnRleHQpLCBmdW5jdGlvbiAoa2V5KSB7DQogICAgICAgIHdpbltrZXldID0gY29udGV4dFtrZXldOw0KICAgIH0pOw0KICAgIGZvckVhY2goZ2xvYmFscywgZnVuY3Rpb24gKGtleSkgew0KICAgICAgICBpZiAoY29udGV4dFtrZXldKSB7DQogICAgICAgICAgICB3aW5ba2V5XSA9IGNvbnRleHRba2V5XTsNCiAgICAgICAgfQ0KICAgIH0pOw0KICAgIA0KICAgIHZhciB3aW5LZXlzID0gT2JqZWN0X2tleXMod2luKTsNCg0KICAgIHZhciByZXMgPSB3RXZhbC5jYWxsKHdpbiwgdGhpcy5jb2RlKTsNCiAgICANCiAgICBmb3JFYWNoKE9iamVjdF9rZXlzKHdpbiksIGZ1bmN0aW9uIChrZXkpIHsNCiAgICAgICAgLy8gQXZvaWQgY29weWluZyBjaXJjdWxhciBvYmplY3RzIGxpa2UgYHRvcGAgYW5kIGB3aW5kb3dgIGJ5IG9ubHkNCiAgICAgICAgLy8gdXBkYXRpbmcgZXhpc3RpbmcgY29udGV4dCBwcm9wZXJ0aWVzIG9yIG5ldyBwcm9wZXJ0aWVzIGluIHRoZSBgd2luYA0KICAgICAgICAvLyB0aGF0IHdhcyBvbmx5IGludHJvZHVjZWQgYWZ0ZXIgdGhlIGV2YWwuDQogICAgICAgIGlmIChrZXkgaW4gY29udGV4dCB8fCBpbmRleE9mKHdpbktleXMsIGtleSkgPT09IC0xKSB7DQogICAgICAgICAgICBjb250ZXh0W2tleV0gPSB3aW5ba2V5XTsNCiAgICAgICAgfQ0KICAgIH0pOw0KDQogICAgZm9yRWFjaChnbG9iYWxzLCBmdW5jdGlvbiAoa2V5KSB7DQogICAgICAgIGlmICghKGtleSBpbiBjb250ZXh0KSkgew0KICAgICAgICAgICAgZGVmaW5lUHJvcChjb250ZXh0LCBrZXksIHdpbltrZXldKTsNCiAgICAgICAgfQ0KICAgIH0pOw0KICAgIA0KICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoaWZyYW1lKTsNCiAgICANCiAgICByZXR1cm4gcmVzOw0KfTsNCg0KU2NyaXB0LnByb3RvdHlwZS5ydW5JblRoaXNDb250ZXh0ID0gZnVuY3Rpb24gKCkgew0KICAgIHJldHVybiBldmFsKHRoaXMuY29kZSk7IC8vIG1heWJlLi4uDQp9Ow0KDQpTY3JpcHQucHJvdG90eXBlLnJ1bkluTmV3Q29udGV4dCA9IGZ1bmN0aW9uIChjb250ZXh0KSB7DQogICAgdmFyIGN0eCA9IFNjcmlwdC5jcmVhdGVDb250ZXh0KGNvbnRleHQpOw0KICAgIHZhciByZXMgPSB0aGlzLnJ1bkluQ29udGV4dChjdHgpOw0KDQogICAgZm9yRWFjaChPYmplY3Rfa2V5cyhjdHgpLCBmdW5jdGlvbiAoa2V5KSB7DQogICAgICAgIGNvbnRleHRba2V5XSA9IGN0eFtrZXldOw0KICAgIH0pOw0KDQogICAgcmV0dXJuIHJlczsNCn07DQoNCmZvckVhY2goT2JqZWN0X2tleXMoU2NyaXB0LnByb3RvdHlwZSksIGZ1bmN0aW9uIChuYW1lKSB7DQogICAgZXhwb3J0c1tuYW1lXSA9IFNjcmlwdFtuYW1lXSA9IGZ1bmN0aW9uIChjb2RlKSB7DQogICAgICAgIHZhciBzID0gU2NyaXB0KGNvZGUpOw0KICAgICAgICByZXR1cm4gc1tuYW1lXS5hcHBseShzLCBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSkpOw0KICAgIH07DQp9KTsNCg0KZXhwb3J0cy5jcmVhdGVTY3JpcHQgPSBmdW5jdGlvbiAoY29kZSkgew0KICAgIHJldHVybiBleHBvcnRzLlNjcmlwdChjb2RlKTsNCn07DQoNCmV4cG9ydHMuY3JlYXRlQ29udGV4dCA9IFNjcmlwdC5jcmVhdGVDb250ZXh0ID0gZnVuY3Rpb24gKGNvbnRleHQpIHsNCiAgICB2YXIgY29weSA9IG5ldyBDb250ZXh0KCk7DQogICAgaWYodHlwZW9mIGNvbnRleHQgPT09ICdvYmplY3QnKSB7DQogICAgICAgIGZvckVhY2goT2JqZWN0X2tleXMoY29udGV4dCksIGZ1bmN0aW9uIChrZXkpIHsNCiAgICAgICAgICAgIGNvcHlba2V5XSA9IGNvbnRleHRba2V5XTsNCiAgICAgICAgfSk7DQogICAgfQ0KICAgIHJldHVybiBjb3B5Ow0KfTsNCg0KfSx7ImluZGV4b2YiOjUzNn1dLDU5MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQooZnVuY3Rpb24gKEJ1ZmZlcil7DQp2YXIgYnM1OGNoZWNrID0gcmVxdWlyZSgnYnM1OGNoZWNrJykNCg0KZnVuY3Rpb24gZGVjb2RlUmF3ICh2ZXJzaW9uLCBidWZmZXIpIHsNCiAgaWYgKGJ1ZmZlclswXSAhPT0gdmVyc2lvbikgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIG5ldHdvcmsgdmVyc2lvbicpDQoNCiAgLy8gY29tcHJlc3Npb24gZmxhZz8NCiAgaWYgKGJ1ZmZlci5sZW5ndGggPT09IDM0KSB7DQogICAgaWYgKGJ1ZmZlclszM10gIT09IDB4MDEpIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjb21wcmVzc2lvbiBmbGFnJykNCg0KICAgIC8vIHRydW5jYXRlIHRoZSB2ZXJzaW9uIGJ5dGUvY29tcHJlc3Npb24gZmxhZw0KICAgIHJldHVybiB7DQogICAgICB2ZXJzaW9uOiBidWZmZXJbMF0sDQogICAgICBkOiBidWZmZXIuc2xpY2UoMSwgLTEpLA0KICAgICAgY29tcHJlc3NlZDogdHJ1ZQ0KICAgIH0NCiAgfQ0KDQogIC8vIG5vIGNvbXByZXNzaW9uIGZsYWcNCiAgaWYgKGJ1ZmZlci5sZW5ndGggIT09IDMzKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgV0lGIGxlbmd0aCcpDQoNCiAgcmV0dXJuIHsNCiAgICB2ZXJzaW9uOiBidWZmZXJbMF0sDQogICAgZDogYnVmZmVyLnNsaWNlKDEpLA0KICAgIGNvbXByZXNzZWQ6IGZhbHNlDQogIH0NCn0NCg0KZnVuY3Rpb24gZGVjb2RlICh2ZXJzaW9uLCBzdHJpbmcpIHsNCiAgcmV0dXJuIGRlY29kZVJhdyh2ZXJzaW9uLCBiczU4Y2hlY2suZGVjb2RlKHN0cmluZykpDQp9DQoNCmZ1bmN0aW9uIGVuY29kZVJhdyAodmVyc2lvbiwgZCwgY29tcHJlc3NlZCkgew0KICB2YXIgYnVmZmVyID0gbmV3IEJ1ZmZlcihjb21wcmVzc2VkID8gMzQgOiAzMykNCg0KICBidWZmZXIud3JpdGVVSW50OCh2ZXJzaW9uLCAwKQ0KICBkLmNvcHkoYnVmZmVyLCAxKQ0KDQogIGlmIChjb21wcmVzc2VkKSB7DQogICAgYnVmZmVyWzMzXSA9IDB4MDENCiAgfQ0KDQogIHJldHVybiBidWZmZXINCn0NCg0KZnVuY3Rpb24gZW5jb2RlICh2ZXJzaW9uLCBkLCBjb21wcmVzc2VkKSB7DQogIHJldHVybiBiczU4Y2hlY2suZW5jb2RlKGVuY29kZVJhdyh2ZXJzaW9uLCBkLCBjb21wcmVzc2VkKSkNCn0NCg0KbW9kdWxlLmV4cG9ydHMgPSB7DQogIGRlY29kZTogZGVjb2RlLA0KICBkZWNvZGVSYXc6IGRlY29kZVJhdywNCiAgZW5jb2RlOiBlbmNvZGUsDQogIGVuY29kZVJhdzogZW5jb2RlUmF3DQp9DQoNCn0pLmNhbGwodGhpcyxyZXF1aXJlKCJidWZmZXIiKS5CdWZmZXIpDQp9LHsiYnM1OGNoZWNrIjo4OCwiYnVmZmVyIjo5M31dLDU5MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7dmFyIF9jbGFzc0NhbGxDaGVjazI9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrJyk7dmFyIF9jbGFzc0NhbGxDaGVjazM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NDYWxsQ2hlY2syKTt2YXIgX2NyZWF0ZUNsYXNzMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MnKTt2YXIgX2NyZWF0ZUNsYXNzMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVDbGFzczIpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfTt9IC8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqLyAvKioNCiogQGF1dGhvciBtaWNhZWxwZWRyb3NhQGdtYWlsLmNvbQ0KKiBNaW5pbWFsIGludGVyZmFjZSBhbmQgaW1wbGVtZW50YXRpb24gdG8gc2VuZCBhbmQgcmVjZWl2ZSBtZXNzYWdlcy4gSXQgY2FuIGJlIHJldXNlZCBpbiBtYW55IHR5cGUgb2YgY29tcG9uZW50cy4NCiogQ29tcG9uZW50cyB0aGF0IG5lZWQgYSBtZXNzYWdlIHN5c3RlbSBzaG91bGQgcmVjZWl2ZSB0aGlzIGNsYXNzIGFzIGEgZGVwZW5kZW5jeSBvciBleHRlbmQgaXQuDQoqIEV4dGVuc2lvbnMgc2hvdWxkIGltcGxlbWVudCB0aGUgZm9sbG93aW5nIHByaXZhdGUgbWV0aG9kczogX29uUG9zdE1lc3NhZ2UgYW5kIF9yZWdpc3RlckV4dGVybmFsTGlzdGVuZXINCiovdmFyIEJ1cz1mdW5jdGlvbigpeyAvKiBwcml2YXRlDQogIF9tc2dJZDogbnVtYmVyOw0KICBfc3Vic2NyaXB0aW9uczogPHVybDogTXNnTGlzdGVuZXJbXT4NCg0KICBfcmVzcG9uc2VUaW1lT3V0OiBudW1iZXINCiAgX3Jlc3BvbnNlQ2FsbGJhY2tzOiA8dXJsK2lkOiAobXNnKSA9PiB2b2lkPg0KDQogICovZnVuY3Rpb24gQnVzKCl7KDAsX2NsYXNzQ2FsbENoZWNrMy5kZWZhdWx0KSh0aGlzLEJ1cyk7dmFyIF90aGlzPXRoaXM7X3RoaXMuX21zZ0lkPTA7X3RoaXMuX3N1YnNjcmlwdGlvbnM9e307X3RoaXMuX3Jlc3BvbnNlVGltZU91dD01MDAwOyAvL2RlZmF1bHQgdG8gM3MNCl90aGlzLl9yZXNwb25zZUNhbGxiYWNrcz17fTtfdGhpcy5fcmVnaXN0ZXJFeHRlcm5hbExpc3RlbmVyKCk7fSAvKioNCiAgKiBSZWdpc3RlciBsaXN0ZW5lciB0byByZWNlaXZlIG1lc3NhZ2Ugd2hlbiAibXNnLnRvID09PSB1cmwiLg0KICAqIFNwZWNpYWwgdXJsICIqIiBmb3IgZGVmYXVsdCBsaXN0ZW5lciBpcyBhY2NlcHRlZCB0byBpbnRlcmNlcHQgYWxsIG1lc3NhZ2VzLg0KICAqIEBwYXJhbSB7VVJMfSB1cmwgQWRkcmVzcyB0byBpbnRlcmNlcHQsIHRoYSBpcyBpbiB0aGUgbWVzc2FnZSAidG8iDQogICogQHBhcmFtIHtMaXN0ZW5lcn0gbGlzdGVuZXIgbGlzdGVuZXINCiAgKiBAcmV0dXJuIHtNc2dMaXN0ZW5lcn0gaW5zdGFuY2Ugb2YgTXNnTGlzdGVuZXINCiAgKi8oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKEJ1cyxbe2tleTonYWRkTGlzdGVuZXInLHZhbHVlOmZ1bmN0aW9uIGFkZExpc3RlbmVyKHVybCxsaXN0ZW5lcil7dmFyIF90aGlzPXRoaXM7dmFyIGl0ZW09bmV3IE1zZ0xpc3RlbmVyKF90aGlzLl9zdWJzY3JpcHRpb25zLHVybCxsaXN0ZW5lcik7dmFyIGl0ZW1MaXN0PV90aGlzLl9zdWJzY3JpcHRpb25zW3VybF07aWYoIWl0ZW1MaXN0KXtpdGVtTGlzdD1bXTtfdGhpcy5fc3Vic2NyaXB0aW9uc1t1cmxdPWl0ZW1MaXN0O31pdGVtTGlzdC5wdXNoKGl0ZW0pO3JldHVybiBpdGVtO30gLyoqDQogICAqIE1hbnVhbGx5IGFkZCBhIHJlc3BvbnNlIGxpc3RlbmVyLiBPbmx5IG9uZSBsaXN0ZW5lciBwZXIgbWVzc2FnZSBJRCBzaG91bGQgZXhpc3QuDQogICAqIEFURU5USU9OLCB0aGVyZSBpcyBubyB0aW1lb3V0IGZvciB0aGlzIGxpc3RlbmVyLg0KICAgKiBUaGUgbGlzdGVuZXIgc2hvdWxkIGJlIHJlbW92ZWQgd2l0aCBhIHJlbW92ZVJlc3BvbnNlTGlzdGVuZXIsIGZhaWxpbmcgdG8gZG8gdGhpcyB3aWxsIHJlc3VsdCBpbiBhIHVucmVsZWFzZWQgbWVtb3J5IHByb2JsZW0uDQogICAqIEBwYXJhbSB7VVJMfSB1cmwgT3JpZ2luIGFkZHJlc3Mgb2YgdGhlIG1lc3NhZ2Ugc2VudCwgIm1zZy5mcm9tIi4NCiAgICogQHBhcmFtIHtudW1iZXJ9IG1zZ0lkIE1lc3NhZ2UgSUQgdGhhdCBpcyByZXR1cm5lZCBmcm9tIHRoZSBwb3N0TWVzc2FnZS4NCiAgICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzcG9uc2VMaXN0ZW5lciBDYWxsYmFjayBmdW5jdGlvbiBmb3IgdGhlIHJlc3BvbnNlDQogICAqL30se2tleTonYWRkUmVzcG9uc2VMaXN0ZW5lcicsdmFsdWU6ZnVuY3Rpb24gYWRkUmVzcG9uc2VMaXN0ZW5lcih1cmwsbXNnSWQscmVzcG9uc2VMaXN0ZW5lcil7dGhpcy5fcmVzcG9uc2VDYWxsYmFja3NbdXJsK21zZ0lkXT1yZXNwb25zZUxpc3RlbmVyO30gLyoqDQogICAqIFJlbW92ZSB0aGUgcmVzcG9uc2UgbGlzdGVuZXIuDQogICAqIEBwYXJhbSB7VVJMfSB1cmwgT3JpZ2luIGFkZHJlc3Mgb2YgdGhlIG1lc3NhZ2Ugc2VudCwgIm1zZy5mcm9tIi4NCiAgICogQHBhcmFtIHtudW1iZXJ9IG1zZ0lkICBNZXNzYWdlIElEIHRoYXQgaXMgcmV0dXJuZWQgZnJvbSB0aGUgcG9zdE1lc3NhZ2UNCiAgICovfSx7a2V5OidyZW1vdmVSZXNwb25zZUxpc3RlbmVyJyx2YWx1ZTpmdW5jdGlvbiByZW1vdmVSZXNwb25zZUxpc3RlbmVyKHVybCxtc2dJZCl7ZGVsZXRlIHRoaXMuX3Jlc3BvbnNlQ2FsbGJhY2tzW3VybCttc2dJZF07fSAvKioNCiAgICogUmVtb3ZlIGFsbCBleGlzdGVudCBsaXN0ZW5lcnMgZm9yIHRoZSBVUkwNCiAgICogQHBhcmFtICB7VVJMfSB1cmwgQWRkcmVzcyByZWdpc3RlcmVkDQogICAqL30se2tleToncmVtb3ZlQWxsTGlzdGVuZXJzT2YnLHZhbHVlOmZ1bmN0aW9uIHJlbW92ZUFsbExpc3RlbmVyc09mKHVybCl7ZGVsZXRlIHRoaXMuX3N1YnNjcmlwdGlvbnNbdXJsXTt9IC8qKg0KICAgKiBIZWxwZXIgbWV0aG9kIHRvIGJpbmQgbGlzdGVuZXJzIChpbiBib3RoIGRpcmVjdGlvbnMpIGludG8gb3RoZXIgTWluaUJ1cyB0YXJnZXQuDQogICAqIEBwYXJhbSAge1VSTH0gb3V0VXJsIE91dGJvdW5kIFVSTCwgcmVnaXN0ZXIgbGlzdGVuZXIgZm9yIHVybCBpbiBkaXJlY3Rpb24gInRoaXMgLT4gdGFyZ2V0Ig0KICAgKiBAcGFyYW0gIHtVUkx9IGluVXJsIEluYm91bmQgVVJMLCByZWdpc3RlciBsaXN0ZW5lciBmb3IgdXJsIGluIGRpcmVjdGlvbiAidGFyZ2V0IC0+IHRoaXMiDQogICAqIEBwYXJhbSAge01pbmlCdXN9IHRhcmdldCBUaGUgb3RoZXIgdGFyZ2V0IE1pbmlCdXMNCiAgICogQHJldHVybiB7Qm91bmR9IGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIHRoZSBwcm9wZXJ0aWVzIFt0aGlzTGlzdGVuZXIsIHRhcmdldExpc3RlbmVyXSBhbmQgdGhlIHVuYmluZCBtZXRob2QuDQogICAqL30se2tleTonYmluZCcsdmFsdWU6ZnVuY3Rpb24gYmluZChvdXRVcmwsaW5VcmwsdGFyZ2V0KXt2YXIgX3RoaXMyPXRoaXM7dmFyIF90aGlzPXRoaXM7dmFyIHRoaXNMaXN0bj1fdGhpcy5hZGRMaXN0ZW5lcihvdXRVcmwsZnVuY3Rpb24obXNnKXt0YXJnZXQucG9zdE1lc3NhZ2UobXNnKTt9KTt2YXIgdGFyZ2V0TGlzdG49dGFyZ2V0LmFkZExpc3RlbmVyKGluVXJsLGZ1bmN0aW9uKG1zZyl7X3RoaXMucG9zdE1lc3NhZ2UobXNnKTt9KTtyZXR1cm4ge3RoaXNMaXN0ZW5lcjp0aGlzTGlzdG4sdGFyZ2V0TGlzdGVuZXI6dGFyZ2V0TGlzdG4sdW5iaW5kOmZ1bmN0aW9uIHVuYmluZCgpe190aGlzMi50aGlzTGlzdGVuZXIucmVtb3ZlKCk7X3RoaXMyLnRhcmdldExpc3RlbmVyLnJlbW92ZSgpO319O30gLy9wdWJsaXNoIG9uIGRlZmF1bHQgbGlzdGVuZXJzDQp9LHtrZXk6J19wdWJsaXNoT25EZWZhdWx0Jyx2YWx1ZTpmdW5jdGlvbiBfcHVibGlzaE9uRGVmYXVsdChtc2cpeyAvL2lzIHRoZXJlIGFueSAiKiIgKGRlZmF1bHQpIGxpc3RlbmVycz8NCnZhciBpdGVtTGlzdD10aGlzLl9zdWJzY3JpcHRpb25zWycqJ107aWYoaXRlbUxpc3Qpe3RoaXMuX3B1Ymxpc2hPbihpdGVtTGlzdCxtc2cpO319IC8vcHVibGlzaCBvbiBhIHN1YnNjcmlwdGlvbiBsaXN0Lg0KfSx7a2V5OidfcHVibGlzaE9uJyx2YWx1ZTpmdW5jdGlvbiBfcHVibGlzaE9uKGl0ZW1MaXN0LG1zZyl7aXRlbUxpc3QuZm9yRWFjaChmdW5jdGlvbihzdWIpe3N1Yi5fY2FsbGJhY2sobXNnKTt9KTt9fSx7a2V5OidfcmVzcG9uc2VDYWxsYmFjaycsdmFsdWU6ZnVuY3Rpb24gX3Jlc3BvbnNlQ2FsbGJhY2soaW5Nc2cscmVzcG9uc2VDYWxsYmFjayl7dmFyIF90aGlzPXRoaXM7IC8vYXV0b21hdGljIG1hbmFnZW1lbnQgb2YgcmVzcG9uc2UgaGFuZGxlcnMNCmlmKHJlc3BvbnNlQ2FsbGJhY2speyhmdW5jdGlvbigpe3ZhciByZXNwb25zZUlkPWluTXNnLmZyb20raW5Nc2cuaWQ7X3RoaXMuX3Jlc3BvbnNlQ2FsbGJhY2tzW3Jlc3BvbnNlSWRdPXJlc3BvbnNlQ2FsbGJhY2s7c2V0VGltZW91dChmdW5jdGlvbigpe3ZhciByZXNwb25zZUZ1bj1fdGhpcy5fcmVzcG9uc2VDYWxsYmFja3NbcmVzcG9uc2VJZF07ZGVsZXRlIF90aGlzLl9yZXNwb25zZUNhbGxiYWNrc1tyZXNwb25zZUlkXTtpZihyZXNwb25zZUZ1bil7dmFyIGVycm9yTXNnPXtpZDppbk1zZy5pZCx0eXBlOidyZXNwb25zZScsYm9keTp7Y29kZTo0MDgsZGVzYzonUmVzcG9uc2UgdGltZW91dCEnLHZhbHVlOmluTXNnfX07cmVzcG9uc2VGdW4oZXJyb3JNc2cpO319LF90aGlzLl9yZXNwb25zZVRpbWVPdXQpO30pKCk7fX19LHtrZXk6J19vblJlc3BvbnNlJyx2YWx1ZTpmdW5jdGlvbiBfb25SZXNwb25zZShtc2cpe3ZhciBfdGhpcz10aGlzO2lmKG1zZy50eXBlPT09J3Jlc3BvbnNlJyl7dmFyIHJlc3BvbnNlSWQ9bXNnLnRvK21zZy5pZDt2YXIgcmVzcG9uc2VGdW49X3RoaXMuX3Jlc3BvbnNlQ2FsbGJhY2tzW3Jlc3BvbnNlSWRdOyAvL2lmIGl0J3MgYSBwcm92aXNpb25hbCByZXNwb25zZSwgZG9uJ3QgZGVsZXRlIHJlc3BvbnNlIGxpc3RlbmVyDQppZihtc2cuYm9keS5jb2RlPj0yMDApe2RlbGV0ZSBfdGhpcy5fcmVzcG9uc2VDYWxsYmFja3NbcmVzcG9uc2VJZF07fWlmKHJlc3BvbnNlRnVuKXtyZXNwb25zZUZ1bihtc2cpO3JldHVybiB0cnVlO319cmV0dXJuIGZhbHNlO30gLy9yZWNlaXZlIG1lc3NhZ2VzIGZyb20gZXh0ZXJuYWwgaW50ZXJmYWNlDQp9LHtrZXk6J19vbk1lc3NhZ2UnLHZhbHVlOmZ1bmN0aW9uIF9vbk1lc3NhZ2UobXNnKXt2YXIgX3RoaXM9dGhpcztpZighX3RoaXMuX29uUmVzcG9uc2UobXNnKSl7dmFyIGl0ZW1MaXN0PV90aGlzLl9zdWJzY3JpcHRpb25zW21zZy50b107aWYoaXRlbUxpc3Qpe190aGlzLl9wdWJsaXNoT24oaXRlbUxpc3QsbXNnKTt9ZWxzZSB7X3RoaXMuX3B1Ymxpc2hPbkRlZmF1bHQobXNnKTt9fX19LHtrZXk6J19nZW5JZCcsdmFsdWU6ZnVuY3Rpb24gX2dlbklkKGluTXNnKXsgLy9UT0RPOiBob3cgZG8gd2UgbWFuYWdlIG1lc3NhZ2UgSUQncz8gU2hvdWxkIGl0IGJlIGEgZ2xvYmFsIHJ1bnRpbWUgY291bnRlciwgb3IgcGVyIFVSTCBhZGRyZXNzPw0KLy9HbG9iYWwgY291bnRlciB3aWxsIG5vdCB3b3JrLCBiZWNhdXNlIHRoZXJlIHdpbGwgYmUgbXVsdGlwbGUgTWluaUJ1cyBpbnN0YW5jZXMhDQovL1BlciBVUkwsIGNhbiBiZSBhIGxvdCBvZiBkYXRhIHRvIG1haW50YWluIQ0KLy9NYXliZSBhIGNvdW50ZXIgcGVyIE1pbmlCdXMgaW5zdGFuY2UuIFRoaXMgaXMgdGhlIGFzc3VtZWQgc29sdXRpb24gZm9yIG5vdy4NCmlmKCFpbk1zZy5pZHx8aW5Nc2cuaWQ9PT0wKXt0aGlzLl9tc2dJZCsrO2luTXNnLmlkPXRoaXMuX21zZ0lkO319IC8qKg0KICAqIFNlbmQgbWVzc2FnZXMgdG8gbG9jYWwgbGlzdGVuZXJzLCBvciBpZiBub3QgZXhpc3RzIHRvIGV4dGVybmFsIGxpc3RlbmVycy4NCiAgKiBJdCdzIGhhcyBhbiBvcHRpb25hbCBtZWNoYW5pc20gZm9yIGF1dG9tYXRpYyBtYW5hZ2VtZW50IG9mIHJlc3BvbnNlIGhhbmRsZXJzLg0KICAqIFRoZSByZXNwb25zZSBoYW5kbGVyIHdpbGwgYmUgdW5yZWdpc3RlcmVkIGFmdGVyIHJlY2VpdmluZyB0aGUgcmVzcG9uc2UsIG9yIGFmdGVyIHJlc3BvbnNlIHRpbWVvdXQgKGRlZmF1bHQgdG8gM3MpLg0KICAqIEBwYXJhbSAge01lc3NhZ2V9IG1zZyBNZXNzYWdlIHRvIHNlbmQuIE1lc3NhZ2UgSUQgaXMgYXV0b21hdGljYWxseSBhZGRlZCB0byB0aGUgbWVzc2FnZS4NCiAgKiBAcGFyYW0gIHtGdW5jdGlvbn0gcmVzcG9uc2VDYWxsYmFjayBPcHRpb25hbCBwYXJhbWV0ZXIsIGlmIHRoZSBkZXZlbG9wZXIgd2hhdCdzIGF1dG9tYXRpYyByZXNwb25zZSBtYW5hZ2VtZW50Lg0KICAqIEByZXR1cm4ge251bWJlcn0gUmV0dXJucyB0aGUgbWVzc2FnZSBJRCwgaW4gY2FzZSBpdCBzaG91bGQgYmUgbmVlZGVkIGZvciBtYW51YWwgbWFuYWdlbWVudCBvZiB0aGUgcmVzcG9uc2UgaGFuZGxlci4NCiAgKi99LHtrZXk6J3Bvc3RNZXNzYWdlJyx2YWx1ZTpmdW5jdGlvbiBwb3N0TWVzc2FnZShpbk1zZyxyZXNwb25zZUNhbGxiYWNrKXt9IC8qKg0KICAgKiBOb3QgcHVibGljIGF2YWlsYWJsZSwgdXNlZCBieSB0aGUgY2xhc3MgZXh0ZW5zaW9uIGltcGxlbWVudGF0aW9uLCB0byBwcm9jZXNzIG1lc3NhZ2VzIGZyb20gdGhlIHB1YmxpYyAicG9zdE1lc3NhZ2UiIHdpdGhvdXQgYSByZWdpc3RlcmVkIGxpc3RlbmVyLg0KICAgKiBVc2VkIHRvIHNlbmQgdGhlIG1lc3NhZ2UgdG8gYW4gZXh0ZXJuYWwgaW50ZXJmYWNlLCBsaWtlIGEgV2ViV29ya2VyLCBJRnJhbWUsIGV0Yy4NCiAgICogQHBhcmFtICB7TWVzc2FnZS5NZXNzYWdlfSBtc2cgTWVzc2FnZQ0KICAgKi99LHtrZXk6J19vblBvc3RNZXNzYWdlJyx2YWx1ZTpmdW5jdGlvbiBfb25Qb3N0TWVzc2FnZShtc2cpe30gLyppbXBsZW1lbnRhdGlvbiB3aWxsIHNlbmQgbWVzc2FnZSB0byBleHRlcm5hbCBzeXN0ZW0qLyAvKioNCiAgICogTm90IHB1YmxpYyBhdmFpbGFibGUsIHVzZWQgYnkgdGhlIGNsYXNzIGV4dGVuc2lvbiBpbXBsZW1lbnRhdGlvbiwgdG8gcHJvY2VzcyBhbGwgbWVzc2FnZXMgdGhhdCBlbnRlciB0aGUgTWluaUJ1cyBmcm9tIGFuIGV4dGVybmFsIGludGVyZmFjZSwgbGlrZSBhIFdlYldvcmtlciwgSUZyYW1lLCBldGMuDQogICAqIFRoaXMgbWV0aG9kIGlzIGNhbGxlZCBvbmUgdGltZSBpbiB0aGUgY29uc3RydWN0b3IgdG8gcmVnaXN0ZXIgZXh0ZXJuYWwgbGlzdGVuZXJzLg0KICAgKiBUaGUgaW1wbGVtZW50YXRpb24gd2lsbCBwcm9iYWJseSBjYWxsIHRoZSAiX29uTWVzc2FnZSIgbWV0aG9kIHRvIHB1Ymxpc2ggaW4gdGhlIGxvY2FsIGxpc3RlbmVycy4NCiAgICogRE8gTk9UIGNhbGwgInBvc3RNZXNzYWdlIiwgdGhlcmUgaXMgYSBkYW5nZXIgdGhhdCB0aGUgbWVzc2FnZSBlbnRlcnMgaW4gYSBjeWNsZSENCiAgICovfSx7a2V5OidfcmVnaXN0ZXJFeHRlcm5hbExpc3RlbmVyJyx2YWx1ZTpmdW5jdGlvbiBfcmVnaXN0ZXJFeHRlcm5hbExpc3RlbmVyKCl7IC8qaW1wbGVtZW50YXRpb24gd2lsbCByZWdpc3RlciBleHRlcm5hbCBsaXN0ZW5lciBhbmQgY2FsbCAidGhpcy5fb25NZXNzYWdlKG1zZykiICovfX1dKTtyZXR1cm4gQnVzO30oKTt2YXIgTXNnTGlzdGVuZXI9ZnVuY3Rpb24oKXsgLyogcHJpdmF0ZQ0KICBfc3Vic2NyaXB0aW9uczogPHN0cmluZzogTXNnTGlzdGVuZXJbXT47DQogIF91cmw6IHN0cmluZzsNCiAgX2NhbGxiYWNrOiAobXNnKSA9PiB2b2lkOw0KICAqL2Z1bmN0aW9uIE1zZ0xpc3RlbmVyKHN1YnNjcmlwdGlvbnMsdXJsLGNhbGxiYWNrKXsoMCxfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsTXNnTGlzdGVuZXIpO3ZhciBfdGhpcz10aGlzO190aGlzLl9zdWJzY3JpcHRpb25zPXN1YnNjcmlwdGlvbnM7X3RoaXMuX3VybD11cmw7X3RoaXMuX2NhbGxiYWNrPWNhbGxiYWNrO30oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKE1zZ0xpc3RlbmVyLFt7a2V5OidyZW1vdmUnLHZhbHVlOmZ1bmN0aW9uIHJlbW92ZSgpe3ZhciBfdGhpcz10aGlzO3ZhciBzdWJzPV90aGlzLl9zdWJzY3JpcHRpb25zW190aGlzLl91cmxdO2lmKHN1YnMpe3ZhciBpbmRleD1zdWJzLmluZGV4T2YoX3RoaXMpO3N1YnMuc3BsaWNlKGluZGV4LDEpOyAvL2lmIHRoZXJlIGFyZSBubyBsaXN0ZW5lcnMsIHJlbW92ZSB0aGUgc3Vic2NyaXB0aW9uIGVudGlyZWx5Lg0KaWYoc3Vicy5sZW5ndGg9PT0wKXtkZWxldGUgX3RoaXMuX3N1YnNjcmlwdGlvbnNbX3RoaXMuX3VybF07fX19fSx7a2V5Oid1cmwnLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fdXJsO319XSk7cmV0dXJuIE1zZ0xpc3RlbmVyO30oKTtleHBvcnRzLmRlZmF1bHQ9QnVzO21vZHVsZS5leHBvcnRzPWV4cG9ydHNbJ2RlZmF1bHQnXTsNCg0KfSx7ImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MjgsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6Mjl9XSw1OTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pO3ZhciBfc3RyaW5naWZ5PXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeScpO3ZhciBfc3RyaW5naWZ5Mj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zdHJpbmdpZnkpO3ZhciBfZ2V0UHJvdG90eXBlT2Y9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mJyk7dmFyIF9nZXRQcm90b3R5cGVPZjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ2V0UHJvdG90eXBlT2YpO3ZhciBfY2xhc3NDYWxsQ2hlY2syPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjaycpO3ZhciBfY2xhc3NDYWxsQ2hlY2szPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzQ2FsbENoZWNrMik7dmFyIF9jcmVhdGVDbGFzczI9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzJyk7dmFyIF9jcmVhdGVDbGFzczM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlQ2xhc3MyKTt2YXIgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuJyk7dmFyIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMik7dmFyIF9pbmhlcml0czI9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzJyk7dmFyIF9pbmhlcml0czM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW5oZXJpdHMyKTt2YXIgX0J1czI9cmVxdWlyZSgnLi9CdXMnKTt2YXIgX0J1czM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQnVzMik7dmFyIF9QaXBlbGluZT1yZXF1aXJlKCcuL1BpcGVsaW5lJyk7dmFyIF9QaXBlbGluZTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfUGlwZWxpbmUpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfTt9IC8qKg0KKiBNZXNzYWdlIEJVUyBJbnRlcmZhY2UgaXMgYW4gZXh0ZW5zaW9uIG9mIHRoZSBNaW5pQnVzDQoqIEl0IGRvZXNuJ3Qgc3VwcG9ydCB0aGUgZGVmYXVsdCAnKicgbGlzdGVuZXIsIGluc3RlYWQgaXQgdXNlcyB0aGUgcmVnaXN0cnkucmVzb2x2ZSguLikNCiovIC8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqL3ZhciBNZXNzYWdlQnVzPWZ1bmN0aW9uKF9CdXMpeygwLF9pbmhlcml0czMuZGVmYXVsdCkoTWVzc2FnZUJ1cyxfQnVzKTsgLyogcHJpdmF0ZQ0KICBfcmVnaXN0cnk6IFJlZ2lzdHJ5DQogIF9mb3J3YXJkczogeyA8ZnJvbS11cmw+OiB7IGZsOiBNc2dMaXN0ZW5lciwgc2FuZGJveFRvVXJsczogTWFwKFNhbmRib3gsIFt0by11cmxdKSwgdXJsVG9TYW5kYm94OiB7IHRvLXVybDogU2FuZGJveCB9IH0gfQ0KDQogIF9waXBlbGluZTogUGlwZWxpbmUNCiAgKi8gLy9UT0RPOiBmdXR1cmUgb3B0aW1pemF0aW9uDQovLzEuIG1lc3NhZ2UgYmF0Y2ggcHJvY2Vzc2luZyB3aXRoIHNldEludGVydmFsDQovLzIuIHJlc29sdmUgZGVmYXVsdCBnYXRld2F5L3Byb3Rvc3R1YiB3aXRoIHJlZ2lzdGVyLnJlc29sdmUNCmZ1bmN0aW9uIE1lc3NhZ2VCdXMocmVnaXN0cnkpeygwLF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcyxNZXNzYWdlQnVzKTt2YXIgX3RoaXMyPSgwLF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMy5kZWZhdWx0KSh0aGlzLCgwLF9nZXRQcm90b3R5cGVPZjIuZGVmYXVsdCkoTWVzc2FnZUJ1cykuY2FsbCh0aGlzKSk7X3RoaXMyLl9yZWdpc3RyeT1yZWdpc3RyeTtfdGhpczIuX2ZvcndhcmRzPXt9O190aGlzMi5fcGlwZWxpbmU9bmV3IF9QaXBlbGluZTIuZGVmYXVsdChmdW5jdGlvbihlcnJvcil7Y29uc29sZS5sb2coJ1BJUEVMSU5FLUVSUk9SOiAnLCgwLF9zdHJpbmdpZnkyLmRlZmF1bHQpKGVycm9yKSk7fSk7cmV0dXJuIF90aGlzMjt9KDAsX2NyZWF0ZUNsYXNzMy5kZWZhdWx0KShNZXNzYWdlQnVzLFt7a2V5Oidwb3N0TWVzc2FnZScsdmFsdWU6ZnVuY3Rpb24gcG9zdE1lc3NhZ2UoaW5Nc2cscmVzcG9uc2VDYWxsYmFjayl7dmFyIF90aGlzPXRoaXM7X3RoaXMuX2dlbklkKGluTXNnKTtfdGhpcy5fcGlwZWxpbmUucHJvY2Vzcyhpbk1zZyxmdW5jdGlvbihtc2cpe190aGlzLl9yZXNwb25zZUNhbGxiYWNrKGluTXNnLHJlc3BvbnNlQ2FsbGJhY2spO2lmKCFfdGhpcy5fb25SZXNwb25zZShtc2cpKXt2YXIgaXRlbUxpc3Q9X3RoaXMuX3N1YnNjcmlwdGlvbnNbbXNnLnRvXTtpZihpdGVtTGlzdCl7IC8vZG8gbm90IHB1Ymxpc2ggb24gZGVmYXVsdCBhZGRyZXNzLCBiZWNhdXNlIG9mIGxvb3BiYWNrIGN5Y2xlDQpfdGhpcy5fcHVibGlzaE9uKGl0ZW1MaXN0LG1zZyk7fWVsc2UgeyAvL2lmIHRoZXJlIGlzIG5vIGxpc3RlbmVyLCBzZW5kIHRvIGV4dGVybmFsIGludGVyZmFjZQ0KX3RoaXMuX29uUG9zdE1lc3NhZ2UobXNnKTt9fX0pO3JldHVybiBpbk1zZy5pZDt9IC8qDQogIGFkZEZvcndhcmQoZnJvbSwgdG8pIHsNCiAgICBsZXQgX3RoaXMgPSB0aGlzOw0KDQogICAgLy92ZXJpZnkgaWYgZm9yd2FyZCBleGlzdA0KICAgIGxldCBjb25mID0gX3RoaXMuX2ZvcndhcmRzW2Zyb21dOw0KICAgIGlmICghY29uZikgew0KICAgICAgbGV0IGZvcndhcmRMaXN0ZW5lciA9IF90aGlzLmFkZExpc3RlbmVyKGZyb20sIChtc2cpID0+IHsNCiAgICAgICAgY29uZi5zYW5kYm94VG9VcmxzLmZvckVhY2goKHVybHMsIHNhbmRib3gpID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZygnTUItRk9SV0FSRDogKCAnICsgZnJvbSArICcgdG8gJyArIHVybHMuc2l6ZSArICcgZGVzdGluYXRpb25zKScpOw0KICAgICAgICAgIHVybHMuZm9yRWFjaCgodmFsdWUpID0+IHsgY29uc29sZS5sb2coJ1NFTkQtVE86ICcsIHZhbHVlKTsgfSk7DQoNCiAgICAgICAgICBzYW5kYm94LnBvc3RNZXNzYWdlKG1zZyk7DQogICAgICAgIH0pOw0KICAgICAgfSk7DQoNCiAgICAgIGNvbmYgPSB7DQogICAgICAgIGZyb206IGZyb20sDQogICAgICAgIGZsOiBmb3J3YXJkTGlzdGVuZXIsDQogICAgICAgIHNhbmRib3hUb1VybHM6IG5ldyBNYXAoKSwNCiAgICAgICAgdXJsVG9TYW5kYm94OiBuZXcgTWFwKCksDQoNCiAgICAgICAgLy9yZW1vdmUgZm9yd2FyZCBkZXRpbmF0aW9uDQogICAgICAgIHJlbW92ZTogKHVybCkgPT4gew0KICAgICAgICAgIGxldCBzYW5kYm94ID0gdGhpcy51cmxUb1NhbmRib3guZ2V0KHVybCk7DQogICAgICAgICAgaWYgKHNhbmRib3gpIHsNCiAgICAgICAgICAgIHRoaXMudXJsVG9TYW5kYm94LmRlbGV0ZSh1cmwpOw0KICAgICAgICAgICAgdGhpcy5zYW5kYm94VG9VcmxzLmdldChzYW5kYm94KS5kZWxldGUodXJsKTsNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH07DQoNCiAgICAgIF90aGlzLl9mb3J3YXJkc1tmcm9tXSA9IGNvbmY7DQogICAgfQ0KDQogICAgLy9hZGQgZm9yd2FyZCBkZXRpbmF0aW9uDQogICAgdGhpcy5fcmVnaXN0cnkuZ2V0U2FuZGJveCh0bykudGhlbigoc2FuZGJveCkgPT4gew0KICAgICAgbGV0IHVybHMgPSBjb25mLnNhbmRib3hUb1VybHMuZ2V0KHNhbmRib3gpOw0KICAgICAgaWYgKCF1cmxzKSB7DQogICAgICAgIHVybHMgPSBuZXcgU2V0KCk7DQogICAgICAgIGNvbmYuc2FuZGJveFRvVXJscy5zZXQoc2FuZGJveCwgdXJscyk7DQogICAgICB9DQoNCiAgICAgIHVybHMuYWRkKHRvKTsNCiAgICAgIGNvbmYudXJsVG9TYW5kYm94LnNldCh0bywgc2FuZGJveCk7DQogICAgfSk7DQoNCiAgICByZXR1cm4gY29uZjsNCiAgfQ0KICAqL30se2tleTonYWRkUHVibGlzaCcsdmFsdWU6ZnVuY3Rpb24gYWRkUHVibGlzaChmcm9tKXt2YXIgX3RoaXMzPXRoaXM7dmFyIF90aGlzPXRoaXM7IC8vdmVyaWZ5IGlmIGZvcndhcmQgZXhpc3QNCnZhciByZWZDb3VudD1fdGhpcy5fZm9yd2FyZHNbZnJvbV07aWYoIXJlZkNvdW50KXt2YXIgZm9yd2FyZExpc3RlbmVyPV90aGlzLmFkZExpc3RlbmVyKGZyb20sZnVuY3Rpb24obXNnKXtjb25zb2xlLmxvZygnTUItUFVCTElTSDogKCAnK2Zyb20rJyApJyk7X3RoaXMuX29uUG9zdE1lc3NhZ2UobXNnKTt9KTtyZWZDb3VudD17Y291bnRlcjowLGZsOmZvcndhcmRMaXN0ZW5lcixyZW1vdmU6ZnVuY3Rpb24gcmVtb3ZlKCl7X3RoaXMzLmNvdW50ZXItLTtpZihfdGhpczMuY291bnRlcj09PTApe190aGlzMy5mbC5yZW1vdmUoKTtkZWxldGUgX3RoaXMuX2ZvcndhcmRzW2Zyb21dO319fTtfdGhpcy5fZm9yd2FyZHNbZnJvbV09cmVmQ291bnQ7fXJlZkNvdW50LmNvdW50ZXIrKztyZXR1cm4gcmVmQ291bnQ7fX0se2tleTonYWRkRm9yd2FyZCcsdmFsdWU6ZnVuY3Rpb24gYWRkRm9yd2FyZChmcm9tLHRvKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gX3RoaXMuYWRkTGlzdGVuZXIoZnJvbSxmdW5jdGlvbihtc2cpe2NvbnNvbGUubG9nKCdNQi1GT1JXQVJEOiAoICcrZnJvbSsnIHRvICcrdG8rJyApJyk7X3RoaXMuZm9yd2FyZCh0byxtc2cpO30pO319LHtrZXk6J2ZvcndhcmQnLHZhbHVlOmZ1bmN0aW9uIGZvcndhcmQodXJsLG1zZyl7dmFyIF90aGlzPXRoaXM7dmFyIGl0ZW1MaXN0PV90aGlzLl9zdWJzY3JpcHRpb25zW3VybF07aWYoaXRlbUxpc3Qpe190aGlzLl9wdWJsaXNoT24oaXRlbUxpc3QsbXNnKTt9fX0se2tleTonX29uUG9zdE1lc3NhZ2UnLHZhbHVlOmZ1bmN0aW9uIF9vblBvc3RNZXNzYWdlKG1zZyl7dmFyIF90aGlzPXRoaXM7IC8vcmVzb2x2ZSBleHRlcm5hbCBwcm90b3N0dWIuLi4NCl90aGlzLl9yZWdpc3RyeS5yZXNvbHZlKG1zZy50bykudGhlbihmdW5jdGlvbihyb3V0ZSl7X3RoaXMuZm9yd2FyZChyb3V0ZSxtc2cpO30pLmNhdGNoKGZ1bmN0aW9uKGUpe2NvbnNvbGUubG9nKCdSRVNPTFZFLUVSUk9SOiAnLGUpO30pO319LHtrZXk6J3BpcGVsaW5lJyxnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIHRoaXMuX3BpcGVsaW5lO319XSk7cmV0dXJuIE1lc3NhZ2VCdXM7fShfQnVzMy5kZWZhdWx0KTtleHBvcnRzLmRlZmF1bHQ9TWVzc2FnZUJ1czttb2R1bGUuZXhwb3J0cz1leHBvcnRzWydkZWZhdWx0J107DQoNCn0seyIuL0J1cyI6NTkxLCIuL1BpcGVsaW5lIjo1OTMsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeSI6MTgsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiI6MjIsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MjgsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MjksImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cyI6MzAsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjozMX1dLDU5MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQoidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7dmFyIF9jbGFzc0NhbGxDaGVjazI9cmVxdWlyZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIik7dmFyIF9jbGFzc0NhbGxDaGVjazM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NDYWxsQ2hlY2syKTt2YXIgX2NyZWF0ZUNsYXNzMj1yZXF1aXJlKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKTt2YXIgX2NyZWF0ZUNsYXNzMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVDbGFzczIpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfTt9IC8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqLyAvKioNCiogQGF1dGhvciBtaWNhZWxwZWRyb3NhQGdtYWlsLmNvbQ0KKiBQaXBlbGluZQ0KKiBTZXF1ZW5jaWFsIHByb2Nlc3NvciBvZiBtZXRob2RzLiBTaW1pbGFyIHRvIGhvdyBTZXF1ZW50aWFsIFByb21pc2UncyB3b3JrLCBidXQgYmV0dGVyIGZpdCBmb3IgbWVzc2FnZSBwcm9jZXNzaW5nLg0KKi92YXIgUGlwZWxpbmU9ZnVuY3Rpb24oKXsgLyogcHVibGljDQogICAgaGFuZGxlcnM6ICgoUGlwZUNvbnRleHQpID0+IHZvaWQpW10NCiAgICBvbkZhaWw6IChlcnJvcikgPT4gdm9pZA0KICAqL2Z1bmN0aW9uIFBpcGVsaW5lKF9vbkZhaWwpeygwLF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcyxQaXBlbGluZSk7dmFyIF90aGlzPXRoaXM7X3RoaXMuaGFuZGxlcnM9W107X3RoaXMub25GYWlsPV9vbkZhaWw7fSgwLF9jcmVhdGVDbGFzczMuZGVmYXVsdCkoUGlwZWxpbmUsW3trZXk6InByb2Nlc3MiLHZhbHVlOmZ1bmN0aW9uIHByb2Nlc3MobXNnLG9uRGVsaXZlcil7dmFyIF90aGlzPXRoaXM7aWYoX3RoaXMuaGFuZGxlcnMubGVuZ3RoPjApe3ZhciBpdGVyPW5ldyBJdGVyYXRvcihfdGhpcy5oYW5kbGVycyk7aXRlci5uZXh0KG5ldyBQaXBlQ29udGV4dChfdGhpcyxpdGVyLG1zZyxvbkRlbGl2ZXIpKTt9ZWxzZSB7b25EZWxpdmVyKG1zZyk7fX19XSk7cmV0dXJuIFBpcGVsaW5lO30oKTt2YXIgUGlwZUNvbnRleHQ9ZnVuY3Rpb24oKXsgLyogcHJpdmF0ZQ0KICAgIF9pblN0b3A6IGJvb2xlYW4NCg0KICAgIF9waXBlbGluZTogUGlwZWxpbmUNCiAgICBfaXRlcjogSXRlcmF0b3INCiAgICBfbXNnOiBNZXNzYWdlDQogICovZnVuY3Rpb24gUGlwZUNvbnRleHQocGlwZWxpbmUsaXRlcixtc2csb25EZWxpdmVyKXsoMCxfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsUGlwZUNvbnRleHQpO3ZhciBfdGhpcz10aGlzO190aGlzLl9pblN0b3A9ZmFsc2U7X3RoaXMuX3BpcGVsaW5lPXBpcGVsaW5lO190aGlzLl9pdGVyPWl0ZXI7X3RoaXMuX21zZz1tc2c7X3RoaXMuX29uRGVsaXZlcj1vbkRlbGl2ZXI7fSgwLF9jcmVhdGVDbGFzczMuZGVmYXVsdCkoUGlwZUNvbnRleHQsW3trZXk6Im5leHQiLHZhbHVlOmZ1bmN0aW9uIG5leHQoKXt2YXIgX3RoaXM9dGhpcztpZighX3RoaXMuX2luU3RvcCl7aWYoX3RoaXMuX2l0ZXIuaGFzTmV4dCl7X3RoaXMuX2l0ZXIubmV4dChfdGhpcyk7fWVsc2Uge190aGlzLl9vbkRlbGl2ZXIoX3RoaXMuX21zZyk7fX19fSx7a2V5OiJkZWxpdmVyIix2YWx1ZTpmdW5jdGlvbiBkZWxpdmVyKCl7dmFyIF90aGlzPXRoaXM7aWYoIV90aGlzLl9pblN0b3Ape190aGlzLl9pblN0b3A9dHJ1ZTtfdGhpcy5fb25EZWxpdmVyKF90aGlzLl9tc2cpO319fSx7a2V5OiJmYWlsIix2YWx1ZTpmdW5jdGlvbiBmYWlsKGVycm9yKXt2YXIgX3RoaXM9dGhpcztpZighX3RoaXMuX2luU3RvcCl7X3RoaXMuX2luU3RvcD10cnVlO2lmKF90aGlzLl9waXBlbGluZS5vbkZhaWwpe190aGlzLl9waXBlbGluZS5vbkZhaWwoZXJyb3IpO319fX0se2tleToicGlwZWxpbmUiLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fcGlwZWxpbmU7fX0se2tleToibXNnIixnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIHRoaXMuX21zZzt9LHNldDpmdW5jdGlvbiBzZXQoaW5Nc2cpe3RoaXMuX21zZz1pbk1zZzt9fV0pO3JldHVybiBQaXBlQ29udGV4dDt9KCk7dmFyIEl0ZXJhdG9yPWZ1bmN0aW9uKCl7IC8qIHByaXZhdGUNCiAgICBfaW5kZXg6IG51bWJlcg0KICAgIF9hcnJheTogW10NCiAgKi9mdW5jdGlvbiBJdGVyYXRvcihhcnJheSl7KDAsX2NsYXNzQ2FsbENoZWNrMy5kZWZhdWx0KSh0aGlzLEl0ZXJhdG9yKTt0aGlzLl9pbmRleD0tMTt0aGlzLl9hcnJheT1hcnJheTt9KDAsX2NyZWF0ZUNsYXNzMy5kZWZhdWx0KShJdGVyYXRvcixbe2tleToiaGFzTmV4dCIsZ2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLl9pbmRleDx0aGlzLl9hcnJheS5sZW5ndGgtMTt9fSx7a2V5OiJuZXh0IixnZXQ6ZnVuY3Rpb24gZ2V0KCl7dGhpcy5faW5kZXgrKztyZXR1cm4gdGhpcy5fYXJyYXlbdGhpcy5faW5kZXhdO319XSk7cmV0dXJuIEl0ZXJhdG9yO30oKTtleHBvcnRzLmRlZmF1bHQ9UGlwZWxpbmU7bW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1snZGVmYXVsdCddOw0KDQp9LHsiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoyOCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoyOX1dLDU5NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7dmFyIF9jbGFzc0NhbGxDaGVjazI9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrJyk7dmFyIF9jbGFzc0NhbGxDaGVjazM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NDYWxsQ2hlY2syKTt2YXIgX2NyZWF0ZUNsYXNzMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MnKTt2YXIgX2NyZWF0ZUNsYXNzMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVDbGFzczIpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfTt9IC8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqLyAvKg0KQWRhcHRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9qYXNvbmRhdmllcy9ibG9vbWZpbHRlci5qcw0KDQpPcmlnaW5hbCBMaWNlbnNlOg0KDQpDb3B5cmlnaHQgKGMpIDIwMTEsIEphc29uIERhdmllcw0KQWxsIHJpZ2h0cyByZXNlcnZlZC4NCg0KUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0DQptb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoNCg0KICAqIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcw0KICAgIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLg0KDQogICogUmVkaXN0cmlidXRpb25zIGluIGJpbmFyeSBmb3JtIG11c3QgcmVwcm9kdWNlIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLA0KICAgIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIgaW4gdGhlIGRvY3VtZW50YXRpb24NCiAgICBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4NCg0KICAqIFRoZSBuYW1lIEphc29uIERhdmllcyBtYXkgbm90IGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzDQogICAgZGVyaXZlZCBmcm9tIHRoaXMgc29mdHdhcmUgd2l0aG91dCBzcGVjaWZpYyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24uDQoNClRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgIkFTIElTIiBBTkQNCkFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRSBJTVBMSUVEDQpXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFDQpESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBKQVNPTiBEQVZJRVMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwNCklOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIChJTkNMVURJTkcsIEJVVCBOT1QNCkxJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCBPUg0KUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRg0KTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBUT1JUIChJTkNMVURJTkcgTkVHTElHRU5DRQ0KT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UgT0YgVEhJUyBTT0ZUV0FSRSwgRVZFTiBJRg0KQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuDQoqLyAvKioNCiogSW1wbGVtZW50cyBhIEJsb29tIGZpbHRlci4NCiogQGF1dGhvciBKYXNvbiBEYXZpZXM7IGFkYXB0ZWQgYW5kIGV4dGVuZGVkIGJ5IGJlaWVybGVAdHUtYmVybGluLmRlDQoqL3ZhciBCbG9vbUZpbHRlcj1mdW5jdGlvbigpeyAvL3ZhciB0eXBlZEFycmF5cyA9IHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCc7DQovLyBDcmVhdGVzIGEgbmV3IGJsb29tIGZpbHRlci4gIElmICptKiBpcyBhbiBhcnJheS1saWtlIG9iamVjdCwgd2l0aCBhIGxlbmd0aA0KLy8gcHJvcGVydHksIHRoZW4gdGhlIGJsb29tIGZpbHRlciBpcyBsb2FkZWQgd2l0aCBkYXRhIGZyb20gdGhlIGFycmF5LCB3aGVyZQ0KLy8gZWFjaCBlbGVtZW50IGlzIGEgMzItYml0IGludGVnZXIuICBPdGhlcndpc2UsICptKiBzaG91bGQgc3BlY2lmeSB0aGUNCi8vIG51bWJlciBvZiBiaXRzLiAgTm90ZSB0aGF0ICptKiBpcyByb3VuZGVkIHVwIHRvIHRoZSBuZWFyZXN0IG11bHRpcGxlIG9mDQovLyAzMi4gICprKiBzcGVjaWZpZXMgdGhlIG51bWJlciBvZiBoYXNoaW5nIGZ1bmN0aW9ucy4NCmZ1bmN0aW9uIEJsb29tRmlsdGVyKG0sayl7KDAsX2NsYXNzQ2FsbENoZWNrMy5kZWZhdWx0KSh0aGlzLEJsb29tRmlsdGVyKTt2YXIgdHlwZWRBcnJheXM9dHlwZW9mIEFycmF5QnVmZmVyIT09J3VuZGVmaW5lZCc7dmFyIGE7aWYodHlwZW9mIG0hPT0nbnVtYmVyJyl7YT1tO209YS5sZW5ndGgqMzI7fXZhciBuPU1hdGguY2VpbChtLzMyKTt2YXIgaT0tMTt0aGlzLm09bT1uKjMyO3RoaXMuaz1rO2lmKHR5cGVkQXJyYXlzKXt2YXIga2J5dGVzPTE8PE1hdGguY2VpbChNYXRoLmxvZyhNYXRoLmNlaWwoTWF0aC5sb2cobSkvTWF0aC5MTjIvOCkpL01hdGguTE4yKTt2YXIgYXJyYXk9a2J5dGVzPT09MT9VaW50OEFycmF5OmtieXRlcz09PTI/VWludDE2QXJyYXk6VWludDMyQXJyYXk7dmFyIGtidWZmZXI9bmV3IEFycmF5QnVmZmVyKGtieXRlcyprKTt0aGlzLmJ1Y2tldHM9bmV3IEludDMyQXJyYXkobik7aWYoYSl3aGlsZSgrK2k8bil7YnVja2V0c1tpXT1hW2ldO310aGlzLl9sb2NhdGlvbnM9bmV3IEFycmF5KGtidWZmZXIpO31lbHNlIHsgLy92YXIgYnVja2V0cyA9IHRoaXMuYnVja2V0cyA9IFtdOw0KdGhpcy5idWNrZXRzPVtdO2lmKGEpd2hpbGUoKytpPG4pe2J1Y2tldHNbaV09YVtpXTt9ZWxzZSB3aGlsZSgrK2k8bil7YnVja2V0c1tpXT0wO310aGlzLl9sb2NhdGlvbnM9W107fX0gLy8gU2VlIGh0dHA6Ly93aWxsd2hpbS53cGVuZ2luZS5jb20vMjAxMS8wOS8wMy9wcm9kdWNpbmctbi1oYXNoLWZ1bmN0aW9ucy1ieS1oYXNoaW5nLW9ubHktb25jZS8NCigwLF9jcmVhdGVDbGFzczMuZGVmYXVsdCkoQmxvb21GaWx0ZXIsW3trZXk6J2xvY2F0aW9ucycsdmFsdWU6ZnVuY3Rpb24gbG9jYXRpb25zKHYpe3ZhciBrPXRoaXMuazt2YXIgbT10aGlzLm07dmFyIHI9dGhpcy5fbG9jYXRpb25zO3ZhciBhPXRoaXMuZm52MWEodik7dmFyIGI9dGhpcy5mbnYxYWIoYSk7dmFyIHg9YSVtO2Zvcih2YXIgaT0wO2k8azsrK2kpe3JbaV09eDwwP3grbTp4O3g9KHgrYiklbTt9cmV0dXJuIHI7fX0se2tleTonYWRkJyx2YWx1ZTpmdW5jdGlvbiBhZGQodil7dmFyIGw9dGhpcy5sb2NhdGlvbnModisnJyk7dmFyIGs9dGhpcy5rO3ZhciBidWNrZXRzPXRoaXMuYnVja2V0cztmb3IodmFyIGk9MDtpPGs7KytpKXtidWNrZXRzW01hdGguZmxvb3IobFtpXS8zMildfD0xPDxsW2ldJTMyO319fSx7a2V5Oid0ZXN0Jyx2YWx1ZTpmdW5jdGlvbiB0ZXN0KHYpe3ZhciBsPXRoaXMubG9jYXRpb25zKHYrJycpO3ZhciBrPXRoaXMuazt2YXIgYnVja2V0cz10aGlzLmJ1Y2tldHM7Zm9yKHZhciBpPTA7aTxrOysraSl7dmFyIGI9bFtpXTtpZigoYnVja2V0c1tNYXRoLmZsb29yKGIvMzIpXSYxPDxiJTMyKT09PTApe3JldHVybiBmYWxzZTt9fXJldHVybiB0cnVlO30gLy8gTkVXOiBPUnMgdGhlIEJsb29tRmlsdGVyIGZyb20gdGhlIHBhcmFtZXRlcg0KLy8gcGFyYW0gaGFzIHRvIGJlIGEgQkY7IEJGcyBzaG91bGQgYmUgc2FtZSBsZW5ndGgNCn0se2tleTonYWRkQmxvb21GaWx0ZXInLHZhbHVlOmZ1bmN0aW9uIGFkZEJsb29tRmlsdGVyKHYpe3ZhciBidWNrZXRzPXRoaXMuYnVja2V0czt2YXIgYnVja2V0c1BhcmFtPXYuYnVja2V0cztmb3IodmFyIGk9MCxuPWJ1Y2tldHMubGVuZ3RoO2k8bjsrK2kpe2J1Y2tldHNbaV09YnVja2V0c1tpXXxidWNrZXRzUGFyYW1baV07fX0gLy8gRXN0aW1hdGVkIGNhcmRpbmFsaXR5Lg0KfSx7a2V5OidzaXplJyx2YWx1ZTpmdW5jdGlvbiBzaXplKCl7dmFyIGJ1Y2tldHM9dGhpcy5idWNrZXRzO3ZhciBiaXRzPTA7Zm9yKHZhciBpPTAsbj1idWNrZXRzLmxlbmd0aDtpPG47KytpKXtiaXRzKz10aGlzLnBvcGNudChidWNrZXRzW2ldKTt9cmV0dXJuIC10aGlzLm0qTWF0aC5sb2coMS1iaXRzL3RoaXMubSkvdGhpcy5rO30gLy8gaHR0cDovL2dyYXBoaWNzLnN0YW5mb3JkLmVkdS9+c2VhbmRlci9iaXRoYWNrcy5odG1sI0NvdW50Qml0c1NldFBhcmFsbGVsDQp9LHtrZXk6J3BvcGNudCcsdmFsdWU6ZnVuY3Rpb24gcG9wY250KHYpe3YtPXY+PjEmMHg1NTU1NTU1NTt2PSh2JjB4MzMzMzMzMzMpKyh2Pj4yJjB4MzMzMzMzMzMpO3JldHVybiAodisodj4+NCkmMHhmMGYwZjBmKSoweDEwMTAxMDE+PjI0O30gLy8gRm93bGVyL05vbGwvVm8gaGFzaGluZy4NCn0se2tleTonZm52MWEnLHZhbHVlOmZ1bmN0aW9uIGZudjFhKHYpe3ZhciBhPTIxNjYxMzYyNjE7Zm9yKHZhciBpPTAsbj12Lmxlbmd0aDtpPG47KytpKXt2YXIgYz12LmNoYXJDb2RlQXQoaSk7dmFyIGQ9YyYweGZmMDA7aWYoZClhPXRoaXMuZm52bXVsdGlwbHkoYV5kPj44KTthPXRoaXMuZm52bXVsdGlwbHkoYV5jJjB4ZmYpO31yZXR1cm4gdGhpcy5mbnZtaXgoYSk7fSAvLyBhICogMTY3Nzc2MTkgbW9kIDIqKjMyDQp9LHtrZXk6J2Zudm11bHRpcGx5Jyx2YWx1ZTpmdW5jdGlvbiBmbnZtdWx0aXBseShhKXtyZXR1cm4gYSsoYTw8MSkrKGE8PDQpKyhhPDw3KSsoYTw8OCkrKGE8PDI0KTt9IC8vIE9uZSBhZGRpdGlvbmFsIGl0ZXJhdGlvbiBvZiBGTlYsIGdpdmVuIGEgaGFzaC4NCn0se2tleTonZm52MWFiJyx2YWx1ZTpmdW5jdGlvbiBmbnYxYWIoYSl7cmV0dXJuIHRoaXMuZm52bWl4KHRoaXMuZm52bXVsdGlwbHkoYSkpO30gLy8gU2VlIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDEzMTAxOTAxMzIyNS9odHRwOi8vaG9tZS5jb21jYXN0Lm5ldC9+YnJldG0vaGFzaC82Lmh0bWwNCn0se2tleTonZm52bWl4Jyx2YWx1ZTpmdW5jdGlvbiBmbnZtaXgoYSl7YSs9YTw8MTM7YV49YT4+Pjc7YSs9YTw8MzthXj1hPj4+MTc7YSs9YTw8NTtyZXR1cm4gYSYweGZmZmZmZmZmO319XSk7cmV0dXJuIEJsb29tRmlsdGVyO30oKTtleHBvcnRzLmRlZmF1bHQ9Qmxvb21GaWx0ZXI7bW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1snZGVmYXVsdCddOw0KDQp9LHsiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoyOCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoyOX1dLDU5NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQoidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7dmFyIF9jbGFzc0NhbGxDaGVjazI9cmVxdWlyZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIik7dmFyIF9jbGFzc0NhbGxDaGVjazM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NDYWxsQ2hlY2syKTt2YXIgX2NyZWF0ZUNsYXNzMj1yZXF1aXJlKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKTt2YXIgX2NyZWF0ZUNsYXNzMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVDbGFzczIpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfTt9IC8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqLyAvKioNCiogUmVwcmVzZW50cyB0aGUgdXNlcidzIGluZm9ybWF0aW9uIGZvciB0aGUgZ2xvYmFsIHJlZ2lzdHJ5Lg0KKiBAYXV0aG9yIGJlaWVybGVAdHUtYmVybGluLmRlDQoqL3ZhciBHbG9iYWxSZWdpc3RyeVJlY29yZD1mdW5jdGlvbigpeyAvKioNCiAgICogQ29uc3RydWN0cyBhIG5ldyBlbXB0eSBvYmplY3QuDQogICAqL2Z1bmN0aW9uIEdsb2JhbFJlZ2lzdHJ5UmVjb3JkKCl7KDAsX2NsYXNzQ2FsbENoZWNrMy5kZWZhdWx0KSh0aGlzLEdsb2JhbFJlZ2lzdHJ5UmVjb3JkKTt0aGlzLmd1aWQ7dGhpcy5zYWx0O3RoaXMudXNlcklEcz1bXTt0aGlzLmxhc3RVcGRhdGU7dGhpcy50aW1lb3V0O3RoaXMucHVibGljS2V5O3RoaXMuYWN0aXZlO3RoaXMucmV2b2tlZDt9IC8qKg0KICAgKiBDb25zdHJ1Y3RzIGEgbmV3IG9iamVjdCByZXByZXNlbnRpbmcgaW5mb3JtYXRpb24gYWJvdXQgb25lIGNvbnRhY3QuDQogICAqIEByZXR1cm5zIHtPYmplY3R9ICBvYmplY3QgIEEgSmF2YVNjcmlwdCBPYmplY3Qgd2l0aCBhbGwgZmllbGRzIGZvciB0aGUgR2xvYmFsIFJlZ2lzdHJ5IFJlY29yZC4NCiAgICovKDAsX2NyZWF0ZUNsYXNzMy5kZWZhdWx0KShHbG9iYWxSZWdpc3RyeVJlY29yZCxbe2tleToiZ2V0UmVjb3JkIix2YWx1ZTpmdW5jdGlvbiBnZXRSZWNvcmQoKXsgLy8gVE9ETzogZ2l2ZSBlcnJvciBpZiBmaWVsZHMgYXJlIG1pc3NpbmcNCnZhciByZWNvcmQ9bmV3IE9iamVjdCgpO3JlY29yZC5ndWlkPXRoaXMuZ3VpZDtyZWNvcmQuc2FsdD10aGlzLnNhbHQ7cmVjb3JkLnVzZXJJRHM9dGhpcy51c2VySURzO3JlY29yZC5sYXN0VXBkYXRlPXRoaXMubGFzdFVwZGF0ZTtyZWNvcmQudGltZW91dD10aGlzLnRpbWVvdXQ7cmVjb3JkLnB1YmxpY0tleT10aGlzLnB1YmxpY0tleTtyZWNvcmQuYWN0aXZlPXRoaXMuYWN0aXZlO3JlY29yZC5yZXZva2VkPXRoaXMucmV2b2tlZDtyZXR1cm4gcmVjb3JkO319XSk7cmV0dXJuIEdsb2JhbFJlZ2lzdHJ5UmVjb3JkO30oKTtleHBvcnRzLmRlZmF1bHQ9R2xvYmFsUmVnaXN0cnlSZWNvcmQ7bW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1snZGVmYXVsdCddOw0KDQp9LHsiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoyOCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoyOX1dLDU5NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7dmFyIF9zdHJpbmdpZnk9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5Jyk7dmFyIF9zdHJpbmdpZnkyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3N0cmluZ2lmeSk7dmFyIF9wcm9taXNlPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlJyk7dmFyIF9wcm9taXNlMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9taXNlKTt2YXIgX2NsYXNzQ2FsbENoZWNrMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2snKTt2YXIgX2NsYXNzQ2FsbENoZWNrMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO3ZhciBfY3JlYXRlQ2xhc3MyPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcycpO3ZhciBfY3JlYXRlQ2xhc3MzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUNsYXNzMik7dmFyIF9HcmFwaENvbm5lY3RvckNvbnRhY3REYXRhPXJlcXVpcmUoJy4vR3JhcGhDb25uZWN0b3JDb250YWN0RGF0YScpO3ZhciBfR3JhcGhDb25uZWN0b3JDb250YWN0RGF0YTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR3JhcGhDb25uZWN0b3JDb250YWN0RGF0YSk7dmFyIF9CbG9vbUZpbHRlcj1yZXF1aXJlKCcuL0Jsb29tRmlsdGVyJyk7dmFyIF9CbG9vbUZpbHRlcjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQmxvb21GaWx0ZXIpO3ZhciBfR2xvYmFsUmVnaXN0cnlSZWNvcmQ9cmVxdWlyZSgnLi9HbG9iYWxSZWdpc3RyeVJlY29yZCcpO3ZhciBfR2xvYmFsUmVnaXN0cnlSZWNvcmQyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dsb2JhbFJlZ2lzdHJ5UmVjb3JkKTt2YXIgX2JpdGNvaW5qc0xpYj1yZXF1aXJlKCdiaXRjb2luanMtbGliJyk7dmFyIF9iaXRjb2luanNMaWIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2JpdGNvaW5qc0xpYik7dmFyIF9iaXA9cmVxdWlyZSgnYmlwMzknKTt2YXIgX2JpcDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYmlwKTt2YXIgX3NqY2w9cmVxdWlyZSgnc2pjbCcpO3ZhciBfc2pjbDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2pjbCk7dmFyIF9qc3JzYXNpZ249cmVxdWlyZSgnanNyc2FzaWduJyk7dmFyIF9qc3JzYXNpZ24yPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2pzcnNhc2lnbik7dmFyIF9iYXNlNjRVcmw9cmVxdWlyZSgnYmFzZTY0LXVybCcpO3ZhciBfYmFzZTY0VXJsMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9iYXNlNjRVcmwpO3ZhciBfaGV4PXJlcXVpcmUoJ2hleDY0Jyk7dmFyIF9oZXgyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2hleCk7dmFyIF9idWZmZXI9cmVxdWlyZSgnYnVmZmVyJyk7dmFyIF9idWZmZXIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2J1ZmZlcik7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9O30gLyoqDQoqIFRoZSBHcmFwaCBDb25uZWN0b3IgY29udGFpbnMgdGhlIGNvbnRhY3QgbGlzdC9hZGRyZXNzIGJvb2suDQoqIEBhdXRob3IgYmVpZXJsZUB0dS1iZXJsaW4uZGUNCiovIC8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqL3ZhciBHcmFwaENvbm5lY3Rvcj1mdW5jdGlvbigpeyAvLyBUT0RPOiBpbXBvcnQgLyBleHBvcnQgbWV0aG9kcw0KLyoqDQogICAqIENvbnN0cnVjdHMgYSBuZXcgYW5kIGVtcHR5IEdyYXBoIENvbm5lY3Rvci4NCiAgICogQHBhcmFtIHtzdHJpbmd9ICAgSHlwZXJ0eVJ1bnRpbWVVUkwgICAgVGhlIEh5cGVydHkgUnVudGltZSBVUkwuDQogICAqIEBwYXJhbSB7bWVzc2FnZUJ1c30gICAgTWVzc2FnZUJ1cyAgICAgIFRoZSBNZXNzYWdlIEJ1cy4NCiAgICovZnVuY3Rpb24gR3JhcGhDb25uZWN0b3IoaHlwZXJ0eVJ1bnRpbWVVUkwsbWVzc2FnZUJ1cyl7KDAsX2NsYXNzQ2FsbENoZWNrMy5kZWZhdWx0KSh0aGlzLEdyYXBoQ29ubmVjdG9yKTt0aGlzLmNvbnRhY3RzPVtdO3RoaXMubGFzdENhbGN1bGF0aW9uQmxvb21GaWx0ZXIxSG9wPW5ldyBEYXRlKDApLnRvSVNPU3RyaW5nKCk7dGhpcy5nbG9iYWxSZWdpc3RyeVJlY29yZD1uZXcgX0dsb2JhbFJlZ2lzdHJ5UmVjb3JkMi5kZWZhdWx0KCk7dGhpcy5fcHJ2S2V5O3RoaXMucHJpdmF0ZUtleTt0aGlzLmdyb3Vwcz1bXTt0aGlzLnJlc2lkZW5jZUxvY2F0aW9uO3RoaXMuZmlyc3ROYW1lO3RoaXMubGFzdE5hbWU7dGhpcy5fbWVzc2FnZUJ1cz1tZXNzYWdlQnVzO3RoaXMuX2h5cGVydHlSdW50aW1lVVJMPWh5cGVydHlSdW50aW1lVVJMO30gLyoqDQogICogUmV0dXJucyB0aGUgTWVzc2FnZUJ1cy4NCiAgKiBAcGFyYW0ge01lc3NhZ2VCdXN9ICAgICAgICAgICBtZXNzYWdlQnVzICAgIFRoZSBNZXNzYWdlIEJ1cy4NCiAgKi8oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKEdyYXBoQ29ubmVjdG9yLFt7a2V5OidnZW5lcmF0ZUdVSUQnLCAvKioNCiAgICogR2VuZXJhdGVzIGEgR1VJRCBhbmQgcmV0dXJucyBhIG1uZW1vbmljIGZyb20gd2hpY2ggdGhlIEdVSUQgY2FuIGJlIHJlLWNyZWF0ZWQgbGF0ZXIuDQogICAqIEByZXR1cm5zICB7c3RyaW5nfSAgICBtbmVtb25pYyAgICAgIEEgc3RyaW5nIHdpdGggMTYgd29yZHMuDQogICAqL3ZhbHVlOmZ1bmN0aW9uIGdlbmVyYXRlR1VJRCgpeyAvLyBnZW5lcmF0ZSBtbmVtb25pYyBhbmQgc2FsdA0KX2J1ZmZlcjIuZGVmYXVsdC5UWVBFRF9BUlJBWV9TVVBQT1JUPXRydWU7dmFyIG1uZW1vbmljPV9iaXAyLmRlZmF1bHQuZ2VuZXJhdGVNbmVtb25pYygxNjApO3ZhciBzYWx0V29yZD1fYmlwMi5kZWZhdWx0LmdlbmVyYXRlTW5lbW9uaWMoOCk7dGhpcy5fY3JlYXRlS2V5cyhtbmVtb25pYyxzYWx0V29yZCk7IC8vIHNldCBsYXNVcGRhdGUgZGF0ZQ0KdGhpcy5nbG9iYWxSZWdpc3RyeVJlY29yZC5sYXN0VXBkYXRlPW5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTsgLy8gc2V0IGRlZnVhbHQgdGltZW91dA0KdmFyIHRpbWVvdXQ9bmV3IERhdGUoKTt0aW1lb3V0LnNldE1vbnRoKHRpbWVvdXQuZ2V0TW9udGgoKSsxMjApO3RoaXMuZ2xvYmFsUmVnaXN0cnlSZWNvcmQudGltZW91dD10aW1lb3V0LnRvSVNPU3RyaW5nKCk7IC8vIHNldCBkZWZhdWx0IHZhbHVlcw0KdGhpcy5nbG9iYWxSZWdpc3RyeVJlY29yZC5hY3RpdmU9MTt0aGlzLmdsb2JhbFJlZ2lzdHJ5UmVjb3JkLnJldm9rZWQ9MDsgLy8gcmV0dXJuIG1uZW1vbmljDQp2YXIgcnRuPW1uZW1vbmljKycgJytzYWx0V29yZDtyZXR1cm4gcnRuO30gLyoqDQogICAqIEdlbmVyYXRlcyBhIHB1YmxpYy9wcml2YXRlIGtleSBwYWlyIGZyb20gYSBnaXZlbiBtbmVtb25pYyAoMTYgd29yZHMpLg0KICAgKiBFeHBlY3RzIGEgc3RyaW5nIGNvbnRhaW5pbmcgMTYgd29yZHMgc2VwZXJhdGVkIGJ5IHNpbmdsZSBzcGFjZXMuDQogICAqIFJldHJpZXZlcyBkYXRhIGZyb20gdGhlIEdsb2JhbCBSZWdpc3RyeS4NCiAgICogQHBhcmFtICB7c3RyaW5nfSAgICAgbW5lbW9uaWNBbmRTYWx0ICAgICBBIHN0cmluZyBvZiAxNiB3b3Jkcy4NCiAgICogQHJldHVybnMgIHtQcm9taXNlfSAgUHJvbWlzZSAgICAgICAgICBHbG9iYWwgUmVnaXN0cnkgUmVjb3JkLg0KICAgKi99LHtrZXk6J3VzZUdVSUQnLHZhbHVlOmZ1bmN0aW9uIHVzZUdVSUQobW5lbW9uaWNBbmRTYWx0KXsgLy8gVE9ETzogY2hlY2sgaWYgZm9ybWF0IGlzIGNvcnJlY3QgYW5kIGlmIGFsbCB3b3JkcyBhcmUgZnJvbSBiaXAzOSBlbmdsaXNoIHdvcmRsaXN0DQp2YXIgbGFzdEluZGV4PW1uZW1vbmljQW5kU2FsdC5sYXN0SW5kZXhPZignICcpO3ZhciBtbmVtb25pYz1tbmVtb25pY0FuZFNhbHQuc3Vic3RyaW5nKDAsbGFzdEluZGV4KTt2YXIgc2FsdFdvcmQ9bW5lbW9uaWNBbmRTYWx0LnN1YnN0cmluZyhsYXN0SW5kZXgrMSxtbmVtb25pY0FuZFNhbHQubGVuZ3RoKTt0aGlzLl9jcmVhdGVLZXlzKG1uZW1vbmljLHNhbHRXb3JkKTt2YXIgX3RoaXM9dGhpczsgLy8gcmV0cmlldmUgY3VycmVudCBpbmZvIGZyb20gR2xvYmFsIFJlZ2lzdHJ5IGFuZCBmaWxsIHRoaXMuZ2xvYmFsUmVnaXN0cnlSZWNvcmQNCnZhciBtc2c9e3R5cGU6J1JFQUQnLGZyb206dGhpcy5faHlwZXJ0eVJ1bnRpbWVVUkwrJy9ncmFwaC1jb25uZWN0b3InLHRvOidnbG9iYWw6Ly9yZWdpc3RyeS8nLGJvZHk6e2d1aWQ6dGhpcy5nbG9iYWxSZWdpc3RyeVJlY29yZC5ndWlkfX07cmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7aWYoX3RoaXMubWVzc2FnZUJ1cz09PXVuZGVmaW5lZCl7cmVqZWN0KCdNZXNzYWdlQnVzIG5vdCBmb3VuZCBvbiBHcmFwaENvbm5lY3RvcicpO31lbHNlIHtfdGhpcy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG1zZyxmdW5jdGlvbihyZXBseSl7IC8vIHJlcGx5IHNob3VsZCBiZSB0aGUgSlNPTiByZXR1cm5lZCBmcm9tIHRoZSBHbG9iYWwgUmVnaXN0cnkgUkVTVC1pbnRlcmZhY2UNCnZhciBqd3Q9cmVwbHkuYm9keS5kYXRhO3ZhciB1bndyYXBwZWRKV1Q9S0pVUi5qd3MuSldTLnBhcnNlKHJlcGx5LmJvZHkuZGF0YSk7dmFyIGRhdGFFbmNvZGVkPXVud3JhcHBlZEpXVC5wYXlsb2FkT2JqLmRhdGE7dmFyIGRhdGFEZWNvZGVkPV9iYXNlNjRVcmwyLmRlZmF1bHQuZGVjb2RlKGRhdGFFbmNvZGVkKTt2YXIgZGF0YUpTT049SlNPTi5wYXJzZShkYXRhRGVjb2RlZCk7IC8vIHB1YmxpYyBrZXkgc2hvdWxkIG1hdGNoDQp2YXIgc2FtZUtleT1kYXRhSlNPTi5wdWJsaWNLZXk9PV90aGlzLmdsb2JhbFJlZ2lzdHJ5UmVjb3JkLnB1YmxpY0tleTtpZighc2FtZUtleSl7cmVqZWN0KCdSZXRyaWV2ZWQga2V5IGRvZXMgbm90IG1hdGNoIScpO31lbHNlIHt2YXIgcHVibGljS2V5T2JqZWN0PV9qc3JzYXNpZ24yLmRlZmF1bHQuS0VZVVRJTC5nZXRLZXkoZGF0YUpTT04ucHVibGljS2V5KTt2YXIgZW5jb2RlZFN0cmluZz1qd3Quc3BsaXQoJy4nKS5zbGljZSgwLDIpLmpvaW4oJy4nKTt2YXIgc2lnVmFsdWVIZXg9dW53cmFwcGVkSldULnNpZ0hleDt2YXIgc2lnPW5ldyBLSlVSLmNyeXB0by5TaWduYXR1cmUoe2FsZzonU0hBMjU2d2l0aEVDRFNBJ30pO3NpZy5pbml0KHB1YmxpY0tleU9iamVjdCk7c2lnLnVwZGF0ZVN0cmluZyhlbmNvZGVkU3RyaW5nKTt2YXIgaXNWYWxpZD1zaWcudmVyaWZ5KHNpZ1ZhbHVlSGV4KTtpZighaXNWYWxpZCl7cmVqZWN0KCdSZXRyaWV2ZWQgUmVjb3JkIG5vdCB2YWxpZCEnKTt9ZWxzZSB7aWYodHlwZW9mIGRhdGFKU09OLnVzZXJJRHMhPSd1bmRlZmluZWQnJiZkYXRhSlNPTi51c2VySURzIT1udWxsKXtfdGhpcy5nbG9iYWxSZWdpc3RyeVJlY29yZC51c2VySURzPWRhdGFKU09OLnVzZXJJRHM7fV90aGlzLmdsb2JhbFJlZ2lzdHJ5UmVjb3JkLmxhc3RVcGRhdGU9ZGF0YUpTT04ubGFzdFVwZGF0ZTtfdGhpcy5nbG9iYWxSZWdpc3RyeVJlY29yZC50aW1lb3V0PWRhdGFKU09OLnRpbWVvdXQ7X3RoaXMuZ2xvYmFsUmVnaXN0cnlSZWNvcmQuc2FsdD1kYXRhSlNPTi5zYWx0O190aGlzLmdsb2JhbFJlZ2lzdHJ5UmVjb3JkLmFjdGl2ZT1kYXRhSlNPTi5hY3RpdmU7X3RoaXMuZ2xvYmFsUmVnaXN0cnlSZWNvcmQucmV2b2tlZD1kYXRhSlNPTi5yZXZva2VkO3Jlc29sdmUoX3RoaXMuZ2xvYmFsUmVnaXN0cnlSZWNvcmQpO319fSk7fX0pO30gLyoqDQogICAqIENyZWF0ZXMgdGhlIGtleXMgZnJvbSBtbmVtb25pYyBhbmQgc2FsdC4gQWxzbyBzZXRzIHB1YmxpYyBrZXksIGd1aWQsIGFuZCBzYWx0IGZvciBnbG9iYWxSZWdpc3RyeVJlY29yZC4NCiAgICogQHBhcmFtICB7c3RyaW5nfSAgICAgbW5lbW9uaWMgICAgIEEgc3RyaW5nIHdpdGggMTUgd29yZHMuDQogICAqIEBwYXJhbSAge3N0cmluZ30gICAgIHNhbHQgICAgICAgICBBIHdvcmQuDQogICAqL30se2tleTonX2NyZWF0ZUtleXMnLHZhbHVlOmZ1bmN0aW9uIF9jcmVhdGVLZXlzKG1uZW1vbmljLHNhbHRXb3JkKXsgLy8gZ2VuZXJhdGUga2V5IHBhaXINCnZhciBzZWVkPV9iaXAyLmRlZmF1bHQubW5lbW9uaWNUb1NlZWQobW5lbW9uaWMpO19idWZmZXIyLmRlZmF1bHQuVFlQRURfQVJSQVlfU1VQUE9SVD1mYWxzZTt2YXIgaGRub2RlPV9iaXRjb2luanNMaWIyLmRlZmF1bHQuSEROb2RlLmZyb21TZWVkQnVmZmVyKHNlZWQpO3ZhciBlY3BhcmFtcz1LSlVSLmNyeXB0by5FQ1BhcmFtZXRlckRCLmdldEJ5TmFtZSgnc2VjcDI1NmsxJyk7dmFyIGJpUHJ2PWhkbm9kZS5rZXlQYWlyLmQ7IC8vIHByaXZhdGUga2V5IGJpZyBpbnRlZ2VyDQp2YXIgZXBQdWI9ZWNwYXJhbXMuRy5tdWx0aXBseShiaVBydik7IC8vIGQqRw0KdmFyIGJpWD1lcFB1Yi5nZXRYKCkudG9CaWdJbnRlZ2VyKCk7IC8vIHggZnJvbSBRDQp2YXIgYmlZPWVwUHViLmdldFkoKS50b0JpZ0ludGVnZXIoKTsgLy8geSBmcm9tIFENCnZhciBjaGFybGVuPWVjcGFyYW1zLmtleWxlbi80O3ZhciBoUHJ2PSgnMDAwMDAwMDAwMCcrYmlQcnYudG9TdHJpbmcoMTYpKS5zbGljZSgtY2hhcmxlbik7dmFyIGhYPSgnMDAwMDAwMDAwMCcrYmlYLnRvU3RyaW5nKDE2KSkuc2xpY2UoLWNoYXJsZW4pO3ZhciBoWT0oJzAwMDAwMDAwMDAnK2JpWS50b1N0cmluZygxNikpLnNsaWNlKC1jaGFybGVuKTt2YXIgaFB1Yj0nMDQnK2hYK2hZO3RoaXMuX3BydktleT1uZXcgS0pVUi5jcnlwdG8uRUNEU0Eoe2N1cnZlOidzZWNwMjU2azEnfSk7dGhpcy5fcHJ2S2V5LnNldFByaXZhdGVLZXlIZXgoaFBydik7dGhpcy5fcHJ2S2V5LmlzUHJpdmF0ZT10cnVlO3RoaXMuX3BydktleS5pc1B1YmxpYz1mYWxzZTt2YXIgcHViS2V5PW5ldyBLSlVSLmNyeXB0by5FQ0RTQSh7Y3VydmU6J3NlY3AyNTZrMSd9KTt0aGlzLnByaXZhdGVLZXk9X2pzcnNhc2lnbjIuZGVmYXVsdC5LRVlVVElMLmdldFBFTSh0aGlzLl9wcnZLZXksJ1BLQ1M4UFJWJyk7cHViS2V5LnNldFB1YmxpY0tleUhleChoUHViKTtwdWJLZXkuaXNQcml2YXRlPWZhbHNlO3B1YktleS5pc1B1YmxpYz10cnVlO3ZhciBwdWJsaWNLZXk9X2pzcnNhc2lnbjIuZGVmYXVsdC5LRVlVVElMLmdldFBFTShwdWJLZXksJ1BLQ1M4UFVCJyk7cHVibGljS2V5PXB1YmxpY0tleS5yZXBsYWNlKC8oXHJcbnxcbnxccikvZ20sJycpO3RoaXMuZ2xvYmFsUmVnaXN0cnlSZWNvcmQucHVibGljS2V5PXB1YmxpY0tleTsgLy8gZ2VuZXJhdGUgc2FsdA0KdmFyIHNhbHRIYXNoZWRCaXRBcnJheT1fc2pjbDIuZGVmYXVsdC5oYXNoLnNoYTI1Ni5oYXNoKHNhbHRXb3JkKTt2YXIgc2FsdD1fc2pjbDIuZGVmYXVsdC5jb2RlYy5iYXNlNjQuZnJvbUJpdHMoc2FsdEhhc2hlZEJpdEFycmF5KTt0aGlzLmdsb2JhbFJlZ2lzdHJ5UmVjb3JkLnNhbHQ9c2FsdDsgLy8gZ2VuZXJhdGUgR1VJRA0KdmFyIGl0ZXJhdGlvbnM9MTAwMDA7dmFyIGd1aWRCaXRBcnJheT1fc2pjbDIuZGVmYXVsdC5taXNjLnBia2RmMih0aGlzLmdsb2JhbFJlZ2lzdHJ5UmVjb3JkLnB1YmxpY0tleSxzYWx0LGl0ZXJhdGlvbnMpO3ZhciBndWlkPV9zamNsMi5kZWZhdWx0LmNvZGVjLmJhc2U2NHVybC5mcm9tQml0cyhndWlkQml0QXJyYXkpO3RoaXMuZ2xvYmFsUmVnaXN0cnlSZWNvcmQuZ3VpZD1ndWlkO30gLyoqDQogICAqIFNpZ25HZW5lcmF0ZXMgYSBwdWJsaWMvcHJpdmF0ZSBrZXkgcGFpciBmcm9tIGEgZ2l2ZW4gbW5lbW9uaWMuDQogICAqIEByZXR1cm5zICB7c3RyaW5nfSAgICAgSldUICAgICBKU09OIFdlYiBUb2tlbiByZWFkeSB0byBjb21taXQgdG8gR2xvYmFsIFJlZ2lzdHJ5Lg0KICAgKi99LHtrZXk6J3NpZ25HbG9iYWxSZWdpc3RyeVJlY29yZCcsdmFsdWU6ZnVuY3Rpb24gc2lnbkdsb2JhbFJlZ2lzdHJ5UmVjb3JkKCl7dmFyIHJlY29yZD10aGlzLmdsb2JhbFJlZ2lzdHJ5UmVjb3JkLmdldFJlY29yZCgpO3ZhciByZWNvcmRTdHJpbmc9KDAsX3N0cmluZ2lmeTIuZGVmYXVsdCkocmVjb3JkKTt2YXIgcmVjb3JkU3RyaW5nQmFzZTY0PV9iYXNlNjRVcmwyLmRlZmF1bHQuZW5jb2RlKHJlY29yZFN0cmluZyk7dmFyIGp3dFRlbXA9S0pVUi5qd3MuSldTLnNpZ24obnVsbCx7YWxnOidFUzI1Nid9LHtkYXRhOnJlY29yZFN0cmluZ0Jhc2U2NH0sdGhpcy5fcHJ2S2V5KTt2YXIgZW5jb2RlZFN0cmluZz1qd3RUZW1wLnNwbGl0KCcuJykuc2xpY2UoMCwyKS5qb2luKCcuJyk7dmFyIHNpZz1uZXcgS0pVUi5jcnlwdG8uU2lnbmF0dXJlKHthbGc6J1NIQTI1NndpdGhFQ0RTQSd9KTtzaWcuaW5pdCh0aGlzLnByaXZhdGVLZXkpO3NpZy51cGRhdGVTdHJpbmcoZW5jb2RlZFN0cmluZyk7dmFyIHNpZ25hdHVyZUhleD1zaWcuc2lnbigpO3ZhciBzaWduYXR1cmU9X2hleDIuZGVmYXVsdC50b0Jhc2U2NChzaWduYXR1cmVIZXgpO3ZhciBqd3Q9ZW5jb2RlZFN0cmluZysnLicrc2lnbmF0dXJlO3JldHVybiBqd3Q7fSAvKioNCiAgICogVGFrZXMgdGhlIEdsb2JhbCBSZWdpc3RyeSBSZWNvcmQgYXMgYSBzaWduZWQgSldUIGFuZCBzZW5kcyBpdCB0byB0aGUgR2xvYmFsIFJlZ2lzdHJ5IHZpYSB0aGUgTWVzc2FnZUJ1cy4NCiAgICogUmV0dXJucyB0aGUgcmVzcG9uc2UgY29kZSBvZiB0aGUgUkVTVC1pbnRlcmZhY2Ugb2YgdGhlIEdsb2JhbCBSZWdpc3RyeSBhcyBhIFByb21pc2UuDQogICAqIEBwYXJhbSAge3N0cmluZ30gICAgIGp3dCAgICAgVGhlIEdsb2JhbCBSZWdpc3RyeSBSZWNvcmQgYXMgYSBzaWduZWQgSldULg0KICAgKiBAcmV0dXJucyB7UHJvcG1pc2V9ICBQcm9taXNlIFJlc3BvbnNlIENvZGUgZnJvbSBHbG9iYWwgUmVnaXN0cnkuDQogICAqL30se2tleTonc2VuZEdsb2JhbFJlZ2lzdHJ5UmVjb3JkJyx2YWx1ZTpmdW5jdGlvbiBzZW5kR2xvYmFsUmVnaXN0cnlSZWNvcmQoand0KXt2YXIgcGF5bG9hZE9iaj1LSlVSLmp3cy5KV1MucGFyc2Uoand0KS5wYXlsb2FkT2JqO3ZhciBndWlkPXBheWxvYWRPYmouZ3VpZDt2YXIgX3RoaXM9dGhpczt2YXIgbXNnPXt0eXBlOidDUkVBVEUnLGZyb206dGhpcy5faHlwZXJ0eVJ1bnRpbWVVUkwrJy9ncmFwaC1jb25uZWN0b3InLHRvOidnbG9iYWw6Ly9yZWdpc3RyeS8nLGJvZHk6e2d1aWQ6dGhpcy5nbG9iYWxSZWdpc3RyeVJlY29yZC5ndWlkLGp3dDpqd3R9fTtyZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXtpZihfdGhpcy5tZXNzYWdlQnVzPT09dW5kZWZpbmVkKXtyZWplY3QoJ01lc3NhZ2VCdXMgbm90IGZvdW5kIG9uIEdyYXBoQ29ubmVjdG9yJyk7fWVsc2Uge190aGlzLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UobXNnLGZ1bmN0aW9uKHJlcGx5KXt2YXIgcmVzcG9uc2VDb2RlPXJlcGx5LmJvZHkucmVzcG9uc2VDb2RlO2lmKHJlc3BvbnNlQ29kZT09MjAwKXtyZXNvbHZlKDIwMCk7fWVsc2Uge3JlamVjdChyZXNwb25zZUNvZGUpO319KTt9fSk7fSAvKioNCiAgICogUXVlcmllcyB0aGUgR2xvYmFsIFJlZ2lzdHJ5IGZvciBhIGdpdmVuIEdVSUQuDQogICAqIFJldHVybnMgYSBHcmFwaCBDb25uZWN0b3IgQ29udGFjdCBEYXRhIGFzIGEgUHJvbWlzZS4NCiAgICogQHBhcmFtICB7c3RyaW5nfSAgIGd1aWQgIFRoZSBHVUlEIHRvIHF1ZXJ5IHRoZSBHbG9iYWwgUmVnaXN0cnkgZm9yDQogICAqIEByZXR1cm5zICAge1Byb21pc2V9ICAgUHJvbWlzZSAgIEdyYXBoIENvbm5lY3RvciBDb250YWN0IERhdGEgY29udGFpbmluZyBVc2VySURzLg0KICAgKi99LHtrZXk6J3F1ZXJ5R2xvYmFsUmVnaXN0cnknLHZhbHVlOmZ1bmN0aW9uIHF1ZXJ5R2xvYmFsUmVnaXN0cnkoZ3VpZCl7dmFyIF90aGlzPXRoaXM7dmFyIG1zZz17dHlwZTonUkVBRCcsZnJvbTp0aGlzLl9oeXBlcnR5UnVudGltZVVSTCsnL2dyYXBoLWNvbm5lY3RvcicsdG86J2dsb2JhbDovL3JlZ2lzdHJ5LycsYm9keTp7Z3VpZDpndWlkfX07cmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7aWYoX3RoaXMubWVzc2FnZUJ1cz09PXVuZGVmaW5lZCl7cmVqZWN0KCdNZXNzYWdlQnVzIG5vdCBmb3VuZCBvbiBHcmFwaENvbm5lY3RvcicpO31lbHNlIHtfdGhpcy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG1zZyxmdW5jdGlvbihyZXBseSl7IC8vIHJlcGx5IHNob3VsZCBiZSB0aGUgSlNPTiByZXR1cm5lZCBmcm9tIHRoZSBHbG9iYWwgUmVnaXN0cnkgUkVTVC1pbnRlcmZhY2UNCnZhciBqd3Q9cmVwbHkuYm9keS5kYXRhO3ZhciB1bndyYXBwZWRKV1Q9S0pVUi5qd3MuSldTLnBhcnNlKHJlcGx5LmJvZHkuZGF0YSk7dmFyIGRhdGFFbmNvZGVkPXVud3JhcHBlZEpXVC5wYXlsb2FkT2JqLmRhdGE7dmFyIGRhdGFEZWNvZGVkPV9iYXNlNjRVcmwyLmRlZmF1bHQuZGVjb2RlKGRhdGFFbmNvZGVkKTt2YXIgZGF0YUpTT049SlNPTi5wYXJzZShkYXRhRGVjb2RlZCk7dmFyIHB1YmxpY0tleU9iamVjdD1fanNyc2FzaWduMi5kZWZhdWx0LktFWVVUSUwuZ2V0S2V5KGRhdGFKU09OLnB1YmxpY0tleSk7dmFyIGVuY29kZWRTdHJpbmc9and0LnNwbGl0KCcuJykuc2xpY2UoMCwyKS5qb2luKCcuJyk7dmFyIHNpZ1ZhbHVlSGV4PXVud3JhcHBlZEpXVC5zaWdIZXg7dmFyIHNpZz1uZXcgS0pVUi5jcnlwdG8uU2lnbmF0dXJlKHthbGc6J1NIQTI1NndpdGhFQ0RTQSd9KTtzaWcuaW5pdChwdWJsaWNLZXlPYmplY3QpO3NpZy51cGRhdGVTdHJpbmcoZW5jb2RlZFN0cmluZyk7dmFyIGlzVmFsaWQ9c2lnLnZlcmlmeShzaWdWYWx1ZUhleCk7aWYoIWlzVmFsaWQpe3JlamVjdCgnUmV0cmlldmVkIFJlY29yZCBub3QgdmFsaWQhJyk7fWVsc2Uge3ZhciBxdWVyaWVkQ29udGFjdD1uZXcgX0dyYXBoQ29ubmVjdG9yQ29udGFjdERhdGEyLmRlZmF1bHQoZGF0YUpTT04uZ3VpZCwnJywnJyk7aWYodHlwZW9mIGRhdGFKU09OLnVzZXJJRHMhPSd1bmRlZmluZWQnJiZkYXRhSlNPTi51c2VySURzIT1udWxsKXtxdWVyaWVkQ29udGFjdC51c2VySURzPWRhdGFKU09OLnVzZXJJRHM7fXJlc29sdmUocXVlcmllZENvbnRhY3QpO319KTt9fSk7fSAvKioNCiAgICogQWRkcyBhIFVzZXJJRCBmb3IgdGhlIHVzZXIuDQogICAqIEBwYXJhbSAge3N0cmluZ30gICAgIHVzZXJJRCAgICAgICAgICBUaGUgVXNlcklEIGZvciBhIERvbWFpbiBSZWdpc3RyeSB0byBhZGQgZm9yIHRoZSB1c2VyLg0KICAgKi99LHtrZXk6J2FkZFVzZXJJRCcsdmFsdWU6ZnVuY3Rpb24gYWRkVXNlcklEKHVzZXJJRCl7IC8vIGNoZWNrIGlmIGFscmVhZHkgaW5zaWRlDQp2YXIgZm91bmQ9ZmFsc2U7Zm9yKHZhciBpPTA7aTx0aGlzLmdsb2JhbFJlZ2lzdHJ5UmVjb3JkLnVzZXJJRHMubGVuZ3RoO2krKyl7aWYodGhpcy5nbG9iYWxSZWdpc3RyeVJlY29yZC51c2VySURzPT11c2VySUQpe2ZvdW5kPXRydWU7fX1pZighZm91bmQpe3RoaXMuZ2xvYmFsUmVnaXN0cnlSZWNvcmQudXNlcklEcy5wdXNoKHVzZXJJRCk7fX0gLyoqDQogICAqIFJlbW92ZXMgYSBVc2VySUQgZm9yIHRoZSB1c2VyLg0KICAgKiBAcGFyYW0gIHtzdHJpbmd9ICAgICB1c2VySUQgICAgICAgICAgVGhlIFVzZXJJRCB0byByZW1vdmUuDQogICAqL30se2tleToncmVtb3ZlVXNlcklEJyx2YWx1ZTpmdW5jdGlvbiByZW1vdmVVc2VySUQodXNlcklEKXtmb3IodmFyIGk9MDtpPHRoaXMuZ2xvYmFsUmVnaXN0cnlSZWNvcmQudXNlcklEcy5sZW5ndGg7aSsrKXtpZih0aGlzLmdsb2JhbFJlZ2lzdHJ5UmVjb3JkLnVzZXJJRHM9PXVzZXJJRCl7dGhpcy5nbG9iYWxSZWdpc3RyeVJlY29yZC51c2VySURzLnNwbGljZShpLDEpO319fSAvKioNCiAgICogQWRkIGEgY29udGFjdCB0byB0aGUgR3JhcGggQ29ubmVjdG9yLg0KICAgKiBAcGFyYW0gIHtzdHJpbmd9ICAgZ3VpZCAgICAgICAgICBHVUlEIG9mIHRoZSBuZXcgY29udGFjdC4NCiAgICogQHBhcmFtICB7c3RyaW5nfSAgIGZpcnN0TmFtZSAgICAgRmlyc3QgbmFtZSBvZiB0aGUgbmV3IGNvbnRhY3QuDQogICAqIEBwYXJhbSAge3N0cmluZ30gICBsYXN0bmFtZSAgICAgIExhc3QgbmFtZSBvZiB0aGUgbmV3IGNvbnRhY3QuDQogICAqL30se2tleTonYWRkQ29udGFjdCcsdmFsdWU6ZnVuY3Rpb24gYWRkQ29udGFjdChndWlkLGZpcnN0TmFtZSxsYXN0TmFtZSl7IC8vIFRPRE86IHdoYXQgaWYgdHdvIGNvbnRhY3RzIGhhdmUgdGhlIHNhbWUgR1VJRD8NCi8vIFRPRE86IHJlamVjdCBpbnZhbGlkIEdVSURzDQp0aGlzLmNvbnRhY3RzLnB1c2gobmV3IF9HcmFwaENvbm5lY3RvckNvbnRhY3REYXRhMi5kZWZhdWx0KGd1aWQsZmlyc3ROYW1lLGxhc3ROYW1lKSk7fSAvKioNCiAgICogUmVtb3ZlIGEgY29udGFjdCBmcm9tIHRoZSBHcmFwaCBDb25uZWN0b3IuDQogICAqIEBwYXJhbSAge3N0cmluZ30gICAgIGd1aWQgICAgICBHVUlEIG9mIHRoZSB1c2VyIHRvIGJlIHJlbW92ZWQuDQogICAqL30se2tleToncmVtb3ZlQ29udGFjdCcsdmFsdWU6ZnVuY3Rpb24gcmVtb3ZlQ29udGFjdChndWlkKXsgLy8gcmVtb3ZlIGZyb20gY29udGFjdHMNCmZvcih2YXIgaT0wO2k8dGhpcy5jb250YWN0cy5sZW5ndGg7aSsrKXtpZih0aGlzLmNvbnRhY3RzW2ldLmd1aWQ9PWd1aWQpe3RoaXMuY29udGFjdHMuc3BsaWNlKGksMSk7fX0gLy8gcmUtY2FsY3VsYXRlIEJGMWhvcA0KdGhpcy5jYWxjdWxhdGVCbG9vbUZpbHRlcjFIb3AoKTt9IC8qKg0KICAgKiBDYWxjdWxhdGVzIHRoZSBCbG9vbSBmaWx0ZXIgY29udGFpbmluZyBhbGwgbm9uLXByaXZhdGUgY29udGFjdHMuDQogICAqL30se2tleTonY2FsY3VsYXRlQmxvb21GaWx0ZXIxSG9wJyx2YWx1ZTpmdW5jdGlvbiBjYWxjdWxhdGVCbG9vbUZpbHRlcjFIb3AoKXt2YXIgYmY9bmV3IF9CbG9vbUZpbHRlcjIuZGVmYXVsdCg0MzEzMjgsIC8vIG51bWJlciBvZiBiaXRzIHRvIGFsbG9jYXRlLiBXaXRoIDMwMDAwIGVudHJpZXMsIHdlIGhhdmUgYSBmYWxzZSBwb3NpdGl2ZSByYXRlIG9mIDAuMSAlLg0KMTAgLy8gbnVtYmVyIG9mIGhhc2ggZnVuY3Rpb25zLg0KKTtmb3IodmFyIGk9MDtpPHRoaXMuY29udGFjdHMubGVuZ3RoO2krKyl7aWYoIXRoaXMuY29udGFjdHNbaV0ucHJpdmF0ZUNvbnRhY3Qpe2JmLmFkZCh0aGlzLmNvbnRhY3RzW2ldLmd1aWQpO319dGhpcy5jb250YWN0c0Jsb29tRmlsdGVyMUhvcD1iZjt0aGlzLmxhc3RDYWxjdWxhdGlvbkJsb29tRmlsdGVyMUhvcD1uZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7fSAvKioNCiAgICogR2V0cyBjb250YWN0cyBieSBuYW1lLg0KICAgKiBAcGFyYW0gIHtzdHJpbmd9ICAgbmFtZSAgICBGaXJzdCBvciBsYXN0IG5hbWUgdG8gbG9vayBmb3IgaW4gdGhlIGNvbnRhY3QgbGlzdC4NCiAgICogQHJldHVybnMgIHthcnJheX0gICBtYXRjaGluZ0NvbnRhY3RzICAgICAgIENvbnRhY3RzIG1hdGNoaW5nIHRoZSBnaXZlbiBuYW1lLiBUaGUgZm9ybWF0IGlzOiBDb250YWN0czxHcmFwaENvbm5lY3RvckNvbnRhY3REYXRhPi4NCiAgICovfSx7a2V5OidnZXRDb250YWN0Jyx2YWx1ZTpmdW5jdGlvbiBnZXRDb250YWN0KG5hbWUpeyAvLyBUT0RPOiBvcHRpbWl6ZSwgZS5nLiwgZmluZCBtaXNzcGVsbGVkIHBlb3BsZQ0KdmFyIHJ0bkFycmF5PVtdO2Zvcih2YXIgaT0wO2k8dGhpcy5jb250YWN0cy5sZW5ndGg7aSsrKXtpZih0aGlzLmNvbnRhY3RzW2ldLmZpcnN0TmFtZT09bmFtZXx8dGhpcy5jb250YWN0c1tpXS5sYXN0TmFtZT09bmFtZSl7cnRuQXJyYXkucHVzaCh0aGlzLmNvbnRhY3RzW2ldKTt9fXJldHVybiBydG5BcnJheTt9IC8qKg0KICAgKiBDaGVja3MsIGlmIHRoZSBnaXZlbiBHVUlEIGlzIGtub3duIGFuZCByZXR1cm5zIGEgbGlzdCBvZiBjb250YWNzIHRoYXQgYXJlIGRpcmVjdCBjb25uZWN0aW9ucyBhcyB3ZWxsIGFzIGEgbGlzdCBvZiBjb250YWN0cyB0aGF0IChtb3N0IGxpa2VseSkga25vdyB0aGUgZ2l2ZW4gY29udGFjdC4NCiAgICogQHBhcmFtICB7c3RyaW5nfSAgICAgZ3VpZCAgICAgIEdVSUQgb2YgdGhlIGNvbnRhY3QgdG8gbG9vayBmb3IuDQogICAqIEByZXR1cm5zICB7YXJyYXl9ICAgIHJlbGF0ZWRDb250YWN0cyAgICAgTGlzdCBvZiByZWxhdGVkIGRpcmVjdCBjb250YWN0cyBhbmQgb2YgcmVsYXRlZCBmcmllbmRzLW9mLWZyaWVuZHMgY29udGFjdHMuVGhlIGZvcm1hdCBpczogUmVsYXRlZENvbnRhY3RzPERpcmVjdDxHcmFwaENvbm5lY3RvckNvbnRhY3REYXRhPixGb0Y8R3JhcGhDb25uZWN0b3JDb250YWN0RGF0YT4+Lg0KICAgKi99LHtrZXk6J2NoZWNrR1VJRCcsdmFsdWU6ZnVuY3Rpb24gY2hlY2tHVUlEKGd1aWQpe3ZhciBkaXJlY3RDb250YWN0c0FycmF5PVtdO3ZhciBmb2ZDb250YWN0c0FycmF5PVtdO2Zvcih2YXIgaT0wO2k8dGhpcy5jb250YWN0cy5sZW5ndGg7aSsrKXtpZih0aGlzLmNvbnRhY3RzW2ldLmd1aWQ9PWd1aWQpe2RpcmVjdENvbnRhY3RzQXJyYXkucHVzaCh0aGlzLmNvbnRhY3RzW2ldKTt9dmFyIGJmMWhvcD10aGlzLmNvbnRhY3RzW2ldLmNvbnRhY3RzQmxvb21GaWx0ZXIxSG9wO2lmKGJmMWhvcCE9PXVuZGVmaW5lZCl7aWYoYmYxaG9wLnRlc3QoZ3VpZCkpe2ZvZkNvbnRhY3RzQXJyYXkucHVzaCh0aGlzLmNvbnRhY3RzW2ldKTt9fX12YXIgcnRuQXJyYXk9W107cnRuQXJyYXkucHVzaChkaXJlY3RDb250YWN0c0FycmF5LGZvZkNvbnRhY3RzQXJyYXkpO3JldHVybiBydG5BcnJheTt9IC8vIFRPRE86IGV4cG9ydEdyYXBoRGF0YSg/KXt9DQovLyBUT0RPOiBpbXBvcnRHcmFwaERhdGEoPyl7fQ0KfSx7a2V5OidtZXNzYWdlQnVzJyxnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIHRoaXMuX21lc3NhZ2VCdXM7fSAvKioNCiAgKiBTZXRzIHRoZSBNZXNzYWdlQnVzLg0KICAqIEBwYXJhbSB7TWVzc2FnZUJ1c30gICAgICAgICAgIG1lc3NhZ2VCdXMgICAgVGhlIE1lc3NhZ2UgQnVzLg0KICAqLyxzZXQ6ZnVuY3Rpb24gc2V0KG1lc3NhZ2VCdXMpe3RoaXMuX21lc3NhZ2VCdXM9bWVzc2FnZUJ1czt9fV0pO3JldHVybiBHcmFwaENvbm5lY3Rvcjt9KCk7ZXhwb3J0cy5kZWZhdWx0PUdyYXBoQ29ubmVjdG9yO21vZHVsZS5leHBvcnRzPWV4cG9ydHNbJ2RlZmF1bHQnXTsNCg0KfSx7Ii4vQmxvb21GaWx0ZXIiOjU5NCwiLi9HbG9iYWxSZWdpc3RyeVJlY29yZCI6NTk1LCIuL0dyYXBoQ29ubmVjdG9yQ29udGFjdERhdGEiOjU5NywiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5IjoxOCwiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiOjI1LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjI4LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjI5LCJiYXNlNjQtdXJsIjozNCwiYmlwMzkiOjM5LCJiaXRjb2luanMtbGliIjo1MCwiYnVmZmVyIjo5MywiaGV4NjQiOjUzMywianNyc2FzaWduIjo1NDAsInNqY2wiOjU3OX1dLDU5NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQoidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7dmFyIF9jbGFzc0NhbGxDaGVjazI9cmVxdWlyZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIik7dmFyIF9jbGFzc0NhbGxDaGVjazM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NDYWxsQ2hlY2syKTt2YXIgX2NyZWF0ZUNsYXNzMj1yZXF1aXJlKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKTt2YXIgX2NyZWF0ZUNsYXNzMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVDbGFzczIpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfTt9IC8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqLyAvKioNCiogUmVwcmVzZW50cyBpbmZvcm1hdGlvbiBhYm91dCBhIGNvbnRhY3QuDQoqIEBhdXRob3IgYmVpZXJsZUB0dS1iZXJsaW4uZGUNCiovdmFyIEdyYXBoQ29ubmVjdG9yQ29udGFjdERhdGE9ZnVuY3Rpb24oKXsgLyoqDQogICAqIENvbnN0cnVjdHMgYSBuZXcgb2JqZWN0IHJlcHJlc2VudGluZyBpbmZvcm1hdGlvbiBhYm91dCBvbmUgY29udGFjdC4NCiAgICogQHBhcmFtICB7U3RyaW5nfSAgICAgZ3VpZCAgICAgICAgVGhlIEdVSUQgb2YgdGhlIG5ldyBjb250YWN0Lg0KICAgKiBAcGFyYW0gIHtTdHJpbmd9ICAgZmlyc3ROYW1lICAgVGhlIGZpcnN0IG5hbWUgb2YgdGhlIG5ldyBjb250YWN0Lg0KICAgKiBAcGFyYW0gIHtTdHJpbmd9ICAgbGFzdE5hbWUgICAgVGhlIGxhc3QgbmFtZSBvZiB0aGUgbmV3IGNvbnRhY3QuDQogICAqL2Z1bmN0aW9uIEdyYXBoQ29ubmVjdG9yQ29udGFjdERhdGEoZ3VpZCxmaXJzdE5hbWUsbGFzdE5hbWUpeygwLF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcyxHcmFwaENvbm5lY3RvckNvbnRhY3REYXRhKTt0aGlzLl9ndWlkPWd1aWQ7dGhpcy5fdXNlcklEcz1bXTt0aGlzLl9maXJzdE5hbWU9Zmlyc3ROYW1lO3RoaXMuX2xhc3ROYW1lPWxhc3ROYW1lO3RoaXMuX3ByaXZhdGVDb250YWN0PWZhbHNlO3RoaXMuX2xhc3RTeW5jQmxvb21GaWx0ZXIxSG9wPW5ldyBEYXRlKDApLnRvSVNPU3RyaW5nKCk7dGhpcy5fbGFzdFN5bmNEb21haW5Vc2VySURzPW5ldyBEYXRlKDApLnRvSVNPU3RyaW5nKCk7dGhpcy5fcmVzaWRlbmNlTG9jYXRpb247dGhpcy5fZ3JvdXBzPVtdO30gLyoqDQogICAgICogUmV0dXJucyB0aGUgR1VJRC4NCiAgICAgKiBAcmV0dXJucyAge1N0cmluZ30gICAgIEdVSUQgICAgICAgIEdVSUQgb2YgdGhlIGNvbnRhY3QuDQogICAgICovKDAsX2NyZWF0ZUNsYXNzMy5kZWZhdWx0KShHcmFwaENvbm5lY3RvckNvbnRhY3REYXRhLFt7a2V5OiJndWlkIixnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIHRoaXMuX2d1aWQ7fSAvKioNCiAgICAgKiBTZXRzIHRoZSBHVUlELg0KICAgICAqIEBwYXJhbSAge1N0cmluZ30gICAgIEdVSUQgICAgICAgIEdVSUQgb2YgdGhlIGNvbnRhdC4NCiAgICAgKi8sc2V0OmZ1bmN0aW9uIHNldChndWlkKXt0aGlzLl9ndWlkPWd1aWQ7fSAvKioNCiAgICAgKiBSZXR1cm5zIHRoZSB1c2VyIElEcy4NCiAgICAgKiBAcmV0dXJucyAge0xpc3Q8U3RyaW5nPn0gICAgIHVzZXJJRHMgICAgICAgIFVzZXJJRHMgb2YgdGhlIGNvbnRhY3QuDQogICAgICovfSx7a2V5OiJ1c2VySURzIixnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIHRoaXMuX3VzZXJJRHM7fSAvKioNCiAgICAgKiBTZXRzIHRoZSB1c2VySURzLg0KICAgICAqIEBwYXJhbSAge0xpc3Q8U3RyaW5nPn0gICAgIHVzZXJJRHMgICAgICAgIFVzZXJJRHMgb2YgdGhlIGNvbnRhdC4NCiAgICAgKi8sc2V0OmZ1bmN0aW9uIHNldCh1c2VySURzKXt0aGlzLl91c2VySURzPXVzZXJJRHM7dGhpcy5fbGFzdFN5bmNEb21haW5Vc2VySURzPW5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTt9IC8qKg0KICAgICAqIFJldHVybnMgdGhlIGZpcnN0IG5hbWUuDQogICAgICogQHJldHVybnMgIHtTdHJpbmd9ICAgICBmaXJzdE5hbWUgICAgICAgIEZpcnN0IG5hbWUgb2YgdGhlIGNvbnRhY3QuDQogICAgICovfSx7a2V5OiJmaXJzdE5hbWUiLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fZmlyc3ROYW1lO30gLyoqDQogICAgICogU2V0cyB0aGUgZmlyc3QgbmFtZS4NCiAgICAgKiBAcGFyYW0gIHtTdHJpbmd9ICAgICBmaXJzdE5hbWUgICAgICAgIEZpcnN0IG5hbWUgb2YgdGhlIGNvbnRhdC4NCiAgICAgKi8sc2V0OmZ1bmN0aW9uIHNldChmaXJzdE5hbWUpe3RoaXMuX2ZpcnN0TmFtZT1maXJzdE5hbWU7fSAvKioNCiAgICAgKiBSZXR1cm5zIHRoZSBsYXN0IG5hbWUuDQogICAgICogQHJldHVybnMgIHtTdHJpbmd9ICAgICBsYXN0TmFtZSAgICAgICAgTGFzdCBuYW1lIG9mIHRoZSBjb250YWN0Lg0KICAgICAqL30se2tleToibGFzdE5hbWUiLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fbGFzdE5hbWU7fSAvKioNCiAgICAgKiBTZXRzIHRoZSBsYXN0IG5hbWUuDQogICAgICogQHBhcmFtICB7U3RyaW5nfSAgICAgbGFzdE5hbWUgICAgICAgIExhc3QgbmFtZSBvZiB0aGUgY29udGF0Lg0KICAgICAqLyxzZXQ6ZnVuY3Rpb24gc2V0KGxhc3ROYW1lKXt0aGlzLl9sYXN0TmFtZT1sYXN0TmFtZTt9IC8qKg0KICAgICAqIFJldHVybnMgdGhlIHByaXZhY3kgc3RhdHVzIG9mIHRoZSBjb250YWN0Lg0KICAgICAqIEByZXR1cm5zICB7Qm9vbGVhbn0gICAgIHByaXZhdGVDb250YWN0ICAgICAgICBUcnVlL2ZhbHNlIHZhbHVlIGluZGljYXRpbmcgdGhlIHByaXZhY3kgc3RhdHVzIG9mIHRoZSBjb250YWN0Lg0KICAgICAqL30se2tleToicHJpdmF0ZUNvbnRhY3QiLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fcHJpdmF0ZUNvbnRhY3Q7fSAvKioNCiAgICAgKiBTZXRzIHRoZSBwcml2YWN5IHN0YXR1cyBvZiB0aGUgY29udGFjdCBhY2NvcmRpbmcgdG8gdGhlIGdpdmVuIEJvb2xlYW4gdmFsdWUuDQogICAgICogQHBhcmFtICB7Qm9vbGVhbn0gICAgIGJvb2xQcml2YXRlICAgICAgICBUcnVlL2ZhbHNlIHZhbHVlIGluZGljYXRpbmcgdGhlIHByaXZhY3kgc3RhdHVzIG9mIHRoZSBjb250YWN0Lg0KICAgICAqLyxzZXQ6ZnVuY3Rpb24gc2V0KGJvb2xQcml2YXRlKXt0aGlzLl9wcml2YXRlQ29udGFjdD1ib29sUHJpdmF0ZTt9IC8qKg0KICAgICAqIFJldHVybnMgdGhlIEJsb29tIGZpbHRlciBjb250YWluaW5nIHRoZSBoYXNoZWQgR1VJRHMgb2YgdGhlIGNvbnRhY3RzIGZvciB0aGUgY29udGFjdC4NCiAgICAgKiBAcmV0dXJucyAge0Jsb29tRmlsdGVyfSAgICAgYmYgICAgICAgIEJsb29tIGZpbHRlciBmb3IgdGhlIGNvbnRhY3QuDQogICAgICovfSx7a2V5OiJjb250YWN0c0Jsb29tRmlsdGVyMUhvcCIsZ2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLl9jb250YWN0c0Jsb29tRmlsdGVyMUhvcDt9IC8qKg0KICAgICAqIFNldHMgdGhlIGZyaWVuZHMtb2YtZnJpZW5kcyBCbG9vbSBmaWx0ZXIgY29udGFpbmluZyB0aGUgaGFzaGVkIEdVSURzIG9mIHRoZSBjb250YWN0cyBmb3IgdGhlIGNvbnRhY3QuDQogICAgICogQHBhcmFtICB7Qmxvb21GaWx0ZXJ9ICAgICBiZiAgICAgICAgQmxvb20gZmlsdGVyIGZvciB0aGUgY29udGFjdC4NCiAgICAgKi8sc2V0OmZ1bmN0aW9uIHNldChiZil7dGhpcy5fY29udGFjdHNCbG9vbUZpbHRlcjFIb3A9YmY7dGhpcy5fbGFzdFN5bmNCbG9vbUZpbHRlcjFIb3A9bmV3IERhdGUoKS50b0lTT1N0cmluZygpO30gLyoqDQogICAgICogUmV0dXJucyB0aGUgZ2VvaGFzaCBvZiB0aGUgcmVzaWRlbmNlIGxvY2F0aW9uLg0KICAgICAqIEByZXR1cm5zICB7U3RyaW5nfSAgICAgZ2VvaGFzaCAgICAgICAgR2VvaGFzaCBvZiB0aGUgcmVzaWRlbmNlIGxvY2F0aW9uLg0KICAgICAqL30se2tleToicmVzaWRlbmNlTG9jYXRpb24iLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fcmVzaWRlbmNlTG9jYXRpb247fSAvKioNCiAgICAgKiBTZXRzIHRoZSBnZW9oYXNoIG9mIHRoZSByZXNpZGVuY2UgbG9jYXRpb24uDQogICAgICogQHBhcmFtICB7U3RyaW5nfSAgICAgZ2VvaGFzaCAgICAgICAgR2VvaGFzaCBvZiB0aGUgcmVzaWRlbmNlIGxvY2F0aW9uLg0KICAgICAqLyxzZXQ6ZnVuY3Rpb24gc2V0KGdlb2hhc2gpe3RoaXMuX3Jlc2lkZW5jZUxvY2F0aW9uPWdlb2hhc2g7fSAvKioNCiAgICAgKiBSZXR1cm5zIHRoZSBncm91cHMuDQogICAgICogQHJldHVybnMgIHtMaXN0PFN0cmluZz59ICAgICBncm91cHMgICAgICAgIEdyb3VwcyBvZiB0aGUgY29udGFjdC4NCiAgICAgKi99LHtrZXk6Imdyb3VwcyIsZ2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLl9ncm91cHM7fSAvKioNCiAgICAgKiBTZXRzIHRoZSBncm91cHMuDQogICAgICogQHBhcmFtICB7TGlzdDxTdHJpbmc+fSAgICAgZ3JvdXBzICAgICAgICBHcm91cHMgb2YgdGhlIGNvbnRhdC4NCiAgICAgKi8sc2V0OmZ1bmN0aW9uIHNldChncm91cHMpe3RoaXMuX2dyb3Vwcz1ncm91cHM7fX1dKTtyZXR1cm4gR3JhcGhDb25uZWN0b3JDb250YWN0RGF0YTt9KCk7ZXhwb3J0cy5kZWZhdWx0PUdyYXBoQ29ubmVjdG9yQ29udGFjdERhdGE7bW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1snZGVmYXVsdCddOw0KDQp9LHsiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoyOCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoyOX1dLDU5ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7dmFyIF9jbGFzc0NhbGxDaGVjazI9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrJyk7dmFyIF9jbGFzc0NhbGxDaGVjazM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NDYWxsQ2hlY2syKTt2YXIgX2NyZWF0ZUNsYXNzMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MnKTt2YXIgX2NyZWF0ZUNsYXNzMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVDbGFzczIpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfTt9IC8qKg0KKiBUaGUgSWRlbnRpdHkgRGF0YSBNb2RlbCBpcyB1c2VkIHRvIG1vZGVsIHRoZSByZVRISU5LIFVzZXIgZW50aXR5LiBUaGUgSWRlbnRpdHkgZGF0YSBtb2RlbCBpcyBoYW5kbGVkIGJ5IElkZW50aXR5IE1hbmFnZW1lbnQgZnVuY3Rpb25hbGl0eS4NCioNCiovdmFyIElkZW50aXR5PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gSWRlbnRpdHkoZ3VpZCx0eXBlKXsoMCxfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsSWRlbnRpdHkpO3ZhciBfdGhpcz10aGlzO190aGlzLmd1aWQ9Z3VpZDtfdGhpcy50eXBlPXR5cGU7X3RoaXMuaWRlbnRpZmllcnNMaXN0PXt9O30oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKElkZW50aXR5LFt7a2V5OidhZGRJZGVudGl0eScsdmFsdWU6ZnVuY3Rpb24gYWRkSWRlbnRpdHkoaWRlbnRpZmllcil7dmFyIF90aGlzPXRoaXM7dmFyIGlkZW50aXR5SW5mb3JtYXRpb249e2lkQXNzZXJ0aW9uOicnLHNlcnZpY2VBZGRyZXNzOicnLGF1dGhlbnRpY2F0aW9uRGF0YTonJyxhdXRob3Jpc2F0aW9uRGF0YTonJyx1c2VyUHJvZmlsZTonJ307X3RoaXMuaWRlbnRpZmllcnNMaXN0W2lkZW50aWZpZXJdPWlkZW50aXR5SW5mb3JtYXRpb247fX0se2tleTonYWRkSWRBc3NlcnRpb24nLHZhbHVlOmZ1bmN0aW9uIGFkZElkQXNzZXJ0aW9uKGlkZW50aWZpZXIsYXNzZXJ0aW9uLGlkcCxzY29wZSl7dmFyIF90aGlzPXRoaXM7dmFyIG5ld0lkQXNzZXJ0aW9uPW5ldyBJZEFzc2VydGlvbihhc3NlcnRpb24saWRwLHNjb3BlKTtfdGhpcy5pZEFzc2VydGlvbkxpc3QucHVzaChuZXdJZEFzc2VydGlvbik7fX1dKTtyZXR1cm4gSWRlbnRpdHk7fSgpO3ZhciBJZEFzc2VydGlvbj1mdW5jdGlvbiBJZEFzc2VydGlvbihhc3NlcnRpb24saWRwLHNjb3BlKXsoMCxfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsSWRBc3NlcnRpb24pO3ZhciBfdGhpcz10aGlzO190aGlzLmFzc2VydGlvbj1hc3NlcnRpb247X3RoaXMuaWRwPWlkcDtfdGhpcy5zY29wZT1zY29wZTt9O3ZhciBJZFZhbGlkYXRpb249ZnVuY3Rpb24oKXtmdW5jdGlvbiBJZFZhbGlkYXRpb24oaWRlbnRpdHksY29udGVudHMpeygwLF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcyxJZFZhbGlkYXRpb24pO3ZhciBfdGhpcz10aGlzO190aGlzLmlkZW50aXR5PWlkZW50aXR5O190aGlzLmNvbnRlbnRzPWNvbnRlbnRzO30oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKElkVmFsaWRhdGlvbixbe2tleTondmFsaWRhdGVzJyx2YWx1ZTpmdW5jdGlvbiB2YWxpZGF0ZXMoaWRlbnRpdHksY29udGVudHMpeyAvL1RPRE8gaW1wbGVtZW50IHRoZSBsb2dpYw0KfX1dKTtyZXR1cm4gSWRWYWxpZGF0aW9uO30oKTtleHBvcnRzLmRlZmF1bHQ9SWRlbnRpdHk7bW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1snZGVmYXVsdCddOw0KDQp9LHsiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoyOCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoyOX1dLDU5OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7dmFyIF9wcm9taXNlPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlJyk7dmFyIF9wcm9taXNlMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9taXNlKTt2YXIgX2NsYXNzQ2FsbENoZWNrMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2snKTt2YXIgX2NsYXNzQ2FsbENoZWNrMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO3ZhciBfY3JlYXRlQ2xhc3MyPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcycpO3ZhciBfY3JlYXRlQ2xhc3MzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUNsYXNzMik7dmFyIF91dGlscz1yZXF1aXJlKCcuLi91dGlscy91dGlscy5qcycpO3ZhciBfSWRlbnRpdHk9cmVxdWlyZSgnLi9JZGVudGl0eScpO3ZhciBfSWRlbnRpdHkyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0lkZW50aXR5KTtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian07fSAvKioNCioNCiogVGhlIElkZW50aXR5IE1vZHVsZSAoSWQgTW9kdWxlKSBpcyB0aGUgY29tcG9uZW50IHJlc3BvbnNpYmxlIGZvciBoYW5kbGluZyB0aGUNCiogdXNlciBpZGVudGl0eSBhbmQgdGhlIGFzc29jaWF0aW9uIG9mIHRoaXMgaWRlbnRpdHkgd2l0aCB0aGUgSHlwZXJ0eSBpbnN0YW5jZXMsDQoqIGluIG9yZGVyIHRvIG1ha2UgSHlwZXJ0eSBpbnN0YW5jZXMgaWRlbnRpZmlhYmxlLiBUaGUgaWRlbnRpdHkgaW4gdGhlIHJlVEhJTksgcHJvamVjdA0KKiBpcyBub3QgZml4ZWQgdG8gYSB1bmlxdWUgSWRlbnRpdHkgU2VydmljZSBQcm92aWRlciwgYnV0IG9idGFpbmVkIHRocm91Z2ggc2V2ZXJhbA0KKiBkaWZmZXJlbnQgSWRlbnRpdHkgc291cmNlcy4gV2l0aCB0aGlzIGFwcHJvYWNoLCB0aGUgSWQgTW9kdWxlIHByb3ZpZGVzIHRvIHRoZSB1c2VyIHRoZQ0KKiBvcHRpb24gdG8gY2hvb3NlIHRoZSBwcmVmZXJyZWQgbWV0aG9kIGZvciBhdXRoZW50aWNhdGlvbi4NCiogVGhpcyBtb2R1bGUgd2lsbCB0aHVzIGFibGUgdG8gc3VwcG9ydCBtdWx0aXBsZSBJZGVudGl0eSBhY3F1aXNpdGlvbiBtZXRob2RzLA0KKiBzdWNoIGFzIE9wZW5JRCBjb25uZWN0IDEuMCwgS2VyYmVyb3MgU3lzdGVtLCBvciBhdXRoZW50aWNhdGlvbiB0aHJvdWdoIHNtYXJ0IGNhcmRzLg0KKiBGb3IgZXhhbXBsZSwgYSB1c2VyIHdpdGggYSBHb29nbGUgYWNjb3VudCBjYW4gdXNlIHRoZSBHb29nbGUgYXMgYW4gSWRlbnRpdHkgUHJvdmlkZXIgdG8gcHJvdmlkZSBJZGVudGl0eSBUb2tlbnMsDQoqICB3aGljaCBjYW4gYmUgdXNlZCBieSB0aGUgSWRlbnRpdHkgTW9kdWxlIHRvIGFzc29jaWF0ZSBpdCB3aXRoIGEgSHlwZXJ0eSBpbnN0YW5jZS4NCioNCiogVGhlIElkZW50aXR5IE1vZHVsZSB1c2VzIGEgbm9kZSBwYWNrYWdlLCB0aGUgSGVsbG9KUywgd2hpY2ggaXMgYSBjbGllbnQtc2lkZSBKYXZhU2NyaXB0IEFQSSBmb3IgYXV0aGVudGljYXRpb24NCiogdGhhdCBmYWNpbGl0YXRlcyB0aGUgcmVxdWVzdHMgZm9yIHRoZSBPcGVuSUQgY29ubmVjdCBwcm90b2NvbC4gVGhpcyBtZXRob2QgYWxsb3dzIGZvciBzb21lIGFic3RyYWN0aW9uDQoqIHdoZW4gbWFraW5nIHJlcXVlc3RzIGZvciBkaWZmZXJlbnQgSWRlbnRpdHkgUHJvdmlkZXJzLCBzdWNoIGFzIE9wZW5JRCBjb25uZWN0IHVzZWQgYnkgR29vZ2xlLCBGYWNlYm9vaywgTWljcm9zb2Z0LCBmb3IgZXhhbXBsZS4NCioNCiogV2hlbiBhIHJlcXVlc3QgZm9yIGEgdXNlciBpZGVudGl0eSBpcyBtYWRlIHVzaW5nIHRoZSBtZXRob2QgbG9naW5XaXRoUlAoaWRlbnRpZmllciwgc2NvcGUpLA0KKiB0aGlzIG1ldGhvZCB3aWxsIGFuYWx5c2UgdGhlIElkZW50aXR5IFByb3ZpZGVyIGNob3NlbiB0byBvYnRhaW4gYW4gaWRlbnRpdHkgYW5kIHdpbGwgdXNlIHRoZSBIZWxsb0pTIG5vZGUgcGFja2FnZQ0KKiB3aXRoIHRoZSBzZWxlY3RlZCBJZGVudGl0eSBQcm92aWRlciBhbmQgaWRlbnRpdHkgc2NvcGUuIEFmdGVyIHRoZSBIZWxsb0pTIHJlcXVlc3QgZm9yIGFuIEFjY2VzcyBUb2tlbg0KKiB0byB0aGUgSWRlbnRpdHkgUHJvdmlkZXJzLCB0aGUgdXNlciB3aWxsIGJlIHByb21wdGVkIHRvIGF1dGhlbnRpY2F0ZSB0b3dhcmRzIHRoZSBJZGVudGl0eSBQcm92aWRlci4NCiogVXBvbiByZWNlaXZpbmcgdGhlIEFjY2VzcyBUb2tlbiwgdGhpcyB0b2tlbiBpcyB2YWxpZGF0ZWQgd2l0aCBhIFJFU1RmdWwgd2ViIHNlcnZpY2UgcmVxdWVzdCB0byBhbiBlbmRwb2ludA0KKiBvbiB0aGUgSWRlbnRpdHkgUHJvdmlkZXIgQXV0aG9yaXphdGlvbiBTZXJ2ZXIsIGFuZCBhZnRlciB0aGUgdmFsaWRhdGlvbiBpcyBkb25lLA0KKiBhbiBJRCB0b2tlbiBpcyBvYnRhaW5lZCB3aXRoIHRoZSBpbmZvcm1hdGlvbiBhY2NvcmRpbmcgdG8gdGhlIHNjb3BlIHJlcXVpcmVkLg0KKiBUaGlzIElEIHRva2VuIGlzIHRoZW4gcHJlc2VydmVkIGluIHRoaXMgbW9kdWxlIHRoYXQgY2FuIG9idGFpbmVkIHRocm91Z2ggdGhlIGdldElkZW50aXRpZXMoKQ0KKiBhbmQgaXMgcGFzc2VkIGFzIHJldHVybiB2YWx1ZSBvZiB0aGUgbG9naW5XaXRoUlAgZnVuY3Rpb24uIFRoZSBtZXRob2RzIGdlbmVyYXRlQXNzZXJ0aW9uIGFuZCB2YWxpZGF0ZUFzc2VydGlvbiBoYXZlIG5vdCB5ZXQgYmVlbiBkZXZlbG9wZWQuDQoqDQoqL3ZhciBJZGVudGl0eU1vZHVsZT1mdW5jdGlvbigpeyAvKioNCiAgKiBUaGlzIGlzIHRoZSBjb25zdHJ1Y3RvciB0byBpbml0aWFsaXNlIHRoZSBJZGVudGl0eSBNb2R1bGUgaXQgZG9lcyBub3QgcmVxdWlyZSBhbnkgaW5wdXQuDQogICovZnVuY3Rpb24gSWRlbnRpdHlNb2R1bGUocnVudGltZVVSTCl7KDAsX2NsYXNzQ2FsbENoZWNrMy5kZWZhdWx0KSh0aGlzLElkZW50aXR5TW9kdWxlKTt2YXIgX3RoaXM9dGhpcztpZighcnVudGltZVVSTCl0aHJvdyBuZXcgRXJyb3IoJ3J1bnRpbWVVUkwgaXMgbWlzc2luZy4nKTtfdGhpcy5fcnVudGltZVVSTD1ydW50aW1lVVJMO190aGlzLl9pZG1VUkw9cnVudGltZVVSTCsnL2lkbSc7X3RoaXMuX2RvbWFpbj0oMCxfdXRpbHMuZGl2aWRlVVJMKShfdGhpcy5fcnVudGltZVVSTCkuZG9tYWluOyAvL3RvIHN0b3JlIGl0ZW1zIHdpdGggdGhpcyBmb3JtYXQ6IHtpZGVudGl0eTogaWRlbnRpdHlVUkwsIHRva2VuOiB0b2tlbklEfQ0KX3RoaXMuaWRlbnRpdGllcz1bXTt2YXIgbmV3SWRlbnRpdHk9bmV3IF9JZGVudGl0eTIuZGVmYXVsdCgnZ3VpZCcsJ0hVTUFOJyk7X3RoaXMuaWRlbnRpdHk9bmV3SWRlbnRpdHk7fSAvKioNCiAgKiByZXR1cm4gdGhlIG1lc3NhZ2VCdXMgaW4gdGhpcyBSZWdpc3RyeQ0KICAqIEBwYXJhbSB7TWVzc2FnZUJ1c30gICAgICAgICAgIG1lc3NhZ2VCdXMNCiAgKi8oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKElkZW50aXR5TW9kdWxlLFt7a2V5OidnZXRJZGVudGl0aWVzJywgLyoqDQogICogRnVuY3Rpb24gdG8gcmV0dXJuIGFsbCB0aGUgaWRlbnRpdGllcyByZWdpc3RlcmVkIHdpdGhpbiBhIHNlc3Npb24gYnkgYSB1c2VyLg0KICAqIFRoZXNlIGlkZW50aXRpZXMgYXJlIHJldHVybmVkIGluIGFuIGFycmF5IGNvbnRhaW5pbmcgYSBKU09OIHBhY2thZ2UgZm9yIGVhY2ggdXNlciBpZGVudGl0eS4NCiAgKiBAcmV0dXJuIHtBcnJheTxJZGVudGl0aWVzPn0gICAgICAgICBJZGVudGl0aWVzDQogICovdmFsdWU6ZnVuY3Rpb24gZ2V0SWRlbnRpdGllcygpe3ZhciBfdGhpcz10aGlzO3JldHVybiBfdGhpcy5pZGVudGl0aWVzO30gLyoqDQogICogRnVuY3Rpb24gdG8gcmV0dXJuIHRoZSBzZWxlY3RlZCBJZGVudGl0eSB3aXRoaW4gYSBzZXNzaW9uDQogICogQHJldHVybiB7SWRlbnRpdHl9ICAgICAgICBpZGVudGl0eSAgICAgICAgIGlkZW50aXR5DQogICovfSx7a2V5OidnZXRDdXJyZW50SWRlbnRpdHknLHZhbHVlOmZ1bmN0aW9uIGdldEN1cnJlbnRJZGVudGl0eSgpe3ZhciBfdGhpcz10aGlzO3JldHVybiBfdGhpcy5jdXJyZW50SWRlbnRpdHk7fSAvKioNCiAgKiBGdW5jdGlvbiB0byBzZXQgdGhlIGN1cnJlbnQgSWRlbnRpdHkgd2l0aCBhIGdpdmVuIElkZW50aXR5DQogICogQHBhcmFtIHtJZGVudGl0eX0gICAgICAgIGlkZW50aXR5ICAgICAgICAgaWRlbnRpdHkNCiAgKi99LHtrZXk6J3NldEN1cnJlbnRJZGVudGl0eScsdmFsdWU6ZnVuY3Rpb24gc2V0Q3VycmVudElkZW50aXR5KGlkZW50aXR5KXt2YXIgX3RoaXM9dGhpcztfdGhpcy5jdXJyZW50SWRlbnRpdHk9aWRlbnRpdHk7fSAvKioNCiAgKiBGdW5jdGlvbiB0byByZW1vdmUgdGhlIGFuIGlkZW50aXR5IGZyb20gdGhlIElkZW50aXRpZXMgYXJyYXkNCiAgKiBAcGFyYW0ge1N0cmluZ30gICAgdXNlclVSTCAgICAgIHVzZXJVUkwNCiAgKi99LHtrZXk6J2RlbGV0ZUlkZW50aXR5Jyx2YWx1ZTpmdW5jdGlvbiBkZWxldGVJZGVudGl0eSh1c2VyVVJMKXt2YXIgX3RoaXM9dGhpcztmb3IodmFyIGlkZW50aXR5IGluIF90aGlzLmlkZW50aXRpZXMpe2lmKF90aGlzLmlkZW50aXRpZXNbaWRlbnRpdHldLmlkZW50aXR5PT09dXNlclVSTCl7X3RoaXMuaWRlbnRpdGllcy5zcGxpY2UoaWRlbnRpdHksMSk7fX19IC8qKg0KICAqIEZ1bmN0aW9uIHRoYXQgcmVzb2x2ZSBhbmQgY3JlYXRlIHRoZSBkb21haW5VUkwgaW4gY2FzZSBpdCBpcyBwcm92aWRlZCBvbmUuIElmIG5vdCwgcmVzb2x2ZSB0aGUgZGVmYXVsdCBkb21haW5VUkwNCiAgKiBAcGFyYW0ge1N0cmluZ30gICAgIGlkcERvbWFpbiAgICAgaWRwRG9tYWluIChPcHRpb25hbCkNCiAgKi99LHtrZXk6J19yZXNvbHZlRG9tYWluJyx2YWx1ZTpmdW5jdGlvbiBfcmVzb2x2ZURvbWFpbihpZHBEb21haW4pe2lmKCFpZHBEb21haW4pe3JldHVybiAnZG9tYWluLWlkcDovL2dvb2dsZS5jb20nO31lbHNlIHtyZXR1cm4gJ2RvbWFpbi1pZHA6Ly8nK2lkcERvbWFpbjt9fSAvKioNCiAgKiBGdW5jdGlvbiB0byBsb2dpbiBhIHVzZXIgd2l0aGluIHRoZSBzZXNzaW9uLCBpdCB3aWxsIHN0YXJ0IHRoZSBwcm9jZXNzIHRvIG9idGFpbiBhbiBJZGVudGl0eSBmcm9tIGEgdXNlciwgaW5jbHVkaW5nIHRoZSByZXF1ZXN0IGZvciBhbiBpZGVudGl0eSBBc3NlcnRpb24uIFRoZSBmdW5jdGlvbiByZXR1cm5zIGEgcHJvbWlzZSB3aXRoIHRoZSB0b2tlbiByZWNlaXZlZCBieSB0aGUgaWRwUHJveHkuDQogICoNCiAgKiBAcGFyYW0gIHtJZGVudGlmaWVyfSAgICAgIGlkZW50aWZpZXIgICAgICBpZGVudGlmaWVyDQogICogQHBhcmFtICB7U2NvcGV9ICAgICAgICAgICBzY29wZSAgICAgICAgICAgc2NvcGUNCiAgKiBAcmV0dXJuIHtQcm9taXNlfSAgICAgICAgIFByb21pc2UgICAgICAgICBJRFRva2VuIGNvbnRhaW5pbmcgdGhlIHVzZXIgaW5mb3JtYXRpb24NCiAgKi99LHtrZXk6J2xvZ2luV2l0aFJQJyx2YWx1ZTpmdW5jdGlvbiBsb2dpbldpdGhSUChpZGVudGlmaWVyLHNjb3BlKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXsgLy9UT0RPIHJlbW92ZSB0aGlzIHZlcmlmaWNhdGlvbiBhbmQgcmVmYWN0b3IgdGhpcyBwYXJ0DQpfdGhpcy5jdXJyZW50SWRlbnRpdHk9dW5kZWZpbmVkO190aGlzLmdldElkZW50aXR5QXNzZXJ0aW9uKCdpZGVudGlmaWVyJywnb3JpZ2luJywnaGludCcsaWRlbnRpZmllcikudGhlbihmdW5jdGlvbih2YWx1ZSl7Y29uc29sZS5sb2coJ2xvZ2luV2l0aFJQJyk7cmVzb2x2ZSh2YWx1ZSk7fSxmdW5jdGlvbihlcnIpe2NvbnNvbGUubG9nKCdsb2dpbldpdGhSUCBlcnInKTtyZWplY3QoZXJyKTt9KTt9KTt9IC8qKg0KICAqIEZ1bmN0aW9uIHRoYXQgZmV0Y2ggYW4gaWRlbnRpdHlBc3NlcnRpb24gZnJvbSBhIHVzZXIuDQogICoNCiAgKiBAcmV0dXJuIHtJZEFzc2VydGlvbn0gICAgICAgICAgICAgIElkQXNzZXJ0aW9uDQogICovfSx7a2V5OidnZXRJZGVudGl0eUFzc2VydGlvbicsdmFsdWU6ZnVuY3Rpb24gZ2V0SWRlbnRpdHlBc3NlcnRpb24oaWRlbnRpZmllcixvcmlnaW4sdXNlcm5hbWVIaW50LGlkcERvbWFpbil7dmFyIF90aGlzPXRoaXM7cmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7aWYoX3RoaXMuY3VycmVudElkZW50aXR5IT09dW5kZWZpbmVkKXsgLy9UT0RPIHZlcmlmeSB3aGV0aGVyIHRoZSB0b2tlbiBpcyBzdGlsbCB2YWxpZCBvciBub3QuDQovLyBzaG91bGQgYmUgbmVlZGVkIHRvIG1ha2UgZnVydGhlciByZXF1ZXN0cywgdG8gb2J0YWluIGEgdmFsaWQgdG9rZW4NCnJldHVybiByZXNvbHZlKF90aGlzLmN1cnJlbnRJZGVudGl0eSk7fWVsc2UgeyAvL0NIRUNLIHdoZXRoZXIgaXMgYnJvd3NlciBlbnZpcm9ubWVudCBvciBub2RlanMNCi8vaWYgaXQgaXMgYnJvd3NlciwgdGhlbiBjcmVhdGUgYSBmYWtlIGlkZW50aXR5DQppZighd2luZG93KXt2YXIgcmFuZG9tTnVtYmVyPU1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoxMDAwMCsxKTt2YXIgaWRlbnRpdHlCdW5kbGU9e2Fzc2VydGlvbjonYXNzZXJ0aW9uJyxlbWFpbDonbm9kZWpzLScrcmFuZG9tTnVtYmVyKydAbm9kZWpzLmNvbScsaWRlbnRpdHk6J3VzZXI6Ly9ub2RlanMtJytyYW5kb21OdW1iZXIsaWRwOidub2RlanMnLGluZm9Ub2tlbjp7ZW1haWw6J25vZGVqcy0nK3JhbmRvbU51bWJlcisnQG5vZGVqcy5jb20nfX07X3RoaXMuY3VycmVudElkZW50aXR5PWlkZW50aXR5QnVuZGxlO190aGlzLmlkZW50aXRpZXMucHVzaChpZGVudGl0eUJ1bmRsZSk7cmV0dXJuIHJlc29sdmUoaWRlbnRpdHlCdW5kbGUpO31lbHNlIHtfdGhpcy5nZW5lcmF0ZUFzc2VydGlvbignJyxvcmlnaW4sdXNlcm5hbWVIaW50LGlkcERvbWFpbikudGhlbihmdW5jdGlvbih1cmwpe190aGlzLmdlbmVyYXRlQXNzZXJ0aW9uKHVybCxvcmlnaW4sdXNlcm5hbWVIaW50LGlkcERvbWFpbikudGhlbihmdW5jdGlvbih2YWx1ZSl7aWYodmFsdWUpe3Jlc29sdmUodmFsdWUpO31lbHNlIHtyZWplY3QoJ0Vycm9yIG9uIG9idGFpbmluZyBJZGVudGl0eScpO319LGZ1bmN0aW9uKGVycil7cmVqZWN0KGVycik7fSk7fSxmdW5jdGlvbihlcnJvcil7cmVqZWN0KGVycm9yKTt9KTt9fX0pO30gLyoqDQogICogUmVxdWVzdHMgdGhlIElkcFByb3h5IGZyb20gYSBnaXZlbiBEb21haW4gZm9yIGFuIGlkZW50aXR5QXNzZXJ0aW9uDQogICoNCiAgKiBAcGFyYW0gIHtET01TdHJpbmd9IGNvbnRlbnRzICAgICBjb250ZW50cw0KICAqIEBwYXJhbSAge0RPTVN0cmluZ30gb3JpZ2luICAgICAgIG9yaWdpbg0KICAqIEBwYXJhbSAge0RPTVN0cmluZ30gdXNlcm5hbWVIaW50IHVzZXJuYW1lSGludA0KICAqIEByZXR1cm4ge0lkQXNzZXJ0aW9ufSAgICAgICAgICAgICAgSWRBc3NlcnRpb24NCiAgKi99LHtrZXk6J2dlbmVyYXRlQXNzZXJ0aW9uJyx2YWx1ZTpmdW5jdGlvbiBnZW5lcmF0ZUFzc2VydGlvbihjb250ZW50cyxvcmlnaW4sdXNlcm5hbWVIaW50LGlkcERvbWFpbil7dmFyIF90aGlzPXRoaXM7dmFyIGRvbWFpbj1fdGhpcy5fcmVzb2x2ZURvbWFpbihpZHBEb21haW4pO3ZhciBtZXNzYWdlPXZvaWQgMDtyZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXttZXNzYWdlPXt0eXBlOidleGVjdXRlJyx0bzpkb21haW4sZnJvbTpfdGhpcy5faWRtVVJMLGJvZHk6e3Jlc291cmNlOidpZGVudGl0eScsbWV0aG9kOidnZW5lcmF0ZUFzc2VydGlvbicscGFyYW1zOntjb250ZW50czpjb250ZW50cyxvcmlnaW46b3JpZ2luLHVzZXJuYW1lSGludDp1c2VybmFtZUhpbnR9fX07X3RoaXMuX21lc3NhZ2VCdXMucG9zdE1lc3NhZ2UobWVzc2FnZSxmdW5jdGlvbihyZXMpe3ZhciByZXN1bHQ9cmVzLmJvZHkudmFsdWU7aWYocmVzdWx0LmxvZ2luVXJsKXsoZnVuY3Rpb24oKXsgLy9sZXQgbXNnT3BlbklmcmFtZSA9IHt0eXBlOiAnZXhlY3V0ZScsIGZyb206IF90aGlzLl9pZG1VUkwsIHRvOiBfdGhpcy5fcnVudGltZVVSTCArICcvZ3VpLW1hbmFnZXInLCBib2R5OiB7bWV0aG9kOiAndW5oaWRlQWRtaW5QYWdlJ319Ow0KdmFyIHdpbj13aW5kb3cub3BlbihyZXN1bHQubG9naW5VcmwsJ29wZW5JRHJlcXVlc3QnLCd3aWR0aD04MDAsIGhlaWdodD02MDAnKTtpZih3aW5kb3cuY29yZG92YSl7d2luLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWRzdGFydCcsZnVuY3Rpb24oZSl7dmFyIHVybD1lLnVybDt2YXIgY29kZT0vXCZjb2RlPSguKykkLy5leGVjKHVybCk7dmFyIGVycm9yPS9cJmVycm9yPSguKykkLy5leGVjKHVybCk7aWYoY29kZXx8ZXJyb3Ipe3dpbi5jbG9zZSgpO3Jlc29sdmUodXJsKTt9fSk7fWVsc2UgeyhmdW5jdGlvbigpe3ZhciBwb2xsVGltZXI9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXt0cnl7aWYod2luLmNsb3NlZCl7cmVqZWN0KCdTb21lIGVycm9yIG9jY3VyZWQgd2hlbiB0cnlpbmcgdG8gZ2V0IGlkZW50aXR5LicpO2NsZWFySW50ZXJ2YWwocG9sbFRpbWVyKTt9aWYod2luLmRvY3VtZW50LlVSTC5pbmRleE9mKCdpZF90b2tlbicpIT09LTF8fHdpbi5kb2N1bWVudC5VUkwuaW5kZXhPZihsb2NhdGlvbi5vcmlnaW4pIT09LTEpe3dpbmRvdy5jbGVhckludGVydmFsKHBvbGxUaW1lcik7dmFyIHVybD13aW4uZG9jdW1lbnQuVVJMO3dpbi5jbG9zZSgpO3Jlc29sdmUodXJsKTt9fWNhdGNoKGUpeyAvL2NvbnNvbGUubG9nKGUpOw0KfX0sNTAwKTt9KSgpO319KSgpO31lbHNlIGlmKHJlc3VsdCl7dmFyIGFzc2VydGlvblBhcnNlZD1KU09OLnBhcnNlKGF0b2IocmVzdWx0LmFzc2VydGlvbikpO3ZhciBpZFRva2VuPXZvaWQgMDsgLy9UT0RPIHJlbW92ZSB0aGUgdmVyaWZpY2F0aW9uIGFuZCByZW1vdmUgdGhlIHRva2VuSURKU09OIGZyb20gdGhlIGdvb2dsZSBpZHBQcm94eTsNCmlmKGFzc2VydGlvblBhcnNlZC50b2tlbklESlNPTil7aWRUb2tlbj1hc3NlcnRpb25QYXJzZWQudG9rZW5JREpTT047fWVsc2Uge2lkVG9rZW49YXNzZXJ0aW9uUGFyc2VkO31pZihpZFRva2VuKXtyZXN1bHQuaWRlbnRpdHk9KDAsX3V0aWxzLmdldFVzZXJVUkxGcm9tRW1haWwpKGlkVG9rZW4uZW1haWwpO190aGlzLmlkZW50aXR5LmFkZElkZW50aXR5KHJlc3VsdCk7IC8vIGNoZWNrIGlmIGV4aXN0cyBhbnkgaW5mb1Rva2VuIGluIHRoZSByZXN1bHQgcmVjZWl2ZWQNCnZhciBpbmZvVG9rZW49cmVzdWx0LmluZm9Ub2tlbj9yZXN1bHQuaW5mb1Rva2VuOnt9O3ZhciB1c2VyUHJvZmlsZUJ1bmRsZT17dXNlcm5hbWU6aWRUb2tlbi5lbWFpbCxjbjppZFRva2VuLm5hbWUsYXZhdGFyOmluZm9Ub2tlbi5waWN0dXJlLGxvY2FsZTppbmZvVG9rZW4ubG9jYWxlLHVzZXJVUkw6KDAsX3V0aWxzLmdldFVzZXJVUkxGcm9tRW1haWwpKGlkVG9rZW4uZW1haWwpfTsgLy9jcmVhdGlvbiBvZiBhIG5ldyBKU09OIHdpdGggdGhlIGlkZW50aXR5IHRvIHNlbmQgdmlhIG1lc3NhZ2VzDQp2YXIgbmV3SWRlbnRpdHk9e3VzZXJQcm9maWxlOnVzZXJQcm9maWxlQnVuZGxlLGlkcDpyZXN1bHQuaWRwLmRvbWFpbixhc3NlcnRpb246cmVzdWx0LmFzc2VydGlvbixlbWFpbDppZFRva2VuLmVtYWlsLGlkZW50aXR5OnJlc3VsdC5pZGVudGl0eSxpZFRva2VuOmlkVG9rZW4saW5mb1Rva2VuOmluZm9Ub2tlbn07cmVzdWx0Lm1lc3NhZ2VJbmZvPW5ld0lkZW50aXR5O190aGlzLmN1cnJlbnRJZGVudGl0eT1uZXdJZGVudGl0eTtfdGhpcy5pZGVudGl0aWVzLnB1c2gocmVzdWx0KTtyZXNvbHZlKG5ld0lkZW50aXR5KTt9fWVsc2Uge3JlamVjdCgnZXJyb3Igb24gb2J0YWluaW5nIGlkZW50aXR5IGluZm9ybWF0aW9uJyk7fX0pO30pO30gLyoqDQogICogT1RIRVIgVVNFUidTIElERU5USVRZDQogICovIC8qKg0KICAqIFJlcXVlc3RzIHRoZSBJZHBQcm94eSBmcm9tIGEgZ2l2ZW4gRG9tYWluIHRvIHZhbGlkYXRlIGFuIElkZW50aXR5QXNzZXJ0aW9uDQogICogUmV0dXJucyBhIHByb21pc2Ugd2l0aCB0aGUgcmVzdWx0IGZyb20gdGhlIHZhbGlkYXRpb24uDQogICogQHBhcmFtICB7RE9NU3RyaW5nfSBhc3NlcnRpb24NCiAgKiBAcGFyYW0gIHtET01TdHJpbmd9IG9yaWdpbiAgICAgICBvcmlnaW4NCiAgKiBAcmV0dXJuIHtQcm9taXNlfSAgICAgICAgIFByb21pc2UgICAgICAgICBwcm9taXNlIHdpdGggdGhlIHJlc3VsdCBmcm9tIHRoZSB2YWxpZGF0aW9uDQogICovfSx7a2V5Oid2YWxpZGF0ZUFzc2VydGlvbicsdmFsdWU6ZnVuY3Rpb24gdmFsaWRhdGVBc3NlcnRpb24oYXNzZXJ0aW9uLG9yaWdpbixpZHBEb21haW4pe3ZhciBfdGhpcz10aGlzO3ZhciBkb21haW49X3RoaXMuX3Jlc29sdmVEb21haW4oaWRwRG9tYWluKTt2YXIgbWVzc2FnZT17dHlwZTonRVhFQ1VURScsdG86ZG9tYWluLGZyb206X3RoaXMuX2lkbVVSTCxib2R5OntyZXNvdXJjZTonaWRlbnRpdHknLG1ldGhvZDondmFsaWRhdGVBc3NlcnRpb24nLHBhcmFtczp7YXNzZXJ0aW9uOmFzc2VydGlvbixvcmlnaW46b3JpZ2lufX19O3JldHVybiBuZXcgX3Byb21pc2UyLmRlZmF1bHQoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe190aGlzLl9tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG1lc3NhZ2UsZnVuY3Rpb24ocmVzdWx0KXtpZihyZXN1bHQuYm9keS5jb2RlPT09MjAwKXtyZXNvbHZlKHJlc3VsdC5ib2R5LnZhbHVlKTt9ZWxzZSB7cmVqZWN0KCdlcnJvcicscmVzdWx0LmJvZHkuY29kZSk7fX0pO30pO30gLyoqDQogICogRnVuY3Rpb24gdGhhdCBlbmNyeXB0cyB0aGUgbWVzc2FnZXMgdG8gc2VuZCBhbmQgZGVjcnlwdHMgYW5kIHZhbGlkYXRlIHRoZSBtZXNzYWdlcyByZWNlaXZlZC4NCiAgKiBJbiBjYXNlIHRoZXJlIGlzIG5vIHNlc3Npb24ga2V5IGVzdGFibGlzaGVkIGJldHdlZW4gdGhlIHR3byB1c2VycyBmcm9tIHRoZSBtZXNzYWdlLCB0aGlzIGZ1bmN0aW9uIHdpbGwgc3RhcnQgdGhlIGNvbW11bmljYXRpb24gd2l0aCB0aGUgb3RoZXIgdXNlciBhY3F1aXJlIGEgc2Vzc2lvbiBrZXkuDQogICoqL30se2tleTondmFsaWRhdGVNZXNzYWdlJyx2YWx1ZTpmdW5jdGlvbiB2YWxpZGF0ZU1lc3NhZ2UobWVzc2FnZSl7Y29uc29sZS5sb2cobWVzc2FnZSk7fX0se2tleTonbWVzc2FnZUJ1cycsZ2V0OmZ1bmN0aW9uIGdldCgpe3ZhciBfdGhpcz10aGlzO3JldHVybiBfdGhpcy5fbWVzc2FnZUJ1czt9IC8qKg0KICAqIFNldCB0aGUgbWVzc2FnZUJ1cyBpbiB0aGlzIFJlZ2lzdHJ5DQogICogQHBhcmFtIHtNZXNzYWdlQnVzfSAgICAgICAgICAgbWVzc2FnZUJ1cw0KICAqLyxzZXQ6ZnVuY3Rpb24gc2V0KG1lc3NhZ2VCdXMpe3ZhciBfdGhpcz10aGlzO190aGlzLl9tZXNzYWdlQnVzPW1lc3NhZ2VCdXM7fX1dKTtyZXR1cm4gSWRlbnRpdHlNb2R1bGU7fSgpO2V4cG9ydHMuZGVmYXVsdD1JZGVudGl0eU1vZHVsZTttb2R1bGUuZXhwb3J0cz1leHBvcnRzWydkZWZhdWx0J107DQoNCn0seyIuLi91dGlscy91dGlscy5qcyI6NjE1LCIuL0lkZW50aXR5Ijo1OTgsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIjoyNSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoyOCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoyOX1dLDYwMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7dmFyIF9zdHJpbmdpZnk9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5Jyk7dmFyIF9zdHJpbmdpZnkyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3N0cmluZ2lmeSk7dmFyIF91bml2ZXJzYWxMb2NhbHN0b3JhZ2U9cmVxdWlyZSgndW5pdmVyc2FsLWxvY2Fsc3RvcmFnZScpO3ZhciBfdW5pdmVyc2FsTG9jYWxzdG9yYWdlMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91bml2ZXJzYWxMb2NhbHN0b3JhZ2UpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfTt9dmFyIHBlcnNpc3RlbmNlTWFuYWdlcj17c2V0OmZ1bmN0aW9uIHNldChrZXksdmVyc2lvbix2YWx1ZSl7X3VuaXZlcnNhbExvY2Fsc3RvcmFnZTIuZGVmYXVsdC5zZXRJdGVtKGtleSwoMCxfc3RyaW5naWZ5Mi5kZWZhdWx0KSh7J3ZlcnNpb24nOnZlcnNpb24sJ3ZhbHVlJzp2YWx1ZX0pKTt9LGdldDpmdW5jdGlvbiBnZXQoa2V5KXt0cnl7cmV0dXJuIEpTT04ucGFyc2UoX3VuaXZlcnNhbExvY2Fsc3RvcmFnZTIuZGVmYXVsdC5nZXRJdGVtKGtleSkpLnZhbHVlO31jYXRjaChlKXsgLy8gcmV0dXJuIHVuZGVmaW5lZA0KfX0sZ2V0VmVyc2lvbjpmdW5jdGlvbiBnZXRWZXJzaW9uKGtleSl7dHJ5e3JldHVybiBKU09OLnBhcnNlKF91bml2ZXJzYWxMb2NhbHN0b3JhZ2UyLmRlZmF1bHQuZ2V0SXRlbShrZXkpKS52ZXJzaW9uO31jYXRjaChlKXsgLy8gcmV0dXJuIHVuZGVmaW5lZA0KfX0sZGVsZXRlOmZ1bmN0aW9uIF9kZWxldGUoa2V5KXtfdW5pdmVyc2FsTG9jYWxzdG9yYWdlMi5kZWZhdWx0LnJlbW92ZUl0ZW0oa2V5KTt9fTsgLyoqDQoqIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRA0KKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0wNCiogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlYNCiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBDQoqIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUcNCiogQ29weXJpZ2h0IDIwMTYgQXBpemVlDQoqIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElODQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKiovZXhwb3J0cy5kZWZhdWx0PXBlcnNpc3RlbmNlTWFuYWdlcjttb2R1bGUuZXhwb3J0cz1leHBvcnRzWydkZWZhdWx0J107DQoNCn0seyJiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnkiOjE4LCJ1bml2ZXJzYWwtbG9jYWxzdG9yYWdlIjo1ODN9XSw2MDE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pO3ZhciBfY2xhc3NDYWxsQ2hlY2syPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjaycpO3ZhciBfY2xhc3NDYWxsQ2hlY2szPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzQ2FsbENoZWNrMik7dmFyIF9jcmVhdGVDbGFzczI9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzJyk7dmFyIF9jcmVhdGVDbGFzczM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlQ2xhc3MyKTt2YXIgX1BlcnNpc3RlbmNlTWFuYWdlcj1yZXF1aXJlKCcuLi9wZXJzaXN0ZW5jZS9QZXJzaXN0ZW5jZU1hbmFnZXInKTt2YXIgX1BlcnNpc3RlbmNlTWFuYWdlcjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfUGVyc2lzdGVuY2VNYW5hZ2VyKTt2YXIgX3V0aWxzPXJlcXVpcmUoJy4uL3V0aWxzL3V0aWxzJyk7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9O30gLyoqDQoqIFRoZSBQb2xpY3kgRGVjaXNpb24gUG9pbnQgKFBEUCkgZGVjaWRlcyBpZiBhIG1lc3NhZ2UgaXMgdG8gYmUgYXV0aG9yaXNlZCBieSBjaGVja2luZyBhIHNldCBvZg0KKiBwb2xpY2llcy4gVGhlIHJlc291cmNlIHRvIGJlIHZlcmlmaWVkIGlzIHNwZWNpZmllZCBpbiB0aGUgZmlyc3Qgd29yZCBvZiB0aGUgJ2NvbmRpdGlvbicgZmllbGQgb2YNCiogYSBQb2xpY3kgb2JqZWN0LiBUaGUgaW1wbGVtZW50YXRpb24gdGhhdCB2ZXJpZmllcyBpZiB0aGUgbWVzc2FnZSBpcyBjb21wbGlhbnQgd2l0aCBhIHBvbGljeSBpcw0KKiBzcGVjaWZpZWQgaW4gYSBoYXNodGFibGUgdG8gYWxsb3cgZHluYW1pYyBkZWZpbml0aW9uIG9mIHRoZSBpbXBsZW1lbnRhdGlvbiwgcHJvdmlkaW5nDQoqIGV4dGVuc2liaWxpdHkgdG8gdGhlIFBvbGljeSBFbmdpbmUgZnVuY3Rpb25hbGl0aWVzLg0KKi92YXIgUERQPWZ1bmN0aW9uKCl7IC8qKg0KICAqIFRoaXMgbWV0aG9kIGlzIGludm9rZWQgYnkgdGhlIFBvbGljeSBFbmdpbmUgYW5kIGluc3RhbnRpYXRlcyB0aGUgUG9saWN5IERlY2lzaW9uIFBvaW50LiBJdA0KICAqIGluaXRpYWxpc2VzIG9yIGxvYWRzIGZyb20gdGhlIFBlcnNpc3RlbmNlIE1hbmFnZXIgdGhlIG9iamVjdCAnbXlHcm91cHMnIHRvIHN0b3JlIHRoZSB1c2VyJ3MNCiAgKiBncm91cHMuDQogICogQHBhcmFtICB7UmVnaXN0cnl9ICAgIG11Y2hydW50aW1lUmVnaXN0cnkNCiAgKi9mdW5jdGlvbiBQRFAocnVudGltZVJlZ2lzdHJ5KXsoMCxfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsUERQKTt2YXIgX3RoaXM9dGhpcztfdGhpcy5ydW50aW1lUmVnaXN0cnk9cnVudGltZVJlZ2lzdHJ5O190aGlzLnN5c3RlbVZhcmlhYmxlcz1fdGhpcy5zZXRTeXN0ZW1WYXJpYWJsZXMoKTtfdGhpcy5vcGVyYXRpb25zPV90aGlzLnNldE9wZXJhdGlvbnMoKTt9IC8qIFN5c3RlbSB2YXJpYWJsZSdzIG9idGVudGlvbiwgbmVlZGVkIHRvIHZlcmlmeSBhIGNvbmRpdGlvbi4gKi8oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKFBEUCxbe2tleTonc2V0U3lzdGVtVmFyaWFibGVzJyx2YWx1ZTpmdW5jdGlvbiBzZXRTeXN0ZW1WYXJpYWJsZXMoKXt2YXIgX3RoaXM9dGhpczt2YXIgc3lzdGVtVmFyaWFibGVzPXtzb3VyY2U6ZnVuY3Rpb24gc291cmNlKG1lc3NhZ2Upe3JldHVybiBtZXNzYWdlLmJvZHkuaWRlbnRpdHkuZW1haWw7fSxkb21haW46ZnVuY3Rpb24gZG9tYWluKG1lc3NhZ2Upe3JldHVybiAoMCxfdXRpbHMuZGl2aWRlRW1haWwpKG1lc3NhZ2UuYm9keS5pZGVudGl0eS5lbWFpbCkuZG9tYWluO30sdGltZTpmdW5jdGlvbiB0aW1lKCl7cmV0dXJuIF90aGlzLmdldEN1cnJlbnRUaW1lKCk7fSx3ZWVrZGF5OmZ1bmN0aW9uIHdlZWtkYXkoKXtyZXR1cm4gU3RyaW5nKG5ldyBEYXRlKCkuZ2V0RGF5KCkpO30sZGF0ZTpmdW5jdGlvbiBkYXRlKCl7cmV0dXJuIF90aGlzLmdldERhdGUoKTt9fTtyZXR1cm4gc3lzdGVtVmFyaWFibGVzO319LHtrZXk6J3NldE9wZXJhdGlvbnMnLHZhbHVlOmZ1bmN0aW9uIHNldE9wZXJhdGlvbnMoKXt2YXIgb3BlcmF0aW9ucz17fTtvcGVyYXRpb25zLmJldHdlZW5NaW51dGVzPSdfdGhpcy5pc1RpbWVCZXR3ZWVuKHZhbHVlLCBwYXJzZUludChwYXJhbXNbMF0pLCBwYXJzZUludChwYXJhbXNbMV0pKSc7b3BlcmF0aW9ucy5pbj0nX3RoaXMuZ2V0TGlzdChwYXJhbXNbMF0pLmluZGV4T2YodmFsdWUpICE9IC0xJztvcGVyYXRpb25zLmJldHdlZW49J3ZhbHVlID4gcGFyYW1zWzBdICYmIHZhbHVlIDwgcGFyYW1zWzFdJztvcGVyYXRpb25zLmVxdWFscz0nKHBhcmFtc1swXSA9PT0gXCcqXCcpIHx8IHZhbHVlID09PSBwYXJhbXNbMF0nO3JldHVybiBvcGVyYXRpb25zO30gLyoqDQogICogVmVyaWZpZXMgaWYgdGhlIGdpdmVuIG1lc3NhZ2UgaXMgY29tcGxpYW50IHdpdGggdGhlIGdpdmVuIHBvbGljaWVzLiBJZiBvbmUgb2YgdGhlIHBvbGljaWVzDQogICogZXZhbHVhdGVzIHRvICdmYWxzZScsIHRoZW4gdGhlIG1lc3NhZ2UgaXMgbm90IGF1dGhvcmlzZWQuIFJldHVybnMgdGhlIGZpbmFsIGF1dGhvcmlzYXRpb24NCiAgKiBkZWNpc2lvbiBhbmQgYSBzZXQgb2YgYWN0aW9ucyB0aGF0IHBvbGljaWVzIG1heSByZXF1aXJlLg0KICAqIEBwYXJhbSB7TWVzc2FnZX0gIG1lc3NhZ2UNCiAgKiBAcGFyYW0ge1VSTH0gICAgICBoeXBlcnR5VG9WZXJpZnkNCiAgKiBAcGFyYW0ge0FycmF5fSAgICBwb2xpY2llcw0KICAqIEByZXR1cm4ge0FycmF5fSAgIFthdXRoRGVjaXNpb24sIGFjdGlvbnNdDQogICovfSx7a2V5OidldmFsdWF0ZScsdmFsdWU6ZnVuY3Rpb24gZXZhbHVhdGUobWVzc2FnZSxwb2xpY2llcyl7dmFyIF90aGlzPXRoaXM7dmFyIHJlc3VsdHM9W3RydWVdO3ZhciBhY3Rpb25zPVtdO2Zvcih2YXIgaSBpbiBwb2xpY2llcyl7dmFyIHBvbGljeT1wb2xpY2llc1tpXTt2YXIgY29uZGl0aW9uPXBvbGljeS5jb25kaXRpb24uc3BsaXQoJyAnKTt2YXIgdmFyaWFibGU9Y29uZGl0aW9uWzBdO3ZhciBvcGVyYXRpb249Y29uZGl0aW9uWzFdO3ZhciBwYXJhbXM9Y29uZGl0aW9uLnNsaWNlKDIpO3ZhciB2YWx1ZT1fdGhpcy5zeXN0ZW1WYXJpYWJsZXNbdmFyaWFibGVdKG1lc3NhZ2UpO3ZhciB2ZXJpZmllc0NvbmRpdGlvbj1ldmFsKF90aGlzLm9wZXJhdGlvbnNbb3BlcmF0aW9uXSk7aWYodmVyaWZpZXNDb25kaXRpb24pe3Jlc3VsdHMucHVzaChwb2xpY3kuYXV0aG9yaXNlKTt9IC8vYWN0aW9ucy5wdXNoKHJlc3VsdFsxXSk7DQp9dmFyIGF1dGhEZWNpc2lvbj1yZXN1bHRzLmluZGV4T2YoZmFsc2UpPT09LTE7cmV0dXJuIFthdXRoRGVjaXNpb24sYWN0aW9uc107fX0se2tleTonZ2V0Q3VycmVudFRpbWUnLHZhbHVlOmZ1bmN0aW9uIGdldEN1cnJlbnRUaW1lKCl7dmFyIG5vdz1uZXcgRGF0ZSgpO3JldHVybiBwYXJzZUludChTdHJpbmcobm93LmdldEhvdXJzKCkpK25vdy5nZXRNaW51dGVzKCkpO319LHtrZXk6J2dldERhdGUnLHZhbHVlOmZ1bmN0aW9uIGdldERhdGUoKXt2YXIgZGF0ZT1uZXcgRGF0ZSgpO3JldHVybiBkYXRlLmdldERhdGUoKSsnLycrKGRhdGUuZ2V0TW9udGgoKSsxKSsnLycrZGF0ZS5nZXRGdWxsWWVhcigpO30gLyoqDQogICogVmVyaWZpZXMgaWYgdGhlIGN1cnJlbnQgdGltZSBpcyBiZXR3ZWVuIHRoZSBnaXZlbiBzdGFydCBhbmQgZW5kIHRpbWVzLg0KICAqIEBwYXJhbSB7TnVtYmVyfSAgICAgc3RhcnQNCiAgKiBAcGFyYW0ge051bWJlcn0gICAgIGVuZA0KICAqIEByZXR1cm4ge0Jvb2xlYW59ICAgYm9vbGVhbg0KICAqL30se2tleTonaXNUaW1lQmV0d2VlbicsdmFsdWU6ZnVuY3Rpb24gaXNUaW1lQmV0d2Vlbihub3csc3RhcnQsZW5kKXtpZihlbmQ8c3RhcnQpe25vdz1ub3c8c3RhcnQ/bm93Kz0yNDAwOm5vdztlbmQrPTI0MDA7fXJldHVybiBub3c+c3RhcnQmJm5vdzxlbmQ7fX0se2tleTonZ2V0R3JvdXBzTmFtZXMnLHZhbHVlOmZ1bmN0aW9uIGdldEdyb3Vwc05hbWVzKCl7dmFyIG15R3JvdXBzPV9QZXJzaXN0ZW5jZU1hbmFnZXIyLmRlZmF1bHQuZ2V0KCdncm91cHMnKXx8e307dmFyIGdyb3Vwc05hbWVzPVtdO2lmKG15R3JvdXBzIT09e30pe2Zvcih2YXIgZ3JvdXBOYW1lIGluIG15R3JvdXBzKXtncm91cHNOYW1lcy5wdXNoKGdyb3VwTmFtZSk7fX1yZXR1cm4gZ3JvdXBzTmFtZXM7fSAvKioNCiAgKiBSZXR1cm5zIHRoZSBncm91cCB3aXRoIHRoZSBnaXZlbiBncm91cCBuYW1lLg0KICAqIEBwYXJhbSAge1N0cmluZ30gIGdyb3VwTmFtZQ0KICAqIEByZXR1cm4ge0FycmF5fSAgIGdyb3VwDQogICovfSx7a2V5OidnZXRMaXN0Jyx2YWx1ZTpmdW5jdGlvbiBnZXRMaXN0KGdyb3VwTmFtZSl7dmFyIG15R3JvdXBzPV9QZXJzaXN0ZW5jZU1hbmFnZXIyLmRlZmF1bHQuZ2V0KCdncm91cHMnKXx8e307cmV0dXJuIGdyb3VwTmFtZSBpbiBteUdyb3Vwcz9teUdyb3Vwc1tncm91cE5hbWVdOltdO30gLyoqDQogICogQ3JlYXRlcyBhIGdyb3VwIHdpdGggdGhlIGdpdmVuIG5hbWUuDQogICogQHBhcmFtICB7U3RyaW5nfSAgZ3JvdXBOYW1lDQogICovfSx7a2V5OidjcmVhdGVHcm91cCcsdmFsdWU6ZnVuY3Rpb24gY3JlYXRlR3JvdXAoZ3JvdXBOYW1lKXt2YXIgbXlHcm91cHM9X1BlcnNpc3RlbmNlTWFuYWdlcjIuZGVmYXVsdC5nZXQoJ2dyb3VwcycpfHx7fTtteUdyb3Vwc1tncm91cE5hbWVdPVtdO19QZXJzaXN0ZW5jZU1hbmFnZXIyLmRlZmF1bHQuc2V0KCdncm91cHMnLDAsbXlHcm91cHMpO3JldHVybiBteUdyb3Vwczt9IC8qKg0KICAqIFJlbW92ZXMgdGhlIGdyb3VwIHdpdGggdGhlIGdpdmVuIG5hbWUuDQogICogQHBhcmFtICB7U3RyaW5nfSAgZ3JvdXBOYW1lDQogICovfSx7a2V5OidkZWxldGVHcm91cCcsdmFsdWU6ZnVuY3Rpb24gZGVsZXRlR3JvdXAoZ3JvdXBOYW1lKXt2YXIgbXlHcm91cHM9X1BlcnNpc3RlbmNlTWFuYWdlcjIuZGVmYXVsdC5nZXQoJ2dyb3VwcycpfHx7fTtkZWxldGUgbXlHcm91cHNbZ3JvdXBOYW1lXTtfUGVyc2lzdGVuY2VNYW5hZ2VyMi5kZWZhdWx0LnNldCgnZ3JvdXBzJywwLG15R3JvdXBzKTt9IC8qKg0KICAqIEFkZHMgdGhlIGdpdmVuIHVzZXIgZW1haWwgdG8gdGhlIGdyb3VwIHdpdGggdGhlIGdpdmVuIG5hbWUuDQogICogQHBhcmFtICB7U3RyaW5nfSAgdXNlckVtYWlsDQogICogQHBhcmFtICB7U3RyaW5nfSAgZ3JvdXBOYW1lDQogICovfSx7a2V5OidhZGRUb0dyb3VwJyx2YWx1ZTpmdW5jdGlvbiBhZGRUb0dyb3VwKHVzZXJFbWFpbCxncm91cE5hbWUpe3ZhciBfdGhpcz10aGlzO3ZhciBteUdyb3Vwcz1fUGVyc2lzdGVuY2VNYW5hZ2VyMi5kZWZhdWx0LmdldCgnZ3JvdXBzJyl8fHt9O2lmKG15R3JvdXBzW2dyb3VwTmFtZV09PT11bmRlZmluZWQpe215R3JvdXBzPV90aGlzLmNyZWF0ZUdyb3VwKGdyb3VwTmFtZSk7bXlHcm91cHNbZ3JvdXBOYW1lXT1bXTt9bXlHcm91cHNbZ3JvdXBOYW1lXS5wdXNoKHVzZXJFbWFpbCk7X1BlcnNpc3RlbmNlTWFuYWdlcjIuZGVmYXVsdC5zZXQoJ2dyb3VwcycsMCxteUdyb3Vwcyk7fSAvKioNCiAgKiBSZW1vdmVzIHRoZSBnaXZlbiB1c2VyIGVtYWlsIGZyb20gdGhlIGdyb3VwIHdpdGggdGhlIGdpdmVuIG5hbWUuDQogICogQHBhcmFtICB7U3RyaW5nfSAgdXNlckVtYWlsDQogICogQHBhcmFtICB7U3RyaW5nfSAgZ3JvdXBOYW1lDQogICovfSx7a2V5OidyZW1vdmVGcm9tR3JvdXAnLHZhbHVlOmZ1bmN0aW9uIHJlbW92ZUZyb21Hcm91cCh1c2VyRW1haWwsZ3JvdXBOYW1lKXt2YXIgbXlHcm91cHM9X1BlcnNpc3RlbmNlTWFuYWdlcjIuZGVmYXVsdC5nZXQoJ2dyb3VwcycpfHx7fTt2YXIgZ3JvdXA9bXlHcm91cHNbZ3JvdXBOYW1lXTtmb3IodmFyIGkgaW4gZ3JvdXApe2lmKGdyb3VwW2ldPT09dXNlckVtYWlsKXtncm91cC5zcGxpY2UoaSwxKTtfUGVyc2lzdGVuY2VNYW5hZ2VyMi5kZWZhdWx0LnNldCgnZ3JvdXBzJywwLG15R3JvdXBzKTticmVhazt9fX19XSk7cmV0dXJuIFBEUDt9KCk7ZXhwb3J0cy5kZWZhdWx0PVBEUDttb2R1bGUuZXhwb3J0cz1leHBvcnRzWydkZWZhdWx0J107DQoNCn0seyIuLi9wZXJzaXN0ZW5jZS9QZXJzaXN0ZW5jZU1hbmFnZXIiOjYwMCwiLi4vdXRpbHMvdXRpbHMiOjYxNSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoyOCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoyOX1dLDYwMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQoidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7dmFyIF9jbGFzc0NhbGxDaGVjazI9cmVxdWlyZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIik7dmFyIF9jbGFzc0NhbGxDaGVjazM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NDYWxsQ2hlY2syKTt2YXIgX2NyZWF0ZUNsYXNzMj1yZXF1aXJlKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKTt2YXIgX2NyZWF0ZUNsYXNzMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVDbGFzczIpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfTt9dmFyIFBFUD1mdW5jdGlvbigpe2Z1bmN0aW9uIFBFUCgpeygwLF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcyxQRVApO30oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKFBFUCxbe2tleToiZW5mb3JjZSIsdmFsdWU6ZnVuY3Rpb24gZW5mb3JjZSgpe319LHtrZXk6InNlbmRBdXRvbWF0aWNNZXNzYWdlIix2YWx1ZTpmdW5jdGlvbiBzZW5kQXV0b21hdGljTWVzc2FnZSgpe319LHtrZXk6ImZvcndhcmRUb0lEIix2YWx1ZTpmdW5jdGlvbiBmb3J3YXJkVG9JRCgpe319LHtrZXk6ImZvcndhcmRUb0h5cGVydHkiLHZhbHVlOmZ1bmN0aW9uIGZvcndhcmRUb0h5cGVydHkoKXt9fV0pO3JldHVybiBQRVA7fSgpO2V4cG9ydHMuZGVmYXVsdD1QRVA7bW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1snZGVmYXVsdCddOw0KDQp9LHsiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoyOCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoyOX1dLDYwMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7DQondXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7dmFyIF9wcm9taXNlPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlJyk7dmFyIF9wcm9taXNlMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9taXNlKTt2YXIgX2NsYXNzQ2FsbENoZWNrMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2snKTt2YXIgX2NsYXNzQ2FsbENoZWNrMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO3ZhciBfY3JlYXRlQ2xhc3MyPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcycpO3ZhciBfY3JlYXRlQ2xhc3MzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUNsYXNzMik7dmFyIF9QZXJzaXN0ZW5jZU1hbmFnZXI9cmVxdWlyZSgnLi4vcGVyc2lzdGVuY2UvUGVyc2lzdGVuY2VNYW5hZ2VyJyk7dmFyIF9QZXJzaXN0ZW5jZU1hbmFnZXIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1BlcnNpc3RlbmNlTWFuYWdlcik7dmFyIF91dGlscz1yZXF1aXJlKCcuLi91dGlscy91dGlscycpO3ZhciBfUEVQPXJlcXVpcmUoJy4vUEVQJyk7dmFyIF9QRVAyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1BFUCk7dmFyIF9QRFA9cmVxdWlyZSgnLi9QRFAnKTt2YXIgX1BEUDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfUERQKTtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian07fSAvKioNCiogVGhlIFBvbGljeSBFbmdpbmUgaW50ZXJjZXB0cyBhbGwgdGhlIG1lc3NhZ2VzIHNlbnQgdGhyb3VnaCB0aGUgTWVzc2FnZSBCdXMgYW5kIGFwcGxpZXMgdGhlDQoqIHBvbGljaWVzIGRlZmluZWQgYnkgdGhlIHNlcnZpY2UgcHJvdmlkZXIgYW5kIHRoZSB1c2VyLg0KKi8gLy9qc2hpbnQgYnJvd3Nlcjp0cnVlLCBqcXVlcnk6IHRydWUNCnZhciBQb2xpY3lFbmdpbmU9ZnVuY3Rpb24oKXsgLyoqDQogICogVGhpcyBtZXRob2QgaXMgaW52b2tlZCBieSB0aGUgUnVudGltZVVBIGFuZCBpbnN0YW50aWF0ZXMgdGhlIFBvbGljeSBFbmdpbmUuIEEgUG9saWN5IERlY2lzaW9uDQogICogUG9pbnQgKFBEUCkgYW5kIGEgUG9saWN5IEVuZm9yY2VtZW50IFBvaW50IChQRVApIGFyZSBpbml0aWFsaXNlZCBmb3IgdGhlIGV2YWx1YXRpb24gb2YgcG9saWNpZXMNCiAgKiBhbmQgdGhlIGVuZm9yY2VtZW50IG9mIGFkZGl0aW9uYWwgYWN0aW9ucywgcmVzcGVjdGl2ZWx5LiBBZGRzIGEgbGlzdGVuZXIgZG8gdGhlIE1lc3NhZ2UgQnVzIHRvDQogICogYWxsb3cgbWV0aG9kIGludm9rYXRpb24uDQogICogQHBhcmFtICB7SWRlbnRpdHlNb2R1bGV9ICAgIGlkZW50aXR5TW9kdWxlDQogICogQHBhcmFtICB7UmVnaXN0cnl9ICAgICAgICAgIHJ1bnRpbWVSZWdpc3RyeQ0KICAqL2Z1bmN0aW9uIFBvbGljeUVuZ2luZShpZGVudGl0eU1vZHVsZSxydW50aW1lUmVnaXN0cnkpeygwLF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcyxQb2xpY3lFbmdpbmUpO3ZhciBfdGhpcz10aGlzO190aGlzLmlzUnVudGltZUNvcmU9KGlkZW50aXR5TW9kdWxlJnJ1bnRpbWVSZWdpc3RyeSk9PT0wO190aGlzLnBkcD1uZXcgX1BEUDIuZGVmYXVsdChydW50aW1lUmVnaXN0cnkpO190aGlzLnBlcD1uZXcgX1BFUDIuZGVmYXVsdCgpO190aGlzLmlkTW9kdWxlPWlkZW50aXR5TW9kdWxlO190aGlzLnBvbGljaWVzPV90aGlzLmxvYWRQb2xpY2llcygpO30oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKFBvbGljeUVuZ2luZSxbe2tleTonbG9hZFBvbGljaWVzJyx2YWx1ZTpmdW5jdGlvbiBsb2FkUG9saWNpZXMoKXsgLy9sZXQgX3RoaXMgPSB0aGlzOw0KX1BlcnNpc3RlbmNlTWFuYWdlcjIuZGVmYXVsdC5kZWxldGUoJ3BvbGljaWVzJyk7dmFyIG15UG9saWNpZXM9X1BlcnNpc3RlbmNlTWFuYWdlcjIuZGVmYXVsdC5nZXQoJ3BvbGljaWVzJyk7IC8qaWYgKG15UG9saWNpZXMgPT09IHVuZGVmaW5lZCkgew0KICAgICAgbGV0IHN1YnNjcmlwdGlvblBvbGljeSA9IHsNCiAgICAgICAgc2NvcGU6ICdhcHBsaWNhdGlvbicsDQogICAgICAgIGNvbmRpdGlvbjogJ3N1YnNjcmlwdGlvbiBlcXVhbHMgKicsDQogICAgICAgIGF1dGhvcmlzZTogdHJ1ZSwNCiAgICAgICAgYWN0aW9uczogW10NCiAgICAgIH07DQogICAgICBfdGhpcy5hZGRQb2xpY2llcyhbc3Vic2NyaXB0aW9uUG9saWN5XSk7DQogICAgICBteVBvbGljaWVzID0gcGVyc2lzdGVuY2VNYW5hZ2VyLmdldCgncG9saWNpZXMnKTsNCiAgICB9Ki9yZXR1cm4gbXlQb2xpY2llczt9IC8qKg0KICAqIEFzc29jaWF0ZXMgdGhlIGdpdmVuIHBvbGljaWVzIHdpdGggYSBzY29wZS4gVGhlIHBvc3NpYmxlIHNjb3BlcyBhcmUgJ2FwcGxpY2F0aW9uJywgJ2h5cGVydHknIGFuZA0KICAqICd1c2VyJy4NCiAgKiBAcGFyYW0gIHtQb2xpY3lbXX0gIHBvbGljaWVzDQogICogQHBhcmFtICB7U3RyaW5nfSAgICBzY29wZQ0KICAqL30se2tleTonYWRkUG9saWNpZXMnLHZhbHVlOmZ1bmN0aW9uIGFkZFBvbGljaWVzKG5ld1BvbGljaWVzKXt2YXIgX3RoaXM9dGhpczt2YXIgbXlQb2xpY2llcz1fUGVyc2lzdGVuY2VNYW5hZ2VyMi5kZWZhdWx0LmdldCgncG9saWNpZXMnKTtpZihteVBvbGljaWVzPT09dW5kZWZpbmVkKXtteVBvbGljaWVzPXt9O31mb3IodmFyIGkgaW4gbmV3UG9saWNpZXMpe3ZhciBuZXdQb2xpY3k9bmV3UG9saWNpZXNbaV07dmFyIHNjb3BlPW5ld1BvbGljeS5zY29wZTtpZihteVBvbGljaWVzW3Njb3BlXT09PXVuZGVmaW5lZCl7bXlQb2xpY2llc1tzY29wZV09W107fWZvcih2YXIgaiBpbiBteVBvbGljaWVzW3Njb3BlXSl7dmFyIGV4aXN0aW5nUG9saWN5PW15UG9saWNpZXNbc2NvcGVdW2pdO2lmKGV4aXN0aW5nUG9saWN5LmNvbmRpdGlvbj09PW5ld1BvbGljeS5jb25kaXRpb24pe190aGlzLnJlbW92ZVBvbGljaWVzKG5ld1BvbGljaWVzW2ldLmNvbmRpdGlvbik7YnJlYWs7fX1teVBvbGljaWVzW3Njb3BlXS5wdXNoKG5ld1BvbGljaWVzW2ldKTt9X1BlcnNpc3RlbmNlTWFuYWdlcjIuZGVmYXVsdC5zZXQoJ3BvbGljaWVzJywwLG15UG9saWNpZXMpO190aGlzLnBvbGljaWVzPW15UG9saWNpZXM7fSAvKioNCiAgKiBSZW1vdmVzIHRoZSBwb2xpY3kgd2l0aCB0aGUgZ2l2ZW4gSUQgZnJvbSB0aGUgZ2l2ZW4gc2NvcGUuIElmIHBvbGljeUlEIGlzICcqJywgcmVtb3ZlcyBhbGwgcG9saWNpZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBnaXZlbiBzY29wZS4NCiAgKiBAcGFyYW0gIHtTdHJpbmd9ICBwb2xpY3lJRA0KICAqIEBwYXJhbSAge1N0cmluZ30gIHNjb3BlDQogICovfSx7a2V5OidyZW1vdmVQb2xpY2llcycsdmFsdWU6ZnVuY3Rpb24gcmVtb3ZlUG9saWNpZXMoY29uZGl0aW9uLHNjb3BlKXt2YXIgX3RoaXM9dGhpczt2YXIgbXlQb2xpY2llcz1fUGVyc2lzdGVuY2VNYW5hZ2VyMi5kZWZhdWx0LmdldCgncG9saWNpZXMnKTtpZihzY29wZSE9PScqJyl7aWYoc2NvcGUgaW4gbXlQb2xpY2llcyl7aWYoY29uZGl0aW9uIT09JyonKXt2YXIgcG9saWNpZXM9bXlQb2xpY2llc1tzY29wZV07Zm9yKHZhciBpIGluIHBvbGljaWVzKXtpZihwb2xpY2llc1tpXS5jb25kaXRpb249PT1jb25kaXRpb24pe3BvbGljaWVzLnNwbGljZShjb25kaXRpb24sMSk7YnJlYWs7fX19ZWxzZSB7ZGVsZXRlIG15UG9saWNpZXNbc2NvcGVdO31fUGVyc2lzdGVuY2VNYW5hZ2VyMi5kZWZhdWx0LnNldCgncG9saWNpZXMnLDAsbXlQb2xpY2llcyk7X3RoaXMucG9saWNpZXM9bXlQb2xpY2llczt9fWVsc2Uge19QZXJzaXN0ZW5jZU1hbmFnZXIyLmRlZmF1bHQuZGVsZXRlKCdwb2xpY2llcycpO190aGlzLnBvbGljaWVzPXt9O319IC8qKg0KICAqIFRoaXMgbWV0aG9kIGlzIGV4ZWN1dGVkIHdoZW4gYSBtZXNzYWdlIGlzIGludGVyY2VwdGVkIGluIHRoZSBNZXNzYWdlIEJ1cy4gVGhlIGZpcnN0IHN0ZXAgaXMgdGhlDQogICogYXNzaWdubWVudCBvZiB0aGUgaWRlbnRpdHkgYXNzb2NpYXRlZCB3aXRoIHRoZSBtZXNzYWdlLiBUaGUgc2Vjb25kIHN0ZXAgaXMgdGhlIGV2YWx1YXRpb24gb2YgdGhlDQogICogYXBwbGljYWJsZSBwb2xpY2llcyBpbiBvcmRlciB0byBvYnRhaW4gYW4gYXV0aG9yaXNhdGlvbiBkZWNpc2lvbjogaWYgYSBwb2xpY3kgZXZhbHVhdGVzIHRvDQogICogZmFsc2UsIHRoZW4gdGhlIG1lc3NhZ2UgaXMgdW5hdXRob3Jpc2VkLiBUaGUgdGhpcmQgc3RlcCBpcyB0aGUgZW5mb3JjZW1lbnQgb2YgdGhlIGFjdGlvbnMgdGhhdA0KICAqIHBvbGljaWVzIG1heSByZXF1aXJlLiBGaW5hbGx5LCB0aGUgbWVzc2FnZSBpcyBzdGFtcGVkIGFzIGF1dGhvcmlzZWQgb3Igbm90IGFuZCBpcyByZXR1cm5lZCB0bw0KICAqIHRoZSBNZXNzYWdlIEJ1cywgd2hlcmUgaXQgd2lsbCBiZSBmb3J3YXJkZWQgb3IgYmxvY2tlZC4NCiAgKiBAcGFyYW0gIHtNZXNzYWdlfSAgbWVzc2FnZQ0KICAqL30se2tleTonYXV0aG9yaXNlJyx2YWx1ZTpmdW5jdGlvbiBhdXRob3Jpc2UobWVzc2FnZSl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7Y29uc29sZS5sb2coJy0tLSBQb2xpY3kgRW5naW5lIC0tLScpO2NvbnNvbGUubG9nKG1lc3NhZ2UpO21lc3NhZ2UuYm9keT1tZXNzYWdlLmJvZHl8fHt9O3ZhciBpbml0aWFsUmVzdWx0T2s9X3RoaXMuZm9sbG93c0V4cGVjdGVkQmVoYXZpb3VyKG1lc3NhZ2UpO2lmKGluaXRpYWxSZXN1bHRPaz09PXVuZGVmaW5lZCl7aWYoX3RoaXMuaXNSdW50aW1lQ29yZSl7X3RoaXMuaWRNb2R1bGUuZ2V0SWRlbnRpdHlBc3NlcnRpb24oKS50aGVuKGZ1bmN0aW9uKGlkZW50aXR5KXttZXNzYWdlLmJvZHkuaWRlbnRpdHk9bWVzc2FnZS5ib2R5LmlkZW50aXR5fHxpZGVudGl0eTt9LGZ1bmN0aW9uKGVycm9yKXtyZWplY3QoZXJyb3IpO30pO31lbHNlIHsgLy9UT0RPOiBvYnRhaW4gdGhlIGlkZW50aXR5IGZyb20gRG9tYWluIFJlZ2lzdHJ5DQpjb25zb2xlLmxvZygnb2J0YWluIHRoZSBpZGVudGl0eSBmcm9tIERvbWFpbiBSZWdpc3RyeScpO30gLy9sZXQgc2NvcGUgPSBfdGhpcy5nZXRTY29wZShtZXNzYWdlKTsNCnZhciBhcHBsaWNhYmxlUG9saWNpZXM9X3RoaXMuZ2V0QXBwbGljYWJsZVBvbGljaWVzKCcqJyk7dmFyIHBvbGljaWVzUmVzdWx0PV90aGlzLnBkcC5ldmFsdWF0ZShtZXNzYWdlLGFwcGxpY2FibGVQb2xpY2llcyk7X3RoaXMucGVwLmVuZm9yY2UocG9saWNpZXNSZXN1bHRbMV0pO2lmKHBvbGljaWVzUmVzdWx0WzBdKXttZXNzYWdlLmJvZHkuYXV0aD1hcHBsaWNhYmxlUG9saWNpZXMubGVuZ3RoIT09MDtyZXNvbHZlKG1lc3NhZ2UpO31lbHNlIHtyZWplY3QoJ1VuYXV0aG9yaXNlZCBtZXNzYWdlJyk7fX1lbHNlIHtpZihpbml0aWFsUmVzdWx0T2spe3Jlc29sdmUobWVzc2FnZSk7fWVsc2Uge3JlamVjdCgnSW50cmluc2ljIGJlaGF2aW91ciB3YXMgbm90IHJlc3BlY3RlZCcpO319fSk7fSAvKg0KICAqIElkUHJveHkgLyBJZE1vZHVsZQ0KICAqICAgKDEpIE1lc3NhZ2VzIGZyb20gdGhlIElEUCBQcm94eSBtdXN0IGdvIHRvIHRoZSBJRCBNb2R1bGUuDQogICogICAoMikgTWVzc2FnZXMgdG8gdGhlIElEUCBQcm94eSBtdXN0IGNvbWUgZnJvbSB0aGUgSUQgTW9kdWxlLg0KICAqICAgKDMpIE1lc3NhZ2VzIGZyb20gdGhlIEdVSSBtdXN0IGdvIHRvIHRoZSBJRCBNb2R1bGUuDQogICogICAoNCkgTWVzc2FnZXMgdG8gdGhlIEdVSSBtdXN0IGNvbWUgZnJvbSB0aGUgSUQgTW9kdWxlLg0KICAqDQogICogRGF0YU9iamVjdHMNCiAgKiAgICg1KSBVcGRhdGVzIG11c3QgY29tZSBmcm9tIHJlcG9ydGVycw0KICAqL30se2tleTonZm9sbG93c0V4cGVjdGVkQmVoYXZpb3VyJyx2YWx1ZTpmdW5jdGlvbiBmb2xsb3dzRXhwZWN0ZWRCZWhhdmlvdXIobWVzc2FnZSl7dmFyIF90aGlzPXRoaXM7dmFyIGlkcFNjaGVtZT0nZG9tYWluLWlkcCc7dmFyIGlkbVVSTD1fdGhpcy5wZHAucnVudGltZVJlZ2lzdHJ5LnJ1bnRpbWVVUkwrJy9pZG0nOyAvKiAoMSkgKi9pZigoMCxfdXRpbHMuZGl2aWRlVVJMKShtZXNzYWdlLmZyb20pLnR5cGU9PT1pZHBTY2hlbWUpe3JldHVybiBtZXNzYWdlLnRvPT09aWRtVVJMO30gLyogKDIpICovaWYoKDAsX3V0aWxzLmRpdmlkZVVSTCkobWVzc2FnZS50bykudHlwZT09PWlkcFNjaGVtZSl7cmV0dXJuIG1lc3NhZ2UuZnJvbT09PWlkbVVSTDt9fX0se2tleTonZ2V0R3JvdXBzTmFtZXMnLHZhbHVlOmZ1bmN0aW9uIGdldEdyb3Vwc05hbWVzKCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIF90aGlzLnBkcC5nZXRHcm91cHNOYW1lcygpO30gLyoqDQogICogUmV0cmlldmVzIHRoZSBncm91cCB3aXRoIHRoZSBnaXZlbiBncm91cCBuYW1lIGZyb20gdGhlIFBEUC4NCiAgKiBAcGFyYW0gIHtTdHJpbmd9ICBncm91cE5hbWUNCiAgKiBAcmV0dXJuIHtBcnJheX0gICBncm91cA0KICAqL30se2tleTonZ2V0TGlzdCcsdmFsdWU6ZnVuY3Rpb24gZ2V0TGlzdChncm91cE5hbWUpe3ZhciBfdGhpcz10aGlzO3JldHVybiBfdGhpcy5wZHAuZ2V0TGlzdChncm91cE5hbWUpO30gLyoqDQogICogRm9yd2FyZHMgYSByZXF1ZXN0IGZvciB0aGUgY3JlYXRpb24gb2YgYSBncm91cCB3aXRoIHRoZSBnaXZlbiBuYW1lIHRvIHRoZSBQRFAuDQogICogQHBhcmFtICB7U3RyaW5nfSAgZ3JvdXBOYW1lDQogICovfSx7a2V5OidjcmVhdGVHcm91cCcsdmFsdWU6ZnVuY3Rpb24gY3JlYXRlR3JvdXAoZ3JvdXBOYW1lKXt2YXIgX3RoaXM9dGhpcztfdGhpcy5wZHAuY3JlYXRlR3JvdXAoZ3JvdXBOYW1lKTt9fSx7a2V5OidkZWxldGVHcm91cCcsdmFsdWU6ZnVuY3Rpb24gZGVsZXRlR3JvdXAoZ3JvdXBOYW1lKXt2YXIgX3RoaXM9dGhpcztfdGhpcy5wZHAuZGVsZXRlR3JvdXAoZ3JvdXBOYW1lKTt2YXIgcG9saWNpZXM9X3RoaXMucG9saWNpZXMudXNlcjtmb3IodmFyIGkgaW4gcG9saWNpZXMpe3ZhciBjb25kaXRpb249cG9saWNpZXNbaV0uY29uZGl0aW9uLnNwbGl0KCcgJyk7Y29uZGl0aW9uLnNoaWZ0KCk7dmFyIGdyb3VwSW5Qb2xpY3k9Y29uZGl0aW9uLmpvaW4oJyAnKTtpZihncm91cEluUG9saWN5PT09Z3JvdXBOYW1lKXtkZWxldGUgcG9saWNpZXNbaV07YnJlYWs7fX19IC8qKg0KICAqIEZvcndhcmRzIGEgcmVxdWVzdCB0byBhZGQgYSB1c2VyIHRvIHRoZSBncm91cCB3aXRoIHRoZSBnaXZlbiBuYW1lIHRvIHRoZSBQRFAuDQogICogQHBhcmFtICB7U3RyaW5nfSAgdXNlckVtYWlsDQogICogQHBhcmFtICB7U3RyaW5nfSAgZ3JvdXBOYW1lDQogICovfSx7a2V5OidhZGRUb0dyb3VwJyx2YWx1ZTpmdW5jdGlvbiBhZGRUb0dyb3VwKHVzZXJFbWFpbCxncm91cE5hbWUpe3ZhciBfdGhpcz10aGlzO190aGlzLnBkcC5hZGRUb0dyb3VwKHVzZXJFbWFpbCxncm91cE5hbWUpO319LHtrZXk6J2dldEdyb3VwUmVhY2hhYmlsaXR5Jyx2YWx1ZTpmdW5jdGlvbiBnZXRHcm91cFJlYWNoYWJpbGl0eShncm91cE5hbWUpe3ZhciBfdGhpcz10aGlzO3ZhciBwb2xpY2llcz1fdGhpcy5wb2xpY2llcy51c2VyO2Zvcih2YXIgaSBpbiBwb2xpY2llcyl7aWYocG9saWNpZXNbaV0uY29uZGl0aW9uPT09J2dyb3VwICcrZ3JvdXBOYW1lKXtyZXR1cm4gcG9saWNpZXNbaV0uYXV0aG9yaXNlO319fX0se2tleTonY2hhbmdlUG9saWN5Jyx2YWx1ZTpmdW5jdGlvbiBjaGFuZ2VQb2xpY3koY29uZGl0aW9uLGF1dGhvcmlzZSl7dmFyIF90aGlzPXRoaXM7dmFyIHBvbGljaWVzPV90aGlzLnBvbGljaWVzLnVzZXI7cG9saWNpZXM9cG9saWNpZXN8fFtdO2Zvcih2YXIgaSBpbiBwb2xpY2llcyl7aWYocG9saWNpZXNbaV0uY29uZGl0aW9uPT09Y29uZGl0aW9uKXtwb2xpY2llc1tpXS5hdXRob3Jpc2U9YXV0aG9yaXNlO3JldHVybjt9fXZhciBuZXdQb2xpY3k9e3Njb3BlOid1c2VyJyxjb25kaXRpb246Y29uZGl0aW9uLGF1dGhvcmlzZTphdXRob3Jpc2UsYWN0aW9uczpbXX07X3RoaXMuYWRkUG9saWNpZXMoW25ld1BvbGljeV0pO30gLyoqDQogICogRm9yd2FyZHMgYSByZXF1ZXN0IHRvIHJlbW92ZSBhIHVzZXIgZnJvbSB0aGUgZ3JvdXAgd2l0aCB0aGUgZ2l2ZW4gbmFtZSB0byB0aGUgUERQLg0KICAqIEBwYXJhbSAge1N0cmluZ30gIHVzZXJFbWFpbA0KICAqIEBwYXJhbSAge1N0cmluZ30gIGdyb3VwTmFtZQ0KICAqL30se2tleToncmVtb3ZlRnJvbUdyb3VwJyx2YWx1ZTpmdW5jdGlvbiByZW1vdmVGcm9tR3JvdXAodXNlckVtYWlsLGdyb3VwTmFtZSl7dmFyIF90aGlzPXRoaXM7X3RoaXMucGRwLnJlbW92ZUZyb21Hcm91cCh1c2VyRW1haWwsZ3JvdXBOYW1lKTt9fSx7a2V5OidnZXRUaW1lc2xvdHMnLHZhbHVlOmZ1bmN0aW9uIGdldFRpbWVzbG90cygpe3ZhciBfdGhpcz10aGlzO3ZhciBwb2xpY2llcz1fdGhpcy5wb2xpY2llcy51c2VyO3ZhciB0aW1lUmVzdHJpY3Rpb25zPVtdO2Zvcih2YXIgaSBpbiBwb2xpY2llcyl7aWYocG9saWNpZXNbaV0uY29uZGl0aW9uLnNwbGl0KCcgJylbMF09PT0ndGltZScpe3RpbWVSZXN0cmljdGlvbnMucHVzaChwb2xpY2llc1tpXS5jb25kaXRpb24pO319cmV0dXJuIHRpbWVSZXN0cmljdGlvbnM7fX0se2tleTonZ2V0VGltZXNsb3RCeUlkJyx2YWx1ZTpmdW5jdGlvbiBnZXRUaW1lc2xvdEJ5SWQoY29uZGl0aW9uKXt2YXIgX3RoaXM9dGhpczt2YXIgcG9saWNpZXM9X3RoaXMucG9saWNpZXMudXNlcjtmb3IodmFyIGkgaW4gcG9saWNpZXMpe2lmKHBvbGljaWVzW2ldLmNvbmRpdGlvbj09PWNvbmRpdGlvbil7cmV0dXJuIHBvbGljaWVzW2ldO319fSAvKioNCiAgKiBSZXR1cm5zIHRoZSBzY29wZSBvZiB0aGUgZ2l2ZW4gbWVzc2FnZSB0byByZXN0cmljdCBwb2xpY3kgYXBwbGljYWJpbGl0eS4NCiAgKiBAcmV0dXJuIHtTdHJpbmd9IHNjb3BlDQogICovIC8qZ2V0U2NvcGUobWVzc2FnZSkgew0KICAgIGxldCBfdGhpcyA9IHRoaXM7DQogICAgbGV0IHNjb3BlID0gJ3VzZXInOw0KICAgIGlmIChtZXNzYWdlLnR5cGUgPT09ICdzdWJzY3JpYmUnKSB7DQogICAgICBsZXQgcnVudGltZVVSTCA9IF90aGlzLnBkcC5ydW50aW1lUmVnaXN0cnkucnVudGltZVVSTDsNCiAgICAgIGlmIChydW50aW1lVVJMICsgJy9zbScgIT09IG1lc3NhZ2UuZnJvbSkgeyAvLyBuZWVkZWQgZm9yIHRoZSB2ZXJpZmljYXRpb24gdG8gYmUgZG9uZSBpbiB0aGUgcmVwb3J0ZXIncyBwb2xpY3kgZW5naW5lIGFuZCBub3QgaW4gdGhlIHN1YnNjcmliZXIncw0KICAgICAgICBsZXQgaXNGcm9tU00gPSBTdHJpbmcobWVzc2FnZS5mcm9tLnNwbGl0KCcvJykuc2xpY2UoLTEpWzBdKSA9PT0gJ3NtJzsNCiAgICAgICAgbGV0IG9yaWdpblJ1bnRpbWVVUkxTcGxpdCA9IG1lc3NhZ2UuZnJvbS5zcGxpdCgnLycpOw0KICAgICAgICBvcmlnaW5SdW50aW1lVVJMU3BsaXQuc3BsaWNlKC0xKTsNCiAgICAgICAgbGV0IG9yaWdpblJ1bnRpbWVVUkwgPSBvcmlnaW5SdW50aW1lVVJMU3BsaXQuam9pbihvcmlnaW5SdW50aW1lVVJMU3BsaXQpOw0KICAgICAgICBsZXQgaXNUaGlzUnVudGltZSA9IG9yaWdpblJ1bnRpbWVVUkwgPT09IHJ1bnRpbWVVUkw7DQogICAgICAgIGxldCBpc1RvU3Vic2NyaXB0aW9uID0gU3RyaW5nKG1lc3NhZ2UudG8uc3BsaXQoJy8nKS5zbGljZSgtMSlbMF0pID09PSAnc3Vic2NyaXB0aW9uJzsNCiAgICAgICAgaWYgKGlzRnJvbVNNICYmICFpc1RoaXNSdW50aW1lICYmIGlzVG9TdWJzY3JpcHRpb24pIHsNCiAgICAgICAgICBzY29wZSA9ICdzdWJzY3JpYmUnOw0KICAgICAgICB9DQogICAgICB9DQogICAgfQ0KDQogICAgcmV0dXJuIHNjb3BlOw0KICB9Ki8gLyoqDQogICogUmV0dXJucyB0aGUgcG9saWNpZXMgYXNzb2NpYXRlZCB3aXRoIGEgc2NvcGUuDQogICogQHBhcmFtICAge1N0cmluZ30gc2NvcGUNCiAgKiBAcmV0dXJuICB7QXJyYXl9ICBwb2xpY2llcw0KICAqL30se2tleTonZ2V0QXBwbGljYWJsZVBvbGljaWVzJyx2YWx1ZTpmdW5jdGlvbiBnZXRBcHBsaWNhYmxlUG9saWNpZXMoc2NvcGUpe3ZhciBfdGhpcz10aGlzO3ZhciBwb2xpY2llc1RhYmxlPV90aGlzLnBvbGljaWVzO3ZhciBwb2xpY2llcz1bXTtpZihzY29wZSE9PScqJyl7aWYocG9saWNpZXNUYWJsZVtzY29wZV0hPT11bmRlZmluZWQpe3BvbGljaWVzPXBvbGljaWVzVGFibGVbc2NvcGVdO319ZWxzZSB7Zm9yKHZhciBpIGluIHBvbGljaWVzVGFibGUpe3BvbGljaWVzLnB1c2guYXBwbHkocG9saWNpZXMscG9saWNpZXNUYWJsZVtpXSk7fX1yZXR1cm4gcG9saWNpZXM7fX1dKTtyZXR1cm4gUG9saWN5RW5naW5lO30oKTtleHBvcnRzLmRlZmF1bHQ9UG9saWN5RW5naW5lO21vZHVsZS5leHBvcnRzPWV4cG9ydHNbJ2RlZmF1bHQnXTsNCg0KfSx7Ii4uL3BlcnNpc3RlbmNlL1BlcnNpc3RlbmNlTWFuYWdlciI6NjAwLCIuLi91dGlscy91dGlscyI6NjE1LCIuL1BEUCI6NjAxLCIuL1BFUCI6NjAyLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSI6MjUsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MjgsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6Mjl9XSw2MDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pO3ZhciBfcHJvbWlzZT1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZScpO3ZhciBfcHJvbWlzZTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvbWlzZSk7dmFyIF9jbGFzc0NhbGxDaGVjazI9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrJyk7dmFyIF9jbGFzc0NhbGxDaGVjazM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NDYWxsQ2hlY2syKTt2YXIgX2NyZWF0ZUNsYXNzMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MnKTt2YXIgX2NyZWF0ZUNsYXNzMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVDbGFzczIpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfTt9IC8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqLyAvLyBpbXBvcnQgTWVzc2FnZUZhY3RvcnkgZnJvbSAnLi4vLi4vcmVzb3VyY2VzL01lc3NhZ2VGYWN0b3J5JzsNCi8qKg0KICogQ2xhc3Mgd2lsbCBhc2sgdG8gdGhlIG1lc3NhZ2Ugbm9kZSBmb3IgYWRkcmVzc2VzDQogKi92YXIgQWRkcmVzc0FsbG9jYXRpb249ZnVuY3Rpb24oKXsgLyogcHJpdmF0ZQ0KICBfdXJsOiBVUkwNCiAgX2J1czogTWluaUJ1cw0KICAqLyAvKioNCiAgICogQ3JlYXRlIGFuIEFkZHJlc3MgQWxsb2NhdGlvbg0KICAgKiBAcGFyYW0gIHtVUkwuVVJMfSAgICAgIHVybCAtIHVybCBmcm9tIHdobyBpcyBzZW5kaW5nIHRoZSBtZXNzYWdlDQogICAqIEBwYXJhbSAge01pbmlCdXN9ICAgICAgYnVzIC0gTWluaUJ1cyB1c2VkIGZvciBhZGRyZXNzIGFsbG9jYXRpb24NCiAgICovZnVuY3Rpb24gQWRkcmVzc0FsbG9jYXRpb24odXJsLGJ1cyl7KDAsX2NsYXNzQ2FsbENoZWNrMy5kZWZhdWx0KSh0aGlzLEFkZHJlc3NBbGxvY2F0aW9uKTt2YXIgX3RoaXM9dGhpczsgLy8gbGV0IG1lc3NhZ2VGYWN0b3J5ID0gbmV3IE1lc3NhZ2VGYWN0b3J5KCk7DQovLw0KLy8gX3RoaXMuX21lc3NhZ2VGYWN0b3J5ID0gbWVzc2FnZUZhY3Rvcnk7DQpfdGhpcy5fdXJsPXVybDtfdGhpcy5fYnVzPWJ1czt9IC8qKg0KICAgKiBnZXQgdGhlIFVSTCB2YWx1ZQ0KICAgKiBAcmV0dXJuIHtzdHJpbmd9IFRoZSB1cmwgdmFsdWU7DQogICAqLygwLF9jcmVhdGVDbGFzczMuZGVmYXVsdCkoQWRkcmVzc0FsbG9jYXRpb24sW3trZXk6J2NyZWF0ZScsIC8qKg0KICAgKiBBc2sgZm9yIGNyZWF0aW9uIG9mIGEgbnVtYmVyIG9mIEh5cGVydHkgYWRkcmVzc2VzLCB0byB0aGUgZG9tYWluIG1lc3NhZ2Ugbm9kZS4NCiAgICogQHBhcmFtICB7RG9tYWlufSBkb21haW4gLSBEb21haW4gb2YgdGhlIG1lc3NhZ2Ugbm9kZS4NCiAgICogQHBhcmFtICB7bnVtYmVyfSBudW1iZXIgLSBOdW1iZXIgb2YgYWRkcmVzc2VzIHRvIHJlcXVlc3QNCiAgICogQHJldHVybnMge1Byb21pc2U8SHlwZXJ0eVVSTD59ICBBIGxpc3Qgb2YgSHlwZXJ0eVVSTCdzDQogICAqL3ZhbHVlOmZ1bmN0aW9uIGNyZWF0ZShkb21haW4sbnVtYmVyKXt2YXIgX3RoaXM9dGhpczsgLy8gbGV0IG1lc3NhZ2VGYWN0b3J5ID0gX3RoaXMuX21lc3NhZ2VGYWN0b3J5Ow0KdmFyIG1zZz17dHlwZTonY3JlYXRlJyxmcm9tOl90aGlzLl91cmwsdG86J2RvbWFpbjovL21zZy1ub2RlLicrZG9tYWluKycvaHlwZXJ0eS1hZGRyZXNzLWFsbG9jYXRpb24nLGJvZHk6e3ZhbHVlOntudW1iZXI6bnVtYmVyfX19OyAvLyBUT0RPOiBBcHBseSB0aGUgbWVzc2FnZSBmYWN0b3J5DQovLyBUaGUgbXNnLW5vZGUtdmVydHggc2hvdWxkIGJlIGNoYW5nZWQgdGhlIGJvZHkgZmllbGQgdG8gcmVjZWl2ZQ0KLy8gdGhlIGZvbGxvd2luZyBmb3JtYXQgYm9keToge3ZhbHVlOiB7bnVtYmVyOiBudW1iZXJ9fSBiZWNhdXNlDQovLyB0aGUgbWVzc2FnZSBpcyBnZW5lcmF0ZWQgaW4gdGhhdCB3YXkgYnkgdGhlIG1lc3NhZ2UgZmFjdG9yeTsNCi8vIGxldCBtc2cgPSBtZXNzYWdlRmFjdG9yeS5jcmVhdGVNZXNzYWdlUmVxdWVzdChfdGhpcy5fdXJsLCAnZG9tYWluOi8vbXNnLW5vZGUuJyArIGRvbWFpbiArICcvaHlwZXJ0eS1hZGRyZXNzLWFsbG9jYXRpb24nLCAnJywge251bWJlcjogbnVtYmVyfSk7DQpyZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXsgLy8gVE9ETzogY2hhbmdlIHRoaXMgcmVzcG9uc2UgTWVzc2FnZSB1c2luZyB0aGUgTWVzc2FnZUZhY3RvcnkNCl90aGlzLl9idXMucG9zdE1lc3NhZ2UobXNnLGZ1bmN0aW9uKHJlcGx5KXtpZihyZXBseS5ib2R5LmNvZGU9PT0yMDApe3Jlc29sdmUocmVwbHkuYm9keS52YWx1ZS5hbGxvY2F0ZWQpO31lbHNlIHtyZWplY3QocmVwbHkuYm9keS5kZXNjKTt9fSk7fSk7fSAvKioNCiAgKiBTZW5kIGEgcmVxdWVzdCB0byB0aGUgZG9tYWluIG1lc3NhZ2Ugbm9kZSwgdG8gZGVhbGxvY2F0ZSBvbmUgb3IgbW9yZSBhZGRyZXNzZXMNCiAgKiBAcGFyYW0gIHtEb21haW59IGRvbWFpbiAtIERvbWFpbiBvZiB0aGUgbWVzc2FnZSBub2RlLg0KICAqIEBwYXJhbSAge2FkZHJlc3Nlc30gYWRkcmVzc2VzIHRvIHJlcXVlc3QgdGhlIGRlYWxsb2NhdGlvbg0KICAqIEByZXR1cm5zIHtQcm9taXNlfSAgdGhlIHJlc3BvbnNlIGJ5IHRoZSBtZXNzYWdlIG5vZGUNCiAgKi99LHtrZXk6J2RlbGV0ZScsdmFsdWU6ZnVuY3Rpb24gX2RlbGV0ZShkb21haW4sYWRkcmVzc2VzKXt2YXIgX3RoaXM9dGhpczt2YXIgbWVzc2FnZT17dHlwZTonZGVsZXRlJyxmcm9tOl90aGlzLl91cmwsdG86J2RvbWFpbjovL21zZy1ub2RlLicrZG9tYWluKycvaHlwZXJ0eS1hZGRyZXNzLWFsbG9jYXRpb24nLGJvZHk6e2NoaWxkcmVuUmVzb3VyY2VzOmFkZHJlc3Nlc319O3JldHVybiBuZXcgX3Byb21pc2UyLmRlZmF1bHQoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe190aGlzLl9idXMucG9zdE1lc3NhZ2UobWVzc2FnZSxmdW5jdGlvbihyZXBseSl7Y29uc29sZS5sb2coJ3JlcGx5JyxyZXBseSk7aWYocmVwbHkuYm9keS5jb2RlPT09MjAwKXtyZXNvbHZlKHJlcGx5LmJvZHkuY29kZSk7fWVsc2Uge3JlamVjdChyZXBseS5ib2R5LmRlc2MpO319KTt9KTt9fSx7a2V5Oid1cmwnLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fdXJsO319XSk7cmV0dXJuIEFkZHJlc3NBbGxvY2F0aW9uO30oKTtleHBvcnRzLmRlZmF1bHQ9QWRkcmVzc0FsbG9jYXRpb247bW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1snZGVmYXVsdCddOw0KDQp9LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiOjI1LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjI4LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjI5fV0sNjA1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KTt2YXIgX2dldFByb3RvdHlwZU9mPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZicpO3ZhciBfZ2V0UHJvdG90eXBlT2YyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldFByb3RvdHlwZU9mKTt2YXIgX2NsYXNzQ2FsbENoZWNrMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2snKTt2YXIgX2NsYXNzQ2FsbENoZWNrMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO3ZhciBfY3JlYXRlQ2xhc3MyPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcycpO3ZhciBfY3JlYXRlQ2xhc3MzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUNsYXNzMik7dmFyIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybicpO3ZhciBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIpO3ZhciBfaW5oZXJpdHMyPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cycpO3ZhciBfaW5oZXJpdHMzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2luaGVyaXRzMik7dmFyIF9SZWdpc3RyeURhdGFNb2RlbDI9cmVxdWlyZSgnLi9SZWdpc3RyeURhdGFNb2RlbCcpO3ZhciBfUmVnaXN0cnlEYXRhTW9kZWwzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1JlZ2lzdHJ5RGF0YU1vZGVsMik7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9O30gLyoqDQoqICAgQGF1dGhvcjogR2lsIERpYXMgKGdpbC5kaWFzQHRlY25pY28udWxpc2JvYS5wdCkNCiogICBIeXBlcnR5SW5zdGFuY2UgRGF0YSBNb2RlbCB1c2VkIHRvIG1vZGVsIGluc3RhbmNlcyBvZiBIeXBlcnRpZXMgcnVubmluZyBpbiBkZXZpY2VzIGFuZCBzZXJ2ZXJzLg0KKi92YXIgSHlwZXJ0eUluc3RhbmNlPWZ1bmN0aW9uKF9SZWdpc3RyeURhdGFNb2RlbCl7KDAsX2luaGVyaXRzMy5kZWZhdWx0KShIeXBlcnR5SW5zdGFuY2UsX1JlZ2lzdHJ5RGF0YU1vZGVsKTtmdW5jdGlvbiBIeXBlcnR5SW5zdGFuY2UoaWQsdXJsLGRlc2NyaXB0b3JVUkwsZGVzY3JpcHRvcixoeXBlcnR5VVJMLHVzZXIsZ3VpZCxydW50aW1lLGNvbnRleHQpeygwLF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcyxIeXBlcnR5SW5zdGFuY2UpO3ZhciBfdGhpczI9KDAsX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4zLmRlZmF1bHQpKHRoaXMsKDAsX2dldFByb3RvdHlwZU9mMi5kZWZhdWx0KShIeXBlcnR5SW5zdGFuY2UpLmNhbGwodGhpcyxpZCx1cmwsZGVzY3JpcHRvclVSTCkpO3ZhciBfdGhpcz1fdGhpczI7X3RoaXMuX2Rlc2NyaXB0b3I9ZGVzY3JpcHRvcjtfdGhpcy5faHlwZXJ0eVVSTD1oeXBlcnR5VVJMO190aGlzLl91c2VyPXVzZXI7X3RoaXMuX2d1aWQ9Z3VpZDtfdGhpcy5fcnVudGltZT1ydW50aW1lO190aGlzLl9jb250ZXh0PWNvbnRleHQ7cmV0dXJuIF90aGlzMjt9KDAsX2NyZWF0ZUNsYXNzMy5kZWZhdWx0KShIeXBlcnR5SW5zdGFuY2UsW3trZXk6J3VzZXInLHNldDpmdW5jdGlvbiBzZXQoaWRlbnRpdHkpe3ZhciBfdGhpcz10aGlzO190aGlzLnVzZXI9aWRlbnRpdHk7fSxnZXQ6ZnVuY3Rpb24gZ2V0KCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIF90aGlzLl91c2VyO319LHtrZXk6J2h5cGVydHlVUkwnLGdldDpmdW5jdGlvbiBnZXQoKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gX3RoaXMuX2h5cGVydHlVUkw7fX0se2tleTonZGVzY3JpcHRvcicsZ2V0OmZ1bmN0aW9uIGdldCgpe3ZhciBfdGhpcz10aGlzO3JldHVybiBfdGhpcy5fZGVzY3JpcHRvcjt9fV0pO3JldHVybiBIeXBlcnR5SW5zdGFuY2U7fShfUmVnaXN0cnlEYXRhTW9kZWwzLmRlZmF1bHQpOyAvKioNCiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBDQoqIENvcHlyaWdodCAyMDE2IElORVNDLUlEDQoqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTA0KKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVg0KKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0ENCiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRw0KKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWUNCiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU4NCioNCiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQoqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4NCiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQoqDQoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQoqDQoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQoqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQoqKi9leHBvcnRzLmRlZmF1bHQ9SHlwZXJ0eUluc3RhbmNlO21vZHVsZS5leHBvcnRzPWV4cG9ydHNbJ2RlZmF1bHQnXTsNCg0KfSx7Ii4vUmVnaXN0cnlEYXRhTW9kZWwiOjYwNywiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIjoyMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoyOCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoyOSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzIjozMCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iOjMxfV0sNjA2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KTt2YXIgX3Byb21pc2U9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UnKTt2YXIgX3Byb21pc2UyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb21pc2UpO3ZhciBfZ2V0UHJvdG90eXBlT2Y9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mJyk7dmFyIF9nZXRQcm90b3R5cGVPZjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ2V0UHJvdG90eXBlT2YpO3ZhciBfY2xhc3NDYWxsQ2hlY2syPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjaycpO3ZhciBfY2xhc3NDYWxsQ2hlY2szPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzQ2FsbENoZWNrMik7dmFyIF9jcmVhdGVDbGFzczI9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzJyk7dmFyIF9jcmVhdGVDbGFzczM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlQ2xhc3MyKTt2YXIgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuJyk7dmFyIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMik7dmFyIF9pbmhlcml0czI9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzJyk7dmFyIF9pbmhlcml0czM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW5oZXJpdHMyKTt2YXIgX0V2ZW50RW1pdHRlcjI9cmVxdWlyZSgnLi4vdXRpbHMvRXZlbnRFbWl0dGVyJyk7dmFyIF9FdmVudEVtaXR0ZXIzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0V2ZW50RW1pdHRlcjIpO3ZhciBfQWRkcmVzc0FsbG9jYXRpb249cmVxdWlyZSgnLi9BZGRyZXNzQWxsb2NhdGlvbicpO3ZhciBfQWRkcmVzc0FsbG9jYXRpb24yPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0FkZHJlc3NBbGxvY2F0aW9uKTt2YXIgX09iamVjdEFsbG9jYXRpb249cmVxdWlyZSgnLi4vc3luY2hlci9PYmplY3RBbGxvY2F0aW9uJyk7dmFyIF9PYmplY3RBbGxvY2F0aW9uMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9PYmplY3RBbGxvY2F0aW9uKTt2YXIgX0h5cGVydHlJbnN0YW5jZT1yZXF1aXJlKCcuL0h5cGVydHlJbnN0YW5jZScpO3ZhciBfSHlwZXJ0eUluc3RhbmNlMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9IeXBlcnR5SW5zdGFuY2UpO3ZhciBfTWVzc2FnZUZhY3Rvcnk9cmVxdWlyZSgnc2VydmljZS1mcmFtZXdvcmsvZGlzdC9NZXNzYWdlRmFjdG9yeScpO3ZhciBfdXRpbHM9cmVxdWlyZSgnLi4vdXRpbHMvdXRpbHMuanMnKTtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian07fSAvKmltcG9ydCBJZGVudGl0eU1hbmFnZXIgZnJvbSAnLi9JZGVudGl0eU1hbmFnZXInOw0KaW1wb3J0IERpc2NvdmVyeSBmcm9tICcuL0Rpc2NvdmVyeSc7Ki8gLyoqDQoqIFJ1bnRpbWUgUmVnaXN0cnkgSW50ZXJmYWNlDQoqLyAvKioNCiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBDQoqIENvcHlyaWdodCAyMDE2IElORVNDLUlEDQoqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTA0KKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVg0KKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0ENCiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRw0KKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWUNCiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU4NCioNCiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQoqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4NCiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQoqDQoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQoqDQoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQoqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQoqKi92YXIgUmVnaXN0cnk9ZnVuY3Rpb24oX0V2ZW50RW1pdHRlcil7KDAsX2luaGVyaXRzMy5kZWZhdWx0KShSZWdpc3RyeSxfRXZlbnRFbWl0dGVyKTsgLyoqDQogICogVG8gaW5pdGlhbGlzZSB0aGUgUnVudGltZSBSZWdpc3RyeSB3aXRoIHRoZSBSdW50aW1lVVJMIHRoYXQgd2lsbCBiZSB0aGUgYmFzaXMgdG8gZGVyaXZlIHRoZSBpbnRlcm5hbCBydW50aW1lIGFkZHJlc3NlcyB3aGVuIGFsbG9jYXRpbmcgYWRkcmVzc2VzIHRvIGludGVybmFsIHJ1bnRpbWUgY29tcG9uZW50LiBJbiBhZGRpdGlvbiwgdGhlIFJlZ2lzdHJ5IGRvbWFpbiBiYWNrLWVuZCB0byBiZSB1c2VkIHRvIHJlbW90ZWx5IHJlZ2lzdGVyIFJ1bnRpbWUgY29tcG9uZW50cywgaXMgYWxzbyBwYXNzZWQgYXMgaW5wdXQgcGFyYW1ldGVyLg0KICAqIEBwYXJhbSAge01lc3NhZ2VCdXN9ICAgICAgICAgIG1zZ2J1cyAgICAgICAgICAgICAgICBtc2didXMNCiAgKiBAcGFyYW0gIHtIeXBlcnR5UnVudGltZVVSTH0gICBydW50aW1lVVJMICAgICAgICAgICAgcnVudGltZVVSTA0KICAqIEBwYXJhbSAge0FwcFNhbmRib3h9ICAgICAgICAgIGFwcFNhbmRib3ggICAgICAgICAgICBhcHBTYW5kYm94DQogICogQHBhcmFtICB7cnVudGltZUNhdGFsb2d1ZX0gICAgcnVudGltZUNhdGFsb2d1ZSAgICAgIHJ1bnRpbWVDYXRhbG9ndWUNCiAgKiBAcGFyYW0gIHtEb21haW5VUkx9ICAgICAgICAgICByZW1vdGVSZWdpc3RyeSAgICAgICAgcmVtb3RlUmVnaXN0cnkNCiAgKi9mdW5jdGlvbiBSZWdpc3RyeShydW50aW1lVVJMLGFwcFNhbmRib3gsaWRlbnRpdHlNb2R1bGUscnVudGltZUNhdGFsb2d1ZSxyZW1vdGVSZWdpc3RyeSl7KDAsX2NsYXNzQ2FsbENoZWNrMy5kZWZhdWx0KSh0aGlzLFJlZ2lzdHJ5KTsgLy8gaG93IHNvbWUgZnVuY3Rpb25zIHJlY2VpdmUgdGhlIHBhcmFtZXRlcnMgZm9yIGV4YW1wbGU6DQovLyBuZXcgUmVnaXN0cnkoJ2h5cGVydHktcnVudGltZTovL3NwMS8xMjMnLCBhcHBTYW5kYm94LCBpZE1vZHVsZSwgcmVtb3RlUmVnaXN0cnkpOw0KLy8gcmVnaXN0cnkucmVnaXN0ZXJTdHViKHNhbmRib3gsICdzcDEnKTsNCi8vIHJlZ2lzdHJ5LnJlZ2lzdGVySHlwZXJ0eShzYW5kQm94LCAnaHlwZXJ0eS1ydW50aW1lOi8vc3AxLzEyMycpOw0KLy8gcmVnaXN0cnkucmVzb2x2ZSgnaHlwZXJ0eS1ydW50aW1lOi8vc3AxLzEyMycpOw0KdmFyIF90aGlzMj0oMCxfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjMuZGVmYXVsdCkodGhpcywoMCxfZ2V0UHJvdG90eXBlT2YyLmRlZmF1bHQpKFJlZ2lzdHJ5KS5jYWxsKHRoaXMpKTtpZighcnVudGltZVVSTCl0aHJvdyBuZXcgRXJyb3IoJ3J1bnRpbWVVUkwgaXMgbWlzc2luZy4nKTsgLyppZiAoIXJlbW90ZVJlZ2lzdHJ5KSB0aHJvdyBuZXcgRXJyb3IoJ3JlbW90ZVJlZ2lzdHJ5IGlzIG1pc3NpbmcnKTsqL3ZhciBfdGhpcz1fdGhpczI7X3RoaXMucmVnaXN0cnlVUkw9cnVudGltZVVSTCsnL3JlZ2lzdHJ5Lyc7X3RoaXMuYXBwU2FuZGJveD1hcHBTYW5kYm94O190aGlzLnJ1bnRpbWVVUkw9cnVudGltZVVSTDtfdGhpcy5ydW50aW1lQ2F0YWxvZ3VlPXJ1bnRpbWVDYXRhbG9ndWU7X3RoaXMucmVtb3RlUmVnaXN0cnk9cmVtb3RlUmVnaXN0cnk7X3RoaXMuaWRNb2R1bGU9aWRlbnRpdHlNb2R1bGU7X3RoaXMuaWRlbnRpZmllcj1NYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMTAwMDArMSk7IC8vIHRoZSBleHBpcmVzIGluIDIxNjAwcywgcmVwcmVzZW50cyA2IGhvdXJzDQovL3RoZSBleHBpcmVzIGlzIGluIHNlY29uZHMsIHVuaXQgb2YgbWVhc3VyZSByZWNlaXZlZCBieSB0aGUgZG9tYWluIHJlZ2lzdHJ5DQpfdGhpcy5leHBpcmVzVGltZT0yMTYwMDtfdGhpcy5oeXBlcnRpZXNMaXN0VG9SZW1vdmU9e307X3RoaXMuaHlwZXJ0aWVzTGlzdD1bXTtfdGhpcy5wcm90b3N0dWJzTGlzdD17fTtfdGhpcy5pZHBQcm94eUxpc3Q9e307X3RoaXMuZGF0YU9iamVjdExpc3Q9e307X3RoaXMuc2FuZGJveGVzTGlzdD17c2FuZGJveDp7fSxhcHBTYW5kYm94Ont9fTtfdGhpcy5wZXBMaXN0PXt9O190aGlzLl9kb21haW49KDAsX3V0aWxzLmRpdmlkZVVSTCkoX3RoaXMucmVnaXN0cnlVUkwpLmRvbWFpbjtfdGhpcy5zYW5kYm94ZXNMaXN0LmFwcFNhbmRib3hbcnVudGltZVVSTF09YXBwU2FuZGJveDt2YXIgbXNnRmFjdG9yeT1uZXcgX01lc3NhZ2VGYWN0b3J5Lk1lc3NhZ2VGYWN0b3J5KCdmYWxzZScsJ3t9Jyk7X3RoaXMubWVzc2FnZUZhY3Rvcnk9bXNnRmFjdG9yeTtyZXR1cm4gX3RoaXMyO30gLyoqDQogICogcmV0dXJuIHRoZSBtZXNzYWdlQnVzIGluIHRoaXMgUmVnaXN0cnkNCiAgKiBAcGFyYW0ge01lc3NhZ2VCdXN9ICAgICAgICAgICBtZXNzYWdlQnVzDQogICovKDAsX2NyZWF0ZUNsYXNzMy5kZWZhdWx0KShSZWdpc3RyeSxbe2tleTonX2dldElkZW50aXR5QXNzb2NpYXRlZCcsIC8qbGV0IGRpc2NvdmVyeSA9IG5ldyBEaXNjb3ZlcnkoX3RoaXMucmVnaXN0cnlVUkwsIG1lc3NhZ2VCdXMpOw0KICAgIF90aGlzLmRpc2NvdmVyeSA9IGRpc2NvdmVyeTsNCg0KICAgIGxldCBpZGVudGl0eU1hbmFnZXIgPSBuZXcgSWRlbnRpdHlNYW5hZ2VyKCdoeXBlcnR5Oi8vbG9jYWxob3N0LzgzM2E2ZTUyLTUxNWItNDk4Yi1hNTdiLWUzZGFlZWNlNDhkMicsIF90aGlzLnJ1bnRpbWVVUkwsIG1lc3NhZ2VCdXMpOw0KICAgIF90aGlzLmlkZW50aXR5TWFuYWdlciA9IGlkZW50aXR5TWFuYWdlcjsqL3ZhbHVlOmZ1bmN0aW9uIF9nZXRJZGVudGl0eUFzc29jaWF0ZWQodHlwZSxoeXBlcnR5VVJMKXt2YXIgX3RoaXM9dGhpcztmb3IodmFyIGh5cGVydHkgaW4gX3RoaXMuaHlwZXJ0aWVzTGlzdCl7dmFyIHZhbHVlPV90aGlzLmh5cGVydGllc0xpc3RbaHlwZXJ0eV07aWYodmFsdWUuX2h5cGVydHlVUkw9PT1oeXBlcnR5VVJMKXtzd2l0Y2godHlwZSl7Y2FzZSAndXNlcm5hbWUnOnJldHVybiB2YWx1ZS5fdXNlci51c2VybmFtZTtjYXNlICdjbic6cmV0dXJuIHZhbHVlLl91c2VyLmNuO2Nhc2UgJ2xvY2FsZSc6cmV0dXJuIHZhbHVlLl91c2VyLmxvY2FsZTtjYXNlICdhdmF0YXInOnJldHVybiB2YWx1ZS5fdXNlci5hdmF0YXI7Y2FzZSAndXNlclVSTCc6cmV0dXJuIHZhbHVlLl91c2VyLnVzZXJVUkw7Y2FzZSAnLic6cmV0dXJuIHZhbHVlLl91c2VyO2RlZmF1bHQ6cmV0dXJuICdObyBpbmZvcm1hdGlvbiBjb3VsZCBiZSBmb3VuZCc7fX19cmV0dXJuICdubyBpZGVudGl0eSBmb3VuZCc7fSAvKioNCiAgKiBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgdG8gcmV0dXJuIHRoZSBzYW5kYm94IGluc3RhbmNlIHdoZXJlIHRoZSBBcHBsaWNhdGlvbiBpcyBleGVjdXRpbmcuIEl0IGlzIGFzc3VtZWQgdGhlcmUgaXMganVzdCBvbmUgQXBwIHBlciBSdW50aW1lIGluc3RhbmNlLg0KICAqL30se2tleTonZ2V0QXBwU2FuZGJveCcsdmFsdWU6ZnVuY3Rpb24gZ2V0QXBwU2FuZGJveCgpe3ZhciBfdGhpcz10aGlzO3JldHVybiBfdGhpcy5hcHBTYW5kYm94O30gLyoqDQogICogZnVuY3Rpb24gdG8gcmV0dXJuIHRoZSByZXBvcnRlclVSTCBhc3NvY2lhdGVkIHdpdGggdGhlIGRhdGFvYmplY3QgVVJMDQogICogQHBhcmFtICAgIHtTdHJpbmd9ICAgICBkYXRhT2JqZWN0VVJMICAgIGRhdGFPYmplY3RVUkwNCiAgKiBAcmV0dXJuICAge1N0cmluZ30gICAgIHJlcG9ydGVyVVJMICAgICAgcmVwb3J0ZXJVUkwNCiAgKi99LHtrZXk6J2dldFJlcG9ydGVyVVJMJyx2YWx1ZTpmdW5jdGlvbiBnZXRSZXBvcnRlclVSTChkYXRhT2JqZWN0VVJMKXt2YXIgX3RoaXM9dGhpczt2YXIgZGF0YU9iamVjdD1fdGhpcy5kYXRhT2JqZWN0TGlzdFtkYXRhT2JqZWN0VVJMXTtyZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXtpZihkYXRhT2JqZWN0KXtyZXNvbHZlKGRhdGFPYmplY3QucmVwb3J0ZXIpO31lbHNlIHtyZWplY3QoJ05vIHJlcG9ydGVyIHdhcyBmb3VuZCcpO319KTt9fSx7a2V5OidnZXRQcmVBdXRoU3Vic2NyaWJlcnMnLHZhbHVlOmZ1bmN0aW9uIGdldFByZUF1dGhTdWJzY3JpYmVycyhkYXRhT2JqZWN0VVJMKXt2YXIgX3RoaXM9dGhpczt2YXIgZGF0YU9iamVjdD1fdGhpcy5kYXRhT2JqZWN0TGlzdFtkYXRhT2JqZWN0VVJMXTtyZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXtpZihkYXRhT2JqZWN0KXtyZXNvbHZlKGRhdGFPYmplY3QucHJlQXV0aCk7fWVsc2Uge3JlamVjdCgnTm8gcmVwb3J0ZXIgd2FzIGZvdW5kJyk7fX0pO30gLyoqDQogICogIGZ1bmN0aW9uIHRvIGRlbGV0ZSBhbiBoeXBlcnR5SW5zdGFuY2UgaW4gdGhlIERvbWFpbiBSZWdpc3RyeQ0KICAqICBAcGFyYW0gICB7U3RyaW5nfSAgICAgIHVzZXIgICAgICAgIHVzZXIgdXJsDQogICogIEBwYXJhbSAgIHtTdHJpbmd9ICAgICAgaHlwZXJ0eUluc3RhbmNlICAgSHlwZXJ0eUluc250YW5jZSB1cmwNCiAgKg0KICAqL30se2tleTonZGVsZXRlSHlwZXJ0eUluc3RhbmNlJyx2YWx1ZTpmdW5jdGlvbiBkZWxldGVIeXBlcnR5SW5zdGFuY2UodXNlcixoeXBlcnR5SW5zdGFuY2UpeyAvL1RPRE8gd29ya2luZyBidXQgdGhlIHVzZXINCnZhciBfdGhpcz10aGlzO3ZhciBtZXNzYWdlPXt0eXBlOidkZWxldGUnLGZyb206X3RoaXMucmVnaXN0cnlVUkwsdG86J2RvbWFpbjovL3JlZ2lzdHJ5LicrX3RoaXMuX2RvbWFpbisnLycsYm9keTp7dmFsdWU6e3VzZXI6dXNlcixoeXBlcnR5VVJMOmh5cGVydHlJbnN0YW5jZX19fTtfdGhpcy5fbWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShtZXNzYWdlLGZ1bmN0aW9uKHJlcGx5KXtjb25zb2xlLmxvZygnZGVsZXRlIGh5cGVydHkgUmVwbHknLHJlcGx5KTt9KTt9IC8qKg0KICAqICBmdW5jdGlvbiB0byBkZWxldGUgYW4gZGF0YU9iamVjdEluc3RhbmNlIGluIHRoZSBEb21haW4gUmVnaXN0cnkNCiAgKiAgQHBhcmFtICAge1N0cmluZ30gICAgbmFtZSAgICAgIERhdGFPYmplY3ROYW1lDQogICovfSx7a2V5OidkZWxldGVEYXRhT2JqZWN0SW5zdGFuY2UnLHZhbHVlOmZ1bmN0aW9uIGRlbGV0ZURhdGFPYmplY3RJbnN0YW5jZShuYW1lKXt2YXIgX3RoaXM9dGhpczt2YXIgbWVzc2FnZT17dHlwZTonZGVsZXRlJyxmcm9tOl90aGlzLnJlZ2lzdHJ5VVJMLHRvOidkb21haW46Ly9yZWdpc3RyeS4nK190aGlzLl9kb21haW4rJy8nLGJvZHk6e3ZhbHVlOntuYW1lOm5hbWV9fX07X3RoaXMuX21lc3NhZ2VCdXMucG9zdE1lc3NhZ2UobWVzc2FnZSxmdW5jdGlvbihyZXBseSl7Y29uc29sZS5sb2coJ2RlbGV0ZSBoeXBlcnR5IFJlcGx5JyxyZXBseSk7fSk7fSAvKioNCiAgKiBGdW5jdGlvbiB0byB1cGRhdGUgYW4gSHlwZXJ0eQ0KICAqL30se2tleTondXBkYXRlSHlwZXJ0eUluc3RhbmNlJyx2YWx1ZTpmdW5jdGlvbiB1cGRhdGVIeXBlcnR5SW5zdGFuY2UocmVzb3VyY2UsdmFsdWUpe3ZhciBfdGhpcz10aGlzO3ZhciBtZXNzYWdlPXt0eXBlOidVUERBVEUnLGZyb206X3RoaXMucmVnaXN0cnlVUkwsdG86J2RvbWFpbjovL3JlZ2lzdHJ5LicrX3RoaXMuX2RvbWFpbisnLycsYm9keTp7cmVzb3VyY2U6cmVzb3VyY2UsdmFsdWU6dmFsdWV9fTtfdGhpcy5fbWVzc2FnZUJ1cy5wb3N0LnBvc3RNZXNzYWdlKG1lc3NhZ2UsZnVuY3Rpb24ocmVwbHkpe2NvbnNvbGUubG9nKCdVcGRhdGVkIGh5cGVydHkgcmVwbHknLHJlcGx5KTt9KTt9IC8qKg0KICAqIFRvIHJlZ2lzdGVyIGEgbmV3IERhdGEgT2JqZWN0IGluIHRoZSBydW50aW1lIHdoaWNoIHJldHVybnMgdGhlIGRhdGFPYmplY3RVUkwgYWxsb2NhdGVkIHRvIHRoZSBuZXcgRGF0YSBPYmplY3QuDQogICogQHBhcmFtICB7U3RyaW5nfSAgICAgIGlkZW50aWZpZXIgICAgICAgICAgICBpZGVudGlmaWVyDQogICogQHBhcmFtICB7U3RyaW5nfSAgICAgIGRhdGFPYmplY3RzY2hlbWEgICAgICAgICAgICBkYXRhT2JqZWN0c2NoZW1hDQogICogQHBhcmFtICB7U3RyaW5nfSAgICAgIGRhdGFPYmplY3RVcmwgICAgICAgIGRhdGFPYmplY3RVcmwNCiAgKiBAcmV0dXJuIHtTdHJpbmd9ICAgICAgZGF0YU9iamVjdFJlcG9ydGVyICAgICAgICAgZGF0YU9iamVjdFJlcG9ydGVyDQogICovfSx7a2V5OidyZWdpc3RlckRhdGFPYmplY3QnLHZhbHVlOmZ1bmN0aW9uIHJlZ2lzdGVyRGF0YU9iamVjdChpZGVudGlmaWVyLGRhdGFPYmplY3RzY2hlbWEsZGF0YU9iamVjdFVybCxkYXRhT2JqZWN0UmVwb3J0ZXIsYXV0aG9yaXNlKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXsgLy9tZXNzYWdlIHRvIHJlZ2lzdGVyIHRoZSBuZXcgaHlwZXJ0eSwgd2l0aGluIHRoZSBkb21haW4gcmVnaXN0cnkNCnZhciBtZXNzYWdlVmFsdWU9e25hbWU6aWRlbnRpZmllcixzY2hlbWE6ZGF0YU9iamVjdHNjaGVtYSx1cmw6ZGF0YU9iamVjdFVybCxleHBpcmVzOl90aGlzLmV4cGlyZXNUaW1lLHJlcG9ydGVyOmRhdGFPYmplY3RSZXBvcnRlcixwcmVBdXRoOmF1dGhvcmlzZX07X3RoaXMuZGF0YU9iamVjdExpc3RbZGF0YU9iamVjdFVybF09bWVzc2FnZVZhbHVlO3ZhciBtZXNzYWdlPV90aGlzLm1lc3NhZ2VGYWN0b3J5LmNyZWF0ZUNyZWF0ZU1lc3NhZ2VSZXF1ZXN0KF90aGlzLnJlZ2lzdHJ5VVJMLCdkb21haW46Ly9yZWdpc3RyeS4nK190aGlzLnJlZ2lzdHJ5RG9tYWluKycvJyxtZXNzYWdlVmFsdWUsJ3BvbGljeScpO190aGlzLl9tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG1lc3NhZ2UsZnVuY3Rpb24ocmVwbHkpe2NvbnNvbGUubG9nKCc9PT0+IHJlZ2lzdGVyRGF0YU9iamVjdCBSZXBseTogJyxyZXBseSk7aWYocmVwbHkuYm9keS5jb2RlPT09MjAwKXtyZXNvbHZlKCdvaycpO31lbHNlIHtyZWplY3QoJ2Vycm9yIG9uIHJlZ2lzdGVyIERhdGFPYmplY3QnKTt9fSk7fSk7fSAvKioNCiAgKiBUbyByZWdpc3RlciBhIG5ldyBIeXBlcnR5IGluIHRoZSBydW50aW1lIHdoaWNoIHJldHVybnMgdGhlIEh5cGVydHlVUkwgYWxsb2NhdGVkIHRvIHRoZSBuZXcgSHlwZXJ0eS4NCiAgKiBAcGFyYW0gIHtTYW5kYm94fSAgICAgICAgICAgICBzYW5kYm94ICAgICAgICAgICAgICAgc2FuZGJveA0KICAqIEBwYXJhbSAge0h5cGVydHlDYXRhbG9ndWVVUkx9IEh5cGVydHlDYXRhbG9ndWVVUkwgICBkZXNjcmlwdG9yDQogICogQHJldHVybiB7SHlwZXJ0eVVSTH0gICAgICAgICAgSHlwZXJ0eVVSTA0KICAqL30se2tleToncmVnaXN0ZXJIeXBlcnR5Jyx2YWx1ZTpmdW5jdGlvbiByZWdpc3Rlckh5cGVydHkoc2FuZGJveCxkZXNjcmlwdG9yVVJMLGRlc2NyaXB0b3Ipe3ZhciBfdGhpcz10aGlzOyAvL2Fzc3VtaW5nIGRlc2NyaXB0b3IgY29tZSBpbiB0aGlzIGZvcm1hdCwgdGhlIHNlcnZpY2UtcHJvdmlkZXItZG9tYWluIHVybCBpcyByZXRyaWV2ZWQgYnkgYSBzcGxpdCBpbnN0cnVjdGlvbg0KLy9oeXBlcnR5LWNhdGFsb2d1ZTovLzxzZXJ2aWNlLXByb3ZpZGVyLWRvbWFpbj4vPGNhdGFsb2d1ZS1vYmplY3QtaWRlbnRpZmllcj4NCnZhciBkb21haW5Vcmw9KDAsX3V0aWxzLmRpdmlkZVVSTCkoZGVzY3JpcHRvclVSTCkuZG9tYWluO2lmKGRvbWFpblVybC5pbmNsdWRlcygnY2F0YWxvZ3VlJykpe2RvbWFpblVybD1kb21haW5VcmwucmVwbGFjZSgnY2F0YWxvZ3VlLicsJycpO31yZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXtfdGhpcy5pZE1vZHVsZS5nZXRJZGVudGl0eUFzc2VydGlvbigpLnRoZW4oZnVuY3Rpb24ocmVzdWx0KXt2YXIgdXNlclByb2ZpbGU9cmVzdWx0LnVzZXJQcm9maWxlO3ZhciBpZGVudGl0eVVSTD11c2VyUHJvZmlsZS51c2VyVVJMO2lmKF90aGlzLl9tZXNzYWdlQnVzPT09dW5kZWZpbmVkKXtyZWplY3QoJ01lc3NhZ2VCdXMgbm90IGZvdW5kIG9uIHJlZ2lzdGVyU3R1YicpO31lbHNlIHsgLy9jYWxsIGNoZWNrIGlmIHRoZSBwcm90b3N0dWIgZXhpc3QNCl90aGlzLnJlc29sdmUoJ2h5cGVydHktcnVudGltZTovLycrZG9tYWluVXJsKS50aGVuKGZ1bmN0aW9uKCl7X3RoaXMucmVnaXN0cnlEb21haW49ZG9tYWluVXJsOyAvLyBUT0RPOiBzaG91bGQgYmUgaW1wbGVtZW50ZWQgd2l0aCBhZGRyZXNzZXMgcG9sbA0KLy8gSW4gdGhpcyBjYXNlIHdlIHdpbGwgcmVxdWVzdCBhbmQgcmV0dXJuIG9ubHkgb25lDQovLyBhZGRyZXNzDQp2YXIgbnVtYmVyT2ZBZGRyZXNzZXM9MTtfdGhpcy5hZGRyZXNzQWxsb2NhdGlvbi5jcmVhdGUoZG9tYWluVXJsLG51bWJlck9mQWRkcmVzc2VzKS50aGVuKGZ1bmN0aW9uKGFkZGVyZXNzTGlzdCl7YWRkZXJlc3NMaXN0LmZvckVhY2goZnVuY3Rpb24oYWRkcmVzcyl7X3RoaXMuX21lc3NhZ2VCdXMuYWRkTGlzdGVuZXIoYWRkcmVzcysnL3N0YXR1cycsZnVuY3Rpb24obXNnKXtjb25zb2xlLmxvZygnTWVzc2FnZSBhZGRMaXN0ZW5lciBmb3IgOiAnLGFkZHJlc3MrJy9zdGF0dXMgLT4gJyttc2cpO30pO30pO3ZhciBoeXBlcnR5PW5ldyBfSHlwZXJ0eUluc3RhbmNlMi5kZWZhdWx0KF90aGlzLmlkZW50aWZpZXIsX3RoaXMucmVnaXN0cnlVUkwsZGVzY3JpcHRvclVSTCxkZXNjcmlwdG9yLGFkZGVyZXNzTGlzdFswXSx1c2VyUHJvZmlsZSk7X3RoaXMuaHlwZXJ0aWVzTGlzdC5wdXNoKGh5cGVydHkpOyAvL2NoZWNrIHdoZXRoZXIgdGhlIHJlY2VpdmVkIHNhbmJveCBlIEFwcGxpY2F0aW9uU2FuZGJveCBvciBhIG5vcm1hbCBzYW5kYm94DQppZihzYW5kYm94LnR5cGU9PT0nYXBwJyl7X3RoaXMuc2FuZGJveGVzTGlzdC5hcHBTYW5kYm94W2FkZGVyZXNzTGlzdFswXV09c2FuZGJveDt9ZWxzZSBpZihzYW5kYm94LnR5cGU9PT0nbm9ybWFsJyl7X3RoaXMuc2FuZGJveGVzTGlzdC5zYW5kYm94W2FkZGVyZXNzTGlzdFswXV09c2FuZGJveDt9ZWxzZSB7cmVqZWN0KCdXcm9uZyBTYW5kYm94VHlwZScpO312YXIgcmVzb3VyY2VzPXZvaWQgMDsgLy8gY2hlY2sgaWYgdGhlIGh5cGVydHkgcmVzb3VyY2VzIGlzIGEgdmVjdG9yIG9yIGEgc3RyaW5nDQovLyBUT0RPIGRlbGV0ZSBsYXRlciB3aGVuIGNhdGFsb2d1ZSBpcyBmaXhlZA0KaWYodHlwZW9mIGRlc2NyaXB0b3IuaHlwZXJ0eVR5cGU9PT0nc3RyaW5nJyl7cmVzb3VyY2VzPVtdO3Jlc291cmNlcy5wdXNoKGRlc2NyaXB0b3IuaHlwZXJ0eVR5cGUpO31lbHNlIHtyZXNvdXJjZXM9ZGVzY3JpcHRvci5oeXBlcnR5VHlwZTt9dmFyIGRlc2NyaXB0b3JEYXRhU2NoZW1hPWRlc2NyaXB0b3IuZGF0YU9iamVjdHM7dmFyIGRhdGFTY2hlbWFzQXJyYXk9W107IC8vdGhpcyB3aWxsIGNyZWF0ZSBhIGFycmF5IHdpdGggYSBQcm9taXNlIGluIGVhY2ggcG9zaXRpb24NCmZvcih2YXIgaW5kZXggaW4gZGVzY3JpcHRvckRhdGFTY2hlbWEpe2RhdGFTY2hlbWFzQXJyYXkucHVzaChfdGhpcy5ydW50aW1lQ2F0YWxvZ3VlLmdldERhdGFTY2hlbWFEZXNjcmlwdG9yKGRlc2NyaXB0b3JEYXRhU2NoZW1hW2luZGV4XSkpO30gLy8gYXMgc29vbiBhcyB0aGUgcHJldmlvdXMgYXJyYXkgaXMgY29tcGxldGVkLCB0aGlzIHdpbGwgd2FpdCBmb3IgdGhlIHJlc29sdmUgb2YgYWxsIHByb21pc2VzIGluIHRoZSBhcnJheQ0KX3Byb21pc2UyLmRlZmF1bHQuYWxsKGRhdGFTY2hlbWFzQXJyYXkpLnRoZW4oZnVuY3Rpb24oZGF0YVNjaGVtYXMpe3ZhciBmaWx0ZXJlZERhdGFTY2hlbWFzPVtdO2Zvcih2YXIgX2luZGV4IGluIGRhdGFTY2hlbWFzKXt2YXIgZGF0YVNjaGVtYT1kYXRhU2NoZW1hc1tfaW5kZXhdO2ZpbHRlcmVkRGF0YVNjaGVtYXMucHVzaChkYXRhU2NoZW1hLnNvdXJjZVBhY2thZ2Uuc291cmNlQ29kZS5wcm9wZXJ0aWVzLnNjaGVtZS5jb25zdGFudCk7fSAvL21lc3NhZ2UgdG8gcmVnaXN0ZXIgdGhlIG5ldyBoeXBlcnR5LCB3aXRoaW4gdGhlIGRvbWFpbiByZWdpc3RyeQ0KdmFyIG1lc3NhZ2VWYWx1ZT17dXNlcjppZGVudGl0eVVSTCxoeXBlcnR5RGVzY3JpcHRvclVSTDpkZXNjcmlwdG9yVVJMLGh5cGVydHlVUkw6YWRkZXJlc3NMaXN0WzBdLGV4cGlyZXM6X3RoaXMuZXhwaXJlc1RpbWUscmVzb3VyY2VzOnJlc291cmNlcyxkYXRhU2NoZW1lczpmaWx0ZXJlZERhdGFTY2hlbWFzfTt2YXIgbWVzc2FnZT1fdGhpcy5tZXNzYWdlRmFjdG9yeS5jcmVhdGVDcmVhdGVNZXNzYWdlUmVxdWVzdChfdGhpcy5yZWdpc3RyeVVSTCwnZG9tYWluOi8vcmVnaXN0cnkuJytfdGhpcy5yZWdpc3RyeURvbWFpbisnLycsbWVzc2FnZVZhbHVlLCdwb2xpY3knKTtfdGhpcy5fbWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShtZXNzYWdlLGZ1bmN0aW9uKHJlcGx5KXtjb25zb2xlLmxvZygnPT09PiBSZWdpc3Rlckh5cGVydHkgUmVwbHk6ICcscmVwbHkpO30pOyAvL3RpbWVyIHRvIGtlZXAgdGhlIHJlZ2lzdHJhdGlvbiBhbGl2ZQ0KLy8gdGhlIHRpbWUgaXMgZGVmaW5lZCBieSBhIGxpdHRsZSBsZXNzIHRoYW4gaGFsZiBvZiB0aGUgZXhwaXJlcyB0aW1lIGRlZmluZWQNCnZhciBrZWVwQWxpdmVUaW1lcj1zZXRJbnRlcnZhbChmdW5jdGlvbigpe3ZhciBtZXNzYWdlPV90aGlzLm1lc3NhZ2VGYWN0b3J5LmNyZWF0ZUNyZWF0ZU1lc3NhZ2VSZXF1ZXN0KF90aGlzLnJlZ2lzdHJ5VVJMLCdkb21haW46Ly9yZWdpc3RyeS4nK190aGlzLnJlZ2lzdHJ5RG9tYWluKycvJyxtZXNzYWdlVmFsdWUsJ3BvbGljeScpO190aGlzLl9tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG1lc3NhZ2UsZnVuY3Rpb24ocmVwbHkpe2NvbnNvbGUubG9nKCc9PT0+IEtlZXBBbGl2ZSBSZXBseTogJyxyZXBseSk7fSk7fSxfdGhpcy5leHBpcmVzVGltZS8xLjEvMioxMDAwKTtjb25zb2xlLmxvZygnSHlwZXJ0eSBTY2hlbWFzJyxmaWx0ZXJlZERhdGFTY2hlbWFzKTtjb25zb2xlLmxvZygnSHlwZXJ0eSByZXNvdXJjZXMnLHJlc291cmNlcyk7cmVzb2x2ZShhZGRlcmVzc0xpc3RbMF0pO30pO30pLmNhdGNoKGZ1bmN0aW9uKHJlYXNvbil7Y29uc29sZS5sb2coJ0FkZHJlc3MgUmVhc29uOiAnLHJlYXNvbik7cmVqZWN0KHJlYXNvbik7fSk7fSk7fX0sZnVuY3Rpb24oZXJyKXtyZWplY3QoJ0ZhaWxlZCB0byBvYnRhaW4gYW4gaWRlbnRpdHknKTt9KTt9KTt9IC8qKg0KICAqIFRvIHVucmVnaXN0ZXIgYSBwcmV2aW91c2x5IHJlZ2lzdGVyZWQgSHlwZXJ0eQ0KICAqIEBwYXJhbSAge0h5cGVydHlVUkx9ICAgICAgICAgIEh5cGVydHlVUkwgdXJsICAgICAgICB1cmwNCiAgKi99LHtrZXk6J3VucmVnaXN0ZXJIeXBlcnR5Jyx2YWx1ZTpmdW5jdGlvbiB1bnJlZ2lzdGVySHlwZXJ0eSh1cmwpe3ZhciBfdGhpcz10aGlzO3JldHVybiBuZXcgX3Byb21pc2UyLmRlZmF1bHQoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe3ZhciBmb3VuZD1mYWxzZTt2YXIgaW5kZXg9MDtmb3IoaW5kZXg9MDtpbmRleDxfdGhpcy5oeXBlcnRpZXNMaXN0Lmxlbmd0aDtpbmRleCsrKXt2YXIgaHlwZXJ0eT1fdGhpcy5oeXBlcnRpZXNMaXN0W2luZGV4XTtpZihoeXBlcnR5IT09dW5kZWZpbmVkKXtpZihoeXBlcnR5Lmh5cGVydHlVUkw9PT11cmwpe2ZvdW5kPXRydWU7YnJlYWs7fX19aWYoZm91bmQ9PT1mYWxzZSl7cmVqZWN0KCdIeXBlcnR5IG5vdCBmb3VuZCcpO31lbHNlIHtkZWxldGUgX3RoaXMuaHlwZXJ0aWVzTGlzdFtpbmRleF07cmVzb2x2ZSgnSHlwZXJ0eSBzdWNjZXNzZnVsbHkgZGVsZXRlZCcpO319KTt9IC8qKg0KICAqIFRvIGRpc2NvdmVyIHByb3RvY29sIHN0dWJzIGF2YWlsYWJsZSBpbiB0aGUgcnVudGltZSBmb3IgYSBjZXJ0YWluIGRvbWFpbi4gSWYgYXZhaWxhYmxlLCBpdCByZXR1cm5zIHRoZSBydW50aW1lIHVybCBmb3IgdGhlIHByb3RvY29sIHN0dWIgdGhhdCBjb25uZWN0cyB0byB0aGUgcmVxdWVzdGVkIGRvbWFpbi4gUmVxdWlyZWQgYnkgdGhlIHJ1bnRpbWUgQlVTIHRvIHJvdXRlIG1lc3NhZ2VzIHRvIHJlbW90ZSBzZXJ2ZXJzIG9yIHBlZXJzIChkbyB3ZSBuZWVkIHNvbWV0aGluZyBzaW1pbGFyIGZvciBIeXBlcnRpZXM/KS4NCiAgKiBAcGFyYW0gIHtEb21haW5VUkx9ICAgICAgICAgICBEb21haW5VUkwgICAgICAgICAgICB1cmwNCiAgKiBAcmV0dXJuIHtSdW50aW1lVVJMfSAgICAgICAgICAgUnVudGltZVVSTA0KICAqL30se2tleTonZGlzY292ZXJQcm90b3N0dWInLHZhbHVlOmZ1bmN0aW9uIGRpc2NvdmVyUHJvdG9zdHViKHVybCl7aWYoIXVybCl0aHJvdyBuZXcgRXJyb3IoJ1BhcmFtZXRlciB1cmwgbmVlZGVkJyk7dmFyIF90aGlzPXRoaXM7cmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7dmFyIHJlcXVlc3Q9X3RoaXMucHJvdG9zdHVic0xpc3RbdXJsXTtpZihyZXF1ZXN0PT09dW5kZWZpbmVkKXtyZWplY3QoJ3JlcXVlc3RVcGRhdGUgY291bGRuXCd0IGdldCB0aGUgUHJvdG9zdHViVVJMJyk7fWVsc2Uge3Jlc29sdmUocmVxdWVzdCk7fX0pO30gLyoqDQogICAqIFRvIHJlZ2lzdGVyIGEgbmV3IFByb3RvY29sIFN0dWIgaW4gdGhlIHJ1bnRpbWUgaW5jbHVkaW5nIGFzIGlucHV0IHBhcmFtZXRlcnMgdGhlIGZ1bmN0aW9uIHRvIHBvc3RNZXNzYWdlLCB0aGUgRG9tYWluVVJMIHRoYXQgaXMgY29ubmVjdGVkIHdpdGggdGhlIHN0dWIsIHdoaWNoIHJldHVybnMgdGhlIFJ1bnRpbWVVUkwgYWxsb2NhdGVkIHRvIHRoZSBuZXcgUHJvdG9jb2xTdHViLg0KICAgKiBAcGFyYW0ge1NhbmRib3h9ICAgICAgICBTYW5kYm94DQogICAqIEBwYXJhbSAge0RvbWFpblVSTH0gICAgIERvbWFpblVSTCBzZXJ2aWNlIHByb3ZpZGVyIGRvbWFpbg0KICAgKiBAcmV0dXJuIHtSdW50aW1lUHJvdG9TdHViVVJMfQ0KICAgKi99LHtrZXk6J3JlZ2lzdGVyU3R1YicsdmFsdWU6ZnVuY3Rpb24gcmVnaXN0ZXJTdHViKHNhbmRib3gsZG9tYWluVVJMKXt2YXIgX3RoaXM9dGhpczt2YXIgcnVudGltZVByb3RvU3R1YlVSTD12b2lkIDA7cmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7IC8vY2hlY2sgaWYgbWVzc2FnZUJ1cyBpcyByZWdpc3RlcmVkIGluIHJlZ2lzdHJ5IG9yIG5vdA0KaWYoX3RoaXMuX21lc3NhZ2VCdXM9PT11bmRlZmluZWQpe3JlamVjdCgnTWVzc2FnZUJ1cyBub3QgZm91bmQgb24gcmVnaXN0ZXJTdHViJyk7fSAvL1RPRE8gaW1wbGVtZW50IGEgdW5pcXVlIG51bWJlciBmb3IgdGhlIHByb3Rvc3R1YlVSTA0KaWYoIWRvbWFpblVSTC5pbmRleE9mKCdtc2ctbm9kZS4nKSl7ZG9tYWluVVJMPWRvbWFpblVSTC5zdWJzdHJpbmcoZG9tYWluVVJMLmluZGV4T2YoJy4nKSsxKTt9cnVudGltZVByb3RvU3R1YlVSTD0nbXNnLW5vZGUuJytkb21haW5VUkwrJy9wcm90b3N0dWIvJytNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMTAwMDArMSk7IC8vIFRPRE86IE9wdGltaXplIHRoaXMNCl90aGlzLnByb3Rvc3R1YnNMaXN0W2RvbWFpblVSTF09cnVudGltZVByb3RvU3R1YlVSTDtfdGhpcy5zYW5kYm94ZXNMaXN0LnNhbmRib3hbcnVudGltZVByb3RvU3R1YlVSTF09c2FuZGJveDsgLy8gc2FuZGJveC5hZGRMaXN0ZW5lcignKicsIGZ1bmN0aW9uKG1zZykgew0KLy8gICBfdGhpcy5fbWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShtc2cpOw0KLy8gfSk7DQpyZXNvbHZlKHJ1bnRpbWVQcm90b1N0dWJVUkwpO190aGlzLl9tZXNzYWdlQnVzLmFkZExpc3RlbmVyKHJ1bnRpbWVQcm90b1N0dWJVUkwrJy9zdGF0dXMnLGZ1bmN0aW9uKG1zZyl7aWYobXNnLnJlc291cmNlPT09bXNnLnRvKycvc3RhdHVzJyl7Y29uc29sZS5sb2coJ1J1bnRpbWVQcm90b3N0dWJVUkwvc3RhdHVzIG1lc3NhZ2U6ICcsbXNnLmJvZHkudmFsdWUpO319KTt9KTt9IC8qKg0KICAqIFRvIHVucmVnaXN0ZXIgYSBwcmV2aW91c2x5IHJlZ2lzdGVyZWQgcHJvdG9jb2wgc3R1Yg0KICAqIEBwYXJhbSAge0h5cGVydHlSdW50aW1lVVJMfSAgIEh5cGVydHlSdW50aW1lVVJMICAgICBoeXBlcnR5UnVudGltZVVSTA0KICAqL30se2tleTondW5yZWdpc3RlclN0dWInLHZhbHVlOmZ1bmN0aW9uIHVucmVnaXN0ZXJTdHViKGh5cGVydHlSdW50aW1lVVJMKXt2YXIgX3RoaXM9dGhpczt2YXIgcnVudGltZVByb3RvU3R1YlVSTD12b2lkIDA7cmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7dmFyIGRhdGE9X3RoaXMucHJvdG9zdHVic0xpc3RbaHlwZXJ0eVJ1bnRpbWVVUkxdO2lmKGRhdGE9PT11bmRlZmluZWQpe3JlamVjdCgnRXJyb3Igb24gdW5yZWdpc3RlclN0dWI6IEh5cGVydHkgbm90IGZvdW5kJyk7fWVsc2Uge2RlbGV0ZSBfdGhpcy5wcm90b3N0dWJzTGlzdFtoeXBlcnR5UnVudGltZVVSTF07cmVzb2x2ZSgnUHJvdG9zdHViVVJMIHJlbW92ZWQnKTt9fSk7fSAvKioNCiAgICogVG8gcmVnaXN0ZXIgYSBuZXcgSWRlbnRpdHkgUHJvdmlkZXIgcHJveHkgaW4gdGhlIHJ1bnRpbWUgaW5jbHVkaW5nIGFzIGlucHV0IHBhcmFtZXRlcnMgdGhlIGZ1bmN0aW9uIHRvIHBvc3RNZXNzYWdlLCB0aGUgRG9tYWluVVJMIHRoYXQgaXMgY29ubmVjdGVkIHdpdGggdGhlIHN0dWIsIHdoaWNoIHJldHVybnMgdGhlIFJ1bnRpbWVVUkwgYWxsb2NhdGVkIHRvIHRoZSBuZXcgUHJvdG9jb2xTdHViLg0KICAgKiBAcGFyYW0ge1NhbmRib3h9ICAgICAgICBTYW5kYm94DQogICAqIEBwYXJhbSAge0RvbWFpblVSTH0gICAgIERvbWFpblVSTCBzZXJ2aWNlIHByb3ZpZGVyIGRvbWFpbg0KICAgKiBAcmV0dXJuIHtSdW50aW1lSWRwUHJveHlVUkx9DQogICAqL30se2tleToncmVnaXN0ZXJJZHBQcm94eScsdmFsdWU6ZnVuY3Rpb24gcmVnaXN0ZXJJZHBQcm94eShzYW5kYm94LGRvbWFpblVSTCl7dmFyIF90aGlzPXRoaXM7dmFyIGlkcFByb3h5U3R1YlVSTD12b2lkIDA7cmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7IC8vY2hlY2sgaWYgbWVzc2FnZUJ1cyBpcyByZWdpc3RlcmVkIGluIHJlZ2lzdHJ5IG9yIG5vdA0KaWYoX3RoaXMuX21lc3NhZ2VCdXM9PT11bmRlZmluZWQpe3JlamVjdCgnTWVzc2FnZUJ1cyBub3QgZm91bmQgb24gcmVnaXN0ZXJTdHViJyk7fWlkcFByb3h5U3R1YlVSTD0nZG9tYWluLWlkcDovLycrZG9tYWluVVJMKycvc3R1Yi8nK01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoxMDAwMCsxKTsgLy8gVE9ETzogT3B0aW1pemUgdGhpcw0KX3RoaXMuaWRwUHJveHlMaXN0W2RvbWFpblVSTF09aWRwUHJveHlTdHViVVJMO190aGlzLnNhbmRib3hlc0xpc3Quc2FuZGJveFtpZHBQcm94eVN0dWJVUkxdPXNhbmRib3g7IC8vIHNhbmRib3guYWRkTGlzdGVuZXIoJyonLCBmdW5jdGlvbihtc2cpIHsNCi8vICAgX3RoaXMuX21lc3NhZ2VCdXMucG9zdE1lc3NhZ2UobXNnKTsNCi8vIH0pOw0KcmVzb2x2ZShpZHBQcm94eVN0dWJVUkwpO190aGlzLl9tZXNzYWdlQnVzLmFkZExpc3RlbmVyKGlkcFByb3h5U3R1YlVSTCsnL3N0YXR1cycsZnVuY3Rpb24obXNnKXtpZihtc2cucmVzb3VyY2U9PT1tc2cudG8rJy9zdGF0dXMnKXtjb25zb2xlLmxvZygnaWRwUHJveHlTdHViVVJML3N0YXR1cyBtZXNzYWdlOiAnLG1zZy5ib2R5LnZhbHVlKTt9fSk7fSk7fSAvKioNCiAgKiBUbyBkaXNjb3ZlciBpZHBQcm94eSBzdHVicyBhdmFpbGFibGUgaW4gdGhlIHJ1bnRpbWUgZm9yIGEgY2VydGFpbiBkb21haW4uIElmIGF2YWlsYWJsZSwgaXQgcmV0dXJucyB0aGUgcnVudGltZSB1cmwgZm9yIHRoZSBpZHBQcm94eSBzdHViIHRoYXQgY29ubmVjdHMgdG8gdGhlIHJlcXVlc3RlZCBkb21haW4uIFJlcXVpcmVkIGJ5IHRoZSBydW50aW1lIEJVUyB0byByb3V0ZSBtZXNzYWdlcyB0byByZW1vdGUgc2VydmVycyBvciBwZWVycw0KICAqIEBwYXJhbSAge0RvbWFpblVSTH0gICAgICAgICAgIERvbWFpblVSTCAgICAgICAgICAgIHVybA0KICAqIEByZXR1cm4ge1J1bnRpbWVVUkx9ICAgICAgICAgICBSdW50aW1lVVJMICAgICAgICAgaWRwUHJveHlVcmwNCiAgKi99LHtrZXk6J2Rpc2NvdmVySWRwUHJveHknLHZhbHVlOmZ1bmN0aW9uIGRpc2NvdmVySWRwUHJveHkodXJsKXtpZighdXJsKXRocm93IG5ldyBFcnJvcignUGFyYW1ldGVyIHVybCBuZWVkZWQnKTt2YXIgX3RoaXM9dGhpcztyZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXt2YXIgcmVxdWVzdD1fdGhpcy5pZHBQcm94eUxpc3RbdXJsXTtpZihyZXF1ZXN0PT09dW5kZWZpbmVkKXtyZWplY3QoJ3JlcXVlc3RVcGRhdGUgY291bGRuXCd0IGdldCB0aGUgaWRwUHJveHlVUkwnKTt9ZWxzZSB7cmVzb2x2ZShyZXF1ZXN0KTt9fSk7fSAvKioNCiAgKiBUbyByZWdpc3RlciBhIG5ldyBQb2xpY3kgRW5mb3JjZXIgaW4gdGhlIHJ1bnRpbWUgaW5jbHVkaW5nIGFzIGlucHV0IHBhcmFtZXRlcnMgdGhlIGZ1bmN0aW9uIHRvIHBvc3RNZXNzYWdlLCB0aGUgSHlwZXJ0eVVSTCBhc3NvY2lhdGVkIHdpdGggdGhlIFBFUCwgd2hpY2ggcmV0dXJucyB0aGUgUnVudGltZVVSTCBhbGxvY2F0ZWQgdG8gdGhlIG5ldyBQb2xpY3kgRW5mb3JjZXIgY29tcG9uZW50Lg0KICAqIEBwYXJhbSAge01lc3NhZ2UuTWVzc2FnZX0gcG9zdE1lc3NhZ2UgcG9zdE1lc3NhZ2UNCiAgKiBAcGFyYW0gIHtIeXBlcnR5VVJMfSAgICAgICAgICBIeXBlcnR5VVJMICAgICAgICAgICAgaHlwZXJ0eQ0KICAqIEByZXR1cm4ge0h5cGVydHlSdW50aW1lVVJMfSAgIEh5cGVydHlSdW50aW1lVVJMDQogICovfSx7a2V5OidyZWdpc3RlclBFUCcsdmFsdWU6ZnVuY3Rpb24gcmVnaXN0ZXJQRVAocG9zdE1lc3NhZ2UsaHlwZXJ0eSl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7IC8vVE9ETyBjaGVjayB3aGF0IHBhcmFtZXRlciBpbiB0aGUgcG9zdE1lc3NhZ2UgdGhlIHBlcCBpcy4NCl90aGlzLnBlcExpc3RbaHlwZXJ0eV09cG9zdE1lc3NhZ2U7cmVzb2x2ZSgnUEVQIHJlZ2lzdGVyZWQgd2l0aCBzdWNjZXNzJyk7fSk7fSAvKioNCiAgKiBUbyB1bnJlZ2lzdGVyIGEgcHJldmlvdXNseSByZWdpc3RlcmVkIHByb3RvY29sIHN0dWINCiAgKiBAcGFyYW0gIHtIeXBlcnR5UnVudGltZVVSTH0gICBIeXBlcnR5UnVudGltZVVSTCAgICAgSHlwZXJ0eVJ1bnRpbWVVUkwNCiAgKi99LHtrZXk6J3VucmVnaXN0ZXJQRVAnLHZhbHVlOmZ1bmN0aW9uIHVucmVnaXN0ZXJQRVAoSHlwZXJ0eVJ1bnRpbWVVUkwpe3ZhciBfdGhpcz10aGlzO3JldHVybiBuZXcgX3Byb21pc2UyLmRlZmF1bHQoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe3ZhciByZXN1bHQ9X3RoaXMucGVwTGlzdFtIeXBlcnR5UnVudGltZVVSTF07aWYocmVzdWx0PT09dW5kZWZpbmVkKXtyZWplY3QoJ1BlcCBOb3QgZm91bmQuJyk7fWVsc2Uge3Jlc29sdmUoJ1BFUCBzdWNjZXNzZnVsbHkgcmVtb3ZlZC4nKTt9fSk7fSAvKioNCiAgKiBUbyByZWNlaXZlIHN0YXR1cyBldmVudHMgZnJvbSBjb21wb25lbnRzIHJlZ2lzdGVyZWQgaW4gdGhlIFJlZ2lzdHJ5Lg0KICAqIEBwYXJhbSAge01lc3NhZ2UuTWVzc2FnZX0gICAgIE1lc3NhZ2UuTWVzc2FnZSAgICAgICBldmVudA0KICAqL30se2tleTonb25FdmVudCcsdmFsdWU6ZnVuY3Rpb24gb25FdmVudChldmVudCl7fSAvLyBUT0RPIGJvZHkuLi4NCi8qKg0KICAqIFRvIGRpc2NvdmVyIHNhbmRib3hlcyBhdmFpbGFibGUgaW4gdGhlIHJ1bnRpbWUgZm9yIGEgY2VydGFpbiBkb21haW4uIFJlcXVpcmVkIGJ5IHRoZSBydW50aW1lIFVBIHRvIGF2b2lkIG1vcmUgdGhhbiBvbmUgc2FuZGJveCBmb3IgdGhlIHNhbWUgZG9tYWluLg0KICAqIEBwYXJhbSAge0RvbWFpblVSTH0gRG9tYWluVVJMIHVybA0KICAqIEByZXR1cm4ge1J1bnRpbWVTYW5kYm94fSAgICAgICAgICAgUnVudGltZVNhbmRib3gNCiAgKi99LHtrZXk6J2dldFNhbmRib3gnLHZhbHVlOmZ1bmN0aW9uIGdldFNhbmRib3godXJsKXtpZighdXJsKXRocm93IG5ldyBFcnJvcignUGFyYW1ldGVyIHVybCBuZWVkZWQnKTtjb25zb2xlLmxvZygnZ2V0U2FuZGJveDogJyx1cmwpO3ZhciBfdGhpcz10aGlzO3JldHVybiBuZXcgX3Byb21pc2UyLmRlZmF1bHQoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe3ZhciByZXF1ZXN0PXZvaWQgMDsgLy9maXJzdCB0cnkgdG8gZmluZCB0aGUgdXJsIGluIHRoZSBhcHBTYW5kYm94IGxpc3QNCnJlcXVlc3Q9X3RoaXMuc2FuZGJveGVzTGlzdC5hcHBTYW5kYm94W3VybF07IC8vaWYgbm8gYXBwU2FuZGJveCB3YXMgZm91bmQsIHRyeSB0byBzZWFyY2ggaW4gdGhlIG5vcm1hbCBzYW5kYm94ZXMgbGlzdA0KaWYoIXJlcXVlc3Qpe3JlcXVlc3Q9X3RoaXMuc2FuZGJveGVzTGlzdC5zYW5kYm94W3VybF07aWYoIXJlcXVlc3Qpe3ZhciBkb21haW49KDAsX3V0aWxzLmRpdmlkZVVSTCkodXJsKS5kb21haW47IC8vIHNlYXJjaCBpbiB0aGUgc2FuZGJveGVzIGxpc3QgZm9yIGEgZW50cnkgY29udGFpbmluZyB0aGUgZG9tYWluIGdpdmVuDQpmb3IodmFyIHNhbmRib3ggaW4gX3RoaXMuc2FuZGJveGVzTGlzdC5zYW5kYm94KXtpZihzYW5kYm94LmluY2x1ZGVzKGRvbWFpbikpe3JlcXVlc3Q9X3RoaXMuc2FuZGJveGVzTGlzdC5zYW5kYm94W3NhbmRib3hdO2JyZWFrO319fX1pZighcmVxdWVzdCl7cmVqZWN0KCdubyBzYW5kYm94IGZvdW5kIGZvcjogJyt1cmwpO31lbHNlIHtyZXNvbHZlKHJlcXVlc3QpO319KTt9IC8qKg0KICAqIFRvIHZlcmlmeSBpZiBzb3VyY2UgaXMgdmFsaWQgYW5kIHRvIHJlc29sdmUgdGFyZ2V0IHJ1bnRpbWUgdXJsIGFkZHJlc3MgaWYgbmVlZGVkIChlZyBwcm90b3N0dWIgcnVudGltZSB1cmwgaW4gY2FzZSB0aGUgbWVzc2FnZSBpcyB0byBiZSBkaXNwYXRjaGVkIHRvIGEgcmVtb3RlIGVuZHBvaW50KS4NCiAgKiBAcGFyYW0gIHtVUkwuVVJMfSAgdXJsICAgICAgIHVybA0KICAqIEByZXR1cm4ge1Byb21pc2U8VVJMLlVSTD59ICAgICAgICAgICAgICAgICBQcm9taXNlIDxVUkwuVVJMPg0KICAqL30se2tleToncmVzb2x2ZScsdmFsdWU6ZnVuY3Rpb24gcmVzb2x2ZSh1cmwpe2NvbnNvbGUubG9nKCdyZXNvbHZlICcrdXJsKTt2YXIgX3RoaXM9dGhpczsgLy9zcGxpdCB0aGUgdXJsIHRvIGZpbmQgdGhlIGRvbWFpblVSTC4gZGVhbHMgd2l0aCB0aGUgdXJsIGZvciBleGFtcGxlIGFzOg0KLy8iaHlwZXJ0eS1ydW50aW1lOi8vc3AxL3Byb3Rvc3R1Yi8xMjMiLA0KdmFyIGRpdmlkZWRVUkw9KDAsX3V0aWxzLmRpdmlkZVVSTCkodXJsKTt2YXIgZG9tYWluVXJsPWRpdmlkZWRVUkwuZG9tYWluO3ZhciB0eXBlPWRpdmlkZWRVUkwudHlwZTsgLy8gcmVzb2x2ZSB0aGUgZG9tYWluIHByb3Rvc3R1YiBpbiBjYXNlIG9mIGEgbWVzc2FnZSB0byBnbG9iYWwgcmVnaXN0cnkNCmlmKHVybC5pbmNsdWRlcygnZ2xvYmFsOi8vcmVnaXN0cnknKSl7ZG9tYWluVXJsPV90aGlzLl9kb21haW47fXJldHVybiBuZXcgX3Byb21pc2UyLmRlZmF1bHQoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe2lmKCFkb21haW5VcmwuaW5kZXhPZignbXNnLW5vZGUuJyl8fCFkb21haW5VcmwuaW5kZXhPZigncmVnaXN0cnkuJykpe2RvbWFpblVybD1kb21haW5Vcmwuc3Vic3RyaW5nKGRvbWFpblVybC5pbmRleE9mKCcuJykrMSk7fXZhciByZXF1ZXN0PXZvaWQgMDtpZih0eXBlPT09J2RvbWFpbi1pZHAnKXtyZXF1ZXN0PV90aGlzLmlkcFByb3h5TGlzdFtkb21haW5VcmxdO31lbHNlIHtyZXF1ZXN0PV90aGlzLnByb3Rvc3R1YnNMaXN0W2RvbWFpblVybF07fV90aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ3J1bnRpbWU6c3R1YkxvYWRlZCcsZnVuY3Rpb24oZG9tYWluVXJsKXtyZXF1ZXN0PV90aGlzLnByb3Rvc3R1YnNMaXN0W2RvbWFpblVybF07Y29uc29sZS5pbmZvKCdSZXNvbHZlZCBQcm90b3N0dWI6ICcscmVxdWVzdCk7cmVzb2x2ZShyZXF1ZXN0KTt9KTtfdGhpcy5hZGRFdmVudExpc3RlbmVyKCdydW50aW1lOmlkcFByb3h5TG9hZGVkJyxmdW5jdGlvbihkb21haW5Vcmwpe3JlcXVlc3Q9X3RoaXMuaWRwUHJveHlMaXN0W2RvbWFpblVybF07Y29uc29sZS5pbmZvKCdSZXNvbHZlZCBJRFBQcm94eTogJyxyZXF1ZXN0KTtyZXNvbHZlKHJlcXVlc3QpO30pO2lmKHJlcXVlc3QhPT11bmRlZmluZWQpe2NvbnNvbGUuaW5mbygnUmVzb2x2ZWQ6ICcscmVxdWVzdCk7cmVzb2x2ZShyZXF1ZXN0KTt9ZWxzZSB7aWYodHlwZT09PSdkb21haW4taWRwJyl7X3RoaXMudHJpZ2dlcigncnVudGltZTpsb2FkSWRwUHJveHknLGRvbWFpblVybCk7fWVsc2Uge190aGlzLnRyaWdnZXIoJ3J1bnRpbWU6bG9hZFN0dWInLGRvbWFpblVybCk7fX19KTt9fSx7a2V5OidtZXNzYWdlQnVzJyxnZXQ6ZnVuY3Rpb24gZ2V0KCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIF90aGlzLl9tZXNzYWdlQnVzO30gLyoqDQogICogU2V0IHRoZSBtZXNzYWdlQnVzIGluIHRoaXMgUmVnaXN0cnkNCiAgKiBAcGFyYW0ge01lc3NhZ2VCdXN9ICAgICAgICAgICBtZXNzYWdlQnVzDQogICovLHNldDpmdW5jdGlvbiBzZXQobWVzc2FnZUJ1cyl7dmFyIF90aGlzPXRoaXM7X3RoaXMuX21lc3NhZ2VCdXM9bWVzc2FnZUJ1cztfdGhpcy5fbWVzc2FnZUJ1cy5hZGRMaXN0ZW5lcihfdGhpcy5yZWdpc3RyeVVSTCxmdW5jdGlvbihtc2cpe3ZhciB1c2VyVXJsPV90aGlzLl9nZXRJZGVudGl0eUFzc29jaWF0ZWQobXNnLmJvZHkucmVzb3VyY2UsbXNnLmZyb20pO3ZhciByZXBseT17aWQ6bXNnLmlkLHR5cGU6J3Jlc3BvbnNlJyx0bzptc2cuZnJvbSxmcm9tOm1zZy50byxib2R5OntyZXNvdXJjZTp1c2VyVXJsfX07X3RoaXMuX21lc3NhZ2VCdXMucG9zdE1lc3NhZ2UocmVwbHkpO30pOyAvLyBhbHNvIHNldCB1cCBtZXNzYWdlQnVzIGluIHRoZSBJZGVudGl0eU1vZHVsZSBjb21wb25lbnQNCi8vIFRPRE8gcmVkZWZpbmUgYSBiZXR0ZXIgd2F5IHRvIGFkZCB0aGUgbWVzc2FnZUJ1cyBpbiB0aGUgSWRNb2R1bGUNCl90aGlzLmlkTW9kdWxlLm1lc3NhZ2VCdXM9bWVzc2FnZUJ1czsgLy8gSW5zdGFsbCBBZGRyZXNzQWxsb2NhdGlvbg0KdmFyIGFkZHJlc3NBbGxvY2F0aW9uPW5ldyBfQWRkcmVzc0FsbG9jYXRpb24yLmRlZmF1bHQoX3RoaXMucmVnaXN0cnlVUkwsbWVzc2FnZUJ1cyk7X3RoaXMuYWRkcmVzc0FsbG9jYXRpb249YWRkcmVzc0FsbG9jYXRpb247IC8vSW5zdGFsbCBPYmplY3RBbGxvY2F0aW9uDQp2YXIgb2JqZWN0QWxsb2NhdGlvbj1uZXcgX09iamVjdEFsbG9jYXRpb24yLmRlZmF1bHQoX3RoaXMucmVnaXN0cnlVUkwrJy9vYmplY3QtYWxsb2NhdGlvbicsbWVzc2FnZUJ1cyk7X3RoaXMub2JqZWN0QWxsb2NhdGlvbj1vYmplY3RBbGxvY2F0aW9uO319XSk7cmV0dXJuIFJlZ2lzdHJ5O30oX0V2ZW50RW1pdHRlcjMuZGVmYXVsdCk7ZXhwb3J0cy5kZWZhdWx0PVJlZ2lzdHJ5O21vZHVsZS5leHBvcnRzPWV4cG9ydHNbJ2RlZmF1bHQnXTsNCg0KfSx7Ii4uL3N5bmNoZXIvT2JqZWN0QWxsb2NhdGlvbiI6NjA5LCIuLi91dGlscy9FdmVudEVtaXR0ZXIiOjYxNCwiLi4vdXRpbHMvdXRpbHMuanMiOjYxNSwiLi9BZGRyZXNzQWxsb2NhdGlvbiI6NjA0LCIuL0h5cGVydHlJbnN0YW5jZSI6NjA1LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiOjIyLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSI6MjUsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MjgsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MjksImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cyI6MzAsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjozMSwic2VydmljZS1mcmFtZXdvcmsvZGlzdC9NZXNzYWdlRmFjdG9yeSI6NTcwfV0sNjA3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCiJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KTt2YXIgX2NsYXNzQ2FsbENoZWNrMj1yZXF1aXJlKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKTt2YXIgX2NsYXNzQ2FsbENoZWNrMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO3ZhciBfY3JlYXRlQ2xhc3MyPXJlcXVpcmUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpO3ZhciBfY3JlYXRlQ2xhc3MzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUNsYXNzMik7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9O30gLyoqDQoqIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRA0KKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0wNCiogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlYNCiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBDQoqIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUcNCiogQ29weXJpZ2h0IDIwMTYgQXBpemVlDQoqIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElODQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKiovIC8qKg0KKiAgIEBhdXRob3I6IEdpbCBEaWFzIChnaWwuZGlhc0B0ZWNuaWNvLnVsaXNib2EucHQpDQoqICAgUmVnaXN0cnkgRGF0YSBNb2RlbCBpbmNsdWRlcyBhbGwgT2JqZWN0cyB0byBiZSBoYW5kbGVkIGJ5IHRoZSBSZWdpc3RyeSBmdW5jdGlvbmFsaXR5IGluY2x1ZGluZw0KKi92YXIgUmVnaXN0cnlEYXRhTW9kZWw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBSZWdpc3RyeURhdGFNb2RlbChpZCx1cmwsZGVzY3JpcHRvclVSTCxzdGFydGluZ1RpbWUsbGFzdE1vZGlmaWVkLHN0YXR1cyxzdHVicyxzdHVic0NvbmZpZ3VyYXRpb24peygwLF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcyxSZWdpc3RyeURhdGFNb2RlbCk7dmFyIF90aGlzPXRoaXM7X3RoaXMuX2lkPWlkO190aGlzLl91cmw9dXJsO190aGlzLl9kZXNjcmlwdG9yVVJMPWRlc2NyaXB0b3JVUkw7X3RoaXMuX3N0YXJ0aW5nVGltZT1zdGFydGluZ1RpbWU7X3RoaXMuX2xhc3RNb2RpZmllZD1sYXN0TW9kaWZpZWQ7X3RoaXMuX3N0YXR1cz1zdGF0dXM7X3RoaXMuX3N0dWJzPXN0dWJzO190aGlzLl9zdHVic0NvbmZpZ3VyYXRpb249c3R1YnNDb25maWd1cmF0aW9uO30oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKFJlZ2lzdHJ5RGF0YU1vZGVsLFt7a2V5OiJpZCIsZ2V0OmZ1bmN0aW9uIGdldCgpe3ZhciBfdGhpcz10aGlzO3JldHVybiBfdGhpcy5faWQ7fX0se2tleToidXJsIixnZXQ6ZnVuY3Rpb24gZ2V0KCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIF90aGlzLl91cmw7fX0se2tleToiZGVzY3JpcHRvciIsZ2V0OmZ1bmN0aW9uIGdldCgpe3ZhciBfdGhpcz10aGlzO3JldHVybiBfdGhpcy5fZGVzY3JpcHRvclVSTDt9fV0pO3JldHVybiBSZWdpc3RyeURhdGFNb2RlbDt9KCk7ZXhwb3J0cy5kZWZhdWx0PVJlZ2lzdHJ5RGF0YU1vZGVsO21vZHVsZS5leHBvcnRzPWV4cG9ydHNbJ2RlZmF1bHQnXTsNCg0KfSx7ImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MjgsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6Mjl9XSw2MDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pO3ZhciBfYXNzaWduPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvYXNzaWduJyk7dmFyIF9hc3NpZ24yPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2Fzc2lnbik7dmFyIF9wcm9taXNlPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlJyk7dmFyIF9wcm9taXNlMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9taXNlKTt2YXIgX2NsYXNzQ2FsbENoZWNrMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2snKTt2YXIgX2NsYXNzQ2FsbENoZWNrMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO3ZhciBfY3JlYXRlQ2xhc3MyPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcycpO3ZhciBfY3JlYXRlQ2xhc3MzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUNsYXNzMik7cmVxdWlyZSgnYmFiZWwtcG9seWZpbGwnKTt2YXIgX1JlZ2lzdHJ5PXJlcXVpcmUoJy4uL3JlZ2lzdHJ5L1JlZ2lzdHJ5Jyk7dmFyIF9SZWdpc3RyeTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfUmVnaXN0cnkpO3ZhciBfSWRlbnRpdHlNb2R1bGU9cmVxdWlyZSgnLi4vaWRlbnRpdHkvSWRlbnRpdHlNb2R1bGUnKTt2YXIgX0lkZW50aXR5TW9kdWxlMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9JZGVudGl0eU1vZHVsZSk7dmFyIF9Qb2xpY3lFbmdpbmU9cmVxdWlyZSgnLi4vcG9saWN5L1BvbGljeUVuZ2luZScpO3ZhciBfUG9saWN5RW5naW5lMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9Qb2xpY3lFbmdpbmUpO3ZhciBfTWVzc2FnZUJ1cz1yZXF1aXJlKCcuLi9idXMvTWVzc2FnZUJ1cycpO3ZhciBfTWVzc2FnZUJ1czI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfTWVzc2FnZUJ1cyk7dmFyIF9HcmFwaENvbm5lY3Rvcj1yZXF1aXJlKCcuLi9ncmFwaGNvbm5lY3Rvci9HcmFwaENvbm5lY3RvcicpO3ZhciBfR3JhcGhDb25uZWN0b3IyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dyYXBoQ29ubmVjdG9yKTt2YXIgX1N5bmNoZXJNYW5hZ2VyPXJlcXVpcmUoJy4uL3N5bmNoZXIvU3luY2hlck1hbmFnZXInKTt2YXIgX1N5bmNoZXJNYW5hZ2VyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9TeW5jaGVyTWFuYWdlcik7dmFyIF91dGlscz1yZXF1aXJlKCcuLi91dGlscy91dGlscycpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfTt9IC8qKg0KICogUnVudGltZSBVc2VyIEFnZW50IEludGVyZmFjZSB3aWxsIHByb2Nlc3MgYWxsIHRoZSBkZXBlbmRlY2llcyBvZiB0aGUgY29yZSBydW50aW1lOw0KICogQGF1dGhvciBWaXRvciBTaWx2YSBbdml0b3ItdC1zaWx2YUB0ZWxlY29tLnB0XQ0KICogQHZlcnNpb24gMC40LjANCiAqDQogKiBAcHJvcGVydHkge3J1bnRpbWVGYWN0b3J5fSBydW50aW1lRmFjdG9yeSAtIFNwZWNpZmljIGltcGxlbWVudGF0aW9uIGZvciBhbGwgZW52aXJvbm1lbnRzOw0KICogQHByb3BlcnR5IHtSdW50aW1lQ2F0YWxvZ3VlfSBydW50aW1lQ2F0YWxvZ3VlIC0gQ2F0YWxvZ3VlIG9mIGNvbXBvbmVudHMgY2FuIGJlIGluc3RhbGxlZDsNCiAqIEBwcm9wZXJ0eSB7cnVudGltZVVSTH0gcnVudGltZVVSTCAtIFRoaXMgaWRlbnRpZnkgdGhlIGNvcmUgcnVudGltZSwgc2hvdWxkIGJlIHVuaXF1ZTsNCiAqIEBwcm9wZXJ0eSB7SWRlbnRpdHlNb2R1bGV9IGlkZW50aXR5TW9kdWxlIC0gSWRlbnRpdHkgTW9kdWxlOw0KICogQHByb3BlcnR5IHtQb2xpY3lFbmdpbmV9IHBvbGljeUVuZ2luZSAtIFBvbGljeSBFbmdpbmUgTW9kdWxlOw0KICogQHByb3BlcnR5IHtSZWdpc3RyeX0gcmVnaXN0cnkgLSBSZWdpc3RyeSBNb2R1bGU7DQogKiBAcHJvcGVydHkge01lc3NhZ2VCdXN9IG1lc3NhZ2VCdXMgLSBNZXNzYWdlIEJ1cyBpcyB1c2VkIGxpa2UgYSByb3V0ZXIgdG8gcmVkaXJlY3QgdGhlIG1lc3NhZ2VzIGZyb20gb25lIGNvbXBvbmVudCB0byBvdGhlcihzKQ0KICogQHByb3BlcnR5IHtHcmFwaENvbm5lY3Rvcn0gZ3JhcGhDb25uZWN0b3IgLSBHcmFwaCBDb25uZWN0b3IgaGFuZGxpbmcgR1VJRCBhbmQgY29udGFjdHMNCiAqLyAvKioNCiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBDQoqIENvcHlyaWdodCAyMDE2IElORVNDLUlEDQoqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTA0KKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVg0KKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0ENCiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRw0KKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWUNCiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU4NCioNCiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQoqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4NCiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQoqDQoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQoqDQoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQoqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQoqKi92YXIgUnVudGltZVVBPWZ1bmN0aW9uKCl7IC8qKg0KICAgKiBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgUnVudGltZSBVc2VyIEFnZW50DQogICAqIEBwYXJhbSB7cnVudGltZUZhY3Rvcnl9IHJ1bnRpbWVGYWN0b3J5IC0gU3BlY2lmaWMgaW1wbGVtZW50YXRpb24gZm9yIHRoZSBlbnZpcm9ubWVudCB3aGVyZSB0aGUgY29yZSBydW50aW1lIHdpbGwgcnVuOw0KICAgKiBAcGFyYW0ge2RvbWFpbn0gZG9tYWluVVJMIC0gc3BlY2lmeSB0aGUgZG9tYWluIGJhc2UgZm9yIHRoZSBydW50aW1lOw0KICAgKi9mdW5jdGlvbiBSdW50aW1lVUEocnVudGltZUZhY3RvcnksZG9tYWluKXsoMCxfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsUnVudGltZVVBKTtpZighcnVudGltZUZhY3RvcnkpdGhyb3cgbmV3IEVycm9yKCdUaGUgc2FuZGJveCBmYWN0b3J5IGlzIGEgbmVlZGVkIHBhcmFtZXRlcicpO2lmKCFkb21haW4pdGhyb3cgbmV3IEVycm9yKCdZb3UgbmVlZCB0aGUgZG9tYWluIG9mIHJ1bnRpbWUnKTt2YXIgX3RoaXM9dGhpcztfdGhpcy5ydW50aW1lRmFjdG9yeT1ydW50aW1lRmFjdG9yeTtfdGhpcy5ydW50aW1lQ2F0YWxvZ3VlPXJ1bnRpbWVGYWN0b3J5LmNyZWF0ZVJ1bnRpbWVDYXRhbG9ndWUoKTsgLy8gVE9ETzogcG9zdCBhbmQgcmV0dXJuIHJlZ2lzdHJ5L2h5cGVydHlSdW50aW1lSW5zdGFuY2UgdG8gYW5kIGZyb20gQmFjay1lbmQgU2VydmljZQ0KLy8gdGhlIHJlc3BvbnNlIGlzIGxpa2U6IHJ1bnRpbWU6Ly9zcDEvMTIzDQp2YXIgcnVudGltZVVSTD0ncnVudGltZTovLycrZG9tYWluKycvJytNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMTAwMDArMSk7X3RoaXMucnVudGltZVVSTD1ydW50aW1lVVJMO190aGlzLmRvbWFpbj1kb21haW47IC8vIFRPRE86IGNoZWNrIGlmIHJ1bnRpbWUgY2F0YWxvZ3VlIG5lZWQgdGhlIHJ1bnRpbWVVUkw7DQpfdGhpcy5ydW50aW1lQ2F0YWxvZ3VlLnJ1bnRpbWVVUkw9cnVudGltZVVSTDsgLy8gSW5zdGFudGlhdGUgdGhlIGlkZW50aXR5IE1vZHVsZQ0KX3RoaXMuaWRlbnRpdHlNb2R1bGU9bmV3IF9JZGVudGl0eU1vZHVsZTIuZGVmYXVsdChydW50aW1lVVJMKTsgLy8gVXNlIHRoZSBzYW5kYm94IGZhY3RvcnkgdG8gY3JlYXRlIGFuIEFwcFNhbmRib3g7DQovLyBJbiB0aGUgZnV0dXJlIGNhbiBiZSBkZWNpZGVkIGJ5IHBvbGljeUVuZ2luZSBpZiB3ZSBuZWVkDQovLyBjcmVhdGUgYSBBcHBTYW5kYm94IG9yIG5vdDsNCnZhciBhcHBTYW5kYm94PXJ1bnRpbWVGYWN0b3J5LmNyZWF0ZUFwcFNhbmRib3goKTsgLy8gSW5zdGFudGlhdGUgdGhlIFJlZ2lzdHJ5IE1vZHVsZQ0KX3RoaXMucmVnaXN0cnk9bmV3IF9SZWdpc3RyeTIuZGVmYXVsdChydW50aW1lVVJMLGFwcFNhbmRib3gsX3RoaXMuaWRlbnRpdHlNb2R1bGUsX3RoaXMucnVudGltZUNhdGFsb2d1ZSk7IC8vIEluc3RhbnRpYXRlIHRoZSBNZXNzYWdlIEJ1cw0KX3RoaXMubWVzc2FnZUJ1cz1uZXcgX01lc3NhZ2VCdXMyLmRlZmF1bHQoX3RoaXMucmVnaXN0cnkpOyAvLyBJbnN0YW50aWF0ZSB0aGUgUG9saWN5IEVuZ2luZQ0KX3RoaXMucG9saWN5RW5naW5lPW5ldyBfUG9saWN5RW5naW5lMi5kZWZhdWx0KF90aGlzLmlkZW50aXR5TW9kdWxlLF90aGlzLnJlZ2lzdHJ5KTtfdGhpcy5tZXNzYWdlQnVzLnBpcGVsaW5lLmhhbmRsZXJzPVsgLy8gUG9saWN5IG1lc3NhZ2UgYXV0aG9yaXNlDQpmdW5jdGlvbihjdHgpe190aGlzLnBvbGljeUVuZ2luZS5hdXRob3Jpc2UoY3R4Lm1zZykudGhlbihmdW5jdGlvbihjaGFuZ2VkTWdzKXtjdHgubXNnPWNoYW5nZWRNZ3M7Y3R4Lm5leHQoKTt9KS5jYXRjaChmdW5jdGlvbihyZWFzb24pe2NvbnNvbGUuZXJyb3IocmVhc29uKTtjdHguZmFpbChyZWFzb24pO30pO31dOyAvLyBBZGQgdG8gQXBwIFNhbmRib3ggdGhlIGxpc3RlbmVyOw0KYXBwU2FuZGJveC5hZGRMaXN0ZW5lcignKicsZnVuY3Rpb24obXNnKXtfdGhpcy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG1zZyk7fSk7IC8vIFJlZ2lzdGVyIG1lc3NhZ2VCdXMgb24gUmVnaXN0cnkNCl90aGlzLnJlZ2lzdHJ5Lm1lc3NhZ2VCdXM9X3RoaXMubWVzc2FnZUJ1cztfdGhpcy5yZWdpc3RyeS5hZGRFdmVudExpc3RlbmVyKCdydW50aW1lOmxvYWRTdHViJyxmdW5jdGlvbihkb21haW5VUkwpe190aGlzLmxvYWRTdHViKGRvbWFpblVSTCkudGhlbihmdW5jdGlvbigpe190aGlzLnJlZ2lzdHJ5LnRyaWdnZXIoJ3J1bnRpbWU6c3R1YkxvYWRlZCcsZG9tYWluVVJMKTt9KS5jYXRjaChmdW5jdGlvbihyZWFzb24pe2NvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBkZXBsb3kgdGhlIFByb3RvY29sU3R1YiBjb21wb25lbnQgJyxyZWFzb24pO30pO30pO190aGlzLnJlZ2lzdHJ5LmFkZEV2ZW50TGlzdGVuZXIoJ3J1bnRpbWU6bG9hZElkcFByb3h5JyxmdW5jdGlvbihkb21haW5VUkwpe190aGlzLmxvYWRJZHBQcm94eShkb21haW5VUkwpLnRoZW4oZnVuY3Rpb24oKXtfdGhpcy5yZWdpc3RyeS50cmlnZ2VyKCdydW50aW1lOmlkcFByb3h5TG9hZGVkJyxkb21haW5VUkwpO30pLmNhdGNoKGZ1bmN0aW9uKHJlYXNvbil7Y29uc29sZS5lcnJvcignRmFpbGVkIHRvIGRlcGxveSB0aGUgSURQIFByb3h5IGNvbXBvbmVudCAnLHJlYXNvbik7fSk7fSk7IC8vIFVzZSBzYW5kYm94IGZhY3RvcnkgdG8gdXNlIHNwZWNpZmljIG1ldGhvZHMNCi8vIGFuZCBzZXQgdGhlIG1lc3NhZ2UgYnVzIHRvIHRoZSBmYWN0b3J5DQpydW50aW1lRmFjdG9yeS5tZXNzYWdlQnVzPV90aGlzLm1lc3NhZ2VCdXM7IC8vIEluc3RhbmNpYXRlIHRoZSBTeW5jaGVyTWFuYWdlcjsNCl90aGlzLnN5bmNoZXJNYW5hZ2VyPW5ldyBfU3luY2hlck1hbmFnZXIyLmRlZmF1bHQoX3RoaXMucnVudGltZVVSTCxfdGhpcy5tZXNzYWdlQnVzLF90aGlzLnJlZ2lzdHJ5LF90aGlzLnJ1bnRpbWVDYXRhbG9ndWUpOyAvLyBJbnN0YW50aWF0ZSB0aGUgR3JhcGggQ29ubmVjdG9yDQpfdGhpcy5ncmFwaENvbm5lY3Rvcj1uZXcgX0dyYXBoQ29ubmVjdG9yMi5kZWZhdWx0KF90aGlzLnJ1bnRpbWVVUkwsX3RoaXMubWVzc2FnZUJ1cyk7fSAvKioNCiAgKiBBY2NvbW9kYXRlIGludGVyb3BlcmFiaWxpdHkgaW4gSDJIIGFuZCBwcm90byBvbiB0aGUgZmx5IGZvciBuZXdseSBkaXNjb3ZlcmVkIGRldmljZXMgaW4gTTJNDQogICogQHBhcmFtICB7Q2F0YWxvZ3VlRGF0YU9iamVjdC5IeXBlcnR5RGVzY3JpcHRvcn0gICBkZXNjcmlwdG9yICAgIGRlc2NyaXB0b3INCiAgKi8oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKFJ1bnRpbWVVQSxbe2tleTonZGlzY292ZXJIaXBlcnR5Jyx2YWx1ZTpmdW5jdGlvbiBkaXNjb3ZlckhpcGVydHkoZGVzY3JpcHRvcil7fSAvLyBCb2R5Li4uDQovKioNCiAgKiBSZWdpc3RlciBIeXBlcnR5IGRlcGxveWVkIGJ5IHRoZSBBcHAgdGhhdCBpcyBwYXNzZWQgYXMgaW5wdXQgcGFyYW1ldGVyLiBUbyBiZSB1c2VkIHdoZW4gQXBwIGFuZCBIeXBlcnRpZXMgYXJlIGZyb20gdGhlIHNhbWUgZG9tYWluIG90aGVyd2lzZSB0aGUgUnVudGltZVVBIHdpbGwgcmFpc2UgYW4gZXhjZXB0aW9uIGFuZCB0aGUgQXBwIGhhcyB0byB1c2UgdGhlIGxvYWRIeXBlcnR5KC4uKSBmdW5jdGlvbi4NCiAgKiBAcGFyYW0gIHtPYmplY3R9IE9iamVjdCAgICAgICAgICAgICAgICAgICBoeXBlcnR5SW5zdGFuY2UNCiAgKiBAcGFyYW0gIHtVUkwuSHlwZXJ0eUNhdGFsb2d1ZVVSTH0gICAgICAgICBkZXNjcmlwdG9yICAgICAgZGVzY3JpcHRvcg0KICAqL30se2tleToncmVnaXN0ZXJIeXBlcnR5Jyx2YWx1ZTpmdW5jdGlvbiByZWdpc3Rlckh5cGVydHkoaHlwZXJ0eUluc3RhbmNlLGRlc2NyaXB0b3Ipe30gLy8gQm9keS4uLg0KLyoqDQogICogRGVwbG95IEh5cGVydHkgZnJvbSBDYXRhbG9ndWUgVVJMDQogICogQHBhcmFtICB7VVJMLkh5cGVydHlDYXRhbG9ndWVVUkx9ICAgIGh5cGVydHkgaHlwZXJ0eURlc2NyaXB0b3IgdXJsOw0KICAqL30se2tleTonbG9hZEh5cGVydHknLHZhbHVlOmZ1bmN0aW9uIGxvYWRIeXBlcnR5KGh5cGVydHlEZXNjcmlwdG9yVVJMKXt2YXIgX3RoaXM9dGhpcztpZighaHlwZXJ0eURlc2NyaXB0b3JVUkwpdGhyb3cgbmV3IEVycm9yKCdIeXBlcnR5IGRlc2NyaXB0b3IgdXJsIHBhcmFtZXRlciBpcyBuZWVkZWQnKTtyZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXt2YXIgX2h5cGVydHlVUkw9dm9pZCAwO3ZhciBfaHlwZXJ0eVNhbmRib3g9dm9pZCAwO3ZhciBfaHlwZXJ0eURlc2NyaXB0b3I9dm9pZCAwO3ZhciBfaHlwZXJ0eVNvdXJjZVBhY2thZ2U9dm9pZCAwO3ZhciBlcnJvclJlYXNvbj1mdW5jdGlvbiBlcnJvclJlYXNvbihyZWFzb24pe2NvbnNvbGUuZXJyb3IoJ1NvbWV0aGluZyBmYWlsZWQgb24gdGhlIGRlcGxveSBoeXBlcnR5OiAnLHJlYXNvbik7cmVqZWN0KHJlYXNvbik7fTsgLy8gR2V0IEh5cGVydHkgZGVzY3JpcHRvcg0KLy8gVE9ETzogdGhlIHJlcXVlc3QgTW9kdWxlIHNob3VsZCBiZSBjaGFuZ2VkLA0KLy8gYmVjYXVzZSBhdCB0aGlzIG1vbWVudCBpdCBpcyBpbmNvbXBhdGlibGUgd2l0aCBub2RlanM7DQovLyBQcm9iYWJseSB3ZSBuZWVkIHRvIHBhc3MgYSBmYWN0b3J5IGxpa2Ugd2UgZG8gZm9yIHNhbmRib3hlczsNCmNvbnNvbGUuaW5mbygnLS0tLS0tLS0tLS0tLS0tLS0tIEh5cGVydHkgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyk7Y29uc29sZS5pbmZvKCdHZXQgaHlwZXJ0eSBkZXNjcmlwdG9yIGZvciA6JyxoeXBlcnR5RGVzY3JpcHRvclVSTCk7cmV0dXJuIF90aGlzLnJ1bnRpbWVDYXRhbG9ndWUuZ2V0SHlwZXJ0eURlc2NyaXB0b3IoaHlwZXJ0eURlc2NyaXB0b3JVUkwpLnRoZW4oZnVuY3Rpb24oaHlwZXJ0eURlc2NyaXB0b3IpeyAvLyBhdCB0aGlzIHBvaW50LCB3ZSBoYXZlIGNvbXBsZXRlZCAic3RlcCAyIGFuZCAzIiBhcyBzaG93biBpbiBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1oeXBlcnR5Lm1kDQpjb25zb2xlLmluZm8oJzE6IHJldHVybiBoeXBlcnR5IGRlc2NyaXB0b3InLGh5cGVydHlEZXNjcmlwdG9yKTsgLy8gaHlwZXJ0eSBjb250YWlucyB0aGUgZnVsbCBwYXRoIG9mIHRoZSBjYXRhbG9ndWUgVVJMLCBlLmcuDQovLyBjYXRhbG9ndWUucmV0aGluay5ldS8ud2VsbC1rbm93bi8uLi4uLi4uLi4uDQpfaHlwZXJ0eURlc2NyaXB0b3I9aHlwZXJ0eURlc2NyaXB0b3I7dmFyIHNvdXJjZVBhY2thZ2VVUkw9aHlwZXJ0eURlc2NyaXB0b3Iuc291cmNlUGFja2FnZVVSTDtpZihzb3VyY2VQYWNrYWdlVVJMPT09Jy9zb3VyY2VQYWNrYWdlJyl7cmV0dXJuIGh5cGVydHlEZXNjcmlwdG9yLnNvdXJjZVBhY2thZ2U7fSAvLyBHZXQgdGhlIGh5cGVydHkgc291cmNlIGNvZGUNCnJldHVybiBfdGhpcy5ydW50aW1lQ2F0YWxvZ3VlLmdldFNvdXJjZVBhY2thZ2VGcm9tVVJMKHNvdXJjZVBhY2thZ2VVUkwpO30pLnRoZW4oZnVuY3Rpb24oc291cmNlUGFja2FnZSl7Y29uc29sZS5pbmZvKCcyOiByZXR1cm4gaHlwZXJ0eSBzb3VyY2UgY29kZScpOyAvLyBhdCB0aGlzIHBvaW50LCB3ZSBoYXZlIGNvbXBsZXRlZCAic3RlcCA0IGFuZCA1IiBhcyBzaG93biBpbiBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1oeXBlcnR5Lm1kDQpfaHlwZXJ0eVNvdXJjZVBhY2thZ2U9c291cmNlUGFja2FnZTsgLy8NCi8vIHN0ZXBzIDYgLS0gOSBhcmUgc2tpcHBlZC4NCi8vIFRPRE86IG9uIHJlbGVhc2Ugb2YgY29yZSAwLjI7DQovLyBUT0RPOiBQcm9taXNlIHRvIGNoZWNrIHRoZSBwb2xpY3kgZW5naW5lDQovLyBtb2NrLXVwIGNvZGU7DQovLyB0ZW1wb3JhcnkgY29kZSwgb25seQ0KdmFyIHBvbGljeT10cnVlO3JldHVybiBwb2xpY3k7fSkudGhlbihmdW5jdGlvbihwb2xpY3lSZXN1bHQpe2NvbnNvbGUuaW5mbygnMzogcmV0dXJuIHBvbGljeSBlbmdpbmUgcmVzdWx0OiAnLHBvbGljeVJlc3VsdCk7IC8vIHdlIGhhdmUgY29tcGxldGVkIHN0ZXAgNiB0byA5IG9mIGh0dHBzOi8vZ2l0aHViLmNvbS9yZVRISU5LLXByb2plY3QvY29yZS1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvZG9jcy9zcGVjcy9ydW50aW1lL2R5bmFtaWMtdmlldy9iYXNpY3MvZGVwbG95LWh5cGVydHkubWQgcmlnaHQgbm93Lg0KLy8NCi8vIFN0ZXBzIDYgLS0gOQ0KLy8gQXMgYSByZXN1bHQgb2YgdGhlIHNpcHBlZCBzdGVwcywgd2Uga25vdyBhdCB0aGlzIHBvaW50IGlmIHdlIGV4ZWN1dGUNCi8vIGluU2FtZVNhbmRib3ggb3Igbm90Lg0KLy8NCi8vIEZvciB0ZXN0aW5nLCBqdXN0IGFzc3VtZSB3ZSBleGVjdXRlIGluIHNhbWUgU2FuZGJveC4NCnZhciBpblNhbWVTYW5kYm94PXRydWU7dmFyIHNhbmRib3g9dm9pZCAwO2lmKGluU2FtZVNhbmRib3gpeyAvLyB0aGlzIGRvbid0IG5lZWQgYmUgYSBQcm9taXNlOw0Kc2FuZGJveD1fdGhpcy5yZWdpc3RyeS5nZXRBcHBTYW5kYm94KCk7IC8vIHdlIGhhdmUgY29tcGxldGVkIHN0ZXAgMTEgaGVyZS4NCn1lbHNlIHt2YXIgZG9tYWluPSgwLF91dGlscy5kaXZpZGVVUkwpKGh5cGVydHlEZXNjcmlwdG9yVVJMKS5kb21haW47IC8vIGdldFNhbmRib3gsIHRoaXMgd2lsbCByZXR1cm4gYSBwcm9taXNlOw0Kc2FuZGJveD1fdGhpcy5yZWdpc3RyeS5nZXRTYW5kYm94KGRvbWFpbik7fSAvLyB0aGlzIHdpbGwgcmV0dXJuIHRoZSBzYW5kYm94IG9yIG9uZSBwcm9taXNlIHRvIGdldFNhbmRib3g7DQpyZXR1cm4gc2FuZGJveDt9KS50aGVuKGZ1bmN0aW9uKHNhbmRib3gpe2NvbnNvbGUuaW5mbygnNDogcmV0dXJuIHRoZSBzYW5kYm94JyxzYW5kYm94KTsgLy8gUmV0dXJuIHRoZSBzYW5kYm94IGluZGVwZW50ZWx5IGlmIGl0IHJ1bm5pbmcgaW4gdGhlIHNhbWUgc2FuZGJveCBvciBub3QNCi8vIHdlIGhhdmUgY29tcGxldGVkIHN0ZXAgMTQgaGVyZS4NCnJldHVybiBzYW5kYm94O30sZnVuY3Rpb24ocmVhc29uKXtjb25zb2xlLmVycm9yKCc0LjE6IFRyeSB0byByZWdpc3RlciBhIG5ldyBzYW5kYm94ICcscmVhc29uKTsgLy8gY2hlY2sgaWYgdGhlIHNhbmRib3ggaXMgcmVnaXN0ZWQgZm9yIHRoaXMgaHlwZXJ0eSBkZXNjcmlwdG9yIHVybDsNCi8vIE1ha2UgU3RlcHMgeHh4IC0tLSB4eHgNCi8vIEluc3RhbnRpYXRlIHRoZSBTYW5kYm94DQp2YXIgc2FuZGJveD1fdGhpcy5ydW50aW1lRmFjdG9yeS5jcmVhdGVTYW5kYm94KCk7c2FuZGJveC5hZGRMaXN0ZW5lcignKicsZnVuY3Rpb24obXNnKXtfdGhpcy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG1zZyk7fSk7cmV0dXJuIHNhbmRib3g7fSkudGhlbihmdW5jdGlvbihzYW5kYm94KXtjb25zb2xlLmluZm8oJzU6IHJldHVybiBzYW5kYm94IGFuZCByZWdpc3RlcicpO19oeXBlcnR5U2FuZGJveD1zYW5kYm94OyAvLyBSZWdpc3RlciBoeXBlcnR5DQpyZXR1cm4gX3RoaXMucmVnaXN0cnkucmVnaXN0ZXJIeXBlcnR5KHNhbmRib3gsaHlwZXJ0eURlc2NyaXB0b3JVUkwsX2h5cGVydHlEZXNjcmlwdG9yKTt9KS50aGVuKGZ1bmN0aW9uKGh5cGVydHlVUkwpe2NvbnNvbGUuaW5mbygnNjogSHlwZXJ0eSB1cmwsIGFmdGVyIHJlZ2lzdGVyIGh5cGVydHknLGh5cGVydHlVUkwpOyAvLyB3ZSBoYXZlIGNvbXBsZXRlZCBzdGVwIDE2IG9mIGh0dHBzOi8vZ2l0aHViLmNvbS9yZVRISU5LLXByb2plY3QvY29yZS1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvZG9jcy9zcGVjcy9ydW50aW1lL2R5bmFtaWMtdmlldy9iYXNpY3MvZGVwbG95LWh5cGVydHkubWQgcmlnaHQgbm93Lg0KX2h5cGVydHlVUkw9aHlwZXJ0eVVSTDsgLy8gRXh0ZW5kIG9yaWdpbmFsIGh5cGVydHkgY29uZmlndXJhdGlvbjsNCnZhciBjb25maWd1cmF0aW9uPXt9O2lmKCEoMCxfdXRpbHMuZW1wdHlPYmplY3QpKF9oeXBlcnR5RGVzY3JpcHRvci5jb25maWd1cmF0aW9uKSl7dHJ5e2NvbmZpZ3VyYXRpb249KDAsX2Fzc2lnbjIuZGVmYXVsdCkoe30sSlNPTi5wYXJzZShfaHlwZXJ0eURlc2NyaXB0b3IuY29uZmlndXJhdGlvbikpO31jYXRjaChlKXtjb25maWd1cmF0aW9uPV9oeXBlcnR5RGVzY3JpcHRvci5jb25maWd1cmF0aW9uO319Y29uZmlndXJhdGlvbi5ydW50aW1lVVJMPV90aGlzLnJ1bnRpbWVVUkw7IC8vIFdlIHdpbGwgZGVwbG95IHRoZSBjb21wb25lbnQgLSBzdGVwIDE3IG9mIGh0dHBzOi8vZ2l0aHViLmNvbS9yZVRISU5LLXByb2plY3QvY29yZS1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvZG9jcy9zcGVjcy9ydW50aW1lL2R5bmFtaWMtdmlldy9iYXNpY3MvZGVwbG95LWh5cGVydHkubWQgcmlnaHQgbm93Lg0KcmV0dXJuIF9oeXBlcnR5U2FuZGJveC5kZXBsb3lDb21wb25lbnQoX2h5cGVydHlTb3VyY2VQYWNrYWdlLnNvdXJjZUNvZGUsX2h5cGVydHlVUkwsY29uZmlndXJhdGlvbik7fSkudGhlbihmdW5jdGlvbihkZXBsb3lDb21wb25lbnRTdGF0dXMpe2NvbnNvbGUuaW5mbygnNzogRGVwbG95IGNvbXBvbmVudCBzdGF0dXMgZm9yIGh5cGVydHk6ICcsZGVwbG95Q29tcG9uZW50U3RhdHVzKTsgLy8gd2UgaGF2ZSBjb21wbGV0ZWQgc3RlcCAxOSBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1oeXBlcnR5Lm1kIHJpZ2h0IG5vdy4NCi8vIEFkZCB0aGUgbWVzc2FnZSBidXMgbGlzdGVuZXIgdG8gdGhlIGFwcFNhbmRib3ggb3IgaHlwZXJ0U2FuZGJveDsNCl90aGlzLm1lc3NhZ2VCdXMuYWRkTGlzdGVuZXIoX2h5cGVydHlVUkwsZnVuY3Rpb24obXNnKXtfaHlwZXJ0eVNhbmRib3gucG9zdE1lc3NhZ2UobXNnKTt9KTsgLy8gd2UgaGF2ZSBjb21wbGV0ZWQgc3RlcCAyMCBvZiBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1oeXBlcnR5Lm1kIHJpZ2h0IG5vdy4NCnZhciBoeXBlcnR5PXtydW50aW1lSHlwZXJ0eVVSTDpfaHlwZXJ0eVVSTCxzdGF0dXM6ZGVwbG95Q29tcG9uZW50U3RhdHVzfTtyZXNvbHZlKGh5cGVydHkpOyAvLyB3ZSBoYXZlIGNvbXBsZXRlZCBzdGVwIDIxIGh0dHBzOi8vZ2l0aHViLmNvbS9yZVRISU5LLXByb2plY3QvY29yZS1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvZG9jcy9zcGVjcy9ydW50aW1lL2R5bmFtaWMtdmlldy9iYXNpY3MvZGVwbG95LWh5cGVydHkubWQgcmlnaHQgbm93Lg0KY29uc29sZS5sb2coJy0tLS0tLS0tLS0tLS0tLS0tLSBFTkQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyk7fSkuY2F0Y2goZXJyb3JSZWFzb24pO30pO30gLyoqDQogICogRGVwbG95IFN0dWIgZnJvbSBDYXRhbG9ndWUgVVJMIG9yIGRvbWFpbiB1cmwNCiAgKiBAcGFyYW0gIHtVUkwuVVJMfSAgICAgZG9tYWluICAgICAgICAgIGRvbWFpbg0KICAqL30se2tleTonbG9hZFN0dWInLHZhbHVlOmZ1bmN0aW9uIGxvYWRTdHViKHByb3Rvc3R1YlVSTCl7dmFyIF90aGlzPXRoaXM7aWYoIXByb3Rvc3R1YlVSTCl0aHJvdyBuZXcgRXJyb3IoJ2RvbWFpbiBwYXJhbWV0ZXIgaXMgbmVlZGVkJyk7cmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7dmFyIGRvbWFpbj0oMCxfdXRpbHMuZGl2aWRlVVJMKShwcm90b3N0dWJVUkwpLmRvbWFpbjtpZighZG9tYWluKXtkb21haW49cHJvdG9zdHViVVJMO312YXIgX3N0dWJTYW5kYm94PXZvaWQgMDt2YXIgX3N0dWJEZXNjcmlwdG9yPXZvaWQgMDt2YXIgX3J1bnRpbWVQcm90b1N0dWJVUkw9dm9pZCAwO3ZhciBfc3R1YlNvdXJjZVBhY2thZ2U9dm9pZCAwO3ZhciBlcnJvclJlYXNvbj1mdW5jdGlvbiBlcnJvclJlYXNvbihyZWFzb24pe2NvbnNvbGUuZXJyb3IoJ1NvbWV0aGluZyBmYWlsZWQgb24gdGhlIGRlcGxveSBvZiBwcm90b2NvbHN0dWI6ICcscmVhc29uKTtyZWplY3QocmVhc29uKTt9OyAvLyBEaXNjb3ZlciBQcm90b2NvbCBTdHViDQpjb25zb2xlLmluZm8oJy0tLS0tLS0tLS0tLS0tLS0tLS0gUHJvdG9TdHViIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuJyk7Y29uc29sZS5pbmZvKCdEaXNjb3ZlciBvciBDcmVhdGUgYSBuZXcgUHJvdG9TdHViIGZvciBkb21haW46ICcsZG9tYWluKTtfdGhpcy5yZWdpc3RyeS5kaXNjb3ZlclByb3Rvc3R1Yihkb21haW4pLnRoZW4oZnVuY3Rpb24ocnVudGltZVByb3RvU3R1YlVSTCl7IC8vIElzIHJlZ2lzdGVkPw0KY29uc29sZS5pbmZvKCcxLiBQcm90byBTdHViIERpc2NvdmVyZWQ6ICcscnVudGltZVByb3RvU3R1YlVSTCk7IC8vIHdlIGhhdmUgY29tcGxldGVkIHN0ZXAgMiBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1wcm90b3N0dWIubWQNCi8vIFRPRE86IENoZWNrIGlmIHRoZSBzdGF0dXMgaXMgc2F2ZWQgaW4gdGhlIHN0YXR1cyBvZiBzYW5kYm94Ow0KdmFyIHN0dWI9e3J1bnRpbWVQcm90b1N0dWJVUkw6cnVudGltZVByb3RvU3R1YlVSTCxzdGF0dXM6J2RlcGxveWVkJ307cmVzb2x2ZShzdHViKTtjb25zb2xlLmluZm8oJy0tLS0tLS0tLS0tLS0tLS0tLS0gRU5EIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuJyk7fSkuY2F0Y2goZnVuY3Rpb24ocmVhc29uKXsgLy8gaXMgbm90IHJlZ2lzdGVkPw0KY29uc29sZS5pbmZvKCcxLiBQcm90byBTdHViIG5vdCBmb3VuZDonLHJlYXNvbik7IC8vIHdlIGhhdmUgY29tcGxldGVkIHN0ZXAgMyBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1wcm90b3N0dWIubWQNCi8vIHdlIG5lZWQgdG8gZ2V0IFByb3RvU3R1YiBkZXNjcmlwdG9yIHN0ZXAgNCBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1wcm90b3N0dWIubWQNCl90aGlzLnJ1bnRpbWVDYXRhbG9ndWUuZ2V0U3R1YkRlc2NyaXB0b3IocHJvdG9zdHViVVJMKS50aGVuKGZ1bmN0aW9uKHN0dWJEZXNjcmlwdG9yKXtjb25zb2xlLmluZm8oJzIuIHJldHVybiB0aGUgUHJvdG9TdHViIGRlc2NyaXB0b3I6JyxzdHViRGVzY3JpcHRvcik7IC8vIHdlIGhhdmUgY29tcGxldGVkIHN0ZXAgNSBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1wcm90b3N0dWIubWQNCl9zdHViRGVzY3JpcHRvcj1zdHViRGVzY3JpcHRvcjt2YXIgc291cmNlUGFja2FnZVVSTD1zdHViRGVzY3JpcHRvci5zb3VyY2VQYWNrYWdlVVJMO2lmKHNvdXJjZVBhY2thZ2VVUkw9PT0nL3NvdXJjZVBhY2thZ2UnKXtyZXR1cm4gc3R1YkRlc2NyaXB0b3Iuc291cmNlUGFja2FnZTt9IC8vIHdlIG5lZWQgdG8gZ2V0IFByb3RvU3R1YiBTb3VyY2UgY29kZSBmcm9tIGRlc2NyaXB0b3IgLSBzdGVwIDYgaHR0cHM6Ly9naXRodWIuY29tL3JlVEhJTkstcHJvamVjdC9jb3JlLWZyYW1ld29yay9ibG9iL21hc3Rlci9kb2NzL3NwZWNzL3J1bnRpbWUvZHluYW1pYy12aWV3L2Jhc2ljcy9kZXBsb3ktcHJvdG9zdHViLm1kDQpyZXR1cm4gX3RoaXMucnVudGltZUNhdGFsb2d1ZS5nZXRTb3VyY2VQYWNrYWdlRnJvbVVSTChzb3VyY2VQYWNrYWdlVVJMKTt9KS5jYXRjaChlcnJvclJlYXNvbikudGhlbihmdW5jdGlvbihzdHViU291cmNlUGFja2FnZSl7Y29uc29sZS5pbmZvKCczLiByZXR1cm4gdGhlIFByb3RvU3R1YiBTb3VyY2UgQ29kZTogJyxzdHViU291cmNlUGFja2FnZSk7IC8vIHdlIGhhdmUgY29tcGxldGVkIHN0ZXAgNyBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1wcm90b3N0dWIubWQNCl9zdHViU291cmNlUGFja2FnZT1zdHViU291cmNlUGFja2FnZTsgLy8gVE9ETzogQ2hlY2sgb24gUEVQIChwb2xpY3kgRW5naW5lKSBpZiB3ZSBuZWVkIHRoZSBzYW5kYm94IGFuZCBjaGVjayBpZiB0aGUgU2FuZGJveCBGYWN0b3J5IGhhdmUgdGhlIGNvbnRleHQgc2FuZGJveDsNCnZhciBwb2xpY3k9dHJ1ZTtyZXR1cm4gcG9saWN5O30pLnRoZW4oZnVuY3Rpb24ocG9saWN5KXsgLy8gdGhpcyB3aWxsIHJldHVybiB0aGUgc2FuZGJveCBvciBvbmUgcHJvbWlzZSB0byBnZXRTYW5kYm94Ow0KcmV0dXJuIF90aGlzLnJlZ2lzdHJ5LmdldFNhbmRib3goZG9tYWluKTt9KS50aGVuKGZ1bmN0aW9uKHN0dWJTYW5kYm94KXtjb25zb2xlLmluZm8oJzQuIGlmIHRoZSBzYW5kYm94IGlzIHJlZ2lzdGVyZWQgdGhlbiByZXR1cm4gdGhlIHNhbmRib3ggJyxzdHViU2FuZGJveCk7IC8vIHdlIGhhdmUgY29tcGxldGVkIHN0ZXAgeHh4IGh0dHBzOi8vZ2l0aHViLmNvbS9yZVRISU5LLXByb2plY3QvY29yZS1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvZG9jcy9zcGVjcy9ydW50aW1lL2R5bmFtaWMtdmlldy9iYXNpY3MvZGVwbG95LXByb3Rvc3R1Yi5tZA0KX3N0dWJTYW5kYm94PXN0dWJTYW5kYm94O3JldHVybiBzdHViU2FuZGJveDt9KS5jYXRjaChmdW5jdGlvbihyZWFzb24pe2NvbnNvbGUuaW5mbygnNS4gU2FuZGJveCB3YXMgbm90IGZvdW5kLCBjcmVhdGluZyBhIG5ldyBvbmUgJyxyZWFzb24pOyAvLyBjaGVjayBpZiB0aGUgc2FuZGJveCBpcyByZWdpc3RlZCBmb3IgdGhpcyBzdHViIGRlc2NyaXB0b3IgdXJsOw0KLy8gTWFrZSBTdGVwcyB4eHggLS0tIHh4eA0KLy8gSW5zdGFudGlhdGUgdGhlIFNhbmRib3gNCnZhciBzYW5kYm94PV90aGlzLnJ1bnRpbWVGYWN0b3J5LmNyZWF0ZVNhbmRib3goKTtzYW5kYm94LmFkZExpc3RlbmVyKCcqJyxmdW5jdGlvbihtc2cpe190aGlzLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UobXNnKTt9KTtyZXR1cm4gc2FuZGJveDt9KS50aGVuKGZ1bmN0aW9uKHNhbmRib3gpe2NvbnNvbGUuaW5mbygnNi4gcmV0dXJuIHRoZSBzYW5kYm94IGluc3RhbmNlIGFuZCByZWdpc3Rlcicsc2FuZGJveCwndG8gZG9tYWluICcsZG9tYWluKTtfc3R1YlNhbmRib3g9c2FuZGJveDsgLy8gd2UgbmVlZCByZWdpc3RlciBzdHViIG9uIHJlZ2lzdHJ5IC0gc3RlcCB4eHggaHR0cHM6Ly9naXRodWIuY29tL3JlVEhJTkstcHJvamVjdC9jb3JlLWZyYW1ld29yay9ibG9iL21hc3Rlci9kb2NzL3NwZWNzL3J1bnRpbWUvZHluYW1pYy12aWV3L2Jhc2ljcy9kZXBsb3ktcHJvdG9zdHViLm1kDQpyZXR1cm4gX3RoaXMucmVnaXN0cnkucmVnaXN0ZXJTdHViKF9zdHViU2FuZGJveCxkb21haW4pO30pLnRoZW4oZnVuY3Rpb24ocnVudGltZVByb3RvU3R1YlVSTCl7Y29uc29sZS5pbmZvKCc3LiByZXR1cm4gdGhlIHJ1bnRpbWUgcHJvdG9zdHViIHVybDogJyxydW50aW1lUHJvdG9TdHViVVJMKTsgLy8gd2UgaGF2ZSBjb21wbGV0ZWQgc3RlcCB4eHggaHR0cHM6Ly9naXRodWIuY29tL3JlVEhJTkstcHJvamVjdC9jb3JlLWZyYW1ld29yay9ibG9iL21hc3Rlci9kb2NzL3NwZWNzL3J1bnRpbWUvZHluYW1pYy12aWV3L2Jhc2ljcy9kZXBsb3ktcHJvdG9zdHViLm1kDQpfcnVudGltZVByb3RvU3R1YlVSTD1ydW50aW1lUHJvdG9TdHViVVJMOyAvLyBFeHRlbmQgb3JpZ2luYWwgaHlwZXJ0eSBjb25maWd1cmF0aW9uOw0KdmFyIGNvbmZpZ3VyYXRpb249e307aWYoISgwLF91dGlscy5lbXB0eU9iamVjdCkoX3N0dWJEZXNjcmlwdG9yLmNvbmZpZ3VyYXRpb24pKXt0cnl7Y29uZmlndXJhdGlvbj0oMCxfYXNzaWduMi5kZWZhdWx0KSh7fSxKU09OLnBhcnNlKF9zdHViRGVzY3JpcHRvci5jb25maWd1cmF0aW9uKSk7fWNhdGNoKGUpe2NvbmZpZ3VyYXRpb249X3N0dWJEZXNjcmlwdG9yLmNvbmZpZ3VyYXRpb247fX1jb25maWd1cmF0aW9uLnJ1bnRpbWVVUkw9X3RoaXMucnVudGltZVVSTDsgLy8gRGVwbG95IENvbXBvbmVudCBzdGVwIHh4eA0KcmV0dXJuIF9zdHViU2FuZGJveC5kZXBsb3lDb21wb25lbnQoX3N0dWJTb3VyY2VQYWNrYWdlLnNvdXJjZUNvZGUscnVudGltZVByb3RvU3R1YlVSTCxjb25maWd1cmF0aW9uKTt9KS50aGVuKGZ1bmN0aW9uKGRlcGxveUNvbXBvbmVudFN0YXR1cyl7Y29uc29sZS5pbmZvKCc4OiByZXR1cm4gZGVwbG95IGNvbXBvbmVudCBmb3Igc2FuZGJveCBzdGF0dXM6ICcsZGVwbG95Q29tcG9uZW50U3RhdHVzKTsgLy8gd2UgaGF2ZSBjb21wbGV0ZWQgc3RlcCB4eHggaHR0cHM6Ly9naXRodWIuY29tL3JlVEhJTkstcHJvamVjdC9jb3JlLWZyYW1ld29yay9ibG9iL21hc3Rlci9kb2NzL3NwZWNzL3J1bnRpbWUvZHluYW1pYy12aWV3L2Jhc2ljcy9kZXBsb3ktcHJvdG9zdHViLm1kDQovLyBBZGQgdGhlIG1lc3NhZ2UgYnVzIGxpc3RlbmVyDQpfdGhpcy5tZXNzYWdlQnVzLmFkZExpc3RlbmVyKF9ydW50aW1lUHJvdG9TdHViVVJMLGZ1bmN0aW9uKG1zZyl7X3N0dWJTYW5kYm94LnBvc3RNZXNzYWdlKG1zZyk7fSk7IC8vIHdlIGhhdmUgY29tcGxldGVkIHN0ZXAgeHh4IGh0dHBzOi8vZ2l0aHViLmNvbS9yZVRISU5LLXByb2plY3QvY29yZS1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvZG9jcy9zcGVjcy9ydW50aW1lL2R5bmFtaWMtdmlldy9iYXNpY3MvZGVwbG95LXByb3Rvc3R1Yi5tZA0KLy8gTG9hZCBTdHViIGZ1bmN0aW9uIHJlc29sdmVkIHdpdGggc3VjY2VzczsNCnZhciBzdHViPXtydW50aW1lUHJvdG9TdHViVVJMOl9ydW50aW1lUHJvdG9TdHViVVJMLHN0YXR1czpkZXBsb3lDb21wb25lbnRTdGF0dXN9O3Jlc29sdmUoc3R1Yik7Y29uc29sZS5pbmZvKCctLS0tLS0tLS0tLS0tLS0tLS0tIEVORCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbicpO30pLmNhdGNoKGVycm9yUmVhc29uKTt9KTt9KTt9IC8qKg0KICAqIERlcGxveSBTdHViIGZyb20gQ2F0YWxvZ3VlIFVSTCBvciBkb21haW4gdXJsDQogICogQHBhcmFtICB7VVJMLlVSTH0gICAgIGRvbWFpbiAgICAgICAgICBkb21haW4NCiAgKi99LHtrZXk6J2xvYWRJZHBQcm94eScsdmFsdWU6ZnVuY3Rpb24gbG9hZElkcFByb3h5KGlkcFByb3h5VVJMKXt2YXIgX3RoaXM9dGhpcztpZighaWRwUHJveHlVUkwpdGhyb3cgbmV3IEVycm9yKCdUaGUgSURQIFByb3h5IFVSTCBpcyBhIG5lZWRlZCBwYXJhbWV0ZXIsIGNvdWxkIGJlIGEgRE9NQUlOIG9yIGEgVVJMJyk7cmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7dmFyIGRvbWFpbj0oMCxfdXRpbHMuZGl2aWRlVVJMKShpZHBQcm94eVVSTCkuZG9tYWluO2lmKCFkb21haW4pe2RvbWFpbj1pZHBQcm94eVVSTDt9dmFyIF9wcm94eVNhbmRib3g9dm9pZCAwO3ZhciBfcHJveHlEZXNjcmlwdG9yPXZvaWQgMDt2YXIgX3J1bnRpbWVJZHBQcm94eVVSTD12b2lkIDA7dmFyIF9wcm94eVNvdXJjZVBhY2thZ2U9dm9pZCAwO3ZhciBlcnJvclJlYXNvbj1mdW5jdGlvbiBlcnJvclJlYXNvbihyZWFzb24pe2NvbnNvbGUuZXJyb3IoJ1NvbWV0aGluZyBmYWlsZWQgb24gdGhlIGRlcGxveSBvZiBJZHBQcm94eTogJyxyZWFzb24pO3JlamVjdChyZWFzb24pO307IC8vIERpc2NvdmVyIElEUFByb3h5DQpjb25zb2xlLmluZm8oJy0tLS0tLS0tLS0tLS0tLS0tLS0gSURQIFByb3h5IERlcGxveSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbicpO2NvbnNvbGUuaW5mbygnRGlzY292ZXIgb3IgQ3JlYXRlIGEgbmV3IElkcFByb3h5IGZvciBkb21haW4vVVJMOiAnLGRvbWFpbik7cmV0dXJuIF90aGlzLnJlZ2lzdHJ5LmRpc2NvdmVySWRwUHJveHkoZG9tYWluKS50aGVuKGZ1bmN0aW9uKHJ1bnRpbWVJZHBQcm94eVVSTCl7IC8vIElzIHJlZ2lzdGVkPw0KY29uc29sZS5pbmZvKCcxLiBJRFBQcm94eSBEaXNjb3ZlcmVkOiAnLHJ1bnRpbWVJZHBQcm94eVVSTCk7IC8vIHdlIGhhdmUgY29tcGxldGVkIHN0ZXAgMiBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1wcm90b3N0dWIubWQNCi8vIFRPRE86IENoZWNrIGlmIHRoZSBzdGF0dXMgaXMgc2F2ZWQgaW4gdGhlIHN0YXR1cyBvZiBzYW5kYm94Ow0KdmFyIGlkcFByb3h5PXtydW50aW1lSWRwUHJveHlVUkw6cnVudGltZUlkcFByb3h5VVJMLHN0YXR1czonZGVwbG95ZWQnfTtyZXNvbHZlKGlkcFByb3h5KTtjb25zb2xlLmluZm8oJy0tLS0tLS0tLS0tLS0tLS0tLS0gRU5EIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuJyk7fSkuY2F0Y2goZnVuY3Rpb24ocmVhc29uKXsgLy8gaXMgbm90IHJlZ2lzdGVkPw0KY29uc29sZS5pbmZvKCcxLiBJZHBQcm94eSBub3QgZm91bmQ6JyxyZWFzb24pOyAvLyB3ZSBoYXZlIGNvbXBsZXRlZCBzdGVwIDMgaHR0cHM6Ly9naXRodWIuY29tL3JlVEhJTkstcHJvamVjdC9jb3JlLWZyYW1ld29yay9ibG9iL21hc3Rlci9kb2NzL3NwZWNzL3J1bnRpbWUvZHluYW1pYy12aWV3L2Jhc2ljcy9kZXBsb3ktcHJvdG9zdHViLm1kDQovLyB3ZSBuZWVkIHRvIGdldCBQcm90b1N0dWIgZGVzY3JpcHRvciBzdGVwIDQgaHR0cHM6Ly9naXRodWIuY29tL3JlVEhJTkstcHJvamVjdC9jb3JlLWZyYW1ld29yay9ibG9iL21hc3Rlci9kb2NzL3NwZWNzL3J1bnRpbWUvZHluYW1pYy12aWV3L2Jhc2ljcy9kZXBsb3ktcHJvdG9zdHViLm1kDQpfdGhpcy5ydW50aW1lQ2F0YWxvZ3VlLmdldElkcFByb3h5RGVzY3JpcHRvcihpZHBQcm94eVVSTCkudGhlbihmdW5jdGlvbihwcm94eURlc2NyaXB0b3Ipe2NvbnNvbGUuaW5mbygnMi4gUmV0dXJuIHRoZSBJRFBQcm94eSBkZXNjcmlwdG9yOicscHJveHlEZXNjcmlwdG9yKTsgLy8gd2UgaGF2ZSBjb21wbGV0ZWQgc3RlcCA1IGh0dHBzOi8vZ2l0aHViLmNvbS9yZVRISU5LLXByb2plY3QvY29yZS1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvZG9jcy9zcGVjcy9ydW50aW1lL2R5bmFtaWMtdmlldy9iYXNpY3MvZGVwbG95LXByb3Rvc3R1Yi5tZA0KX3Byb3h5RGVzY3JpcHRvcj1wcm94eURlc2NyaXB0b3I7dmFyIHNvdXJjZVBhY2thZ2VVUkw9cHJveHlEZXNjcmlwdG9yLnNvdXJjZVBhY2thZ2VVUkw7aWYoc291cmNlUGFja2FnZVVSTD09PScvc291cmNlUGFja2FnZScpe3JldHVybiBwcm94eURlc2NyaXB0b3Iuc291cmNlUGFja2FnZTt9IC8vIHdlIG5lZWQgdG8gZ2V0IFByb3RvU3R1YiBTb3VyY2UgY29kZSBmcm9tIGRlc2NyaXB0b3IgLSBzdGVwIDYgaHR0cHM6Ly9naXRodWIuY29tL3JlVEhJTkstcHJvamVjdC9jb3JlLWZyYW1ld29yay9ibG9iL21hc3Rlci9kb2NzL3NwZWNzL3J1bnRpbWUvZHluYW1pYy12aWV3L2Jhc2ljcy9kZXBsb3ktcHJvdG9zdHViLm1kDQpyZXR1cm4gX3RoaXMucnVudGltZUNhdGFsb2d1ZS5nZXRTb3VyY2VQYWNrYWdlRnJvbVVSTChzb3VyY2VQYWNrYWdlVVJMKTt9KS5jYXRjaChlcnJvclJlYXNvbikudGhlbihmdW5jdGlvbihzb3VyY2VQYWNrYWdlKXtjb25zb2xlLmluZm8oJzMuIHJldHVybiB0aGUgSURQUHJveHkgc291cmNlIHBhY2thZ2U6ICcsc291cmNlUGFja2FnZSk7IC8vIHdlIGhhdmUgY29tcGxldGVkIHN0ZXAgNyBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1wcm90b3N0dWIubWQNCl9wcm94eVNvdXJjZVBhY2thZ2U9c291cmNlUGFja2FnZTsgLy8gVE9ETzogQ2hlY2sgb24gUEVQIChwb2xpY3kgRW5naW5lKSBpZiB3ZSBuZWVkIHRoZSBzYW5kYm94IGFuZCBjaGVjayBpZiB0aGUgU2FuZGJveCBGYWN0b3J5IGhhdmUgdGhlIGNvbnRleHQgc2FuZGJveDsNCnZhciBwb2xpY3k9dHJ1ZTtyZXR1cm4gcG9saWN5O30pLnRoZW4oZnVuY3Rpb24ocG9saWN5KXsgLy8gdGhpcyB3aWxsIHJldHVybiB0aGUgc2FuZGJveCBvciBvbmUgcHJvbWlzZSB0byBnZXRTYW5kYm94Ow0KcmV0dXJuIF90aGlzLnJlZ2lzdHJ5LmdldFNhbmRib3goZG9tYWluKTt9KS50aGVuKGZ1bmN0aW9uKHByb3h5U2FuZGJveCl7Y29uc29sZS5pbmZvKCc0LiBpZiB0aGUgc2FuZGJveCBpcyByZWdpc3RlcmVkIHRoZW4gcmV0dXJuIHRoZSBzYW5kYm94Jyxwcm94eVNhbmRib3gpO19wcm94eVNhbmRib3g9cHJveHlTYW5kYm94O3JldHVybiBwcm94eVNhbmRib3g7fSkuY2F0Y2goZnVuY3Rpb24ocmVhc29uKXtjb25zb2xlLmluZm8oJzUuIFNhbmRib3ggd2FzIG5vdCBmb3VuZCwgY3JlYXRpbmcgYSBuZXcgb25lJyxyZWFzb24pOyAvLyBjaGVjayBpZiB0aGUgc2FuZGJveCBpcyByZWdpc3RlZCBmb3IgdGhpcyBwcm94eSBkZXNjcmlwdG9yIHVybDsNCi8vIE1ha2UgU3RlcHMgeHh4IC0tLSB4eHgNCi8vIEluc3RhbnRpYXRlIHRoZSBTYW5kYm94DQp2YXIgc2FuZGJveD1fdGhpcy5ydW50aW1lRmFjdG9yeS5jcmVhdGVTYW5kYm94KCk7c2FuZGJveC5hZGRMaXN0ZW5lcignKicsZnVuY3Rpb24obXNnKXtfdGhpcy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG1zZyk7fSk7cmV0dXJuIHNhbmRib3g7fSkudGhlbihmdW5jdGlvbihzYW5kYm94KXtjb25zb2xlLmluZm8oJzYuIHJldHVybiB0aGUgc2FuZGJveCBpbnN0YW5jZSBhbmQgcmVnaXN0ZXInLHNhbmRib3gsJ3RvIGRvbWFpbiAnLGRvbWFpbik7X3Byb3h5U2FuZGJveD1zYW5kYm94OyAvLyB3ZSBuZWVkIHJlZ2lzdGVyIHN0dWIgb24gcmVnaXN0cnkgLSBzdGVwIHh4eCBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1wcm90b3N0dWIubWQNCnJldHVybiBfdGhpcy5yZWdpc3RyeS5yZWdpc3RlcklkcFByb3h5KHNhbmRib3gsZG9tYWluKTt9KS50aGVuKGZ1bmN0aW9uKHJ1bnRpbWVJZHBQcm94eVVSTCl7Y29uc29sZS5pbmZvKCc3LiBSZXR1cm4gdGhlIHJ1bnRpbWUgSWRwIFByb3h5IFVSTDogJyxydW50aW1lSWRwUHJveHlVUkwpOyAvLyB3ZSBoYXZlIGNvbXBsZXRlZCBzdGVwIHh4eCBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1wcm90b3N0dWIubWQNCl9ydW50aW1lSWRwUHJveHlVUkw9cnVudGltZUlkcFByb3h5VVJMOyAvLyBFeHRlbmQgb3JpZ2luYWwgaHlwZXJ0eSBjb25maWd1cmF0aW9uOw0KdmFyIGNvbmZpZ3VyYXRpb249e307aWYoISgwLF91dGlscy5lbXB0eU9iamVjdCkoX3Byb3h5RGVzY3JpcHRvci5jb25maWd1cmF0aW9uKSl7dHJ5e2NvbmZpZ3VyYXRpb249KDAsX2Fzc2lnbjIuZGVmYXVsdCkoe30sSlNPTi5wYXJzZShfcHJveHlEZXNjcmlwdG9yLmNvbmZpZ3VyYXRpb24pKTt9Y2F0Y2goZSl7Y29uZmlndXJhdGlvbj1fcHJveHlEZXNjcmlwdG9yLmNvbmZpZ3VyYXRpb247fX1jb25maWd1cmF0aW9uLnJ1bnRpbWVVUkw9X3RoaXMucnVudGltZVVSTDsgLy8gRGVwbG95IENvbXBvbmVudCBzdGVwIHh4eA0KcmV0dXJuIF9wcm94eVNhbmRib3guZGVwbG95Q29tcG9uZW50KF9wcm94eVNvdXJjZVBhY2thZ2Uuc291cmNlQ29kZSxydW50aW1lSWRwUHJveHlVUkwsY29uZmlndXJhdGlvbik7fSkudGhlbihmdW5jdGlvbihkZXBsb3lDb21wb25lbnRTdGF0dXMpe2NvbnNvbGUuaW5mbygnODogcmV0dXJuIGRlcGxveSBjb21wb25lbnQgZm9yIHNhbmRib3ggc3RhdHVzOiAnLGRlcGxveUNvbXBvbmVudFN0YXR1cyk7IC8vIHdlIGhhdmUgY29tcGxldGVkIHN0ZXAgeHh4IGh0dHBzOi8vZ2l0aHViLmNvbS9yZVRISU5LLXByb2plY3QvY29yZS1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvZG9jcy9zcGVjcy9ydW50aW1lL2R5bmFtaWMtdmlldy9iYXNpY3MvZGVwbG95LXByb3Rvc3R1Yi5tZA0KLy8gQWRkIHRoZSBtZXNzYWdlIGJ1cyBsaXN0ZW5lcg0KX3RoaXMubWVzc2FnZUJ1cy5hZGRMaXN0ZW5lcihfcnVudGltZUlkcFByb3h5VVJMLGZ1bmN0aW9uKG1zZyl7X3Byb3h5U2FuZGJveC5wb3N0TWVzc2FnZShtc2cpO30pOyAvLyB3ZSBoYXZlIGNvbXBsZXRlZCBzdGVwIHh4eCBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L2NvcmUtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2RvY3Mvc3BlY3MvcnVudGltZS9keW5hbWljLXZpZXcvYmFzaWNzL2RlcGxveS1wcm90b3N0dWIubWQNCi8vIExvYWQgU3R1YiBmdW5jdGlvbiByZXNvbHZlZCB3aXRoIHN1Y2Nlc3M7DQp2YXIgaWRwUHJveHk9e3J1bnRpbWVJZHBQcm94eVVSTDpfcnVudGltZUlkcFByb3h5VVJMLHN0YXR1czpkZXBsb3lDb21wb25lbnRTdGF0dXN9O3Jlc29sdmUoaWRwUHJveHkpO2NvbnNvbGUuaW5mbygnLS0tLS0tLS0tLS0tLS0tLS0tLSBFTkQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4nKTt9KS5jYXRjaChlcnJvclJlYXNvbik7fSk7fSk7fSAvKioNCiAgKiBVc2VkIHRvIGNoZWNrIGZvciB1cGRhdGVzIGFib3V0IGNvbXBvbmVudHMgaGFuZGxlZCBpbiB0aGUgQ2F0YWxvZ3VlIGluY2x1ZGluZyBwcm90b2NvbCBzdHVicyBhbmQgSHlwZXJ0aWVzLiBjaGVjayByZWxhdGlvbnNoaXAgd2l0aCBsaWZlY3ljbGUgbWFuYWdlbWVudCBwcm92aWRlZCBieSBTZXJ2aWNlIFdvcmtlcnMNCiAgKiBAcGFyYW0gIHtDYXRhbG9ndWVVUkx9ICAgICAgIHVybCB1cmwNCiAgKi99LHtrZXk6J2NoZWNrRm9yVXBkYXRlJyx2YWx1ZTpmdW5jdGlvbiBjaGVja0ZvclVwZGF0ZSh1cmwpeyAvLyBCb2R5Li4uDQp9fV0pO3JldHVybiBSdW50aW1lVUE7fSgpOyAvL01haW4gZGVwZW5kZWNpZXMNCmV4cG9ydHMuZGVmYXVsdD1SdW50aW1lVUE7bW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1snZGVmYXVsdCddOw0KDQp9LHsiLi4vYnVzL01lc3NhZ2VCdXMiOjU5MiwiLi4vZ3JhcGhjb25uZWN0b3IvR3JhcGhDb25uZWN0b3IiOjU5NiwiLi4vaWRlbnRpdHkvSWRlbnRpdHlNb2R1bGUiOjU5OSwiLi4vcG9saWN5L1BvbGljeUVuZ2luZSI6NjAzLCIuLi9yZWdpc3RyeS9SZWdpc3RyeSI6NjA2LCIuLi9zeW5jaGVyL1N5bmNoZXJNYW5hZ2VyIjo2MTMsIi4uL3V0aWxzL3V0aWxzIjo2MTUsImJhYmVsLXBvbHlmaWxsIjoxNiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9hc3NpZ24iOjE5LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSI6MjUsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MjgsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6Mjl9XSw2MDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pO3ZhciBfcHJvbWlzZT1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZScpO3ZhciBfcHJvbWlzZTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvbWlzZSk7dmFyIF9jbGFzc0NhbGxDaGVjazI9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrJyk7dmFyIF9jbGFzc0NhbGxDaGVjazM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NDYWxsQ2hlY2syKTt2YXIgX2NyZWF0ZUNsYXNzMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MnKTt2YXIgX2NyZWF0ZUNsYXNzMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVDbGFzczIpO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfTt9IC8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqL3ZhciBPYmplY3RBbGxvY2F0aW9uPWZ1bmN0aW9uKCl7IC8qIHByaXZhdGUNCiAgX3VybDogVVJMDQogIF9idXM6IE1pbmlCdXMNCiAgKi8gLyoqDQogICAqIENyZWF0ZSBhbiBPYmplY3QgQWxsb2NhdGlvbg0KICAgKiBAcGFyYW0gIHtVUkwuVVJMfSAgICAgIHVybCAtIHVybCBmcm9tIHdobyBpcyBzZW5kaW5nIHRoZSBtZXNzYWdlDQogICAqIEBwYXJhbSAge01pbmlCdXN9ICAgICAgYnVzIC0gTWluaUJ1cyB1c2VkIGZvciBhZGRyZXNzIGFsbG9jYXRpb24NCiAgICovZnVuY3Rpb24gT2JqZWN0QWxsb2NhdGlvbih1cmwsYnVzKXsoMCxfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsT2JqZWN0QWxsb2NhdGlvbik7dmFyIF90aGlzPXRoaXM7X3RoaXMuX3VybD11cmw7X3RoaXMuX2J1cz1idXM7fSAvKioNCiAgICogZ2V0IHRoZSBVUkwgdmFsdWUNCiAgICogQHJldHVybiB7c3RyaW5nfSBUaGUgdXJsIHZhbHVlOw0KICAgKi8oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKE9iamVjdEFsbG9jYXRpb24sW3trZXk6J2NyZWF0ZScsIC8qKg0KICAgKiBBc2sgZm9yIGNyZWF0aW9uIG9mIGEgbnVtYmVyIG9mIE9iamVjdCBhZGRyZXNzZXMsIHRvIHRoZSBkb21haW4gbWVzc2FnZSBub2RlLg0KICAgKiBAcGFyYW0gIHtEb21haW59IGRvbWFpbiAtIERvbWFpbiBvZiB0aGUgbWVzc2FnZSBub2RlLg0KICAgKiBAcGFyYW0gIHtudW1iZXJ9IG51bWJlciAtIE51bWJlciBvZiBhZGRyZXNzZXMgdG8gcmVxdWVzdA0KICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3RVUkw+fSAgQSBsaXN0IG9mIE9iamVjdFVSTCdzDQogICAqL3ZhbHVlOmZ1bmN0aW9uIGNyZWF0ZShkb21haW4sc2NoZW1lLG51bWJlcil7dmFyIF90aGlzPXRoaXM7dmFyIG1zZz17dHlwZTonY3JlYXRlJyxmcm9tOl90aGlzLl91cmwsdG86J2RvbWFpbjovL21zZy1ub2RlLicrZG9tYWluKycvb2JqZWN0LWFkZHJlc3MtYWxsb2NhdGlvbicsYm9keTp7c2NoZW1lOnNjaGVtZSx2YWx1ZTp7bnVtYmVyOm51bWJlcn19fTtyZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXtfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKG1zZyxmdW5jdGlvbihyZXBseSl7aWYocmVwbHkuYm9keS5jb2RlPT09MjAwKXtyZXNvbHZlKHJlcGx5LmJvZHkudmFsdWUuYWxsb2NhdGVkKTt9ZWxzZSB7cmVqZWN0KHJlcGx5LmJvZHkuZGVzYyk7fX0pO30pO319LHtrZXk6J3VybCcsZ2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLl91cmw7fX1dKTtyZXR1cm4gT2JqZWN0QWxsb2NhdGlvbjt9KCk7ZXhwb3J0cy5kZWZhdWx0PU9iamVjdEFsbG9jYXRpb247bW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1snZGVmYXVsdCddOw0KDQp9LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiOjI1LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjI4LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjI5fV0sNjEwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KTt2YXIgX2NsYXNzQ2FsbENoZWNrMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2snKTt2YXIgX2NsYXNzQ2FsbENoZWNrMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO3ZhciBfY3JlYXRlQ2xhc3MyPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcycpO3ZhciBfY3JlYXRlQ2xhc3MzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUNsYXNzMik7dmFyIF91dGlscz1yZXF1aXJlKCcuLi91dGlscy91dGlscycpO3ZhciBfU3Vic2NyaXB0aW9uPXJlcXVpcmUoJy4vU3Vic2NyaXB0aW9uJyk7dmFyIF9TdWJzY3JpcHRpb24yPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1N1YnNjcmlwdGlvbik7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9O312YXIgT2JzZXJ2ZXJPYmplY3Q9ZnVuY3Rpb24oKXtmdW5jdGlvbiBPYnNlcnZlck9iamVjdChwYXJlbnQsdXJsLGNoaWxkcmVucyl7KDAsX2NsYXNzQ2FsbENoZWNrMy5kZWZhdWx0KSh0aGlzLE9ic2VydmVyT2JqZWN0KTt2YXIgX3RoaXM9dGhpcztfdGhpcy5fcGFyZW50PXBhcmVudDtfdGhpcy5fdXJsPXVybDtfdGhpcy5fY2hpbGRyZW5zPWNoaWxkcmVucztfdGhpcy5fYnVzPXBhcmVudC5fYnVzO190aGlzLl9zdWJzY3JpcHRpb25zPXt9O30oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKE9ic2VydmVyT2JqZWN0LFt7a2V5OidhZGRTdWJzY3JpcHRpb24nLHZhbHVlOmZ1bmN0aW9uIGFkZFN1YnNjcmlwdGlvbihoeXBlcnR5KXt2YXIgX3RoaXM9dGhpcztfdGhpcy5fc3Vic2NyaXB0aW9uc1toeXBlcnR5XT1uZXcgX1N1YnNjcmlwdGlvbjIuZGVmYXVsdChfdGhpcy5fYnVzLGh5cGVydHksX3RoaXMuX3VybCxfdGhpcy5fY2hpbGRyZW5zLGZhbHNlKTt9fSx7a2V5OidyZW1vdmVTdWJzY3JpcHRpb24nLHZhbHVlOmZ1bmN0aW9uIHJlbW92ZVN1YnNjcmlwdGlvbihoeXBlcnR5KXt2YXIgX3RoaXM9dGhpczt2YXIgZG9tYWluPSgwLF91dGlscy5kaXZpZGVVUkwpKGh5cGVydHkpLmRvbWFpbjt2YXIgb2JqVVJMU3Vic2NyaXB0aW9uPV90aGlzLl91cmwrJy9zdWJzY3JpcHRpb24nO3ZhciBzdWJzY3JpcHRpb249X3RoaXMuX3N1YnNjcmlwdGlvbnNbaHlwZXJ0eV07aWYoc3Vic2NyaXB0aW9uKXsgLy91bnN1YnNjcmliZSBtc2cgdG8gdGhlIFJlcG9ydGVyIFNNDQpfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHt0eXBlOid1bnN1YnNjcmliZScsZnJvbTpfdGhpcy5fcGFyZW50Ll91cmwsdG86b2JqVVJMU3Vic2NyaXB0aW9uLGJvZHk6e3Jlc291cmNlOl90aGlzLl91cmx9fSk7IC8vVE9ETzogc2hvdWxkIEkgd2FpdCBmb3IgcmVzcG9uc2UgYmVmb3JlIHVuc3Vic2NyaWJlIG9uIG1zZy1ub2RlDQovL3Vuc3Vic2NyaWJlIG1zZyB0byB0aGUgZG9tYWluIG5vZGUNCl90aGlzLl9idXMucG9zdE1lc3NhZ2Uoe3R5cGU6J3Vuc3Vic2NyaWJlJyxmcm9tOl90aGlzLl9wYXJlbnQuX3VybCx0bzonZG9tYWluOi8vbXNnLW5vZGUuJytkb21haW4rJy9zbScsYm9keTp7cmVzb3VyY2U6X3RoaXMuX3VybCxjaGlsZHJlblJlc291cmNlczpfdGhpcy5fY2hpbGRyZW5zfX0pO3N1YnNjcmlwdGlvbi5fcmVsZWFzZUxpc3RlbmVycygpO2RlbGV0ZSBfdGhpcy5fc3Vic2NyaXB0aW9uc1toeXBlcnR5XTt9fX1dKTtyZXR1cm4gT2JzZXJ2ZXJPYmplY3Q7fSgpO2V4cG9ydHMuZGVmYXVsdD1PYnNlcnZlck9iamVjdDttb2R1bGUuZXhwb3J0cz1leHBvcnRzWydkZWZhdWx0J107DQoNCn0seyIuLi91dGlscy91dGlscyI6NjE1LCIuL1N1YnNjcmlwdGlvbiI6NjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjI4LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjI5fV0sNjExOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KTt2YXIgX3Byb21pc2U9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UnKTt2YXIgX3Byb21pc2UyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb21pc2UpO3ZhciBfa2V5cz1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMnKTt2YXIgX2tleXMyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2tleXMpO3ZhciBfY2xhc3NDYWxsQ2hlY2syPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjaycpO3ZhciBfY2xhc3NDYWxsQ2hlY2szPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzQ2FsbENoZWNrMik7dmFyIF9jcmVhdGVDbGFzczI9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzJyk7dmFyIF9jcmVhdGVDbGFzczM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlQ2xhc3MyKTt2YXIgX3V0aWxzPXJlcXVpcmUoJy4uL3V0aWxzL3V0aWxzJyk7dmFyIF9TdWJzY3JpcHRpb249cmVxdWlyZSgnLi9TdWJzY3JpcHRpb24nKTt2YXIgX1N1YnNjcmlwdGlvbjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfU3Vic2NyaXB0aW9uKTtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian07fXZhciBSZXBvcnRlck9iamVjdD1mdW5jdGlvbigpe2Z1bmN0aW9uIFJlcG9ydGVyT2JqZWN0KHBhcmVudCxvd25lcix1cmwpeygwLF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcyxSZXBvcnRlck9iamVjdCk7dmFyIF90aGlzPXRoaXM7X3RoaXMuX3BhcmVudD1wYXJlbnQ7X3RoaXMuX293bmVyPW93bmVyO190aGlzLl91cmw9dXJsO190aGlzLl9idXM9cGFyZW50Ll9idXM7X3RoaXMuX2RvbWFpbj0oMCxfdXRpbHMuZGl2aWRlVVJMKShvd25lcikuZG9tYWluO190aGlzLl9vYmpTdWJzY3JpcHRvclVSTD1fdGhpcy5fdXJsKycvc3Vic2NyaXB0aW9uJztfdGhpcy5fc3Vic2NyaXB0aW9ucz17fTtfdGhpcy5fY2hpbGRyZW5zPVtdO190aGlzLl9jaGlsZHJlbkxpc3RlbmVycz1bXTtfdGhpcy5fYWxsb2NhdGVMaXN0ZW5lcnMoKTt9KDAsX2NyZWF0ZUNsYXNzMy5kZWZhdWx0KShSZXBvcnRlck9iamVjdCxbe2tleTonX2FsbG9jYXRlTGlzdGVuZXJzJyx2YWx1ZTpmdW5jdGlvbiBfYWxsb2NhdGVMaXN0ZW5lcnMoKXt2YXIgX3RoaXM9dGhpczsgLy9hZGQgb2JqZWN0VVJMIGZvcndhcmQuLi4NCl90aGlzLl9vYmpGb3J3YXJkPV90aGlzLl9idXMuYWRkRm9yd2FyZChfdGhpcy5fdXJsLF90aGlzLl9vd25lcik7IC8vYWRkIHN1YnNjcmlwdGlvbiBsaXN0ZW5lci4uLg0KX3RoaXMuX3N1YnNjcmlwdGlvbkxpc3RlbmVyPV90aGlzLl9idXMuYWRkTGlzdGVuZXIoX3RoaXMuX29ialN1YnNjcmlwdG9yVVJMLGZ1bmN0aW9uKG1zZyl7Y29uc29sZS5sb2coX3RoaXMuX29ialN1YnNjcmlwdG9yVVJMKyctUkNWOiAnLG1zZyk7c3dpdGNoKG1zZy50eXBlKXtjYXNlICdzdWJzY3JpYmUnOl90aGlzLl9vblJlbW90ZVN1YnNjcmliZShtc2cpO2JyZWFrO2Nhc2UgJ3Vuc3Vic2NyaWJlJzpfdGhpcy5fb25SZW1vdGVVblN1YnNjcmliZShtc2cpO2JyZWFrO2Nhc2UgJ3Jlc3BvbnNlJzpfdGhpcy5fb25SZW1vdGVSZXNwb25zZShtc2cpO2JyZWFrO319KTt2YXIgY2hhbmdlVVJMPV90aGlzLl91cmwrJy9jaGFuZ2VzJztfdGhpcy5fY2hhbmdlTGlzdGVuZXI9X3RoaXMuX2J1cy5hZGRMaXN0ZW5lcihjaGFuZ2VVUkwsZnVuY3Rpb24obXNnKXsgLy9UT0RPOiB3aGF0IHRvZG8gaGVyZT8gU2F2ZSBjaGFuZ2VzPw0KY29uc29sZS5sb2coJ1N5bmNoZXJNYW5hZ2VyLScrY2hhbmdlVVJMKyctUkNWOiAnLG1zZyk7fSk7fX0se2tleTonX3JlbGVhc2VMaXN0ZW5lcnMnLHZhbHVlOmZ1bmN0aW9uIF9yZWxlYXNlTGlzdGVuZXJzKCl7dmFyIF90aGlzPXRoaXM7X3RoaXMuX29iakZvcndhcmQucmVtb3ZlKCk7X3RoaXMuX3N1YnNjcmlwdGlvbkxpc3RlbmVyLnJlbW92ZSgpO190aGlzLl9jaGFuZ2VMaXN0ZW5lci5yZW1vdmUoKTtfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbihjbCl7Y2wucmVtb3ZlKCk7fSk7IC8vcmVtb3ZlIGFsbCBzdWJzY3JpcHRpb25zDQooMCxfa2V5czIuZGVmYXVsdCkoX3RoaXMuX3N1YnNjcmlwdGlvbnMpLmZvckVhY2goZnVuY3Rpb24oa2V5KXtfdGhpcy5fc3Vic2NyaXB0aW9uc1trZXldLl9yZWxlYXNlTGlzdGVuZXJzKCk7fSk7fX0se2tleTonYWRkQ2hpbGRyZW5zJyx2YWx1ZTpmdW5jdGlvbiBhZGRDaGlsZHJlbnMoY2hpbGRyZW5zKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXtpZihjaGlsZHJlbnMubGVuZ3RoPT09MCl7cmVzb2x2ZSgpO3JldHVybjt9dmFyIGNoaWxkQmFzZVVSTD1fdGhpcy5fdXJsKycvY2hpbGRyZW4vJztfdGhpcy5fY2hpbGRyZW5zLnB1c2goY2hpbGRyZW5zKTsgLyoNCiAgICAgIF90aGlzLl9jaGlsZHJlbnMuZm9yRWFjaCgoY2hpbGQpID0+IHsNCiAgICAgICAgbGV0IGNoaWxkSWQgPSBjaGlsZEJhc2VVUkwgKyBjaGlsZDsNCg0KICAgICAgICBsZXQgc2VsZkZvcndhcmQgPSBfdGhpcy5fYnVzLmFkZEZvcndhcmQoY2hpbGRJZCwgb3duZXIpOw0KICAgICAgICBfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMucHVzaChzZWxmRm9yd2FyZCk7DQogICAgICB9KTsqL3ZhciBzdWJzY3JpcHRpb25zPVtdO2NoaWxkcmVucy5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkKXtyZXR1cm4gc3Vic2NyaXB0aW9ucy5wdXNoKGNoaWxkQmFzZVVSTCtjaGlsZCk7fSk7dmFyIG5vZGVTdWJzY3JpYmVNc2c9e3R5cGU6J3N1YnNjcmliZScsZnJvbTpfdGhpcy5fcGFyZW50Ll91cmwsdG86J2RvbWFpbjovL21zZy1ub2RlLicrX3RoaXMuX2RvbWFpbisnL3NtJyxib2R5OntzdWJzY3JpYmU6c3Vic2NyaXB0aW9ucyxzb3VyY2U6X3RoaXMuX293bmVyfX07X3RoaXMuX2J1cy5wb3N0TWVzc2FnZShub2RlU3Vic2NyaWJlTXNnLGZ1bmN0aW9uKHJlcGx5KXtjb25zb2xlLmxvZygnbm9kZS1zdWJzY3JpYmUtcmVzcG9uc2UocmVwb3J0ZXIpOiAnLHJlcGx5KTtpZihyZXBseS5ib2R5LmNvZGU9PT0yMDApeyAvL2FkZCBjaGlsZHJlbiBsaXN0ZW5lcnMgb24gbG9jYWwgLi4uDQpzdWJzY3JpcHRpb25zLmZvckVhY2goZnVuY3Rpb24oY2hpbGRVUkwpe3ZhciBjaGlsZExpc3RlbmVyPV90aGlzLl9idXMuYWRkTGlzdGVuZXIoY2hpbGRVUkwsZnVuY3Rpb24obXNnKXsgLy9UT0RPOiB3aGF0IHRvZG8gaGVyZT8gU2F2ZSBjaGlsZHJlbnM/DQpjb25zb2xlLmxvZygnU3luY2hlck1hbmFnZXItJytjaGlsZFVSTCsnLVJDVjogJyxtc2cpO30pO190aGlzLl9jaGlsZHJlbkxpc3RlbmVycy5wdXNoKGNoaWxkTGlzdGVuZXIpO3ZhciBzZWxmRm9yd2FyZD1fdGhpcy5fYnVzLmFkZEZvcndhcmQoY2hpbGRVUkwsX3RoaXMuX293bmVyKTtfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMucHVzaChzZWxmRm9yd2FyZCk7fSk7cmVzb2x2ZSgpO31lbHNlIHtyZWplY3QoJ0Vycm9yIG9uIG1zZy1ub2RlIHN1YnNjcmlwdGlvbjogJytyZXBseS5ib2R5LmRlc2MpO319KTt9KTt9fSx7a2V5OidkZWxldGUnLHZhbHVlOmZ1bmN0aW9uIF9kZWxldGUoKXt2YXIgX3RoaXM9dGhpczt2YXIgZG9tYWluPSgwLF91dGlscy5kaXZpZGVVUkwpKF90aGlzLl9vd25lcikuZG9tYWluOyAvL2RlbGV0ZSBtc2cgdG8gYWxsIHN1YnNjcmlwdGlvbnMNCl90aGlzLl9idXMucG9zdE1lc3NhZ2Uoe3R5cGU6J2RlbGV0ZScsZnJvbTpfdGhpcy5fb2JqU3Vic2NyaXB0b3JVUkwsdG86X3RoaXMuX3VybCsnL2NoYW5nZXMnfSk7IC8vVE9ETzogY2hhbmdlIGRlbGV0ZSBzcGVjIQ0KX3RoaXMuX2J1cy5wb3N0TWVzc2FnZSh7dHlwZTonZGVsZXRlJyxmcm9tOl90aGlzLl9wYXJlbnQuX3VybCx0bzonZG9tYWluOi8vbXNnLW5vZGUuJytkb21haW4rJy9vYmplY3QtYWRkcmVzcy1hbGxvY2F0aW9uJyxib2R5OntyZXNvdXJjZTpfdGhpcy5fdXJsLGNoaWxkcmVuUmVzb3VyY2VzOl90aGlzLl9jaGlsZHJlbnN9fSk7X3RoaXMuX3JlbGVhc2VMaXN0ZW5lcnMoKTtkZWxldGUgX3RoaXMuX3BhcmVudC5fcmVwb3J0ZXJzW190aGlzLl91cmxdO319LHtrZXk6J19vblJlbW90ZVJlc3BvbnNlJyx2YWx1ZTpmdW5jdGlvbiBfb25SZW1vdGVSZXNwb25zZShtc2cpe3ZhciBfdGhpcz10aGlzO190aGlzLl9idXMucG9zdE1lc3NhZ2Uoe2lkOm1zZy5pZCx0eXBlOidyZXNwb25zZScsZnJvbTptc2cudG8sdG86X3RoaXMuX3VybCxib2R5Ontjb2RlOm1zZy5ib2R5LmNvZGUsc291cmNlOm1zZy5mcm9tfX0pO319LHtrZXk6J19vblJlbW90ZVN1YnNjcmliZScsdmFsdWU6ZnVuY3Rpb24gX29uUmVtb3RlU3Vic2NyaWJlKG1zZyl7dmFyIF90aGlzPXRoaXM7dmFyIGh5cGVydHlVUkw9bXNnLmJvZHkuc3Vic2NyaWJlcjsgLy92YWxpZGF0ZSBpZiBzdWJzY3JpcHRpb24gYWxyZWFkeSBleGlzdHM/DQppZihfdGhpcy5fc3Vic2NyaXB0aW9uc1toeXBlcnR5VVJMXSl7dmFyIGVycm9yTXNnPXtpZDptc2cuaWQsdHlwZToncmVzcG9uc2UnLGZyb206bXNnLnRvLHRvOmh5cGVydHlVUkwsYm9keTp7Y29kZTo1MDAsZGVzYzonU3Vic2NyaXB0aW9uIGZvciAoJytfdGhpcy5fdXJsKycgOiAnK2h5cGVydHlVUkwrJykgYWxyZWFkeSBleGlzdHMhJ319O190aGlzLl9idXMucG9zdE1lc3NhZ2UoZXJyb3JNc2cpO3JldHVybjt9IC8vYXNrIHRvIHN1YnNjcmliZSB0byBTeW5jaGVyPyAoZGVwZW5kcyBvbiB0aGUgb3BlcmF0aW9uIG1vZGUpDQovL1RPRE86IGdldCBtb2RlIGZyb20gb2JqZWN0IQ0KdmFyIG1vZGU9J3N1Yi9wdWInO2lmKG1vZGU9PT0nc3ViL3B1YicpeyAvL2ZvcndhcmQgdG8gSHlwZXJ0eSBvd25lcg0KdmFyIGZvcndhcmRNc2c9e3R5cGU6J2ZvcndhcmQnLGZyb206X3RoaXMuX3VybCx0bzpfdGhpcy5fb3duZXIsYm9keTp7dHlwZTptc2cudHlwZSxmcm9tOmh5cGVydHlVUkwsdG86X3RoaXMuX3VybH19O190aGlzLl9idXMucG9zdE1lc3NhZ2UoZm9yd2FyZE1zZyxmdW5jdGlvbihyZXBseSl7Y29uc29sZS5sb2coJ2ZvcndhcmQtcmVwbHk6ICcscmVwbHkpO2lmKHJlcGx5LmJvZHkuY29kZT09PTIwMCl7X3RoaXMuX3N1YnNjcmlwdGlvbnNbaHlwZXJ0eVVSTF09bmV3IF9TdWJzY3JpcHRpb24yLmRlZmF1bHQoX3RoaXMuX2J1cyxfdGhpcy5fb3duZXIsX3RoaXMuX3VybCxfdGhpcy5fY2hpbGRyZW5zLHRydWUpO30gLy9zZW5kIHN1YnNjcmliZS1yZXNwb25zZQ0KX3RoaXMuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6bXNnLmlkLHR5cGU6J3Jlc3BvbnNlJyxmcm9tOm1zZy50byx0bzptc2cuZnJvbSxib2R5OnJlcGx5LmJvZHl9KTt9KTt9fX0se2tleTonX29uUmVtb3RlVW5TdWJzY3JpYmUnLHZhbHVlOmZ1bmN0aW9uIF9vblJlbW90ZVVuU3Vic2NyaWJlKG1zZyl7dmFyIF90aGlzPXRoaXM7dmFyIGh5cGVydHlVUkw9bXNnLmJvZHkuc3Vic2NyaWJlcjt2YXIgc3Vic2NyaXB0aW9uPV90aGlzLl9zdWJzY3JpcHRpb25zW2h5cGVydHlVUkxdO2lmKHN1YnNjcmlwdGlvbil7c3Vic2NyaXB0aW9uLl9yZWxlYXNlTGlzdGVuZXJzKCk7ZGVsZXRlIF90aGlzLl9zdWJzY3JpcHRpb25zW2h5cGVydHlVUkxdOyAvL1RPRE86IHNlbmQgdW4tc3Vic2NyaWJlIG1lc3NhZ2UgdG8gU3luY2hlcj8gKGRlcGVuZHMgb24gdGhlIG9wZXJhdGlvbiBtb2RlKQ0KfX19XSk7cmV0dXJuIFJlcG9ydGVyT2JqZWN0O30oKTtleHBvcnRzLmRlZmF1bHQ9UmVwb3J0ZXJPYmplY3Q7bW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1snZGVmYXVsdCddOw0KDQp9LHsiLi4vdXRpbHMvdXRpbHMiOjYxNSwiLi9TdWJzY3JpcHRpb24iOjYxMiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIjoyMywiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiOjI1LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjI4LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjI5fV0sNjEyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KTt2YXIgX2NsYXNzQ2FsbENoZWNrMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2snKTt2YXIgX2NsYXNzQ2FsbENoZWNrMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO3ZhciBfY3JlYXRlQ2xhc3MyPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcycpO3ZhciBfY3JlYXRlQ2xhc3MzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUNsYXNzMik7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9O312YXIgU3Vic2NyaXB0aW9uPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gU3Vic2NyaXB0aW9uKGJ1cyxvd25lcix1cmwsY2hpbGRyZW5zLGlzUmVwb3J0ZXIpeygwLF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcyxTdWJzY3JpcHRpb24pO3ZhciBfdGhpcz10aGlzO3ZhciBjaGlsZEJhc2VVUkw9dXJsKycvY2hpbGRyZW4vJzt2YXIgY2hhbmdlVVJMPXVybCsnL2NoYW5nZXMnOyAvL3Byb2Nlc3MgZGVsZXRlIG1lc3NhZ2UNCl90aGlzLl9kZWxldGVMaXN0ZW5lcj1idXMuYWRkTGlzdGVuZXIoY2hhbmdlVVJMLGZ1bmN0aW9uKG1zZyl7aWYobXNnLnR5cGU9PT0nZGVsZXRlJyl7Y29uc29sZS5sb2coJ1N1YnNjcmlwdGlvbi1ERUxFVEU6ICcsbXNnKTt2YXIgZGVsZXRlTWVzc2FnZVRvSHlwZXJ0eT17dHlwZTonZGVsZXRlJyxmcm9tOm1zZy5mcm9tLHRvOm93bmVyLGJvZHk6e3Jlc291cmNlOnVybH19OyAvL3NlbmQgZGVsZXRlIHRvIGh5cGVydHkNCmJ1cy5wb3N0TWVzc2FnZShkZWxldGVNZXNzYWdlVG9IeXBlcnR5LGZ1bmN0aW9uKHJlcGx5KXtjb25zb2xlLmxvZygnU3Vic2NyaXB0aW9uLURFTEVURS1SRVBMWTogJyxyZXBseSk7aWYocmVwbHkuYm9keS5jb2RlPT09MjAwKXtfdGhpcy5fcmVsZWFzZUxpc3RlbmVycygpO319KTt9fSk7IC8vYWRkIGNoYW5nZSBwdWJsaXNoIGFkZHJlc3Mgb3IgZm9yd2FyZA0KaWYoaXNSZXBvcnRlcil7X3RoaXMuX2NoYW5nZUxpc3RlbmVyPWJ1cy5hZGRQdWJsaXNoKGNoYW5nZVVSTCk7fWVsc2Uge190aGlzLl9jaGFuZ2VMaXN0ZW5lcj1idXMuYWRkRm9yd2FyZChjaGFuZ2VVUkwsb3duZXIpO31fdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnM9W107Y2hpbGRyZW5zLmZvckVhY2goZnVuY3Rpb24oY2hpbGQpe3ZhciBjaGlsZElkPWNoaWxkQmFzZVVSTCtjaGlsZDsgLy9hZGQgY2hpbGRyZW4gcHVibGlzaCBhZGRyZXNzDQp2YXIgY2hpbGRyZW5Gb3J3YXJkPWJ1cy5hZGRQdWJsaXNoKGNoaWxkSWQpO190aGlzLl9jaGlsZHJlbkxpc3RlbmVycy5wdXNoKGNoaWxkcmVuRm9yd2FyZCk7IC8vYWRkIHNlbGYgZm9yd2FyZCBpZiBhbiBvYnNlcnZlcg0KaWYoIWlzUmVwb3J0ZXIpe3ZhciBzZWxmRm9yd2FyZD1idXMuYWRkRm9yd2FyZChjaGlsZElkLG93bmVyKTtfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMucHVzaChzZWxmRm9yd2FyZCk7fX0pO30oMCxfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKFN1YnNjcmlwdGlvbixbe2tleTonX3JlbGVhc2VMaXN0ZW5lcnMnLHZhbHVlOmZ1bmN0aW9uIF9yZWxlYXNlTGlzdGVuZXJzKCl7dmFyIF90aGlzPXRoaXM7X3RoaXMuX2RlbGV0ZUxpc3RlbmVyLnJlbW92ZSgpO190aGlzLl9jaGFuZ2VMaXN0ZW5lci5yZW1vdmUoKTtfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbihmb3J3YXJkKXtmb3J3YXJkLnJlbW92ZSgpO30pO319XSk7cmV0dXJuIFN1YnNjcmlwdGlvbjt9KCk7ZXhwb3J0cy5kZWZhdWx0PVN1YnNjcmlwdGlvbjttb2R1bGUuZXhwb3J0cz1leHBvcnRzWydkZWZhdWx0J107DQoNCn0seyJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjI4LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjI5fV0sNjEzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KTt2YXIgX2NsYXNzQ2FsbENoZWNrMj1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2snKTt2YXIgX2NsYXNzQ2FsbENoZWNrMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO3ZhciBfY3JlYXRlQ2xhc3MyPXJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcycpO3ZhciBfY3JlYXRlQ2xhc3MzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUNsYXNzMik7dmFyIF91dGlscz1yZXF1aXJlKCcuLi91dGlscy91dGlscycpO3ZhciBfT2JqZWN0QWxsb2NhdGlvbj1yZXF1aXJlKCcuL09iamVjdEFsbG9jYXRpb24nKTt2YXIgX09iamVjdEFsbG9jYXRpb24yPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX09iamVjdEFsbG9jYXRpb24pO3ZhciBfUmVwb3J0ZXJPYmplY3Q9cmVxdWlyZSgnLi9SZXBvcnRlck9iamVjdCcpO3ZhciBfUmVwb3J0ZXJPYmplY3QyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1JlcG9ydGVyT2JqZWN0KTt2YXIgX09ic2VydmVyT2JqZWN0PXJlcXVpcmUoJy4vT2JzZXJ2ZXJPYmplY3QnKTt2YXIgX09ic2VydmVyT2JqZWN0Mj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9PYnNlcnZlck9iamVjdCk7dmFyIF9NZXNzYWdlRmFjdG9yeT1yZXF1aXJlKCdzZXJ2aWNlLWZyYW1ld29yay9kaXN0L01lc3NhZ2VGYWN0b3J5Jyk7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9O30gLyoqDQogKiBAYXV0aG9yIG1pY2FlbHBlZHJvc2FAZ21haWwuY29tDQogKiBDb3JlIFN5bmNyb25pemF0aW9uIHN5c3RlbS4NCiAqL3ZhciBTeW5jaGVyTWFuYWdlcj1mdW5jdGlvbigpeyAvKiBwcml2YXRlDQogIF91cmw6IFVSTA0KICBfYnVzOiBNaW5pQnVzDQogIF9yZWdpc3RyeTogUmVnaXN0cnkNCiAgX2FsbG9jYXRvcjogT2JqZWN0QWxsb2NhdGlvbg0KDQogIF9yZXBvcnRlcnM6IHsgT2JqZWN0VVJMOiBSZXBvcnRlck9iamVjdCB9DQogIF9vYnNlcnZlcnM6IHsgT2JqZWN0VVJMOiBPYnNlcnZlck9iamVjdCB9DQogICovZnVuY3Rpb24gU3luY2hlck1hbmFnZXIocnVudGltZVVSTCxidXMscmVnaXN0cnksY2F0YWxvZyxhbGxvY2F0b3IpeygwLF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcyxTeW5jaGVyTWFuYWdlcik7dmFyIF90aGlzPXRoaXM7X3RoaXMuX2J1cz1idXM7X3RoaXMuX3JlZ2lzdHJ5PXJlZ2lzdHJ5O190aGlzLl9jYXRhbG9nPWNhdGFsb2c7IC8vVE9ETzogdGhlc2Ugc2hvdWxkIGJlIHNhdmVkIGluIHBlcnNpc3RlbmNlIGVuZ2luZT8NCl90aGlzLl91cmw9cnVudGltZVVSTCsnL3NtJztfdGhpcy5fb2JqZWN0VVJMPXJ1bnRpbWVVUkwrJy9vYmplY3QtYWxsb2NhdGlvbic7X3RoaXMuX3JlcG9ydGVycz17fTtfdGhpcy5fb2JzZXJ2ZXJzPXt9OyAvL1RPRE86IHRoaXMgc2hvdWxkIG5vdCBiZSBoYXJkY29kZWQhDQpfdGhpcy5fZG9tYWluPSgwLF91dGlscy5kaXZpZGVVUkwpKHJ1bnRpbWVVUkwpLmRvbWFpbjtfdGhpcy5fbWY9bmV3IF9NZXNzYWdlRmFjdG9yeS5NZXNzYWdlRmFjdG9yeShmYWxzZSx7fSk7aWYoYWxsb2NhdG9yKXtfdGhpcy5fYWxsb2NhdG9yPWFsbG9jYXRvcjt9ZWxzZSB7X3RoaXMuX2FsbG9jYXRvcj1uZXcgX09iamVjdEFsbG9jYXRpb24yLmRlZmF1bHQoX3RoaXMuX29iamVjdFVSTCxidXMpO31idXMuYWRkTGlzdGVuZXIoX3RoaXMuX3VybCxmdW5jdGlvbihtc2cpe2NvbnNvbGUubG9nKCdTeW5jaGVyTWFuYWdlci1SQ1Y6ICcsbXNnKTtzd2l0Y2gobXNnLnR5cGUpe2Nhc2UgJ2NyZWF0ZSc6X3RoaXMuX29uQ3JlYXRlKG1zZyk7YnJlYWs7Y2FzZSAnZGVsZXRlJzpfdGhpcy5fb25EZWxldGUobXNnKTticmVhaztjYXNlICdzdWJzY3JpYmUnOl90aGlzLl9vbkxvY2FsU3Vic2NyaWJlKG1zZyk7YnJlYWs7Y2FzZSAndW5zdWJzY3JpYmUnOl90aGlzLl9vbkxvY2FsVW5TdWJzY3JpYmUobXNnKTticmVhazt9fSk7fSgwLF9jcmVhdGVDbGFzczMuZGVmYXVsdCkoU3luY2hlck1hbmFnZXIsW3trZXk6J19vbkNyZWF0ZScsdmFsdWU6ZnVuY3Rpb24gX29uQ3JlYXRlKG1zZyl7dmFyIF90aGlzPXRoaXM7dmFyIG93bmVyPW1zZy5mcm9tO3ZhciBkb21haW49KDAsX3V0aWxzLmRpdmlkZVVSTCkobXNnLmZyb20pLmRvbWFpbjtpZihtc2cuYm9keS5yZXNvdXJjZSl7X3RoaXMuX2F1dGhvcmlzZShtc2csbXNnLmJvZHkucmVzb3VyY2UpO3JldHVybjt9IC8vZ2V0IHNjaGVtYSBmcm9tIGNhdGFsb2d1ZSBhbmQgcGFyc2UgLT4gKHNjaGVtZSwgY2hpbGRyZW4pDQpfdGhpcy5fY2F0YWxvZy5nZXREYXRhU2NoZW1hRGVzY3JpcHRvcihtc2cuYm9keS5zY2hlbWEpLnRoZW4oZnVuY3Rpb24oZGVzY3JpcHRvcil7dmFyIHByb3BlcnRpZXM9ZGVzY3JpcHRvci5zb3VyY2VQYWNrYWdlLnNvdXJjZUNvZGUucHJvcGVydGllczt2YXIgc2NoZW1lPXByb3BlcnRpZXMuc2NoZW1lP3Byb3BlcnRpZXMuc2NoZW1lLmNvbnN0YW50OidyZXNvdXJjZSc7dmFyIGNoaWxkcmVucz1wcm9wZXJ0aWVzLmNoaWxkcmVuP3Byb3BlcnRpZXMuY2hpbGRyZW4uY29uc3RhbnQ6W107Y29uc29sZS5sb2coJ1NjaGVtZTogJyxzY2hlbWUpO190aGlzLl9hbGxvY2F0b3IuY3JlYXRlKGRvbWFpbixzY2hlbWUsMSkudGhlbihmdW5jdGlvbihhbGxvY2F0ZWQpe3ZhciBvYmpVUkw9YWxsb2NhdGVkWzBdO2NvbnNvbGUubG9nKCdBTExPQ0FUT1IgQ1JFQVRFOicsYWxsb2NhdGVkKTsgLy9UbyByZWdpc3RlciB0aGUgZGF0YU9iamVjdCBpbiB0aGUgcnVudGltZVJlZ2lzdHJ5DQpfdGhpcy5fcmVnaXN0cnkucmVnaXN0ZXJEYXRhT2JqZWN0KG1zZy5ib2R5LnZhbHVlLm5hbWUsbXNnLmJvZHkudmFsdWUuc2NoZW1hLG9ialVSTCxtc2cuYm9keS52YWx1ZS5yZXBvcnRlcixtc2cuYm9keS5hdXRob3Jpc2UpLnRoZW4oZnVuY3Rpb24ocmVzb2x2ZSl7Y29uc29sZS5sb2coJ0RhdGFPYmplY3Qgc3VjY2Vzc2Z1bGx5IHJlZ2lzdGVyZWQnLHJlc29sdmUpO3ZhciByZXBvcnRlcj1uZXcgX1JlcG9ydGVyT2JqZWN0Mi5kZWZhdWx0KF90aGlzLG93bmVyLG9ialVSTCk7cmVwb3J0ZXIuYWRkQ2hpbGRyZW5zKGNoaWxkcmVucykudGhlbihmdW5jdGlvbigpe190aGlzLl9yZXBvcnRlcnNbb2JqVVJMXT1yZXBvcnRlcjsgLy9hbGwgb2ssIHNlbmQgcmVzcG9uc2UNCl90aGlzLl9idXMucG9zdE1lc3NhZ2Uoe2lkOm1zZy5pZCx0eXBlOidyZXNwb25zZScsZnJvbTptc2cudG8sdG86b3duZXIsYm9keTp7Y29kZToyMDAscmVzb3VyY2U6b2JqVVJMLGNoaWxkcmVuUmVzb3VyY2VzOmNoaWxkcmVuc319KTsgLy9zZW5kIGNyZWF0ZSB0byBhbGwgb2JzZXJ2ZXJzLCByZXNwb25zZXMgd2lsbCBiZSBkZWxpdmVyIHRvIHRoZSBIeXBlcnR5IG93bmVyPw0KLy9zY2hlZHVsZSBmb3IgbmV4dCBjeWNsZSBuZWVkZWQsIGJlY2F1c2UgdGhlIFJlcG9ydGVyIHNob3VsZCBiZSBhdmFpbGFibGUuDQpzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7X3RoaXMuX2F1dGhvcmlzZShtc2csb2JqVVJMKTt9KTt9KTt9LGZ1bmN0aW9uKGVycm9yKXtjb25zb2xlLmVycm9yKGVycm9yKTt9KTt9KTt9KS5jYXRjaChmdW5jdGlvbihyZWFzb24peyAvKnsNCiAgICAgICAgaWQ6IG1zZy5pZCwgdHlwZTogJ3Jlc3BvbnNlJywgZnJvbTogbXNnLnRvLCB0bzogb3duZXIsDQogICAgICAgIGJvZHk6IHsgY29kZTogNTAwLCBkZXNjOiByZWFzb24gfQ0KICAgICAgfSovIC8vIGxldCByZXNwb25zZU1zZyA9IF90aGlzLl9tZi5jcmVhdGVNZXNzYWdlUmVzcG9uc2UobXNnLCA1MDApOw0KdmFyIHJlc3BvbnNlTXNnPXtpZDptc2cuaWQsdHlwZToncmVzcG9uc2UnLGZyb206bXNnLnRvLHRvOm93bmVyLGJvZHk6e2NvZGU6NTAwLGRlc2M6cmVhc29ufX07X3RoaXMuX2J1cy5wb3N0TWVzc2FnZShyZXNwb25zZU1zZyk7fSk7fX0se2tleTonX2F1dGhvcmlzZScsdmFsdWU6ZnVuY3Rpb24gX2F1dGhvcmlzZShtc2csb2JqVVJMKXt2YXIgX3RoaXM9dGhpczt2YXIgb2JqU3Vic2NyaXB0b3JVUkw9b2JqVVJMKycvc3Vic2NyaXB0aW9uJzttc2cuYm9keS5hdXRob3Jpc2UuZm9yRWFjaChmdW5jdGlvbihoeXBlcnR5VVJMKXtfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHt0eXBlOidjcmVhdGUnLGZyb206b2JqU3Vic2NyaXB0b3JVUkwsdG86aHlwZXJ0eVVSTCxib2R5Ontzb3VyY2U6bXNnLmZyb20sdmFsdWU6bXNnLmJvZHkudmFsdWUsc2NoZW1hOm1zZy5ib2R5LnNjaGVtYX19KTt9KTt9fSx7a2V5Oidfb25EZWxldGUnLHZhbHVlOmZ1bmN0aW9uIF9vbkRlbGV0ZShtc2cpe3ZhciBfdGhpcz10aGlzO3ZhciBvYmpVUkw9bXNnLmJvZHkucmVzb3VyY2U7dmFyIG9iamVjdD1fdGhpcy5fcmVwb3J0ZXJzW29ialVSTF07aWYob2JqZWN0KXsgLy9UT0RPOiBpcyB0aGVyZSBhbnkgcG9saWN5IHZlcmlmaWNhdGlvbiBiZWZvcmUgZGVsZXRlPw0Kb2JqZWN0LmRlbGV0ZSgpOyAvL1RPRE86IHVucmVnaXN0ZXIgb2JqZWN0Pw0KX3RoaXMuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6bXNnLmlkLHR5cGU6J3Jlc3BvbnNlJyxmcm9tOm1zZy50byx0bzptc2cuZnJvbSxib2R5Ontjb2RlOjIwMH19KTt9fX0se2tleTonX29uTG9jYWxTdWJzY3JpYmUnLHZhbHVlOmZ1bmN0aW9uIF9vbkxvY2FsU3Vic2NyaWJlKG1zZyl7dmFyIF90aGlzMj10aGlzO3ZhciBfdGhpcz10aGlzO3ZhciBoeXBlcnR5VVJMPW1zZy5mcm9tO3ZhciBvYmpVUkw9bXNnLmJvZHkucmVzb3VyY2U7dmFyIG9ialVSTFN1YnNjcmlwdGlvbj1vYmpVUkwrJy9zdWJzY3JpcHRpb24nO3ZhciBjaGlsZEJhc2VVUkw9b2JqVVJMKycvY2hpbGRyZW4vJzt2YXIgZG9tYWluPSgwLF91dGlscy5kaXZpZGVVUkwpKG9ialVSTCkuZG9tYWluOyAvL2dldCBzY2hlbWEgZnJvbSBjYXRhbG9ndWUgYW5kIHBhcnNlIC0+IChjaGlsZHJlbikNCl90aGlzLl9jYXRhbG9nLmdldERhdGFTY2hlbWFEZXNjcmlwdG9yKG1zZy5ib2R5LnNjaGVtYSkudGhlbihmdW5jdGlvbihkZXNjcmlwdG9yKXt2YXIgcHJvcGVydGllcz1kZXNjcmlwdG9yLnNvdXJjZVBhY2thZ2Uuc291cmNlQ29kZS5wcm9wZXJ0aWVzO3ZhciBjaGlsZHJlbnM9cHJvcGVydGllcy5jaGlsZHJlbj9wcm9wZXJ0aWVzLmNoaWxkcmVuLmNvbnN0YW50OltdOyAvL2NoaWxkcmVuIGFkZHJlc3Nlcw0KdmFyIHN1YnNjcmlwdGlvbnM9W107c3Vic2NyaXB0aW9ucy5wdXNoKG9ialVSTCsnL2NoYW5nZXMnKTtjaGlsZHJlbnMuZm9yRWFjaChmdW5jdGlvbihjaGlsZCl7cmV0dXJuIHN1YnNjcmlwdGlvbnMucHVzaChjaGlsZEJhc2VVUkwrY2hpbGQpO30pOyAvL3N1YnNjcmliZSBtc2cgZm9yIHRoZSBkb21haW4gbm9kZQ0KdmFyIG5vZGVTdWJzY3JpYmVNc2c9e3R5cGU6J3N1YnNjcmliZScsZnJvbTpfdGhpcy5fdXJsLHRvOidkb21haW46Ly9tc2ctbm9kZS4nK2RvbWFpbisnL3NtJyxib2R5OntzdWJzY3JpYmU6c3Vic2NyaXB0aW9ucyxzb3VyY2U6aHlwZXJ0eVVSTH19OyAvL3N1YnNjcmliZSBpbiBtc2ctbm9kZQ0KX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShub2RlU3Vic2NyaWJlTXNnLGZ1bmN0aW9uKHJlcGx5KXtjb25zb2xlLmxvZygnbm9kZS1zdWJzY3JpYmUtcmVzcG9uc2Uob2JzZXJ2ZXIpOiAnLHJlcGx5KTtpZihyZXBseS5ib2R5LmNvZGU9PT0yMDApeyAvL3NlbmQgcHJvdmlzaW9uYWwgcmVzcG9uc2UNCl90aGlzLl9idXMucG9zdE1lc3NhZ2Uoe2lkOm1zZy5pZCx0eXBlOidyZXNwb25zZScsZnJvbTptc2cudG8sdG86aHlwZXJ0eVVSTCxib2R5Ontjb2RlOjEwMCxjaGlsZHJlblJlc291cmNlczpjaGlsZHJlbnN9fSk7dmFyIG9ialN1YnNjcmliZU1zZz17dHlwZTonc3Vic2NyaWJlJyxmcm9tOl90aGlzLl91cmwsdG86b2JqVVJMU3Vic2NyaXB0aW9uLGJvZHk6e3N1YnNjcmliZXI6aHlwZXJ0eVVSTH19OyAvL3N1YnNjcmliZSB0byByZXBvcnRlciBTTQ0KX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShvYmpTdWJzY3JpYmVNc2csZnVuY3Rpb24ocmVwbHkpe2NvbnNvbGUubG9nKCdyZXBvcnRlci1zdWJzY3JpYmUtcmVzcG9uc2U6ICcscmVwbHkpO2lmKHJlcGx5LmJvZHkuY29kZT09PTIwMCl7dmFyIG9ic2VydmVyPV90aGlzLl9vYnNlcnZlcnNbb2JqVVJMXTtpZighb2JzZXJ2ZXIpe29ic2VydmVyPW5ldyBfT2JzZXJ2ZXJPYmplY3QyLmRlZmF1bHQoX3RoaXMsb2JqVVJMLGNoaWxkcmVucyk7X3RoaXMuX29ic2VydmVyc1tvYmpVUkxdPW9ic2VydmVyO31vYnNlcnZlci5hZGRTdWJzY3JpcHRpb24oaHlwZXJ0eVVSTCk7IC8vZm9yd2FyZCB0byBoeXBlcnR5Og0KcmVwbHkuaWQ9bXNnLmlkO3JlcGx5LmZyb209X3RoaXMuX3VybDtyZXBseS50bz1oeXBlcnR5VVJMO190aGlzMi5fYnVzLnBvc3RNZXNzYWdlKHJlcGx5KTt9fSk7fWVsc2UgeyAvL2xpc3RlbmVyIHJlamVjdGVkDQpfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHtpZDptc2cuaWQsdHlwZToncmVzcG9uc2UnLGZyb206bXNnLnRvLHRvOmh5cGVydHlVUkwsYm9keTpyZXBseS5ib2R5fSk7fX0pO30pO319LHtrZXk6J19vbkxvY2FsVW5TdWJzY3JpYmUnLHZhbHVlOmZ1bmN0aW9uIF9vbkxvY2FsVW5TdWJzY3JpYmUobXNnKXt2YXIgX3RoaXM9dGhpczt2YXIgaHlwZXJ0eVVSTD1tc2cuZnJvbTt2YXIgb2JqVVJMPW1zZy5ib2R5LnJlc291cmNlO3ZhciBvYnNlcnZlcj1fdGhpcy5fb2JzZXJ2ZXJzW29ialVSTF07aWYob2JzZXJ2ZXIpeyAvL1RPRE86IGlzIHRoZXJlIGFueSBwb2xpY3kgdmVyaWZpY2F0aW9uIGJlZm9yZSBkZWxldGU/DQpvYnNlcnZlci5yZW1vdmVTdWJzY3JpcHRpb24oaHlwZXJ0eVVSTCk7IC8vVE9ETzogZGVzdHJveSBvYmplY3QgaW4gdGhlIHJlZ2lzdHJ5Pw0KX3RoaXMuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6bXNnLmlkLHR5cGU6J3Jlc3BvbnNlJyxmcm9tOm1zZy50byx0bzptc2cuZnJvbSxib2R5Ontjb2RlOjIwMH19KTsgLy9UT0RPOiByZW1vdmUgT2JqZWN0IGlmIG5vIG1vcmUgc3Vic2NyaXB0aW9uPw0KLy9kZWxldGUgX3RoaXMuX29ic2VydmVyc1tvYmpVUkxdOw0KfX19LHtrZXk6J3VybCcsZ2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLl91cmw7fX1dKTtyZXR1cm4gU3luY2hlck1hbmFnZXI7fSgpOyAvKioNCiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBDQoqIENvcHlyaWdodCAyMDE2IElORVNDLUlEDQoqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTA0KKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVg0KKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0ENCiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRw0KKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWUNCiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU4NCioNCiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQoqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4NCiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQoqDQoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQoqDQoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQoqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQoqKi9leHBvcnRzLmRlZmF1bHQ9U3luY2hlck1hbmFnZXI7bW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1snZGVmYXVsdCddOw0KDQp9LHsiLi4vdXRpbHMvdXRpbHMiOjYxNSwiLi9PYmplY3RBbGxvY2F0aW9uIjo2MDksIi4vT2JzZXJ2ZXJPYmplY3QiOjYxMCwiLi9SZXBvcnRlck9iamVjdCI6NjExLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjI4LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjI5LCJzZXJ2aWNlLWZyYW1ld29yay9kaXN0L01lc3NhZ2VGYWN0b3J5Ijo1NzB9XSw2MTQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpew0KInVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCJfX2VzTW9kdWxlIix7dmFsdWU6dHJ1ZX0pO3ZhciBfY2xhc3NDYWxsQ2hlY2syPXJlcXVpcmUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpO3ZhciBfY2xhc3NDYWxsQ2hlY2szPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzQ2FsbENoZWNrMik7dmFyIF9jcmVhdGVDbGFzczI9cmVxdWlyZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIik7dmFyIF9jcmVhdGVDbGFzczM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlQ2xhc3MyKTtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian07fSAvKioNCiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBDQoqIENvcHlyaWdodCAyMDE2IElORVNDLUlEDQoqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTA0KKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVg0KKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0ENCiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRw0KKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWUNCiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU4NCioNCiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQoqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4NCiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQoqDQoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQoqDQoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQoqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQoqKi8gLyoqDQogKiBFdmVudEVtaXR0ZXINCiAqIEFsbCBjbGFzc2VzIHdoaWNoIGV4dGVuZHMgdGhpcywgY2FuIGhhdmUgYWRkRXZlbnRMaXN0ZW5lciBhbmQgdHJpZ2dlciBldmVudHM7DQogKi92YXIgRXZlbnRFbWl0dGVyPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCl7KDAsX2NsYXNzQ2FsbENoZWNrMy5kZWZhdWx0KSh0aGlzLEV2ZW50RW1pdHRlcik7fSgwLF9jcmVhdGVDbGFzczMuZGVmYXVsdCkoRXZlbnRFbWl0dGVyLFt7a2V5OiJhZGRFdmVudExpc3RlbmVyIiwgLyoqDQogICAqIGFkZEV2ZW50TGlzdGVuZXIgbGlzdGVuIGZvciBhbiBldmVudFR5cGUNCiAgICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgIGV2ZW50VHlwZSAtIGxpc3RlbmluZyBmb3IgdGhpcyB0eXBlIG9mIGV2ZW50DQogICAqIEBwYXJhbSAge0Z1bmN0aW9ufSAgICAgICBjYiAgICAgICAgLSBjYWxsYmFjayBmdW5jdGlvbiB3aWxsIGJlIGV4ZWN1dGVkIHdoZW4gdGhlIGV2ZW50IGl0IGlzIGludm9rZWQNCiAgICovdmFsdWU6ZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsY2Ipe3ZhciBfdGhpcz10aGlzO190aGlzW2V2ZW50VHlwZV09Y2I7fSAvKioNCiAgICogSW52b2tlIHRoZSBldmVudFR5cGUNCiAgICogQHBhcmFtICB7c3RyaW5nfSBldmVudFR5cGUgLSBldmVudCB3aWxsIGJlIGludm9rZWQNCiAgICogQHBhcmFtICB7b2JqZWN0fSBwYXJhbXMgLSBwYXJhbWV0ZXJzIHdpbGwgYmUgcGFzc2VkIHRvIHRoZSBhZGRFdmVudExpc3RlbmVyDQogICAqL30se2tleToidHJpZ2dlciIsdmFsdWU6ZnVuY3Rpb24gdHJpZ2dlcihldmVudFR5cGUscGFyYW1zKXt2YXIgX3RoaXM9dGhpcztpZihfdGhpc1tldmVudFR5cGVdKXtfdGhpc1tldmVudFR5cGVdKHBhcmFtcyk7fX19XSk7cmV0dXJuIEV2ZW50RW1pdHRlcjt9KCk7ZXhwb3J0cy5kZWZhdWx0PUV2ZW50RW1pdHRlcjttb2R1bGUuZXhwb3J0cz1leHBvcnRzWydkZWZhdWx0J107DQoNCn0seyJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjI4LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjI5fV0sNjE1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsNCid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KTt2YXIgX3N0cmluZ2lmeT1yZXF1aXJlKCdiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnknKTt2YXIgX3N0cmluZ2lmeTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc3RyaW5naWZ5KTt2YXIgX2tleXM9cmVxdWlyZSgnYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzJyk7dmFyIF9rZXlzMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9rZXlzKTtleHBvcnRzLmRpdmlkZVVSTD1kaXZpZGVVUkw7ZXhwb3J0cy5kaXZpZGVFbWFpbD1kaXZpZGVFbWFpbDtleHBvcnRzLmVtcHR5T2JqZWN0PWVtcHR5T2JqZWN0O2V4cG9ydHMuZGVlcENsb25lPWRlZXBDbG9uZTtleHBvcnRzLmdldFVzZXJVUkxGcm9tRW1haWw9Z2V0VXNlclVSTEZyb21FbWFpbDtleHBvcnRzLmdldFVzZXJFbWFpbEZyb21VUkw9Z2V0VXNlckVtYWlsRnJvbVVSTDtleHBvcnRzLmNvbnZlcnRUb1VzZXJVUkw9Y29udmVydFRvVXNlclVSTDtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian07fSAvKioNCiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBDQoqIENvcHlyaWdodCAyMDE2IElORVNDLUlEDQoqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTA0KKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVg0KKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0ENCiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRw0KKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWUNCiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU4NCioNCiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQoqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4NCiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQoqDQoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQoqDQoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQoqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQoqKi8gLyoqDQogKiBTdXBwb3J0IG1vZHVsZSB3aXRoIHNvbWUgZnVuY3Rpb25zIHdpbGwgYmUgdXNlZnVsDQogKiBAbW9kdWxlIHV0aWxzDQogKi8gLyoqDQogKiBAdHlwZWRlZiBkaXZpZGVVUkwNCiAqIEB0eXBlIE9iamVjdA0KICogQHByb3BlcnR5IHtzdHJpbmd9IHR5cGUgVGhlIHR5cGUgb2YgVVJMDQogKiBAcHJvcGVydHkge3N0cmluZ30gZG9tYWluIFRoZSBkb21haW4gb2YgVVJMDQogKiBAcHJvcGVydHkge3N0cmluZ30gaWRlbnRpdHkgVGhlIGlkZW50aXR5IG9mIFVSTA0KICovIC8qKg0KICogRGl2aWRlIGFuIHVybCBpbiB0eXBlLCBkb21haW4gYW5kIGlkZW50aXR5DQogKiBAcGFyYW0gIHtVUkwuVVJMfSB1cmwgLSB1cmwgYWRkcmVzcw0KICogQHJldHVybiB7ZGl2aWRlVVJMfSB0aGUgcmVzdWx0IG9mIGRpdmlkZVVSTA0KICovZnVuY3Rpb24gZGl2aWRlVVJMKHVybCl7aWYoIXVybCl0aHJvdyBFcnJvcignVVJMIGlzIG5lZWRlZCB0byBzcGxpdCcpOyAvLyBsZXQgcmUgPSAvKFthLXpBLVotXSopPzpcL1wvKD86XC4pPyhbLWEtekEtWjAtOUA6JS5fXCt+Iz1dezIsMjU2fVwuW2Etel17Miw2fVxiKSooXC9bXC9cZFx3XC4tXSopKig/OltcP10pKiguKykqL2dpOw0KdmFyIHJlPS8oW2EtekEtWi1dKik6XC9cLyg/OlwuKT8oWy1hLXpBLVowLTlAOiUuX1wrfiM9XXsyLDI1Nn0pKFstYS16QS1aMC05QDolLl9cK34jPVwvXSopL2dpO3ZhciBzdWJzdD0nJDEsJDIsJDMnO3ZhciBwYXJ0cz11cmwucmVwbGFjZShyZSxzdWJzdCkuc3BsaXQoJywnKTsgLy8gSWYgdGhlIHVybCBoYXMgbm8gcHJvdG9jb2wsIHRoZSBkZWZhdWx0IHByb3RvY29sIHNldCBpcyBodHRwcw0KaWYocGFydHNbMF09PT11cmwpe3BhcnRzWzBdPSdodHRwcyc7cGFydHNbMV09dXJsO312YXIgcmVzdWx0PXt0eXBlOnBhcnRzWzBdLGRvbWFpbjpwYXJ0c1sxXSxpZGVudGl0eTpwYXJ0c1syXX07cmV0dXJuIHJlc3VsdDt9ZnVuY3Rpb24gZGl2aWRlRW1haWwoZW1haWwpe3ZhciBpbmRleE9mQXQ9ZW1haWwuaW5kZXhPZignQCcpO3ZhciByZXN1bHQ9e3VzZXJuYW1lOmVtYWlsLnN1YnN0cmluZygwLGluZGV4T2ZBdCksZG9tYWluOmVtYWlsLnN1YnN0cmluZyhpbmRleE9mQXQrMSxlbWFpbC5sZW5ndGgpfTtyZXR1cm4gcmVzdWx0O30gLyoqDQogKiBDaGVjayBpZiBhbiBPYmplY3QgaXMgZW1wdHkNCiAqIEBwYXJhbSAge09iamVjdH0gb2JqZWN0IE9iamVjdCB0byBiZSBjaGVja2VkDQogKiBAcmV0dXJuIHtCb29sZWFufSAgICAgICBzdGF0dXMgb2YgT2JqZWN0LCBlbXB0eSBvciBub3QgKHRydWV8ZmFsc2UpOw0KICovZnVuY3Rpb24gZW1wdHlPYmplY3Qob2JqZWN0KXtyZXR1cm4gKDAsX2tleXMyLmRlZmF1bHQpKG9iamVjdCkubGVuZ3RoPjA/ZmFsc2U6dHJ1ZTt9IC8qKg0KICogTWFrZSBhIENPUFkgb2YgdGhlIG9yaWdpbmFsIGRhdGENCiAqIEBwYXJhbSAge09iamVjdH0gIG9iaiAtIG9iamVjdCB0byBiZSBjbG9uZWQNCiAqIEByZXR1cm4ge09iamVjdH0NCiAqL2Z1bmN0aW9uIGRlZXBDbG9uZShvYmopeyAvL1RPRE86IHNpbXBsZSBidXQgaW5lZmZpY2llbnQgSlNPTiBkZWVwIGNsb25lLi4uDQppZihvYmopcmV0dXJuIEpTT04ucGFyc2UoKDAsX3N0cmluZ2lmeTIuZGVmYXVsdCkob2JqKSk7fSAvKioNCiAqIE9idGFpbnMgdGhlIHVzZXIgVVJMIHRoYXQgY29ycmVzcG9uZHMgdG8gYSBnaXZlbiBlbWFpbA0KICogQHBhcmFtICB7c3RyaW5nfSB1c2VyRW1haWwgVGhlIHVzZXIgZW1haWwNCiAqIEByZXR1cm4ge1VSTC5VUkx9IHVzZXJVUkwgVGhlIHVzZXIgVVJMDQogKi9mdW5jdGlvbiBnZXRVc2VyVVJMRnJvbUVtYWlsKHVzZXJFbWFpbCl7dmFyIGluZGV4T2ZBdD11c2VyRW1haWwuaW5kZXhPZignQCcpO3JldHVybiAndXNlcjovLycrdXNlckVtYWlsLnN1YnN0cmluZyhpbmRleE9mQXQrMSx1c2VyRW1haWwubGVuZ3RoKSsnLycrdXNlckVtYWlsLnN1YnN0cmluZygwLGluZGV4T2ZBdCk7fSAvKioNCiAqIE9idGFpbnMgdGhlIHVzZXIgZW1haWwgdGhhdCBjb3JyZXNwb25kcyB0byBhIGdpdmVuIFVSTA0KICogQHBhcmFtICB7VVJMLlVSTH0gdXNlclVSTCBUaGUgdXNlciBVUkwNCiAqIEByZXR1cm4ge3N0cmluZ30gdXNlckVtYWlsIFRoZSB1c2VyIGVtYWlsDQogKi9mdW5jdGlvbiBnZXRVc2VyRW1haWxGcm9tVVJMKHVzZXJVUkwpe3ZhciB1cmw9ZGl2aWRlVVJMKHVzZXJVUkwpO3JldHVybiB1cmwuaWRlbnRpdHkucmVwbGFjZSgnLycsJycpKydAJyt1cmwuZG9tYWluOyAvLyBpZGVudGl0eSBmaWVsZCBoYXMgJy9leGFtcGxlSUQnIGluc3RlYWQgb2YgJ2V4YW1wbGVJRCcNCn0gLyoqDQogKiBDaGVjayBpZiB0aGUgdXNlciBpZGVudGlmaWVyIGlzIGFscmVhZHkgaW4gdGhlIFVSTCBmb3JtYXQsIGlmIG5vdCwgY29udmVydCB0byBVUkwgZm9ybWF0DQogKiBAcGFyYW0gIHtzdHJpbmd9ICAgaWRlbnRpZmllciAgdXNlciBpZGVudGlmaWVyDQogKiBAcmV0dXJuIHtzdHJpbmd9ICAgdXNlclVSTCAgICB0aGUgdXNlciBVUkwNCiAqL2Z1bmN0aW9uIGNvbnZlcnRUb1VzZXJVUkwoaWRlbnRpZmllcil7IC8vIGNoZWNrIGlmIHRoZSBpZGVudGlmaWVyIGlzIGFscmVhZHkgaW4gdGhlIHVybCBmb3JtYXQNCmlmKGlkZW50aWZpZXIuc3Vic3RyaW5nKDAsNyk9PT0ndXNlcjovLycpe3ZhciBkaXZpZGVkVVJMPWRpdmlkZVVSTChpZGVudGlmaWVyKTsgLy9jaGVjayBpZiB0aGUgdXJsIGlzIHdlbGwgZm9ybWF0ZWQNCmlmKGRpdmlkZWRVUkwuZG9tYWluJiZkaXZpZGVkVVJMLmlkZW50aXR5KXtyZXR1cm4gaWRlbnRpZmllcjt9ZWxzZSB7dGhyb3cgJ3VzZXJVUkwgd2l0aCB3cm9uZyBmb3JtYXQnO30gLy9pZiBub3QsIGNvbnZlcnQgdGhlIHVzZXIgZW1haWwgdG8gVVJMIGZvcm1hdA0KfWVsc2Uge3JldHVybiBnZXRVc2VyVVJMRnJvbUVtYWlsKGlkZW50aWZpZXIpO319DQoNCn0seyJiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnkiOjE4LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjIzfV19LHt9LFs2MDhdKSg2MDgpDQp9KTsNCi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJ1bnRpbWUuanMubWFwDQo=",
      "sourceCodeClassname": "Runtime",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 30001,
    "type": "Runtimes",
    "version": "0.1",
    "description": "Description of Runtime",
    "objectName": "Runtime",
    "configuration": {},
    "runtimeType": "browser",
    "hypertyCapabilities": {
      "mic": true,
      "camera": true,
      "sensor": false,
      "webrtc": true,
      "ortc": true
    },
    "protocolCapabilities": {
      "http": true,
      "https": true,
      "ws": true,
      "wss": true,
      "coap": false,
      "datachannel": false
    },
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  }
}