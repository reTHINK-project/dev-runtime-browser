{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/runtime-core/src/bus/Bus.js","node_modules/runtime-core/src/bus/MiniBus.js","node_modules/runtime-core/src/sandbox/Sandbox.js","node_modules/runtime-core/src/sandbox/SandboxRegistry.js","src/ContextApp.js","src/RuntimeLoader.js","src/RuntimeUAStub.js","src/iframe.js"],"names":[],"mappings":"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","file":"rethink.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n* @author micaelpedrosa@gmail.com\n* Minimal interface and implementation to send and receive messages. It can be reused in many type of components.\n* Components that need a message system should receive this class as a dependency or extend it.\n* Extensions should implement the following private methods: _onPostMessage and _registerExternalListener\n*/\nclass Bus {\n  /* private\n  _msgId: number;\n  _subscriptions: <url: MsgListener[]>\n\n  _responseTimeOut: number\n  _responseCallbacks: <url+id: (msg) => void>\n\n  */\n\n  constructor() {\n    let _this = this;\n    _this._msgId = 0;\n    _this._subscriptions = {};\n\n    _this._responseTimeOut = 5000; //default to 3s\n    _this._responseCallbacks = {};\n\n    _this._registerExternalListener();\n  }\n\n  /**\n  * Register listener to receive message when \"msg.to === url\".\n  * Special url \"*\" for default listener is accepted to intercept all messages.\n  * @param {URL} url Address to intercept, tha is in the message \"to\"\n  * @param {Listener} listener listener\n  * @return {MsgListener} instance of MsgListener\n  */\n  addListener(url, listener) {\n    let _this = this;\n\n    let item = new MsgListener(_this._subscriptions, url, listener);\n    let itemList = _this._subscriptions[url];\n    if (!itemList) {\n      itemList = [];\n      _this._subscriptions[url] = itemList;\n    }\n\n    itemList.push(item);\n    return item;\n  }\n\n  /**\n   * Manually add a response listener. Only one listener per message ID should exist.\n   * ATENTION, there is no timeout for this listener.\n   * The listener should be removed with a removeResponseListener, failing to do this will result in a unreleased memory problem.\n   * @param {URL} url Origin address of the message sent, \"msg.from\".\n   * @param {number} msgId Message ID that is returned from the postMessage.\n   * @param {Function} responseListener Callback function for the response\n   */\n  addResponseListener(url, msgId, responseListener) {\n    this._responseCallbacks[url + msgId] = responseListener;\n  }\n\n  /**\n   * Remove the response listener.\n   * @param {URL} url Origin address of the message sent, \"msg.from\".\n   * @param {number} msgId  Message ID that is returned from the postMessage\n   */\n  removeResponseListener(url, msgId) {\n    delete this._responseCallbacks[url + msgId];\n  }\n\n  /**\n   * Remove all existent listeners for the URL\n   * @param  {URL} url Address registered\n   */\n  removeAllListenersOf(url) {\n    delete this._subscriptions[url];\n  }\n\n  /**\n   * Helper method to bind listeners (in both directions) into other MiniBus target.\n   * @param  {URL} outUrl Outbound URL, register listener for url in direction \"this -> target\"\n   * @param  {URL} inUrl Inbound URL, register listener for url in direction \"target -> this\"\n   * @param  {MiniBus} target The other target MiniBus\n   * @return {Bound} an object that contains the properties [thisListener, targetListener] and the unbind method.\n   */\n  bind(outUrl, inUrl, target) {\n    let _this = this;\n\n    let thisListn = _this.addListener(outUrl, (msg) => {\n      target.postMessage(msg);\n    });\n\n    let targetListn = target.addListener(inUrl, (msg) => {\n      _this.postMessage(msg);\n    });\n\n    return {\n      thisListener: thisListn,\n      targetListener: targetListn,\n      unbind: () => {\n        this.thisListener.remove();\n        this.targetListener.remove();\n      }\n    };\n  }\n\n  //publish on default listeners\n  _publishOnDefault(msg) {\n    //is there any \"*\" (default) listeners?\n    let itemList = this._subscriptions['*'];\n    if (itemList) {\n      this._publishOn(itemList, msg);\n    }\n  }\n\n  //publish on a subscription list.\n  _publishOn(itemList, msg) {\n    itemList.forEach((sub) => {\n      sub._callback(msg);\n    });\n  }\n\n  _responseCallback(inMsg, responseCallback) {\n    let _this = this;\n\n    //automatic management of response handlers\n    if (responseCallback) {\n      let responseId = inMsg.from + inMsg.id;\n      _this._responseCallbacks[responseId] = responseCallback;\n\n      setTimeout(() => {\n        let responseFun = _this._responseCallbacks[responseId];\n        delete _this._responseCallbacks[responseId];\n\n        if (responseFun) {\n          let errorMsg = {\n            id: inMsg.id, type: 'response',\n            body: { code: 408, desc: 'Response timeout!', value: inMsg }\n          };\n\n          responseFun(errorMsg);\n        }\n      }, _this._responseTimeOut);\n    }\n  }\n\n  _onResponse(msg) {\n    let _this = this;\n\n    if (msg.type === 'response') {\n      let responseId = msg.to + msg.id;\n      let responseFun = _this._responseCallbacks[responseId];\n\n      //if it's a provisional response, don't delete response listener\n      if (msg.body.code >= 200) {\n        delete _this._responseCallbacks[responseId];\n      }\n\n      if (responseFun) {\n        responseFun(msg);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  //receive messages from external interface\n  _onMessage(msg) {\n    let _this = this;\n\n    if (!_this._onResponse(msg)) {\n      let itemList = _this._subscriptions[msg.to];\n      if (itemList) {\n        _this._publishOn(itemList, msg);\n      } else {\n        _this._publishOnDefault(msg);\n      }\n    }\n  }\n\n  _genId(inMsg) {\n    //TODO: how do we manage message ID's? Should it be a global runtime counter, or per URL address?\n    //Global counter will not work, because there will be multiple MiniBus instances!\n    //Per URL, can be a lot of data to maintain!\n    //Maybe a counter per MiniBus instance. This is the assumed solution for now.\n    if (!inMsg.id || inMsg.id === 0) {\n      this._msgId++;\n      inMsg.id = this._msgId;\n    }\n  }\n\n  /**\n  * Send messages to local listeners, or if not exists to external listeners.\n  * It's has an optional mechanism for automatic management of response handlers.\n  * The response handler will be unregistered after receiving the response, or after response timeout (default to 3s).\n  * @param  {Message} msg Message to send. Message ID is automatically added to the message.\n  * @param  {Function} responseCallback Optional parameter, if the developer what's automatic response management.\n  * @return {number} Returns the message ID, in case it should be needed for manual management of the response handler.\n  */\n  postMessage(inMsg, responseCallback) { }\n\n  /**\n   * Not public available, used by the class extension implementation, to process messages from the public \"postMessage\" without a registered listener.\n   * Used to send the message to an external interface, like a WebWorker, IFrame, etc.\n   * @param  {Message.Message} msg Message\n   */\n  _onPostMessage(msg) { /*implementation will send message to external system*/ }\n\n  /**\n   * Not public available, used by the class extension implementation, to process all messages that enter the MiniBus from an external interface, like a WebWorker, IFrame, etc.\n   * This method is called one time in the constructor to register external listeners.\n   * The implementation will probably call the \"_onMessage\" method to publish in the local listeners.\n   * DO NOT call \"postMessage\", there is a danger that the message enters in a cycle!\n   */\n  _registerExternalListener() { /*implementation will register external listener and call \"this._onMessage(msg)\" */ }\n\n}\n\nclass MsgListener {\n  /* private\n  _subscriptions: <string: MsgListener[]>;\n  _url: string;\n  _callback: (msg) => void;\n  */\n\n  constructor(subscriptions, url, callback) {\n    let _this = this;\n\n    _this._subscriptions = subscriptions;\n    _this._url = url;\n    _this._callback = callback;\n  }\n\n  get url() { return this._url; }\n\n  remove() {\n    let _this = this;\n\n    let subs = _this._subscriptions[_this._url];\n    if (subs) {\n      let index = subs.indexOf(_this);\n      subs.splice(index, 1);\n\n      //if there are no listeners, remove the subscription entirely.\n      if (subs.length === 0) {\n        delete _this._subscriptions[_this._url];\n      }\n    }\n  }\n}\n\nexport default Bus;\n","import Bus from './Bus';\n\nclass MiniBus extends Bus {\n\n  constructor() {\n    super();\n  }\n\n  postMessage(inMsg, responseCallback) {\n    let _this = this;\n\n    _this._genId(inMsg);\n    _this._responseCallback(inMsg, responseCallback);\n\n    //always send to external (to core MessageBus)\n    _this._onPostMessage(inMsg);\n\n    return inMsg.id;\n  }\n\n  _onMessage(msg) {\n    let _this = this;\n\n    if (!_this._onResponse(msg)) {\n      let itemList = _this._subscriptions[msg.to];\n      if (itemList) {\n        _this._publishOn(itemList, msg);\n        if (!msg.to.startsWith('hyperty')) {\n          _this._publishOnDefault(msg);\n        }\n      } else {\n        _this._publishOnDefault(msg);\n      }\n    }\n  }\n\n}\n\nexport default MiniBus;\n","import SandboxRegistry from '../sandbox/SandboxRegistry';\nimport MiniBus from '../bus/MiniBus';\n// import MessageFactory from '../../resources/MessageFactory';\n\nexport let SandboxType = {APP: 'app', NORMAL: 'normal'};\n\n/**\n * @author micaelpedrosa@gmail.com\n * Base class to implement external sandbox component\n */\nclass Sandbox extends MiniBus {\n\n  constructor() {\n\n    super();\n\n    let _this = this;\n\n    // Add Message Factory\n    // let messageFactory = new MessageFactory();\n    // _this.messageFactory = messageFactory;\n  }\n\n  /**\n   * Deploy an instance of the component into the sandbox.\n   * @param  {string} componentSourceCode Component source code (Hyperty, ProtoStub, etc)\n   * @param  {URL} componentURL Hyperty, ProtoStub, or any other component address.\n   * @param  {Config} configuration Config parameters of the component\n   * @return {Promise<string>} return deployed if successful, or any other string with an error\n   */\n  deployComponent(componentSourceCode, componentURL, configuration) {\n\n    let _this = this;\n\n    // let messageFactory = _this.messageFactory;\n\n    return new Promise((resolve, reject) => {\n      //TODO: message format is not properly defined yet\n      let deployMessage = {\n        type: 'create', from: SandboxRegistry.ExternalDeployAddress, to: SandboxRegistry.InternalDeployAddress,\n        body: { url: componentURL, sourceCode: componentSourceCode, config: configuration }\n      };\n\n      //send message into the sandbox internals and wait for reply\n      _this.postMessage(deployMessage, (reply) => {\n        if (reply.body.code === 200) {\n          //is this response complaint with the spec?\n          resolve('deployed');\n        } else {\n          reject(reply.body.desc);\n        }\n      });\n    });\n  }\n\n  /**\n   * Remove the instance of a previously deployed component.\n   * @param  {URL} componentURL Hyperty, ProtoStub, or any other component address.\n   * @return {Promise<string>} return undeployed if successful, or any other string with an error\n   */\n  removeComponent(componentURL) {\n    let _this = this;\n\n    return new Promise((resolve, reject) => {\n      //TODO: message format is not properly defined yet\n      let removeMessage = {\n        type: 'delete', from: SandboxRegistry.ExternalDeployAddress, to: SandboxRegistry.InternalDeployAddress,\n        body: { url: componentURL }\n      };\n\n      //send message into the sandbox internals and wait for reply\n      _this.postMessage(removeMessage, (reply) => {\n        if (reply.body.code === 200) {\n          //is this response complaint with the spec?\n          resolve('undeployed');\n        } else {\n          reject(reply.body.desc);\n        }\n      });\n    });\n  }\n}\n\nexport default Sandbox;\n","/**\n * @author micaelpedrosa@gmail.com\n * Base class to implement internal deploy manager of components.\n */\n\n// import MessageFactory from '../../resources/MessageFactory';\n\nclass SandboxRegistry {\n  /* private\n  _components: <url: instance>\n  */\n\n  constructor(bus) {\n    let _this = this;\n\n    _this._bus = bus;\n    _this._components = {};\n\n    // Add Message Factory\n    // let messageFactory = new MessageFactory();\n    // _this.messageFactory = messageFactory;\n\n    bus.addListener(SandboxRegistry.InternalDeployAddress, (msg) => {\n      //console.log('SandboxRegistry-RCV: ', msg);\n      // let responseMsg = {\n      //   id: msg.id, type: 'response', from: SandboxRegistry.InternalDeployAddress, to: SandboxRegistry.ExternalDeployAddress\n      // };\n\n      switch (msg.type) {\n        case 'create': _this._onDeploy(msg); break;\n        case 'delete': _this._onRemove(msg); break;\n      }\n    });\n  }\n\n  get components() { return this._components; }\n\n  _responseMsg(msg, code, value) {\n\n    let _this = this;\n\n    // let messageFactory = _this.messageFactory;\n\n    let responseMsg = {\n      id: msg.id, type: 'response', from: SandboxRegistry.InternalDeployAddress, to: SandboxRegistry.ExternalDeployAddress\n    };\n\n    // Chanege the origin message, because the response;\n    // msg.from = SandboxRegistry.InternalDeployAddress;\n    // msg.to = SandboxRegistry.ExternalDeployAddress;\n\n    let body = {};\n    if (code) body.code = code;\n    if (value) body.desc = value;\n\n    responseMsg.body = body;\n\n    // return messageFactory.createResponse(msg, code, value);\n    return responseMsg;\n  }\n\n  _onDeploy(msg) {\n    let _this = this;\n    let config = msg.body.config;\n    let componentURL = msg.body.url;\n    let sourceCode = msg.body.sourceCode;\n    let responseCode;\n    let responseDesc;\n\n    if (!_this._components.hasOwnProperty(componentURL)) {\n      try {\n        _this._components[componentURL] = _this._create(componentURL, sourceCode, config);\n        responseCode = 200;\n      } catch (error) {\n        responseCode = 500;\n        responseDesc = error;\n      }\n    } else {\n      responseCode = 500;\n      responseDesc = 'Instance ' + componentURL + ' already exist!';\n    }\n\n    // Create response message with MessageFactory\n    let responseMsg = _this._responseMsg(msg, responseCode, responseDesc);\n    _this._bus.postMessage(responseMsg);\n  }\n\n  _onRemove(msg) {\n    let _this = this;\n    let componentURL = msg.body.url;\n    let responseCode;\n    let responseDesc;\n\n    if (_this._components.hasOwnProperty(componentURL)) {\n      //remove component from the pool and all listeners\n      delete _this._components[componentURL];\n      _this._bus.removeAllListenersOf(componentURL);\n      responseCode = 200;\n    } else {\n      responseCode = 500;\n      responseDesc = 'Instance ' + componentURL + ' doesn\\'t exist!';\n    }\n\n    let responseMsg = _this._responseMsg(msg, responseCode, responseDesc);\n\n    _this._bus.postMessage(responseMsg);\n  }\n\n  /**\n   * This method should be implemented by the internal sandbox code.\n   * @param  {ComponentURL} url URL used for the instance\n   * @param  {string} sourceCode Code of the component\n   * @param  {Config} config Configuration parameters\n   * @return {Object} Returns instance of the component or throw an error \"throw 'error message'\"\n   */\n  _create(url, sourceCode, config) {\n    //implementation specific\n    /* example code:\n      eval(sourceCode);\n      return activate(url, _this._bus, config);\n    */\n  }\n}\n\nSandboxRegistry.ExternalDeployAddress = 'hyperty-runtime://sandbox/external';\nSandboxRegistry.InternalDeployAddress = 'hyperty-runtime://sandbox/internal';\n\nexport default SandboxRegistry;\n","/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\nimport Sandbox from 'runtime-core/src/sandbox/Sandbox';\nimport SandboxRegistry from 'runtime-core/src/sandbox/SandboxRegistry';\nimport MiniBus from 'runtime-core/src/bus/MiniBus';\n\nfunction create(iframe){\n    window._miniBus = new MiniBus();\n    window._miniBus._onPostMessage = function(msg){\n        iframe.contentWindow.postMessage(msg, '*');\n    };\n    window.addEventListener('message', function(event){\n        if(event.data.to.startsWith('runtime:loadedHyperty'))\n            return;\n\n        window._miniBus._onMessage(event.data);\n    }, false);\n\n    window._registry = new SandboxRegistry(window._miniBus);\n    window._registry._create = function(url, sourceCode, config){\n        eval.apply(window, [sourceCode]);\n        return activate(url, window._miniBus, config);\n    };\n};\n\nfunction getHyperty(hypertyDescriptor){\n    return window._registry.components[hypertyDescriptor]\n};\n\nexport default { create, getHyperty };\n","/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\nimport RethinkBrowser from './RuntimeUAStub'\n\nlet rethink;\n\nif( typeof window != undefined && window != null ){\n    rethink = RethinkBrowser\n}else{\n    rethink = undefined\n}\n\nexport default rethink\n","/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\nimport app from './ContextApp';\nimport { create as createIframe } from './iframe';\n\nlet RethinkBrowser = {\n    install: function(domain){\n        var iframe = createIframe(`https://${domain}/.well-known/runtime/index.html`);\n        app.create(iframe);\n\n        return {\n            requireHyperty: (hypertyDescriptor)=>{\n                return new Promise((resolve, reject)=>{\n                    let loaded = (e)=>{\n                        if(e.data.to === 'runtime:loadedHyperty'){\n                            window.removeEventListener('message', loaded);\n                            resolve(app.getHyperty(e.data.body.runtimeHypertyURL));\n                        }\n                    };\n                    window.addEventListener('message', loaded);                     \n                    iframe.contentWindow.postMessage({to:'core:loadHyperty', body:{descriptor: hypertyDescriptor}}, '*');\n                });\n            },\n\n            requireProtostub: (domain)=>{\n                iframe.contentWindow.postMessage({to:'core:loadStub', body:{\"domain\": domain}}, '*')\n            },\n        };\n    }\n}\n\nexport default RethinkBrowser\n","/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\nexport function create(src){\n    var iframe = document.createElement('iframe');\n    iframe.setAttribute('id', 'rethink');\n    iframe.setAttribute('seamless', '');\n    iframe.setAttribute('src', src);\n    iframe.setAttribute('sandbox', 'allow-forms allow-scripts allow-same-origin allow-popups');\n    iframe.style.display = 'none';\n    document.querySelector('body').appendChild(iframe);\n\n    return iframe;\n};\n"]}