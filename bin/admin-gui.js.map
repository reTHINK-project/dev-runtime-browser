{"version":3,"sources":["node_modules/browser-pack/_prelude.js","admin-gui.js","src/admin/IdentitiesGUI.js","src/admin/PoliciesGUI.js","src/admin/PoliciesManager.js","src/admin/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","adminGui","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","IdentitiesGUI","guiURL","idmURL","messageBus","_this","_guiURL","_idmURL","_messageBus","callIdentityModuleFunc","then","resultURL","undefined","addListener","msg","funcName","body","method","urlreceived","params","openPopup","returnedValue","type","replyMsg","id","to","from","postMessage","document","getElementsByTagName","style","parent","$","removeClass","showIdentitiesGUI","identityInfo","addClass","on","methodName","parameters","message","Promise","resolve","reject","resource","res","result","win","open","cordova","addEventListener","url","exec","error","close","pollTimer","setInterval","closed","clearInterval","URL","indexOf","location","origin","receivedInfo","toRemoveID","_checkReceivedInfo","resultObject","showMyIdentities","identities","identity","console","log","callback","idps","idpsObjects","forEach","entry","push","domain","html","_getList","off","event","obtainNewIdentity","_resetIdentities","emails","split","email","myIdentities","getElementById","innerHTML","table","createTable","tbody","createElement","numIdentities","_i","tr","createTableRow","appendChild","changeID","removeID","className","thead","thEmail","textContent","td","btn","idToUse","innerText","row","parentNode","idToRemove","children","numEmails","splice","idProvider","text","keyPair","publicKey","btoa","contents","usernameHint","idpDomain","loginUrl","substring","finalURL","firstPart","secondAuxPart","secondPart","_authenticateUser","err","items","list","numItems","userProfile","username","2","_interopRequireDefault","obj","__esModule","default","_PoliciesManager","_PoliciesManager2","PoliciesGUI","pepGuiURL","pepURL","policiesManager","prepareAttributes","elements","_setElements","_setListeners","group","openModal","member","val","addToGroup","closeModal","_manageGroups","groupName","createGroup","algorithms","append","_getOptions","policyTitle","combiningAlgorithm","addPolicy","_goHome","Materialize","toast","closest","splitId","thisPriority","parseInt","pop","join","getPolicy","policy","lastPriority","getLastPriority","newPriority","decreaseRulePriority","removeFromGroup","deleteGroup","deletePolicy","priority","rule","getRuleOfPolicy","deleteRule","getActivePolicy","activeUserPolicy","getPoliciesTitles","policies","find","updateActivePolicy","title","keys","scopes","lists","j","variable","info","splitInfo","months","_splitInfo","selected","options","getFormattedPolicies","policiesTitles","rulesTitles","ids","isEmpty","_showVariablesTypes","_deleteRule","_showRule","_increaseRulePriority","_decreaseRulePriority","_addPolicy","_deletePolicy","_getActivePolicy","_getPoliciesTable","increaseRulePriority","getGroups","groupsPE","groups","groupsNames","members","_addMember","_deleteMember","_createGroup","_deleteGroup","content","parsedContent","JSON","parse","_this2","date","select","form","_this3","_getNewConfiguration","empty","getMyEmails","getMyHyperties","hyperties","_getGroupOptions","_this4","variables","getVariables","_showNewConfigurationPanel","getVariableInfo","description","tags","input","_loop","getGroupsNames","pickadate","selectMonths","selectYears","checked","_info","_getInfo","decision","scope","setInfo","resourceType","shift","condition","deleteInfo","_this5","file","files","reader","FileReader","readAsText","onload","_parseFileContent","onerror","_this6","ruleTitle","attribute","element","_updateRule","splitTitle","index","newDecision","updatePolicy","newSubscriptionType","labels","./PoliciesManager","3","PoliciesManager","_pepURL","callPolicyEngineFunc","userPolicies","setVariables","addition","setAdditionMethods","validation","setValidationMethods","user","userEmail","source","titles","targets","Date","Domain","Group of users","Subscription preferences","Time of the day","Weekday","createRule","operator","start","end","weekdays","isValidDate","isValidScope","isValidString","isValidDomain","isValidSubscriptionType","isValidTimeslot","userPolicy","pattern","test","infoSplit","day","month","year","isValidFormat","getFullYear","getMonth","getDate","now","isFuture","twoTimes","splitStart","splitEnd","okSize","areIntegers","policiesPE","policiesGUI","rules","sortRules","_getTitle","getRuleByPriority","authorise","weekdayID","variablesTitles","conditionSplit","deletion","groupsGUI","opeator","4","_IdentitiesGUI","_PoliciesGUI","./IdentitiesGUI","./PoliciesGUI"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,SAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GCCA,YAQA,SAAS0B,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHC,OAAOC,eAAe/B,EAAS,cAC7BgC,OAAO,GAGT,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIjB,GAAI,EAAGA,EAAIiB,EAAMZ,OAAQL,IAAK,CAAE,GAAIkB,GAAaD,EAAMjB,EAAIkB,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMV,OAAOC,eAAeI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUT,EAAac,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBN,EAAYgB,UAAWF,GAAiBC,GAAaT,EAAiBN,EAAae,GAAqBf,MCL1hBiB,EDWc,WCTlB,QAAAA,GAAYC,EAAQC,EAAQC,GAE1B,GAFsCtB,EAAAlB,KAAAqC,IAEjCG,EAAY,KAAM5B,OAAM,uBAC7B,IAAI6B,GAAQzC,IACZyC,GAAMC,QAAUJ,EAChBG,EAAME,QAAUJ,EAChBE,EAAMG,YAAcJ,EAIpBC,EAAMI,uBAAuB,gBAAiBC,KAAK,WACjDL,EAAMM,UAAaC,OAEnBP,EAAMG,YAAYK,YAAYX,EAAQ,SAAAY,GACpC,GACIC,IADeD,EAAIE,KAAK5B,MACb0B,EAAIE,KAAKC,QACpB7B,EAAA,MAEJ,IAAiB,cAAb2B,EAA0B,CAC5B,GAAIG,GAAcJ,EAAIE,KAAKG,OAAOD,WAElCb,GAAMe,UAAUF,GAAaR,KAAK,SAACW,GACjC,GAAIjC,IAASkC,KAAM,UAAWlC,MAAOiC,EAAe5C,KAAM,KACtD8C,GAAYC,GAAIV,EAAIU,GAAIF,KAAM,WAAYG,GAAIX,EAAIY,KAAMA,KAAMZ,EAAIW,GAAIT,KAAM5B,EAChFiB,GAAMG,YAAYmB,YAAYJ,KAKlCK,SAASC,qBAAqB,QAAQ,GAAGC,MAAQ,0BACjDC,OAAOJ,aAAcX,MAAQC,OAAQ,iBAAmBQ,GAAI,uBAAyB,KACrFO,EAAE,eAAeC,YAAY,QAC7B5B,EAAM6B,kBAAkBpB,EAAIE,KAAK5B,OAAOsB,KAAK,SAACyB,GAC5C,GAAIZ,GAAA,MASJ,QANAQ,OAAOJ,aAAcX,MAAQC,OAAQ,iBAAmBQ,GAAI,uBAAyB,KACrFO,EAAE,eAAeI,SAAS,QAC1BR,SAASC,qBAAqB,QAAQ,GAAGC,MAAQ,+BACjDE,EAAE,uBAAuBI,SAAS,QAClCJ,EAAE,qBAAqBI,SAAS,QAExBD,EAAab,MACnB,IAAK,MACHlC,GAAUkC,KAAM,MAAOlC,MAAO+C,EAAa/C,MAAOX,KAAM,KACxD8C,GAAaC,GAAIV,EAAIU,GAAIF,KAAM,WAAYG,GAAIX,EAAIY,KAAMA,KAAMZ,EAAIW,GAAIT,KAAM5B,GAC7EiB,EAAMG,YAAYmB,YAAYJ,EAC9B,MAEF,KAAK,WACHnC,GAAUkC,KAAM,WAAYlC,MAAO+C,EAAa/C,MAAOX,KAAM,KAC7D8C,GAAaC,GAAIV,EAAIU,GAAIF,KAAM,WAAYG,GAAIX,EAAIY,KAAMA,KAAMZ,EAAIW,GAAIT,KAAM5B,GAC7EiB,EAAMG,YAAYmB,YAAYJ,EAC9B,MAEF,SACEnC,GAAUkC,KAAM,QAASlC,MAAO,wBAAyBX,KAAM,KAC/D8C,GAAaC,GAAIV,EAAIU,GAAIF,KAAM,WAAYG,GAAIX,EAAIY,KAAMA,KAAMZ,EAAIW,GAAIT,KAAM5B,GAC7EiB,EAAMG,YAAYmB,YAAYJ,QAKtCS,EAAE,yBAAyBK,GAAG,QAAS,WAErChC,EAAM6B,wBD0WZ,MAzVA7C,GAAaY,IACXJ,IAAK,yBACLT,MAAO,SCdckD,EAAYC,GACjC,GAAIlC,GAAQzC,KACR4E,EAAA,MAEJ,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BH,GAAYlB,KAAM,UAAWG,GAAIpB,EAAME,QAASmB,KAAMrB,EAAMC,QAC1DU,MAAQ4B,SAAU,WAAY3B,OAAQqB,EAAYnB,OAAQoB,IAC5DlC,EAAMG,YAAYmB,YAAYa,EAAS,SAACK,GACtC,GAAIC,GAASD,EAAI7B,KAAK5B,KAGtBsD,GAAQI,UDmBZjD,IAAK,YACLT,MAAO,SCfC8B,GAIR,MAAO,IAAIuB,SAAQ,SAACC,EAASC,GAE3B,GAAII,GAAMtF,OAAOuF,KAAK9B,EAAa,gBAAiB,wBACpD,IAAIzD,OAAOwF,QACTF,EAAIG,iBAAiB,YAAa,SAASpF,GACzC,GAAIqF,GAAMrF,EAAEqF,IACR1E,EAAO,eAAe2E,KAAKD,GAC3BE,EAAQ,gBAAgBD,KAAKD,IAE7B1E,GAAQ4E,KACVN,EAAIO,QACJZ,EAAQS,UAIZ,IAAII,GAAYC,YAAY,WAC1B,IAME,GALIT,EAAIU,SACNd,EAAO,mDACPe,cAAcH,IAGZR,EAAInB,SAAS+B,IAAIC,QAAQ,kBAAsBb,EAAInB,SAAS+B,IAAIC,QAAQC,SAASC,aAAgB,CACnGrG,OAAOiG,cAAcH,EACrB,IAAIJ,GAAQJ,EAAInB,SAAS+B,GAEzBZ,GAAIO,QACJZ,EAAQS,IAEV,MAAOrF,MAGR,UDoBP+B,IAAK,oBACLT,MAAO,SChBS2E,GAChB,GAAI1D,GAAQzC,IAEZ,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GAE3B,GAAIR,GAAA,OACA6B,EAAA,MAEJ3D,GAAM4D,mBAAmBF,GAAcrD,KAAK,SAACwD,GAC3C/B,EAAe+B,EAAa/B,aAC5B6B,EAAaE,EAAaF,WAE1BhC,EAAE,qBAAqBI,SAAS,QAChCJ,EAAE,uBAAuBC,YAAY,QAErC5B,EAAM8D,iBAAiBhC,EAAaiC,WAAYJ,GAAYtD,KAAK,SAAC2D,GAChEC,QAAQC,IAAI,oBAAqBF,GACjC3B,GAASpB,KAAM,WAAYlC,MAAOiF,KAGpC,IAAIG,GAAW,SAACpF,GACdkF,QAAQC,IAAI,oBAAqBnF,GACjCsD,GAASpB,KAAM,WAAYlC,MAAOA,KAGhCqF,KACAC,EAAcvC,EAAasC,IAE/BC,GAAYC,QAAQ,SAASC,GAC3BH,EAAKI,KAAKD,EAAME,UAGlB9C,EAAE,gBAAgB+C,KAAK1E,EAAM2E,SAASP,IACtCzC,EAAE,gBAAgBiD,MAClBjD,EAAE,gBAAgBK,GAAG,QAAS,SAAC6C,GAAD,MAAW7E,GAAM8E,kBAAkBD,EAAOV,EAAUR,KAElFhC,EAAE,qBAAqBiD,MACvBjD,EAAE,qBAAqBK,GAAG,QAAS,SAAC6C,GAAD,MAAW7E,GAAM+E,iBAAiBZ,YDyBzE3E,IAAK,qBACLT,MAAO,SCrBU2E,GACjB,GAAI1D,GAAQzC,IACZ,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GAC3B,GAAIR,GAAA,OAAc6B,EAAA,MACdD,IACF5B,EAAe4B,EACfC,GAAa,EACbtB,GAASP,aAAcA,EAAc6B,WAAWA,MAEhDA,GAAa,EACb3D,EAAMI,uBAAuB,4BAA6BC,KAAK,SAACoC,GAC9DJ,GAASP,aAAcW,EAAQkB,WAAYA,YD4BjDnE,IAAK,mBACLT,MAAO,SCvBQiG,EAAQrB,GACvB,GAAI3D,GAAQzC,IAEZ,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GAG3B,GAAIyB,KAEJ,KAAK,GAAI7F,KAAK8G,GAAQ,CACpB,GAAIP,GAASO,EAAO9G,GAAG+G,MAAM,IAC7BlB,GAAWS,MAAOU,MAAOF,EAAO9G,GAAIuG,OAAQA,EAAO,KAGrD,GAAIU,GAAe5D,SAAS6D,eAAe,SAC3CD,GAAaE,UAAY,EAMzB,KAAK,GAJDC,GAAQtF,EAAMuF,cAEdC,EAAQjE,SAASkE,cAAc,SAC/BC,EAAgB3B,EAAWxF,OACtBoH,EAAI,EAAGA,EAAID,EAAeC,IAAK,CACtC,GAAIC,GAAK5F,EAAM6F,eAAe9B,EAAW4B,GAAIhC,EAC7C6B,GAAMM,YAAYF,GAGpBN,EAAMQ,YAAYN,GAClBL,EAAaW,YAAYR,EAEzB,IAAInB,GAAW,SAACH,GACd3B,EAAQ2B,GAGLL,IACHhC,EAAE,mBAAmBK,GAAG,QAAS,SAAC6C,GAAD,MAAW7E,GAAM+F,SAAS5B,KAG7DxC,EAAE,cAAcK,GAAG,QAAS,SAAC6C,GAAD,MAAW7E,GAAMgG,SAAShB,UD+BxDxF,IAAK,cACLT,MAAO,WC1BP,GAAIuG,GAAQ/D,SAASkE,cAAc,QACnCH,GAAMW,UAAY,UAClB,IAAIC,GAAQ3E,SAASkE,cAAc,SAC/BG,EAAKrE,SAASkE,cAAc,MAC5BU,EAAU5E,SAASkE,cAAc,KAKrC,OAJAU,GAAQC,YAAc,QACtBR,EAAGE,YAAYK,GACfD,EAAMJ,YAAYF,GAClBN,EAAMQ,YAAYI,GACXZ,KD8BP9F,IAAK,iBACLT,MAAO,SC5BMiF,EAAUL,GACvB,GAAIiC,GAAKrE,SAASkE,cAAc,MAE5BY,EAAK9E,SAASkE,cAAc,KAQhC,IAPAY,EAAGD,YAAcpC,EAASkB,MAC1BmB,EAAGJ,UAAY,iBACfI,EAAG5E,MAAQ,kBACXmE,EAAGE,YAAYO,GAEfA,EAAK9E,SAASkE,cAAc,MAExB9B,EAAY,CACd,GAAI2C,GAAM/E,SAASkE,cAAc,SACjCa,GAAIF,YAAc,SAClBE,EAAIL,UAAY,yCAChBI,EAAGP,YAAYQ,GAKjB,MAFAV,GAAGE,YAAYO,GAERT,KD+BPpG,IAAK,WACLT,MAAO,SC7BAoF,GACP,GAEIoC,GAAU1B,MAAM3F,OAAOsH,SAK3B,IAAgB,aAAZD,EAGF,MADApC,GAASoC,GACFA,KDiCT/G,IAAK,WACLT,MAAO,SC9BAiG,GACP,GAAIhF,GAAQzC,KACRkJ,EAAM5B,MAAM3F,OAAOwH,WAAWA,WAC9BC,EAAaF,EAAIG,SAAS,GAAGR,WACpBK,GAAIG,SAAS,GAAGR,WAE7BpG,GAAMI,uBAAuB,sBAAwB8E,MAAOyB,IAActG,KAAK,WAE7E,IAAK,GADDwG,GAAY7B,EAAOzG,OACdL,EAAI,EAAGA,EAAI2I,EAAW3I,IAC7B,GAAI8G,EAAO9G,GAAGgH,QAAUyB,EAAY,CAClC3B,EAAO8B,OAAO5I,EAAG,EACjB,OAKJ8B,EAAM8D,iBAAiBkB,GAAQ,QDoCjCxF,IAAK,oBACLT,MAAO,SC9BS8F,EAAOV,EAAUR,GACjC,GAAI3D,GAAQzC,KACRwJ,EAAalC,EAAM3F,OAAOkH,WACZvB,GAAM3F,OAAO8H,IAE/BhH,GAAMI,uBAAuB,yBAA0BC,KAAK,SAAC4G,GAC3D,GAAIC,GAAYC,KAAKF,EAAAA,UAErBjH,GAAMI,uBAAuB,uBACzBgH,SAAUF,EAAWzD,OAAQ,SAAU4D,aAAc9G,OACvD+G,UAAWP,IAAe1G,KAAK,SAACtB,GAChCkF,QAAQC,IAAI,gBAAkBnF,EAAMwI,SAASC,UAAU,EAAG,IAAM,MAEhE,IAAI1E,GAAM/D,EAAMwI,SACZE,EAAA,MAGJ,IAAI3E,EAAIS,QAAQ,qBAAwB,CACtC,GAAImE,GAAY5E,EAAI0E,UAAU,EAAG1E,EAAIS,QAAQ,iBACzCoE,EAAgB7E,EAAI0E,UAAU1E,EAAIS,QAAQ,gBAAiBT,EAAIvE,QAE/DqJ,EAAaD,EAAcH,UAAUG,EAAcpE,QAAQ,KAAMT,EAAIvE,OAIvEkJ,GADEG,EAAWrE,QAAQ,UACVmE,EAAY,gBAAkBlE,SAASC,OAASmE,EAEhDF,EAAY,gBAAkBlE,SAASC,OAItDzD,EAAMM,UAAYmH,GAAY3E,EAE9BnB,EAAE,cAAc+C,KAAK,kBAAoBqC,EAAa,QACtDpF,EAAE,UAAUC,YAAY,QACxBD,EAAE,cAAciD,MAChBjD,EAAE,cAAcK,GAAG,QAAS,SAAC6C,GAC3BlD,EAAE,UAAUI,SAAS,QACrB/B,EAAM6H,kBAAkBZ,EAASC,EAAWnI,EAAO,SAAUgI,GAAY1G,KAAK,SAAC6E,GAC7Ef,EAASe,GACTlF,EAAM6B,4BAnCd7B,SAuCS,SAAA8H,GAAA,MAAO7D,SAAQC,IAAI,uBAAwB4D,QDkCpDtI,IAAK,WACLT,MAAO,SC/BAgJ,GAIP,IAAK,GAHDC,GAAO,GACPC,EAAWF,EAAMxJ,OAEZL,EAAI,EAAGA,EAAI+J,EAAU/J,IAC5B8J,GAAQ,4BACRA,GAAQ,+BAAiCD,EAAM7J,GAAK,WAGtD,OAAO8J,MDkCPxI,IAAK,oBACLT,MAAO,SChCSkI,EAASC,EAAWnI,EAAO0E,EAAQsD,GACnD,GAAI/G,GAAQzC,KACRuF,EAAM9C,EAAMM,SAEhB,OAAO,IAAI8B,SAAQ,SAACC,EAASC,GAE3BtC,EAAMe,UAAU+B,GAAKzC,KAAK,SAAC2D,GAEzBhE,EAAMI,uBAAuB,uBACzBgH,SAAUF,EAAWzD,OAAQA,EAAQ4D,aAAcrD,EAAUsD,UAAWP,IAAc1G,KAAK,SAACoC,GAE1FA,EAGHzC,EAAMI,uBAAuB,iBAAkBqC,OAAQA,EAAQwE,QAASA,IAAU5G,KAAK,SAACtB,GACtFsD,EAAQtD,EAAMmJ,YAAYC,WACzB,SAACL,GACFxF,EAAOwF,KAITxF,EAAO,8CAIN,SAACwF,GACFxF,EAAOwF,UDkCdtI,IAAK,mBACLT,MAAO,WC7BTkF,QAAQC,IAAI,wBDkCLtE,IAGT7C,GAAAA,WC/Be6C,ODiCTwI,GAAG,SAASnK,EAAQjB,EAAOD,GACjC,YAYA,SAASsL,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS7J,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAZhHC,OAAOC,eAAe/B,EAAS,cAC7BgC,OAAO,GAGT,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIjB,GAAI,EAAGA,EAAIiB,EAAMZ,OAAQL,IAAK,CAAE,GAAIkB,GAAaD,EAAMjB,EAAIkB,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMV,OAAOC,eAAeI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUT,EAAac,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBN,EAAYgB,UAAWF,GAAiBC,GAAaT,EAAiBN,EAAae,GAAqBf,ME3bhiB8J,EAAAxK,EAAA,qBF+bIyK,EAAoBL,EAAuBI,GE7bzCE,EFmcY,WEjchB,QAAAA,GAAYC,EAAWC,EAAQ9I,GAAYtB,EAAAlB,KAAAoL,EACzC,IAAI3I,GAAQzC,IACZyC,GAAM8I,gBAAkB,GAAAJ,GAAAA,WAAoBE,EAAWC,EAAQ9I,GFskCjE,MA9nBAf,GAAa2J,IACXnJ,IAAK,oBACLT,MAAO,WErcP,GAAIiB,GAAQzC,IACZ,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GAC3BtC,EAAM8I,gBAAgBC,oBAAoB1I,KAAK,WAC7CL,EAAMgJ,SAAWhJ,EAAMiJ,eACvBjJ,EAAMkJ,gBACN7G,WF2cJ7C,IAAK,aACLT,MAAO,WEtcP,GAAIiB,GAAQzC,KACR4L,EAAQtE,MAAM3F,OAAOiC,EACzBQ,GAAE,qBAAqB+C,KAAK,+EAAiFyE,EAAQ,gBACrHxH,EAAE,qBAAqByH,YACvBzH,EAAE,kBAAkBiD,MACpBjD,EAAE,kBAAkBK,GAAG,QAAS,SAAC6C,GAC/B,GAAIwE,GAAS1H,EAAE,eAAe2H,KAC9B3H,GAAE,eAAe2H,IAAI,IACrBtJ,EAAM8I,gBAAgBS,WAAWJ,EAAOE,GAAQhJ,KAAK,WACnDsB,EAAE,qBAAqB6H,aACvBxJ,EAAMyJ,uBF4cVjK,IAAK,eACLT,MAAO,WEvcP,GAAIiB,GAAQzC,IACZoE,GAAE,mBAAmB2H,IAAI,IACzB3H,EAAE,oBAAoByH,YACtBzH,EAAE,iBAAiBK,GAAG,QAAS,SAAC6C,GAC9B,GAAI6E,GAAY/H,EAAE,mBAAmB2H,KACrCtJ,GAAM8I,gBAAgBa,YAAYD,GAAWrJ,KAAK,WAChDL,EAAMyJ,uBF6cVjK,IAAK,aACLT,MAAO,WExcP,GAAIiB,GAAQzC,IACZoE,GAAE,qBAAqB2H,IAAI,IAC3B3H,EAAE,cAAc+C,KAAK,GACrB,IAAIkF,IAAc,kBAAmB,kBAAmB,mBACxDjI,GAAE,cAAckI,OAAOtM,KAAKuM,YAAY,iBAAkB,+BAAgCF,IAC1FjI,EAAE,eAAeyH,YAEjBzH,EAAE,kBAAkBiD,MACpBjD,EAAE,kBAAkBK,GAAG,QAAS,SAAC6C,GAC/B,GAAIkF,GAAcpI,EAAE,qBAAqB2H,KACzC,IAAKS,EAEE,CACL,GAAIC,GAAqBrI,EAAE,mBAAmB2H,KAC9CtJ,GAAM8I,gBAAgBmB,UAAUF,EAAaC,GAAoB3J,KAAK,WACpEsB,EAAE,cAAcI,SAAS,QACzBJ,EAAE,eAAe6H,aACjBxJ,EAAMkK,gBANRC,aAAYC,MAAM,uBAAwB,OAU9CzI,EAAE,aAAaiD,MACfjD,EAAE,aAAaK,GAAG,QAAS,SAAC6C,GAC1BlD,EAAE,cAAcC,YAAY,aF6c9BpC,IAAK,wBACLT,MAAO,WEzcP,GAAIiB,GAAQzC,KACR4D,EAAK0D,MAAM3F,OAAOmL,QAAQ,MAAMlJ,GAChCmJ,EAAUnJ,EAAG8D,MAAM,KACnBsF,EAAeC,SAASF,EAAQA,EAAQ/L,OAAS,GACrD+L,GAAQG,KACR,IAAIV,GAAcO,EAAQI,KAAK,IAC/B1K,GAAM8I,gBAAgB6B,UAAUZ,GAAa1J,KAAK,SAACuK,GACjD,GAAIC,GAAeD,EAAOE,iBAC1B,IAAID,GAAgBN,EAAc,CAChC,GAAIQ,GAAcP,SAASD,EAAe,EAC1CvK,GAAM8I,gBAAgBkC,qBAAqBjB,EAAaQ,EAAcQ,GAAa1K,KAAK,WACtFL,EAAMkK,kBFgdZ1K,IAAK,gBACLT,MAAO,WE1cP,GAAIiB,GAAQzC,KACR4D,EAAK0D,MAAM3F,OAAOmL,QAAQ,MAAMlJ,GAChCmJ,EAAUnJ,EAAG8D,MAAM,MACnBoE,EAASiB,EAAQA,EAAQ/L,OAAS,EACtC+L,GAAQG,KACR,IAAItB,GAAQmB,EAAQI,KAAK,KACzB1K,GAAM8I,gBAAgBmC,gBAAgB9B,EAAOE,GAAQhJ,KAAK,WACxDL,EAAMyJ,qBF+cRjK,IAAK,eACLT,MAAO,WE3cP,GAAIiB,GAAQzC,KACRmM,EAAY7E,MAAM3F,OAAOmL,QAAQ,MAAMzD,SAAS,GAAGzF,EACvDnB,GAAM8I,gBAAgBoC,YAAYxB,GAAWrJ,KAAK,WAChDL,EAAMyJ,qBFgdRjK,IAAK,gBACLT,MAAO,WE5cP,GAAIiB,GAAQzC,KACRwM,EAAclF,MAAM3F,OAAOmL,QAAQ,MAAMlJ,EAC7CnB,GAAM8I,gBAAgBqC,aAAapB,GAAa1J,KAAK,WACnDL,EAAMkK,eFidR1K,IAAK,cACLT,MAAO,WE7cP,GAAIiB,GAAQzC,KACR4D,EAAK0D,MAAM3F,OAAOmL,QAAQ,MAAMlJ,GAChCmJ,EAAUnJ,EAAG8D,MAAM,KACnBmG,EAAWd,EAAQA,EAAQ/L,OAAS,EACxC+L,GAAQG,KACR,IAAIV,GAAcO,EAAQI,KAAK,KAC3BW,EAAOrL,EAAM8I,gBAAgBwC,gBAAgBvB,EAAaqB,EAE9DpL,GAAM8I,gBAAgByC,WAAWxB,EAAasB,GAAMhL,KAAK,WACvDL,EAAMkK,eFkdR1K,IAAK,mBACLT,MAAO,WE9cP,GAAIiB,GAAQzC,IACZyC,GAAM8I,gBAAgB0C,kBAAkBnL,KAAK,SAACoL,GAC5C9J,EAAE,kBAAkB+C,KAAK,IACzB1E,EAAM8I,gBAAgB4C,oBAAoBrL,KAAK,SAACsL,GAC9CA,EAASnH,KAAK,2BAEd7C,EAAE,kBAAkBkI,OAAO7J,EAAM8J,YAAY,gBAAiB,6BAA8B6B,EAAUF,IAEtG9J,EAAE,kBAAkBK,GAAG,QAAS,SAAC6C,GAC/B,GAAIkF,GAAcpI,EAAE,kBAAkBiK,KAAK,aAAa,GAAGxF,WACvC,6BAAhB2D,IACFA,EAAcxJ,QAEhBP,EAAM8I,gBAAgB+C,mBAAmB9B,YFqd/CvK,IAAK,mBACLT,MAAO,SEhdQ+M,EAAOC,EAAMC,EAAQC,GACpC,GAAIjE,GAAO,6BAA+B8D,EAAQ,WAElD,KAAK,GAAI5N,KAAK6N,GAAM,CAClB/D,GAAQ,mBAAqB+D,EAAK7N,GAAK,GACvC,KAAK,GAAIgO,KAAKD,GAAM/N,GAClB8J,GAAQ,eAAiBgE,EAAO9N,GAAK,KAAO+N,EAAM/N,GAAGgO,GAAK,YAI9D,MAAOlE,MFmdPxI,IAAK,WACLT,MAAO,SEjdAoN,GACP,GAAIC,GAAA,MAEJ,QAAOD,GACL,IAAK,OAEH,GADAC,EAAOzK,EAAE,WAAWiK,KAAK,SAAStC,MAC9B8C,EAAK7I,QAAQ,UAAa,CAC5B,GAAI8I,GAAYD,EAAKnH,MAAM,IAC3BoH,GAAU,GAAKA,EAAU,GAAG7E,UAAU,EAAG6E,EAAU,GAAG9N,OAAS,EAC/D,IAAI+N,IAAU,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,WAC5HF,GAAOC,EAAU,GAAK,KAAOC,EAAO/I,QAAQ8I,EAAU,IAAM,GAAK,IAAMA,EAAU,OAC5E,CACL,GAAIE,GAAYH,EAAKnH,MAAM,IAC3BmH,GAAOG,EAAU,GAAK,IAAMA,EAAU,GAAK,IAAMA,EAAU,GAE7D,KACF,KAAK,iBACHH,EAAOzK,EAAE,UAAUiK,KAAK,aAAa5E,MACrC,MACF,KAAK,4BACCoF,EAA+D7L,SAAxDoB,EAAE,+CAA+C,MAC1DyK,EAAOzK,EAAE,+CAA+C,GAAGR,GAE7D,MACF,KAAK,UACHiL,EAAOzK,EAAE,YAAYiK,KAAK,aAAa5E,MACvC,MACF,SACEoF,EAAOzK,EAAE,WAAWiK,KAAK,SAAStC,MAItC,MAAO8C,MFsdP5M,IAAK,WACLT,MAAO,SEpdAgJ,GAIL,IAAK,GAHDC,GAAO,GACPC,EAAWF,EAAMxJ,OAEZL,EAAI,EAAGA,EAAI+J,EAAU/J,IAC5B8J,GAAQ,4BACRA,GAAQ,+BAAiCD,EAAM7J,GAAK,WAGtD,OAAO8J,MFudTxI,IAAK,cACLT,MAAO,SErdGoC,EAAI2K,EAAO9D,EAAMwE,GAC3B,GAAIC,GAAU,eAAiBtL,EAAK,uDAAyD2K,EAAQ,WACrG,KAAK,GAAI5N,KAAK8J,GAEVyE,GADelM,SAAbiM,EAAyBA,IAAaxE,EAAK9J,GAClC,wBAA0BiD,EAAK,KAAO6G,EAAK9J,GAAK,YAEhD,eAAiBiD,EAAK,KAAO6G,EAAK9J,GAAK,WAKtD,OAFAuO,IAAW,eF0dXjN,IAAK,oBACLT,MAAO,WErdP,GAAIiB,GAAQzC,IAEZyC,GAAM8I,gBAAgB4D,uBAAuBrM,KAAK,SAACsL,GACjDhK,EAAE,gBAAgBI,SAAS,QAC3BJ,EAAE,qBAAqB+C,KAAK,GAE5B,IAAIiI,MACAC,KACAC,IAEJ,KAAK,GAAI3O,KAAKyN,GACZgB,EAAenI,KAAKmH,EAASzN,GAAG4N,OAChCc,EAAYpI,KAAKmH,EAASzN,GAAG0O,aAC7BC,EAAIrI,KAAKmH,EAASzN,GAAG2O,IAGvB,IAAIvH,GAAQ,UACRwH,EAAoC,IAA1BH,EAAepO,MAE7B,KAAK,GAAIoH,KAAKgH,GAAgB,CAC5BrH,GAAS,kBAAoBqH,EAAehH,GAAK,gDAAkDgH,EAAehH,GAAK,6JAEvH,KAAK,GAAIuG,KAAKU,GAAYjH,GACxBL,GAAS,WAAauH,EAAIlH,GAAGuG,GAAK,uVAAyVU,EAAYjH,GAAGuG,GAAK,mIAEjZ5G,IAAS,WAAaqH,EAAehH,GAAK,yKAEvCmH,EAIHnL,EAAE,gBAAgBC,YAAY,SAH9B0D,GAAS,mBACT3D,EAAE,qBAAqBkI,OAAOvE,IAIhC3D,EAAE,aAAaK,GAAG,QAAS,SAAC6C,GAAY7E,EAAM+M,wBAC9CpL,EAAE,gBAAgBK,GAAG,QAAS,SAAC6C,GAAY7E,EAAMgN,gBACjDrL,EAAE,cAAcK,GAAG,QAAS,SAAC6C,GAAY7E,EAAMiN,cAC/CtL,EAAE,2BAA2BK,GAAG,QAAS,SAAC6C,GAAY7E,EAAMkN,0BAC5DvL,EAAE,2BAA2BK,GAAG,QAAS,SAAC6C,GAAY7E,EAAMmN,0BAC5DxL,EAAE,eAAeiD,MACjBjD,EAAE,eAAeK,GAAG,QAAS,SAAC6C,GAAY7E,EAAMoN,eAChDzL,EAAE,kBAAkBK,GAAG,QAAS,SAAC6C,GAAY7E,EAAMqN,uBFwerD7N,IAAK,UACLT,MAAO,WEpePxB,KAAK+P,mBACL/P,KAAKgQ,uBFweL/N,IAAK,wBACLT,MAAO,WEreP,GAAIiB,GAAQzC,KACR4D,EAAK0D,MAAM3F,OAAOmL,QAAQ,MAAMlJ,GAChCmJ,EAAUnJ,EAAG8D,MAAM,KACnBsF,EAAeC,SAASF,EAAQA,EAAQ/L,OAAS,GACrD,IAAqB,IAAjBgM,EAAoB,CACtBD,EAAQG,KACR,IAAIV,GAAcO,EAAQI,KAAK,KAC3BK,EAAcR,EAAe,CAEjCvK,GAAM8I,gBAAgB0E,qBAAqBzD,EAAaQ,EAAcQ,GAAa1K,KAAK,WACtFL,EAAMkK,gBF2eV1K,IAAK,gBACLT,MAAO,WEteP,GAAIiB,GAAQzC,IACZyC,GAAM8I,gBAAgB2E,YAAYpN,KAAK,SAACqN,GACtC/L,EAAE,mBAAmB+C,KAAK,GAC1B,IAAIiJ,GAASD,EAASE,YAClBC,EAAUH,EAASG,QACnBhB,EAAMa,EAASb,IAEfvH,EAAQ,UACRwH,EAA4B,IAAlBa,EAAOpP,MAErB,KAAK,GAAIL,KAAKyP,GAAQ,CACpBrI,GAAS,sBAAwBqI,EAAOzP,GAAK,KAAOyP,EAAOzP,GAAK,qLAChE,KAAK,GAAIgO,KAAK2B,GAAQ3P,GACpBoH,GAAS,WAAauH,EAAI3O,GAAGgO,GAAK,kCAAoC2B,EAAQ3P,GAAGgO,GAAK,8JAGxF5G,IAAS,WAAaqI,EAAOzP,GAAK,iEAAmEyP,EAAOzP,GAAK,qDAG9G4O,EAIHnL,EAAE,mBAAmBkI,OAAO,oCAH5BvE,GAAS,mBACT3D,EAAE,mBAAmBkI,OAAOvE,IAK9B3D,EAAE,eAAeiD,MACjBjD,EAAE,eAAeK,GAAG,QAAS,SAAC6C,GAAY7E,EAAM8N,eAChDnM,EAAE,kBAAkBK,GAAG,QAAS,SAAC6C,GAAY7E,EAAM+N,kBACnDpM,EAAE,cAAciD,MAChBjD,EAAE,cAAcK,GAAG,QAAS,SAAC6C,GAAY7E,EAAMgO,iBAC/CrM,EAAE,iBAAiBK,GAAG,QAAS,SAAC6C,GAAY7E,EAAMiO,sBFmfpDzO,IAAK,oBACLT,MAAO,SEhfSmP,GAChB,GAAIC,GAAgBC,KAAKC,MAAMH,EAC/B,KAAK,GAAIhQ,KAAKiQ,GACZ5Q,KAAKuL,gBAAgBmB,UAAU/L,EAAGqC,OAAW4N,EAAcjQ,GAE7DyD,GAAE,eAAe6H,gBFmfjBhK,IAAK,eACLT,MAAO,WEjfM,GAAAuP,GAAA/Q,IACb,QACEgR,KAAM,SAACzN,GAAa,MAAO,0CAC3B0N,OAAQ,SAAC1N,GAAa,MAAOwN,GAAKxE,YAAYhJ,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAC3E2N,KAAM,SAAC3N,GAAa,MAAO,yCAA2CA,EAAS,yBF6fjFtB,IAAK,6BACLT,MAAO,SE1fkBgL,GAAa,GAAA2E,GAAAnR,KAClC4O,EAAWtH,MAAM3F,OAAO8H,IAC5BrF,GAAE,aAAa+C,KAAKnH,KAAKoR,qBAAqB5E,EAAaoC,IAC3DxK,EAAE,WAAWiN,QAAQlK,KAAK,GAE1B,IAAIqH,IAAQ,QAAS,UAAW,OAC5BC,GAAU,WAAY,UAAW,UACjCC,IAEJ1O,MAAKuL,gBAAgB+F,cAAcxO,KAAK,SAAC2E,GACvCiH,EAAMzH,KAAKQ,GACX0J,EAAK5F,gBAAgBgG,iBAAiBzO,KAAK,SAAC0O,GAC1C9C,EAAMzH,KAAKuK,GACX9C,EAAMzH,MAAM,iCACZ7C,EAAE,WAAWkI,OAAO6E,EAAKM,iBAAiB,+BAAgCjD,EAAMC,EAAQC,IACxFtK,EAAE,aAAaC,YAAY,eFigB/BpC,IAAK,sBACLT,MAAO,WE7fa,GAAAkQ,GAAA1R,KAChBwM,EAAclF,MAAM3F,OAAOmL,QAAQ,MAAMlJ,EAE7CQ,GAAE,oBAAoBiN,QAAQlK,KAAK,GACnC,IAAIwK,GAAY3R,KAAKuL,gBAAgBqG,cACrCxN,GAAE,oBAAoBkI,OAAOtM,KAAKoH,SAASuK,IAC3CvN,EAAE,aAAaI,SAAS,QACxBJ,EAAE,aAAayH,YACfzH,EAAE,oBAAoBiD,MACtBjD,EAAE,oBAAoBK,GAAG,QAAS,SAAC6C,GAAYoK,EAAKG,2BAA2BrF,QFogB/EvK,IAAK,uBACLT,MAAO,SElgBYgL,EAAaoC,GAChC,GAAInM,GAAQzC,KACR6O,EAAOpM,EAAM8I,gBAAgBuG,gBAAgBlD,EACjDxK,GAAE,mBAAmB+C,KAAK0H,EAAKN,OAC/BnK,EAAE,gBAAgB+C,KAAK0H,EAAKkD,aAC5B3N,EAAE,WAAW+C,KAAK,IAED,6BAAbyH,EACFxK,EAAE,sBAAsBC,YAAY,SAC/B,WACLD,EAAE,sBAAsBI,SAAS,OACjC,IAAIwN,GAAOnD,EAAKoD,MAFXC,EAAA,SAGIvR,GACP8B,EAAM8I,gBAAgB4G,iBAAiBrP,KAAK,SAACuN,GAC1B,mBAAbzB,GACFoD,EAAKrR,GAAG,GAAGsG,KAAKoJ,GAElBjM,EAAE,WAAWkI,OAAO7J,EAAMgJ,SAASuG,EAAKrR,GAAG,IAAIqR,EAAKrR,GAAG,KACtC,mBAAbiO,GACFoD,EAAKrR,GAAG,GAAGuM,QAPjB,KAAK,GAAIvM,KAAKqR,GAAME,EAAXvR,EAWO,UAAZiO,GACFxK,EAAE,eAAegO,WACfC,cAAc,EACdC,YAAa,QAInBtO,SAAS6D,eAAe,SAAS0K,SAAU,EAC3CvO,SAAS6D,eAAe,SAAS0K,SAAU,EAC3CnO,EAAE,WAAWiD,MACbjD,EAAE,WAAWK,GAAG,QAAS,SAAC6C,GACxB,GAAwDtE,SAApDoB,EAAE,2CAA2C,GAY/C,KAAMxD,OAAM,iEAXZ,IAAI4R,GAAO/P,EAAMgQ,SAAS7D,GACtB8D,EAAWtO,EAAE,2CAA2C,GAAGR,EAC/D8O,GAAwB,UAAbA,CACX,IAAIC,GAAQvO,EAAE,WAAWiK,KAAK,aAAa,GAAGzK,GAC1CjC,EAASyC,EAAE,WAAWiK,KAAK,aAAa,GAAGxF,WAC/ClH,GAAqB,iCAAXA,EAA6C,SAAWA,EAClEc,EAAM8I,gBAAgBqH,QAAQhE,EAAUpC,EAAagG,EAAME,EAAUC,EAAOhR,GAAQmB,KAAK,WACvFsB,EAAE,aAAa6H,aACfxJ,EAAMkK,iBFihBZ1K,IAAK,cACLT,MAAO,SE1gBGqR,GACV,GAAIjP,GAAK0D,MAAM3F,OAAOmL,QAAQ,MAAMlJ,GAChCmJ,EAAUnJ,EAAG8D,MAAM,KACnBiL,EAAQ5F,EAAQ,EACpBA,GAAQ+F,OACR,IAAInR,GAASoL,EAAQI,KAAK,IACtB4F,EAAYzL,MAAM3F,OAAOmL,QAAQ,MAAMzD,SAAS,GAAGzF,EACvD5D,MAAKuL,gBAAgByH,WAAWH,EAAcF,EAAOhR,EAAQoR,GAC7D/S,KAAK2M,aF6gBL1K,IAAK,gBACLT,MAAO,WE3gBO,GAAAyR,GAAAjT,IACdoE,GAAE,iBAAiBK,GAAG,QAAS,SAAC6C,GAC9BnD,OAAOJ,aAAcX,MAAQC,OAAQ,iBAAmBQ,GAAI,uBAAyB,KACrFO,EAAE,eAAeC,YAAY,QAC7BL,SAASC,qBAAqB,QAAQ,GAAGC,MAAQ,4BAGnDE,EAAE,uBAAuBK,GAAG,QAAS,SAAC6C,GACpClD,EAAE,qBAAqBC,YAAY,QACnCD,EAAE,uBAAuBI,SAAS,QAClCyO,EAAKtG,UACLsG,EAAK/G,kBAGP9H,EAAE,oBAAoBK,GAAG,QAAS,SAAC6C,GACjCnD,OAAOJ,aAAcX,MAAQC,OAAQ,iBAAmBQ,GAAI,uBAAyB,KACrFO,EAAE,eAAeI,SAAS,QAC1BR,SAASC,qBAAqB,QAAQ,GAAGC,MAAQ,kCAGnDE,EAAE,aAAaK,GAAG,QAAS,SAAC6C,GAC1BlD,EAAE,sBAAsBI,SAAS,QACjCJ,EAAE,cAAcI,SAAS,UAG3BJ,EAAE,gBAAgBK,GAAG,SAAU,SAAC6C,GAC9B,GAAI4L,GAAO5L,EAAM3F,OAAOwR,MAAM,GAC1BC,EAAS,GAAIC,WACjBD,GAAOE,WAAWJ,EAAM,SACxBE,EAAOG,OAAS,SAACjM,GACf2L,EAAKO,kBAAkBlM,EAAM3F,OAAOuD,QACpC+N,EAAKtG,WAEPyG,EAAOK,QAAU,SAACnM,GAChB,KAAM1G,OAAM,gCFkhBhBqB,IAAK,YACLT,MAAO,WE9gBG,GAAAkS,GAAA1T,KACN2T,EAAYrM,MAAM3F,OAAOkH,YACzBjF,EAAK0D,MAAM3F,OAAOmL,QAAQ,MAAMlJ,GAChCmJ,EAAUnJ,EAAG8D,MAAM,KACnBmG,EAAWd,EAAQA,EAAQ/L,OAAS,EACxC+L,GAAQG,KACR,IAAIV,GAAcO,EAAQI,KAAK,IAC/BnN,MAAKuL,gBAAgBwC,gBAAgBvB,EAAaqB,GAAU/K,KAAK,SAACgL,GAChE,GAAiC,iBAA7BA,EAAKiF,UAAUa,WAA0D,kBAA1B9F,EAAKiF,UAAUxP,OAChEa,EAAE,mBAAmBI,SAAS,YACzB,CACL,GAAIqP,GAAA,MAEFA,GADE/F,EAAK4E,SACG1O,SAAS6D,eAAe,aAExB7D,SAAS6D,eAAe,aAEpCgM,EAAQtB,SAAU,EAClBnO,EAAE,mBAAmBC,YAAY,QAEnCD,EAAE,eAAeI,SAAS,QAC1BJ,EAAE,mBAAmBI,SAAS,QAE9BJ,EAAE,iBAAiByH,YACnBzH,EAAE,eAAe+C,KAAK,UAAYwM,EAAY,aACb,iBAA7B7F,EAAKiF,UAAUa,WACjBxP,EAAE,sBAAsBC,YAAY,QAEtCD,EAAE,0BAA0BK,GAAG,QAAS,SAAC6C,GAAYoM,EAAKI,YAAY,eAAgBtH,EAAasB,KACnG1J,EAAE,aAAaiD,MACfjD,EAAE,aAAaK,GAAG,QAAS,SAAC6C,GAAYoM,EAAKI,YAAY,gBAAiBtH,EAAasB,UFwhBzF7L,IAAK,cACLT,MAAO,SErhBGkC,EAAM8I,EAAasB,GAC7B,GAAIrL,GAAQzC,KACRuO,EAAQnK,EAAE,eAAeqF,OACzBsK,EAAaxF,EAAM7G,MAAM,KACzBsM,EAAQD,EAAW/N,QAAQ,KAI/B,QAHIgO,SACFA,EAAQD,EAAW/N,QAAQ,QAErBtC,GACN,IAAK,gBACH,GAAIuQ,GAAc7P,EAAE,8CAA8C,GAAGR,EAEjD,eAAhBqQ,GACFF,EAAWC,EAAQ,GAAK,UACxBC,GAAc,IAEdF,EAAWC,EAAQ,GAAK,UACxBC,GAAc,GAEhB1F,EAAQwF,EAAW5G,KAAK,KACxB/I,EAAE,eAAe+C,KAAK,UAAYoH,EAAQ,aAC1C9L,EAAM8I,gBAAgB2I,aAAa1H,EAAasB,EAAMmG,GAAanR,KAAK,WACtEL,EAAMkK,WAER,MACF,KAAK,eACH,GAAIwH,GAAsB7M,MAAM3F,OAAOyS,OAAO,GAAGvL,WAElCkL,GAAWC,EAAQ,EAClCD,GAAaxF,EAAM7G,MAAM,iBACG,oBAAxByM,GACF/P,EAAE,mBAAmBC,YAAY,QACjC4P,EAAcnG,EAAK4E,SACnByB,EAAsB,IACtB5F,EAAQ,uCAAyCwF,EAAW,KAE5D3P,EAAE,mBAAmBI,SAAS,QAC9ByP,GAAc,EACdE,EAAsB,gBACtB5F,EAAQ,yDAA2DwF,EAAW,IAGhF3P,EAAE,eAAe+C,KAAK,UAAYoH,EAAQ,aAC1C9L,EAAM8I,gBAAgB2I,aAAa1H,EAAasB,EAAMmG,EAAaE,GAAqBrR,KAAK,WAC3FL,EAAMkK,iBF4hBPvB,IAGT5L,GAAAA,WExhBe4L,IF0hBZiJ,oBAAoB,IAAIC,GAAG,SAAS5T,EAAQjB,EAAOD,GACtD,YAQA,SAAS0B,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHC,OAAOC,eAAe/B,EAAS,cAC7BgC,OAAO,GAGT,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIjB,GAAI,EAAGA,EAAIiB,EAAMZ,OAAQL,IAAK,CAAE,GAAIkB,GAAaD,EAAMjB,EAAIkB,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMV,OAAOC,eAAeI,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUT,EAAac,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBN,EAAYgB,UAAWF,GAAiBC,GAAaT,EAAiBN,EAAae,GAAqBf,MGxlC1hBmT,EH4lCgB,WG1lCpB,QAAAA,GAAYlJ,EAAWC,EAAQ9I,GAAYtB,EAAAlB,KAAAuU,EACzC,IAAI9R,GAAQzC,IACZyC,GAAMC,QAAU2I,EAChB5I,EAAM+R,QAAUlJ,EAChB7I,EAAMG,YAAcJ,EHgqDtB,MA9jBAf,GAAa8S,IACXtS,IAAK,uBACLT,MAAO,SG/lCYkD,EAAYC,GAC/B,GAAIlC,GAAQzC,KACR4E,EAAA,MAEJ,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BH,GAAYlB,KAAM,UAAWG,GAAIpB,EAAM+R,QAAS1Q,KAAMrB,EAAMC,QAC1DU,MAAQ4B,SAAU,SAAU3B,OAAQqB,EAAYnB,OAAQoB,IAC1DlC,EAAMG,YAAYmB,YAAYa,EAAS,SAACK,GACtC,GAAIC,GAASD,EAAI7B,KAAK5B,KACtBsD,GAAQI,UHomCZjD,IAAK,oBACLT,MAAO,WGhmCW,GAAAuP,GAAA/Q,IAClB,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GAC3B,GAAItC,GAAAsO,CACJtO,GAAMgS,qBAAqB,mBAAoB3R,KAAK,SAAC4R,GACnDjS,EAAM2L,SAAWsG,EACjBjS,EAAMkP,UAAYlP,EAAMkS,eACxBlS,EAAMmS,SAAWnS,EAAMoS,qBACvBpS,EAAMqS,WAAarS,EAAMsS,uBACzBjQ,WHumCJ7C,IAAK,aACLT,MAAO,SGnmCE2K,EAAW6I,GACpB,MAAOhV,MAAKyU,qBAAqB,cAAetI,UAAWA,EAAW8I,UAAWD,OHsmCjF/S,IAAK,cACLT,MAAO,SGpmCG2K,GACV,MAAOnM,MAAKyU,qBAAqB,eAAgBtI,UAAWA,OHumC5DlK,IAAK,YACLT,MAAO,SGrmCC+M,EAAO9B,EAAoBY,GACnC,GAAerK,SAAXqK,EACF,OAAQZ,GACN,IAAK,kBACHA,EAAqB,gBACrB,MACF,KAAK,kBACHA,EAAqB,gBACrB,MACF,KAAK,mBACHA,EAAqB,iBACrB,MACF,SACEA,EAAqBzJ,OAI3B,MAAOhD,MAAKyU,qBAAqB,aAC9BS,OAAQ,OAAQjT,IAAKsM,EAAOlB,OAAQA,EAAQZ,mBAAoBA,OHumCnExK,IAAK,uBACLT,MAAO,SGrmCYgL,EAAaQ,EAAcQ,GAG9C,MAFAxN,MAAK+N,gBAAgBvB,EAAagB,GAAaK,SAAWb,EAC1DhN,KAAK+N,gBAAgBvB,EAAaQ,GAAca,SAAWL,EACpDxN,KAAKyU,qBAAqB,gBAAiBS,OAAQ,YHwmC1DjT,IAAK,cACLT,MAAO,SGtmCG2K,GACV,MAAOnM,MAAKyU,qBAAqB,eAAgBtI,UAAWA,OHymC5DlK,IAAK,eACLT,MAAO,SGvmCI+M,GACX,MAAOvO,MAAKyU,qBAAqB,gBAAiBS,OAAQ,OAAQjT,IAAKsM,OH0mCvEtM,IAAK,aACLT,MAAO,SGxmCEgL,EAAasB,GACtB,GAAIrL,GAAQzC,IAEZ,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GAC3BtC,EAAMgS,qBAAqB,mBAAoB3R,KAAK,SAAC4R,GACnDA,EAAalI,GAAawB,WAAWF,GACrCrL,EAAMgS,qBAAqB,gBAAiBS,OAAQ,SAASpS,KAAK,WAChEgC,aH8mCN7C,IAAK,kBACLT,MAAO,WGxmCP,MAAOxB,MAAKyU,qBAAqB,0BH4mCjCxS,IAAK,YACLT,MAAO,SG1mCCS,GACR,MAAOjC,MAAKyU,qBAAqB,cAAexS,IAAKA,OH6mCrDA,IAAK,oBACLT,MAAO,WG1mCP,GAAIiB,GAAQzC,IACZ,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GAC3BtC,EAAMgS,qBAAqB,mBAAoB3R,KAAK,SAACsL,GACnD,GAAI+G,KAEJ,KAAK,GAAIxU,KAAKyN,GACZ+G,EAAOlO,KAAKtG,EAGdmE,GAAQqQ,UHgnCZlT,IAAK,aACLT,MAAO,SG5mCEmR,GACT,GAAIyC,KAEJ,KAAK,GAAIzU,KAAKX,MAAKoO,SAASuE,GACtByC,EAAQpP,QAAQrF,SAClByU,EAAQnO,KAAKtG,EAIjB,OAAOyU,MH+mCPnT,IAAK,uBACLT,MAAO,SG7mCYgL,EAAaQ,EAAcQ,GAC9C,GAAI/K,GAAQzC,IAGZ,OAFAyC,GAAMsL,gBAAgBvB,EAAaQ,GAAca,SAAWL,EAC5D/K,EAAMsL,gBAAgBvB,EAAagB,GAAaK,SAAWb,EACpDvK,EAAMgS,qBAAqB,gBAAiBS,OAAQ,YHgnC3DjT,IAAK,eACLT,MAAO,WG7mCP,OACE6T,MACE9G,MAAO,wNACPwD,YAAa,eACbE,QACG,aAGLqD,QACE/G,MAAO,4OACPwD,YAAa,iBACbE,QACG,aAGLsD,kBACEhH,MAAO,iPACPwD,YAAa,qBACbE,QACG,UAAW,QAAS,sBAGzBuD,4BACEjH,MAAO,4NACP0D,UAEFwD,mBACElH,MAAO,sVACPwD,YAAa,mBACbE,QACG,aAGLyD,SACEnH,MAAO,sNACPwD,YAAa,kBACbE,QACG,UAAW,UAAW,qBAAsB,WAAY,SAAU,SAAU,UAAW,YAAa,WAAY,kBH0mCvHhQ,IAAK,qBACLT,MAAO,WGpmCP,GAAIiB,GAAQzC,IACZ,QACEqV,KAAM,SAAC9R,GACL,MAAO,IAAIsB,SAAQ,SAACC,EAASC,GAC3B,GAAIyH,GAAcjJ,EAAO,EACzBd,GAAMgS,qBAAqB,mBAAoB3R,KAAK,SAAC4R,GACnDA,EAAalI,GAAamJ,WAAWpS,EAAO,IAAMqQ,UAAW,OAAQgC,SAAU,SAAUrS,OAAQA,EAAO,IAAMA,EAAO,GAAIA,EAAO,IAChId,EAAMgS,qBAAqB,gBAAiBS,OAAQ,SAASpS,KAAK,WAChEgC,WAKRwQ,OAAQ,SAAC/R,GACP,MAAO,IAAIsB,SAAQ,SAACC,EAASC,GAC3B,GAAIyH,GAAcjJ,EAAO,EACzBd,GAAMgS,qBAAqB,mBAAoB3R,KAAK,SAAC4R,GACnDA,EAAalI,GAAamJ,WAAWpS,EAAO,IAAMqQ,UAAW,SAAUgC,SAAU,SAAUrS,OAAQA,EAAO,IAAMA,EAAO,GAAIA,EAAO,IAClId,EAAMgS,qBAAqB,gBAAiBS,OAAQ,SAASpS,KAAK,WAChEgC,WAKRyQ,iBAAkB,SAAChS,GACjB,MAAO,IAAIsB,SAAQ,SAACC,EAASC,GAC3B,GAAIyH,GAAcjJ,EAAO,EACzBd,GAAMgS,qBAAqB,mBAAoB3R,KAAK,SAAC4R,GACnDA,EAAalI,GAAamJ,WAAWpS,EAAO,IAAMqQ,UAAW,SAAUgC,SAAU,KAAMrS,OAAQA,EAAO,IAAMA,EAAO,GAAIA,EAAO,IAC9Hd,EAAMgS,qBAAqB,gBAAiBS,OAAQ,SAASpS,KAAK,WAChEgC,WAKR0Q,2BAA4B,SAACjS,GAC3B,MAAO,IAAIsB,SAAQ,SAACC,EAASC,GAC3B,GAAIyH,GAAcjJ,EAAO,EACzBd,GAAMgS,qBAAqB,mBAAoB3R,KAAK,SAAC4R,GACnD,GAAIkB,GAAW,QACG,mBAAdrS,EAAO,KACTqS,EAAW,MAIblB,EAAalI,GAAamJ,WAAWpS,EAAO,IAAMqQ,UAAW,eAAgBgC,SAAUA,EAAUrS,OAAQA,EAAO,IAAMA,EAAO,GAAIA,EAAO,IACxId,EAAMgS,qBAAqB,gBAAiBS,OAAQ,SAASpS,KAAK,WAChEgC,WAKR2Q,kBAAmB,SAAClS,GAClB,MAAO,IAAIsB,SAAQ,SAACC,EAASC,GAC3B,GAAIyH,GAAcjJ,EAAO,EACzBd,GAAMgS,qBAAqB,mBAAoB3R,KAAK,SAAC4R,GACnDnR,EAAO,GAAKA,EAAO,GAAGmE,MAAM,OAC5B,IAAImO,GAAQtS,EAAO,GAAG,GAAGmE,MAAM,IAC/BmO,GAAQA,EAAM1I,KAAK,GACnB,IAAI2I,GAAMvS,EAAO,GAAG,GAAGmE,MAAM,IAC7BoO,GAAMA,EAAI3I,KAAK,IACfuH,EAAalI,GAAamJ,WAAWpS,EAAO,IAAMqQ,UAAW,OAAQgC,SAAU,UAAWrS,QAASsS,EAAOC,IAAQvS,EAAO,GAAIA,EAAO,IACpId,EAAMgS,qBAAqB,gBAAiBS,OAAQ,SAASpS,KAAK,WAChEgC,WAMR4Q,QAAS,SAACnS,GACR,MAAO,IAAIsB,SAAQ,SAACC,EAASC,GAC3B,GAAIgR,IAAY,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,WAClFxS,GAAO,GAAKwS,EAAS/P,QAAQzC,EAAO,GACpC,IAAIiJ,GAAcjJ,EAAO,EACzBd,GAAMgS,qBAAqB,mBAAoB3R,KAAK,SAAC4R,GACnDA,EAAalI,GAAamJ,WAAWpS,EAAO,IAAMqQ,UAAW,UAAWgC,SAAU,SAAUrS,OAAQA,EAAO,IAAMA,EAAO,GAAIA,EAAO,IACnId,EAAMgS,qBAAqB,gBAAiBS,OAAQ,SAASpS,KAAK,WAChEgC,eH6mCV7C,IAAK,uBACLT,MAAO,WGtmCc,GAAA2P,GAAAnR,IACrB,QACEqV,KAAM,SAAC1C,EAAO9D,GAAW,MAAOsC,GAAK6E,YAAYnH,GAAQsC,EAAK8E,aAAatD,IAC3E4C,iBAAkB,SAAC5C,EAAO9D,GAAW,MAAOsC,GAAK+E,cAAcrH,GAAQsC,EAAK8E,aAAatD,IACzF2C,OAAQ,SAAC3C,EAAO9D,GAAW,MAAOsC,GAAKgF,cAActH,GAAQsC,EAAK8E,aAAatD,IAC/E+C,QAAS,SAAC/C,EAAO9D,GAAW,OAAO,EAAOsC,EAAK8E,aAAatD,IAC5D6C,2BAA4B,SAAC7C,EAAO9D,GAAW,MAAOsC,GAAKiF,wBAAwBvH,GAAQsC,EAAK8E,aAAatD,IAC7G8C,kBAAmB,SAAC9C,EAAO9D,GAAW,MAAOsC,GAAKkF,gBAAgBxH,GAAQsC,EAAK8E,aAAatD,QHwnC9F1Q,IAAK,qBACLT,MAAO,SGrnCU+M,GACjB,GAAI9L,GAAQzC,IACZ,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GAC3BtC,EAAMgS,qBAAqB,oBAAqB6B,WAAY/H,IAAQzL,KAAK,WACvEL,EAAMgS,qBAAqB,uBAAwB3R,KAAK,WACtDgC,aH2nCN7C,IAAK,eACLT,MAAO,SGtnCIqN,GACX,GAAI0H,GAAU,yCACd,OAAOA,GAAQC,KAAK3H,MHynCpB5M,IAAK,gBACLT,MAAO,SGvnCKqN,GACZ,GAAI0H,GAAU,0BACd,OAAOA,GAAQC,KAAK3H,MH0nCpB5M,IAAK,gBACLT,MAAO,SGxnCKqN,GACZ,GAAI0H,GAAU,aACd,OAAOA,GAAQC,KAAK3H,MH2nCpB5M,IAAK,0BACLT,MAAO,SGznCeqN,GACtB,OAAO,KH4nCP5M,IAAK,cACLT,MAAO,SG1nCGqN,GACV,GAAI4H,GAAY5H,EAAKnH,MAAM,KACvBgP,EAAMzJ,SAASwJ,EAAU,IACzBE,EAAQ1J,SAASwJ,EAAU,IAC3BG,EAAO3J,SAASwJ,EAAU,IAE1BzF,EAAO,GAAIqE,MAAKuB,EAAMD,EAAM,EAAGD,GAC/BG,EAAgB7F,EAAK8F,gBAAkBF,GAAQ5F,EAAK+F,WAAa,IAAMJ,GAAS3F,EAAKgG,YAAcN,EAEnGO,GADgBjG,EAAKgG,UAAY,KAAOhG,EAAK+F,WAAa,GAAK,IAAM/F,EAAK8F,cACpE,GAAIzB,OAGV6B,GAFQD,EAAID,UAAY,KAAOC,EAAIF,WAAa,GAAK,IAAME,EAAIH,eAEpD,EAiBf,OAhBI9F,GAAK8F,cAAgBG,EAAIH,cAC3BI,GAAW,EAEPlG,EAAK8F,eAAiBG,EAAIH,gBACvB9F,EAAK+F,WAAa,EAAME,EAAIF,WAAa,EAC5CG,GAAW,EAENlG,EAAK+F,WAAa,GAAOE,EAAIF,WAAa,GACzC/F,EAAKgG,WAAcC,EAAID,YACzBE,GAAW,IAObL,GAAiBK,KH6nCzBjV,IAAK,eACLT,MAAO,SG3nCImR,GACX,MAAiB,KAAVA,KH8nCP1Q,IAAK,kBACLT,MAAO,SG5nCOqN,GACd,IAAKA,EACH,OAAO,CAET,IAAIC,GAAYD,EAAKnH,MAAM,QACvByP,EAAgC,IAArBrI,EAAU9N,MACzB,KAAKmW,EACH,OAAO,CAET,IAAIC,GAAatI,EAAU,GAAGpH,MAAM,KAChC2P,EAAWvI,EAAU,GAAGpH,MAAM,IAClC,IAA0B,IAAtB0P,EAAWpW,QAAoC,IAApBqW,EAASrW,OACtC,OAAO,CAET,IAAIsW,GAAmC,IAAzBF,EAAW,GAAGpW,QAA2C,IAAzBoW,EAAW,GAAGpW,QAAyC,IAAvBqW,EAAS,GAAGrW,QAAyC,IAAvBqW,EAAS,GAAGrW,OACpHuW,EAAeH,EAAW,IAAMnK,SAASmK,EAAW,GAAI,KAASA,EAAW,IAAMnK,SAASmK,EAAW,GAAI,KAASC,EAAS,IAAMpK,SAASoK,EAAS,GAAI,KAASA,EAAS,IAAMpK,SAASoK,EAAS,GAAI,GAC1M,OAAOF,IAAYG,GAAUC,KH+nC7BtV,IAAK,uBACLT,MAAO,WG5nCP,GAAIiB,GAAQzC,IACZ,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GAC3BtC,EAAMgS,qBAAqB,mBAAoB3R,KAAK,SAAC0U,GACnD,GAAIC,KAEJ,KAAK,GAAI9W,KAAK6W,GAAY,CACxB,GAAInK,IACFkB,MAAOiJ,EAAW7W,GAAGsB,IACrBoN,eACAC,OAGF,IAAmC,IAA/BkI,EAAW7W,GAAG+W,MAAM1W,OAAc,CACpCwW,EAAW7W,GAAG+W,MAAQF,EAAW7W,GAAGgX,WACpC,KAAK,GAAIhJ,KAAK6I,GAAW7W,GAAG+W,MAAO,CACjC,GAAInJ,GAAQ9L,EAAMmV,UAAUJ,EAAW7W,GAAG+W,MAAM/I,GAChDtB,GAAOgC,YAAYpI,KAAKsH,GACxBlB,EAAOiC,IAAIrI,KAAKoG,EAAOkB,MAAQ,IAAMiJ,EAAW7W,GAAG+W,MAAM/I,GAAGd,WAIhE4J,EAAYxQ,KAAKoG,GAGnBvI,EAAQ2S,UHkoCZxV,IAAK,kBACLT,MAAO,SG9nCO+M,EAAOV,GACrB,GAAIpL,GAAQzC,IACZ,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GAC3BtC,EAAMgS,qBAAqB,mBAAoB3R,KAAK,SAACsL,GACnD,GAAIf,GAASe,EAASG,EACtBzJ,GAAQuI,EAAOwK,kBAAkBhK,WHmoCrC5L,IAAK;AACLT,MAAO,SG/nCCsM,GACR,GAAIiF,GAAYjF,EAAKiF,UACjB+E,EAAahK,EAAK4E,SAAY,UAAY,UAC1C/Q,EAAyB,WAAhBmM,EAAKnM,OAAsB,+BAAiCmM,EAAKnM,OAC1EiS,EAAYb,EAAUa,SAC1B,QAAOA,GACL,IAAK,OACH,MAAO,QAAUb,EAAUxP,OAAS,OAASuU,EAAY,KAAOnW,EAAS,GAC3E,KAAK,SACH,MAAO,WAAcoR,EAAUxP,OAAS,QAAWuU,EAAY,KAAOnW,EAAS,GACjF,KAAK,SACH,GAA2B,OAAvBoR,EAAU6C,SACZ,MAAO,UAAa7C,EAAUxP,OAAS,QAAWuU,EAAY,KAAOnW,EAAS,GAE9E,IAA2B,WAAvBoR,EAAU6C,SACZ,MAAO,QAAU7C,EAAUxP,OAAS,OAASuU,EAAY,KAAOnW,EAAS,GAG/E,KAAK,eACH,GAAyB,MAArBoR,EAAUxP,OACZ,MAAO,wCAA0CuU,EAAY,KAAOnW,EAAS,GAE7E,IAAyB,kBAArBoR,EAAUxP,OACZ,MAAO,mEAAqE5B,EAAS,GAG3F,KAAK,OACH,GAAIkU,GAAQ9C,EAAUxP,OAAO,GAAG,GAAKwP,EAAUxP,OAAO,GAAG,GAAK,IAAMwP,EAAUxP,OAAO,GAAG,GAAKwP,EAAUxP,OAAO,GAAG,GAC7GuS,EAAM/C,EAAUxP,OAAO,GAAG,GAAKwP,EAAUxP,OAAO,GAAG,GAAK,IAAMwP,EAAUxP,OAAO,GAAG,GAAKwP,EAAUxP,OAAO,GAAG,EAC/G,OAAO,iBAAmBsS,EAAQ,OAASC,EAAM,OAASgC,EAAY,KAAOnW,EAAS,GACxF,KAAK,UACH,GAAIoU,IAAY,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC9EgC,EAAYhF,EAAUxP,MAC1B,OAAO,YAAewS,EAASgC,GAAa,QAAWD,EAAY,KAAOnW,EAAS,GACrF,SACE,MAAO,QAAUmM,EAAKD,SAAW,OAASiK,EAAY,KAAOnW,EAAS,QHmoC1EM,IAAK,eACLT,MAAO,WG/nCP,GAAIwW,KACJ,KAAK,GAAIrX,KAAKX,MAAK2R,UACjBqG,EAAgB/Q,KAAKtG,EAEvB,OAAOqX,MHmoCP/V,IAAK,kBACLT,MAAO,SGjoCOoN,GACd,MAAO5O,MAAK2R,UAAU/C,MHooCtB3M,IAAK,cACLT,MAAO,WGjoCP,MAAOxB,MAAKyU,qBAAqB,qBHqoCjCxS,IAAK,iBACLT,MAAO,WGloCP,MAAOxB,MAAKyU,qBAAqB,wBHyoCjCxS,IAAK,UACLT,MAAO,SGtoCDoN,EAAUpC,EAAaqC,EAAMiJ,EAAWnF,EAAOhR,GACrD,GAAIc,GAAQzC,IACZ,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GACvBtC,EAAMqS,WAAWlG,GAAU+D,EAAO9D,GACpCpM,EAAMmS,SAAShG,IAAWpC,EAAamG,EAAOhR,EAAQkN,EAAMiJ,IAAYhV,KAAK,WAC3EgC,MAGFC,EAAO,8BH2oCX9C,IAAK,aACLT,MAAO,SGvoCEoN,EAAU+D,EAAOhR,EAAQkN,GAClC,GAAItL,IAAUoP,EAAOhR,EAAQkN,EAC7B,IAAiB,WAAbD,EAAuB,CACzB,GAAIqJ,GAAiBpJ,EAAKnH,MAAM,KAC5ByE,EAAY8L,EAAe,EAC/B1U,IAAUoP,EAAOxG,EAAW0C,GAE9B7O,KAAKkY,SAAStJ,GAAUrL,MH0oCxBtB,IAAK,YACLT,MAAO,WGvoCP,GAAIiB,GAAQzC,IACZ,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GAC3BtC,EAAMgS,qBAAqB,aAAc3R,KAAK,SAACsN,GAC7C,GAAI+H,IACF9H,eACAC,WACAhB,OAGF,KAAK,GAAI3O,KAAKyP,GAAQ,CACpB+H,EAAU9H,YAAYpJ,KAAKtG,GAC3BwX,EAAU7H,QAAQrJ,KAAKmJ,EAAOzP,GAC9B,IAAI2O,KACJ,KAAK,GAAIX,KAAKyB,GAAOzP,GACnB2O,EAAIrI,KAAKtG,EAAI,KAAOyP,EAAOzP,GAAGgO,GAEhCwJ,GAAU7I,IAAIrI,KAAKqI,GAIrBxK,EAAQqT,UH6oCZlW,IAAK,iBACLT,MAAO,WGxoCP,MAAOxB,MAAKyU,qBAAqB,wBH4oCjCxS,IAAK,kBACLT,MAAO,SG1oCO2K,EAAW6I,GACzB,MAAOhV,MAAKyU,qBAAqB,mBAAoBtI,UAAWA,EAAW8I,UAAWD,OH6oCtF/S,IAAK,eACLT,MAAO,SG3oCIgL,EAAasB,EAAMmG,EAAaE,GAC3C,GAAI1R,GAAQzC,IACZ,OAAO,IAAI6E,SAAQ,SAACC,EAASC,GAC3BtC,EAAMgS,qBAAqB,mBAAoB3R,KAAK,SAAC4R,GAEnD,GADAA,EAAalI,GAAawB,WAAWF,GAChCqG,EAEE,CACL,GAAIyB,GAAoC,MAAxBzB,EAA+B,SAAW,IAC1DO,GAAalI,GAAamJ,WAAW1B,IAAgBL,UAAW,eAAgBwE,QAASxC,EAAUrS,OAAQ4Q,IAAwBrG,EAAK6E,MAAO7E,EAAKnM,OAAQmM,EAAKD,cAHjK6G,GAAalI,GAAamJ,WAAW1B,EAAanG,EAAKiF,UAAWjF,EAAK6E,MAAO7E,EAAKnM,OAAQmM,EAAKD,SAMlGpL,GAAMgS,qBAAqB,uBAAwB3R,KAAK,WACtDgC,cHkpCDyP,IAGT/U,GAAAA,WG7oCe+U,OH+oCT8D,GAAG,SAAS3X,EAAQjB,EAAOD,GACjC,YAUA,SAASsL,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GItrDvF,GAAAuN,GAAA5X,EAAA,mBACA6X,GJ+qDsBzN,EAAuBwN,GI/qD7C5X,EAAA,iBJmrDoBoK,GAAuByN,KAIxCC,kBAAkB,EAAEC,gBAAgB,SAAS,IAAI","file":"admin-gui.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.adminGui = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// jshint browser:true, jquery: true\n\nvar IdentitiesGUI = function () {\n  function IdentitiesGUI(guiURL, idmURL, messageBus) {\n    _classCallCheck(this, IdentitiesGUI);\n\n    //if (!identityModule) throw Error('Identity Module not set!');\n    if (!messageBus) throw Error('Message Bus not set!');\n    var _this = this;\n    _this._guiURL = guiURL;\n    _this._idmURL = idmURL;\n    _this._messageBus = messageBus;\n\n    //console.log('TIAGO: Calling deployGUI');\n    //_this.identityModule.deployGUI();\n    _this.callIdentityModuleFunc('deployGUI', {}).then(function () {\n      _this.resultURL = undefined;\n\n      _this._messageBus.addListener(guiURL, function (msg) {\n        var identityInfo = msg.body.value;\n        var funcName = msg.body.method;\n        var value = void 0;\n\n        if (funcName === 'openPopup') {\n          var urlreceived = msg.body.params.urlreceived;\n          //console.log('TIAGO openPopup on browser');\n          _this.openPopup(urlreceived).then(function (returnedValue) {\n            var value = { type: 'execute', value: returnedValue, code: 200 };\n            var replyMsg = { id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value };\n            _this._messageBus.postMessage(replyMsg);\n          });\n        }\n\n        // unhide the config page with the identity GUI\n        document.getElementsByTagName('body')[0].style = 'background-color:white;';\n        parent.postMessage({ body: { method: 'showAdminPage' }, to: 'runtime:gui-manager' }, '*');\n        $('.admin-page').removeClass('hide');\n        _this.showIdentitiesGUI(msg.body.value).then(function (identityInfo) {\n          var replyMsg = void 0;\n\n          //hide config page with the identity GUI\n          parent.postMessage({ body: { method: 'hideAdminPage' }, to: 'runtime:gui-manager' }, '*');\n          $('.admin-page').addClass('hide');\n          document.getElementsByTagName('body')[0].style = 'background-color:transparent';\n          $('.identities-section').addClass('hide');\n          $('.policies-section').addClass('hide');\n\n          switch (identityInfo.type) {\n            case 'idp':\n              value = { type: 'idp', value: identityInfo.value, code: 200 };\n              replyMsg = { id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value };\n              _this._messageBus.postMessage(replyMsg);\n              break;\n\n            case 'identity':\n              value = { type: 'identity', value: identityInfo.value, code: 200 };\n              replyMsg = { id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value };\n              _this._messageBus.postMessage(replyMsg);\n              break;\n\n            default:\n              value = { type: 'error', value: 'Error on identity GUI', code: 400 };\n              replyMsg = { id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value };\n              _this._messageBus.postMessage(replyMsg);\n          }\n        });\n      });\n\n      $('.identities-page-show').on('click', function () {\n        //TODO call a IdM method that requests the identities\n        _this.showIdentitiesGUI();\n      });\n    });\n  }\n\n  _createClass(IdentitiesGUI, [{\n    key: 'callIdentityModuleFunc',\n    value: function callIdentityModuleFunc(methodName, parameters) {\n      var _this = this;\n      var message = void 0;\n\n      return new Promise(function (resolve, reject) {\n        message = { type: 'execute', to: _this._idmURL, from: _this._guiURL,\n          body: { resource: 'identity', method: methodName, params: parameters } };\n        _this._messageBus.postMessage(message, function (res) {\n          var result = res.body.value;\n\n          //console.log('TIAGO: return from callIdentityModuleFunc ', result);\n          resolve(result);\n        });\n      });\n    }\n  }, {\n    key: 'openPopup',\n    value: function openPopup(urlreceived) {\n\n      //console.log('TIAGO openPopup local browser');\n\n      return new Promise(function (resolve, reject) {\n\n        var win = window.open(urlreceived, 'openIDrequest', 'width=800, height=600');\n        if (window.cordova) {\n          win.addEventListener('loadstart', function (e) {\n            var url = e.url;\n            var code = /\\&code=(.+)$/.exec(url);\n            var error = /\\&error=(.+)$/.exec(url);\n\n            if (code || error) {\n              win.close();\n              resolve(url);\n            }\n          });\n        } else {\n          var pollTimer = setInterval(function () {\n            try {\n              if (win.closed) {\n                reject('Some error occured when trying to get identity.');\n                clearInterval(pollTimer);\n              }\n\n              if (win.document.URL.indexOf('id_token') !== -1 || win.document.URL.indexOf(location.origin) !== -1) {\n                window.clearInterval(pollTimer);\n                var url = win.document.URL;\n\n                win.close();\n                resolve(url);\n              }\n            } catch (e) {\n              //console.log(e);\n            }\n          }, 500);\n        }\n      });\n    }\n  }, {\n    key: 'showIdentitiesGUI',\n    value: function showIdentitiesGUI(receivedInfo) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n\n        var identityInfo = void 0;\n        var toRemoveID = void 0;\n\n        _this._checkReceivedInfo(receivedInfo).then(function (resultObject) {\n          identityInfo = resultObject.identityInfo;\n          toRemoveID = resultObject.toRemoveID;\n\n          $('.policies-section').addClass('hide');\n          $('.identities-section').removeClass('hide');\n\n          _this.showMyIdentities(identityInfo.identities, toRemoveID).then(function (identity) {\n            console.log('chosen identity: ', identity);\n            resolve({ type: 'identity', value: identity });\n          });\n\n          var callback = function callback(value) {\n            console.log('chosen identity: ', value);\n            resolve({ type: 'identity', value: value });\n          };\n\n          var idps = [];\n          var idpsObjects = identityInfo.idps;\n\n          idpsObjects.forEach(function (entry) {\n            idps.push(entry.domain);\n          });\n\n          $('#idproviders').html(_this._getList(idps));\n          $('#idproviders').off();\n          $('#idproviders').on('click', function (event) {\n            return _this.obtainNewIdentity(event, callback, toRemoveID);\n          });\n          //$('.back').on('click', (event) => _this.goHome());\n          $('.identities-reset').off();\n          $('.identities-reset').on('click', function (event) {\n            return _this._resetIdentities(callback);\n          });\n        });\n      });\n    }\n  }, {\n    key: '_checkReceivedInfo',\n    value: function _checkReceivedInfo(receivedInfo) {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        var identityInfo = void 0,\n            toRemoveID = void 0;\n        if (receivedInfo) {\n          identityInfo = receivedInfo;\n          toRemoveID = false;\n          resolve({ identityInfo: identityInfo, toRemoveID: toRemoveID });\n        } else {\n          toRemoveID = true;\n          _this.callIdentityModuleFunc('getIdentitiesToChoose', {}).then(function (result) {\n            resolve({ identityInfo: result, toRemoveID: toRemoveID });\n          });\n        }\n      });\n    }\n  }, {\n    key: 'showMyIdentities',\n    value: function showMyIdentities(emails, toRemoveID) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n\n        // let identities = _this.identityModule.getIdentities();\n        var identities = [];\n\n        for (var i in emails) {\n          var domain = emails[i].split('@');\n          identities.push({ email: emails[i], domain: domain[1] });\n        }\n\n        var myIdentities = document.getElementById('my-ids');\n        myIdentities.innerHTML = '';\n\n        var table = _this.createTable();\n\n        var tbody = document.createElement('tbody');\n        var numIdentities = identities.length;\n        for (var _i = 0; _i < numIdentities; _i++) {\n          var tr = _this.createTableRow(identities[_i], toRemoveID);\n          tbody.appendChild(tr);\n        }\n\n        table.appendChild(tbody);\n        myIdentities.appendChild(table);\n\n        var callback = function callback(identity) {\n          resolve(identity);\n        };\n\n        if (!toRemoveID) {\n          $('.clickable-cell').on('click', function (event) {\n            return _this.changeID(callback);\n          });\n        }\n\n        $('.remove-id').on('click', function (event) {\n          return _this.removeID(emails);\n        });\n      });\n    }\n  }, {\n    key: 'createTable',\n    value: function createTable() {\n      var table = document.createElement('table');\n      table.className = 'centered';\n      var thead = document.createElement('thead');\n      var tr = document.createElement('tr');\n      var thEmail = document.createElement('th');\n      thEmail.textContent = 'Email';\n      tr.appendChild(thEmail);\n      thead.appendChild(tr);\n      table.appendChild(thead);\n      return table;\n    }\n  }, {\n    key: 'createTableRow',\n    value: function createTableRow(identity, toRemoveID) {\n      var tr = document.createElement('tr');\n\n      var td = document.createElement('td');\n      td.textContent = identity.email;\n      td.className = 'clickable-cell';\n      td.style = 'cursor: pointer';\n      tr.appendChild(td);\n\n      td = document.createElement('td');\n\n      if (toRemoveID) {\n        var btn = document.createElement('button');\n        btn.textContent = 'Remove';\n        btn.className = 'remove-id waves-effect waves-light btn';\n        td.appendChild(btn);\n      }\n\n      tr.appendChild(td);\n\n      return tr;\n    }\n  }, {\n    key: 'changeID',\n    value: function changeID(callback) {\n      var _this = this;\n\n      var idToUse = event.target.innerText;\n\n      //TODO improve later.\n      //prevents when the users selects an hyperty, exit the identity page and\n      //goes again to the identity page, from selecting \"settings\" button as identity.\n      if (idToUse !== 'settings') {\n\n        callback(idToUse);\n        return idToUse;\n      }\n    }\n  }, {\n    key: 'removeID',\n    value: function removeID(emails) {\n      var _this = this;\n      var row = event.target.parentNode.parentNode;\n      var idToRemove = row.children[0].textContent;\n      var domain = row.children[1].textContent;\n\n      _this.callIdentityModuleFunc('unregisterIdentity', { email: idToRemove }).then(function () {\n        var numEmails = emails.length;\n        for (var i = 0; i < numEmails; i++) {\n          if (emails[i].email === idToRemove) {\n            emails.splice(i, 1);\n            break;\n          }\n        }\n\n        // -------------------------------------------------------------------------//\n        _this.showMyIdentities(emails, true);\n      });\n\n      //_this.identityModule.unregisterIdentity(idToRemove);\n    }\n  }, {\n    key: 'obtainNewIdentity',\n    value: function obtainNewIdentity(event, callback, toRemoveID) {\n      var _this = this;\n      var idProvider = event.target.textContent;\n      var idProvider2 = event.target.text;\n\n      _this.callIdentityModuleFunc('generateRSAKeyPair', {}).then(function (keyPair) {\n        var publicKey = btoa(keyPair.public);\n\n        _this.callIdentityModuleFunc('sendGenerateMessage', { contents: publicKey, origin: 'origin', usernameHint: undefined,\n          idpDomain: idProvider }).then(function (value) {\n          console.log('receivedURL: ' + value.loginUrl.substring(0, 20) + '...');\n\n          var url = value.loginUrl;\n          var finalURL = void 0;\n\n          //check if the receivedURL contains the redirect field and replace it\n          if (url.indexOf('redirect_uri') !== -1) {\n            var firstPart = url.substring(0, url.indexOf('redirect_uri'));\n            var secondAuxPart = url.substring(url.indexOf('redirect_uri'), url.length);\n\n            var secondPart = secondAuxPart.substring(secondAuxPart.indexOf('&'), url.length);\n\n            //check if the reddirect field is the last field of the URL\n            if (secondPart.indexOf('&') !== -1) {\n              finalURL = firstPart + 'redirect_uri=' + location.origin + secondPart;\n            } else {\n              finalURL = firstPart + 'redirect_uri=' + location.origin;\n            }\n          }\n\n          _this.resultURL = finalURL || url;\n\n          $('.login-idp').html('<p>Chosen IDP: ' + idProvider + '</p>');\n          $('.login').removeClass('hide');\n          $('.login-btn').off();\n          $('.login-btn').on('click', function (event) {\n            $('.login').addClass('hide');\n            _this._authenticateUser(keyPair, publicKey, value, 'origin', idProvider).then(function (email) {\n              callback(email);\n              _this.showIdentitiesGUI();\n            });\n          });\n        });\n      }).catch(function (err) {\n        return console.log('obtanin new identity', err);\n      });\n    }\n  }, {\n    key: '_getList',\n    value: function _getList(items) {\n      var list = '';\n      var numItems = items.length;\n\n      for (var i = 0; i < numItems; i++) {\n        list += '<li class=\"divider\"></li>';\n        list += '<li><a class=\"center-align\">' + items[i] + '</a></li>';\n      }\n\n      return list;\n    }\n  }, {\n    key: '_authenticateUser',\n    value: function _authenticateUser(keyPair, publicKey, value, origin, idProvider) {\n      var _this = this;\n      var url = _this.resultURL;\n\n      return new Promise(function (resolve, reject) {\n\n        _this.openPopup(url).then(function (identity) {\n\n          _this.callIdentityModuleFunc('sendGenerateMessage', { contents: publicKey, origin: origin, usernameHint: identity, idpDomain: idProvider }).then(function (result) {\n\n            if (result) {\n\n              //_this.identityModule.storeIdentity(result, keyPair).then((value) => {\n              _this.callIdentityModuleFunc('storeIdentity', { result: result, keyPair: keyPair }).then(function (value) {\n                resolve(value.userProfile.username);\n              }, function (err) {\n                reject(err);\n              });\n            } else {\n              reject('error on obtaining identity information');\n            }\n          });\n        }, function (err) {\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: '_resetIdentities',\n    value: function _resetIdentities() {\n      console.log('_resetIdentities');\n    }\n  }]);\n\n  return IdentitiesGUI;\n}();\n\nexports.default = IdentitiesGUI;\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _PoliciesManager = require('./PoliciesManager');\n\nvar _PoliciesManager2 = _interopRequireDefault(_PoliciesManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PoliciesGUI = function () {\n  function PoliciesGUI(pepGuiURL, pepURL, messageBus) {\n    _classCallCheck(this, PoliciesGUI);\n\n    var _this = this;\n    _this.policiesManager = new _PoliciesManager2.default(pepGuiURL, pepURL, messageBus);\n    // assume prepareAttributes is called after this\n  }\n\n  _createClass(PoliciesGUI, [{\n    key: 'prepareAttributes',\n    value: function prepareAttributes() {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        _this.policiesManager.prepareAttributes().then(function () {\n          _this.elements = _this._setElements();\n          _this._setListeners();\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: '_addMember',\n    value: function _addMember() {\n      var _this = this;\n      var group = event.target.id;\n      $('.member-new-intro').html('<h5>Add a member to a group</h5><p>Insert a user email below to add to the \"' + group + '\" group.</p>');\n      $('.member-new-modal').openModal();\n      $('.member-new-ok').off();\n      $('.member-new-ok').on('click', function (event) {\n        var member = $('#member-new').val();\n        $('#member-new').val('');\n        _this.policiesManager.addToGroup(group, member).then(function () {\n          $('.member-new-modal').closeModal();\n          _this._manageGroups();\n        });\n      });\n    }\n  }, {\n    key: '_createGroup',\n    value: function _createGroup() {\n      var _this = this;\n      $('#group-new-name').val('');\n      $('.group-new-modal').openModal();\n      $('.group-new-ok').on('click', function (event) {\n        var groupName = $('#group-new-name').val();\n        _this.policiesManager.createGroup(groupName).then(function () {\n          _this._manageGroups();\n        });\n      });\n    }\n  }, {\n    key: '_addPolicy',\n    value: function _addPolicy() {\n      var _this = this;\n      $('#policy-new-title').val('');\n      $('.combining').html('');\n      var algorithms = ['Block overrides', 'Allow overrides', 'First applicable'];\n      $('.combining').append(this._getOptions('comb-algorithm', 'Choose a combining algorithm', algorithms));\n      $('.policy-new').openModal();\n\n      $('.policy-new-ok').off();\n      $('.policy-new-ok').on('click', function (event) {\n        var policyTitle = $('#policy-new-title').val();\n        if (!policyTitle) {\n          Materialize.toast('Invalid policy title', 4000);\n        } else {\n          var combiningAlgorithm = $('#comb-algorithm').val();\n          _this.policiesManager.addPolicy(policyTitle, combiningAlgorithm).then(function () {\n            $('.help-menu').addClass('hide');\n            $('.policy-new').closeModal();\n            _this._goHome();\n          });\n        }\n      });\n      $('.help-btn').off();\n      $('.help-btn').on('click', function (event) {\n        $('.help-menu').removeClass('hide');\n      });\n    }\n  }, {\n    key: '_decreaseRulePriority',\n    value: function _decreaseRulePriority() {\n      var _this = this;\n      var id = event.target.closest('tr').id;\n      var splitId = id.split(':');\n      var thisPriority = parseInt(splitId[splitId.length - 1]);\n      splitId.pop();\n      var policyTitle = splitId.join(':');\n      _this.policiesManager.getPolicy(policyTitle).then(function (policy) {\n        var lastPriority = policy.getLastPriority();\n        if (lastPriority != thisPriority) {\n          var newPriority = parseInt(thisPriority + 1);\n          _this.policiesManager.decreaseRulePriority(policyTitle, thisPriority, newPriority).then(function () {\n            _this._goHome();\n          });\n        }\n      });\n    }\n  }, {\n    key: '_deleteMember',\n    value: function _deleteMember() {\n      var _this = this;\n      var id = event.target.closest('tr').id;\n      var splitId = id.split('::');\n      var member = splitId[splitId.length - 1];\n      splitId.pop();\n      var group = splitId.join('::');\n      _this.policiesManager.removeFromGroup(group, member).then(function () {\n        _this._manageGroups();\n      });\n    }\n  }, {\n    key: '_deleteGroup',\n    value: function _deleteGroup() {\n      var _this = this;\n      var groupName = event.target.closest('tr').children[0].id;\n      _this.policiesManager.deleteGroup(groupName).then(function () {\n        _this._manageGroups();\n      });\n    }\n  }, {\n    key: '_deletePolicy',\n    value: function _deletePolicy() {\n      var _this = this;\n      var policyTitle = event.target.closest('tr').id;\n      _this.policiesManager.deletePolicy(policyTitle).then(function () {\n        _this._goHome();\n      });\n    }\n  }, {\n    key: '_deleteRule',\n    value: function _deleteRule() {\n      var _this = this;\n      var id = event.target.closest('tr').id;\n      var splitId = id.split(':');\n      var priority = splitId[splitId.length - 1];\n      splitId.pop();\n      var policyTitle = splitId.join(':');\n      var rule = _this.policiesManager.getRuleOfPolicy(policyTitle, priority);\n\n      _this.policiesManager.deleteRule(policyTitle, rule).then(function () {\n        _this._goHome();\n      });\n    }\n  }, {\n    key: '_getActivePolicy',\n    value: function _getActivePolicy() {\n      var _this = this;\n      _this.policiesManager.getActivePolicy().then(function (activeUserPolicy) {\n        $('.policy-active').html('');\n        _this.policiesManager.getPoliciesTitles().then(function (policies) {\n          policies.push('Deactivate all policies');\n\n          $('.policy-active').append(_this._getOptions('policies-list', 'Click to activate a policy', policies, activeUserPolicy));\n\n          $('#policies-list').on('click', function (event) {\n            var policyTitle = $('#policies-list').find(\":selected\")[0].textContent;\n            if (policyTitle === 'Deactivate all policies') {\n              policyTitle = undefined;\n            }\n            _this.policiesManager.updateActivePolicy(policyTitle);\n          });\n        });\n      });\n    }\n  }, {\n    key: '_getGroupOptions',\n    value: function _getGroupOptions(title, keys, scopes, lists) {\n      var list = '<option disabled selected>' + title + '</option>';\n\n      for (var i in keys) {\n        list += '<optgroup label=' + keys[i] + '>';\n        for (var j in lists[i]) {\n          list += '<option id=\"' + scopes[i] + '\">' + lists[i][j] + '</option>';\n        }\n      }\n\n      return list;\n    }\n  }, {\n    key: '_getInfo',\n    value: function _getInfo(variable) {\n      var info = void 0;\n\n      switch (variable) {\n        case 'Date':\n          info = $('.config').find('input').val();\n          if (info.indexOf(',') !== -1) {\n            //20 July, 2016\n            var splitInfo = info.split(' '); //['20', 'July,',' '2016']\n            splitInfo[1] = splitInfo[1].substring(0, splitInfo[1].length - 1); //'July'\n            var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n            info = splitInfo[0] + '/' + (months.indexOf(splitInfo[1]) + 1) + '/' + splitInfo[2];\n          } else {\n            // 2016-07-20\n            var _splitInfo = info.split('-');\n            info = _splitInfo[2] + '/' + _splitInfo[1] + '/' + _splitInfo[0];\n          }\n          break;\n        case 'Group of users':\n          info = $('#group').find(\":selected\").text();\n          break;\n        case 'Subscription preferences':\n          if (info = $(\"input[name='rule-new-subscription']:checked\")[0] !== undefined) {\n            info = $(\"input[name='rule-new-subscription']:checked\")[0].id;\n          }\n          break;\n        case 'Weekday':\n          info = $('#weekday').find(\":selected\").text();\n          break;\n        default:\n          info = $('.config').find('input').val();\n          break;\n      }\n\n      return info;\n    }\n  }, {\n    key: '_getList',\n    value: function _getList(items) {\n      var list = '';\n      var numItems = items.length;\n\n      for (var i = 0; i < numItems; i++) {\n        list += '<li class=\"divider\"></li>';\n        list += '<li><a class=\"center-align\">' + items[i] + '</a></li>';\n      }\n\n      return list;\n    }\n  }, {\n    key: '_getOptions',\n    value: function _getOptions(id, title, list, selected) {\n      var options = '<select id=\"' + id + '\" class=\"browser-default\"><option disabled selected>' + title + '</option>';\n      for (var i in list) {\n        if (selected !== undefined & selected === list[i]) {\n          options += '<option selected id=\"' + id + '\">' + list[i] + '</option>';\n        } else {\n          options += '<option id=\"' + id + '\">' + list[i] + '</option>';\n        }\n      }\n      options += '</select>';\n\n      return options;\n    }\n  }, {\n    key: '_getPoliciesTable',\n    value: function _getPoliciesTable() {\n      var _this = this;\n\n      _this.policiesManager.getFormattedPolicies().then(function (policies) {\n        $('.policies-no').addClass('hide');\n        $('.policies-current').html('');\n\n        var policiesTitles = [];\n        var rulesTitles = [];\n        var ids = [];\n\n        for (var i in policies) {\n          policiesTitles.push(policies[i].title);\n          rulesTitles.push(policies[i].rulesTitles);\n          ids.push(policies[i].ids);\n        }\n\n        var table = '<table>';\n        var isEmpty = policiesTitles.length === 0;\n\n        for (var _i in policiesTitles) {\n          table += '<thead><tr id=\"' + policiesTitles[_i] + '\"><td></td><td></td><th class=\"center-align\">' + policiesTitles[_i] + '</th><td><i class=\"material-icons clickable-cell policy-delete\" style=\"cursor: pointer; vertical-align: middle\">delete_forever</i></td></tr></thead><tbody>';\n\n          for (var j in rulesTitles[_i]) {\n            table += '<tr id=\"' + ids[_i][j] + '\" ><td><i class=\"material-icons clickable-cell rule-priority-increase\" style=\"cursor: pointer; vertical-align: middle\">arrow_upward</i></td><td><i class=\"material-icons clickable-cell rule-priority-decrease\" style=\"cursor: pointer; vertical-align: middle\">arrow_downward</i></td><td class=\"rule-show clickable-cell\" style=\"cursor: pointer\">' + rulesTitles[_i][j] + '</td><td><i class=\"material-icons clickable-cell rule-delete\" style=\"cursor: pointer; vertical-align: middle\">clear</i></td></tr>';\n          }\n          table += '<tr id=\"' + policiesTitles[_i] + '\"></td><td></td><td></td><td style=\"text-align:center\"><i class=\"material-icons clickable-cell center-align rule-add\" style=\"cursor: pointer\">add_circle</i></td></tr>';\n        }\n        if (!isEmpty) {\n          table += '</tbody></table>';\n          $('.policies-current').append(table);\n        } else {\n          $('.policies-no').removeClass('hide');\n        }\n        $('.rule-add').on('click', function (event) {\n          _this._showVariablesTypes();\n        });\n        $('.rule-delete').on('click', function (event) {\n          _this._deleteRule();\n        });\n        $('.rule-show').on('click', function (event) {\n          _this._showRule();\n        });\n        $('.rule-priority-increase').on('click', function (event) {\n          _this._increaseRulePriority();\n        });\n        $('.rule-priority-decrease').on('click', function (event) {\n          _this._decreaseRulePriority();\n        });\n        $('.policy-add').off();\n        $('.policy-add').on('click', function (event) {\n          _this._addPolicy();\n        });\n        $('.policy-delete').on('click', function (event) {\n          _this._deletePolicy();\n        });\n      });\n    }\n  }, {\n    key: '_goHome',\n    value: function _goHome() {\n      this._getActivePolicy();\n      this._getPoliciesTable();\n    }\n  }, {\n    key: '_increaseRulePriority',\n    value: function _increaseRulePriority() {\n      var _this = this;\n      var id = event.target.closest('tr').id;\n      var splitId = id.split(':');\n      var thisPriority = parseInt(splitId[splitId.length - 1]);\n      if (thisPriority !== 0) {\n        splitId.pop();\n        var policyTitle = splitId.join(':');\n        var newPriority = thisPriority - 1;\n\n        _this.policiesManager.increaseRulePriority(policyTitle, thisPriority, newPriority).then(function () {\n          _this._goHome();\n        });\n      }\n    }\n  }, {\n    key: '_manageGroups',\n    value: function _manageGroups() {\n      var _this = this;\n      _this.policiesManager.getGroups().then(function (groupsPE) {\n        $('.groups-current').html('');\n        var groups = groupsPE.groupsNames;\n        var members = groupsPE.members;\n        var ids = groupsPE.ids;\n\n        var table = '<table>';\n        var isEmpty = groups.length === 0;\n\n        for (var i in groups) {\n          table += '<thead><tr><th id=\"' + groups[i] + '\">' + groups[i] + '</th><td style=\"text-align:right\"><i class=\"material-icons clickable-cell group-delete\" style=\"cursor: pointer; vertical-align: middle\">delete_forever</i></td></tr></thead><tbody>';\n          for (var j in members[i]) {\n            table += '<tr id=\"' + ids[i][j] + '\" ><td style=\"cursor: pointer\">' + members[i][j] + '</td><td style=\"text-align:right\"><i class=\"material-icons clickable-cell member-delete\" style=\"cursor: pointer; vertical-align: middle\">clear</i></td></tr>';\n          }\n\n          table += '<tr id=\"' + groups[i] + '\"><td><i class=\"material-icons clickable-cell member-add\" id=\"' + groups[i] + '\" style=\"cursor: pointer\">add_circle</i></td></tr>';\n        }\n\n        if (!isEmpty) {\n          table += '</tbody></table>';\n          $('.groups-current').append(table);\n        } else {\n          $('.groups-current').append('<p>There are no groups set.</p>');\n        }\n\n        $('.member-add').off();\n        $('.member-add').on('click', function (event) {\n          _this._addMember();\n        });\n        $('.member-delete').on('click', function (event) {\n          _this._deleteMember();\n        });\n        $('.group-add').off();\n        $('.group-add').on('click', function (event) {\n          _this._createGroup();\n        });\n        $('.group-delete').on('click', function (event) {\n          _this._deleteGroup();\n        });\n      });\n    }\n  }, {\n    key: '_parseFileContent',\n    value: function _parseFileContent(content) {\n      var parsedContent = JSON.parse(content);\n      for (var i in parsedContent) {\n        this.policiesManager.addPolicy(i, undefined, parsedContent[i]);\n      }\n      $('.policy-new').closeModal();\n    }\n  }, {\n    key: '_setElements',\n    value: function _setElements() {\n      var _this2 = this;\n\n      return {\n        date: function date(params) {\n          return '<input type=\"date\" class=\"datepicker\">';\n        },\n        select: function select(params) {\n          return _this2._getOptions(params[0], params[1], params[2]);\n        },\n        form: function form(params) {\n          return '<form><input type=\"text\" placeholder=\"' + params + '\"></input></form>';\n        }\n      };\n    }\n  }, {\n    key: '_showNewConfigurationPanel',\n    value: function _showNewConfigurationPanel(policyTitle) {\n      var _this3 = this;\n\n      var variable = event.target.text;\n      $('.variable').html(this._getNewConfiguration(policyTitle, variable));\n      $('.scopes').empty().html('');\n\n      var keys = ['Email', 'Hyperty', 'All'];\n      var scopes = ['identity', 'hyperty', 'global'];\n      var lists = [];\n\n      this.policiesManager.getMyEmails().then(function (emails) {\n        lists.push(emails);\n        _this3.policiesManager.getMyHyperties().then(function (hyperties) {\n          lists.push(hyperties);\n          lists.push(['All identities and hyperties']);\n          $('.scopes').append(_this3._getGroupOptions('Apply this configuration to:', keys, scopes, lists));\n          $('.variable').removeClass('hide');\n        });\n      });\n    }\n  }, {\n    key: '_showVariablesTypes',\n    value: function _showVariablesTypes() {\n      var _this4 = this;\n\n      var policyTitle = event.target.closest('tr').id;\n\n      $('#variables-types').empty().html('');\n      var variables = this.policiesManager.getVariables();\n      $('#variables-types').append(this._getList(variables));\n      $('.variable').addClass('hide');\n      $('.rule-new').openModal();\n      $('#variables-types').off();\n      $('#variables-types').on('click', function (event) {\n        _this4._showNewConfigurationPanel(policyTitle);\n      });\n    }\n  }, {\n    key: '_getNewConfiguration',\n    value: function _getNewConfiguration(policyTitle, variable) {\n      var _this = this;\n      var info = _this.policiesManager.getVariableInfo(variable);\n      $('.rule-new-title').html(info.title);\n      $('.description').html(info.description);\n      $('.config').html('');\n\n      if (variable === 'Subscription preferences') {\n        $('.subscription-type').removeClass('hide');\n      } else {\n        (function () {\n          $('.subscription-type').addClass('hide');\n          var tags = info.input;\n\n          var _loop = function _loop(i) {\n            _this.policiesManager.getGroupsNames().then(function (groupsNames) {\n              if (variable === 'Group of users') {\n                tags[i][1].push(groupsNames);\n              }\n              $('.config').append(_this.elements[tags[i][0]](tags[i][1]));\n              if (variable === 'Group of users') {\n                tags[i][1].pop();\n              }\n            });\n          };\n\n          for (var i in tags) {\n            _loop(i);\n          }\n          if (variable === 'date') {\n            $('.datepicker').pickadate({\n              selectMonths: true,\n              selectYears: 15\n            });\n          }\n        })();\n      }\n      document.getElementById('allow').checked = false;\n      document.getElementById('block').checked = false;\n      $('.ok-btn').off();\n      $('.ok-btn').on('click', function (event) {\n        if ($(\"input[name='rule-new-decision']:checked\")[0] !== undefined) {\n          var _info = _this._getInfo(variable);\n          var decision = $(\"input[name='rule-new-decision']:checked\")[0].id;\n          decision = decision === 'allow';\n          var scope = $('.scopes').find(\":selected\")[0].id;\n          var target = $('.scopes').find(\":selected\")[0].textContent;\n          target = target === 'All identities and hyperties' ? 'global' : target;\n          _this.policiesManager.setInfo(variable, policyTitle, _info, decision, scope, target).then(function () {\n            $('.rule-new').closeModal();\n            _this._goHome();\n          });\n        } else {\n          throw Error('INFORMATION MISSING: please specify an authorisation decision.');\n        }\n      });\n    }\n  }, {\n    key: '_deleteInfo',\n    value: function _deleteInfo(resourceType) {\n      var id = event.target.closest('tr').id;\n      var splitId = id.split(':');\n      var scope = splitId[0];\n      splitId.shift();\n      var target = splitId.join('');\n      var condition = event.target.closest('tr').children[0].id;\n      this.policiesManager.deleteInfo(resourceType, scope, target, condition);\n      this._goHome();\n    }\n  }, {\n    key: '_setListeners',\n    value: function _setListeners() {\n      var _this5 = this;\n\n      $('.settings-btn').on('click', function (event) {\n        parent.postMessage({ body: { method: 'showAdminPage' }, to: 'runtime:gui-manager' }, '*');\n        $('.admin-page').removeClass('hide');\n        document.getElementsByTagName('body')[0].style = 'background-color:white;';\n      });\n\n      $('.policies-page-show').on('click', function (event) {\n        $('.policies-section').removeClass('hide');\n        $('.identities-section').addClass('hide');\n        _this5._goHome();\n        _this5._manageGroups();\n      });\n\n      $('.admin-page-exit').on('click', function (event) {\n        parent.postMessage({ body: { method: 'hideAdminPage' }, to: 'runtime:gui-manager' }, '*');\n        $('.admin-page').addClass('hide');\n        document.getElementsByTagName('body')[0].style = 'background-color:transparent;';\n      });\n\n      $('.exit-btn').on('click', function (event) {\n        $('.subscription-type').addClass('hide');\n        $('.help-menu').addClass('hide');\n      });\n\n      $('#policy-file').on('change', function (event) {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.readAsText(file, \"UTF-8\");\n        reader.onload = function (event) {\n          _this5._parseFileContent(event.target.result);\n          _this5._goHome();\n        };\n        reader.onerror = function (event) {\n          throw Error(\"Error reading the file\");\n        };\n      });\n    }\n  }, {\n    key: '_showRule',\n    value: function _showRule() {\n      var _this6 = this;\n\n      var ruleTitle = event.target.textContent;\n      var id = event.target.closest('tr').id;\n      var splitId = id.split(':');\n      var priority = splitId[splitId.length - 1];\n      splitId.pop();\n      var policyTitle = splitId.join(':');\n      this.policiesManager.getRuleOfPolicy(policyTitle, priority).then(function (rule) {\n        if (rule.condition.attribute === 'subscription' && rule.condition.params === 'preauthorised') {\n          $('.authorise-btns').addClass('hide');\n        } else {\n          var element = void 0;\n          if (rule.decision) {\n            element = document.getElementById('btn-allow');\n          } else {\n            element = document.getElementById('btn-block');\n          }\n          element.checked = true;\n          $('.authorise-btns').removeClass('hide');\n        }\n        $('.member-add').addClass('hide');\n        $('.member-new-btn').addClass('hide');\n\n        $('.rule-details').openModal();\n        $('.rule-title').html('<h5><b>' + ruleTitle + '</b></h5>');\n        if (rule.condition.attribute === 'subscription') {\n          $('.subscription-type').removeClass('hide');\n        }\n        $('.subscription-decision').on('click', function (event) {\n          _this6._updateRule('subscription', policyTitle, rule);\n        });\n        $('.decision').off();\n        $('.decision').on('click', function (event) {\n          _this6._updateRule('authorisation', policyTitle, rule);\n        });\n      });\n    }\n  }, {\n    key: '_updateRule',\n    value: function _updateRule(type, policyTitle, rule) {\n      var _this = this;\n      var title = $('.rule-title').text();\n      var splitTitle = title.split(' ');\n      var index = splitTitle.indexOf('is');\n      if (index === -1) {\n        index = splitTitle.indexOf('are');\n      }\n      switch (type) {\n        case 'authorisation':\n          var newDecision = $(\"input[name='rule-update-decision']:checked\")[0].id;\n\n          if (newDecision === 'btn-allow') {\n            splitTitle[index + 1] = 'allowed';\n            newDecision = true;\n          } else {\n            splitTitle[index + 1] = 'blocked';\n            newDecision = false;\n          }\n          title = splitTitle.join(' ');\n          $('.rule-title').html('<h5><b>' + title + '</b></h5>');\n          _this.policiesManager.updatePolicy(policyTitle, rule, newDecision).then(function () {\n            _this._goHome();\n          });\n          break;\n        case 'subscription':\n          var newSubscriptionType = event.target.labels[0].textContent;\n\n          var decision = splitTitle[index + 1];\n          splitTitle = title.split('hyperties are');\n          if (newSubscriptionType === 'All subscribers') {\n            $('.authorise-btns').removeClass('hide');\n            newDecision = rule.decision;\n            newSubscriptionType = '*';\n            title = 'Subscriptions from all hyperties are' + splitTitle[1];\n          } else {\n            $('.authorise-btns').addClass('hide');\n            newDecision = true;\n            newSubscriptionType = 'preauthorised';\n            title = 'Subscriptions from previously authorised hyperties are' + splitTitle[1];\n          }\n\n          $('.rule-title').html('<h5><b>' + title + '</b></h5>');\n          _this.policiesManager.updatePolicy(policyTitle, rule, newDecision, newSubscriptionType).then(function () {\n            _this._goHome();\n          });\n          break;\n      }\n    }\n  }]);\n\n  return PoliciesGUI;\n}();\n\nexports.default = PoliciesGUI;\n\n},{\"./PoliciesManager\":3}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PoliciesManager = function () {\n  function PoliciesManager(pepGuiURL, pepURL, messageBus) {\n    _classCallCheck(this, PoliciesManager);\n\n    var _this = this;\n    _this._guiURL = pepGuiURL;\n    _this._pepURL = pepURL;\n    _this._messageBus = messageBus;\n\n    // assume prepare attributes is called after this\n  }\n\n  _createClass(PoliciesManager, [{\n    key: 'callPolicyEngineFunc',\n    value: function callPolicyEngineFunc(methodName, parameters) {\n      var _this = this;\n      var message = void 0;\n\n      return new Promise(function (resolve, reject) {\n        message = { type: 'execute', to: _this._pepURL, from: _this._guiURL,\n          body: { resource: 'policy', method: methodName, params: parameters } };\n        _this._messageBus.postMessage(message, function (res) {\n          var result = res.body.value;\n          resolve(result);\n        });\n      });\n    }\n  }, {\n    key: 'prepareAttributes',\n    value: function prepareAttributes() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var _this = _this2;\n        _this.callPolicyEngineFunc('userPolicies', {}).then(function (userPolicies) {\n          _this.policies = userPolicies;\n          _this.variables = _this.setVariables();\n          _this.addition = _this.setAdditionMethods();\n          _this.validation = _this.setValidationMethods();\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: 'addToGroup',\n    value: function addToGroup(groupName, user) {\n      return this.callPolicyEngineFunc('addToGroup', { groupName: groupName, userEmail: user });\n    }\n  }, {\n    key: 'createGroup',\n    value: function createGroup(groupName) {\n      return this.callPolicyEngineFunc('createGroup', { groupName: groupName });\n    }\n  }, {\n    key: 'addPolicy',\n    value: function addPolicy(title, combiningAlgorithm, policy) {\n      if (policy === undefined) {\n        switch (combiningAlgorithm) {\n          case 'Block overrides':\n            combiningAlgorithm = 'blockOverrides';\n            break;\n          case 'Allow overrides':\n            combiningAlgorithm = 'allowOverrides';\n            break;\n          case 'First applicable':\n            combiningAlgorithm = 'firstApplicable';\n            break;\n          default:\n            combiningAlgorithm = undefined;\n        }\n      }\n\n      return this.callPolicyEngineFunc('addPolicy', { source: 'USER', key: title, policy: policy, combiningAlgorithm: combiningAlgorithm });\n    }\n  }, {\n    key: 'decreaseRulePriority',\n    value: function decreaseRulePriority(policyTitle, thisPriority, newPriority) {\n      this.getRuleOfPolicy(policyTitle, newPriority).priority = thisPriority;\n      this.getRuleOfPolicy(policyTitle, thisPriority).priority = newPriority;\n      return this.callPolicyEngineFunc('savePolicies', { source: 'USER' });\n    }\n  }, {\n    key: 'deleteGroup',\n    value: function deleteGroup(groupName) {\n      return this.callPolicyEngineFunc('deleteGroup', { groupName: groupName });\n    }\n  }, {\n    key: 'deletePolicy',\n    value: function deletePolicy(title) {\n      return this.callPolicyEngineFunc('removePolicy', { source: 'USER', key: title });\n    }\n  }, {\n    key: 'deleteRule',\n    value: function deleteRule(policyTitle, rule) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.callPolicyEngineFunc('userPolicies', {}).then(function (userPolicies) {\n          userPolicies[policyTitle].deleteRule(rule);\n          _this.callPolicyEngineFunc('savePolicies', { source: 'USER' }).then(function () {\n            resolve();\n          });\n        });\n      });\n    }\n  }, {\n    key: 'getActivePolicy',\n    value: function getActivePolicy() {\n      return this.callPolicyEngineFunc('activeUserPolicy', {});\n    }\n  }, {\n    key: 'getPolicy',\n    value: function getPolicy(key) {\n      return this.callPolicyEngineFunc('userPolicy', { key: key });\n    }\n  }, {\n    key: 'getPoliciesTitles',\n    value: function getPoliciesTitles() {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        _this.callPolicyEngineFunc('userPolicies', {}).then(function (policies) {\n          var titles = [];\n\n          for (var i in policies) {\n            titles.push(i);\n          }\n\n          resolve(titles);\n        });\n      });\n    }\n  }, {\n    key: 'getTargets',\n    value: function getTargets(scope) {\n      var targets = [];\n\n      for (var i in this.policies[scope]) {\n        if (targets.indexOf(i) === -1) {\n          targets.push(i);\n        }\n      }\n\n      return targets;\n    }\n  }, {\n    key: 'increaseRulePriority',\n    value: function increaseRulePriority(policyTitle, thisPriority, newPriority) {\n      var _this = this;\n      _this.getRuleOfPolicy(policyTitle, thisPriority).priority = newPriority;\n      _this.getRuleOfPolicy(policyTitle, newPriority).priority = thisPriority;\n      return _this.callPolicyEngineFunc('savePolicies', { source: 'USER' });\n    }\n  }, {\n    key: 'setVariables',\n    value: function setVariables() {\n      return {\n        'Date': {\n          title: '<br><h5>Updating date related configurations</h5><p>Incoming communications in the introduced date will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n          description: '<p>Date:</p>',\n          input: [['date', []]]\n        },\n        'Domain': {\n          title: '<br><h5>Updating domain configurations</h5><p>Incoming communications from a user whose identity is from the introduced domain allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n          description: '<p>Domain:</p>',\n          input: [['form', []]]\n        },\n        'Group of users': {\n          title: '<br><h5>Updating groups configurations</h5><p>Incoming communications from a user whose identity is in the introduced group will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n          description: '<p>Group name:</p>',\n          input: [['select', ['group', 'Select a group:']]]\n        },\n        'Subscription preferences': {\n          title: '<br><h5>Updating subscriptions configurations</h5><p>The acceptance of subscriptions to your hyperties will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n          input: []\n        },\n        'Time of the day': {\n          title: '<br><h5>Updating time configurations</h5><p>Incoming communications in the introduced timeslot will be blocked, but this can be changed in the preferences page.</p><p>Please introduce a new timeslot in the following format:</p><p class=\"center-align\">&lt;START-HOUR&gt;:&lt;START-MINUTES&gt; to &lt;END-HOUR&gt;:&lt;END-MINUTES&gt;</p><br>',\n          description: '<p>Timeslot:</p>',\n          input: [['form', []]]\n        },\n        Weekday: {\n          title: '<br><h5>Updating weekday configurations</h5><p>Incoming communications in the introduced weekday will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n          description: '<p>Weekday:</p>',\n          input: [['select', ['weekday', 'Select a weekday:', ['Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']]]]\n        }\n      };\n    }\n  }, {\n    key: 'setAdditionMethods',\n    value: function setAdditionMethods() {\n      var _this = this;\n      return {\n        Date: function Date(params) {\n          return new Promise(function (resolve, reject) {\n            var policyTitle = params[0];\n            _this.callPolicyEngineFunc('userPolicies', {}).then(function (userPolicies) {\n              userPolicies[policyTitle].createRule(params[4], { attribute: 'date', operator: 'equals', params: params[3] }, params[1], params[2]);\n              _this.callPolicyEngineFunc('savePolicies', { source: 'USER' }).then(function () {\n                resolve();\n              });\n            });\n          });\n        },\n        Domain: function Domain(params) {\n          return new Promise(function (resolve, reject) {\n            var policyTitle = params[0];\n            _this.callPolicyEngineFunc('userPolicies', {}).then(function (userPolicies) {\n              userPolicies[policyTitle].createRule(params[4], { attribute: 'domain', operator: 'equals', params: params[3] }, params[1], params[2]);\n              _this.callPolicyEngineFunc('savePolicies', { source: 'USER' }).then(function () {\n                resolve();\n              });\n            });\n          });\n        },\n        'Group of users': function GroupOfUsers(params) {\n          return new Promise(function (resolve, reject) {\n            var policyTitle = params[0];\n            _this.callPolicyEngineFunc('userPolicies', {}).then(function (userPolicies) {\n              userPolicies[policyTitle].createRule(params[4], { attribute: 'source', operator: 'in', params: params[3] }, params[1], params[2]);\n              _this.callPolicyEngineFunc('savePolicies', { source: 'USER' }).then(function () {\n                resolve();\n              });\n            });\n          });\n        },\n        'Subscription preferences': function SubscriptionPreferences(params) {\n          return new Promise(function (resolve, reject) {\n            var policyTitle = params[0];\n            _this.callPolicyEngineFunc('userPolicies', {}).then(function (userPolicies) {\n              var operator = 'equals';\n              if (params[3] === 'preauthorised') {\n                operator = 'in';\n              }\n\n              // TIAGO: this is giving me an error...\n              userPolicies[policyTitle].createRule(params[4], { attribute: 'subscription', operator: operator, params: params[3] }, params[1], params[2]);\n              _this.callPolicyEngineFunc('savePolicies', { source: 'USER' }).then(function () {\n                resolve();\n              });\n            });\n          });\n        },\n        'Time of the day': function TimeOfTheDay(params) {\n          return new Promise(function (resolve, reject) {\n            var policyTitle = params[0];\n            _this.callPolicyEngineFunc('userPolicies', {}).then(function (userPolicies) {\n              params[3] = params[3].split(' to ');\n              var start = params[3][0].split(':');\n              start = start.join('');\n              var end = params[3][1].split(':');\n              end = end.join('');\n              userPolicies[policyTitle].createRule(params[4], { attribute: 'time', operator: 'between', params: [start, end] }, params[1], params[2]);\n              _this.callPolicyEngineFunc('savePolicies', { source: 'USER' }).then(function () {\n                resolve();\n              });\n            });\n          });\n        },\n\n        Weekday: function Weekday(params) {\n          return new Promise(function (resolve, reject) {\n            var weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n            params[3] = weekdays.indexOf(params[3]);\n            var policyTitle = params[0];\n            _this.callPolicyEngineFunc('userPolicies', {}).then(function (userPolicies) {\n              userPolicies[policyTitle].createRule(params[4], { attribute: 'weekday', operator: 'equals', params: params[3] }, params[1], params[2]);\n              _this.callPolicyEngineFunc('savePolicies', { source: 'USER' }).then(function () {\n                resolve();\n              });\n            });\n          });\n        }\n      };\n    }\n  }, {\n    key: 'setValidationMethods',\n    value: function setValidationMethods() {\n      var _this3 = this;\n\n      return {\n        Date: function Date(scope, info) {\n          return _this3.isValidDate(info) & _this3.isValidScope(scope);\n        },\n        'Group of users': function GroupOfUsers(scope, info) {\n          return _this3.isValidString(info) & _this3.isValidScope(scope);\n        },\n        Domain: function Domain(scope, info) {\n          return _this3.isValidDomain(info) & _this3.isValidScope(scope);\n        },\n        Weekday: function Weekday(scope, info) {\n          return true & _this3.isValidScope(scope);\n        },\n        'Subscription preferences': function SubscriptionPreferences(scope, info) {\n          return _this3.isValidSubscriptionType(info) & _this3.isValidScope(scope);\n        },\n        'Time of the day': function TimeOfTheDay(scope, info) {\n          return _this3.isValidTimeslot(info) & _this3.isValidScope(scope);\n        }\n      };\n    }\n  }, {\n    key: 'updateActivePolicy',\n    value: function updateActivePolicy(title) {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        _this.callPolicyEngineFunc('activeUserPolicy', { userPolicy: title }).then(function () {\n          _this.callPolicyEngineFunc('saveActivePolicy', {}).then(function () {\n            resolve();\n          });\n        });\n      });\n    }\n  }, {\n    key: 'isValidEmail',\n    value: function isValidEmail(info) {\n      var pattern = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\n      return pattern.test(info);\n    }\n  }, {\n    key: 'isValidDomain',\n    value: function isValidDomain(info) {\n      var pattern = /[a-z0-9.-]+\\.[a-z]{2,3}$/;\n      return pattern.test(info);\n    }\n  }, {\n    key: 'isValidString',\n    value: function isValidString(info) {\n      var pattern = /[a-z0-9.-]$/;\n      return pattern.test(info);\n    }\n  }, {\n    key: 'isValidSubscriptionType',\n    value: function isValidSubscriptionType(info) {\n      return true;\n    }\n  }, {\n    key: 'isValidDate',\n    value: function isValidDate(info) {\n      var infoSplit = info.split('/');\n      var day = parseInt(infoSplit[0]);\n      var month = parseInt(infoSplit[1]);\n      var year = parseInt(infoSplit[2]);\n\n      var date = new Date(year, month - 1, day);\n      var isValidFormat = date.getFullYear() === year && date.getMonth() + 1 === month && date.getDate() === day;\n      var formattedDate = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n      var now = new Date();\n      var today = now.getDate() + '/' + (now.getMonth() + 1) + '/' + now.getFullYear();\n\n      var isFuture = false;\n      if (date.getFullYear() > now.getFullYear()) {\n        isFuture = true;\n      } else {\n        if (date.getFullYear() == now.getFullYear()) {\n          if (date.getMonth() + 1 > now.getMonth() + 1) {\n            isFuture = true;\n          } else {\n            if (date.getMonth() + 1 == now.getMonth() + 1) {\n              if (date.getDate() >= now.getDate()) {\n                isFuture = true;\n              }\n            }\n          }\n        }\n      }\n\n      return isValidFormat && isFuture;\n    }\n  }, {\n    key: 'isValidScope',\n    value: function isValidScope(scope) {\n      return scope !== '';\n    }\n  }, {\n    key: 'isValidTimeslot',\n    value: function isValidTimeslot(info) {\n      if (!info) {\n        return false;\n      }\n      var splitInfo = info.split(' to '); // [12:00, 13:00]\n      var twoTimes = splitInfo.length === 2;\n      if (!twoTimes) {\n        return false;\n      }\n      var splitStart = splitInfo[0].split(':'); // [12, 00]\n      var splitEnd = splitInfo[1].split(':'); // [13, 00]\n      if (splitStart.length !== 2 || splitEnd.length !== 2) {\n        return false;\n      }\n      var okSize = splitStart[0].length === 2 && splitStart[1].length === 2 && splitEnd[0].length === 2 && splitEnd[1].length === 2;\n      var areIntegers = splitStart[0] == parseInt(splitStart[0], 10) && splitStart[1] == parseInt(splitStart[1], 10) && splitEnd[0] == parseInt(splitEnd[0], 10) && splitEnd[1] == parseInt(splitEnd[1], 10);\n      return twoTimes && okSize && areIntegers;\n    }\n  }, {\n    key: 'getFormattedPolicies',\n    value: function getFormattedPolicies() {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        _this.callPolicyEngineFunc('userPolicies', {}).then(function (policiesPE) {\n          var policiesGUI = [];\n\n          for (var i in policiesPE) {\n            var policy = {\n              title: policiesPE[i].key,\n              rulesTitles: [],\n              ids: []\n            };\n\n            if (policiesPE[i].rules.length !== 0) {\n              policiesPE[i].rules = policiesPE[i].sortRules();\n              for (var j in policiesPE[i].rules) {\n                var title = _this._getTitle(policiesPE[i].rules[j]);\n                policy.rulesTitles.push(title);\n                policy.ids.push(policy.title + ':' + policiesPE[i].rules[j].priority);\n              }\n            }\n\n            policiesGUI.push(policy);\n          }\n\n          resolve(policiesGUI);\n        });\n      });\n    }\n  }, {\n    key: 'getRuleOfPolicy',\n    value: function getRuleOfPolicy(title, priority) {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        _this.callPolicyEngineFunc('userPolicies', {}).then(function (policies) {\n          var policy = policies[title];\n          resolve(policy.getRuleByPriority(priority));\n        });\n      });\n    }\n  }, {\n    key: '_getTitle',\n    value: function _getTitle(rule) {\n      var condition = rule.condition;\n      var authorise = rule.decision ? 'allowed' : 'blocked';\n      var target = rule.target === 'global' ? 'All identities and hyperties' : rule.target;\n      var attribute = condition.attribute;\n      switch (attribute) {\n        case 'date':\n          return 'Date ' + condition.params + ' is ' + authorise + ' (' + target + ')';\n        case 'domain':\n          return 'Domain \\\"' + condition.params + '\\\" is ' + authorise + ' (' + target + ')';\n        case 'source':\n          if (condition.operator === 'in') {\n            return 'Group \\\"' + condition.params + '\\\" is ' + authorise + ' (' + target + ')';\n          } else {\n            if (condition.operator === 'equals') {\n              return 'User ' + condition.params + ' is ' + authorise + ' (' + target + ')';\n            }\n          }\n        case 'subscription':\n          if (condition.params === '*') {\n            return 'Subscriptions from all hyperties are ' + authorise + ' (' + target + ')';\n          } else {\n            if (condition.params === 'preauthorised') {\n              return 'Subscriptions from previously authorised hyperties are allowed (' + target + ')';\n            }\n          }\n        case 'time':\n          var start = condition.params[0][0] + condition.params[0][1] + ':' + condition.params[0][2] + condition.params[0][3];\n          var end = condition.params[1][0] + condition.params[1][1] + ':' + condition.params[1][2] + condition.params[1][3];\n          return 'Timeslot from ' + start + ' to ' + end + ' is ' + authorise + ' (' + target + ')';\n        case 'weekday':\n          var weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n          var weekdayID = condition.params;\n          return 'Weekday \\\"' + weekdays[weekdayID] + '\\\" is ' + authorise + ' (' + target + ')';\n        default:\n          return 'Rule ' + rule.priority + ' is ' + authorise + ' (' + target + ')';\n      }\n    }\n  }, {\n    key: 'getVariables',\n    value: function getVariables() {\n      var variablesTitles = [];\n      for (var i in this.variables) {\n        variablesTitles.push(i);\n      }\n      return variablesTitles;\n    }\n  }, {\n    key: 'getVariableInfo',\n    value: function getVariableInfo(variable) {\n      return this.variables[variable];\n    }\n  }, {\n    key: 'getMyEmails',\n    value: function getMyEmails() {\n      return this.callPolicyEngineFunc('getMyEmails', {});\n    }\n  }, {\n    key: 'getMyHyperties',\n    value: function getMyHyperties() {\n      return this.callPolicyEngineFunc('getMyHyperties', {});\n    }\n\n    //TODO If there is a problem with the input, show it to the user\n\n  }, {\n    key: 'setInfo',\n    value: function setInfo(variable, policyTitle, info, authorise, scope, target) {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        if (_this.validation[variable](scope, info)) {\n          _this.addition[variable]([policyTitle, scope, target, info, authorise]).then(function () {\n            resolve();\n          });\n        } else {\n          reject('Invalid configuration');\n        }\n      });\n    }\n  }, {\n    key: 'deleteInfo',\n    value: function deleteInfo(variable, scope, target, info) {\n      var params = [scope, target, info];\n      if (variable === 'member') {\n        var conditionSplit = info.split(' ');\n        var groupName = conditionSplit[2];\n        params = [scope, groupName, info];\n      }\n      this.deletion[variable](params);\n    }\n  }, {\n    key: 'getGroups',\n    value: function getGroups() {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        _this.callPolicyEngineFunc('groups', {}).then(function (groups) {\n          var groupsGUI = {\n            groupsNames: [],\n            members: [],\n            ids: []\n          };\n\n          for (var i in groups) {\n            groupsGUI.groupsNames.push(i);\n            groupsGUI.members.push(groups[i]);\n            var ids = [];\n            for (var j in groups[i]) {\n              ids.push(i + '::' + groups[i][j]);\n            }\n            groupsGUI.ids.push(ids);\n          }\n\n          //console.log('TIAGO groups', groupsGUI)\n          resolve(groupsGUI);\n        });\n      });\n    }\n  }, {\n    key: 'getGroupsNames',\n    value: function getGroupsNames() {\n      return this.callPolicyEngineFunc('getGroupsNames', {});\n    }\n  }, {\n    key: 'removeFromGroup',\n    value: function removeFromGroup(groupName, user) {\n      return this.callPolicyEngineFunc('removeFromGroup', { groupName: groupName, userEmail: user });\n    }\n  }, {\n    key: 'updatePolicy',\n    value: function updatePolicy(policyTitle, rule, newDecision, newSubscriptionType) {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        _this.callPolicyEngineFunc('userPolicies', {}).then(function (userPolicies) {\n          userPolicies[policyTitle].deleteRule(rule);\n          if (!newSubscriptionType) {\n            userPolicies[policyTitle].createRule(newDecision, rule.condition, rule.scope, rule.target, rule.priority);\n          } else {\n            var operator = newSubscriptionType === '*' ? 'equals' : 'in';\n            userPolicies[policyTitle].createRule(newDecision, [{ attribute: 'subscription', opeator: operator, params: newSubscriptionType }], rule.scope, rule.target, rule.priority);\n          }\n\n          _this.callPolicyEngineFunc('saveActivePolicy', {}).then(function () {\n            resolve();\n          });\n        });\n      });\n    }\n  }]);\n\n  return PoliciesManager;\n}();\n\nexports.default = PoliciesManager;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar _IdentitiesGUI = require('./IdentitiesGUI');\n\nvar _IdentitiesGUI2 = _interopRequireDefault(_IdentitiesGUI);\n\nvar _PoliciesGUI = require('./PoliciesGUI');\n\nvar _PoliciesGUI2 = _interopRequireDefault(_PoliciesGUI);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n},{\"./IdentitiesGUI\":1,\"./PoliciesGUI\":2}]},{},[4])(4)\n});\n\n","// jshint browser:true, jquery: true\n\nclass IdentitiesGUI {\n\n  constructor(guiURL, idmURL, messageBus) {\n    //if (!identityModule) throw Error('Identity Module not set!');\n    if (!messageBus) throw Error('Message Bus not set!');\n    let _this = this;\n    _this._guiURL = guiURL;\n    _this._idmURL = idmURL;\n    _this._messageBus = messageBus;\n\n    //console.log('TIAGO: Calling deployGUI');\n    //_this.identityModule.deployGUI();\n    _this.callIdentityModuleFunc('deployGUI', {}).then(() => {\n      _this.resultURL  = undefined;\n\n      _this._messageBus.addListener(guiURL, msg => {\n        let identityInfo = msg.body.value;\n        let funcName = msg.body.method;\n        let value;\n\n        if (funcName === 'openPopup') {\n          let urlreceived = msg.body.params.urlreceived;\n          //console.log('TIAGO openPopup on browser');\n          _this.openPopup(urlreceived).then((returnedValue) => {\n            let value = {type: 'execute', value: returnedValue, code: 200};\n            let replyMsg = {id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value};\n            _this._messageBus.postMessage(replyMsg);\n          });\n        }\n\n        // unhide the config page with the identity GUI\n        document.getElementsByTagName('body')[0].style = 'background-color:white;';\n        parent.postMessage({ body: { method: 'showAdminPage' }, to: 'runtime:gui-manager' }, '*');\n        $('.admin-page').removeClass('hide');\n        _this.showIdentitiesGUI(msg.body.value).then((identityInfo) => {\n          let replyMsg;\n\n          //hide config page with the identity GUI\n          parent.postMessage({ body: { method: 'hideAdminPage' }, to: 'runtime:gui-manager' }, '*');\n          $('.admin-page').addClass('hide');\n          document.getElementsByTagName('body')[0].style = 'background-color:transparent';\n          $('.identities-section').addClass('hide');\n          $('.policies-section').addClass('hide');\n\n          switch (identityInfo.type) {\n            case 'idp':\n              value = { type: 'idp', value: identityInfo.value, code: 200 };\n              replyMsg = { id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value };\n              _this._messageBus.postMessage(replyMsg);\n              break;\n\n            case 'identity':\n              value = { type: 'identity', value: identityInfo.value, code: 200 };\n              replyMsg = { id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value };\n              _this._messageBus.postMessage(replyMsg);\n              break;\n\n            default:\n              value = { type: 'error', value: 'Error on identity GUI', code: 400 };\n              replyMsg = { id: msg.id, type: 'response', to: msg.from, from: msg.to, body: value };\n              _this._messageBus.postMessage(replyMsg);\n          }\n        });\n      });\n\n      $('.identities-page-show').on('click', function () {\n        //TODO call a IdM method that requests the identities\n        _this.showIdentitiesGUI();\n      });\n    });\n  }\n\n  callIdentityModuleFunc(methodName, parameters) {\n    let _this = this;\n    let message;\n\n    return new Promise((resolve, reject) => {\n      message = { type: 'execute', to: _this._idmURL, from: _this._guiURL,\n        body: { resource: 'identity', method: methodName, params: parameters }, };\n      _this._messageBus.postMessage(message, (res) => {\n        let result = res.body.value;\n\n        //console.log('TIAGO: return from callIdentityModuleFunc ', result);\n        resolve(result);\n      });\n    });\n  }\n\n  openPopup(urlreceived) {\n\n    //console.log('TIAGO openPopup local browser');\n\n    return new Promise((resolve, reject) => {\n\n      let win = window.open(urlreceived, 'openIDrequest', 'width=800, height=600');\n      if (window.cordova) {\n        win.addEventListener('loadstart', function(e) {\n          let url = e.url;\n          let code = /\\&code=(.+)$/.exec(url);\n          let error = /\\&error=(.+)$/.exec(url);\n\n          if (code || error) {\n            win.close();\n            resolve(url);\n          }\n        });\n      } else {\n        let pollTimer = setInterval(function() {\n          try {\n            if (win.closed) {\n              reject('Some error occured when trying to get identity.');\n              clearInterval(pollTimer);\n            }\n\n            if (win.document.URL.indexOf('id_token') !== -1 || win.document.URL.indexOf(location.origin) !== -1) {\n              window.clearInterval(pollTimer);\n              let url =   win.document.URL;\n\n              win.close();\n              resolve(url);\n            }\n          } catch (e) {\n            //console.log(e);\n          }\n        }, 500);\n      }\n    });\n  }\n\n  showIdentitiesGUI(receivedInfo) {\n    let _this = this;\n\n    return new Promise((resolve, reject) => {\n\n      let identityInfo;\n      let toRemoveID;\n\n      _this._checkReceivedInfo(receivedInfo).then((resultObject) => {\n        identityInfo = resultObject.identityInfo;\n        toRemoveID = resultObject.toRemoveID;\n\n        $('.policies-section').addClass('hide');\n        $('.identities-section').removeClass('hide');\n\n        _this.showMyIdentities(identityInfo.identities, toRemoveID).then((identity) => {\n          console.log('chosen identity: ', identity);\n          resolve({type: 'identity', value: identity});\n        });\n\n        let callback = (value) => {\n          console.log('chosen identity: ', value);\n          resolve({type: 'identity', value: value});\n        };\n\n        let idps = [];\n        let idpsObjects = identityInfo.idps;\n\n        idpsObjects.forEach(function(entry) {\n          idps.push(entry.domain);\n        });\n\n        $('#idproviders').html(_this._getList(idps));\n        $('#idproviders').off();\n        $('#idproviders').on('click', (event) => _this.obtainNewIdentity(event, callback, toRemoveID));\n        //$('.back').on('click', (event) => _this.goHome());\n        $('.identities-reset').off();\n        $('.identities-reset').on('click', (event) => _this._resetIdentities(callback));\n      });\n    });\n  }\n\n  _checkReceivedInfo(receivedInfo) {\n    let _this = this;\n    return new Promise((resolve, reject) => {\n      let identityInfo, toRemoveID;\n      if (receivedInfo) {\n        identityInfo = receivedInfo;\n        toRemoveID = false;\n        resolve({identityInfo: identityInfo, toRemoveID:toRemoveID});\n      } else {\n        toRemoveID = true;\n        _this.callIdentityModuleFunc('getIdentitiesToChoose', {}).then((result) => {\n          resolve({identityInfo: result, toRemoveID: toRemoveID});\n        });\n      }\n    });\n  }\n\n  showMyIdentities(emails, toRemoveID) {\n    let _this = this;\n\n    return new Promise((resolve, reject) => {\n\n      // let identities = _this.identityModule.getIdentities();\n      let identities = [];\n\n      for (let i in emails) {\n        let domain = emails[i].split('@');\n        identities.push({ email: emails[i], domain: domain[1] });\n      }\n\n      let myIdentities = document.getElementById('my-ids');\n      myIdentities.innerHTML = '';\n\n      let table = _this.createTable();\n\n      let tbody = document.createElement('tbody');\n      let numIdentities = identities.length;\n      for (let i = 0; i < numIdentities; i++) {\n        let tr = _this.createTableRow(identities[i], toRemoveID);\n        tbody.appendChild(tr);\n      }\n\n      table.appendChild(tbody);\n      myIdentities.appendChild(table);\n\n      let callback = (identity) => {\n        resolve(identity);\n      };\n\n      if (!toRemoveID) {\n        $('.clickable-cell').on('click', (event) => _this.changeID(callback));\n      }\n\n      $('.remove-id').on('click', (event) => _this.removeID(emails));\n\n    });\n  }\n\n  createTable() {\n    let table = document.createElement('table');\n    table.className = 'centered';\n    let thead = document.createElement('thead');\n    let tr = document.createElement('tr');\n    let thEmail = document.createElement('th');\n    thEmail.textContent = 'Email';\n    tr.appendChild(thEmail);\n    thead.appendChild(tr);\n    table.appendChild(thead);\n    return table;\n  }\n\n  createTableRow(identity, toRemoveID) {\n    let tr = document.createElement('tr');\n\n    let td = document.createElement('td');\n    td.textContent = identity.email;\n    td.className = 'clickable-cell';\n    td.style = 'cursor: pointer';\n    tr.appendChild(td);\n\n    td = document.createElement('td');\n\n    if (toRemoveID) {\n      let btn = document.createElement('button');\n      btn.textContent = 'Remove';\n      btn.className = 'remove-id waves-effect waves-light btn';\n      td.appendChild(btn);\n    }\n\n    tr.appendChild(td);\n\n    return tr;\n  }\n\n  changeID(callback) {\n    let _this = this;\n\n    let idToUse = event.target.innerText;\n\n    //TODO improve later.\n    //prevents when the users selects an hyperty, exit the identity page and\n    //goes again to the identity page, from selecting \"settings\" button as identity.\n    if (idToUse !== 'settings') {\n\n      callback(idToUse);\n      return idToUse;\n    }\n  }\n\n  removeID(emails) {\n    let _this = this;\n    let row = event.target.parentNode.parentNode;\n    let idToRemove = row.children[0].textContent;\n    let domain = row.children[1].textContent;\n\n    _this.callIdentityModuleFunc('unregisterIdentity', { email: idToRemove }).then(() => {\n      let numEmails = emails.length;\n      for (let i = 0; i < numEmails; i++) {\n        if (emails[i].email === idToRemove) {\n          emails.splice(i, 1);\n          break;\n        }\n      }\n\n      // -------------------------------------------------------------------------//\n      _this.showMyIdentities(emails, true);\n    });\n\n    //_this.identityModule.unregisterIdentity(idToRemove);\n\n  }\n\n  obtainNewIdentity(event, callback, toRemoveID) {\n    let _this = this;\n    let idProvider = event.target.textContent;\n    let idProvider2 = event.target.text;\n\n    _this.callIdentityModuleFunc('generateRSAKeyPair', {}).then((keyPair) => {\n      let publicKey = btoa(keyPair.public);\n\n      _this.callIdentityModuleFunc('sendGenerateMessage',\n        { contents: publicKey, origin: 'origin', usernameHint: undefined,\n        idpDomain: idProvider, }).then((value) => {\n        console.log('receivedURL: ' + value.loginUrl.substring(0, 20) + '...');\n\n        let url = value.loginUrl;\n        let finalURL;\n\n        //check if the receivedURL contains the redirect field and replace it\n        if (url.indexOf('redirect_uri') !== -1) {\n          let firstPart = url.substring(0, url.indexOf('redirect_uri'));\n          let secondAuxPart = url.substring(url.indexOf('redirect_uri'), url.length);\n\n          let secondPart = secondAuxPart.substring(secondAuxPart.indexOf('&'), url.length);\n\n          //check if the reddirect field is the last field of the URL\n          if (secondPart.indexOf('&') !== -1) {\n            finalURL = firstPart + 'redirect_uri=' + location.origin + secondPart;\n          } else {\n            finalURL = firstPart + 'redirect_uri=' + location.origin;\n          }\n        }\n\n        _this.resultURL = finalURL || url;\n\n        $('.login-idp').html('<p>Chosen IDP: ' + idProvider + '</p>');\n        $('.login').removeClass('hide');\n        $('.login-btn').off();\n        $('.login-btn').on('click', (event) => {\n          $('.login').addClass('hide');\n          _this._authenticateUser(keyPair, publicKey, value, 'origin', idProvider).then((email) => {\n            callback(email);\n            _this.showIdentitiesGUI();\n          });\n        });\n      });\n    }).catch(err => console.log('obtanin new identity', err));\n\n  }\n\n  _getList(items) {\n    let list = '';\n    let numItems = items.length;\n\n    for (let i = 0; i < numItems; i++) {\n      list += '<li class=\"divider\"></li>';\n      list += '<li><a class=\"center-align\">' + items[i] + '</a></li>';\n    }\n\n    return list;\n  }\n\n  _authenticateUser(keyPair, publicKey, value, origin, idProvider) {\n    let _this = this;\n    let url = _this.resultURL;\n\n    return new Promise((resolve, reject) => {\n\n      _this.openPopup(url).then((identity) => {\n\n        _this.callIdentityModuleFunc('sendGenerateMessage',\n          { contents: publicKey, origin: origin, usernameHint: identity, idpDomain: idProvider }).then((result) => {\n\n          if (result) {\n\n           //_this.identityModule.storeIdentity(result, keyPair).then((value) => {\n           _this.callIdentityModuleFunc('storeIdentity', {result: result, keyPair: keyPair}).then((value) => {\n             resolve(value.userProfile.username);\n           }, (err) => {\n             reject(err);\n           });\n\n          } else {\n           reject('error on obtaining identity information');\n          }\n\n          });\n         }, (err) => {\n           reject(err);\n      });\n    });\n  }\n\n_resetIdentities() {\n  console.log('_resetIdentities');\n}\n\n\n}\n\nexport default IdentitiesGUI;\n","import PoliciesManager from './PoliciesManager';\n\nclass PoliciesGUI {\n\n  constructor(pepGuiURL, pepURL, messageBus) {\n    let _this = this;\n    _this.policiesManager = new PoliciesManager(pepGuiURL, pepURL, messageBus);\n    // assume prepareAttributes is called after this\n  }\n\n  prepareAttributes() {\n    let _this = this;\n    return new Promise((resolve, reject) => {\n      _this.policiesManager.prepareAttributes().then(() => {\n        _this.elements = _this._setElements();\n        _this._setListeners();\n        resolve();\n      });\n    });\n  }\n\n  _addMember() {\n    let _this = this;\n    let group = event.target.id;\n    $('.member-new-intro').html('<h5>Add a member to a group</h5><p>Insert a user email below to add to the \"' + group + '\" group.</p>');\n    $('.member-new-modal').openModal();\n    $('.member-new-ok').off();\n    $('.member-new-ok').on('click', (event) => {\n      let member = $('#member-new').val();\n      $('#member-new').val('');\n      _this.policiesManager.addToGroup(group, member).then(() => {\n        $('.member-new-modal').closeModal();\n        _this._manageGroups();\n      });\n    });\n  }\n\n  _createGroup() {\n    let _this = this;\n    $('#group-new-name').val('');\n    $('.group-new-modal').openModal();\n    $('.group-new-ok').on('click', (event) => {\n      let groupName = $('#group-new-name').val();\n      _this.policiesManager.createGroup(groupName).then(() => {\n        _this._manageGroups();\n      });\n    });\n  }\n\n  _addPolicy() {\n    let _this = this;\n    $('#policy-new-title').val('');\n    $('.combining').html('');\n    let algorithms = ['Block overrides', 'Allow overrides', 'First applicable'];\n    $('.combining').append(this._getOptions('comb-algorithm', 'Choose a combining algorithm', algorithms));\n    $('.policy-new').openModal();\n\n    $('.policy-new-ok').off();\n    $('.policy-new-ok').on('click', (event) => {\n      let policyTitle = $('#policy-new-title').val();\n      if (!policyTitle) {\n        Materialize.toast('Invalid policy title', 4000);\n      } else {\n        let combiningAlgorithm = $('#comb-algorithm').val();\n        _this.policiesManager.addPolicy(policyTitle, combiningAlgorithm).then(() => {\n          $('.help-menu').addClass('hide');\n          $('.policy-new').closeModal();\n          _this._goHome();\n        });\n      }\n    });\n    $('.help-btn').off();\n    $('.help-btn').on('click', (event) => {\n      $('.help-menu').removeClass('hide');\n    });\n  }\n\n  _decreaseRulePriority() {\n    let _this = this;\n    let id = event.target.closest('tr').id;\n    let splitId = id.split(':');\n    let thisPriority = parseInt(splitId[splitId.length - 1]);\n    splitId.pop();\n    let policyTitle = splitId.join(':');\n    _this.policiesManager.getPolicy(policyTitle).then((policy) => {\n      let lastPriority = policy.getLastPriority();\n      if (lastPriority != thisPriority) {\n        let newPriority = parseInt(thisPriority + 1);\n        _this.policiesManager.decreaseRulePriority(policyTitle, thisPriority, newPriority).then(() => {\n          _this._goHome();\n        });\n      }\n    });\n  }\n\n  _deleteMember() {\n    let _this = this;\n    let id = event.target.closest('tr').id;\n    let splitId = id.split('::');\n    let member = splitId[splitId.length - 1];\n    splitId.pop();\n    let group = splitId.join('::');\n    _this.policiesManager.removeFromGroup(group, member).then(() => {\n      _this._manageGroups();\n    });\n  }\n\n  _deleteGroup() {\n    let _this = this;\n    let groupName = event.target.closest('tr').children[0].id;\n    _this.policiesManager.deleteGroup(groupName).then(() => {\n      _this._manageGroups();\n    });\n  }\n\n  _deletePolicy() {\n    let _this = this;\n    let policyTitle = event.target.closest('tr').id;\n    _this.policiesManager.deletePolicy(policyTitle).then(() => {\n      _this._goHome();\n    });\n  }\n\n  _deleteRule() {\n    let _this = this;\n    let id = event.target.closest('tr').id;\n    let splitId = id.split(':');\n    let priority = splitId[splitId.length - 1];\n    splitId.pop();\n    let policyTitle = splitId.join(':');\n    let rule = _this.policiesManager.getRuleOfPolicy(policyTitle, priority);\n\n    _this.policiesManager.deleteRule(policyTitle, rule).then(() => {\n      _this._goHome();\n    });\n  }\n\n  _getActivePolicy() {\n    let _this = this;\n    _this.policiesManager.getActivePolicy().then((activeUserPolicy) => {\n      $('.policy-active').html('');\n      _this.policiesManager.getPoliciesTitles().then((policies) => {\n        policies.push('Deactivate all policies');\n\n        $('.policy-active').append(_this._getOptions('policies-list', 'Click to activate a policy', policies, activeUserPolicy));\n\n        $('#policies-list').on('click', (event) => {\n          let policyTitle = $('#policies-list').find(\":selected\")[0].textContent;\n          if (policyTitle === 'Deactivate all policies') {\n            policyTitle = undefined;\n          }\n          _this.policiesManager.updateActivePolicy(policyTitle);\n        });\n      });\n    });\n  }\n\n  _getGroupOptions(title, keys, scopes, lists) {\n    let list = '<option disabled selected>' + title + '</option>';\n\n    for (let i in keys) {\n      list += '<optgroup label=' + keys[i] + '>';\n      for (let j in lists[i]) {\n        list += '<option id=\"' + scopes[i] + '\">' + lists[i][j] + '</option>';\n      }\n    }\n\n    return list;\n  }\n\n  _getInfo(variable) {\n    let info;\n\n    switch(variable) {\n      case 'Date':\n        info = $('.config').find('input').val();\n        if (info.indexOf(',') !== -1) { //20 July, 2016\n          let splitInfo = info.split(' '); //['20', 'July,',' '2016']\n          splitInfo[1] = splitInfo[1].substring(0, splitInfo[1].length - 1); //'July'\n          let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n          info = splitInfo[0] + '/' + (months.indexOf(splitInfo[1]) + 1) + '/' + splitInfo[2];\n        } else { // 2016-07-20\n          let splitInfo = info.split('-');\n          info = splitInfo[2] + '/' + splitInfo[1] + '/' + splitInfo[0];\n        }\n        break;\n      case 'Group of users':\n        info = $('#group').find(\":selected\").text();\n        break;\n      case 'Subscription preferences':\n        if (info = $(\"input[name='rule-new-subscription']:checked\")[0] !== undefined) {\n          info = $(\"input[name='rule-new-subscription']:checked\")[0].id;\n        }\n        break;\n      case 'Weekday':\n        info = $('#weekday').find(\":selected\").text();\n        break;\n      default:\n        info = $('.config').find('input').val();\n        break;\n    }\n\n    return info;\n  }\n\n  _getList(items) {\n      let list = '';\n      let numItems = items.length;\n\n      for (let i = 0; i < numItems; i++) {\n        list += '<li class=\"divider\"></li>';\n        list += '<li><a class=\"center-align\">' + items[i] + '</a></li>';\n      }\n\n      return list;\n    }\n\n  _getOptions(id, title, list, selected) {\n    let options = '<select id=\"' + id + '\" class=\"browser-default\"><option disabled selected>' + title + '</option>';\n    for (let i in list) {\n      if (selected !== undefined & selected === list[i]) {\n        options += '<option selected id=\"' + id + '\">' + list[i] + '</option>';\n      } else {\n        options += '<option id=\"' + id + '\">' + list[i] + '</option>';\n      }\n    }\n    options += '</select>';\n\n    return options;\n  }\n\n  _getPoliciesTable() {\n    let _this = this;\n\n    _this.policiesManager.getFormattedPolicies().then((policies) => {\n      $('.policies-no').addClass('hide');\n      $('.policies-current').html('');\n\n      let policiesTitles = [];\n      let rulesTitles = [];\n      let ids = [];\n\n      for (let i in policies) {\n        policiesTitles.push(policies[i].title);\n        rulesTitles.push(policies[i].rulesTitles);\n        ids.push(policies[i].ids);\n      }\n\n      let table = '<table>';\n      let isEmpty = policiesTitles.length === 0;\n\n      for (let i in policiesTitles) {\n        table += '<thead><tr id=\"' + policiesTitles[i] + '\"><td></td><td></td><th class=\"center-align\">' + policiesTitles[i] + '</th><td><i class=\"material-icons clickable-cell policy-delete\" style=\"cursor: pointer; vertical-align: middle\">delete_forever</i></td></tr></thead><tbody>';\n\n        for (let j in rulesTitles[i]) {\n          table += '<tr id=\"' + ids[i][j] + '\" ><td><i class=\"material-icons clickable-cell rule-priority-increase\" style=\"cursor: pointer; vertical-align: middle\">arrow_upward</i></td><td><i class=\"material-icons clickable-cell rule-priority-decrease\" style=\"cursor: pointer; vertical-align: middle\">arrow_downward</i></td><td class=\"rule-show clickable-cell\" style=\"cursor: pointer\">' + rulesTitles[i][j] + '</td><td><i class=\"material-icons clickable-cell rule-delete\" style=\"cursor: pointer; vertical-align: middle\">clear</i></td></tr>';\n        }\n        table += '<tr id=\"' + policiesTitles[i] + '\"></td><td></td><td></td><td style=\"text-align:center\"><i class=\"material-icons clickable-cell center-align rule-add\" style=\"cursor: pointer\">add_circle</i></td></tr>';\n      }\n      if (!isEmpty) {\n        table += '</tbody></table>';\n        $('.policies-current').append(table);\n      } else {\n        $('.policies-no').removeClass('hide');\n      }\n      $('.rule-add').on('click', (event) => { _this._showVariablesTypes(); });\n      $('.rule-delete').on('click', (event) => { _this._deleteRule(); });\n      $('.rule-show').on('click', (event) => { _this._showRule(); });\n      $('.rule-priority-increase').on('click', (event) => { _this._increaseRulePriority(); });\n      $('.rule-priority-decrease').on('click', (event) => { _this._decreaseRulePriority(); });\n      $('.policy-add').off();\n      $('.policy-add').on('click', (event) => { _this._addPolicy(); });\n      $('.policy-delete').on('click', (event) => { _this._deletePolicy(); });\n    }); \n  }\n\n  _goHome() {\n    this._getActivePolicy();\n    this._getPoliciesTable();\n  }\n\n  _increaseRulePriority() {\n    let _this = this;\n    let id = event.target.closest('tr').id;\n    let splitId = id.split(':');\n    let thisPriority = parseInt(splitId[splitId.length - 1]);\n    if (thisPriority !== 0) {\n      splitId.pop();\n      let policyTitle = splitId.join(':');\n      let newPriority = thisPriority - 1;\n\n      _this.policiesManager.increaseRulePriority(policyTitle, thisPriority, newPriority).then(() => {\n        _this._goHome();\n      });\n    }\n  }\n\n  _manageGroups() {\n    let _this = this;\n    _this.policiesManager.getGroups().then((groupsPE) => {\n      $('.groups-current').html('');\n      let groups = groupsPE.groupsNames;\n      let members = groupsPE.members;\n      let ids = groupsPE.ids;\n\n      let table = '<table>';\n      let isEmpty = groups.length === 0;\n\n      for (let i in groups) {\n        table += '<thead><tr><th id=\"' + groups[i] + '\">' + groups[i] + '</th><td style=\"text-align:right\"><i class=\"material-icons clickable-cell group-delete\" style=\"cursor: pointer; vertical-align: middle\">delete_forever</i></td></tr></thead><tbody>';\n        for (let j in members[i]) {\n          table += '<tr id=\"' + ids[i][j] + '\" ><td style=\"cursor: pointer\">' + members[i][j] + '</td><td style=\"text-align:right\"><i class=\"material-icons clickable-cell member-delete\" style=\"cursor: pointer; vertical-align: middle\">clear</i></td></tr>';\n        }\n\n        table += '<tr id=\"' + groups[i] + '\"><td><i class=\"material-icons clickable-cell member-add\" id=\"' + groups[i] + '\" style=\"cursor: pointer\">add_circle</i></td></tr>';\n      }\n\n      if (!isEmpty) {\n        table += '</tbody></table>';\n        $('.groups-current').append(table);\n      } else {\n        $('.groups-current').append('<p>There are no groups set.</p>');\n      }\n\n      $('.member-add').off();\n      $('.member-add').on('click', (event) => { _this._addMember(); });\n      $('.member-delete').on('click', (event) => { _this._deleteMember(); });\n      $('.group-add').off();\n      $('.group-add').on('click', (event) => { _this._createGroup(); });\n      $('.group-delete').on('click', (event) => { _this._deleteGroup(); });\n    });\n  }\n\n  _parseFileContent(content) {\n    let parsedContent = JSON.parse(content);\n    for (let i in parsedContent) {\n      this.policiesManager.addPolicy(i, undefined, parsedContent[i]);\n    }\n    $('.policy-new').closeModal();\n  }\n\n  _setElements() {\n    return {\n      date: (params) => { return '<input type=\"date\" class=\"datepicker\">'; },\n      select: (params) => { return this._getOptions(params[0], params[1], params[2]); },\n      form: (params) => { return '<form><input type=\"text\" placeholder=\"' + params + '\"></input></form>'; }\n    };\n  }\n\n  _showNewConfigurationPanel(policyTitle) {\n    let variable = event.target.text;\n    $('.variable').html(this._getNewConfiguration(policyTitle, variable));\n    $('.scopes').empty().html('');\n\n    let keys = ['Email', 'Hyperty', 'All'];\n    let scopes = ['identity', 'hyperty', 'global'];\n    let lists = [];\n\n    this.policiesManager.getMyEmails().then((emails) => {\n      lists.push(emails);\n      this.policiesManager.getMyHyperties().then((hyperties) => {\n        lists.push(hyperties);\n        lists.push(['All identities and hyperties']);\n        $('.scopes').append(this._getGroupOptions('Apply this configuration to:', keys, scopes, lists));\n        $('.variable').removeClass('hide');\n      });\n    });\n  }\n\n  _showVariablesTypes() {\n    let policyTitle = event.target.closest('tr').id;\n\n    $('#variables-types').empty().html('');\n    let variables = this.policiesManager.getVariables();\n    $('#variables-types').append(this._getList(variables));\n    $('.variable').addClass('hide');\n    $('.rule-new').openModal();\n    $('#variables-types').off();\n    $('#variables-types').on('click', (event) => { this._showNewConfigurationPanel(policyTitle); });\n  }\n\n  _getNewConfiguration(policyTitle, variable) {\n    let _this = this;\n    let info = _this.policiesManager.getVariableInfo(variable);\n    $('.rule-new-title').html(info.title);\n    $('.description').html(info.description);\n    $('.config').html('');\n\n    if (variable === 'Subscription preferences') {\n      $('.subscription-type').removeClass('hide');\n    } else {\n      $('.subscription-type').addClass('hide');\n      let tags = info.input;\n      for (let i in tags) {\n        _this.policiesManager.getGroupsNames().then((groupsNames) => {\n          if (variable === 'Group of users') {\n            tags[i][1].push(groupsNames);\n          }\n          $('.config').append(_this.elements[tags[i][0]](tags[i][1]));\n          if (variable === 'Group of users') {\n            tags[i][1].pop();\n          }\n        });\n      }\n      if (variable ==='date') {\n        $('.datepicker').pickadate({\n          selectMonths: true,\n          selectYears: 15\n        });\n      }\n    }\n    document.getElementById('allow').checked = false;\n    document.getElementById('block').checked = false;\n    $('.ok-btn').off();\n    $('.ok-btn').on('click', (event) => {\n      if ($(\"input[name='rule-new-decision']:checked\")[0] !== undefined) {\n        let info = _this._getInfo(variable);\n        let decision = $(\"input[name='rule-new-decision']:checked\")[0].id;\n        decision = decision === 'allow';\n        let scope = $('.scopes').find(\":selected\")[0].id;\n        let target = $('.scopes').find(\":selected\")[0].textContent;\n        target = (target === 'All identities and hyperties') ? 'global' : target;\n        _this.policiesManager.setInfo(variable, policyTitle, info, decision, scope, target).then(() => {\n          $('.rule-new').closeModal();\n          _this._goHome();\n        });\n      } else {\n        throw Error('INFORMATION MISSING: please specify an authorisation decision.');\n      }\n    });\n  }\n\n  _deleteInfo(resourceType) {\n    let id = event.target.closest('tr').id;\n    let splitId = id.split(':');\n    let scope = splitId[0];\n    splitId.shift();\n    let target = splitId.join('');\n    let condition = event.target.closest('tr').children[0].id;\n    this.policiesManager.deleteInfo(resourceType, scope, target, condition);\n    this._goHome();\n  }\n\n  _setListeners() {\n    $('.settings-btn').on('click', (event) => {\n      parent.postMessage({ body: { method: 'showAdminPage' }, to: 'runtime:gui-manager' }, '*');\n      $('.admin-page').removeClass('hide');\n      document.getElementsByTagName('body')[0].style = 'background-color:white;';\n    });\n\n    $('.policies-page-show').on('click', (event) => {\n      $('.policies-section').removeClass('hide');\n      $('.identities-section').addClass('hide');\n      this._goHome();\n      this._manageGroups();\n    });\n\n    $('.admin-page-exit').on('click', (event) => {\n      parent.postMessage({ body: { method: 'hideAdminPage' }, to: 'runtime:gui-manager' }, '*');\n      $('.admin-page').addClass('hide');\n      document.getElementsByTagName('body')[0].style = 'background-color:transparent;';\n    });\n\n    $('.exit-btn').on('click', (event) => {\n      $('.subscription-type').addClass('hide');\n      $('.help-menu').addClass('hide');\n    });\n\n    $('#policy-file').on('change', (event) => {\n      let file = event.target.files[0];\n      let reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = (event) => {\n        this._parseFileContent(event.target.result);\n        this._goHome();\n      }\n      reader.onerror = (event) => {\n        throw Error(\"Error reading the file\");\n      }\n    });\n  }\n\n  _showRule() {\n    let ruleTitle = event.target.textContent;\n    let id = event.target.closest('tr').id;\n    let splitId = id.split(':');\n    let priority = splitId[splitId.length - 1];\n    splitId.pop();\n    let policyTitle = splitId.join(':');\n    this.policiesManager.getRuleOfPolicy(policyTitle, priority).then((rule) => {\n      if (rule.condition.attribute === 'subscription' && rule.condition.params === 'preauthorised') {\n        $('.authorise-btns').addClass('hide');\n      } else {\n        let element;\n        if (rule.decision) {\n          element = document.getElementById('btn-allow');\n        } else {\n          element = document.getElementById('btn-block');\n        }\n        element.checked = true;\n        $('.authorise-btns').removeClass('hide');\n      }\n      $('.member-add').addClass('hide');\n      $('.member-new-btn').addClass('hide');\n\n      $('.rule-details').openModal();\n      $('.rule-title').html('<h5><b>' + ruleTitle + '</b></h5>');\n      if (rule.condition.attribute === 'subscription') {\n        $('.subscription-type').removeClass('hide');\n      }\n      $('.subscription-decision').on('click', (event) => { this._updateRule('subscription', policyTitle, rule); });\n      $('.decision').off();\n      $('.decision').on('click', (event) => { this._updateRule('authorisation', policyTitle, rule);});\n    });\n  }\n\n  _updateRule(type, policyTitle, rule) {\n    let _this = this;\n    let title = $('.rule-title').text();\n    let splitTitle = title.split(' ');\n    let index = splitTitle.indexOf('is');\n    if (index === -1) {\n      index = splitTitle.indexOf('are');\n    }\n    switch (type) {\n      case 'authorisation':\n        let newDecision = $(\"input[name='rule-update-decision']:checked\")[0].id;\n\n        if (newDecision === 'btn-allow') {\n          splitTitle[index + 1] = 'allowed';\n          newDecision = true;\n        } else {\n          splitTitle[index + 1] = 'blocked';\n          newDecision = false;\n        }\n        title = splitTitle.join(' ');\n        $('.rule-title').html('<h5><b>' + title + '</b></h5>');\n        _this.policiesManager.updatePolicy(policyTitle, rule, newDecision).then(() => {\n          _this._goHome();\n        });\n        break;\n      case 'subscription':\n        let newSubscriptionType = event.target.labels[0].textContent;\n\n        let decision = splitTitle[index + 1];\n        splitTitle = title.split('hyperties are');\n        if (newSubscriptionType === 'All subscribers') {\n          $('.authorise-btns').removeClass('hide');\n          newDecision = rule.decision;\n          newSubscriptionType = '*';\n          title = 'Subscriptions from all hyperties are' + splitTitle[1];\n        } else {\n          $('.authorise-btns').addClass('hide');\n          newDecision = true;\n          newSubscriptionType = 'preauthorised';\n          title = 'Subscriptions from previously authorised hyperties are' + splitTitle[1];\n        }\n\n        $('.rule-title').html('<h5><b>' + title + '</b></h5>');\n        _this.policiesManager.updatePolicy(policyTitle, rule, newDecision, newSubscriptionType).then(() => {\n          _this._goHome();\n        });\n        break;\n    }\n  }\n}\n\nexport default PoliciesGUI;\n","class PoliciesManager {\n\n  constructor(pepGuiURL, pepURL, messageBus) {\n    let _this = this;\n    _this._guiURL = pepGuiURL;\n    _this._pepURL = pepURL;\n    _this._messageBus = messageBus;\n\n    // assume prepare attributes is called after this\n  }\n\n  callPolicyEngineFunc(methodName, parameters) {\n    let _this = this;\n    let message;\n\n    return new Promise((resolve, reject) => {\n      message = { type: 'execute', to: _this._pepURL, from: _this._guiURL,\n        body: { resource: 'policy', method: methodName, params: parameters }, };\n      _this._messageBus.postMessage(message, (res) => {\n        let result = res.body.value;\n        resolve(result);\n      });\n    });\n  }\n\n  prepareAttributes() {\n    return new Promise((resolve, reject) => {\n      let _this = this;\n      _this.callPolicyEngineFunc('userPolicies', {}).then((userPolicies) => {\n        _this.policies = userPolicies;\n        _this.variables = _this.setVariables();\n        _this.addition = _this.setAdditionMethods();\n        _this.validation = _this.setValidationMethods();\n        resolve();\n      });\n    });\n  }\n\n  addToGroup(groupName, user) {\n    return this.callPolicyEngineFunc('addToGroup', {groupName: groupName, userEmail: user});\n  }\n\n  createGroup(groupName) {\n    return this.callPolicyEngineFunc('createGroup', {groupName: groupName});\n  }\n\n  addPolicy(title, combiningAlgorithm, policy) {\n    if (policy === undefined) {\n      switch (combiningAlgorithm) {\n        case 'Block overrides':\n          combiningAlgorithm = 'blockOverrides';\n          break;\n        case 'Allow overrides':\n          combiningAlgorithm = 'allowOverrides';\n          break;\n        case 'First applicable':\n          combiningAlgorithm = 'firstApplicable';\n          break;\n        default:\n          combiningAlgorithm = undefined;\n      }\n    }\n\n    return this.callPolicyEngineFunc('addPolicy',\n      {source: 'USER', key: title, policy: policy, combiningAlgorithm: combiningAlgorithm});\n  }\n\n  decreaseRulePriority(policyTitle, thisPriority, newPriority) {\n    this.getRuleOfPolicy(policyTitle, newPriority).priority = thisPriority;\n    this.getRuleOfPolicy(policyTitle, thisPriority).priority = newPriority;\n    return this.callPolicyEngineFunc('savePolicies', {source: 'USER'});\n  }\n\n  deleteGroup(groupName) {\n    return this.callPolicyEngineFunc('deleteGroup', {groupName: groupName});\n  }\n\n  deletePolicy(title) {\n    return this.callPolicyEngineFunc('removePolicy', {source: 'USER', key: title});\n  }\n\n  deleteRule(policyTitle, rule) {\n    let _this = this;\n\n    return new Promise((resolve, reject) => {\n      _this.callPolicyEngineFunc('userPolicies', {}).then((userPolicies) => {\n        userPolicies[policyTitle].deleteRule(rule);\n        _this.callPolicyEngineFunc('savePolicies', {source: 'USER'}).then(() => {\n          resolve();\n        });\n      });\n    });\n  }\n\n  getActivePolicy() {\n    return this.callPolicyEngineFunc('activeUserPolicy', {});\n  }\n\n  getPolicy(key) {\n    return this.callPolicyEngineFunc('userPolicy', {key: key});\n  }\n\n  getPoliciesTitles() {\n    let _this = this;\n    return new Promise((resolve, reject) => {\n      _this.callPolicyEngineFunc('userPolicies', {}).then((policies) => {\n        let titles = [];\n\n        for (let i in policies) {\n          titles.push(i);\n        }\n\n        resolve(titles);\n      });\n    });\n  }\n\n  getTargets(scope) {\n    let targets = [];\n\n    for (let i in this.policies[scope]) {\n      if (targets.indexOf(i) === -1) {\n        targets.push(i);\n      }\n    }\n\n    return targets;\n  }\n\n  increaseRulePriority(policyTitle, thisPriority, newPriority) {\n    let _this = this;\n    _this.getRuleOfPolicy(policyTitle, thisPriority).priority = newPriority;\n    _this.getRuleOfPolicy(policyTitle, newPriority).priority = thisPriority;\n    return _this.callPolicyEngineFunc('savePolicies', {source: 'USER'});\n  }\n\n  setVariables() {\n    return {\n      'Date': {\n        title: '<br><h5>Updating date related configurations</h5><p>Incoming communications in the introduced date will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n        description: '<p>Date:</p>',\n        input: [\n          ['date', []]\n        ]\n      },\n      'Domain': {\n        title: '<br><h5>Updating domain configurations</h5><p>Incoming communications from a user whose identity is from the introduced domain allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n        description: '<p>Domain:</p>',\n        input: [\n          ['form', []]\n        ]\n      },\n      'Group of users': {\n        title: '<br><h5>Updating groups configurations</h5><p>Incoming communications from a user whose identity is in the introduced group will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n        description: '<p>Group name:</p>',\n        input: [\n          ['select', ['group', 'Select a group:']]\n        ]\n      },\n      'Subscription preferences': {\n        title: '<br><h5>Updating subscriptions configurations</h5><p>The acceptance of subscriptions to your hyperties will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n        input: []\n      },\n      'Time of the day': {\n        title: '<br><h5>Updating time configurations</h5><p>Incoming communications in the introduced timeslot will be blocked, but this can be changed in the preferences page.</p><p>Please introduce a new timeslot in the following format:</p><p class=\"center-align\">&lt;START-HOUR&gt;:&lt;START-MINUTES&gt; to &lt;END-HOUR&gt;:&lt;END-MINUTES&gt;</p><br>',\n        description: '<p>Timeslot:</p>',\n        input: [\n          ['form', []]\n        ]\n      },\n      Weekday: {\n        title: '<br><h5>Updating weekday configurations</h5><p>Incoming communications in the introduced weekday will be allowed or blocked according to your configurations, which can be changed in the preferences page.</p><br>',\n        description: '<p>Weekday:</p>',\n        input: [\n          ['select', ['weekday', 'Select a weekday:', ['Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']]]\n        ]\n      }\n    };\n  }\n\n  setAdditionMethods() {\n    let _this = this;\n    return {\n      Date: (params) => {\n        return new Promise((resolve, reject) => {\n          let policyTitle = params[0];\n          _this.callPolicyEngineFunc('userPolicies', {}).then((userPolicies) => {\n            userPolicies[policyTitle].createRule(params[4], { attribute: 'date', operator: 'equals', params: params[3] }, params[1], params[2]);\n            _this.callPolicyEngineFunc('savePolicies', {source: 'USER'}).then(() => {\n              resolve();\n            });\n          });\n        });\n      },\n      Domain: (params) => {\n        return new Promise((resolve, reject) => {\n          let policyTitle = params[0];\n          _this.callPolicyEngineFunc('userPolicies', {}).then((userPolicies) => {\n            userPolicies[policyTitle].createRule(params[4], { attribute: 'domain', operator: 'equals', params: params[3] }, params[1], params[2]);\n            _this.callPolicyEngineFunc('savePolicies', {source: 'USER'}).then(() => {\n              resolve();\n            });\n          });\n        });\n      },\n      'Group of users': (params) => {\n        return new Promise((resolve, reject) => {\n          let policyTitle = params[0];\n          _this.callPolicyEngineFunc('userPolicies', {}).then((userPolicies) => {\n            userPolicies[policyTitle].createRule(params[4], { attribute: 'source', operator: 'in', params: params[3] }, params[1], params[2]);\n            _this.callPolicyEngineFunc('savePolicies', {source: 'USER'}).then(() => {\n              resolve();\n            });\n          });\n        });\n      },\n      'Subscription preferences': (params) => {\n        return new Promise((resolve, reject) => {\n          let policyTitle = params[0];\n          _this.callPolicyEngineFunc('userPolicies', {}).then((userPolicies) => {\n            let operator = 'equals';\n            if (params[3] === 'preauthorised') {\n              operator = 'in';\n            }\n\n            // TIAGO: this is giving me an error...\n            userPolicies[policyTitle].createRule(params[4], { attribute: 'subscription', operator: operator, params: params[3] }, params[1], params[2]);\n            _this.callPolicyEngineFunc('savePolicies', {source: 'USER'}).then(() => {\n              resolve();\n            });\n          });\n        });\n      },\n      'Time of the day': (params) => {\n        return new Promise((resolve, reject) => {\n          let policyTitle = params[0];\n          _this.callPolicyEngineFunc('userPolicies', {}).then((userPolicies) => {\n            params[3] = params[3].split(' to ');\n            let start = params[3][0].split(':');\n            start = start.join('');\n            let end = params[3][1].split(':');\n            end = end.join('');\n            userPolicies[policyTitle].createRule(params[4], { attribute: 'time', operator: 'between', params: [start, end] }, params[1], params[2]);\n            _this.callPolicyEngineFunc('savePolicies', {source: 'USER'}).then(() => {\n              resolve();\n            });\n          });\n        });\n      },\n\n      Weekday: (params) => {\n        return new Promise((resolve, reject) => {\n          let weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n          params[3] = weekdays.indexOf(params[3]);\n          let policyTitle = params[0];\n          _this.callPolicyEngineFunc('userPolicies', {}).then((userPolicies) => {\n            userPolicies[policyTitle].createRule(params[4], { attribute: 'weekday', operator: 'equals', params: params[3] }, params[1], params[2]);\n            _this.callPolicyEngineFunc('savePolicies', {source: 'USER'}).then(() => {\n              resolve();\n            });\n          });\n        });\n      }\n    };\n  }\n\n  setValidationMethods() {\n    return {\n      Date: (scope, info) => { return this.isValidDate(info) & this.isValidScope(scope); },\n      'Group of users': (scope, info) => { return this.isValidString(info) & this.isValidScope(scope); },\n      Domain: (scope, info) => { return this.isValidDomain(info) & this.isValidScope(scope); },\n      Weekday: (scope, info) => { return true & this.isValidScope(scope); },\n      'Subscription preferences': (scope, info) => { return this.isValidSubscriptionType(info) & this.isValidScope(scope); },\n      'Time of the day': (scope, info) => { return this.isValidTimeslot(info) & this.isValidScope(scope); }\n    };\n  }\n\n  updateActivePolicy(title) {\n    let _this = this;\n    return new Promise((resolve, reject) => {\n      _this.callPolicyEngineFunc('activeUserPolicy', {userPolicy: title}).then(() => {\n        _this.callPolicyEngineFunc('saveActivePolicy', {}).then(() => {\n          resolve();\n        });\n      });\n    });\n  }\n\n  isValidEmail(info) {\n    let pattern = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\n    return pattern.test(info);\n  }\n\n  isValidDomain(info) {\n    let pattern = /[a-z0-9.-]+\\.[a-z]{2,3}$/;\n    return pattern.test(info);\n  }\n\n  isValidString(info) {\n    let pattern = /[a-z0-9.-]$/;\n    return pattern.test(info);\n  }\n\n  isValidSubscriptionType(info) {\n    return true;\n  }\n\n  isValidDate(info) {\n    let infoSplit = info.split('/');\n    let day = parseInt(infoSplit[0]);\n    let month = parseInt(infoSplit[1]);\n    let year = parseInt(infoSplit[2]);\n\n    let date = new Date(year, month-1, day);\n    let isValidFormat = date.getFullYear() === year && date.getMonth() + 1 === month && date.getDate() === day;\n    let formattedDate = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear()\n    let now = new Date();\n    let today = now.getDate() + '/' + (now.getMonth() + 1) + '/' + now.getFullYear();\n\n    let isFuture = false;\n    if (date.getFullYear() > now.getFullYear()) {\n      isFuture = true;\n    } else {\n      if (date.getFullYear() == now.getFullYear()) {\n        if ((date.getMonth() + 1) > (now.getMonth() + 1)) {\n          isFuture = true;\n        } else {\n          if ((date.getMonth() + 1) == (now.getMonth() + 1)) {\n            if (date.getDate() >= (now.getDate())) {\n              isFuture = true;\n            }\n          }\n        }\n      }\n    }\n\n    return (isValidFormat && isFuture);\n  }\n\n  isValidScope(scope) {\n    return scope !== '';\n  }\n\n  isValidTimeslot(info) {\n    if (!info) {\n      return false;\n    }\n    let splitInfo = info.split(' to '); // [12:00, 13:00]\n    let twoTimes = splitInfo.length === 2;\n    if (!twoTimes) {\n      return false;\n    }\n    let splitStart = splitInfo[0].split(':'); // [12, 00]\n    let splitEnd = splitInfo[1].split(':'); // [13, 00]\n    if (splitStart.length !== 2 || splitEnd.length !== 2) {\n      return false;\n    }\n    let okSize = (splitStart[0].length === 2) && (splitStart[1].length === 2) && (splitEnd[0].length === 2) && (splitEnd[1].length === 2);\n    let areIntegers = (splitStart[0] == parseInt(splitStart[0], 10)) && (splitStart[1] == parseInt(splitStart[1], 10)) && (splitEnd[0] == parseInt(splitEnd[0], 10)) && (splitEnd[1] == parseInt(splitEnd[1], 10));\n    return twoTimes && okSize && areIntegers;\n  }\n\n  getFormattedPolicies() {\n    let _this = this;\n    return new Promise((resolve, reject) => {\n      _this.callPolicyEngineFunc('userPolicies', {}).then((policiesPE) => {\n        let policiesGUI = [];\n\n        for (let i in policiesPE) {\n          let policy = {\n            title: policiesPE[i].key,\n            rulesTitles: [],\n            ids: []\n          }\n\n          if (policiesPE[i].rules.length !== 0) {\n            policiesPE[i].rules = policiesPE[i].sortRules();\n            for (let j in policiesPE[i].rules) {\n              let title = _this._getTitle(policiesPE[i].rules[j]);\n              policy.rulesTitles.push(title);\n              policy.ids.push(policy.title + ':' + policiesPE[i].rules[j].priority);\n            }\n          }\n\n          policiesGUI.push(policy);\n        }\n\n        resolve(policiesGUI);\n      });\n    });\n  }\n\n  getRuleOfPolicy(title, priority) {\n    let _this = this;\n    return new Promise((resolve, reject) => {\n      _this.callPolicyEngineFunc('userPolicies', {}).then((policies) => {\n        let policy = policies[title];\n        resolve(policy.getRuleByPriority(priority));\n      });\n    });\n  }\n\n  _getTitle(rule) {\n    let condition = rule.condition;\n    let authorise = (rule.decision) ? 'allowed' : 'blocked';\n    let target = rule.target === 'global' ? 'All identities and hyperties' : rule.target;\n    let attribute = condition.attribute;\n    switch(attribute) {\n      case 'date':\n        return 'Date ' + condition.params + ' is ' + authorise + ' (' + target + ')';\n      case 'domain':\n        return 'Domain \\\"' + condition.params + '\\\" is ' + authorise + ' (' + target + ')';\n      case 'source':\n        if (condition.operator === 'in') {\n          return 'Group \\\"' + condition.params + '\\\" is ' + authorise + ' (' + target + ')';\n        } else {\n          if (condition.operator === 'equals') {\n            return 'User ' + condition.params + ' is ' + authorise + ' (' + target + ')';\n          }\n        }\n      case 'subscription':\n        if (condition.params === '*') {\n          return 'Subscriptions from all hyperties are ' + authorise + ' (' + target + ')';\n        } else {\n          if (condition.params === 'preauthorised') {\n            return 'Subscriptions from previously authorised hyperties are allowed (' + target + ')';\n          }\n        }\n      case 'time':\n        let start = condition.params[0][0] + condition.params[0][1] + ':' + condition.params[0][2] + condition.params[0][3];\n        let end = condition.params[1][0] + condition.params[1][1] + ':' + condition.params[1][2] + condition.params[1][3];\n        return 'Timeslot from ' + start + ' to ' + end + ' is ' + authorise + ' (' + target + ')';\n      case 'weekday':\n        let weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        let weekdayID = condition.params;\n        return 'Weekday \\\"' + weekdays[weekdayID] + '\\\" is ' + authorise + ' (' + target + ')';\n      default:\n        return 'Rule ' + rule.priority + ' is ' + authorise + ' (' + target + ')';\n    }\n  }\n\n  getVariables() {\n    let variablesTitles = [];\n    for (let i in this.variables) {\n      variablesTitles.push(i);\n    }\n    return variablesTitles;\n  }\n\n  getVariableInfo(variable) {\n    return this.variables[variable];\n  }\n\n  getMyEmails() {\n    return this.callPolicyEngineFunc('getMyEmails', {});\n  }\n\n  getMyHyperties() {\n    return this.callPolicyEngineFunc('getMyHyperties', {});\n  }\n\n  //TODO If there is a problem with the input, show it to the user\n  setInfo(variable, policyTitle, info, authorise, scope, target) {\n    let _this = this;\n    return new Promise((resolve, reject) => {\n      if (_this.validation[variable](scope, info)) {\n        _this.addition[variable]([policyTitle, scope, target, info, authorise]).then(() => {\n          resolve();\n        });\n      } else {\n        reject('Invalid configuration');\n      }\n    });\n  }\n\n  deleteInfo(variable, scope, target, info) {\n    let params = [scope, target, info];\n    if (variable === 'member') {\n      let conditionSplit = info.split(' ');\n      let groupName = conditionSplit[2];\n      params = [scope, groupName, info];\n    }\n    this.deletion[variable](params);\n  }\n\n  getGroups() {\n    let _this = this;\n    return new Promise((resolve, reject) => {\n      _this.callPolicyEngineFunc('groups', {}).then((groups) => {\n        let groupsGUI = {\n          groupsNames: [],\n          members: [],\n          ids: []\n        };\n\n        for (let i in groups) {\n          groupsGUI.groupsNames.push(i);\n          groupsGUI.members.push(groups[i]);\n          let ids = [];\n          for (let j in groups[i]) {\n            ids.push(i + '::' + groups[i][j]);\n          }\n          groupsGUI.ids.push(ids);\n        }\n\n        //console.log('TIAGO groups', groupsGUI)\n        resolve(groupsGUI);\n      });\n    });\n  }\n\n  getGroupsNames() {\n    return this.callPolicyEngineFunc('getGroupsNames', {});\n  }\n\n  removeFromGroup(groupName, user) {\n    return this.callPolicyEngineFunc('removeFromGroup', {groupName: groupName, userEmail: user});\n  }\n\n  updatePolicy(policyTitle, rule, newDecision, newSubscriptionType) {\n    let _this = this;\n    return new Promise((resolve, reject) => {\n      _this.callPolicyEngineFunc('userPolicies', {}).then((userPolicies) => {\n        userPolicies[policyTitle].deleteRule(rule);\n        if (!newSubscriptionType) {\n          userPolicies[policyTitle].createRule(newDecision, rule.condition, rule.scope, rule.target, rule.priority);\n        } else {\n          let operator = (newSubscriptionType === '*') ? 'equals' : 'in';\n          userPolicies[policyTitle].createRule(newDecision, [{ attribute: 'subscription', opeator: operator, params: newSubscriptionType }], rule.scope, rule.target, rule.priority);\n        }\n\n        _this.callPolicyEngineFunc('saveActivePolicy', {}).then(() => {\n          resolve();\n        });\n      });\n    });\n  }\n\n}\n\nexport default PoliciesManager;\n","import IdentitiesGUI from './IdentitiesGUI'\nimport PoliciesGUI from './PoliciesGUI'\n\n\n\n//No direct access to runtime\n//communication over postMessage interface\n//new PoliciesGUI(runtime.policyEngine)\n//new IdentitiesGUI(runtime.identityModule)\n"]}