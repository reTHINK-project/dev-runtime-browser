{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/sw.js"],"names":[],"mappings":"AAAA;;;ACAA,IAAM,WAAW,aAAjB;AACA,IAAM,UAAU,SAAhB;;AAEA;AACA,IAAM,gBAAgB,CACpB,YADoB,EAEpB,IAFoB,EAEd;AACN,YAHoB,EAIpB,uBAJoB,EAKpB,SALoB,CAAtB;;AAQA;AACA,KAAK,gBAAL,CAAsB,SAAtB,EAAiC,iBAAS;AACxC;AACA;AACA;AACA;AACA;AACD,CAND;;AAQA;AACA,KAAK,gBAAL,CAAsB,UAAtB,EAAkC,iBAAS;AACzC,MAAM,gBAAgB,CAAC,QAAD,EAAW,OAAX,CAAtB;AACA,QAAM,SAAN,CACE,OAAO,IAAP,GAAc,IAAd,CAAmB,sBAAc;AAC/B,WAAO,WAAW,MAAX,CAAkB;AAAA,aAAa,CAAC,cAAc,QAAd,CAAuB,SAAvB,CAAd;AAAA,KAAlB,CAAP;AACD,GAFD,EAEG,IAFH,CAEQ,0BAAkB;AACxB,WAAO,QAAQ,GAAR,CAAY,eAAe,GAAf,CAAmB,yBAAiB;AACrD,aAAO,OAAO,MAAP,CAAc,aAAd,CAAP;AACD,KAFkB,CAAZ,CAAP;AAGD,GAND,EAMG,IANH,CAMQ;AAAA,WAAM,KAAK,OAAL,CAAa,KAAb,EAAN;AAAA,GANR,CADF;AASD,CAXD;;AAaA;AACA;AACA;AACA,KAAK,gBAAL,CAAsB,OAAtB,EAA+B,iBAAS;AACtC;AACA,MAAI,MAAM,OAAN,CAAc,GAAd,CAAkB,UAAlB,CAA6B,KAAK,QAAL,CAAc,MAA3C,CAAJ,EAAwD;AACtD,UAAM,WAAN,CACE,OAAO,KAAP,CAAa,MAAM,OAAnB,EAA4B,IAA5B,CAAiC,0BAAkB;AACjD,UAAI,cAAJ,EAAoB;AAClB,eAAO,cAAP;AACD;;AAED,aAAO,OAAO,IAAP,CAAY,OAAZ,EAAqB,IAArB,CAA0B,iBAAS;AACxC,eAAO,MAAM,MAAM,OAAZ,EAAqB,IAArB,CAA0B,oBAAY;AAC3C;AACA,iBAAO,MAAM,GAAN,CAAU,MAAM,OAAhB,EAAyB,SAAS,KAAT,EAAzB,EAA2C,IAA3C,CAAgD,YAAM;AAC3D,mBAAO,QAAP;AACD,WAFM,CAAP;AAGD,SALM,CAAP;AAMD,OAPM,CAAP;AAQD,KAbD,CADF;AAgBD;AACF,CApBD","file":"sw.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const PRECACHE = 'precache-v1';\nconst RUNTIME = 'runtime';\n\n// A list of local resources we always want to be cached.\nconst PRECACHE_URLS = [\n  'index.html',\n  './', // Alias for index.html\n  'styles.css',\n  '../../styles/main.css',\n  'demo.js'\n];\n\n// The install handler takes care of precaching the resources we always need.\nself.addEventListener('install', event => {\n  // event.waitUntil(\n  //   caches.open(PRECACHE)\n  //     .then(cache => cache.addAll(PRECACHE_URLS))\n  //     .then(self.skipWaiting())\n  // );\n});\n\n// The activate handler takes care of cleaning up old caches.\nself.addEventListener('activate', event => {\n  const currentCaches = [PRECACHE, RUNTIME];\n  event.waitUntil(\n    caches.keys().then(cacheNames => {\n      return cacheNames.filter(cacheName => !currentCaches.includes(cacheName));\n    }).then(cachesToDelete => {\n      return Promise.all(cachesToDelete.map(cacheToDelete => {\n        return caches.delete(cacheToDelete);\n      }));\n    }).then(() => self.clients.claim())\n  );\n});\n\n// The fetch handler serves responses for same-origin resources from a cache.\n// If no response is found, it populates the runtime cache with the response\n// from the network before returning it to the page.\nself.addEventListener('fetch', event => {\n  // Skip cross-origin requests, like those for Google Analytics.\n  if (event.request.url.startsWith(self.location.origin)) {\n    event.respondWith(\n      caches.match(event.request).then(cachedResponse => {\n        if (cachedResponse) {\n          return cachedResponse;\n        }\n\n        return caches.open(RUNTIME).then(cache => {\n          return fetch(event.request).then(response => {\n            // Put a copy of the response in the runtime cache.\n            return cache.put(event.request, response.clone()).then(() => {\n              return response;\n            });\n          });\n        });\n      })\n    );\n  }\n});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvc3cuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLElBQU0sV0FBVyxhQUFqQjtBQUNBLElBQU0sVUFBVSxTQUFoQjs7QUFFQTtBQUNBLElBQU0sZ0JBQWdCLENBQ3BCLFlBRG9CLEVBRXBCLElBRm9CLEVBRWQ7QUFDTixZQUhvQixFQUlwQix1QkFKb0IsRUFLcEIsU0FMb0IsQ0FBdEI7O0FBUUE7QUFDQSxLQUFLLGdCQUFMLENBQXNCLFNBQXRCLEVBQWlDLGlCQUFTO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDRCxDQU5EOztBQVFBO0FBQ0EsS0FBSyxnQkFBTCxDQUFzQixVQUF0QixFQUFrQyxpQkFBUztBQUN6QyxNQUFNLGdCQUFnQixDQUFDLFFBQUQsRUFBVyxPQUFYLENBQXRCO0FBQ0EsUUFBTSxTQUFOLENBQ0UsT0FBTyxJQUFQLEdBQWMsSUFBZCxDQUFtQixzQkFBYztBQUMvQixXQUFPLFdBQVcsTUFBWCxDQUFrQjtBQUFBLGFBQWEsQ0FBQyxjQUFjLFFBQWQsQ0FBdUIsU0FBdkIsQ0FBZDtBQUFBLEtBQWxCLENBQVA7QUFDRCxHQUZELEVBRUcsSUFGSCxDQUVRLDBCQUFrQjtBQUN4QixXQUFPLFFBQVEsR0FBUixDQUFZLGVBQWUsR0FBZixDQUFtQix5QkFBaUI7QUFDckQsYUFBTyxPQUFPLE1BQVAsQ0FBYyxhQUFkLENBQVA7QUFDRCxLQUZrQixDQUFaLENBQVA7QUFHRCxHQU5ELEVBTUcsSUFOSCxDQU1RO0FBQUEsV0FBTSxLQUFLLE9BQUwsQ0FBYSxLQUFiLEVBQU47QUFBQSxHQU5SLENBREY7QUFTRCxDQVhEOztBQWFBO0FBQ0E7QUFDQTtBQUNBLEtBQUssZ0JBQUwsQ0FBc0IsT0FBdEIsRUFBK0IsaUJBQVM7QUFDdEM7QUFDQSxNQUFJLE1BQU0sT0FBTixDQUFjLEdBQWQsQ0FBa0IsVUFBbEIsQ0FBNkIsS0FBSyxRQUFMLENBQWMsTUFBM0MsQ0FBSixFQUF3RDtBQUN0RCxVQUFNLFdBQU4sQ0FDRSxPQUFPLEtBQVAsQ0FBYSxNQUFNLE9BQW5CLEVBQTRCLElBQTVCLENBQWlDLDBCQUFrQjtBQUNqRCxVQUFJLGNBQUosRUFBb0I7QUFDbEIsZUFBTyxjQUFQO0FBQ0Q7O0FBRUQsYUFBTyxPQUFPLElBQVAsQ0FBWSxPQUFaLEVBQXFCLElBQXJCLENBQTBCLGlCQUFTO0FBQ3hDLGVBQU8sTUFBTSxNQUFNLE9BQVosRUFBcUIsSUFBckIsQ0FBMEIsb0JBQVk7QUFDM0M7QUFDQSxpQkFBTyxNQUFNLEdBQU4sQ0FBVSxNQUFNLE9BQWhCLEVBQXlCLFNBQVMsS0FBVCxFQUF6QixFQUEyQyxJQUEzQyxDQUFnRCxZQUFNO0FBQzNELG1CQUFPLFFBQVA7QUFDRCxXQUZNLENBQVA7QUFHRCxTQUxNLENBQVA7QUFNRCxPQVBNLENBQVA7QUFRRCxLQWJELENBREY7QUFnQkQ7QUFDRixDQXBCRCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsImNvbnN0IFBSRUNBQ0hFID0gJ3ByZWNhY2hlLXYxJztcbmNvbnN0IFJVTlRJTUUgPSAncnVudGltZSc7XG5cbi8vIEEgbGlzdCBvZiBsb2NhbCByZXNvdXJjZXMgd2UgYWx3YXlzIHdhbnQgdG8gYmUgY2FjaGVkLlxuY29uc3QgUFJFQ0FDSEVfVVJMUyA9IFtcbiAgJ2luZGV4Lmh0bWwnLFxuICAnLi8nLCAvLyBBbGlhcyBmb3IgaW5kZXguaHRtbFxuICAnc3R5bGVzLmNzcycsXG4gICcuLi8uLi9zdHlsZXMvbWFpbi5jc3MnLFxuICAnZGVtby5qcydcbl07XG5cbi8vIFRoZSBpbnN0YWxsIGhhbmRsZXIgdGFrZXMgY2FyZSBvZiBwcmVjYWNoaW5nIHRoZSByZXNvdXJjZXMgd2UgYWx3YXlzIG5lZWQuXG5zZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2luc3RhbGwnLCBldmVudCA9PiB7XG4gIC8vIGV2ZW50LndhaXRVbnRpbChcbiAgLy8gICBjYWNoZXMub3BlbihQUkVDQUNIRSlcbiAgLy8gICAgIC50aGVuKGNhY2hlID0+IGNhY2hlLmFkZEFsbChQUkVDQUNIRV9VUkxTKSlcbiAgLy8gICAgIC50aGVuKHNlbGYuc2tpcFdhaXRpbmcoKSlcbiAgLy8gKTtcbn0pO1xuXG4vLyBUaGUgYWN0aXZhdGUgaGFuZGxlciB0YWtlcyBjYXJlIG9mIGNsZWFuaW5nIHVwIG9sZCBjYWNoZXMuXG5zZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2FjdGl2YXRlJywgZXZlbnQgPT4ge1xuICBjb25zdCBjdXJyZW50Q2FjaGVzID0gW1BSRUNBQ0hFLCBSVU5USU1FXTtcbiAgZXZlbnQud2FpdFVudGlsKFxuICAgIGNhY2hlcy5rZXlzKCkudGhlbihjYWNoZU5hbWVzID0+IHtcbiAgICAgIHJldHVybiBjYWNoZU5hbWVzLmZpbHRlcihjYWNoZU5hbWUgPT4gIWN1cnJlbnRDYWNoZXMuaW5jbHVkZXMoY2FjaGVOYW1lKSk7XG4gICAgfSkudGhlbihjYWNoZXNUb0RlbGV0ZSA9PiB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5hbGwoY2FjaGVzVG9EZWxldGUubWFwKGNhY2hlVG9EZWxldGUgPT4ge1xuICAgICAgICByZXR1cm4gY2FjaGVzLmRlbGV0ZShjYWNoZVRvRGVsZXRlKTtcbiAgICAgIH0pKTtcbiAgICB9KS50aGVuKCgpID0+IHNlbGYuY2xpZW50cy5jbGFpbSgpKVxuICApO1xufSk7XG5cbi8vIFRoZSBmZXRjaCBoYW5kbGVyIHNlcnZlcyByZXNwb25zZXMgZm9yIHNhbWUtb3JpZ2luIHJlc291cmNlcyBmcm9tIGEgY2FjaGUuXG4vLyBJZiBubyByZXNwb25zZSBpcyBmb3VuZCwgaXQgcG9wdWxhdGVzIHRoZSBydW50aW1lIGNhY2hlIHdpdGggdGhlIHJlc3BvbnNlXG4vLyBmcm9tIHRoZSBuZXR3b3JrIGJlZm9yZSByZXR1cm5pbmcgaXQgdG8gdGhlIHBhZ2UuXG5zZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2ZldGNoJywgZXZlbnQgPT4ge1xuICAvLyBTa2lwIGNyb3NzLW9yaWdpbiByZXF1ZXN0cywgbGlrZSB0aG9zZSBmb3IgR29vZ2xlIEFuYWx5dGljcy5cbiAgaWYgKGV2ZW50LnJlcXVlc3QudXJsLnN0YXJ0c1dpdGgoc2VsZi5sb2NhdGlvbi5vcmlnaW4pKSB7XG4gICAgZXZlbnQucmVzcG9uZFdpdGgoXG4gICAgICBjYWNoZXMubWF0Y2goZXZlbnQucmVxdWVzdCkudGhlbihjYWNoZWRSZXNwb25zZSA9PiB7XG4gICAgICAgIGlmIChjYWNoZWRSZXNwb25zZSkge1xuICAgICAgICAgIHJldHVybiBjYWNoZWRSZXNwb25zZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjYWNoZXMub3BlbihSVU5USU1FKS50aGVuKGNhY2hlID0+IHtcbiAgICAgICAgICByZXR1cm4gZmV0Y2goZXZlbnQucmVxdWVzdCkudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgICAgICAvLyBQdXQgYSBjb3B5IG9mIHRoZSByZXNwb25zZSBpbiB0aGUgcnVudGltZSBjYWNoZS5cbiAgICAgICAgICAgIHJldHVybiBjYWNoZS5wdXQoZXZlbnQucmVxdWVzdCwgcmVzcG9uc2UuY2xvbmUoKSkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxufSk7XG4iXX0="}