{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/sw.js"],"names":[],"mappings":"AAAA;;;ACAA,IAAM,WAAW,aAAjB;AACA,IAAM,UAAU,SAAhB;;AAEA;AACA,IAAM,gBAAgB,CACpB,YADoB,EAEpB,IAFoB,EAEd;AACN,YAHoB,EAIpB,uBAJoB,EAKpB,SALoB,CAAtB;;AAQA;AACA,KAAK,gBAAL,CAAsB,SAAtB,EAAiC,iBAAS;AACxC;AACA;AACA;AACA;AACA;AACD,CAND;;AAQA;AACA,KAAK,gBAAL,CAAsB,UAAtB,EAAkC,iBAAS;AACzC,MAAM,gBAAgB,CAAC,QAAD,EAAW,OAAX,CAAtB;AACA,QAAM,SAAN,CACE,OAAO,IAAP,GAAc,IAAd,CAAmB,sBAAc;AAC/B,WAAO,WAAW,MAAX,CAAkB;AAAA,aAAa,CAAC,cAAc,QAAd,CAAuB,SAAvB,CAAd;AAAA,KAAlB,CAAP;AACD,GAFD,EAEG,IAFH,CAEQ,0BAAkB;AACxB,WAAO,QAAQ,GAAR,CAAY,eAAe,GAAf,CAAmB,yBAAiB;AACrD,aAAO,OAAO,MAAP,CAAc,aAAd,CAAP;AACD,KAFkB,CAAZ,CAAP;AAGD,GAND,EAMG,IANH,CAMQ;AAAA,WAAM,KAAK,OAAL,CAAa,KAAb,EAAN;AAAA,GANR,CADF;AASD,CAXD;;AAaA;AACA;AACA;AACA,KAAK,gBAAL,CAAsB,OAAtB,EAA+B,iBAAS;AACtC;AACA,MAAI,MAAM,OAAN,CAAc,GAAd,CAAkB,UAAlB,CAA6B,KAAK,QAAL,CAAc,MAA3C,CAAJ,EAAwD;AACtD,UAAM,WAAN,CACE,OAAO,KAAP,CAAa,MAAM,OAAnB,EAA4B,IAA5B,CAAiC,0BAAkB;AACjD,UAAI,cAAJ,EAAoB;AAClB,eAAO,cAAP;AACD;;AAED,aAAO,OAAO,IAAP,CAAY,OAAZ,EAAqB,IAArB,CAA0B,iBAAS;AACxC,eAAO,MAAM,MAAM,OAAZ,EAAqB,IAArB,CAA0B,oBAAY;AAC3C;AACA,iBAAO,MAAM,GAAN,CAAU,MAAM,OAAhB,EAAyB,SAAS,KAAT,EAAzB,EAA2C,IAA3C,CAAgD,YAAM;AAC3D,mBAAO,QAAP;AACD,WAFM,CAAP;AAGD,SALM,CAAP;AAMD,OAPM,CAAP;AAQD,KAbD,CADF;AAgBD;AACF,CApBD","file":"sw.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const PRECACHE = 'precache-v1';\r\nconst RUNTIME = 'runtime';\r\n\r\n// A list of local resources we always want to be cached.\r\nconst PRECACHE_URLS = [\r\n  'index.html',\r\n  './', // Alias for index.html\r\n  'styles.css',\r\n  '../../styles/main.css',\r\n  'demo.js'\r\n];\r\n\r\n// The install handler takes care of precaching the resources we always need.\r\nself.addEventListener('install', event => {\r\n  // event.waitUntil(\r\n  //   caches.open(PRECACHE)\r\n  //     .then(cache => cache.addAll(PRECACHE_URLS))\r\n  //     .then(self.skipWaiting())\r\n  // );\r\n});\r\n\r\n// The activate handler takes care of cleaning up old caches.\r\nself.addEventListener('activate', event => {\r\n  const currentCaches = [PRECACHE, RUNTIME];\r\n  event.waitUntil(\r\n    caches.keys().then(cacheNames => {\r\n      return cacheNames.filter(cacheName => !currentCaches.includes(cacheName));\r\n    }).then(cachesToDelete => {\r\n      return Promise.all(cachesToDelete.map(cacheToDelete => {\r\n        return caches.delete(cacheToDelete);\r\n      }));\r\n    }).then(() => self.clients.claim())\r\n  );\r\n});\r\n\r\n// The fetch handler serves responses for same-origin resources from a cache.\r\n// If no response is found, it populates the runtime cache with the response\r\n// from the network before returning it to the page.\r\nself.addEventListener('fetch', event => {\r\n  // Skip cross-origin requests, like those for Google Analytics.\r\n  if (event.request.url.startsWith(self.location.origin)) {\r\n    event.respondWith(\r\n      caches.match(event.request).then(cachedResponse => {\r\n        if (cachedResponse) {\r\n          return cachedResponse;\r\n        }\r\n\r\n        return caches.open(RUNTIME).then(cache => {\r\n          return fetch(event.request).then(response => {\r\n            // Put a copy of the response in the runtime cache.\r\n            return cache.put(event.request, response.clone()).then(() => {\r\n              return response;\r\n            });\r\n          });\r\n        });\r\n      })\r\n    );\r\n  }\r\n});\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvc3cuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLElBQU0sV0FBVyxhQUFqQjtBQUNBLElBQU0sVUFBVSxTQUFoQjs7QUFFQTtBQUNBLElBQU0sZ0JBQWdCLENBQ3BCLFlBRG9CLEVBRXBCLElBRm9CLEVBRWQ7QUFDTixZQUhvQixFQUlwQix1QkFKb0IsRUFLcEIsU0FMb0IsQ0FBdEI7O0FBUUE7QUFDQSxLQUFLLGdCQUFMLENBQXNCLFNBQXRCLEVBQWlDLGlCQUFTO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDRCxDQU5EOztBQVFBO0FBQ0EsS0FBSyxnQkFBTCxDQUFzQixVQUF0QixFQUFrQyxpQkFBUztBQUN6QyxNQUFNLGdCQUFnQixDQUFDLFFBQUQsRUFBVyxPQUFYLENBQXRCO0FBQ0EsUUFBTSxTQUFOLENBQ0UsT0FBTyxJQUFQLEdBQWMsSUFBZCxDQUFtQixzQkFBYztBQUMvQixXQUFPLFdBQVcsTUFBWCxDQUFrQjtBQUFBLGFBQWEsQ0FBQyxjQUFjLFFBQWQsQ0FBdUIsU0FBdkIsQ0FBZDtBQUFBLEtBQWxCLENBQVA7QUFDRCxHQUZELEVBRUcsSUFGSCxDQUVRLDBCQUFrQjtBQUN4QixXQUFPLFFBQVEsR0FBUixDQUFZLGVBQWUsR0FBZixDQUFtQix5QkFBaUI7QUFDckQsYUFBTyxPQUFPLE1BQVAsQ0FBYyxhQUFkLENBQVA7QUFDRCxLQUZrQixDQUFaLENBQVA7QUFHRCxHQU5ELEVBTUcsSUFOSCxDQU1RO0FBQUEsV0FBTSxLQUFLLE9BQUwsQ0FBYSxLQUFiLEVBQU47QUFBQSxHQU5SLENBREY7QUFTRCxDQVhEOztBQWFBO0FBQ0E7QUFDQTtBQUNBLEtBQUssZ0JBQUwsQ0FBc0IsT0FBdEIsRUFBK0IsaUJBQVM7QUFDdEM7QUFDQSxNQUFJLE1BQU0sT0FBTixDQUFjLEdBQWQsQ0FBa0IsVUFBbEIsQ0FBNkIsS0FBSyxRQUFMLENBQWMsTUFBM0MsQ0FBSixFQUF3RDtBQUN0RCxVQUFNLFdBQU4sQ0FDRSxPQUFPLEtBQVAsQ0FBYSxNQUFNLE9BQW5CLEVBQTRCLElBQTVCLENBQWlDLDBCQUFrQjtBQUNqRCxVQUFJLGNBQUosRUFBb0I7QUFDbEIsZUFBTyxjQUFQO0FBQ0Q7O0FBRUQsYUFBTyxPQUFPLElBQVAsQ0FBWSxPQUFaLEVBQXFCLElBQXJCLENBQTBCLGlCQUFTO0FBQ3hDLGVBQU8sTUFBTSxNQUFNLE9BQVosRUFBcUIsSUFBckIsQ0FBMEIsb0JBQVk7QUFDM0M7QUFDQSxpQkFBTyxNQUFNLEdBQU4sQ0FBVSxNQUFNLE9BQWhCLEVBQXlCLFNBQVMsS0FBVCxFQUF6QixFQUEyQyxJQUEzQyxDQUFnRCxZQUFNO0FBQzNELG1CQUFPLFFBQVA7QUFDRCxXQUZNLENBQVA7QUFHRCxTQUxNLENBQVA7QUFNRCxPQVBNLENBQVA7QUFRRCxLQWJELENBREY7QUFnQkQ7QUFDRixDQXBCRCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsImNvbnN0IFBSRUNBQ0hFID0gJ3ByZWNhY2hlLXYxJztcclxuY29uc3QgUlVOVElNRSA9ICdydW50aW1lJztcclxuXHJcbi8vIEEgbGlzdCBvZiBsb2NhbCByZXNvdXJjZXMgd2UgYWx3YXlzIHdhbnQgdG8gYmUgY2FjaGVkLlxyXG5jb25zdCBQUkVDQUNIRV9VUkxTID0gW1xyXG4gICdpbmRleC5odG1sJyxcclxuICAnLi8nLCAvLyBBbGlhcyBmb3IgaW5kZXguaHRtbFxyXG4gICdzdHlsZXMuY3NzJyxcclxuICAnLi4vLi4vc3R5bGVzL21haW4uY3NzJyxcclxuICAnZGVtby5qcydcclxuXTtcclxuXHJcbi8vIFRoZSBpbnN0YWxsIGhhbmRsZXIgdGFrZXMgY2FyZSBvZiBwcmVjYWNoaW5nIHRoZSByZXNvdXJjZXMgd2UgYWx3YXlzIG5lZWQuXHJcbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignaW5zdGFsbCcsIGV2ZW50ID0+IHtcclxuICAvLyBldmVudC53YWl0VW50aWwoXHJcbiAgLy8gICBjYWNoZXMub3BlbihQUkVDQUNIRSlcclxuICAvLyAgICAgLnRoZW4oY2FjaGUgPT4gY2FjaGUuYWRkQWxsKFBSRUNBQ0hFX1VSTFMpKVxyXG4gIC8vICAgICAudGhlbihzZWxmLnNraXBXYWl0aW5nKCkpXHJcbiAgLy8gKTtcclxufSk7XHJcblxyXG4vLyBUaGUgYWN0aXZhdGUgaGFuZGxlciB0YWtlcyBjYXJlIG9mIGNsZWFuaW5nIHVwIG9sZCBjYWNoZXMuXHJcbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignYWN0aXZhdGUnLCBldmVudCA9PiB7XHJcbiAgY29uc3QgY3VycmVudENhY2hlcyA9IFtQUkVDQUNIRSwgUlVOVElNRV07XHJcbiAgZXZlbnQud2FpdFVudGlsKFxyXG4gICAgY2FjaGVzLmtleXMoKS50aGVuKGNhY2hlTmFtZXMgPT4ge1xyXG4gICAgICByZXR1cm4gY2FjaGVOYW1lcy5maWx0ZXIoY2FjaGVOYW1lID0+ICFjdXJyZW50Q2FjaGVzLmluY2x1ZGVzKGNhY2hlTmFtZSkpO1xyXG4gICAgfSkudGhlbihjYWNoZXNUb0RlbGV0ZSA9PiB7XHJcbiAgICAgIHJldHVybiBQcm9taXNlLmFsbChjYWNoZXNUb0RlbGV0ZS5tYXAoY2FjaGVUb0RlbGV0ZSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGNhY2hlcy5kZWxldGUoY2FjaGVUb0RlbGV0ZSk7XHJcbiAgICAgIH0pKTtcclxuICAgIH0pLnRoZW4oKCkgPT4gc2VsZi5jbGllbnRzLmNsYWltKCkpXHJcbiAgKTtcclxufSk7XHJcblxyXG4vLyBUaGUgZmV0Y2ggaGFuZGxlciBzZXJ2ZXMgcmVzcG9uc2VzIGZvciBzYW1lLW9yaWdpbiByZXNvdXJjZXMgZnJvbSBhIGNhY2hlLlxyXG4vLyBJZiBubyByZXNwb25zZSBpcyBmb3VuZCwgaXQgcG9wdWxhdGVzIHRoZSBydW50aW1lIGNhY2hlIHdpdGggdGhlIHJlc3BvbnNlXHJcbi8vIGZyb20gdGhlIG5ldHdvcmsgYmVmb3JlIHJldHVybmluZyBpdCB0byB0aGUgcGFnZS5cclxuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdmZXRjaCcsIGV2ZW50ID0+IHtcclxuICAvLyBTa2lwIGNyb3NzLW9yaWdpbiByZXF1ZXN0cywgbGlrZSB0aG9zZSBmb3IgR29vZ2xlIEFuYWx5dGljcy5cclxuICBpZiAoZXZlbnQucmVxdWVzdC51cmwuc3RhcnRzV2l0aChzZWxmLmxvY2F0aW9uLm9yaWdpbikpIHtcclxuICAgIGV2ZW50LnJlc3BvbmRXaXRoKFxyXG4gICAgICBjYWNoZXMubWF0Y2goZXZlbnQucmVxdWVzdCkudGhlbihjYWNoZWRSZXNwb25zZSA9PiB7XHJcbiAgICAgICAgaWYgKGNhY2hlZFJlc3BvbnNlKSB7XHJcbiAgICAgICAgICByZXR1cm4gY2FjaGVkUmVzcG9uc2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gY2FjaGVzLm9wZW4oUlVOVElNRSkudGhlbihjYWNoZSA9PiB7XHJcbiAgICAgICAgICByZXR1cm4gZmV0Y2goZXZlbnQucmVxdWVzdCkudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgICAgIC8vIFB1dCBhIGNvcHkgb2YgdGhlIHJlc3BvbnNlIGluIHRoZSBydW50aW1lIGNhY2hlLlxyXG4gICAgICAgICAgICByZXR1cm4gY2FjaGUucHV0KGV2ZW50LnJlcXVlc3QsIHJlc3BvbnNlLmNsb25lKCkpLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSlcclxuICAgICk7XHJcbiAgfVxyXG59KTtcclxuIl19"}